	.text
	.file	"llvm-link"
	.globl	calc_attackers          # -- Begin function calc_attackers
	.p2align	4, 0x90
	.type	calc_attackers,@function
calc_attackers:                         # @calc_attackers
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-18666, %ax            # imm = 0xB716
	xorw	%cx, %ax
	cmpw	$2, %ax
	jne	.LBB0_217
# %bb.1:                                # %calc_attackers.split586
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-18666, %ax            # imm = 0xB716
	xorw	%cx, %ax
	cmpw	$2, %ax
	jne	.LBB0_217
# %bb.2:                                # %calc_attackers.split584
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-18666, %ax            # imm = 0xB716
	xorw	%cx, %ax
	cmpw	$2, %ax
	jne	.LBB0_217
# %bb.3:                                # %calc_attackers.split582
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-18666, %ax            # imm = 0xB716
	xorw	%cx, %ax
	cmpw	$2, %ax
	jne	.LBB0_217
# %bb.4:                                # %calc_attackers.split580
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-18666, %ax            # imm = 0xB716
	xorw	%cx, %ax
	cmpw	$2, %ax
	jne	.LBB0_217
# %bb.5:                                # %calc_attackers.split578
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-18666, %ax            # imm = 0xB716
	xorw	%cx, %ax
	cmpw	$2, %ax
	jne	.LBB0_217
# %bb.6:                                # %calc_attackers.split576
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-18666, %ax            # imm = 0xB716
	xorw	%cx, %ax
	cmpw	$2, %ax
	jne	.LBB0_217
# %bb.7:                                # %calc_attackers.split574
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-18666, %ax            # imm = 0xB716
	xorw	%cx, %ax
	cmpw	$2, %ax
	jne	.LBB0_217
# %bb.8:                                # %calc_attackers.split572
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movl	%edi, (%rcx)
	movl	%esi, (%rax)
	movl	$0, (%r9)
	movslq	(%rcx), %rdx
	movl	board(,%rdx,4), %edx
	movw	$2, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jne	.LBB0_11
# %bb.9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$16, %ax
	jne	.LBB0_217
# %bb.10:                               # %calc_attackers.split
	movl	$0, (%r8)
	movw	$16, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB0_205
.LBB0_11:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$37, %dx
	cmpw	$39, %dx
	jne	.LBB0_217
# %bb.12:                               # %calc_attackers.split396
	movl	$2, %esi
	movl	(%rax), %eax
	cltd
	idivl	%esi
	movw	$39, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB0_109
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$102, %ax
	cmpw	$65, %ax
	jne	.LBB0_217
# %bb.14:                               # %calc_attackers.split400
	movl	$0, (%r11)
	movw	$65, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
.LBB0_15:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_23 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$7, %ax
	xorw	%dx, %ax
	cmpw	$70, %ax
	jne	.LBB0_211
# %bb.16:                               # %calc_attackers.split404
                                        #   in Loop: Header=BB0_15 Depth=1
	movl	(%r11), %eax
	movw	$70, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jge	.LBB0_48
# %bb.17:                               #   in Loop: Header=BB0_15 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$83, %ax
	jne	.LBB0_211
# %bb.18:                               # %calc_attackers.split406
                                        #   in Loop: Header=BB0_15 Depth=1
	movl	(%rcx), %eax
	movslq	(%r11), %rdx
	addl	calc_attackers.rook_o(,%rdx,4), %eax
	movl	%eax, (%r10)
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$83, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB0_21
# %bb.19:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$94, %ax
	jne	.LBB0_217
# %bb.20:                               # %calc_attackers.split410
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$94, BasicBlockSignatureTracker
	movw	$24, RunTimeSignatureAdjuster
	jmp	.LBB0_49
.LBB0_21:                               #   in Loop: Header=BB0_15 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$97, %ax
	jne	.LBB0_211
# %bb.22:                               # %calc_attackers.split412
                                        #   in Loop: Header=BB0_15 Depth=1
	movw	$97, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
.LBB0_23:                               #   Parent Loop BB0_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$9, %ax
	xorw	%dx, %ax
	cmpw	$104, %ax
	jne	.LBB0_210
# %bb.24:                               # %calc_attackers.split414
                                        #   in Loop: Header=BB0_23 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$104, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB0_41
# %bb.25:                               #   in Loop: Header=BB0_23 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$124, %ax
	jne	.LBB0_210
# %bb.26:                               # %calc_attackers.split416
                                        #   in Loop: Header=BB0_23 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$124, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB0_29
# %bb.27:                               #   in Loop: Header=BB0_23 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$251, %ax
	cmpw	$135, %ax
	jne	.LBB0_210
# %bb.28:                               # %calc_attackers.split422
                                        #   in Loop: Header=BB0_23 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$135, BasicBlockSignatureTracker
	movw	$251, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB0_31
.LBB0_29:                               #   in Loop: Header=BB0_15 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$247, %ax
	xorw	%dx, %ax
	cmpw	$139, %ax
	jne	.LBB0_211
# %bb.30:                               # %calc_attackers.split420
                                        #   in Loop: Header=BB0_15 Depth=1
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$139, BasicBlockSignatureTracker
	movw	$227, RunTimeSignatureAdjuster
	jmp	.LBB0_42
.LBB0_31:                               # %Buffer__
                                        #   in Loop: Header=BB0_23 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28205, %ax             # imm = 0x6E2D
	cmpw	$28330, %ax             # imm = 0x6EAA
	jne	.LBB0_210
# %bb.32:                               # %calc_attackers.split424
                                        #   in Loop: Header=BB0_23 Depth=2
	movw	$28330, BasicBlockSignatureTracker # imm = 0x6EAA
	movw	$28205, RunTimeSignatureAdjuster # imm = 0x6E2D
# %bb.33:                               #   in Loop: Header=BB0_23 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$25, %ax
	xorw	%dx, %ax
	cmpw	$158, %ax
	jne	.LBB0_210
# %bb.34:                               # %calc_attackers.split588
                                        #   in Loop: Header=BB0_23 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$158, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB0_37
# %bb.35:                               #   in Loop: Header=BB0_15 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$188, %ax
	jne	.LBB0_211
# %bb.36:                               # %calc_attackers.split426
                                        #   in Loop: Header=BB0_15 Depth=1
	movw	$188, BasicBlockSignatureTracker
	movw	$212, RunTimeSignatureAdjuster
	jmp	.LBB0_42
.LBB0_37:                               #   in Loop: Header=BB0_23 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$33, %ax
	cmpw	$191, %ax
	jne	.LBB0_210
# %bb.38:                               # %calc_attackers.split428
                                        #   in Loop: Header=BB0_23 Depth=2
	movw	$191, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
# %bb.39:                               #   in Loop: Header=BB0_23 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$196, %ax
	jne	.LBB0_210
# %bb.40:                               # %calc_attackers.split430
                                        #   in Loop: Header=BB0_23 Depth=2
	movslq	(%r11), %rax
	movl	calc_attackers.rook_o(,%rax,4), %eax
	addl	(%r10), %eax
	movl	%eax, (%r10)
	movw	$196, BasicBlockSignatureTracker
	movw	$165, RunTimeSignatureAdjuster
	jmp	.LBB0_23
.LBB0_41:                               # %.loopexit5
                                        #   in Loop: Header=BB0_15 Depth=1
	jmp	.LBB0_42
.LBB0_42:                               #   in Loop: Header=BB0_15 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$173, %ax
	xorw	%dx, %ax
	cmpw	$197, %ax
	jne	.LBB0_211
# %bb.43:                               # %calc_attackers.split418
                                        #   in Loop: Header=BB0_15 Depth=1
	movw	$197, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
# %bb.44:                               #   in Loop: Header=BB0_15 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$215, %ax
	jne	.LBB0_211
# %bb.45:                               # %calc_attackers.split432
                                        #   in Loop: Header=BB0_15 Depth=1
	movw	$215, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
# %bb.46:                               #   in Loop: Header=BB0_15 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$217, %ax
	jne	.LBB0_211
# %bb.47:                               # %calc_attackers.split434
                                        #   in Loop: Header=BB0_15 Depth=1
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$217, BasicBlockSignatureTracker
	movw	$152, RunTimeSignatureAdjuster
	jmp	.LBB0_15
.LBB0_48:                               # %.loopexit7
	jmp	.LBB0_49
.LBB0_49:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$160, %ax
	xorw	%dx, %ax
	cmpw	$230, %ax
	jne	.LBB0_217
# %bb.50:                               # %calc_attackers.split408
	movl	$0, (%r11)
	movw	$230, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
.LBB0_51:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_67 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$11, %ax
	xorw	%dx, %ax
	cmpw	$237, %ax
	jne	.LBB0_209
# %bb.52:                               # %calc_attackers.split436
                                        #   in Loop: Header=BB0_51 Depth=1
	movl	(%r11), %eax
	movw	$237, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jge	.LBB0_94
# %bb.53:                               #   in Loop: Header=BB0_51 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$239, %ax
	jne	.LBB0_209
# %bb.54:                               # %calc_attackers.split438
                                        #   in Loop: Header=BB0_51 Depth=1
	movl	(%rcx), %eax
	movslq	(%r11), %rdx
	addl	calc_attackers.bishop_o(,%rdx,4), %eax
	movl	%eax, (%r10)
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$239, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB0_61
# %bb.55:                               #   in Loop: Header=BB0_51 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$242, %ax
	jne	.LBB0_209
# %bb.56:                               # %calc_attackers.split442
                                        #   in Loop: Header=BB0_51 Depth=1
	movl	$2, %esi
	movl	(%r11), %eax
	cltd
	idivl	%esi
	movw	$242, BasicBlockSignatureTracker
	movw	$29, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB0_61
# %bb.57:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19314, %ax             # imm = 0x4B72
	cmpw	$19328, %ax             # imm = 0x4B80
	jne	.LBB0_217
# %bb.58:                               # %calc_attackers.split446
	movw	$19328, BasicBlockSignatureTracker # imm = 0x4B80
	movw	$19314, RunTimeSignatureAdjuster # imm = 0x4B72
# %bb.59:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$483, %ax               # imm = 0x1E3
	xorw	%dx, %ax
	cmpw	$273, %ax               # imm = 0x111
	jne	.LBB0_217
# %bb.60:                               # %calc_attackers.split590
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$273, BasicBlockSignatureTracker # imm = 0x111
	movw	$508, RunTimeSignatureAdjuster # imm = 0x1FC
	jmp	.LBB0_95
.LBB0_61:                               #   in Loop: Header=BB0_51 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$507, %ax               # imm = 0x1FB
	xorw	%dx, %ax
	cmpw	$276, %ax               # imm = 0x114
	jne	.LBB0_209
# %bb.62:                               # %calc_attackers.split444
                                        #   in Loop: Header=BB0_51 Depth=1
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$276, BasicBlockSignatureTracker # imm = 0x114
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB0_65
# %bb.63:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$281, %ax               # imm = 0x119
	jne	.LBB0_217
# %bb.64:                               # %calc_attackers.split448
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$281, BasicBlockSignatureTracker # imm = 0x119
	movw	$500, RunTimeSignatureAdjuster # imm = 0x1F4
	jmp	.LBB0_95
.LBB0_65:                               #   in Loop: Header=BB0_51 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$284, %ax               # imm = 0x11C
	jne	.LBB0_209
# %bb.66:                               # %calc_attackers.split450
                                        #   in Loop: Header=BB0_51 Depth=1
	movw	$284, BasicBlockSignatureTracker # imm = 0x11C
	movw	$0, RunTimeSignatureAdjuster
.LBB0_67:                               #   Parent Loop BB0_51 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$3, %ax
	xorw	%dx, %ax
	cmpw	$287, %ax               # imm = 0x11F
	jne	.LBB0_208
# %bb.68:                               # %calc_attackers.split452
                                        #   in Loop: Header=BB0_67 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$287, BasicBlockSignatureTracker # imm = 0x11F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB0_85
# %bb.69:                               #   in Loop: Header=BB0_67 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$288, %ax               # imm = 0x120
	jne	.LBB0_208
# %bb.70:                               # %calc_attackers.split454
                                        #   in Loop: Header=BB0_67 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$288, BasicBlockSignatureTracker # imm = 0x120
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB0_73
# %bb.71:                               #   in Loop: Header=BB0_67 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$290, %ax               # imm = 0x122
	jne	.LBB0_208
# %bb.72:                               # %calc_attackers.split460
                                        #   in Loop: Header=BB0_67 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$290, BasicBlockSignatureTracker # imm = 0x122
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB0_75
.LBB0_73:                               #   in Loop: Header=BB0_51 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$6, %ax
	xorw	%dx, %ax
	cmpw	$294, %ax               # imm = 0x126
	jne	.LBB0_209
# %bb.74:                               # %calc_attackers.split458
                                        #   in Loop: Header=BB0_51 Depth=1
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$294, BasicBlockSignatureTracker # imm = 0x126
	movw	$57, RunTimeSignatureAdjuster
	jmp	.LBB0_86
.LBB0_75:                               # %Buffer__2
                                        #   in Loop: Header=BB0_67 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11042, %ax             # imm = 0x2B22
	cmpw	$10752, %ax             # imm = 0x2A00
	jne	.LBB0_208
# %bb.76:                               # %calc_attackers.split462
                                        #   in Loop: Header=BB0_67 Depth=2
	movw	$10752, BasicBlockSignatureTracker # imm = 0x2A00
	movw	$11042, RunTimeSignatureAdjuster # imm = 0x2B22
# %bb.77:                               #   in Loop: Header=BB0_67 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$10, %ax
	xorw	%dx, %ax
	cmpw	$296, %ax               # imm = 0x128
	jne	.LBB0_208
# %bb.78:                               # %calc_attackers.split592
                                        #   in Loop: Header=BB0_67 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$296, BasicBlockSignatureTracker # imm = 0x128
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB0_81
# %bb.79:                               #   in Loop: Header=BB0_51 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$314, %ax               # imm = 0x13A
	jne	.LBB0_209
# %bb.80:                               # %calc_attackers.split464
                                        #   in Loop: Header=BB0_51 Depth=1
	movw	$314, BasicBlockSignatureTracker # imm = 0x13A
	movw	$37, RunTimeSignatureAdjuster
	jmp	.LBB0_86
.LBB0_81:                               #   in Loop: Header=BB0_67 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$348, %ax               # imm = 0x15C
	jne	.LBB0_208
# %bb.82:                               # %calc_attackers.split466
                                        #   in Loop: Header=BB0_67 Depth=2
	movw	$348, BasicBlockSignatureTracker # imm = 0x15C
	movw	$0, RunTimeSignatureAdjuster
# %bb.83:                               #   in Loop: Header=BB0_67 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$349, %ax               # imm = 0x15D
	jne	.LBB0_208
# %bb.84:                               # %calc_attackers.split468
                                        #   in Loop: Header=BB0_67 Depth=2
	movslq	(%r11), %rax
	movl	calc_attackers.bishop_o(,%rax,4), %eax
	addl	(%r10), %eax
	movl	%eax, (%r10)
	movw	$349, BasicBlockSignatureTracker # imm = 0x15D
	movw	$65, RunTimeSignatureAdjuster
	jmp	.LBB0_67
.LBB0_85:                               # %.loopexit
                                        #   in Loop: Header=BB0_51 Depth=1
	jmp	.LBB0_86
.LBB0_86:                               #   in Loop: Header=BB0_51 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$112, %ax
	xorw	%dx, %ax
	cmpw	$367, %ax               # imm = 0x16F
	jne	.LBB0_209
# %bb.87:                               # %calc_attackers.split456
                                        #   in Loop: Header=BB0_51 Depth=1
	movw	$367, BasicBlockSignatureTracker # imm = 0x16F
	movw	$0, RunTimeSignatureAdjuster
# %bb.88:                               #   in Loop: Header=BB0_51 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$232, %ax
	cmpw	$391, %ax               # imm = 0x187
	jne	.LBB0_209
# %bb.89:                               # %calc_attackers.split470
                                        #   in Loop: Header=BB0_51 Depth=1
	movw	$391, BasicBlockSignatureTracker # imm = 0x187
	movw	$0, RunTimeSignatureAdjuster
# %bb.90:                               #   in Loop: Header=BB0_51 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$413, %ax               # imm = 0x19D
	jne	.LBB0_209
# %bb.91:                               # %calc_attackers.split472
                                        #   in Loop: Header=BB0_51 Depth=1
	movw	$413, BasicBlockSignatureTracker # imm = 0x19D
	movw	$0, RunTimeSignatureAdjuster
# %bb.92:                               #   in Loop: Header=BB0_51 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$417, %ax               # imm = 0x1A1
	jne	.LBB0_209
# %bb.93:                               # %calc_attackers.split474
                                        #   in Loop: Header=BB0_51 Depth=1
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$417, BasicBlockSignatureTracker # imm = 0x1A1
	movw	$327, RunTimeSignatureAdjuster # imm = 0x147
	jmp	.LBB0_51
.LBB0_94:                               # %.loopexit3
	jmp	.LBB0_95
.LBB0_95:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$322, %ax               # imm = 0x142
	xorw	%dx, %ax
	cmpw	$431, %ax               # imm = 0x1AF
	jne	.LBB0_217
# %bb.96:                               # %calc_attackers.split440
	movl	$0, (%r11)
	movw	$431, BasicBlockSignatureTracker # imm = 0x1AF
	movw	$0, RunTimeSignatureAdjuster
.LBB0_97:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$22, %ax
	xorw	%dx, %ax
	cmpw	$441, %ax               # imm = 0x1B9
	jne	.LBB0_207
# %bb.98:                               # %calc_attackers.split476
                                        #   in Loop: Header=BB0_97 Depth=1
	movl	(%r11), %eax
	movw	$441, BasicBlockSignatureTracker # imm = 0x1B9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jge	.LBB0_107
# %bb.99:                               #   in Loop: Header=BB0_97 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$455, %ax               # imm = 0x1C7
	jne	.LBB0_207
# %bb.100:                              # %calc_attackers.split478
                                        #   in Loop: Header=BB0_97 Depth=1
	movl	(%rcx), %eax
	movslq	(%r11), %rdx
	addl	calc_attackers.knight_o(,%rdx,4), %eax
	movl	%eax, (%r10)
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$455, BasicBlockSignatureTracker # imm = 0x1C7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB0_103
# %bb.101:                              #   in Loop: Header=BB0_97 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$467, %ax               # imm = 0x1D3
	jne	.LBB0_207
# %bb.102:                              # %calc_attackers.split482
                                        #   in Loop: Header=BB0_97 Depth=1
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$467, BasicBlockSignatureTracker # imm = 0x1D3
	movw	$20, RunTimeSignatureAdjuster
.LBB0_103:                              #   in Loop: Header=BB0_97 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$36, %ax
	xorw	%dx, %ax
	cmpw	$483, %ax               # imm = 0x1E3
	jne	.LBB0_207
# %bb.104:                              # %calc_attackers.split484
                                        #   in Loop: Header=BB0_97 Depth=1
	movw	$483, BasicBlockSignatureTracker # imm = 0x1E3
	movw	$0, RunTimeSignatureAdjuster
# %bb.105:                              #   in Loop: Header=BB0_97 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$488, %ax               # imm = 0x1E8
	jne	.LBB0_207
# %bb.106:                              # %calc_attackers.split486
                                        #   in Loop: Header=BB0_97 Depth=1
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$488, BasicBlockSignatureTracker # imm = 0x1E8
	movw	$71, RunTimeSignatureAdjuster
	jmp	.LBB0_97
.LBB0_107:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$77, %ax
	cmpw	$500, %ax               # imm = 0x1F4
	jne	.LBB0_217
# %bb.108:                              # %calc_attackers.split480
	movw	$500, BasicBlockSignatureTracker # imm = 0x1F4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB0_203
.LBB0_109:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$473, %ax               # imm = 0x1D9
	cmpw	$510, %ax               # imm = 0x1FE
	jne	.LBB0_217
# %bb.110:                              # %calc_attackers.split402
	movl	$0, (%r11)
	movw	$510, BasicBlockSignatureTracker # imm = 0x1FE
	movw	$0, RunTimeSignatureAdjuster
.LBB0_111:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_119 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$1, %ax
	xorw	%dx, %ax
	cmpw	$511, %ax               # imm = 0x1FF
	jne	.LBB0_216
# %bb.112:                              # %calc_attackers.split490
                                        #   in Loop: Header=BB0_111 Depth=1
	movl	(%r11), %eax
	movw	$511, BasicBlockSignatureTracker # imm = 0x1FF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jge	.LBB0_142
# %bb.113:                              #   in Loop: Header=BB0_111 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1017, %ax              # imm = 0x3F9
	cmpw	$518, %ax               # imm = 0x206
	jne	.LBB0_216
# %bb.114:                              # %calc_attackers.split492
                                        #   in Loop: Header=BB0_111 Depth=1
	movl	(%rcx), %eax
	movslq	(%r11), %rdx
	addl	calc_attackers.rook_o(,%rdx,4), %eax
	movl	%eax, (%r10)
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$518, BasicBlockSignatureTracker # imm = 0x206
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jne	.LBB0_117
# %bb.115:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$526, %ax               # imm = 0x20E
	jne	.LBB0_217
# %bb.116:                              # %calc_attackers.split496
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$526, BasicBlockSignatureTracker # imm = 0x20E
	movw	$1009, RunTimeSignatureAdjuster # imm = 0x3F1
	jmp	.LBB0_143
.LBB0_117:                              #   in Loop: Header=BB0_111 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$541, %ax               # imm = 0x21D
	jne	.LBB0_216
# %bb.118:                              # %calc_attackers.split498
                                        #   in Loop: Header=BB0_111 Depth=1
	movw	$541, BasicBlockSignatureTracker # imm = 0x21D
	movw	$0, RunTimeSignatureAdjuster
.LBB0_119:                              #   Parent Loop BB0_111 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$63, %ax
	xorw	%dx, %ax
	cmpw	$546, %ax               # imm = 0x222
	jne	.LBB0_215
# %bb.120:                              # %calc_attackers.split500
                                        #   in Loop: Header=BB0_119 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$546, BasicBlockSignatureTracker # imm = 0x222
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB0_135
# %bb.121:                              #   in Loop: Header=BB0_119 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$552, %ax               # imm = 0x228
	jne	.LBB0_215
# %bb.122:                              # %calc_attackers.split502
                                        #   in Loop: Header=BB0_119 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$552, BasicBlockSignatureTracker # imm = 0x228
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB0_125
# %bb.123:                              #   in Loop: Header=BB0_119 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$111, %ax
	cmpw	$583, %ax               # imm = 0x247
	jne	.LBB0_215
# %bb.124:                              # %calc_attackers.split508
                                        #   in Loop: Header=BB0_119 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$583, BasicBlockSignatureTracker # imm = 0x247
	movw	$111, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB0_127
.LBB0_125:                              #   in Loop: Header=BB0_111 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$100, %ax
	xorw	%dx, %ax
	cmpw	$588, %ax               # imm = 0x24C
	jne	.LBB0_216
# %bb.126:                              # %calc_attackers.split506
                                        #   in Loop: Header=BB0_111 Depth=1
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$588, BasicBlockSignatureTracker # imm = 0x24C
	movw	$110, RunTimeSignatureAdjuster
	jmp	.LBB0_136
.LBB0_127:                              # %Buffer__3
                                        #   in Loop: Header=BB0_119 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-26554, %ax            # imm = 0x9846
	cmpw	$-26111, %ax            # imm = 0x9A01
	jne	.LBB0_215
# %bb.128:                              # %calc_attackers.split510
                                        #   in Loop: Header=BB0_119 Depth=2
	movw	$-26111, BasicBlockSignatureTracker # imm = 0x9A01
	movw	$-26554, RunTimeSignatureAdjuster # imm = 0x9846
# %bb.129:                              #   in Loop: Header=BB0_119 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$10, %ax
	xorw	%dx, %ax
	cmpw	$589, %ax               # imm = 0x24D
	jne	.LBB0_215
# %bb.130:                              # %calc_attackers.split594
                                        #   in Loop: Header=BB0_119 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$589, BasicBlockSignatureTracker # imm = 0x24D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB0_133
# %bb.131:                              #   in Loop: Header=BB0_111 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$592, %ax               # imm = 0x250
	jne	.LBB0_216
# %bb.132:                              # %calc_attackers.split512
                                        #   in Loop: Header=BB0_111 Depth=1
	movw	$592, BasicBlockSignatureTracker # imm = 0x250
	movw	$114, RunTimeSignatureAdjuster
	jmp	.LBB0_136
.LBB0_133:                              #   in Loop: Header=BB0_119 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$612, %ax               # imm = 0x264
	jne	.LBB0_215
# %bb.134:                              # %calc_attackers.split514
                                        #   in Loop: Header=BB0_119 Depth=2
	movslq	(%r11), %rax
	movl	calc_attackers.rook_o(,%rax,4), %eax
	addl	(%r10), %eax
	movl	%eax, (%r10)
	movw	$612, BasicBlockSignatureTracker # imm = 0x264
	movw	$121, RunTimeSignatureAdjuster
	jmp	.LBB0_119
.LBB0_135:                              # %.loopexit14
                                        #   in Loop: Header=BB0_111 Depth=1
	jmp	.LBB0_136
.LBB0_136:                              #   in Loop: Header=BB0_111 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$81, %ax
	xorw	%dx, %ax
	cmpw	$627, %ax               # imm = 0x273
	jne	.LBB0_216
# %bb.137:                              # %calc_attackers.split504
                                        #   in Loop: Header=BB0_111 Depth=1
	movw	$627, BasicBlockSignatureTracker # imm = 0x273
	movw	$0, RunTimeSignatureAdjuster
# %bb.138:                              #   in Loop: Header=BB0_111 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$637, %ax               # imm = 0x27D
	jne	.LBB0_216
# %bb.139:                              # %calc_attackers.split516
                                        #   in Loop: Header=BB0_111 Depth=1
	movw	$637, BasicBlockSignatureTracker # imm = 0x27D
	movw	$0, RunTimeSignatureAdjuster
# %bb.140:                              #   in Loop: Header=BB0_111 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$231, %ax
	cmpw	$666, %ax               # imm = 0x29A
	jne	.LBB0_216
# %bb.141:                              # %calc_attackers.split518
                                        #   in Loop: Header=BB0_111 Depth=1
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$666, BasicBlockSignatureTracker # imm = 0x29A
	movw	$868, RunTimeSignatureAdjuster # imm = 0x364
	jmp	.LBB0_111
.LBB0_142:                              # %.loopexit16
	jmp	.LBB0_143
.LBB0_143:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$851, %ax               # imm = 0x353
	xorw	%dx, %ax
	cmpw	$684, %ax               # imm = 0x2AC
	jne	.LBB0_217
# %bb.144:                              # %calc_attackers.split494
	movl	$0, (%r11)
	movw	$684, BasicBlockSignatureTracker # imm = 0x2AC
	movw	$0, RunTimeSignatureAdjuster
.LBB0_145:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_161 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$24, %ax
	xorw	%dx, %ax
	cmpw	$692, %ax               # imm = 0x2B4
	jne	.LBB0_214
# %bb.146:                              # %calc_attackers.split520
                                        #   in Loop: Header=BB0_145 Depth=1
	movl	(%r11), %eax
	movw	$692, BasicBlockSignatureTracker # imm = 0x2B4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jge	.LBB0_188
# %bb.147:                              #   in Loop: Header=BB0_145 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$699, %ax               # imm = 0x2BB
	jne	.LBB0_214
# %bb.148:                              # %calc_attackers.split522
                                        #   in Loop: Header=BB0_145 Depth=1
	movl	(%rcx), %eax
	movslq	(%r11), %rdx
	addl	calc_attackers.bishop_o(,%rdx,4), %eax
	movl	%eax, (%r10)
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$699, BasicBlockSignatureTracker # imm = 0x2BB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB0_155
# %bb.149:                              #   in Loop: Header=BB0_145 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$702, %ax               # imm = 0x2BE
	jne	.LBB0_214
# %bb.150:                              # %calc_attackers.split526
                                        #   in Loop: Header=BB0_145 Depth=1
	movl	$2, %esi
	movl	(%r11), %eax
	cltd
	idivl	%esi
	movw	$702, BasicBlockSignatureTracker # imm = 0x2BE
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jne	.LBB0_155
# %bb.151:                              # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25685, %ax             # imm = 0x6455
	cmpw	$26347, %ax             # imm = 0x66EB
	jne	.LBB0_217
# %bb.152:                              # %calc_attackers.split530
	movw	$26347, BasicBlockSignatureTracker # imm = 0x66EB
	movw	$25685, RunTimeSignatureAdjuster # imm = 0x6455
# %bb.153:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$109, %ax
	xorw	%dx, %ax
	cmpw	$723, %ax               # imm = 0x2D3
	jne	.LBB0_217
# %bb.154:                              # %calc_attackers.split596
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$723, BasicBlockSignatureTracker # imm = 0x2D3
	movw	$103, RunTimeSignatureAdjuster
	jmp	.LBB0_189
.LBB0_155:                              #   in Loop: Header=BB0_145 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$83, %ax
	xorw	%dx, %ax
	cmpw	$744, %ax               # imm = 0x2E8
	jne	.LBB0_214
# %bb.156:                              # %calc_attackers.split528
                                        #   in Loop: Header=BB0_145 Depth=1
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$744, BasicBlockSignatureTracker # imm = 0x2E8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jne	.LBB0_159
# %bb.157:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$757, %ax               # imm = 0x2F5
	jne	.LBB0_217
# %bb.158:                              # %calc_attackers.split532
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$757, BasicBlockSignatureTracker # imm = 0x2F5
	movw	$65, RunTimeSignatureAdjuster
	jmp	.LBB0_189
.LBB0_159:                              #   in Loop: Header=BB0_145 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$761, %ax               # imm = 0x2F9
	jne	.LBB0_214
# %bb.160:                              # %calc_attackers.split534
                                        #   in Loop: Header=BB0_145 Depth=1
	movw	$761, BasicBlockSignatureTracker # imm = 0x2F9
	movw	$0, RunTimeSignatureAdjuster
.LBB0_161:                              #   Parent Loop BB0_145 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$508, %ax               # imm = 0x1FC
	xorw	%dx, %ax
	cmpw	$773, %ax               # imm = 0x305
	jne	.LBB0_213
# %bb.162:                              # %calc_attackers.split536
                                        #   in Loop: Header=BB0_161 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$773, BasicBlockSignatureTracker # imm = 0x305
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB0_179
# %bb.163:                              #   in Loop: Header=BB0_161 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$780, %ax               # imm = 0x30C
	jne	.LBB0_213
# %bb.164:                              # %calc_attackers.split538
                                        #   in Loop: Header=BB0_161 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$780, BasicBlockSignatureTracker # imm = 0x30C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB0_167
# %bb.165:                              #   in Loop: Header=BB0_161 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$47, %ax
	cmpw	$803, %ax               # imm = 0x323
	jne	.LBB0_213
# %bb.166:                              # %calc_attackers.split544
                                        #   in Loop: Header=BB0_161 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$803, BasicBlockSignatureTracker # imm = 0x323
	movw	$47, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB0_169
.LBB0_167:                              #   in Loop: Header=BB0_145 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$85, %ax
	xorw	%dx, %ax
	cmpw	$857, %ax               # imm = 0x359
	jne	.LBB0_214
# %bb.168:                              # %calc_attackers.split542
                                        #   in Loop: Header=BB0_145 Depth=1
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$857, BasicBlockSignatureTracker # imm = 0x359
	movw	$92, RunTimeSignatureAdjuster
	jmp	.LBB0_180
.LBB0_169:                              # %Buffer__5
                                        #   in Loop: Header=BB0_161 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29253, %ax            # imm = 0x8DBB
	cmpw	$-29032, %ax            # imm = 0x8E98
	jne	.LBB0_213
# %bb.170:                              # %calc_attackers.split546
                                        #   in Loop: Header=BB0_161 Depth=2
	movw	$-29032, BasicBlockSignatureTracker # imm = 0x8E98
	movw	$-29253, RunTimeSignatureAdjuster # imm = 0x8DBB
# %bb.171:                              #   in Loop: Header=BB0_161 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$66, %ax
	xorw	%dx, %ax
	cmpw	$865, %ax               # imm = 0x361
	jne	.LBB0_213
# %bb.172:                              # %calc_attackers.split598
                                        #   in Loop: Header=BB0_161 Depth=2
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$865, BasicBlockSignatureTracker # imm = 0x361
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB0_175
# %bb.173:                              #   in Loop: Header=BB0_145 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$868, %ax               # imm = 0x364
	jne	.LBB0_214
# %bb.174:                              # %calc_attackers.split548
                                        #   in Loop: Header=BB0_145 Depth=1
	movw	$868, BasicBlockSignatureTracker # imm = 0x364
	movw	$97, RunTimeSignatureAdjuster
	jmp	.LBB0_180
.LBB0_175:                              #   in Loop: Header=BB0_161 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$870, %ax               # imm = 0x366
	jne	.LBB0_213
# %bb.176:                              # %calc_attackers.split550
                                        #   in Loop: Header=BB0_161 Depth=2
	movw	$870, BasicBlockSignatureTracker # imm = 0x366
	movw	$0, RunTimeSignatureAdjuster
# %bb.177:                              #   in Loop: Header=BB0_161 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$228, %ax
	cmpw	$898, %ax               # imm = 0x382
	jne	.LBB0_213
# %bb.178:                              # %calc_attackers.split552
                                        #   in Loop: Header=BB0_161 Depth=2
	movslq	(%r11), %rax
	movl	calc_attackers.bishop_o(,%rax,4), %eax
	addl	(%r10), %eax
	movl	%eax, (%r10)
	movw	$898, BasicBlockSignatureTracker # imm = 0x382
	movw	$379, RunTimeSignatureAdjuster # imm = 0x17B
	jmp	.LBB0_161
.LBB0_179:                              # %.loopexit10
                                        #   in Loop: Header=BB0_145 Depth=1
	jmp	.LBB0_180
.LBB0_180:                              #   in Loop: Header=BB0_145 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$134, %ax
	xorw	%dx, %ax
	cmpw	$899, %ax               # imm = 0x383
	jne	.LBB0_214
# %bb.181:                              # %calc_attackers.split540
                                        #   in Loop: Header=BB0_145 Depth=1
	movw	$899, BasicBlockSignatureTracker # imm = 0x383
	movw	$0, RunTimeSignatureAdjuster
# %bb.182:                              #   in Loop: Header=BB0_145 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$902, %ax               # imm = 0x386
	jne	.LBB0_214
# %bb.183:                              # %calc_attackers.split554
                                        #   in Loop: Header=BB0_145 Depth=1
	movw	$902, BasicBlockSignatureTracker # imm = 0x386
	movw	$0, RunTimeSignatureAdjuster
# %bb.184:                              #   in Loop: Header=BB0_145 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$916, %ax               # imm = 0x394
	jne	.LBB0_214
# %bb.185:                              # %calc_attackers.split556
                                        #   in Loop: Header=BB0_145 Depth=1
	movw	$916, BasicBlockSignatureTracker # imm = 0x394
	movw	$0, RunTimeSignatureAdjuster
# %bb.186:                              #   in Loop: Header=BB0_145 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$929, %ax               # imm = 0x3A1
	jne	.LBB0_214
# %bb.187:                              # %calc_attackers.split558
                                        #   in Loop: Header=BB0_145 Depth=1
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$929, BasicBlockSignatureTracker # imm = 0x3A1
	movw	$269, RunTimeSignatureAdjuster # imm = 0x10D
	jmp	.LBB0_145
.LBB0_188:                              # %.loopexit12
	jmp	.LBB0_189
.LBB0_189:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$287, %ax               # imm = 0x11F
	xorw	%dx, %ax
	cmpw	$939, %ax               # imm = 0x3AB
	jne	.LBB0_217
# %bb.190:                              # %calc_attackers.split524
	movl	$0, (%r11)
	movw	$939, BasicBlockSignatureTracker # imm = 0x3AB
	movw	$0, RunTimeSignatureAdjuster
.LBB0_191:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$17, %ax
	xorw	%dx, %ax
	cmpw	$954, %ax               # imm = 0x3BA
	jne	.LBB0_212
# %bb.192:                              # %calc_attackers.split560
                                        #   in Loop: Header=BB0_191 Depth=1
	movl	(%r11), %eax
	movw	$954, BasicBlockSignatureTracker # imm = 0x3BA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jge	.LBB0_201
# %bb.193:                              #   in Loop: Header=BB0_191 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$111, %ax
	cmpw	$981, %ax               # imm = 0x3D5
	jne	.LBB0_212
# %bb.194:                              # %calc_attackers.split562
                                        #   in Loop: Header=BB0_191 Depth=1
	movl	(%rcx), %eax
	movslq	(%r11), %rdx
	addl	calc_attackers.knight_o(,%rdx,4), %eax
	movl	%eax, (%r10)
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$981, BasicBlockSignatureTracker # imm = 0x3D5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB0_197
# %bb.195:                              #   in Loop: Header=BB0_191 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$989, %ax               # imm = 0x3DD
	jne	.LBB0_212
# %bb.196:                              # %calc_attackers.split566
                                        #   in Loop: Header=BB0_191 Depth=1
	movl	(%r9), %eax
	addl	$1, %eax
	movl	%eax, (%r9)
	movw	$989, BasicBlockSignatureTracker # imm = 0x3DD
	movw	$8, RunTimeSignatureAdjuster
.LBB0_197:                              #   in Loop: Header=BB0_191 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$61, %ax
	xorw	%dx, %ax
	cmpw	$1000, %ax              # imm = 0x3E8
	jne	.LBB0_212
# %bb.198:                              # %calc_attackers.split568
                                        #   in Loop: Header=BB0_191 Depth=1
	movw	$1000, BasicBlockSignatureTracker # imm = 0x3E8
	movw	$0, RunTimeSignatureAdjuster
# %bb.199:                              #   in Loop: Header=BB0_191 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$1001, %ax              # imm = 0x3E9
	jne	.LBB0_212
# %bb.200:                              # %calc_attackers.split570
                                        #   in Loop: Header=BB0_191 Depth=1
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$1001, BasicBlockSignatureTracker # imm = 0x3E9
	movw	$66, RunTimeSignatureAdjuster
	jmp	.LBB0_191
.LBB0_201:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$69, %ax
	cmpw	$1023, %ax              # imm = 0x3FF
	jne	.LBB0_217
# %bb.202:                              # %calc_attackers.split564
	movw	$1023, BasicBlockSignatureTracker # imm = 0x3FF
	movw	$523, RunTimeSignatureAdjuster # imm = 0x20B
.LBB0_203:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1525, %ax              # imm = 0x5F5
	xorw	%cx, %ax
	cmpw	$1025, %ax              # imm = 0x401
	jne	.LBB0_217
# %bb.204:                              # %calc_attackers.split488
	movl	(%r9), %eax
	movl	%eax, (%r8)
	movw	$1025, BasicBlockSignatureTracker # imm = 0x401
	movw	$1041, RunTimeSignatureAdjuster # imm = 0x411
.LBB0_205:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1027, %ax              # imm = 0x403
	xorw	%cx, %ax
	cmpw	$1043, %ax              # imm = 0x413
	jne	.LBB0_217
# %bb.206:                              # %calc_attackers.split398
	movl	(%r8), %eax
	movw	$1043, BasicBlockSignatureTracker # imm = 0x413
	movw	$-19682, RunTimeSignatureAdjuster # imm = 0xB31E
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB0_207:                              # %CFerrorHandler.calc_attackers.loopexit
	jmp	.LBB0_217
.LBB0_208:                              # %CFerrorHandler.calc_attackers.loopexit1
	jmp	.LBB0_217
.LBB0_209:                              # %CFerrorHandler.calc_attackers.loopexit2
	jmp	.LBB0_217
.LBB0_210:                              # %CFerrorHandler.calc_attackers.loopexit4
	jmp	.LBB0_217
.LBB0_211:                              # %CFerrorHandler.calc_attackers.loopexit6
	jmp	.LBB0_217
.LBB0_212:                              # %CFerrorHandler.calc_attackers.loopexit8
	jmp	.LBB0_217
.LBB0_213:                              # %CFerrorHandler.calc_attackers.loopexit9
	jmp	.LBB0_217
.LBB0_214:                              # %CFerrorHandler.calc_attackers.loopexit11
	jmp	.LBB0_217
.LBB0_215:                              # %CFerrorHandler.calc_attackers.loopexit13
	jmp	.LBB0_217
.LBB0_216:                              # %CFerrorHandler.calc_attackers.loopexit15
	jmp	.LBB0_217
.LBB0_217:                              # %CFerrorHandler.calc_attackers
	callq	FAULT_DETECTED_CFC
.Lfunc_end0:
	.size	calc_attackers, .Lfunc_end0-calc_attackers
	.cfi_endproc
                                        # -- End function
	.globl	is_attacked             # -- Begin function is_attacked
	.p2align	4, 0x90
	.type	is_attacked,@function
is_attacked:                            # @is_attacked
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.1:                                # %is_attacked.split708
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.2:                                # %is_attacked.split706
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.3:                                # %is_attacked.split704
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.4:                                # %is_attacked.split702
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.5:                                # %is_attacked.split700
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.6:                                # %is_attacked.split698
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.7:                                # %is_attacked.split696
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.8:                                # %is_attacked.split694
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.9:                                # %is_attacked.split692
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.10:                               # %is_attacked.split690
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.11:                               # %is_attacked.split688
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.12:                               # %is_attacked.split686
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.13:                               # %is_attacked.split684
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.14:                               # %is_attacked.split682
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.15:                               # %is_attacked.split680
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.16:                               # %is_attacked.split678
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.17:                               # %is_attacked.split676
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.18:                               # %is_attacked.split674
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.19:                               # %is_attacked.split672
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.20:                               # %is_attacked.split670
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.21:                               # %is_attacked.split668
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.22:                               # %is_attacked.split666
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.23:                               # %is_attacked.split664
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.24:                               # %is_attacked.split662
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.25:                               # %is_attacked.split660
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.26:                               # %is_attacked.split658
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.27:                               # %is_attacked.split656
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.28:                               # %is_attacked.split654
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.29:                               # %is_attacked.split652
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.30:                               # %is_attacked.split650
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.31:                               # %is_attacked.split648
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.32:                               # %is_attacked.split646
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.33:                               # %is_attacked.split644
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.34:                               # %is_attacked.split642
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.35:                               # %is_attacked.split640
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6607, %ax              # imm = 0x19CF
	xorw	%cx, %ax
	cmpw	$1050, %ax              # imm = 0x41A
	jne	.LBB1_217
# %bb.36:                               # %is_attacked.split638
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rcx)
	movl	%esi, (%rdx)
	movl	(%rdx), %edx
	andl	$1, %edx
	movw	$1050, BasicBlockSignatureTracker # imm = 0x41A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB1_121
# %bb.37:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$59, %dx
	cmpw	$1057, %dx              # imm = 0x421
	jne	.LBB1_217
# %bb.38:                               # %is_attacked.split
	movl	$0, (%rax)
	movw	$1057, BasicBlockSignatureTracker # imm = 0x421
	movw	$0, RunTimeSignatureAdjuster
.LBB1_39:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_55 Depth 2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$4, %dx
	xorw	%si, %dx
	cmpw	$1061, %dx              # imm = 0x425
	jne	.LBB1_211
# %bb.40:                               # %is_attacked.split488
                                        #   in Loop: Header=BB1_39 Depth=1
	movl	(%rax), %edx
	movw	$1061, BasicBlockSignatureTracker # imm = 0x425
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jge	.LBB1_76
# %bb.41:                               #   in Loop: Header=BB1_39 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$15, %dx
	cmpw	$1066, %dx              # imm = 0x42A
	jne	.LBB1_211
# %bb.42:                               # %is_attacked.split490
                                        #   in Loop: Header=BB1_39 Depth=1
	movslq	(%rax), %rdx
	movl	is_attacked.bishop_o(,%rdx,4), %edx
	movl	%edx, (%r9)
	movl	(%rcx), %edx
	addl	(%r9), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movl	(%r11), %edx
	movw	$1066, BasicBlockSignatureTracker # imm = 0x42A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %edx
	jne	.LBB1_49
# %bb.43:                               #   in Loop: Header=BB1_39 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$24, %dx
	cmpw	$1074, %dx              # imm = 0x432
	jne	.LBB1_211
# %bb.44:                               # %is_attacked.split494
                                        #   in Loop: Header=BB1_39 Depth=1
	movl	(%rax), %edx
	andl	$1, %edx
	movw	$1074, BasicBlockSignatureTracker # imm = 0x432
	movw	$24, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB1_49
# %bb.45:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-665, %ax              # imm = 0xFD67
	cmpw	$-1707, %ax             # imm = 0xF955
	jne	.LBB1_217
# %bb.46:                               # %is_attacked.split498
	movw	$-1707, BasicBlockSignatureTracker # imm = 0xF955
	movw	$-665, RunTimeSignatureAdjuster # imm = 0xFD67
# %bb.47:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$115, %ax
	xorw	%cx, %ax
	cmpw	$1089, %ax              # imm = 0x441
	jne	.LBB1_217
# %bb.48:                               # %is_attacked.split710
	movl	$1, (%r8)
	movw	$1089, BasicBlockSignatureTracker # imm = 0x441
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB1_205
.LBB1_49:                               #   in Loop: Header=BB1_39 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$104, %dx
	xorw	%si, %dx
	cmpw	$1090, %dx              # imm = 0x442
	jne	.LBB1_211
# %bb.50:                               # %is_attacked.split496
                                        #   in Loop: Header=BB1_39 Depth=1
	movl	(%r11), %edx
	movw	$1090, BasicBlockSignatureTracker # imm = 0x442
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %edx
	jne	.LBB1_53
# %bb.51:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$1091, %ax              # imm = 0x443
	jne	.LBB1_217
# %bb.52:                               # %is_attacked.split502
	movl	$1, (%r8)
	movw	$1091, BasicBlockSignatureTracker # imm = 0x443
	movw	$2, RunTimeSignatureAdjuster
	jmp	.LBB1_205
.LBB1_53:                               #   in Loop: Header=BB1_39 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$4, %dx
	cmpw	$1094, %dx              # imm = 0x446
	jne	.LBB1_211
# %bb.54:                               # %is_attacked.split504
                                        #   in Loop: Header=BB1_39 Depth=1
	movw	$1094, BasicBlockSignatureTracker # imm = 0x446
	movw	$0, RunTimeSignatureAdjuster
.LBB1_55:                               #   Parent Loop BB1_39 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$24, %dx
	xorw	%si, %dx
	cmpw	$1118, %dx              # imm = 0x45E
	jne	.LBB1_210
# %bb.56:                               # %is_attacked.split506
                                        #   in Loop: Header=BB1_55 Depth=2
	movl	(%r11), %edx
	movw	$1118, BasicBlockSignatureTracker # imm = 0x45E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB1_71
# %bb.57:                               #   in Loop: Header=BB1_55 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$49, %dx
	cmpw	$1135, %dx              # imm = 0x46F
	jne	.LBB1_210
# %bb.58:                               # %is_attacked.split508
                                        #   in Loop: Header=BB1_55 Depth=2
	movl	(%r11), %edx
	movw	$1135, BasicBlockSignatureTracker # imm = 0x46F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %edx
	je	.LBB1_61
# %bb.59:                               #   in Loop: Header=BB1_55 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$23, %dx
	cmpw	$1144, %dx              # imm = 0x478
	jne	.LBB1_210
# %bb.60:                               # %is_attacked.split514
                                        #   in Loop: Header=BB1_55 Depth=2
	movl	(%r11), %edx
	movw	$1144, BasicBlockSignatureTracker # imm = 0x478
	movw	$23, RunTimeSignatureAdjuster
	cmpl	$9, %edx
	jne	.LBB1_63
.LBB1_61:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$232, %ax
	xorw	%cx, %ax
	cmpw	$1159, %ax              # imm = 0x487
	jne	.LBB1_217
# %bb.62:                               # %is_attacked.split512
	movl	$1, (%r8)
	movw	$1159, BasicBlockSignatureTracker # imm = 0x487
	movw	$198, RunTimeSignatureAdjuster
	jmp	.LBB1_205
.LBB1_63:                               # %Buffer__1
                                        #   in Loop: Header=BB1_55 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$26371, %dx             # imm = 0x6703
	cmpw	$25467, %dx             # imm = 0x637B
	jne	.LBB1_210
# %bb.64:                               # %is_attacked.split516
                                        #   in Loop: Header=BB1_55 Depth=2
	movw	$25467, BasicBlockSignatureTracker # imm = 0x637B
	movw	$26371, RunTimeSignatureAdjuster # imm = 0x6703
# %bb.65:                               #   in Loop: Header=BB1_55 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$237, %dx
	xorw	%si, %dx
	cmpw	$1173, %dx              # imm = 0x495
	jne	.LBB1_210
# %bb.66:                               # %is_attacked.split712
                                        #   in Loop: Header=BB1_55 Depth=2
	movl	(%r11), %edx
	movw	$1173, BasicBlockSignatureTracker # imm = 0x495
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	je	.LBB1_69
# %bb.67:                               #   in Loop: Header=BB1_39 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$15, %dx
	cmpw	$1178, %dx              # imm = 0x49A
	jne	.LBB1_211
# %bb.68:                               # %is_attacked.split518
                                        #   in Loop: Header=BB1_39 Depth=1
	movw	$1178, BasicBlockSignatureTracker # imm = 0x49A
	movw	$196, RunTimeSignatureAdjuster
	jmp	.LBB1_72
.LBB1_69:                               #   in Loop: Header=BB1_55 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$51, %dx
	cmpw	$1190, %dx              # imm = 0x4A6
	jne	.LBB1_210
# %bb.70:                               # %is_attacked.split520
                                        #   in Loop: Header=BB1_55 Depth=2
	movl	(%r9), %edx
	addl	(%r10), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movw	$1190, BasicBlockSignatureTracker # imm = 0x4A6
	movw	$224, RunTimeSignatureAdjuster
	jmp	.LBB1_55
.LBB1_71:                               # %.loopexit4
                                        #   in Loop: Header=BB1_39 Depth=1
	jmp	.LBB1_72
.LBB1_72:                               #   in Loop: Header=BB1_39 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$247, %dx
	xorw	%si, %dx
	cmpw	$1193, %dx              # imm = 0x4A9
	jne	.LBB1_211
# %bb.73:                               # %is_attacked.split510
                                        #   in Loop: Header=BB1_39 Depth=1
	movw	$1193, BasicBlockSignatureTracker # imm = 0x4A9
	movw	$0, RunTimeSignatureAdjuster
# %bb.74:                               #   in Loop: Header=BB1_39 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$5, %dx
	cmpw	$1196, %dx              # imm = 0x4AC
	jne	.LBB1_211
# %bb.75:                               # %is_attacked.split522
                                        #   in Loop: Header=BB1_39 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$1196, BasicBlockSignatureTracker # imm = 0x4AC
	movw	$141, RunTimeSignatureAdjuster
	jmp	.LBB1_39
.LBB1_76:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$144, %dx
	cmpw	$1205, %dx              # imm = 0x4B5
	jne	.LBB1_217
# %bb.77:                               # %is_attacked.split492
	movl	$0, (%rax)
	movw	$1205, BasicBlockSignatureTracker # imm = 0x4B5
	movw	$0, RunTimeSignatureAdjuster
.LBB1_78:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$10, %dx
	xorw	%si, %dx
	cmpw	$1215, %dx              # imm = 0x4BF
	jne	.LBB1_209
# %bb.79:                               # %is_attacked.split524
                                        #   in Loop: Header=BB1_78 Depth=1
	movl	(%rax), %edx
	movw	$1215, BasicBlockSignatureTracker # imm = 0x4BF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %edx
	jge	.LBB1_88
# %bb.80:                               #   in Loop: Header=BB1_78 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$121, %dx
	cmpw	$1222, %dx              # imm = 0x4C6
	jne	.LBB1_209
# %bb.81:                               # %is_attacked.split526
                                        #   in Loop: Header=BB1_78 Depth=1
	movl	(%rcx), %edx
	movslq	(%rax), %rsi
	addl	is_attacked.knight_o(,%rsi,4), %edx
	movslq	%edx, %rdx
	movl	board(,%rdx,4), %edx
	movw	$1222, BasicBlockSignatureTracker # imm = 0x4C6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %edx
	jne	.LBB1_84
# %bb.82:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$1226, %ax              # imm = 0x4CA
	jne	.LBB1_217
# %bb.83:                               # %is_attacked.split530
	movl	$1, (%r8)
	movw	$1226, BasicBlockSignatureTracker # imm = 0x4CA
	movw	$139, RunTimeSignatureAdjuster
	jmp	.LBB1_205
.LBB1_84:                               #   in Loop: Header=BB1_78 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$17, %dx
	cmpw	$1239, %dx              # imm = 0x4D7
	jne	.LBB1_209
# %bb.85:                               # %is_attacked.split532
                                        #   in Loop: Header=BB1_78 Depth=1
	movw	$1239, BasicBlockSignatureTracker # imm = 0x4D7
	movw	$0, RunTimeSignatureAdjuster
# %bb.86:                               #   in Loop: Header=BB1_78 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$14, %dx
	cmpw	$1241, %dx              # imm = 0x4D9
	jne	.LBB1_209
# %bb.87:                               # %is_attacked.split534
                                        #   in Loop: Header=BB1_78 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$1241, BasicBlockSignatureTracker # imm = 0x4D9
	movw	$108, RunTimeSignatureAdjuster
	jmp	.LBB1_78
.LBB1_88:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$95, %dx
	cmpw	$1248, %dx              # imm = 0x4E0
	jne	.LBB1_217
# %bb.89:                               # %is_attacked.split528
	movl	$0, (%rax)
	movw	$1248, BasicBlockSignatureTracker # imm = 0x4E0
	movw	$0, RunTimeSignatureAdjuster
.LBB1_90:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_98 Depth 2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$14, %dx
	xorw	%si, %dx
	cmpw	$1262, %dx              # imm = 0x4EE
	jne	.LBB1_208
# %bb.91:                               # %is_attacked.split536
                                        #   in Loop: Header=BB1_90 Depth=1
	movl	(%rax), %edx
	movw	$1262, BasicBlockSignatureTracker # imm = 0x4EE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jge	.LBB1_119
# %bb.92:                               #   in Loop: Header=BB1_90 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$492, %dx               # imm = 0x1EC
	cmpw	$1282, %dx              # imm = 0x502
	jne	.LBB1_208
# %bb.93:                               # %is_attacked.split538
                                        #   in Loop: Header=BB1_90 Depth=1
	movslq	(%rax), %rdx
	movl	is_attacked.rook_o(,%rdx,4), %edx
	movl	%edx, (%r9)
	movl	(%rcx), %edx
	addl	(%r9), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movl	(%r11), %edx
	movw	$1282, BasicBlockSignatureTracker # imm = 0x502
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %edx
	jne	.LBB1_96
# %bb.94:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$1297, %ax              # imm = 0x511
	jne	.LBB1_217
# %bb.95:                               # %is_attacked.split542
	movl	$1, (%r8)
	movw	$1297, BasicBlockSignatureTracker # imm = 0x511
	movw	$336, RunTimeSignatureAdjuster # imm = 0x150
	jmp	.LBB1_205
.LBB1_96:                               #   in Loop: Header=BB1_90 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$23, %dx
	cmpw	$1301, %dx              # imm = 0x515
	jne	.LBB1_208
# %bb.97:                               # %is_attacked.split544
                                        #   in Loop: Header=BB1_90 Depth=1
	movw	$1301, BasicBlockSignatureTracker # imm = 0x515
	movw	$0, RunTimeSignatureAdjuster
.LBB1_98:                               #   Parent Loop BB1_90 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$58, %dx
	xorw	%si, %dx
	cmpw	$1327, %dx              # imm = 0x52F
	jne	.LBB1_207
# %bb.99:                               # %is_attacked.split546
                                        #   in Loop: Header=BB1_98 Depth=2
	movl	(%r11), %edx
	movw	$1327, BasicBlockSignatureTracker # imm = 0x52F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB1_114
# %bb.100:                              #   in Loop: Header=BB1_98 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$25, %dx
	cmpw	$1334, %dx              # imm = 0x536
	jne	.LBB1_207
# %bb.101:                              # %is_attacked.split548
                                        #   in Loop: Header=BB1_98 Depth=2
	movl	(%r11), %edx
	movw	$1334, BasicBlockSignatureTracker # imm = 0x536
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %edx
	je	.LBB1_104
# %bb.102:                              #   in Loop: Header=BB1_98 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$14, %dx
	cmpw	$1336, %dx              # imm = 0x538
	jne	.LBB1_207
# %bb.103:                              # %is_attacked.split554
                                        #   in Loop: Header=BB1_98 Depth=2
	movl	(%r11), %edx
	movw	$1336, BasicBlockSignatureTracker # imm = 0x538
	movw	$14, RunTimeSignatureAdjuster
	cmpl	$9, %edx
	jne	.LBB1_106
.LBB1_104:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$1340, %ax              # imm = 0x53C
	jne	.LBB1_217
# %bb.105:                              # %is_attacked.split552
	movl	$1, (%r8)
	movw	$1340, BasicBlockSignatureTracker # imm = 0x53C
	movw	$381, RunTimeSignatureAdjuster # imm = 0x17D
	jmp	.LBB1_205
.LBB1_106:                              # %Buffer__2
                                        #   in Loop: Header=BB1_98 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$-27492, %dx            # imm = 0x949C
	cmpw	$-28252, %dx            # imm = 0x91A4
	jne	.LBB1_207
# %bb.107:                              # %is_attacked.split556
                                        #   in Loop: Header=BB1_98 Depth=2
	movw	$-28252, BasicBlockSignatureTracker # imm = 0x91A4
	movw	$-27492, RunTimeSignatureAdjuster # imm = 0x949C
# %bb.108:                              #   in Loop: Header=BB1_98 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$127, %dx
	xorw	%si, %dx
	cmpw	$1351, %dx              # imm = 0x547
	jne	.LBB1_207
# %bb.109:                              # %is_attacked.split714
                                        #   in Loop: Header=BB1_98 Depth=2
	movl	(%r11), %edx
	movw	$1351, BasicBlockSignatureTracker # imm = 0x547
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	je	.LBB1_112
# %bb.110:                              #   in Loop: Header=BB1_90 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$21, %dx
	cmpw	$1362, %dx              # imm = 0x552
	jne	.LBB1_208
# %bb.111:                              # %is_attacked.split558
                                        #   in Loop: Header=BB1_90 Depth=1
	movw	$1362, BasicBlockSignatureTracker # imm = 0x552
	movw	$125, RunTimeSignatureAdjuster
	jmp	.LBB1_115
.LBB1_112:                              #   in Loop: Header=BB1_98 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$49, %dx
	cmpw	$1398, %dx              # imm = 0x576
	jne	.LBB1_207
# %bb.113:                              # %is_attacked.split560
                                        #   in Loop: Header=BB1_98 Depth=2
	movl	(%r9), %edx
	addl	(%r10), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movw	$1398, BasicBlockSignatureTracker # imm = 0x576
	movw	$99, RunTimeSignatureAdjuster
	jmp	.LBB1_98
.LBB1_114:                              # %.loopexit
                                        #   in Loop: Header=BB1_90 Depth=1
	jmp	.LBB1_115
.LBB1_115:                              #   in Loop: Header=BB1_90 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$174, %dx
	xorw	%si, %dx
	cmpw	$1409, %dx              # imm = 0x581
	jne	.LBB1_208
# %bb.116:                              # %is_attacked.split550
                                        #   in Loop: Header=BB1_90 Depth=1
	movw	$1409, BasicBlockSignatureTracker # imm = 0x581
	movw	$0, RunTimeSignatureAdjuster
# %bb.117:                              #   in Loop: Header=BB1_90 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$8, %dx
	cmpw	$1417, %dx              # imm = 0x589
	jne	.LBB1_208
# %bb.118:                              # %is_attacked.split562
                                        #   in Loop: Header=BB1_90 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$1417, BasicBlockSignatureTracker # imm = 0x589
	movw	$361, RunTimeSignatureAdjuster # imm = 0x169
	jmp	.LBB1_90
.LBB1_119:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$334, %ax               # imm = 0x14E
	cmpw	$1440, %ax              # imm = 0x5A0
	jne	.LBB1_217
# %bb.120:                              # %is_attacked.split540
	movl	$0, (%r8)
	movw	$1440, BasicBlockSignatureTracker # imm = 0x5A0
	movw	$481, RunTimeSignatureAdjuster # imm = 0x1E1
	jmp	.LBB1_205
.LBB1_121:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$458, %dx               # imm = 0x1CA
	cmpw	$1488, %dx              # imm = 0x5D0
	jne	.LBB1_217
# %bb.122:                              # %is_attacked.split486
	movl	$0, (%rax)
	movw	$1488, BasicBlockSignatureTracker # imm = 0x5D0
	movw	$0, RunTimeSignatureAdjuster
.LBB1_123:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_139 Depth 2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$8, %dx
	xorw	%si, %dx
	cmpw	$1496, %dx              # imm = 0x5D8
	jne	.LBB1_216
# %bb.124:                              # %is_attacked.split564
                                        #   in Loop: Header=BB1_123 Depth=1
	movl	(%rax), %edx
	movw	$1496, BasicBlockSignatureTracker # imm = 0x5D8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jge	.LBB1_160
# %bb.125:                              #   in Loop: Header=BB1_123 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$2, %dx
	cmpw	$1498, %dx              # imm = 0x5DA
	jne	.LBB1_216
# %bb.126:                              # %is_attacked.split566
                                        #   in Loop: Header=BB1_123 Depth=1
	movslq	(%rax), %rdx
	movl	is_attacked.bishop_o(,%rdx,4), %edx
	movl	%edx, (%r9)
	movl	(%rcx), %edx
	addl	(%r9), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movl	(%r11), %edx
	movw	$1498, BasicBlockSignatureTracker # imm = 0x5DA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %edx
	jne	.LBB1_133
# %bb.127:                              #   in Loop: Header=BB1_123 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$4, %dx
	cmpw	$1502, %dx              # imm = 0x5DE
	jne	.LBB1_216
# %bb.128:                              # %is_attacked.split570
                                        #   in Loop: Header=BB1_123 Depth=1
	movl	(%rax), %edx
	andl	$1, %edx
	movw	$1502, BasicBlockSignatureTracker # imm = 0x5DE
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jne	.LBB1_133
# %bb.129:                              # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16699, %ax             # imm = 0x413B
	cmpw	$17637, %ax             # imm = 0x44E5
	jne	.LBB1_217
# %bb.130:                              # %is_attacked.split574
	movw	$17637, BasicBlockSignatureTracker # imm = 0x44E5
	movw	$16699, RunTimeSignatureAdjuster # imm = 0x413B
# %bb.131:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$1505, %ax              # imm = 0x5E1
	jne	.LBB1_217
# %bb.132:                              # %is_attacked.split716
	movl	$1, (%r8)
	movw	$1505, BasicBlockSignatureTracker # imm = 0x5E1
	movw	$416, RunTimeSignatureAdjuster # imm = 0x1A0
	jmp	.LBB1_205
.LBB1_133:                              #   in Loop: Header=BB1_123 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$61, %dx
	xorw	%si, %dx
	cmpw	$1511, %dx              # imm = 0x5E7
	jne	.LBB1_216
# %bb.134:                              # %is_attacked.split572
                                        #   in Loop: Header=BB1_123 Depth=1
	movl	(%r11), %edx
	movw	$1511, BasicBlockSignatureTracker # imm = 0x5E7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %edx
	jne	.LBB1_137
# %bb.135:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$1518, %ax              # imm = 0x5EE
	jne	.LBB1_217
# %bb.136:                              # %is_attacked.split576
	movl	$1, (%r8)
	movw	$1518, BasicBlockSignatureTracker # imm = 0x5EE
	movw	$431, RunTimeSignatureAdjuster # imm = 0x1AF
	jmp	.LBB1_205
.LBB1_137:                              #   in Loop: Header=BB1_123 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$8, %dx
	cmpw	$1519, %dx              # imm = 0x5EF
	jne	.LBB1_216
# %bb.138:                              # %is_attacked.split578
                                        #   in Loop: Header=BB1_123 Depth=1
	movw	$1519, BasicBlockSignatureTracker # imm = 0x5EF
	movw	$0, RunTimeSignatureAdjuster
.LBB1_139:                              #   Parent Loop BB1_123 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$1005, %dx              # imm = 0x3ED
	xorw	%si, %dx
	cmpw	$1538, %dx              # imm = 0x602
	jne	.LBB1_215
# %bb.140:                              # %is_attacked.split580
                                        #   in Loop: Header=BB1_139 Depth=2
	movl	(%r11), %edx
	movw	$1538, BasicBlockSignatureTracker # imm = 0x602
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB1_155
# %bb.141:                              #   in Loop: Header=BB1_139 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$5, %dx
	cmpw	$1543, %dx              # imm = 0x607
	jne	.LBB1_215
# %bb.142:                              # %is_attacked.split582
                                        #   in Loop: Header=BB1_139 Depth=2
	movl	(%r11), %edx
	movw	$1543, BasicBlockSignatureTracker # imm = 0x607
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %edx
	je	.LBB1_145
# %bb.143:                              #   in Loop: Header=BB1_139 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$13, %dx
	cmpw	$1546, %dx              # imm = 0x60A
	jne	.LBB1_215
# %bb.144:                              # %is_attacked.split588
                                        #   in Loop: Header=BB1_139 Depth=2
	movl	(%r11), %edx
	movw	$1546, BasicBlockSignatureTracker # imm = 0x60A
	movw	$13, RunTimeSignatureAdjuster
	cmpl	$10, %edx
	jne	.LBB1_147
.LBB1_145:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$1557, %ax              # imm = 0x615
	jne	.LBB1_217
# %bb.146:                              # %is_attacked.split586
	movl	$1, (%r8)
	movw	$1557, BasicBlockSignatureTracker # imm = 0x615
	movw	$596, RunTimeSignatureAdjuster # imm = 0x254
	jmp	.LBB1_205
.LBB1_147:                              # %Buffer__4
                                        #   in Loop: Header=BB1_139 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$-31249, %dx            # imm = 0x85EF
	cmpw	$-31771, %dx            # imm = 0x83E5
	jne	.LBB1_215
# %bb.148:                              # %is_attacked.split590
                                        #   in Loop: Header=BB1_139 Depth=2
	movw	$-31771, BasicBlockSignatureTracker # imm = 0x83E5
	movw	$-31249, RunTimeSignatureAdjuster # imm = 0x85EF
# %bb.149:                              #   in Loop: Header=BB1_139 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$17, %dx
	xorw	%si, %dx
	cmpw	$1563, %dx              # imm = 0x61B
	jne	.LBB1_215
# %bb.150:                              # %is_attacked.split718
                                        #   in Loop: Header=BB1_139 Depth=2
	movl	(%r11), %edx
	movw	$1563, BasicBlockSignatureTracker # imm = 0x61B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	je	.LBB1_153
# %bb.151:                              #   in Loop: Header=BB1_123 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$63, %dx
	cmpw	$1572, %dx              # imm = 0x624
	jne	.LBB1_216
# %bb.152:                              # %is_attacked.split592
                                        #   in Loop: Header=BB1_123 Depth=1
	movw	$1572, BasicBlockSignatureTracker # imm = 0x624
	movw	$38, RunTimeSignatureAdjuster
	jmp	.LBB1_156
.LBB1_153:                              #   in Loop: Header=BB1_139 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$48, %dx
	cmpw	$1579, %dx              # imm = 0x62B
	jne	.LBB1_215
# %bb.154:                              # %is_attacked.split594
                                        #   in Loop: Header=BB1_139 Depth=2
	movl	(%r9), %edx
	addl	(%r10), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movw	$1579, BasicBlockSignatureTracker # imm = 0x62B
	movw	$964, RunTimeSignatureAdjuster # imm = 0x3C4
	jmp	.LBB1_139
.LBB1_155:                              # %.loopexit11
                                        #   in Loop: Header=BB1_123 Depth=1
	jmp	.LBB1_156
.LBB1_156:                              #   in Loop: Header=BB1_123 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$58, %dx
	xorw	%si, %dx
	cmpw	$1592, %dx              # imm = 0x638
	jne	.LBB1_216
# %bb.157:                              # %is_attacked.split584
                                        #   in Loop: Header=BB1_123 Depth=1
	movw	$1592, BasicBlockSignatureTracker # imm = 0x638
	movw	$0, RunTimeSignatureAdjuster
# %bb.158:                              #   in Loop: Header=BB1_123 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$7, %dx
	cmpw	$1599, %dx              # imm = 0x63F
	jne	.LBB1_216
# %bb.159:                              # %is_attacked.split596
                                        #   in Loop: Header=BB1_123 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$1599, BasicBlockSignatureTracker # imm = 0x63F
	movw	$1007, RunTimeSignatureAdjuster # imm = 0x3EF
	jmp	.LBB1_123
.LBB1_160:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$925, %dx               # imm = 0x39D
	cmpw	$1605, %dx              # imm = 0x645
	jne	.LBB1_217
# %bb.161:                              # %is_attacked.split568
	movl	$0, (%rax)
	movw	$1605, BasicBlockSignatureTracker # imm = 0x645
	movw	$0, RunTimeSignatureAdjuster
.LBB1_162:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$13, %dx
	xorw	%si, %dx
	cmpw	$1608, %dx              # imm = 0x648
	jne	.LBB1_214
# %bb.163:                              # %is_attacked.split598
                                        #   in Loop: Header=BB1_162 Depth=1
	movl	(%rax), %edx
	movw	$1608, BasicBlockSignatureTracker # imm = 0x648
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %edx
	jge	.LBB1_172
# %bb.164:                              #   in Loop: Header=BB1_162 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$24, %dx
	cmpw	$1616, %dx              # imm = 0x650
	jne	.LBB1_214
# %bb.165:                              # %is_attacked.split600
                                        #   in Loop: Header=BB1_162 Depth=1
	movl	(%rcx), %edx
	movslq	(%rax), %rsi
	addl	is_attacked.knight_o(,%rsi,4), %edx
	movslq	%edx, %rdx
	movl	board(,%rdx,4), %edx
	movw	$1616, BasicBlockSignatureTracker # imm = 0x650
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jne	.LBB1_168
# %bb.166:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$1634, %ax              # imm = 0x662
	jne	.LBB1_217
# %bb.167:                              # %is_attacked.split604
	movl	$1, (%r8)
	movw	$1634, BasicBlockSignatureTracker # imm = 0x662
	movw	$547, RunTimeSignatureAdjuster # imm = 0x223
	jmp	.LBB1_205
.LBB1_168:                              #   in Loop: Header=BB1_162 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$35, %dx
	cmpw	$1651, %dx              # imm = 0x673
	jne	.LBB1_214
# %bb.169:                              # %is_attacked.split606
                                        #   in Loop: Header=BB1_162 Depth=1
	movw	$1651, BasicBlockSignatureTracker # imm = 0x673
	movw	$0, RunTimeSignatureAdjuster
# %bb.170:                              #   in Loop: Header=BB1_162 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$10, %dx
	cmpw	$1657, %dx              # imm = 0x679
	jne	.LBB1_214
# %bb.171:                              # %is_attacked.split608
                                        #   in Loop: Header=BB1_162 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$1657, BasicBlockSignatureTracker # imm = 0x679
	movw	$60, RunTimeSignatureAdjuster
	jmp	.LBB1_162
.LBB1_172:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$51, %dx
	cmpw	$1659, %dx              # imm = 0x67B
	jne	.LBB1_217
# %bb.173:                              # %is_attacked.split602
	movl	$0, (%rax)
	movw	$1659, BasicBlockSignatureTracker # imm = 0x67B
	movw	$0, RunTimeSignatureAdjuster
.LBB1_174:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB1_182 Depth 2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$7, %dx
	xorw	%si, %dx
	cmpw	$1660, %dx              # imm = 0x67C
	jne	.LBB1_213
# %bb.175:                              # %is_attacked.split610
                                        #   in Loop: Header=BB1_174 Depth=1
	movl	(%rax), %edx
	movw	$1660, BasicBlockSignatureTracker # imm = 0x67C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jge	.LBB1_203
# %bb.176:                              #   in Loop: Header=BB1_174 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$3, %dx
	cmpw	$1663, %dx              # imm = 0x67F
	jne	.LBB1_213
# %bb.177:                              # %is_attacked.split612
                                        #   in Loop: Header=BB1_174 Depth=1
	movslq	(%rax), %rdx
	movl	is_attacked.rook_o(,%rdx,4), %edx
	movl	%edx, (%r9)
	movl	(%rcx), %edx
	movslq	(%rax), %rsi
	addl	is_attacked.rook_o(,%rsi,4), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movl	(%r11), %edx
	movw	$1663, BasicBlockSignatureTracker # imm = 0x67F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %edx
	jne	.LBB1_180
# %bb.178:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$249, %ax
	cmpw	$1670, %ax              # imm = 0x686
	jne	.LBB1_217
# %bb.179:                              # %is_attacked.split616
	movl	$1, (%r8)
	movw	$1670, BasicBlockSignatureTracker # imm = 0x686
	movw	$711, RunTimeSignatureAdjuster # imm = 0x2C7
	jmp	.LBB1_205
.LBB1_180:                              #   in Loop: Header=BB1_174 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$248, %dx
	cmpw	$1671, %dx              # imm = 0x687
	jne	.LBB1_213
# %bb.181:                              # %is_attacked.split618
                                        #   in Loop: Header=BB1_174 Depth=1
	movw	$1671, BasicBlockSignatureTracker # imm = 0x687
	movw	$0, RunTimeSignatureAdjuster
.LBB1_182:                              #   Parent Loop BB1_174 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$11, %dx
	xorw	%si, %dx
	cmpw	$1676, %dx              # imm = 0x68C
	jne	.LBB1_212
# %bb.183:                              # %is_attacked.split620
                                        #   in Loop: Header=BB1_182 Depth=2
	movl	(%r11), %edx
	movw	$1676, BasicBlockSignatureTracker # imm = 0x68C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB1_198
# %bb.184:                              #   in Loop: Header=BB1_182 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$2, %dx
	cmpw	$1678, %dx              # imm = 0x68E
	jne	.LBB1_212
# %bb.185:                              # %is_attacked.split622
                                        #   in Loop: Header=BB1_182 Depth=2
	movl	(%r11), %edx
	movw	$1678, BasicBlockSignatureTracker # imm = 0x68E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %edx
	je	.LBB1_188
# %bb.186:                              #   in Loop: Header=BB1_182 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$31, %dx
	cmpw	$1681, %dx              # imm = 0x691
	jne	.LBB1_212
# %bb.187:                              # %is_attacked.split628
                                        #   in Loop: Header=BB1_182 Depth=2
	movl	(%r11), %edx
	movw	$1681, BasicBlockSignatureTracker # imm = 0x691
	movw	$31, RunTimeSignatureAdjuster
	cmpl	$10, %edx
	jne	.LBB1_190
.LBB1_188:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$1685, %ax              # imm = 0x695
	jne	.LBB1_217
# %bb.189:                              # %is_attacked.split626
	movl	$1, (%r8)
	movw	$1685, BasicBlockSignatureTracker # imm = 0x695
	movw	$724, RunTimeSignatureAdjuster # imm = 0x2D4
	jmp	.LBB1_205
.LBB1_190:                              # %Buffer__5
                                        #   in Loop: Header=BB1_182 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$-1261, %dx             # imm = 0xFB13
	cmpw	$-638, %dx              # imm = 0xFD82
	jne	.LBB1_212
# %bb.191:                              # %is_attacked.split630
                                        #   in Loop: Header=BB1_182 Depth=2
	movw	$-638, BasicBlockSignatureTracker # imm = 0xFD82
	movw	$-1261, RunTimeSignatureAdjuster # imm = 0xFB13
# %bb.192:                              #   in Loop: Header=BB1_182 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$11, %dx
	xorw	%si, %dx
	cmpw	$1690, %dx              # imm = 0x69A
	jne	.LBB1_212
# %bb.193:                              # %is_attacked.split720
                                        #   in Loop: Header=BB1_182 Depth=2
	movl	(%r11), %edx
	movw	$1690, BasicBlockSignatureTracker # imm = 0x69A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	je	.LBB1_196
# %bb.194:                              #   in Loop: Header=BB1_174 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$5, %dx
	cmpw	$1695, %dx              # imm = 0x69F
	jne	.LBB1_213
# %bb.195:                              # %is_attacked.split632
                                        #   in Loop: Header=BB1_174 Depth=1
	movw	$1695, BasicBlockSignatureTracker # imm = 0x69F
	movw	$19, RunTimeSignatureAdjuster
	jmp	.LBB1_199
.LBB1_196:                              #   in Loop: Header=BB1_182 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$51, %dx
	cmpw	$1705, %dx              # imm = 0x6A9
	jne	.LBB1_212
# %bb.197:                              # %is_attacked.split634
                                        #   in Loop: Header=BB1_182 Depth=2
	movl	(%r9), %edx
	addl	(%r10), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movw	$1705, BasicBlockSignatureTracker # imm = 0x6A9
	movw	$46, RunTimeSignatureAdjuster
	jmp	.LBB1_182
.LBB1_198:                              # %.loopexit7
                                        #   in Loop: Header=BB1_174 Depth=1
	jmp	.LBB1_199
.LBB1_199:                              #   in Loop: Header=BB1_174 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$48, %dx
	xorw	%si, %dx
	cmpw	$1724, %dx              # imm = 0x6BC
	jne	.LBB1_213
# %bb.200:                              # %is_attacked.split624
                                        #   in Loop: Header=BB1_174 Depth=1
	movw	$1724, BasicBlockSignatureTracker # imm = 0x6BC
	movw	$0, RunTimeSignatureAdjuster
# %bb.201:                              #   in Loop: Header=BB1_174 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$110, %dx
	cmpw	$1746, %dx              # imm = 0x6D2
	jne	.LBB1_213
# %bb.202:                              # %is_attacked.split636
                                        #   in Loop: Header=BB1_174 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$1746, BasicBlockSignatureTracker # imm = 0x6D2
	movw	$169, RunTimeSignatureAdjuster
	jmp	.LBB1_174
.LBB1_203:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$168, %ax
	cmpw	$1748, %ax              # imm = 0x6D4
	jne	.LBB1_217
# %bb.204:                              # %is_attacked.split614
	movl	$0, (%r8)
	movw	$1748, BasicBlockSignatureTracker # imm = 0x6D4
	movw	$661, RunTimeSignatureAdjuster # imm = 0x295
.LBB1_205:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$679, %ax               # imm = 0x2A7
	xorw	%cx, %ax
	cmpw	$1766, %ax              # imm = 0x6E6
	jne	.LBB1_217
# %bb.206:                              # %is_attacked.split500
	movl	(%r8), %eax
	movw	$1766, BasicBlockSignatureTracker # imm = 0x6E6
	movw	$6953, RunTimeSignatureAdjuster # imm = 0x1B29
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB1_207:                              # %CFerrorHandler.is_attacked.loopexit
	jmp	.LBB1_217
.LBB1_208:                              # %CFerrorHandler.is_attacked.loopexit1
	jmp	.LBB1_217
.LBB1_209:                              # %CFerrorHandler.is_attacked.loopexit2
	jmp	.LBB1_217
.LBB1_210:                              # %CFerrorHandler.is_attacked.loopexit3
	jmp	.LBB1_217
.LBB1_211:                              # %CFerrorHandler.is_attacked.loopexit5
	jmp	.LBB1_217
.LBB1_212:                              # %CFerrorHandler.is_attacked.loopexit6
	jmp	.LBB1_217
.LBB1_213:                              # %CFerrorHandler.is_attacked.loopexit8
	jmp	.LBB1_217
.LBB1_214:                              # %CFerrorHandler.is_attacked.loopexit9
	jmp	.LBB1_217
.LBB1_215:                              # %CFerrorHandler.is_attacked.loopexit10
	jmp	.LBB1_217
.LBB1_216:                              # %CFerrorHandler.is_attacked.loopexit12
	jmp	.LBB1_217
.LBB1_217:                              # %CFerrorHandler.is_attacked
	callq	FAULT_DETECTED_CFC
.Lfunc_end1:
	.size	is_attacked, .Lfunc_end1-is_attacked
	.cfi_endproc
                                        # -- End function
	.globl	nk_attacked             # -- Begin function nk_attacked
	.p2align	4, 0x90
	.type	nk_attacked,@function
nk_attacked:                            # @nk_attacked
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.1:                                # %nk_attacked.split528
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.2:                                # %nk_attacked.split526
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.3:                                # %nk_attacked.split524
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.4:                                # %nk_attacked.split522
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.5:                                # %nk_attacked.split520
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.6:                                # %nk_attacked.split518
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.7:                                # %nk_attacked.split516
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.8:                                # %nk_attacked.split514
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.9:                                # %nk_attacked.split512
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.10:                               # %nk_attacked.split510
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.11:                               # %nk_attacked.split508
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.12:                               # %nk_attacked.split506
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.13:                               # %nk_attacked.split504
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.14:                               # %nk_attacked.split502
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.15:                               # %nk_attacked.split500
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9294, %ax              # imm = 0x244E
	xorw	%cx, %ax
	cmpw	$1787, %ax              # imm = 0x6FB
	jne	.LBB2_181
# %bb.16:                               # %nk_attacked.split498
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rcx)
	movl	%esi, (%rdx)
	movl	(%rdx), %edx
	andl	$1, %edx
	movw	$1787, BasicBlockSignatureTracker # imm = 0x6FB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB2_93
# %bb.17:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$502, %dx               # imm = 0x1F6
	cmpw	$1805, %dx              # imm = 0x70D
	jne	.LBB2_181
# %bb.18:                               # %nk_attacked.split
	movl	$0, (%rax)
	movw	$1805, BasicBlockSignatureTracker # imm = 0x70D
	movw	$0, RunTimeSignatureAdjuster
.LBB2_19:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_31 Depth 2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$17, %dx
	xorw	%si, %dx
	cmpw	$1820, %dx              # imm = 0x71C
	jne	.LBB2_175
# %bb.20:                               # %nk_attacked.split364
                                        #   in Loop: Header=BB2_19 Depth=1
	movl	(%rax), %edx
	movw	$1820, BasicBlockSignatureTracker # imm = 0x71C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jge	.LBB2_52
# %bb.21:                               #   in Loop: Header=BB2_19 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$57, %dx
	cmpw	$1829, %dx              # imm = 0x725
	jne	.LBB2_175
# %bb.22:                               # %nk_attacked.split366
                                        #   in Loop: Header=BB2_19 Depth=1
	movslq	(%rax), %rdx
	movl	nk_attacked.bishop_o(,%rdx,4), %edx
	movl	%edx, (%r9)
	movl	(%rcx), %edx
	addl	(%r9), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movl	(%r11), %edx
	movw	$1829, BasicBlockSignatureTracker # imm = 0x725
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %edx
	jne	.LBB2_29
# %bb.23:                               #   in Loop: Header=BB2_19 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$2, %dx
	cmpw	$1831, %dx              # imm = 0x727
	jne	.LBB2_175
# %bb.24:                               # %nk_attacked.split370
                                        #   in Loop: Header=BB2_19 Depth=1
	movl	(%rax), %edx
	andl	$1, %edx
	movw	$1831, BasicBlockSignatureTracker # imm = 0x727
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB2_29
# %bb.25:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1811, %ax             # imm = 0xF8ED
	cmpw	$-54, %ax
	jne	.LBB2_181
# %bb.26:                               # %nk_attacked.split374
	movw	$-54, BasicBlockSignatureTracker
	movw	$-1811, RunTimeSignatureAdjuster # imm = 0xF8ED
# %bb.27:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$1837, %ax              # imm = 0x72D
	jne	.LBB2_181
# %bb.28:                               # %nk_attacked.split530
	movl	$1, (%r8)
	movw	$1837, BasicBlockSignatureTracker # imm = 0x72D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB2_169
.LBB2_29:                               #   in Loop: Header=BB2_19 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$100, %dx
	xorw	%si, %dx
	cmpw	$1857, %dx              # imm = 0x741
	jne	.LBB2_175
# %bb.30:                               # %nk_attacked.split372
                                        #   in Loop: Header=BB2_19 Depth=1
	movw	$1857, BasicBlockSignatureTracker # imm = 0x741
	movw	$0, RunTimeSignatureAdjuster
.LBB2_31:                               #   Parent Loop BB2_19 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$27, %dx
	xorw	%si, %dx
	cmpw	$1882, %dx              # imm = 0x75A
	jne	.LBB2_174
# %bb.32:                               # %nk_attacked.split378
                                        #   in Loop: Header=BB2_31 Depth=2
	movl	(%r11), %edx
	movw	$1882, BasicBlockSignatureTracker # imm = 0x75A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB2_47
# %bb.33:                               #   in Loop: Header=BB2_31 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$63, %dx
	cmpw	$1893, %dx              # imm = 0x765
	jne	.LBB2_174
# %bb.34:                               # %nk_attacked.split380
                                        #   in Loop: Header=BB2_31 Depth=2
	movl	(%r11), %edx
	movw	$1893, BasicBlockSignatureTracker # imm = 0x765
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %edx
	je	.LBB2_37
# %bb.35:                               #   in Loop: Header=BB2_31 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$15, %dx
	cmpw	$1898, %dx              # imm = 0x76A
	jne	.LBB2_174
# %bb.36:                               # %nk_attacked.split386
                                        #   in Loop: Header=BB2_31 Depth=2
	movl	(%r11), %edx
	movw	$1898, BasicBlockSignatureTracker # imm = 0x76A
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$9, %edx
	jne	.LBB2_39
.LBB2_37:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$1909, %ax              # imm = 0x775
	jne	.LBB2_181
# %bb.38:                               # %nk_attacked.split384
	movl	$1, (%r8)
	movw	$1909, BasicBlockSignatureTracker # imm = 0x775
	movw	$88, RunTimeSignatureAdjuster
	jmp	.LBB2_169
.LBB2_39:                               # %Buffer__1
                                        #   in Loop: Header=BB2_31 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$-18644, %dx            # imm = 0xB72C
	cmpw	$-20410, %dx            # imm = 0xB046
	jne	.LBB2_174
# %bb.40:                               # %nk_attacked.split388
                                        #   in Loop: Header=BB2_31 Depth=2
	movw	$-20410, BasicBlockSignatureTracker # imm = 0xB046
	movw	$-18644, RunTimeSignatureAdjuster # imm = 0xB72C
# %bb.41:                               #   in Loop: Header=BB2_31 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$16, %dx
	xorw	%si, %dx
	cmpw	$1914, %dx              # imm = 0x77A
	jne	.LBB2_174
# %bb.42:                               # %nk_attacked.split532
                                        #   in Loop: Header=BB2_31 Depth=2
	movl	(%r11), %edx
	movw	$1914, BasicBlockSignatureTracker # imm = 0x77A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	je	.LBB2_45
# %bb.43:                               #   in Loop: Header=BB2_19 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$238, %dx
	cmpw	$1940, %dx              # imm = 0x794
	jne	.LBB2_175
# %bb.44:                               # %nk_attacked.split390
                                        #   in Loop: Header=BB2_19 Depth=1
	movw	$1940, BasicBlockSignatureTracker # imm = 0x794
	movw	$206, RunTimeSignatureAdjuster
	jmp	.LBB2_48
.LBB2_45:                               #   in Loop: Header=BB2_31 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$224, %dx
	cmpw	$1946, %dx              # imm = 0x79A
	jne	.LBB2_174
# %bb.46:                               # %nk_attacked.split392
                                        #   in Loop: Header=BB2_31 Depth=2
	movl	(%r9), %edx
	addl	(%r10), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movw	$1946, BasicBlockSignatureTracker # imm = 0x79A
	movw	$219, RunTimeSignatureAdjuster
	jmp	.LBB2_31
.LBB2_47:                               # %.loopexit4
                                        #   in Loop: Header=BB2_19 Depth=1
	jmp	.LBB2_48
.LBB2_48:                               #   in Loop: Header=BB2_19 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$198, %dx
	xorw	%si, %dx
	cmpw	$1948, %dx              # imm = 0x79C
	jne	.LBB2_175
# %bb.49:                               # %nk_attacked.split382
                                        #   in Loop: Header=BB2_19 Depth=1
	movw	$1948, BasicBlockSignatureTracker # imm = 0x79C
	movw	$0, RunTimeSignatureAdjuster
# %bb.50:                               #   in Loop: Header=BB2_19 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$47, %dx
	cmpw	$1971, %dx              # imm = 0x7B3
	jne	.LBB2_175
# %bb.51:                               # %nk_attacked.split394
                                        #   in Loop: Header=BB2_19 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$1971, BasicBlockSignatureTracker # imm = 0x7B3
	movw	$190, RunTimeSignatureAdjuster
	jmp	.LBB2_19
.LBB2_52:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$169, %dx
	cmpw	$1973, %dx              # imm = 0x7B5
	jne	.LBB2_181
# %bb.53:                               # %nk_attacked.split368
	movl	$0, (%rax)
	movw	$1973, BasicBlockSignatureTracker # imm = 0x7B5
	movw	$0, RunTimeSignatureAdjuster
.LBB2_54:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$124, %dx
	xorw	%si, %dx
	cmpw	$1993, %dx              # imm = 0x7C9
	jne	.LBB2_173
# %bb.55:                               # %nk_attacked.split396
                                        #   in Loop: Header=BB2_54 Depth=1
	movl	(%rax), %edx
	movw	$1993, BasicBlockSignatureTracker # imm = 0x7C9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %edx
	jge	.LBB2_64
# %bb.56:                               #   in Loop: Header=BB2_54 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$17, %dx
	cmpw	$2008, %dx              # imm = 0x7D8
	jne	.LBB2_173
# %bb.57:                               # %nk_attacked.split398
                                        #   in Loop: Header=BB2_54 Depth=1
	movl	(%rcx), %edx
	movslq	(%rax), %rsi
	addl	nk_attacked.knight_o(,%rsi,4), %edx
	movslq	%edx, %rdx
	movl	board(,%rdx,4), %edx
	movw	$2008, BasicBlockSignatureTracker # imm = 0x7D8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %edx
	jne	.LBB2_60
# %bb.58:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$2035, %ax              # imm = 0x7F3
	jne	.LBB2_181
# %bb.59:                               # %nk_attacked.split402
	movl	$1, (%r8)
	movw	$2035, BasicBlockSignatureTracker # imm = 0x7F3
	movw	$222, RunTimeSignatureAdjuster
	jmp	.LBB2_169
.LBB2_60:                               #   in Loop: Header=BB2_54 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$47, %dx
	cmpw	$2039, %dx              # imm = 0x7F7
	jne	.LBB2_173
# %bb.61:                               # %nk_attacked.split404
                                        #   in Loop: Header=BB2_54 Depth=1
	movw	$2039, BasicBlockSignatureTracker # imm = 0x7F7
	movw	$0, RunTimeSignatureAdjuster
# %bb.62:                               #   in Loop: Header=BB2_54 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$4083, %dx              # imm = 0xFF3
	cmpw	$2052, %dx              # imm = 0x804
	jne	.LBB2_173
# %bb.63:                               # %nk_attacked.split406
                                        #   in Loop: Header=BB2_54 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$2052, BasicBlockSignatureTracker # imm = 0x804
	movw	$4017, RunTimeSignatureAdjuster # imm = 0xFB1
	jmp	.LBB2_54
.LBB2_64:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$4051, %dx              # imm = 0xFD3
	cmpw	$2074, %dx              # imm = 0x81A
	jne	.LBB2_181
# %bb.65:                               # %nk_attacked.split400
	movl	$0, (%rax)
	movw	$2074, BasicBlockSignatureTracker # imm = 0x81A
	movw	$0, RunTimeSignatureAdjuster
.LBB2_66:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_70 Depth 2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$88, %dx
	xorw	%si, %dx
	cmpw	$2114, %dx              # imm = 0x842
	jne	.LBB2_172
# %bb.67:                               # %nk_attacked.split408
                                        #   in Loop: Header=BB2_66 Depth=1
	movl	(%rax), %edx
	movw	$2114, BasicBlockSignatureTracker # imm = 0x842
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jge	.LBB2_91
# %bb.68:                               #   in Loop: Header=BB2_66 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$22, %dx
	cmpw	$2132, %dx              # imm = 0x854
	jne	.LBB2_172
# %bb.69:                               # %nk_attacked.split410
                                        #   in Loop: Header=BB2_66 Depth=1
	movslq	(%rax), %rdx
	movl	nk_attacked.rook_o(,%rdx,4), %edx
	movl	%edx, (%r9)
	movl	(%rcx), %edx
	addl	(%r9), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movw	$2132, BasicBlockSignatureTracker # imm = 0x854
	movw	$0, RunTimeSignatureAdjuster
.LBB2_70:                               #   Parent Loop BB2_66 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$54, %dx
	xorw	%si, %dx
	cmpw	$2146, %dx              # imm = 0x862
	jne	.LBB2_171
# %bb.71:                               # %nk_attacked.split414
                                        #   in Loop: Header=BB2_70 Depth=2
	movl	(%r11), %edx
	movw	$2146, BasicBlockSignatureTracker # imm = 0x862
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB2_86
# %bb.72:                               #   in Loop: Header=BB2_70 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$23, %dx
	cmpw	$2165, %dx              # imm = 0x875
	jne	.LBB2_171
# %bb.73:                               # %nk_attacked.split416
                                        #   in Loop: Header=BB2_70 Depth=2
	movl	(%r11), %edx
	movw	$2165, BasicBlockSignatureTracker # imm = 0x875
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %edx
	je	.LBB2_76
# %bb.74:                               #   in Loop: Header=BB2_70 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$226, %dx
	cmpw	$2199, %dx              # imm = 0x897
	jne	.LBB2_171
# %bb.75:                               # %nk_attacked.split422
                                        #   in Loop: Header=BB2_70 Depth=2
	movl	(%r11), %edx
	movw	$2199, BasicBlockSignatureTracker # imm = 0x897
	movw	$226, RunTimeSignatureAdjuster
	cmpl	$9, %edx
	jne	.LBB2_78
.LBB2_76:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$217, %ax
	xorw	%cx, %ax
	cmpw	$2220, %ax              # imm = 0x8AC
	jne	.LBB2_181
# %bb.77:                               # %nk_attacked.split420
	movl	$1, (%r8)
	movw	$2220, BasicBlockSignatureTracker # imm = 0x8AC
	movw	$3969, RunTimeSignatureAdjuster # imm = 0xF81
	jmp	.LBB2_169
.LBB2_78:                               # %Buffer__2
                                        #   in Loop: Header=BB2_70 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$32433, %dx             # imm = 0x7EB1
	cmpw	$30246, %dx             # imm = 0x7626
	jne	.LBB2_171
# %bb.79:                               # %nk_attacked.split424
                                        #   in Loop: Header=BB2_70 Depth=2
	movw	$30246, BasicBlockSignatureTracker # imm = 0x7626
	movw	$32433, RunTimeSignatureAdjuster # imm = 0x7EB1
# %bb.80:                               #   in Loop: Header=BB2_70 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$47, %dx
	xorw	%si, %dx
	cmpw	$2232, %dx              # imm = 0x8B8
	jne	.LBB2_171
# %bb.81:                               # %nk_attacked.split534
                                        #   in Loop: Header=BB2_70 Depth=2
	movl	(%r11), %edx
	movw	$2232, BasicBlockSignatureTracker # imm = 0x8B8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	je	.LBB2_84
# %bb.82:                               #   in Loop: Header=BB2_66 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$112, %dx
	cmpw	$2248, %dx              # imm = 0x8C8
	jne	.LBB2_172
# %bb.83:                               # %nk_attacked.split426
                                        #   in Loop: Header=BB2_66 Depth=1
	movw	$2248, BasicBlockSignatureTracker # imm = 0x8C8
	movw	$170, RunTimeSignatureAdjuster
	jmp	.LBB2_87
.LBB2_84:                               #   in Loop: Header=BB2_70 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$104, %dx
	cmpw	$2256, %dx              # imm = 0x8D0
	jne	.LBB2_171
# %bb.85:                               # %nk_attacked.split428
                                        #   in Loop: Header=BB2_70 Depth=2
	movl	(%r9), %edx
	addl	(%r10), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movw	$2256, BasicBlockSignatureTracker # imm = 0x8D0
	movw	$132, RunTimeSignatureAdjuster
	jmp	.LBB2_70
.LBB2_86:                               # %.loopexit
                                        #   in Loop: Header=BB2_66 Depth=1
	jmp	.LBB2_87
.LBB2_87:                               #   in Loop: Header=BB2_66 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$176, %dx
	xorw	%si, %dx
	cmpw	$2258, %dx              # imm = 0x8D2
	jne	.LBB2_172
# %bb.88:                               # %nk_attacked.split418
                                        #   in Loop: Header=BB2_66 Depth=1
	movw	$2258, BasicBlockSignatureTracker # imm = 0x8D2
	movw	$0, RunTimeSignatureAdjuster
# %bb.89:                               #   in Loop: Header=BB2_66 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$7, %dx
	cmpw	$2261, %dx              # imm = 0x8D5
	jne	.LBB2_172
# %bb.90:                               # %nk_attacked.split430
                                        #   in Loop: Header=BB2_66 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$2261, BasicBlockSignatureTracker # imm = 0x8D5
	movw	$207, RunTimeSignatureAdjuster
	jmp	.LBB2_66
.LBB2_91:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$148, %ax
	cmpw	$2262, %ax              # imm = 0x8D6
	jne	.LBB2_181
# %bb.92:                               # %nk_attacked.split412
	movl	$0, (%r8)
	movw	$2262, BasicBlockSignatureTracker # imm = 0x8D6
	movw	$4091, RunTimeSignatureAdjuster # imm = 0xFFB
	jmp	.LBB2_169
.LBB2_93:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$3611, %dx              # imm = 0xE1B
	cmpw	$2272, %dx              # imm = 0x8E0
	jne	.LBB2_181
# %bb.94:                               # %nk_attacked.split362
	movl	$0, (%rax)
	movw	$2272, BasicBlockSignatureTracker # imm = 0x8E0
	movw	$0, RunTimeSignatureAdjuster
.LBB2_95:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_107 Depth 2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$12, %dx
	xorw	%si, %dx
	cmpw	$2284, %dx              # imm = 0x8EC
	jne	.LBB2_180
# %bb.96:                               # %nk_attacked.split432
                                        #   in Loop: Header=BB2_95 Depth=1
	movl	(%rax), %edx
	movw	$2284, BasicBlockSignatureTracker # imm = 0x8EC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jge	.LBB2_128
# %bb.97:                               #   in Loop: Header=BB2_95 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$3, %dx
	cmpw	$2287, %dx              # imm = 0x8EF
	jne	.LBB2_180
# %bb.98:                               # %nk_attacked.split434
                                        #   in Loop: Header=BB2_95 Depth=1
	movslq	(%rax), %rdx
	movl	nk_attacked.bishop_o(,%rdx,4), %edx
	movl	%edx, (%r9)
	movl	(%rcx), %edx
	addl	(%r9), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movl	(%r11), %edx
	movw	$2287, BasicBlockSignatureTracker # imm = 0x8EF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %edx
	jne	.LBB2_105
# %bb.99:                               #   in Loop: Header=BB2_95 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$23, %dx
	cmpw	$2296, %dx              # imm = 0x8F8
	jne	.LBB2_180
# %bb.100:                              # %nk_attacked.split438
                                        #   in Loop: Header=BB2_95 Depth=1
	movl	(%rax), %edx
	andl	$1, %edx
	movw	$2296, BasicBlockSignatureTracker # imm = 0x8F8
	movw	$23, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jne	.LBB2_105
# %bb.101:                              # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4594, %ax              # imm = 0x11F2
	cmpw	$6410, %ax              # imm = 0x190A
	jne	.LBB2_181
# %bb.102:                              # %nk_attacked.split442
	movw	$6410, BasicBlockSignatureTracker # imm = 0x190A
	movw	$4594, RunTimeSignatureAdjuster # imm = 0x11F2
# %bb.103:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$2300, %ax              # imm = 0x8FC
	jne	.LBB2_181
# %bb.104:                              # %nk_attacked.split536
	movl	$1, (%r8)
	movw	$2300, BasicBlockSignatureTracker # imm = 0x8FC
	movw	$4049, RunTimeSignatureAdjuster # imm = 0xFD1
	jmp	.LBB2_169
.LBB2_105:                              #   in Loop: Header=BB2_95 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$491, %dx               # imm = 0x1EB
	xorw	%si, %dx
	cmpw	$2308, %dx              # imm = 0x904
	jne	.LBB2_180
# %bb.106:                              # %nk_attacked.split440
                                        #   in Loop: Header=BB2_95 Depth=1
	movw	$2308, BasicBlockSignatureTracker # imm = 0x904
	movw	$0, RunTimeSignatureAdjuster
.LBB2_107:                              #   Parent Loop BB2_95 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$3, %dx
	xorw	%si, %dx
	cmpw	$2311, %dx              # imm = 0x907
	jne	.LBB2_179
# %bb.108:                              # %nk_attacked.split444
                                        #   in Loop: Header=BB2_107 Depth=2
	movl	(%r11), %edx
	movw	$2311, BasicBlockSignatureTracker # imm = 0x907
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB2_123
# %bb.109:                              #   in Loop: Header=BB2_107 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$24, %dx
	cmpw	$2335, %dx              # imm = 0x91F
	jne	.LBB2_179
# %bb.110:                              # %nk_attacked.split446
                                        #   in Loop: Header=BB2_107 Depth=2
	movl	(%r11), %edx
	movw	$2335, BasicBlockSignatureTracker # imm = 0x91F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %edx
	je	.LBB2_113
# %bb.111:                              #   in Loop: Header=BB2_107 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$51, %dx
	cmpw	$2348, %dx              # imm = 0x92C
	jne	.LBB2_179
# %bb.112:                              # %nk_attacked.split452
                                        #   in Loop: Header=BB2_107 Depth=2
	movl	(%r11), %edx
	movw	$2348, BasicBlockSignatureTracker # imm = 0x92C
	movw	$51, RunTimeSignatureAdjuster
	cmpl	$10, %edx
	jne	.LBB2_115
.LBB2_113:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$46, %ax
	xorw	%cx, %ax
	cmpw	$2353, %ax              # imm = 0x931
	jne	.LBB2_181
# %bb.114:                              # %nk_attacked.split450
	movl	$1, (%r8)
	movw	$2353, BasicBlockSignatureTracker # imm = 0x931
	movw	$3612, RunTimeSignatureAdjuster # imm = 0xE1C
	jmp	.LBB2_169
.LBB2_115:                              # %Buffer__4
                                        #   in Loop: Header=BB2_107 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$30847, %dx             # imm = 0x787F
	cmpw	$29011, %dx             # imm = 0x7153
	jne	.LBB2_179
# %bb.116:                              # %nk_attacked.split454
                                        #   in Loop: Header=BB2_107 Depth=2
	movw	$29011, BasicBlockSignatureTracker # imm = 0x7153
	movw	$30847, RunTimeSignatureAdjuster # imm = 0x787F
# %bb.117:                              #   in Loop: Header=BB2_107 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$30, %dx
	xorw	%si, %dx
	cmpw	$2354, %dx              # imm = 0x932
	jne	.LBB2_179
# %bb.118:                              # %nk_attacked.split538
                                        #   in Loop: Header=BB2_107 Depth=2
	movl	(%r11), %edx
	movw	$2354, BasicBlockSignatureTracker # imm = 0x932
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	je	.LBB2_121
# %bb.119:                              #   in Loop: Header=BB2_95 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$11, %dx
	cmpw	$2361, %dx              # imm = 0x939
	jne	.LBB2_180
# %bb.120:                              # %nk_attacked.split456
                                        #   in Loop: Header=BB2_95 Depth=1
	movw	$2361, BasicBlockSignatureTracker # imm = 0x939
	movw	$62, RunTimeSignatureAdjuster
	jmp	.LBB2_124
.LBB2_121:                              #   in Loop: Header=BB2_107 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$120, %dx
	cmpw	$2378, %dx              # imm = 0x94A
	jne	.LBB2_179
# %bb.122:                              # %nk_attacked.split458
                                        #   in Loop: Header=BB2_107 Depth=2
	movl	(%r9), %edx
	addl	(%r10), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movw	$2378, BasicBlockSignatureTracker # imm = 0x94A
	movw	$78, RunTimeSignatureAdjuster
	jmp	.LBB2_107
.LBB2_123:                              # %.loopexit11
                                        #   in Loop: Header=BB2_95 Depth=1
	jmp	.LBB2_124
.LBB2_124:                              #   in Loop: Header=BB2_95 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$89, %dx
	xorw	%si, %dx
	cmpw	$2398, %dx              # imm = 0x95E
	jne	.LBB2_180
# %bb.125:                              # %nk_attacked.split448
                                        #   in Loop: Header=BB2_95 Depth=1
	movw	$2398, BasicBlockSignatureTracker # imm = 0x95E
	movw	$0, RunTimeSignatureAdjuster
# %bb.126:                              #   in Loop: Header=BB2_95 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$57, %dx
	cmpw	$2407, %dx              # imm = 0x967
	jne	.LBB2_180
# %bb.127:                              # %nk_attacked.split460
                                        #   in Loop: Header=BB2_95 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$2407, BasicBlockSignatureTracker # imm = 0x967
	movw	$391, RunTimeSignatureAdjuster # imm = 0x187
	jmp	.LBB2_95
.LBB2_128:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$408, %dx               # imm = 0x198
	cmpw	$2420, %dx              # imm = 0x974
	jne	.LBB2_181
# %bb.129:                              # %nk_attacked.split436
	movl	$0, (%rax)
	movw	$2420, BasicBlockSignatureTracker # imm = 0x974
	movw	$0, RunTimeSignatureAdjuster
.LBB2_130:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$3, %dx
	xorw	%si, %dx
	cmpw	$2423, %dx              # imm = 0x977
	jne	.LBB2_178
# %bb.131:                              # %nk_attacked.split462
                                        #   in Loop: Header=BB2_130 Depth=1
	movl	(%rax), %edx
	movw	$2423, BasicBlockSignatureTracker # imm = 0x977
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %edx
	jge	.LBB2_140
# %bb.132:                              #   in Loop: Header=BB2_130 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$253, %dx
	cmpw	$2442, %dx              # imm = 0x98A
	jne	.LBB2_178
# %bb.133:                              # %nk_attacked.split464
                                        #   in Loop: Header=BB2_130 Depth=1
	movl	(%rcx), %edx
	movslq	(%rax), %rsi
	addl	nk_attacked.knight_o(,%rsi,4), %edx
	movslq	%edx, %rdx
	movl	board(,%rdx,4), %edx
	movw	$2442, BasicBlockSignatureTracker # imm = 0x98A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jne	.LBB2_136
# %bb.134:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$2444, %ax              # imm = 0x98C
	jne	.LBB2_181
# %bb.135:                              # %nk_attacked.split468
	movl	$1, (%r8)
	movw	$2444, BasicBlockSignatureTracker # imm = 0x98C
	movw	$3745, RunTimeSignatureAdjuster # imm = 0xEA1
	jmp	.LBB2_169
.LBB2_136:                              #   in Loop: Header=BB2_130 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$31, %dx
	cmpw	$2453, %dx              # imm = 0x995
	jne	.LBB2_178
# %bb.137:                              # %nk_attacked.split470
                                        #   in Loop: Header=BB2_130 Depth=1
	movw	$2453, BasicBlockSignatureTracker # imm = 0x995
	movw	$0, RunTimeSignatureAdjuster
# %bb.138:                              #   in Loop: Header=BB2_130 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$48, %dx
	cmpw	$2469, %dx              # imm = 0x9A5
	jne	.LBB2_178
# %bb.139:                              # %nk_attacked.split472
                                        #   in Loop: Header=BB2_130 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$2469, BasicBlockSignatureTracker # imm = 0x9A5
	movw	$209, RunTimeSignatureAdjuster
	jmp	.LBB2_130
.LBB2_140:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$189, %dx
	cmpw	$2506, %dx              # imm = 0x9CA
	jne	.LBB2_181
# %bb.141:                              # %nk_attacked.split466
	movl	$0, (%rax)
	movw	$2506, BasicBlockSignatureTracker # imm = 0x9CA
	movw	$0, RunTimeSignatureAdjuster
.LBB2_142:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB2_146 Depth 2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$27, %dx
	xorw	%si, %dx
	cmpw	$2513, %dx              # imm = 0x9D1
	jne	.LBB2_177
# %bb.143:                              # %nk_attacked.split474
                                        #   in Loop: Header=BB2_142 Depth=1
	movl	(%rax), %edx
	movw	$2513, BasicBlockSignatureTracker # imm = 0x9D1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jge	.LBB2_167
# %bb.144:                              #   in Loop: Header=BB2_142 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$3, %dx
	cmpw	$2514, %dx              # imm = 0x9D2
	jne	.LBB2_177
# %bb.145:                              # %nk_attacked.split476
                                        #   in Loop: Header=BB2_142 Depth=1
	movslq	(%rax), %rdx
	movl	nk_attacked.rook_o(,%rdx,4), %edx
	movl	%edx, (%r9)
	movl	(%rcx), %edx
	movslq	(%rax), %rsi
	addl	nk_attacked.rook_o(,%rsi,4), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movw	$2514, BasicBlockSignatureTracker # imm = 0x9D2
	movw	$0, RunTimeSignatureAdjuster
.LBB2_146:                              #   Parent Loop BB2_142 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$10, %dx
	xorw	%si, %dx
	cmpw	$2520, %dx              # imm = 0x9D8
	jne	.LBB2_176
# %bb.147:                              # %nk_attacked.split480
                                        #   in Loop: Header=BB2_146 Depth=2
	movl	(%r11), %edx
	movw	$2520, BasicBlockSignatureTracker # imm = 0x9D8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB2_162
# %bb.148:                              #   in Loop: Header=BB2_146 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$57, %dx
	cmpw	$2529, %dx              # imm = 0x9E1
	jne	.LBB2_176
# %bb.149:                              # %nk_attacked.split482
                                        #   in Loop: Header=BB2_146 Depth=2
	movl	(%r11), %edx
	movw	$2529, BasicBlockSignatureTracker # imm = 0x9E1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %edx
	je	.LBB2_152
# %bb.150:                              #   in Loop: Header=BB2_146 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$3, %dx
	cmpw	$2530, %dx              # imm = 0x9E2
	jne	.LBB2_176
# %bb.151:                              # %nk_attacked.split488
                                        #   in Loop: Header=BB2_146 Depth=2
	movl	(%r11), %edx
	movw	$2530, BasicBlockSignatureTracker # imm = 0x9E2
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$10, %edx
	jne	.LBB2_154
.LBB2_152:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$2546, %ax              # imm = 0x9F2
	jne	.LBB2_181
# %bb.153:                              # %nk_attacked.split486
	movl	$1, (%r8)
	movw	$2546, BasicBlockSignatureTracker # imm = 0x9F2
	movw	$3807, RunTimeSignatureAdjuster # imm = 0xEDF
	jmp	.LBB2_169
.LBB2_154:                              # %Buffer__5
                                        #   in Loop: Header=BB2_146 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$26047, %dx             # imm = 0x65BF
	cmpw	$27741, %dx             # imm = 0x6C5D
	jne	.LBB2_176
# %bb.155:                              # %nk_attacked.split490
                                        #   in Loop: Header=BB2_146 Depth=2
	movw	$27741, BasicBlockSignatureTracker # imm = 0x6C5D
	movw	$26047, RunTimeSignatureAdjuster # imm = 0x65BF
# %bb.156:                              #   in Loop: Header=BB2_146 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$28, %dx
	xorw	%si, %dx
	cmpw	$2558, %dx              # imm = 0x9FE
	jne	.LBB2_176
# %bb.157:                              # %nk_attacked.split540
                                        #   in Loop: Header=BB2_146 Depth=2
	movl	(%r11), %edx
	movw	$2558, BasicBlockSignatureTracker # imm = 0x9FE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	je	.LBB2_160
# %bb.158:                              #   in Loop: Header=BB2_142 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$1021, %dx              # imm = 0x3FD
	cmpw	$2563, %dx              # imm = 0xA03
	jne	.LBB2_177
# %bb.159:                              # %nk_attacked.split492
                                        #   in Loop: Header=BB2_142 Depth=1
	movw	$2563, BasicBlockSignatureTracker # imm = 0xA03
	movw	$987, RunTimeSignatureAdjuster # imm = 0x3DB
	jmp	.LBB2_163
.LBB2_160:                              #   in Loop: Header=BB2_146 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$1007, %dx              # imm = 0x3EF
	cmpw	$2577, %dx              # imm = 0xA11
	jne	.LBB2_176
# %bb.161:                              # %nk_attacked.split494
                                        #   in Loop: Header=BB2_146 Depth=2
	movl	(%r9), %edx
	addl	(%r10), %edx
	movl	%edx, (%r10)
	movslq	(%r10), %rdx
	movl	board(,%rdx,4), %edx
	movl	%edx, (%r11)
	movw	$2577, BasicBlockSignatureTracker # imm = 0xA11
	movw	$963, RunTimeSignatureAdjuster # imm = 0x3C3
	jmp	.LBB2_146
.LBB2_162:                              # %.loopexit7
                                        #   in Loop: Header=BB2_142 Depth=1
	jmp	.LBB2_163
.LBB2_163:                              #   in Loop: Header=BB2_142 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$970, %dx               # imm = 0x3CA
	xorw	%si, %dx
	cmpw	$2578, %dx              # imm = 0xA12
	jne	.LBB2_177
# %bb.164:                              # %nk_attacked.split484
                                        #   in Loop: Header=BB2_142 Depth=1
	movw	$2578, BasicBlockSignatureTracker # imm = 0xA12
	movw	$0, RunTimeSignatureAdjuster
# %bb.165:                              #   in Loop: Header=BB2_142 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$12, %dx
	cmpw	$2590, %dx              # imm = 0xA1E
	jne	.LBB2_177
# %bb.166:                              # %nk_attacked.split496
                                        #   in Loop: Header=BB2_142 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$2590, BasicBlockSignatureTracker # imm = 0xA1E
	movw	$980, RunTimeSignatureAdjuster # imm = 0x3D4
	jmp	.LBB2_142
.LBB2_167:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$994, %ax               # imm = 0x3E2
	cmpw	$2611, %ax              # imm = 0xA33
	jne	.LBB2_181
# %bb.168:                              # %nk_attacked.split478
	movl	$0, (%r8)
	movw	$2611, BasicBlockSignatureTracker # imm = 0xA33
	movw	$3358, RunTimeSignatureAdjuster # imm = 0xD1E
.LBB2_169:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3353, %ax              # imm = 0xD19
	xorw	%cx, %ax
	cmpw	$2612, %ax              # imm = 0xA34
	jne	.LBB2_181
# %bb.170:                              # %nk_attacked.split376
	movl	(%r8), %eax
	movw	$2612, BasicBlockSignatureTracker # imm = 0xA34
	movw	$10374, RunTimeSignatureAdjuster # imm = 0x2886
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB2_171:                              # %CFerrorHandler.nk_attacked.loopexit
	jmp	.LBB2_181
.LBB2_172:                              # %CFerrorHandler.nk_attacked.loopexit1
	jmp	.LBB2_181
.LBB2_173:                              # %CFerrorHandler.nk_attacked.loopexit2
	jmp	.LBB2_181
.LBB2_174:                              # %CFerrorHandler.nk_attacked.loopexit3
	jmp	.LBB2_181
.LBB2_175:                              # %CFerrorHandler.nk_attacked.loopexit5
	jmp	.LBB2_181
.LBB2_176:                              # %CFerrorHandler.nk_attacked.loopexit6
	jmp	.LBB2_181
.LBB2_177:                              # %CFerrorHandler.nk_attacked.loopexit8
	jmp	.LBB2_181
.LBB2_178:                              # %CFerrorHandler.nk_attacked.loopexit9
	jmp	.LBB2_181
.LBB2_179:                              # %CFerrorHandler.nk_attacked.loopexit10
	jmp	.LBB2_181
.LBB2_180:                              # %CFerrorHandler.nk_attacked.loopexit12
	jmp	.LBB2_181
.LBB2_181:                              # %CFerrorHandler.nk_attacked
	callq	FAULT_DETECTED_CFC
.Lfunc_end2:
	.size	nk_attacked, .Lfunc_end2-nk_attacked
	.cfi_endproc
                                        # -- End function
	.globl	init_book               # -- Begin function init_book
	.p2align	4, 0x90
	.type	init_book,@function
init_book:                              # @init_book
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	$2624, BasicBlockSignatureTracker # imm = 0xA40
	movw	$0, RunTimeSignatureAdjuster
	movl	$1, %eax
	popq	%rbp
	retq
.Lfunc_end3:
	.size	init_book, .Lfunc_end3-init_book
	.cfi_endproc
                                        # -- End function
	.globl	choose_book_move        # -- Begin function choose_book_move
	.p2align	4, 0x90
	.type	choose_book_move,@function
choose_book_move:                       # @choose_book_move
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	dummy, %rax
	movq	%rax, (%rdi)
	movq	dummy+8, %rax
	movq	%rax, 8(%rdi)
	movq	dummy+16, %rax
	movq	%rax, 16(%rdi)
	movw	$2661, BasicBlockSignatureTracker # imm = 0xA65
	movw	$0, RunTimeSignatureAdjuster
	movq	%rdi, %rax
	popq	%rbp
	retq
.Lfunc_end4:
	.size	choose_book_move, .Lfunc_end4-choose_book_move
	.cfi_endproc
                                        # -- End function
	.globl	ProcessHoldings         # -- Begin function ProcessHoldings
	.p2align	4, 0x90
	.type	ProcessHoldings,@function
ProcessHoldings:                        # @ProcessHoldings
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1383, %ax              # imm = 0x567
	xorw	%cx, %ax
	cmpw	$2707, %ax              # imm = 0xA93
	jne	.LBB5_101
# %bb.1:                                # %ProcessHoldings.split286
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1383, %ax              # imm = 0x567
	xorw	%cx, %ax
	cmpw	$2707, %ax              # imm = 0xA93
	jne	.LBB5_101
# %bb.2:                                # %ProcessHoldings.split284
	movabsq	$holding, %rax
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rdi, (%r14)
	movl	$0, (%r15)
	movq	%rax, %rdi
	xorl	%esi, %esi
	movl	$128, %edx
	callq	memset
	movl	$-1056969216, hold_hash # imm = 0xC0FFEE00
	movl	$0, white_hand_eval
	movl	$0, black_hand_eval
	movw	$2707, BasicBlockSignatureTracker # imm = 0xA93
	movw	$0, RunTimeSignatureAdjuster
	callq	reset_ecache
	movw	$2707, BasicBlockSignatureTracker # imm = 0xA93
	movw	$0, RunTimeSignatureAdjuster
	movl	$0, num_holding
	movl	$0, num_holding+4
	movl	$0, (%rbx)
	movw	$2707, BasicBlockSignatureTracker # imm = 0xA93
	movw	$0, RunTimeSignatureAdjuster
.LBB5_3:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB5_7 Depth 2
                                        #     Child Loop BB5_17 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$2708, %ax              # imm = 0xA94
	jne	.LBB5_100
# %bb.4:                                # %ProcessHoldings.split
                                        #   in Loop: Header=BB5_3 Depth=1
	movl	(%rbx), %eax
	movw	$2708, BasicBlockSignatureTracker # imm = 0xA94
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jg	.LBB5_40
# %bb.5:                                #   in Loop: Header=BB5_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$2710, %ax              # imm = 0xA96
	jne	.LBB5_100
# %bb.6:                                # %ProcessHoldings.split196
                                        #   in Loop: Header=BB5_3 Depth=1
	movw	$2710, BasicBlockSignatureTracker # imm = 0xA96
	movw	$0, RunTimeSignatureAdjuster
.LBB5_7:                                #   Parent Loop BB5_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$2716, %ax              # imm = 0xA9C
	jne	.LBB5_99
# %bb.8:                                # %ProcessHoldings.split200
                                        #   in Loop: Header=BB5_7 Depth=2
	movq	(%r14), %rax
	movl	(%r15), %ecx
	movl	%ecx, %edx
	addl	$1, %edx
	movl	%edx, (%r15)
	movslq	%ecx, %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$2716, BasicBlockSignatureTracker # imm = 0xA9C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$91, %eax
	je	.LBB5_15
# %bb.9:                                #   in Loop: Header=BB5_7 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$2718, %ax              # imm = 0xA9E
	jne	.LBB5_99
# %bb.10:                               # %ProcessHoldings.split202
                                        #   in Loop: Header=BB5_7 Depth=2
	movq	(%r14), %rax
	movslq	(%r15), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$2718, BasicBlockSignatureTracker # imm = 0xA9E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_13
# %bb.11:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$2748, %ax              # imm = 0xABC
	jne	.LBB5_101
# %bb.12:                               # %ProcessHoldings.split206
	movw	$2748, BasicBlockSignatureTracker # imm = 0xABC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB5_96
.LBB5_13:                               #   in Loop: Header=BB5_7 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$2789, %ax              # imm = 0xAE5
	jne	.LBB5_99
# %bb.14:                               # %ProcessHoldings.split208
                                        #   in Loop: Header=BB5_7 Depth=2
	movw	$2789, BasicBlockSignatureTracker # imm = 0xAE5
	movw	$115, RunTimeSignatureAdjuster
	jmp	.LBB5_7
.LBB5_15:                               #   in Loop: Header=BB5_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$106, %ax
	cmpw	$2806, %ax              # imm = 0xAF6
	jne	.LBB5_100
# %bb.16:                               # %ProcessHoldings.split204
                                        #   in Loop: Header=BB5_3 Depth=1
	movw	$2806, BasicBlockSignatureTracker # imm = 0xAF6
	movw	$0, RunTimeSignatureAdjuster
.LBB5_17:                               #   Parent Loop BB5_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$2808, %ax              # imm = 0xAF8
	jne	.LBB5_98
# %bb.18:                               # %ProcessHoldings.split212
                                        #   in Loop: Header=BB5_17 Depth=2
	movq	(%r14), %rax
	movslq	(%r15), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$2808, BasicBlockSignatureTracker # imm = 0xAF8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$93, %eax
	je	.LBB5_36
# %bb.19:                               #   in Loop: Header=BB5_17 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$505, %ax               # imm = 0x1F9
	cmpw	$2817, %ax              # imm = 0xB01
	jne	.LBB5_98
# %bb.20:                               # %ProcessHoldings.split214
                                        #   in Loop: Header=BB5_17 Depth=2
	movq	(%r14), %rax
	movslq	(%r15), %rcx
	movl	%ecx, %edx
	addl	$1, %edx
	movl	%edx, (%r15)
	movsbl	(%rax,%rcx), %eax
	movw	$2817, BasicBlockSignatureTracker(%rip) # imm = 0xB01
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-66, %eax
	movl	%eax, %ecx
	subl	$48, %ecx
	ja	.LBB5_32
# %bb.21:                               # %ProcessHoldings.split214
                                        #   in Loop: Header=BB5_17 Depth=2
	movq	.LJTI5_0(,%rax,8), %rax
	jmpq	*%rax
.LBB5_22:                               #   in Loop: Header=BB5_17 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$2819, %ax              # imm = 0xB03
	jne	.LBB5_98
# %bb.23:                               # %ProcessHoldings.split220
                                        #   in Loop: Header=BB5_17 Depth=2
	movl	$2, %r9d
	movl	$1, %r8d
	movabsq	$holding, %rsi
	movabsq	$zobrist, %rdx
	movslq	(%rbx), %rdi
	shlq	$6, %rdi
	movq	%rsi, %rcx
	addq	%rdi, %rcx
	movl	(%rbx), %edi
	cmpl	$0, %edi
	movl	$2, %edi
	cmovel	%r8d, %edi
	movslq	%edi, %rdi
	movl	(%rcx,%rdi,4), %eax
	addl	$1, %eax
	movl	%eax, (%rcx,%rdi,4)
	movslq	(%rbx), %rax
	movl	num_holding(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, num_holding(,%rax,4)
	movl	(%rbx), %eax
	cmpl	$0, %eax
	movl	$2, %eax
	cmovel	%r8d, %eax
	cltq
	imulq	$576, %rax, %rax        # imm = 0x240
	addq	%rax, %rdx
	movslq	(%rbx), %rax
	shlq	$6, %rax
	addq	%rax, %rsi
	movl	(%rbx), %eax
	cmpl	$0, %eax
	cmovel	%r8d, %r9d
	movslq	%r9d, %rax
	movslq	(%rsi,%rax,4), %rax
	movl	(%rdx,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$2819, BasicBlockSignatureTracker # imm = 0xB03
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB5_34
.LBB5_24:                               #   in Loop: Header=BB5_17 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$2827, %ax              # imm = 0xB0B
	jne	.LBB5_98
# %bb.25:                               # %ProcessHoldings.split222
                                        #   in Loop: Header=BB5_17 Depth=2
	movl	$10, %r9d
	movl	$9, %r8d
	movabsq	$holding, %rsi
	movabsq	$zobrist, %rdx
	movslq	(%rbx), %rdi
	shlq	$6, %rdi
	movq	%rsi, %rcx
	addq	%rdi, %rcx
	movl	(%rbx), %edi
	cmpl	$0, %edi
	movl	$10, %edi
	cmovel	%r8d, %edi
	movslq	%edi, %rdi
	movl	(%rcx,%rdi,4), %eax
	addl	$1, %eax
	movl	%eax, (%rcx,%rdi,4)
	movslq	(%rbx), %rax
	movl	num_holding(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, num_holding(,%rax,4)
	movl	(%rbx), %eax
	cmpl	$0, %eax
	movl	$10, %eax
	cmovel	%r8d, %eax
	cltq
	imulq	$576, %rax, %rax        # imm = 0x240
	addq	%rax, %rdx
	movslq	(%rbx), %rax
	shlq	$6, %rax
	addq	%rax, %rsi
	movl	(%rbx), %eax
	cmpl	$0, %eax
	cmovel	%r8d, %r9d
	movslq	%r9d, %rax
	movslq	(%rsi,%rax,4), %rax
	movl	(%rdx,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$2827, BasicBlockSignatureTracker # imm = 0xB0B
	movw	$8, RunTimeSignatureAdjuster
	jmp	.LBB5_34
.LBB5_26:                               #   in Loop: Header=BB5_17 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$2831, %ax              # imm = 0xB0F
	jne	.LBB5_98
# %bb.27:                               # %ProcessHoldings.split224
                                        #   in Loop: Header=BB5_17 Depth=2
	movl	$8, %r9d
	movl	$7, %r8d
	movabsq	$holding, %rsi
	movabsq	$zobrist, %rdx
	movslq	(%rbx), %rdi
	shlq	$6, %rdi
	movq	%rsi, %rcx
	addq	%rdi, %rcx
	movl	(%rbx), %edi
	cmpl	$0, %edi
	movl	$8, %edi
	cmovel	%r8d, %edi
	movslq	%edi, %rdi
	movl	(%rcx,%rdi,4), %eax
	addl	$1, %eax
	movl	%eax, (%rcx,%rdi,4)
	movslq	(%rbx), %rax
	movl	num_holding(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, num_holding(,%rax,4)
	movl	(%rbx), %eax
	cmpl	$0, %eax
	movl	$8, %eax
	cmovel	%r8d, %eax
	cltq
	imulq	$576, %rax, %rax        # imm = 0x240
	addq	%rax, %rdx
	movslq	(%rbx), %rax
	shlq	$6, %rax
	addq	%rax, %rsi
	movl	(%rbx), %eax
	cmpl	$0, %eax
	cmovel	%r8d, %r9d
	movslq	%r9d, %rax
	movslq	(%rsi,%rax,4), %rax
	movl	(%rdx,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$2831, BasicBlockSignatureTracker # imm = 0xB0F
	movw	$12, RunTimeSignatureAdjuster
	jmp	.LBB5_34
.LBB5_28:                               #   in Loop: Header=BB5_17 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$2843, %ax              # imm = 0xB1B
	jne	.LBB5_98
# %bb.29:                               # %ProcessHoldings.split226
                                        #   in Loop: Header=BB5_17 Depth=2
	movl	$12, %r9d
	movl	$11, %r8d
	movabsq	$holding, %rsi
	movabsq	$zobrist, %rdx
	movslq	(%rbx), %rdi
	shlq	$6, %rdi
	movq	%rsi, %rcx
	addq	%rdi, %rcx
	movl	(%rbx), %edi
	cmpl	$0, %edi
	movl	$12, %edi
	cmovel	%r8d, %edi
	movslq	%edi, %rdi
	movl	(%rcx,%rdi,4), %eax
	addl	$1, %eax
	movl	%eax, (%rcx,%rdi,4)
	movslq	(%rbx), %rax
	movl	num_holding(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, num_holding(,%rax,4)
	movl	(%rbx), %eax
	cmpl	$0, %eax
	movl	$12, %eax
	cmovel	%r8d, %eax
	cltq
	imulq	$576, %rax, %rax        # imm = 0x240
	addq	%rax, %rdx
	movslq	(%rbx), %rax
	shlq	$6, %rax
	addq	%rax, %rsi
	movl	(%rbx), %eax
	cmpl	$0, %eax
	cmovel	%r8d, %r9d
	movslq	%r9d, %rax
	movslq	(%rsi,%rax,4), %rax
	movl	(%rdx,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$2843, BasicBlockSignatureTracker # imm = 0xB1B
	movw	$24, RunTimeSignatureAdjuster
	jmp	.LBB5_34
.LBB5_30:                               #   in Loop: Header=BB5_17 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$50, %ax
	xorw	%cx, %ax
	cmpw	$2867, %ax              # imm = 0xB33
	jne	.LBB5_98
# %bb.31:                               # %ProcessHoldings.split228
                                        #   in Loop: Header=BB5_17 Depth=2
	movl	$4, %r9d
	movl	$3, %r8d
	movabsq	$holding, %rsi
	movabsq	$zobrist, %rdx
	movslq	(%rbx), %rdi
	shlq	$6, %rdi
	movq	%rsi, %rcx
	addq	%rdi, %rcx
	movl	(%rbx), %edi
	cmpl	$0, %edi
	movl	$4, %edi
	cmovel	%r8d, %edi
	movslq	%edi, %rdi
	movl	(%rcx,%rdi,4), %eax
	addl	$1, %eax
	movl	%eax, (%rcx,%rdi,4)
	movslq	(%rbx), %rax
	movl	num_holding(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, num_holding(,%rax,4)
	movl	(%rbx), %eax
	cmpl	$0, %eax
	movl	$4, %eax
	cmovel	%r8d, %eax
	cltq
	imulq	$576, %rax, %rax        # imm = 0x240
	addq	%rax, %rdx
	movslq	(%rbx), %rax
	shlq	$6, %rax
	addq	%rax, %rsi
	movl	(%rbx), %eax
	cmpl	$0, %eax
	cmovel	%r8d, %r9d
	movslq	%r9d, %rax
	movslq	(%rsi,%rax,4), %rax
	movl	(%rdx,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$2867, BasicBlockSignatureTracker # imm = 0xB33
	movw	$48, RunTimeSignatureAdjuster
	jmp	.LBB5_34
.LBB5_32:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$2868, %ax              # imm = 0xB34
	jne	.LBB5_101
# %bb.33:                               # %ProcessHoldings.split218
	movw	$2868, BasicBlockSignatureTracker # imm = 0xB34
	movw	$392, RunTimeSignatureAdjuster # imm = 0x188
	jmp	.LBB5_96
.LBB5_34:                               #   in Loop: Header=BB5_17 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$52, %ax
	xorw	%cx, %ax
	cmpw	$2871, %ax              # imm = 0xB37
	jne	.LBB5_98
# %bb.35:                               # %ProcessHoldings.split230
                                        #   in Loop: Header=BB5_17 Depth=2
	movw	$2871, BasicBlockSignatureTracker # imm = 0xB37
	movw	$449, RunTimeSignatureAdjuster # imm = 0x1C1
	jmp	.LBB5_17
.LBB5_36:                               #   in Loop: Header=BB5_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$452, %ax               # imm = 0x1C4
	cmpw	$2876, %ax              # imm = 0xB3C
	jne	.LBB5_100
# %bb.37:                               # %ProcessHoldings.split216
                                        #   in Loop: Header=BB5_3 Depth=1
	movw	$2876, BasicBlockSignatureTracker # imm = 0xB3C
	movw	$0, RunTimeSignatureAdjuster
# %bb.38:                               #   in Loop: Header=BB5_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$2878, %ax              # imm = 0xB3E
	jne	.LBB5_100
# %bb.39:                               # %ProcessHoldings.split232
                                        #   in Loop: Header=BB5_3 Depth=1
	movl	(%rbx), %eax
	addl	$1, %eax
	movl	%eax, (%rbx)
	movw	$2878, BasicBlockSignatureTracker # imm = 0xB3E
	movw	$429, RunTimeSignatureAdjuster # imm = 0x1AD
	jmp	.LBB5_3
.LBB5_40:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$478, %ax               # imm = 0x1DE
	cmpw	$2890, %ax              # imm = 0xB4A
	jne	.LBB5_101
# %bb.41:                               # %ProcessHoldings.split198
	movl	Variant, %eax
	movw	$2890, BasicBlockSignatureTracker # imm = 0xB4A
	movw	$502, RunTimeSignatureAdjuster # imm = 0x1F6
	cmpl	$1, %eax
	jne	.LBB5_96
# %bb.42:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22784, %ax             # imm = 0x5900
	cmpw	$21066, %ax             # imm = 0x524A
	jne	.LBB5_101
# %bb.43:                               # %ProcessHoldings.split234
	movw	$21066, BasicBlockSignatureTracker # imm = 0x524A
	movw	$22784, RunTimeSignatureAdjuster # imm = 0x5900
# %bb.44:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$2912, %ax              # imm = 0xB60
	jne	.LBB5_101
# %bb.45:                               # %ProcessHoldings.split288
	movl	userealholdings, %eax
	movw	$2912, BasicBlockSignatureTracker # imm = 0xB60
	movw	$476, RunTimeSignatureAdjuster # imm = 0x1DC
	cmpl	$0, %eax
	jne	.LBB5_96
# %bb.46:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8278, %ax             # imm = 0xDFAA
	cmpw	$-11062, %ax            # imm = 0xD4CA
	jne	.LBB5_101
# %bb.47:                               # %ProcessHoldings.split236
	movw	$-11062, BasicBlockSignatureTracker # imm = 0xD4CA
	movw	$-8278, RunTimeSignatureAdjuster # imm = 0xDFAA
# %bb.48:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$2921, %ax              # imm = 0xB69
	jne	.LBB5_101
# %bb.49:                               # %ProcessHoldings.split290
	movabsq	$realholdings, %rdi
	movq	(%r14), %rsi
	movl	$200, %edx
	callq	strncpy
	movl	comp_color, %eax
	movw	$2921, BasicBlockSignatureTracker # imm = 0xB69
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB5_72
# %bb.50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$2936, %ax              # imm = 0xB78
	jne	.LBB5_101
# %bb.51:                               # %ProcessHoldings.split238
	movl	holding+72, %eax
	movw	$2936, BasicBlockSignatureTracker # imm = 0xB78
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_54
# %bb.52:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$2939, %ax              # imm = 0xB7B
	jne	.LBB5_101
# %bb.53:                               # %ProcessHoldings.split242
	movl	holding+72, %eax
	addl	$1, %eax
	movl	%eax, holding+72
	movl	num_holding+4, %eax
	addl	$1, %eax
	movl	%eax, num_holding+4
	movslq	holding+72, %rax
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$2939, BasicBlockSignatureTracker # imm = 0xB7B
	movw	$3, RunTimeSignatureAdjuster
.LBB5_54:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$240, %ax
	xorw	%cx, %ax
	cmpw	$2952, %ax              # imm = 0xB88
	jne	.LBB5_101
# %bb.55:                               # %ProcessHoldings.split244
	movl	holding+112, %eax
	movw	$2952, BasicBlockSignatureTracker # imm = 0xB88
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_58
# %bb.56:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$2966, %ax              # imm = 0xB96
	jne	.LBB5_101
# %bb.57:                               # %ProcessHoldings.split246
	movl	holding+112, %eax
	addl	$1, %eax
	movl	%eax, holding+112
	movl	num_holding+4, %eax
	addl	$1, %eax
	movl	%eax, num_holding+4
	movslq	holding+112, %rax
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$2966, BasicBlockSignatureTracker # imm = 0xB96
	movw	$30, RunTimeSignatureAdjuster
.LBB5_58:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$2979, %ax              # imm = 0xBA3
	jne	.LBB5_101
# %bb.59:                               # %ProcessHoldings.split248
	movl	holding+80, %eax
	movw	$2979, BasicBlockSignatureTracker # imm = 0xBA3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_62
# %bb.60:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$2982, %ax              # imm = 0xBA6
	jne	.LBB5_101
# %bb.61:                               # %ProcessHoldings.split250
	movl	holding+80, %eax
	addl	$1, %eax
	movl	%eax, holding+80
	movl	num_holding+4, %eax
	addl	$1, %eax
	movl	%eax, num_holding+4
	movslq	holding+80, %rax
	movl	zobrist+2304(,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$2982, BasicBlockSignatureTracker # imm = 0xBA6
	movw	$5, RunTimeSignatureAdjuster
.LBB5_62:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$2988, %ax              # imm = 0xBAC
	jne	.LBB5_101
# %bb.63:                               # %ProcessHoldings.split252
	movl	holding+96, %eax
	movw	$2988, BasicBlockSignatureTracker # imm = 0xBAC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_66
# %bb.64:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$2993, %ax              # imm = 0xBB1
	jne	.LBB5_101
# %bb.65:                               # %ProcessHoldings.split254
	movl	holding+96, %eax
	addl	$1, %eax
	movl	%eax, holding+96
	movl	num_holding+4, %eax
	addl	$1, %eax
	movl	%eax, num_holding+4
	movslq	holding+96, %rax
	movl	zobrist+2304(,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$2993, BasicBlockSignatureTracker # imm = 0xBB1
	movw	$29, RunTimeSignatureAdjuster
.LBB5_66:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$2996, %ax              # imm = 0xBB4
	jne	.LBB5_101
# %bb.67:                               # %ProcessHoldings.split256
	movl	holding+104, %eax
	movw	$2996, BasicBlockSignatureTracker # imm = 0xBB4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_70
# %bb.68:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$113, %ax
	cmpw	$3013, %ax              # imm = 0xBC5
	jne	.LBB5_101
# %bb.69:                               # %ProcessHoldings.split258
	movl	holding+104, %eax
	addl	$1, %eax
	movl	%eax, holding+104
	movl	num_holding+4, %eax
	addl	$1, %eax
	movl	%eax, num_holding+4
	movslq	holding+104, %rax
	movl	zobrist+2304(,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$3013, BasicBlockSignatureTracker # imm = 0xBC5
	movw	$113, RunTimeSignatureAdjuster
.LBB5_70:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$120, %ax
	xorw	%cx, %ax
	cmpw	$3020, %ax              # imm = 0xBCC
	jne	.LBB5_101
# %bb.71:                               # %ProcessHoldings.split260
	movw	$3020, BasicBlockSignatureTracker # imm = 0xBCC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB5_94
.LBB5_72:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$167, %ax
	cmpw	$3022, %ax              # imm = 0xBCE
	jne	.LBB5_101
# %bb.73:                               # %ProcessHoldings.split240
	movl	holding+36, %eax
	movw	$3022, BasicBlockSignatureTracker # imm = 0xBCE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_76
# %bb.74:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$3029, %ax              # imm = 0xBD5
	jne	.LBB5_101
# %bb.75:                               # %ProcessHoldings.split264
	movl	holding+36, %eax
	addl	$1, %eax
	movl	%eax, holding+36
	movl	num_holding, %eax
	addl	$1, %eax
	movl	%eax, num_holding
	movslq	holding+36, %rax
	movl	zobrist+5184(,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$3029, BasicBlockSignatureTracker # imm = 0xBD5
	movw	$27, RunTimeSignatureAdjuster
.LBB5_76:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$3032, %ax              # imm = 0xBD8
	jne	.LBB5_101
# %bb.77:                               # %ProcessHoldings.split266
	movl	holding+28, %eax
	movw	$3032, BasicBlockSignatureTracker # imm = 0xBD8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_80
# %bb.78:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$3037, %ax              # imm = 0xBDD
	jne	.LBB5_101
# %bb.79:                               # %ProcessHoldings.split268
	movl	holding+28, %eax
	addl	$1, %eax
	movl	%eax, holding+28
	movl	num_holding, %eax
	addl	$1, %eax
	movl	%eax, num_holding
	movslq	holding+28, %rax
	movl	zobrist+5184(,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$3037, BasicBlockSignatureTracker # imm = 0xBDD
	movw	$5, RunTimeSignatureAdjuster
.LBB5_80:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$3053, %ax              # imm = 0xBED
	jne	.LBB5_101
# %bb.81:                               # %ProcessHoldings.split270
	movl	holding+44, %eax
	movw	$3053, BasicBlockSignatureTracker # imm = 0xBED
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_84
# %bb.82:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$3055, %ax              # imm = 0xBEF
	jne	.LBB5_101
# %bb.83:                               # %ProcessHoldings.split272
	movl	holding+44, %eax
	addl	$1, %eax
	movl	%eax, holding+44
	movl	num_holding, %eax
	addl	$1, %eax
	movl	%eax, num_holding
	movslq	holding+44, %rax
	movl	zobrist+5184(,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$3055, BasicBlockSignatureTracker # imm = 0xBEF
	movw	$2, RunTimeSignatureAdjuster
.LBB5_84:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$3056, %ax              # imm = 0xBF0
	jne	.LBB5_101
# %bb.85:                               # %ProcessHoldings.split274
	movl	holding+12, %eax
	movw	$3056, BasicBlockSignatureTracker # imm = 0xBF0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_88
# %bb.86:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$3059, %ax              # imm = 0xBF3
	jne	.LBB5_101
# %bb.87:                               # %ProcessHoldings.split276
	movl	holding+12, %eax
	addl	$1, %eax
	movl	%eax, holding+12
	movl	num_holding, %eax
	addl	$1, %eax
	movl	%eax, num_holding
	movslq	holding+12, %rax
	movl	zobrist+5184(,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$3059, BasicBlockSignatureTracker # imm = 0xBF3
	movw	$3, RunTimeSignatureAdjuster
.LBB5_88:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$3062, %ax              # imm = 0xBF6
	jne	.LBB5_101
# %bb.89:                               # %ProcessHoldings.split278
	movl	holding+4, %eax
	movw	$3062, BasicBlockSignatureTracker # imm = 0xBF6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB5_92
# %bb.90:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$3063, %ax              # imm = 0xBF7
	jne	.LBB5_101
# %bb.91:                               # %ProcessHoldings.split280
	movl	holding+4, %eax
	addl	$1, %eax
	movl	%eax, holding+4
	movl	num_holding, %eax
	addl	$1, %eax
	movl	%eax, num_holding
	movslq	holding+4, %rax
	movl	zobrist+5184(,%rax,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movw	$3063, BasicBlockSignatureTracker # imm = 0xBF7
	movw	$1, RunTimeSignatureAdjuster
.LBB5_92:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$3069, %ax              # imm = 0xBFD
	jne	.LBB5_101
# %bb.93:                               # %ProcessHoldings.split282
	movw	$3069, BasicBlockSignatureTracker # imm = 0xBFD
	movw	$49, RunTimeSignatureAdjuster
.LBB5_94:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1997, %ax              # imm = 0x7CD
	xorw	%cx, %ax
	cmpw	$3073, %ax              # imm = 0xC01
	jne	.LBB5_101
# %bb.95:                               # %ProcessHoldings.split262
	movw	$3073, BasicBlockSignatureTracker # imm = 0xC01
	movw	$1725, RunTimeSignatureAdjuster # imm = 0x6BD
.LBB5_96:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1693, %ax              # imm = 0x69D
	xorw	%cx, %ax
	cmpw	$3105, %ax              # imm = 0xC21
	jne	.LBB5_101
# %bb.97:                               # %ProcessHoldings.split210
	movw	$3105, BasicBlockSignatureTracker # imm = 0xC21
	movw	$-14808, RunTimeSignatureAdjuster # imm = 0xC628
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB5_98:                               # %CFerrorHandler.ProcessHoldings.loopexit
	jmp	.LBB5_101
.LBB5_99:                               # %CFerrorHandler.ProcessHoldings.loopexit1
	jmp	.LBB5_101
.LBB5_100:                              # %CFerrorHandler.ProcessHoldings.loopexit2
	jmp	.LBB5_101
.LBB5_101:                              # %CFerrorHandler.ProcessHoldings
	callq	FAULT_DETECTED_CFC
.Lfunc_end5:
	.size	ProcessHoldings, .Lfunc_end5-ProcessHoldings
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI5_0:
	.quad	.LBB5_28
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_30
	.quad	.LBB5_32
	.quad	.LBB5_22
	.quad	.LBB5_24
	.quad	.LBB5_26
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_28
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_32
	.quad	.LBB5_30
	.quad	.LBB5_32
	.quad	.LBB5_22
	.quad	.LBB5_24
	.quad	.LBB5_26
                                        # -- End function
	.text
	.globl	text_to_piece           # -- Begin function text_to_piece
	.p2align	4, 0x90
	.type	text_to_piece,@function
text_to_piece:                          # @text_to_piece
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movb	%dil, -1(%rbp)
	movl	%esi, -12(%rbp)
	movsbl	-1(%rbp), %eax
	movw	$3168, BasicBlockSignatureTracker(%rip) # imm = 0xC60
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-66, %eax
	movl	%eax, %ecx
	subl	$48, %ecx
	ja	.LBB6_12
# %bb.1:
	movq	.LJTI6_0(,%rax,8), %rax
	jmpq	*%rax
.LBB6_2:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$3173, %ax              # imm = 0xC65
	jne	.LBB6_16
# %bb.3:                                # %text_to_piece.split31
	movl	$2, %eax
	movl	$1, %ecx
	movl	-12(%rbp), %edx
	cmpl	$0, %edx
	cmovel	%ecx, %eax
	movl	%eax, -8(%rbp)
	movw	$3173, BasicBlockSignatureTracker # imm = 0xC65
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB6_14
.LBB6_4:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$3187, %ax              # imm = 0xC73
	jne	.LBB6_16
# %bb.5:                                # %text_to_piece.split33
	movl	$12, %eax
	movl	$11, %ecx
	movl	-12(%rbp), %edx
	cmpl	$0, %edx
	cmovel	%ecx, %eax
	movl	%eax, -8(%rbp)
	movw	$3187, BasicBlockSignatureTracker # imm = 0xC73
	movw	$22, RunTimeSignatureAdjuster
	jmp	.LBB6_14
.LBB6_6:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$224, %ax
	xorw	%cx, %ax
	cmpw	$3200, %ax              # imm = 0xC80
	jne	.LBB6_16
# %bb.7:                                # %text_to_piece.split35
	movl	$4, %eax
	movl	$3, %ecx
	movl	-12(%rbp), %edx
	cmpl	$0, %edx
	cmovel	%ecx, %eax
	movl	%eax, -8(%rbp)
	movw	$3200, BasicBlockSignatureTracker # imm = 0xC80
	movw	$229, RunTimeSignatureAdjuster
	jmp	.LBB6_14
.LBB6_8:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$231, %ax
	xorw	%cx, %ax
	cmpw	$3207, %ax              # imm = 0xC87
	jne	.LBB6_16
# %bb.9:                                # %text_to_piece.split37
	movl	$8, %eax
	movl	$7, %ecx
	movl	-12(%rbp), %edx
	cmpl	$0, %edx
	cmovel	%ecx, %eax
	movl	%eax, -8(%rbp)
	movw	$3207, BasicBlockSignatureTracker # imm = 0xC87
	movw	$226, RunTimeSignatureAdjuster
	jmp	.LBB6_14
.LBB6_10:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$232, %ax
	xorw	%cx, %ax
	cmpw	$3208, %ax              # imm = 0xC88
	jne	.LBB6_16
# %bb.11:                               # %text_to_piece.split39
	movl	$10, %eax
	movl	$9, %ecx
	movl	-12(%rbp), %edx
	cmpl	$0, %edx
	cmovel	%ecx, %eax
	movl	%eax, -8(%rbp)
	movw	$3208, BasicBlockSignatureTracker # imm = 0xC88
	movw	$237, RunTimeSignatureAdjuster
	jmp	.LBB6_14
.LBB6_12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$244, %ax
	cmpw	$3220, %ax              # imm = 0xC94
	jne	.LBB6_16
# %bb.13:                               # %text_to_piece.split
	movl	$13, -8(%rbp)
	movw	$3220, BasicBlockSignatureTracker # imm = 0xC94
	movw	$241, RunTimeSignatureAdjuster
.LBB6_14:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$198, %ax
	xorw	%cx, %ax
	cmpw	$3235, %ax              # imm = 0xCA3
	jne	.LBB6_16
# %bb.15:                               # %text_to_piece.split41
	movl	-8(%rbp), %eax
	movw	$3235, BasicBlockSignatureTracker # imm = 0xCA3
	movw	$0, RunTimeSignatureAdjuster
	addq	$16, %rsp
	popq	%rbp
	retq
.LBB6_16:                               # %CFerrorHandler.text_to_piece
	callq	FAULT_DETECTED_CFC
.Lfunc_end6:
	.size	text_to_piece, .Lfunc_end6-text_to_piece
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI6_0:
	.quad	.LBB6_4
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_6
	.quad	.LBB6_12
	.quad	.LBB6_2
	.quad	.LBB6_10
	.quad	.LBB6_8
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_4
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_12
	.quad	.LBB6_6
	.quad	.LBB6_12
	.quad	.LBB6_2
	.quad	.LBB6_10
	.quad	.LBB6_8
                                        # -- End function
	.text
	.globl	SwitchColor             # -- Begin function SwitchColor
	.p2align	4, 0x90
	.type	SwitchColor,@function
SwitchColor:                            # @SwitchColor
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27068, %ax             # imm = 0x69BC
	xorw	%cx, %ax
	cmpw	$3259, %ax              # imm = 0xCBB
	jne	.LBB7_3
# %bb.1:                                # %SwitchColor.split8
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27068, %ax             # imm = 0x69BC
	xorw	%cx, %ax
	cmpw	$3259, %ax              # imm = 0xCBB
	jne	.LBB7_3
# %bb.2:                                # %SwitchColor.split
	movabsq	$.LSwitchColor.t, %rsi
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-64, %rbx
	movq	%rbx, %rsp
	movl	%edi, (%r14)
	movq	%rbx, %rdi
	movl	$52, %edx
	callq	memcpy
	movslq	(%r14), %rax
	movl	(%rbx,%rax,4), %eax
	movw	$3259, BasicBlockSignatureTracker # imm = 0xCBB
	movw	$26726, RunTimeSignatureAdjuster # imm = 0x6866
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB7_3:                                # %CFerrorHandler.SwitchColor
	callq	FAULT_DETECTED_CFC
.Lfunc_end7:
	.size	SwitchColor, .Lfunc_end7-SwitchColor
	.cfi_endproc
                                        # -- End function
	.globl	SwitchPromoted          # -- Begin function SwitchPromoted
	.p2align	4, 0x90
	.type	SwitchPromoted,@function
SwitchPromoted:                         # @SwitchPromoted
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26667, %ax             # imm = 0x682B
	xorw	%cx, %ax
	cmpw	$3270, %ax              # imm = 0xCC6
	jne	.LBB8_3
# %bb.1:                                # %SwitchPromoted.split8
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26667, %ax             # imm = 0x682B
	xorw	%cx, %ax
	cmpw	$3270, %ax              # imm = 0xCC6
	jne	.LBB8_3
# %bb.2:                                # %SwitchPromoted.split
	movabsq	$.LSwitchPromoted.t, %rsi
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-64, %rbx
	movq	%rbx, %rsp
	movl	%edi, (%r14)
	movq	%rbx, %rdi
	movl	$52, %edx
	callq	memcpy
	movslq	(%r14), %rax
	movl	(%rbx,%rax,4), %eax
	movw	$3270, BasicBlockSignatureTracker # imm = 0xCC6
	movw	$26651, RunTimeSignatureAdjuster # imm = 0x681B
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB8_3:                                # %CFerrorHandler.SwitchPromoted
	callq	FAULT_DETECTED_CFC
.Lfunc_end8:
	.size	SwitchPromoted, .Lfunc_end8-SwitchPromoted
	.cfi_endproc
                                        # -- End function
	.globl	addHolding              # -- Begin function addHolding
	.p2align	4, 0x90
	.type	addHolding,@function
addHolding:                             # @addHolding
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26687, %ax             # imm = 0x683F
	xorw	%cx, %ax
	cmpw	$3282, %ax              # imm = 0xCD2
	jne	.LBB9_15
# %bb.1:                                # %addHolding.split51
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26687, %ax             # imm = 0x683F
	xorw	%cx, %ax
	cmpw	$3282, %ax              # imm = 0xCD2
	jne	.LBB9_15
# %bb.2:                                # %addHolding.split49
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26687, %ax             # imm = 0x683F
	xorw	%cx, %ax
	cmpw	$3282, %ax              # imm = 0xCD2
	jne	.LBB9_15
# %bb.3:                                # %addHolding.split47
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26687, %ax             # imm = 0x683F
	xorw	%cx, %ax
	cmpw	$3282, %ax              # imm = 0xCD2
	jne	.LBB9_15
# %bb.4:                                # %addHolding.split45
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movl	%edi, (%rax)
	movl	%esi, (%rcx)
	movl	Variant, %edx
	movw	$3282, BasicBlockSignatureTracker # imm = 0xCD2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jne	.LBB9_7
# %bb.5:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$7, %dx
	cmpw	$3285, %dx              # imm = 0xCD5
	jne	.LBB9_15
# %bb.6:                                # %addHolding.split
	movabsq	$holding, %r9
	movabsq	$zobrist, %r8
	movslq	(%rcx), %rdi
	shlq	$6, %rdi
	movq	%r9, %rdx
	addq	%rdi, %rdx
	movslq	(%rax), %rdi
	movl	(%rdx,%rdi,4), %esi
	addl	$1, %esi
	movl	%esi, (%rdx,%rdi,4)
	movslq	(%rcx), %rdx
	movl	num_holding(,%rdx,4), %esi
	addl	$1, %esi
	movl	%esi, num_holding(,%rdx,4)
	movslq	(%rax), %rdx
	imulq	$576, %rdx, %rdx        # imm = 0x240
	addq	%rdx, %r8
	movslq	(%rcx), %rdx
	shlq	$6, %rdx
	addq	%rdx, %r9
	movslq	(%rax), %rdx
	movslq	(%r9,%rdx,4), %rdx
	movl	(%r8,%rdx,4), %edx
	xorl	hold_hash, %edx
	movl	%edx, hold_hash
	movw	$3285, BasicBlockSignatureTracker # imm = 0xCD5
	movw	$7, RunTimeSignatureAdjuster
.LBB9_7:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$60, %dx
	xorw	%si, %dx
	cmpw	$3310, %dx              # imm = 0xCEE
	jne	.LBB9_15
# %bb.8:                                # %addHolding.split37
	movl	(%rcx), %ecx
	movw	$3310, BasicBlockSignatureTracker # imm = 0xCEE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	jne	.LBB9_11
# %bb.9:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$25, %cx
	cmpw	$3319, %cx              # imm = 0xCF7
	jne	.LBB9_15
# %bb.10:                               # %addHolding.split39
	movslq	(%rax), %rcx
	movl	hand_value(,%rcx,4), %ecx
	addl	white_hand_eval, %ecx
	movl	%ecx, white_hand_eval
	movw	$3319, BasicBlockSignatureTracker # imm = 0xCF7
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB9_13
.LBB9_11:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$20, %cx
	cmpw	$3322, %cx              # imm = 0xCFA
	jne	.LBB9_15
# %bb.12:                               # %addHolding.split41
	movslq	(%rax), %rcx
	movl	hand_value(,%rcx,4), %ecx
	addl	black_hand_eval, %ecx
	movl	%ecx, black_hand_eval
	movw	$3322, BasicBlockSignatureTracker # imm = 0xCFA
	movw	$13, RunTimeSignatureAdjuster
.LBB9_13:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$9, %cx
	xorw	%dx, %cx
	cmpw	$3326, %cx              # imm = 0xCFE
	jne	.LBB9_15
# %bb.14:                               # %addHolding.split43
	movslq	(%rax), %rax
	movl	material(,%rax,4), %eax
	addl	Material, %eax
	movl	%eax, Material
	movw	$3326, BasicBlockSignatureTracker # imm = 0xCFE
	movw	$26659, RunTimeSignatureAdjuster # imm = 0x6823
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB9_15:                               # %CFerrorHandler.addHolding
	callq	FAULT_DETECTED_CFC
.Lfunc_end9:
	.size	addHolding, .Lfunc_end9-addHolding
	.cfi_endproc
                                        # -- End function
	.globl	removeHolding           # -- Begin function removeHolding
	.p2align	4, 0x90
	.type	removeHolding,@function
removeHolding:                          # @removeHolding
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27633, %ax             # imm = 0x6BF1
	xorw	%cx, %ax
	cmpw	$3400, %ax              # imm = 0xD48
	jne	.LBB10_15
# %bb.1:                                # %removeHolding.split51
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27633, %ax             # imm = 0x6BF1
	xorw	%cx, %ax
	cmpw	$3400, %ax              # imm = 0xD48
	jne	.LBB10_15
# %bb.2:                                # %removeHolding.split49
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27633, %ax             # imm = 0x6BF1
	xorw	%cx, %ax
	cmpw	$3400, %ax              # imm = 0xD48
	jne	.LBB10_15
# %bb.3:                                # %removeHolding.split47
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27633, %ax             # imm = 0x6BF1
	xorw	%cx, %ax
	cmpw	$3400, %ax              # imm = 0xD48
	jne	.LBB10_15
# %bb.4:                                # %removeHolding.split45
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movl	%edi, (%rax)
	movl	%esi, (%rcx)
	movl	Variant, %edx
	movw	$3400, BasicBlockSignatureTracker # imm = 0xD48
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jne	.LBB10_7
# %bb.5:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$6, %dx
	cmpw	$3406, %dx              # imm = 0xD4E
	jne	.LBB10_15
# %bb.6:                                # %removeHolding.split
	movabsq	$holding, %rsi
	movabsq	$zobrist, %r8
	movslq	(%rax), %rdi
	imulq	$576, %rdi, %rdi        # imm = 0x240
	addq	%rdi, %r8
	movslq	(%rcx), %rdi
	shlq	$6, %rdi
	movq	%rsi, %rdx
	addq	%rdi, %rdx
	movslq	(%rax), %rdi
	movslq	(%rdx,%rdi,4), %rdx
	movl	(%r8,%rdx,4), %edx
	xorl	hold_hash, %edx
	movl	%edx, hold_hash
	movslq	(%rcx), %rdx
	shlq	$6, %rdx
	addq	%rdx, %rsi
	movslq	(%rax), %rdx
	movl	(%rsi,%rdx,4), %edi
	addl	$-1, %edi
	movl	%edi, (%rsi,%rdx,4)
	movslq	(%rcx), %rdx
	movl	num_holding(,%rdx,4), %esi
	addl	$-1, %esi
	movl	%esi, num_holding(,%rdx,4)
	movw	$3406, BasicBlockSignatureTracker # imm = 0xD4E
	movw	$6, RunTimeSignatureAdjuster
.LBB10_7:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$19, %dx
	xorw	%si, %dx
	cmpw	$3419, %dx              # imm = 0xD5B
	jne	.LBB10_15
# %bb.8:                                # %removeHolding.split37
	movl	(%rcx), %ecx
	movw	$3419, BasicBlockSignatureTracker # imm = 0xD5B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	jne	.LBB10_11
# %bb.9:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$63, %cx
	cmpw	$3428, %cx              # imm = 0xD64
	jne	.LBB10_15
# %bb.10:                               # %removeHolding.split39
	movslq	(%rax), %rcx
	movl	hand_value(,%rcx,4), %ecx
	movl	white_hand_eval, %edx
	subl	%ecx, %edx
	movl	%edx, white_hand_eval
	movw	$3428, BasicBlockSignatureTracker # imm = 0xD64
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB10_13
.LBB10_11:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$62, %cx
	cmpw	$3429, %cx              # imm = 0xD65
	jne	.LBB10_15
# %bb.12:                               # %removeHolding.split41
	movslq	(%rax), %rcx
	movl	hand_value(,%rcx,4), %ecx
	movl	black_hand_eval, %edx
	subl	%ecx, %edx
	movl	%edx, black_hand_eval
	movw	$3429, BasicBlockSignatureTracker # imm = 0xD65
	movw	$1, RunTimeSignatureAdjuster
.LBB10_13:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$15, %cx
	xorw	%dx, %cx
	cmpw	$3435, %cx              # imm = 0xD6B
	jne	.LBB10_15
# %bb.14:                               # %removeHolding.split43
	movslq	(%rax), %rax
	movl	material(,%rax,4), %eax
	movl	Material, %ecx
	subl	%eax, %ecx
	movl	%ecx, Material
	movw	$3435, BasicBlockSignatureTracker # imm = 0xD6B
	movw	$27603, RunTimeSignatureAdjuster # imm = 0x6BD3
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB10_15:                              # %CFerrorHandler.removeHolding
	callq	FAULT_DETECTED_CFC
.Lfunc_end10:
	.size	removeHolding, .Lfunc_end10-removeHolding
	.cfi_endproc
                                        # -- End function
	.globl	DropaddHolding          # -- Begin function DropaddHolding
	.p2align	4, 0x90
	.type	DropaddHolding,@function
DropaddHolding:                         # @DropaddHolding
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27408, %ax             # imm = 0x6B10
	xorw	%cx, %ax
	cmpw	$3484, %ax              # imm = 0xD9C
	jne	.LBB11_13
# %bb.1:                                # %DropaddHolding.split53
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27408, %ax             # imm = 0x6B10
	xorw	%cx, %ax
	cmpw	$3484, %ax              # imm = 0xD9C
	jne	.LBB11_13
# %bb.2:                                # %DropaddHolding.split51
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27408, %ax             # imm = 0x6B10
	xorw	%cx, %ax
	cmpw	$3484, %ax              # imm = 0xD9C
	jne	.LBB11_13
# %bb.3:                                # %DropaddHolding.split49
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27408, %ax             # imm = 0x6B10
	xorw	%cx, %ax
	cmpw	$3484, %ax              # imm = 0xD9C
	jne	.LBB11_13
# %bb.4:                                # %DropaddHolding.split47
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27408, %ax             # imm = 0x6B10
	xorw	%cx, %ax
	cmpw	$3484, %ax              # imm = 0xD9C
	jne	.LBB11_13
# %bb.5:                                # %DropaddHolding.split45
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27408, %ax             # imm = 0x6B10
	xorw	%cx, %ax
	cmpw	$3484, %ax              # imm = 0xD9C
	jne	.LBB11_13
# %bb.6:                                # %DropaddHolding.split43
	movabsq	$holding, %r9
	movabsq	$zobrist, %r8
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movl	%edi, (%rax)
	movl	%esi, (%rdx)
	movslq	(%rdx), %rsi
	shlq	$6, %rsi
	movq	%r9, %rdi
	addq	%rsi, %rdi
	movslq	(%rax), %rsi
	movl	(%rdi,%rsi,4), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rdi,%rsi,4)
	movslq	(%rdx), %rcx
	movl	num_holding(,%rcx,4), %esi
	addl	$1, %esi
	movl	%esi, num_holding(,%rcx,4)
	movslq	(%rax), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %r8
	movslq	(%rdx), %rcx
	shlq	$6, %rcx
	addq	%rcx, %r9
	movslq	(%rax), %rcx
	movslq	(%r9,%rcx,4), %rcx
	movl	(%r8,%rcx,4), %ecx
	xorl	hold_hash, %ecx
	movl	%ecx, hold_hash
	movl	(%rdx), %ecx
	movw	$3484, BasicBlockSignatureTracker # imm = 0xD9C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	jne	.LBB11_9
# %bb.7:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$56, %cx
	cmpw	$3492, %cx              # imm = 0xDA4
	jne	.LBB11_13
# %bb.8:                                # %DropaddHolding.split
	movslq	(%rax), %rcx
	movl	hand_value(,%rcx,4), %ecx
	addl	white_hand_eval, %ecx
	movl	%ecx, white_hand_eval
	movw	$3492, BasicBlockSignatureTracker # imm = 0xDA4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB11_11
.LBB11_9:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$34, %cx
	cmpw	$3518, %cx              # imm = 0xDBE
	jne	.LBB11_13
# %bb.10:                               # %DropaddHolding.split39
	movslq	(%rax), %rcx
	movl	hand_value(,%rcx,4), %ecx
	addl	black_hand_eval, %ecx
	movl	%ecx, black_hand_eval
	movw	$3518, BasicBlockSignatureTracker # imm = 0xDBE
	movw	$26, RunTimeSignatureAdjuster
.LBB11_11:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$103, %cx
	xorw	%dx, %cx
	cmpw	$3523, %cx              # imm = 0xDC3
	jne	.LBB11_13
# %bb.12:                               # %DropaddHolding.split41
	movslq	(%rax), %rax
	movl	material(,%rax,4), %eax
	addl	Material, %eax
	movl	%eax, Material
	movw	$3523, BasicBlockSignatureTracker # imm = 0xDC3
	movw	$27459, RunTimeSignatureAdjuster # imm = 0x6B43
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB11_13:                              # %CFerrorHandler.DropaddHolding
	callq	FAULT_DETECTED_CFC
.Lfunc_end11:
	.size	DropaddHolding, .Lfunc_end11-DropaddHolding
	.cfi_endproc
                                        # -- End function
	.globl	DropremoveHolding       # -- Begin function DropremoveHolding
	.p2align	4, 0x90
	.type	DropremoveHolding,@function
DropremoveHolding:                      # @DropremoveHolding
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26968, %ax             # imm = 0x6958
	xorw	%cx, %ax
	cmpw	$3574, %ax              # imm = 0xDF6
	jne	.LBB12_13
# %bb.1:                                # %DropremoveHolding.split53
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26968, %ax             # imm = 0x6958
	xorw	%cx, %ax
	cmpw	$3574, %ax              # imm = 0xDF6
	jne	.LBB12_13
# %bb.2:                                # %DropremoveHolding.split51
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26968, %ax             # imm = 0x6958
	xorw	%cx, %ax
	cmpw	$3574, %ax              # imm = 0xDF6
	jne	.LBB12_13
# %bb.3:                                # %DropremoveHolding.split49
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26968, %ax             # imm = 0x6958
	xorw	%cx, %ax
	cmpw	$3574, %ax              # imm = 0xDF6
	jne	.LBB12_13
# %bb.4:                                # %DropremoveHolding.split47
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26968, %ax             # imm = 0x6958
	xorw	%cx, %ax
	cmpw	$3574, %ax              # imm = 0xDF6
	jne	.LBB12_13
# %bb.5:                                # %DropremoveHolding.split45
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26968, %ax             # imm = 0x6958
	xorw	%cx, %ax
	cmpw	$3574, %ax              # imm = 0xDF6
	jne	.LBB12_13
# %bb.6:                                # %DropremoveHolding.split43
	movabsq	$holding, %rcx
	movabsq	$zobrist, %rax
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movl	%edi, (%r8)
	movl	%esi, (%rdx)
	movslq	(%r8), %rsi
	imulq	$576, %rsi, %rsi        # imm = 0x240
	addq	%rsi, %rax
	movslq	(%rdx), %rsi
	shlq	$6, %rsi
	movq	%rcx, %rdi
	addq	%rsi, %rdi
	movslq	(%r8), %rsi
	movslq	(%rdi,%rsi,4), %rsi
	movl	(%rax,%rsi,4), %eax
	xorl	hold_hash, %eax
	movl	%eax, hold_hash
	movslq	(%rdx), %rax
	shlq	$6, %rax
	addq	%rax, %rcx
	movslq	(%r8), %rax
	movl	(%rcx,%rax,4), %esi
	addl	$-1, %esi
	movl	%esi, (%rcx,%rax,4)
	movslq	(%rdx), %rax
	movl	num_holding(,%rax,4), %ecx
	addl	$-1, %ecx
	movl	%ecx, num_holding(,%rax,4)
	movl	(%rdx), %eax
	movw	$3574, BasicBlockSignatureTracker # imm = 0xDF6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB12_9
# %bb.7:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$3581, %ax              # imm = 0xDFD
	jne	.LBB12_13
# %bb.8:                                # %DropremoveHolding.split
	movslq	(%r8), %rax
	movl	hand_value(,%rax,4), %eax
	movl	white_hand_eval, %ecx
	subl	%eax, %ecx
	movl	%ecx, white_hand_eval
	movw	$3581, BasicBlockSignatureTracker # imm = 0xDFD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB12_11
.LBB12_9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1013, %ax              # imm = 0x3F5
	cmpw	$3587, %ax              # imm = 0xE03
	jne	.LBB12_13
# %bb.10:                               # %DropremoveHolding.split39
	movslq	(%r8), %rax
	movl	hand_value(,%rax,4), %eax
	movl	black_hand_eval, %ecx
	subl	%eax, %ecx
	movl	%ecx, black_hand_eval
	movw	$3587, BasicBlockSignatureTracker # imm = 0xE03
	movw	$1022, RunTimeSignatureAdjuster # imm = 0x3FE
.LBB12_11:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$972, %ax               # imm = 0x3CC
	xorw	%cx, %ax
	cmpw	$3633, %ax              # imm = 0xE31
	jne	.LBB12_13
# %bb.12:                               # %DropremoveHolding.split41
	movslq	(%r8), %rax
	movl	material(,%rax,4), %eax
	movl	Material, %ecx
	subl	%eax, %ecx
	movl	%ecx, Material
	movw	$3633, BasicBlockSignatureTracker # imm = 0xE31
	movw	$27284, RunTimeSignatureAdjuster # imm = 0x6A94
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB12_13:                              # %CFerrorHandler.DropremoveHolding
	callq	FAULT_DETECTED_CFC
.Lfunc_end12:
	.size	DropremoveHolding, .Lfunc_end12-DropremoveHolding
	.cfi_endproc
                                        # -- End function
	.globl	printHolding            # -- Begin function printHolding
	.p2align	4, 0x90
	.type	printHolding,@function
printHolding:                           # @printHolding
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movabsq	$.L.str, %rdi
	movl	holding+4, %esi
	movl	holding+28, %edx
	movl	holding+44, %ecx
	movl	holding+12, %r8d
	movl	holding+36, %r9d
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.1, %rdi
	movl	holding+72, %esi
	movl	holding+96, %edx
	movl	holding+112, %ecx
	movl	holding+80, %r8d
	movl	holding+104, %r9d
	movb	$0, %al
	callq	printf
	movw	$3655, BasicBlockSignatureTracker # imm = 0xE47
	movw	$0, RunTimeSignatureAdjuster
	popq	%rbp
	retq
.Lfunc_end13:
	.size	printHolding, .Lfunc_end13-printHolding
	.cfi_endproc
                                        # -- End function
	.globl	is_draw                 # -- Begin function is_draw
	.p2align	4, 0x90
	.type	is_draw,@function
is_draw:                                # @is_draw
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-26856, %ax            # imm = 0x9718
	xorw	%cx, %ax
	cmpw	$3706, %ax              # imm = 0xE7A
	jne	.LBB14_59
# %bb.1:                                # %is_draw.split170
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-26856, %ax            # imm = 0x9718
	xorw	%cx, %ax
	cmpw	$3706, %ax              # imm = 0xE7A
	jne	.LBB14_59
# %bb.2:                                # %is_draw.split168
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-26856, %ax            # imm = 0x9718
	xorw	%cx, %ax
	cmpw	$3706, %ax              # imm = 0xE7A
	jne	.LBB14_59
# %bb.3:                                # %is_draw.split166
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-26856, %ax            # imm = 0x9718
	xorw	%cx, %ax
	cmpw	$3706, %ax              # imm = 0xE7A
	jne	.LBB14_59
# %bb.4:                                # %is_draw.split164
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %rdi
	addq	$-16, %rdi
	movq	%rdi, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movl	$0, (%rdi)
	movl	fifty, %eax
	movw	$3706, BasicBlockSignatureTracker # imm = 0xE7A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jl	.LBB14_29
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$3707, %ax              # imm = 0xE7B
	jne	.LBB14_59
# %bb.6:                                # %is_draw.split
	movl	move_number, %eax
	movl	move_number, %edx
	addl	ply, %edx
	subl	$1, %edx
	subl	fifty, %edx
	movw	$3707, BasicBlockSignatureTracker # imm = 0xE7B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jge	.LBB14_9
# %bb.7:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$229, %ax
	cmpw	$3742, %ax              # imm = 0xE9E
	jne	.LBB14_59
# %bb.8:                                # %is_draw.split116
	movl	move_number, %eax
	addl	ply, %eax
	subl	$1, %eax
	subl	fifty, %eax
	movl	%eax, (%rcx)
	movw	$3742, BasicBlockSignatureTracker # imm = 0xE9E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB14_11
.LBB14_9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$222, %ax
	cmpw	$3749, %ax              # imm = 0xEA5
	jne	.LBB14_59
# %bb.10:                               # %is_draw.split118
	movl	move_number, %eax
	movl	%eax, (%rcx)
	movw	$3749, BasicBlockSignatureTracker # imm = 0xEA5
	movw	$59, RunTimeSignatureAdjuster
.LBB14_11:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$53, %ax
	xorw	%dx, %ax
	cmpw	$3755, %ax              # imm = 0xEAB
	jne	.LBB14_59
# %bb.12:                               # %is_draw.split120
	movl	move_number, %eax
	addl	ply, %eax
	subl	$3, %eax
	movl	%eax, (%r9)
	movw	$3755, BasicBlockSignatureTracker # imm = 0xEAB
	movw	$0, RunTimeSignatureAdjuster
.LBB14_13:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$27, %ax
	xorw	%dx, %ax
	cmpw	$3760, %ax              # imm = 0xEB0
	jne	.LBB14_58
# %bb.14:                               # %is_draw.split122
                                        #   in Loop: Header=BB14_13 Depth=1
	xorl	%r10d, %r10d
	movl	(%r9), %edx
	movw	$3760, BasicBlockSignatureTracker # imm = 0xEB0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jl	.LBB14_17
# %bb.15:                               #   in Loop: Header=BB14_13 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$3768, %ax              # imm = 0xEB8
	jne	.LBB14_58
# %bb.16:                               # %is_draw.split124
                                        #   in Loop: Header=BB14_13 Depth=1
	movl	(%r9), %eax
	cmpl	(%rcx), %eax
	setge	%r10b
	movw	$3768, BasicBlockSignatureTracker # imm = 0xEB8
	movw	$8, RunTimeSignatureAdjuster
.LBB14_17:                              #   in Loop: Header=BB14_13 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %ax
	xorw	$122, %dx
	xorw	%ax, %dx
	cmpw	$3786, %dx              # imm = 0xECA
	jne	.LBB14_58
# %bb.18:                               # %is_draw.split126
                                        #   in Loop: Header=BB14_13 Depth=1
	movw	$3786, BasicBlockSignatureTracker # imm = 0xECA
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %r10b
	jne	.LBB14_19
	jmp	.LBB14_27
.LBB14_19:                              #   in Loop: Header=BB14_13 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$3803, %ax              # imm = 0xEDB
	jne	.LBB14_58
# %bb.20:                               # %is_draw.split128
                                        #   in Loop: Header=BB14_13 Depth=1
	movl	hash, %eax
	movslq	(%r9), %rdx
	movl	hash_history(,%rdx,4), %edx
	movw	$3803, BasicBlockSignatureTracker # imm = 0xEDB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB14_23
# %bb.21:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$3806, %ax              # imm = 0xEDE
	jne	.LBB14_59
# %bb.22:                               # %is_draw.split132
	movl	$1, (%r8)
	movw	$3806, BasicBlockSignatureTracker # imm = 0xEDE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB14_55
.LBB14_23:                              #   in Loop: Header=BB14_13 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$3810, %ax              # imm = 0xEE2
	jne	.LBB14_58
# %bb.24:                               # %is_draw.split134
                                        #   in Loop: Header=BB14_13 Depth=1
	movw	$3810, BasicBlockSignatureTracker # imm = 0xEE2
	movw	$0, RunTimeSignatureAdjuster
# %bb.25:                               #   in Loop: Header=BB14_13 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$3811, %ax              # imm = 0xEE3
	jne	.LBB14_58
# %bb.26:                               # %is_draw.split138
                                        #   in Loop: Header=BB14_13 Depth=1
	movl	(%r9), %eax
	subl	$2, %eax
	movl	%eax, (%r9)
	movw	$3811, BasicBlockSignatureTracker # imm = 0xEE3
	movw	$72, RunTimeSignatureAdjuster
	jmp	.LBB14_13
.LBB14_27:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$35, %ax
	cmpw	$3817, %ax              # imm = 0xEE9
	jne	.LBB14_59
# %bb.28:                               # %is_draw.split130
	movw	$3817, BasicBlockSignatureTracker # imm = 0xEE9
	movw	$147, RunTimeSignatureAdjuster
.LBB14_29:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$143, %ax
	xorw	%dx, %ax
	cmpw	$3829, %ax              # imm = 0xEF5
	jne	.LBB14_59
# %bb.30:                               # %is_draw.split114
	movl	fifty, %eax
	movw	$3829, BasicBlockSignatureTracker # imm = 0xEF5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jl	.LBB14_53
# %bb.31:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$3831, %ax              # imm = 0xEF7
	jne	.LBB14_59
# %bb.32:                               # %is_draw.split140
	movl	$2, %r10d
	movl	move_number, %r11d
	subl	$1, %r11d
	movl	ply, %eax
	cltd
	idivl	%r10d
	subl	%edx, %r11d
	movl	%r11d, (%rsi)
	movl	move_number, %eax
	addl	ply, %eax
	subl	$1, %eax
	subl	fifty, %eax
	movl	%eax, (%rcx)
	movl	(%rsi), %eax
	movl	%eax, (%r9)
	movw	$3831, BasicBlockSignatureTracker # imm = 0xEF7
	movw	$0, RunTimeSignatureAdjuster
.LBB14_33:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$14, %ax
	xorw	%dx, %ax
	cmpw	$3833, %ax              # imm = 0xEF9
	jne	.LBB14_57
# %bb.34:                               # %is_draw.split144
                                        #   in Loop: Header=BB14_33 Depth=1
	xorl	%eax, %eax
	movl	(%r9), %edx
	movw	$3833, BasicBlockSignatureTracker # imm = 0xEF9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jl	.LBB14_37
# %bb.35:                               #   in Loop: Header=BB14_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$508, %ax               # imm = 0x1FC
	cmpw	$3845, %ax              # imm = 0xF05
	jne	.LBB14_57
# %bb.36:                               # %is_draw.split146
                                        #   in Loop: Header=BB14_33 Depth=1
	movl	(%r9), %eax
	cmpl	(%rcx), %eax
	setge	%al
	movw	$3845, BasicBlockSignatureTracker # imm = 0xF05
	movw	$508, RunTimeSignatureAdjuster # imm = 0x1FC
.LBB14_37:                              #   in Loop: Header=BB14_33 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$494, %dx               # imm = 0x1EE
	xorw	%si, %dx
	cmpw	$3863, %dx              # imm = 0xF17
	jne	.LBB14_57
# %bb.38:                               # %is_draw.split148
                                        #   in Loop: Header=BB14_33 Depth=1
	movw	$3863, BasicBlockSignatureTracker # imm = 0xF17
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB14_39
	jmp	.LBB14_51
.LBB14_39:                              #   in Loop: Header=BB14_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$3864, %ax              # imm = 0xF18
	jne	.LBB14_57
# %bb.40:                               # %is_draw.split150
                                        #   in Loop: Header=BB14_33 Depth=1
	movl	hash, %eax
	movslq	(%r9), %rdx
	movl	hash_history(,%rdx,4), %edx
	movw	$3864, BasicBlockSignatureTracker # imm = 0xF18
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB14_43
# %bb.41:                               #   in Loop: Header=BB14_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$40, %ax
	cmpw	$3888, %ax              # imm = 0xF30
	jne	.LBB14_57
# %bb.42:                               # %is_draw.split154
                                        #   in Loop: Header=BB14_33 Depth=1
	movl	(%rdi), %eax
	addl	$1, %eax
	movl	%eax, (%rdi)
	movw	$3888, BasicBlockSignatureTracker # imm = 0xF30
	movw	$40, RunTimeSignatureAdjuster
.LBB14_43:                              #   in Loop: Header=BB14_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$42, %ax
	xorw	%dx, %ax
	cmpw	$3890, %ax              # imm = 0xF32
	jne	.LBB14_57
# %bb.44:                               # %is_draw.split156
                                        #   in Loop: Header=BB14_33 Depth=1
	movl	(%rdi), %eax
	movw	$3890, BasicBlockSignatureTracker # imm = 0xF32
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jl	.LBB14_47
# %bb.45:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$3911, %ax              # imm = 0xF47
	jne	.LBB14_59
# %bb.46:                               # %is_draw.split158
	movl	$1, (%r8)
	movw	$3911, BasicBlockSignatureTracker # imm = 0xF47
	movw	$409, RunTimeSignatureAdjuster # imm = 0x199
	jmp	.LBB14_55
.LBB14_47:                              #   in Loop: Header=BB14_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$101, %ax
	cmpw	$3927, %ax              # imm = 0xF57
	jne	.LBB14_57
# %bb.48:                               # %is_draw.split160
                                        #   in Loop: Header=BB14_33 Depth=1
	movw	$3927, BasicBlockSignatureTracker # imm = 0xF57
	movw	$0, RunTimeSignatureAdjuster
# %bb.49:                               #   in Loop: Header=BB14_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$3934, %ax              # imm = 0xF5E
	jne	.LBB14_57
# %bb.50:                               # %is_draw.split162
                                        #   in Loop: Header=BB14_33 Depth=1
	movl	(%r9), %eax
	subl	$2, %eax
	movl	%eax, (%r9)
	movw	$3934, BasicBlockSignatureTracker # imm = 0xF5E
	movw	$425, RunTimeSignatureAdjuster # imm = 0x1A9
	jmp	.LBB14_33
.LBB14_51:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$97, %ax
	cmpw	$3958, %ax              # imm = 0xF76
	jne	.LBB14_59
# %bb.52:                               # %is_draw.split152
	movw	$3958, BasicBlockSignatureTracker # imm = 0xF76
	movw	$387, RunTimeSignatureAdjuster # imm = 0x183
.LBB14_53:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$370, %ax               # imm = 0x172
	xorw	%cx, %ax
	cmpw	$3975, %ax              # imm = 0xF87
	jne	.LBB14_59
# %bb.54:                               # %is_draw.split142
	movl	$0, (%r8)
	movw	$3975, BasicBlockSignatureTracker # imm = 0xF87
	movw	$345, RunTimeSignatureAdjuster # imm = 0x159
.LBB14_55:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$369, %ax               # imm = 0x171
	xorw	%cx, %ax
	cmpw	$4015, %ax              # imm = 0xFAF
	jne	.LBB14_59
# %bb.56:                               # %is_draw.split136
	movl	(%r8), %eax
	movw	$4015, BasicBlockSignatureTracker # imm = 0xFAF
	movw	$-26891, RunTimeSignatureAdjuster # imm = 0x96F5
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB14_57:                              # %CFerrorHandler.is_draw.loopexit
	jmp	.LBB14_59
.LBB14_58:                              # %CFerrorHandler.is_draw.loopexit1
	jmp	.LBB14_59
.LBB14_59:                              # %CFerrorHandler.is_draw
	callq	FAULT_DETECTED_CFC
.Lfunc_end14:
	.size	is_draw, .Lfunc_end14-is_draw
	.cfi_endproc
                                        # -- End function
	.globl	storeECache             # -- Begin function storeECache
	.p2align	4, 0x90
	.type	storeECache,@function
storeECache:                            # @storeECache
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10932, %ax             # imm = 0x2AB4
	xorw	%cx, %ax
	cmpw	$4019, %ax              # imm = 0xFB3
	jne	.LBB15_5
# %bb.1:                                # %storeECache.split22
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10932, %ax             # imm = 0x2AB4
	xorw	%cx, %ax
	cmpw	$4019, %ax              # imm = 0xFB3
	jne	.LBB15_5
# %bb.2:                                # %storeECache.split20
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10932, %ax             # imm = 0x2AB4
	xorw	%cx, %ax
	cmpw	$4019, %ax              # imm = 0xFB3
	jne	.LBB15_5
# %bb.3:                                # %storeECache.split18
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10932, %ax             # imm = 0x2AB4
	xorw	%cx, %ax
	cmpw	$4019, %ax              # imm = 0xFB3
	jne	.LBB15_5
# %bb.4:                                # %storeECache.split
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movl	%edi, (%rcx)
	movl	hash, %eax
	xorl	%edx, %edx
	divl	ECacheSize
	movl	%edx, (%rsi)
	movl	hash, %eax
	movq	ECache, %rdx
	movslq	(%rsi), %rdi
	imulq	$12, %rdi, %rdi
	addq	%rdi, %rdx
	movl	%eax, (%rdx)
	movl	hold_hash, %eax
	movq	ECache, %rdx
	movslq	(%rsi), %rdi
	imulq	$12, %rdi, %rdi
	addq	%rdi, %rdx
	movl	%eax, 4(%rdx)
	movl	(%rcx), %eax
	movq	ECache, %rcx
	movslq	(%rsi), %rdx
	imulq	$12, %rdx, %rdx
	addq	%rdx, %rcx
	movl	%eax, 8(%rcx)
	movw	$4019, BasicBlockSignatureTracker # imm = 0xFB3
	movw	$11541, RunTimeSignatureAdjuster # imm = 0x2D15
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB15_5:                               # %CFerrorHandler.storeECache
	callq	FAULT_DETECTED_CFC
.Lfunc_end15:
	.size	storeECache, .Lfunc_end15-storeECache
	.cfi_endproc
                                        # -- End function
	.globl	checkECache             # -- Begin function checkECache
	.p2align	4, 0x90
	.type	checkECache,@function
checkECache:                            # @checkECache
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6312, %ax              # imm = 0x18A8
	xorw	%cx, %ax
	cmpw	$4033, %ax              # imm = 0xFC1
	jne	.LBB16_13
# %bb.1:                                # %checkECache.split44
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6312, %ax              # imm = 0x18A8
	xorw	%cx, %ax
	cmpw	$4033, %ax              # imm = 0xFC1
	jne	.LBB16_13
# %bb.2:                                # %checkECache.split42
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6312, %ax              # imm = 0x18A8
	xorw	%cx, %ax
	cmpw	$4033, %ax              # imm = 0xFC1
	jne	.LBB16_13
# %bb.3:                                # %checkECache.split40
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6312, %ax              # imm = 0x18A8
	xorw	%cx, %ax
	cmpw	$4033, %ax              # imm = 0xFC1
	jne	.LBB16_13
# %bb.4:                                # %checkECache.split38
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rdi, (%r8)
	movq	%rsi, (%r9)
	movl	ECacheProbes, %eax
	addl	$1, %eax
	movl	%eax, ECacheProbes
	movl	hash, %eax
	xorl	%edx, %edx
	divl	ECacheSize
	movl	%edx, (%rcx)
	movq	ECache, %rax
	movslq	(%rcx), %rdx
	imulq	$12, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movl	hash, %edx
	movw	$4033, BasicBlockSignatureTracker # imm = 0xFC1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB16_11
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$4048, %ax              # imm = 0xFD0
	jne	.LBB16_13
# %bb.6:                                # %checkECache.split
	movq	ECache, %rax
	movslq	(%rcx), %rdx
	imulq	$12, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movl	hold_hash, %edx
	movw	$4048, BasicBlockSignatureTracker # imm = 0xFD0
	movw	$17, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB16_11
# %bb.7:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14450, %ax            # imm = 0xC78E
	cmpw	$-14242, %ax            # imm = 0xC85E
	jne	.LBB16_13
# %bb.8:                                # %checkECache.split36
	movw	$-14242, BasicBlockSignatureTracker # imm = 0xC85E
	movw	$-14450, RunTimeSignatureAdjuster # imm = 0xC78E
# %bb.9:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$8, %ax
	xorw	%dx, %ax
	cmpw	$4056, %ax              # imm = 0xFD8
	jne	.LBB16_13
# %bb.10:                               # %checkECache.split46
	movl	ECacheHits, %eax
	addl	$1, %eax
	movl	%eax, ECacheHits
	movq	(%r9), %rax
	movl	$1, (%rax)
	movq	ECache, %rax
	movslq	(%rcx), %rcx
	imulq	$12, %rcx, %rcx
	addq	%rcx, %rax
	movl	8(%rax), %eax
	movq	(%r8), %rcx
	movl	%eax, (%rcx)
	movw	$4056, BasicBlockSignatureTracker # imm = 0xFD8
	movw	$25, RunTimeSignatureAdjuster
.LBB16_11:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$36, %ax
	xorw	%cx, %ax
	cmpw	$4069, %ax              # imm = 0xFE5
	jne	.LBB16_13
# %bb.12:                               # %checkECache.split34
	movw	$4069, BasicBlockSignatureTracker # imm = 0xFE5
	movw	$6323, RunTimeSignatureAdjuster # imm = 0x18B3
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB16_13:                              # %CFerrorHandler.checkECache
	callq	FAULT_DETECTED_CFC
.Lfunc_end16:
	.size	checkECache, .Lfunc_end16-checkECache
	.cfi_endproc
                                        # -- End function
	.globl	reset_ecache            # -- Begin function reset_ecache
	.p2align	4, 0x90
	.type	reset_ecache,@function
reset_ecache:                           # @reset_ecache
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1383, %ax              # imm = 0x567
	xorw	%cx, %ax
	cmpw	$4084, %ax              # imm = 0xFF4
	jne	.LBB17_7
# %bb.1:                                # %reset_ecache.split36
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1383, %ax              # imm = 0x567
	xorw	%cx, %ax
	cmpw	$4084, %ax              # imm = 0xFF4
	jne	.LBB17_7
# %bb.2:                                # %reset_ecache.split34
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1383, %ax              # imm = 0x567
	xorw	%cx, %ax
	cmpw	$4084, %ax              # imm = 0xFF4
	jne	.LBB17_7
# %bb.3:                                # %reset_ecache.split32
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1383, %ax              # imm = 0x567
	xorw	%cx, %ax
	cmpw	$4084, %ax              # imm = 0xFF4
	jne	.LBB17_7
# %bb.4:                                # %reset_ecache.split30
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1383, %ax              # imm = 0x567
	xorw	%cx, %ax
	cmpw	$4084, %ax              # imm = 0xFF4
	jne	.LBB17_7
# %bb.5:                                # %reset_ecache.split28
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1383, %ax              # imm = 0x567
	xorw	%cx, %ax
	cmpw	$4084, %ax              # imm = 0xFF4
	jne	.LBB17_7
# %bb.6:                                # %reset_ecache.split
	movq	ECache, %rdi
	movslq	ECacheSize, %rax
	imulq	$12, %rax, %rdx
	xorl	%esi, %esi
	callq	memset
	movw	$4084, BasicBlockSignatureTracker # imm = 0xFF4
	movw	$0, RunTimeSignatureAdjuster
	popq	%rbp
	retq
.LBB17_7:                               # %CFerrorHandler.reset_ecache
	callq	FAULT_DETECTED_CFC
.Lfunc_end17:
	.size	reset_ecache, .Lfunc_end17-reset_ecache
	.cfi_endproc
                                        # -- End function
	.globl	alloc_ecache            # -- Begin function alloc_ecache
	.p2align	4, 0x90
	.type	alloc_ecache,@function
alloc_ecache:                           # @alloc_ecache
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-18785, %ax            # imm = 0xB69F
	xorw	%cx, %ax
	cmpw	$4097, %ax              # imm = 0x1001
	jne	.LBB18_6
# %bb.1:                                # %alloc_ecache.split11
	movslq	ECacheSize, %rax
	imulq	$12, %rax, %rdi
	callq	malloc
	movq	%rax, ECache
	movq	ECache, %rax
	movw	$4097, BasicBlockSignatureTracker # imm = 0x1001
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB18_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$4098, %ax              # imm = 0x1002
	jne	.LBB18_6
# %bb.3:                                # %alloc_ecache.split
	movabsq	$.L.str.3, %rdi
	movb	$0, %al
	callq	printf
	movl	$1, %edi
	callq	exit
	movw	$4098, BasicBlockSignatureTracker # imm = 0x1002
	movw	$0, RunTimeSignatureAdjuster
.LBB18_4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$4109, %ax              # imm = 0x100D
	jne	.LBB18_6
# %bb.5:                                # %alloc_ecache.split9
	movw	$4109, BasicBlockSignatureTracker # imm = 0x100D
	movw	$1794, RunTimeSignatureAdjuster # imm = 0x702
	popq	%rbp
	retq
.LBB18_6:                               # %CFerrorHandler.alloc_ecache
	callq	FAULT_DETECTED_CFC
.Lfunc_end18:
	.size	alloc_ecache, .Lfunc_end18-alloc_ecache
	.cfi_endproc
                                        # -- End function
	.globl	free_ecache             # -- Begin function free_ecache
	.p2align	4, 0x90
	.type	free_ecache,@function
free_ecache:                            # @free_ecache
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-12677, %ax            # imm = 0xCE7B
	xorw	%cx, %ax
	cmpw	$4119, %ax              # imm = 0x1017
	jne	.LBB19_3
# %bb.1:                                # %free_ecache.split8
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-12677, %ax            # imm = 0xCE7B
	xorw	%cx, %ax
	cmpw	$4119, %ax              # imm = 0x1017
	jne	.LBB19_3
# %bb.2:                                # %free_ecache.split
	movq	ECache, %rdi
	callq	free
	movw	$4119, BasicBlockSignatureTracker # imm = 0x1017
	movw	$-12684, RunTimeSignatureAdjuster # imm = 0xCE74
	popq	%rbp
	retq
.LBB19_3:                               # %CFerrorHandler.free_ecache
	callq	FAULT_DETECTED_CFC
.Lfunc_end19:
	.size	free_ecache, .Lfunc_end19-free_ecache
	.cfi_endproc
                                        # -- End function
	.globl	setup_epd_line          # -- Begin function setup_epd_line
	.p2align	4, 0x90
	.type	setup_epd_line,@function
setup_epd_line:                         # @setup_epd_line
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$72, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1263, %ax              # imm = 0x4EF
	xorw	%cx, %ax
	cmpw	$4145, %ax              # imm = 0x1031
	jne	.LBB20_182
# %bb.1:                                # %setup_epd_line.split482
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1263, %ax              # imm = 0x4EF
	xorw	%cx, %ax
	cmpw	$4145, %ax              # imm = 0x1031
	jne	.LBB20_182
# %bb.2:                                # %setup_epd_line.split480
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1263, %ax              # imm = 0x4EF
	xorw	%cx, %ax
	cmpw	$4145, %ax              # imm = 0x1031
	jne	.LBB20_182
# %bb.3:                                # %setup_epd_line.split478
	movabsq	$board, %r8
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	movq	%rsi, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -104(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -96(%rbp)         # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -88(%rbp)         # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -80(%rbp)         # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rdi, (%r14)
	movl	$0, (%r12)
	movq	%rcx, -112(%rbp)        # 8-byte Spill
	movl	$0, (%rcx)
	movl	$0, (%r13)
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	movl	$0, (%rdx)
	movq	%rsi, -56(%rbp)         # 8-byte Spill
	movl	$0, (%rsi)
	movq	%rax, %rbx
	movl	$97, (%rax)
	movl	$49, (%r15)
	movq	%r8, %rdi
	xorl	%esi, %esi
	movl	$576, %edx              # imm = 0x240
	callq	memset
	movl	$0, white_castled
	movl	$0, black_castled
	movl	$50, book_ply
	movl	setup_epd_line.rankoffsets, %eax
	movl	%eax, (%r13)
	movw	$4145, BasicBlockSignatureTracker # imm = 0x1031
	movw	$0, RunTimeSignatureAdjuster
.LBB20_4:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$4157, %ax              # imm = 0x103D
	jne	.LBB20_181
# %bb.5:                                # %setup_epd_line.split
                                        #   in Loop: Header=BB20_4 Depth=1
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4157, BasicBlockSignatureTracker # imm = 0x103D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$32, %eax
	jne	.LBB20_8
# %bb.6:                                #   in Loop: Header=BB20_4 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$108, %ax
	cmpw	$4177, %ax              # imm = 0x1051
	jne	.LBB20_181
# %bb.7:                                # %setup_epd_line.split320
                                        #   in Loop: Header=BB20_4 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$4177, BasicBlockSignatureTracker # imm = 0x1051
	movw	$96, RunTimeSignatureAdjuster
	jmp	.LBB20_4
.LBB20_8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$99, %ax
	cmpw	$4190, %ax              # imm = 0x105E
	jne	.LBB20_182
# %bb.9:                                # %setup_epd_line.split322
	movw	$4190, BasicBlockSignatureTracker # imm = 0x105E
	movw	$0, RunTimeSignatureAdjuster
.LBB20_10:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB20_24 Depth 2
                                        #     Child Loop BB20_81 Depth 2
                                        #     Child Loop BB20_97 Depth 2
                                        #     Child Loop BB20_103 Depth 2
                                        #     Child Loop BB20_129 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$50, %ax
	xorw	%cx, %ax
	cmpw	$4204, %ax              # imm = 0x106C
	jne	.LBB20_180
# %bb.11:                               # %setup_epd_line.split324
                                        #   in Loop: Header=BB20_10 Depth=1
	xorl	%eax, %eax
	movq	(%r14), %rcx
	movslq	(%r12), %rdx
	movsbl	(%rcx,%rdx), %ecx
	movw	$4204, BasicBlockSignatureTracker # imm = 0x106C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$10, %ecx
	je	.LBB20_14
# %bb.12:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$4213, %ax              # imm = 0x1075
	jne	.LBB20_180
# %bb.13:                               # %setup_epd_line.split326
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	cmpl	$0, %eax
	setne	%al
	movw	$4213, BasicBlockSignatureTracker # imm = 0x1075
	movw	$25, RunTimeSignatureAdjuster
.LBB20_14:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$226, %cx
	xorw	%dx, %cx
	cmpw	$4238, %cx              # imm = 0x108E
	jne	.LBB20_180
# %bb.15:                               # %setup_epd_line.split328
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$4238, BasicBlockSignatureTracker # imm = 0x108E
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB20_16
	jmp	.LBB20_173
.LBB20_16:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$4241, %ax              # imm = 0x1091
	jne	.LBB20_180
# %bb.17:                               # %setup_epd_line.split330
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$4241, BasicBlockSignatureTracker # imm = 0x1091
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB20_32
# %bb.18:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$4257, %ax              # imm = 0x10A1
	jne	.LBB20_180
# %bb.19:                               # %setup_epd_line.split334
                                        #   in Loop: Header=BB20_10 Depth=1
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movq	(%r14), %rcx
	movslq	(%r12), %rdx
	movsbl	(%rcx,%rdx), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$2048, %eax             # imm = 0x800
	movw	$4257, BasicBlockSignatureTracker # imm = 0x10A1
	movw	$48, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB20_32
# %bb.20:                               # %Buffer__
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-16862, %ax            # imm = 0xBE22
	cmpw	$-20861, %ax            # imm = 0xAE83
	jne	.LBB20_180
# %bb.21:                               # %setup_epd_line.split338
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$-20861, BasicBlockSignatureTracker # imm = 0xAE83
	movw	$-16862, RunTimeSignatureAdjuster # imm = 0xBE22
# %bb.22:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$4259, %ax              # imm = 0x10A3
	jne	.LBB20_180
# %bb.23:                               # %setup_epd_line.split484
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$4259, BasicBlockSignatureTracker # imm = 0x10A3
	movw	$0, RunTimeSignatureAdjuster
.LBB20_24:                              #   Parent Loop BB20_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$100, %ax
	xorw	%cx, %ax
	cmpw	$4295, %ax              # imm = 0x10C7
	jne	.LBB20_175
# %bb.25:                               # %setup_epd_line.split340
                                        #   in Loop: Header=BB20_24 Depth=2
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	%eax, -68(%rbp)         # 4-byte Spill
	movq	(%r14), %rdi
	movslq	(%r12), %rax
	addq	%rax, %rdi
	callq	atoi
	movw	$4295, BasicBlockSignatureTracker # imm = 0x10C7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, -68(%rbp)         # 4-byte Folded Reload
	jge	.LBB20_30
# %bb.26:                               #   in Loop: Header=BB20_24 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$4300, %ax              # imm = 0x10CC
	jne	.LBB20_175
# %bb.27:                               # %setup_epd_line.split342
                                        #   in Loop: Header=BB20_24 Depth=2
	movl	(%r13), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$13, board(,%rax,4)
	movw	$4300, BasicBlockSignatureTracker # imm = 0x10CC
	movw	$0, RunTimeSignatureAdjuster
# %bb.28:                               #   in Loop: Header=BB20_24 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$4311, %ax              # imm = 0x10D7
	jne	.LBB20_175
# %bb.29:                               # %setup_epd_line.split346
                                        #   in Loop: Header=BB20_24 Depth=2
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$4311, BasicBlockSignatureTracker # imm = 0x10D7
	movw	$116, RunTimeSignatureAdjuster
	jmp	.LBB20_24
.LBB20_30:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$462, %ax               # imm = 0x1CE
	cmpw	$4361, %ax              # imm = 0x1109
	jne	.LBB20_180
# %bb.31:                               # %setup_epd_line.split344
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	(%r14), %rdi
	movslq	(%r12), %rax
	addq	%rax, %rdi
	callq	atoi
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$4361, BasicBlockSignatureTracker # imm = 0x1109
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB20_171
.LBB20_32:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$414, %ax               # imm = 0x19E
	xorw	%cx, %ax
	cmpw	$4367, %ax              # imm = 0x110F
	jne	.LBB20_180
# %bb.33:                               # %setup_epd_line.split336
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$4367, BasicBlockSignatureTracker # imm = 0x110F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB20_40
# %bb.34:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$4371, %ax              # imm = 0x1113
	jne	.LBB20_180
# %bb.35:                               # %setup_epd_line.split350
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4371, BasicBlockSignatureTracker # imm = 0x1113
	movw	$28, RunTimeSignatureAdjuster
	cmpl	$47, %eax
	jne	.LBB20_40
# %bb.36:                               # %Buffer__1
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11291, %ax             # imm = 0x2C1B
	cmpw	$15624, %ax             # imm = 0x3D08
	jne	.LBB20_180
# %bb.37:                               # %setup_epd_line.split354
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$15624, BasicBlockSignatureTracker # imm = 0x3D08
	movw	$11291, RunTimeSignatureAdjuster # imm = 0x2C1B
# %bb.38:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$4378, %ax              # imm = 0x111A
	jne	.LBB20_180
# %bb.39:                               # %setup_epd_line.split486
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movslq	(%rcx), %rax
	movl	setup_epd_line.rankoffsets(,%rax,4), %eax
	movl	%eax, (%r13)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$4378, BasicBlockSignatureTracker # imm = 0x111A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB20_169
.LBB20_40:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$40, %ax
	xorw	%cx, %ax
	cmpw	$4391, %ax              # imm = 0x1127
	jne	.LBB20_180
# %bb.41:                               # %setup_epd_line.split352
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$4391, BasicBlockSignatureTracker # imm = 0x1127
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB20_75
# %bb.42:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$4412, %ax              # imm = 0x113C
	jne	.LBB20_180
# %bb.43:                               # %setup_epd_line.split358
                                        #   in Loop: Header=BB20_10 Depth=1
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movq	(%r14), %rcx
	movslq	(%r12), %rdx
	movsbl	(%rcx,%rdx), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$1024, %eax             # imm = 0x400
	movw	$4412, BasicBlockSignatureTracker # imm = 0x113C
	movw	$27, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB20_75
# %bb.44:                               # %Buffer__2
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28222, %ax             # imm = 0x6E3E
	cmpw	$32514, %ax             # imm = 0x7F02
	jne	.LBB20_180
# %bb.45:                               # %setup_epd_line.split362
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$32514, BasicBlockSignatureTracker # imm = 0x7F02
	movw	$28222, RunTimeSignatureAdjuster # imm = 0x6E3E
# %bb.46:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$119, %ax
	xorw	%cx, %ax
	cmpw	$4427, %ax              # imm = 0x114B
	jne	.LBB20_180
# %bb.47:                               # %setup_epd_line.split488
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4427, BasicBlockSignatureTracker(%rip) # imm = 0x114B
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-66, %eax
	movl	%eax, %ecx
	subl	$48, %ecx
	ja	.LBB20_73
# %bb.48:                               # %setup_epd_line.split488
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	.LJTI20_0(,%rax,8), %rax
	jmpq	*%rax
.LBB20_49:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$4444, %ax              # imm = 0x115C
	jne	.LBB20_180
# %bb.50:                               # %setup_epd_line.split366
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$2, board(,%rax,4)
	movw	$4444, BasicBlockSignatureTracker # imm = 0x115C
	movw	$23, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_51:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$4454, %ax              # imm = 0x1166
	jne	.LBB20_180
# %bb.52:                               # %setup_epd_line.split368
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$1, board(,%rax,4)
	movw	$4454, BasicBlockSignatureTracker # imm = 0x1166
	movw	$45, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_53:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$200, %ax
	cmpw	$4483, %ax              # imm = 0x1183
	jne	.LBB20_180
# %bb.54:                               # %setup_epd_line.split370
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$4, board(,%rax,4)
	movw	$4483, BasicBlockSignatureTracker # imm = 0x1183
	movw	$200, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_55:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$192, %ax
	cmpw	$4491, %ax              # imm = 0x118B
	jne	.LBB20_180
# %bb.56:                               # %setup_epd_line.split372
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$3, board(,%rax,4)
	movw	$4491, BasicBlockSignatureTracker # imm = 0x118B
	movw	$192, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_57:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$216, %ax
	cmpw	$4499, %ax              # imm = 0x1193
	jne	.LBB20_180
# %bb.58:                               # %setup_epd_line.split374
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$12, board(,%rax,4)
	movw	$4499, BasicBlockSignatureTracker # imm = 0x1193
	movw	$216, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_59:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$223, %ax
	cmpw	$4500, %ax              # imm = 0x1194
	jne	.LBB20_180
# %bb.60:                               # %setup_epd_line.split376
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$11, board(,%rax,4)
	movw	$4500, BasicBlockSignatureTracker # imm = 0x1194
	movw	$223, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_61:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$213, %ax
	cmpw	$4510, %ax              # imm = 0x119E
	jne	.LBB20_180
# %bb.62:                               # %setup_epd_line.split378
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$8, board(,%rax,4)
	movw	$4510, BasicBlockSignatureTracker # imm = 0x119E
	movw	$213, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_63:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$227, %ax
	cmpw	$4520, %ax              # imm = 0x11A8
	jne	.LBB20_180
# %bb.64:                               # %setup_epd_line.split380
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$7, board(,%rax,4)
	movw	$4520, BasicBlockSignatureTracker # imm = 0x11A8
	movw	$227, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_65:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$249, %ax
	cmpw	$4530, %ax              # imm = 0x11B2
	jne	.LBB20_180
# %bb.66:                               # %setup_epd_line.split382
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$10, board(,%rax,4)
	movw	$4530, BasicBlockSignatureTracker # imm = 0x11B2
	movw	$249, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_67:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$136, %ax
	cmpw	$4547, %ax              # imm = 0x11C3
	jne	.LBB20_180
# %bb.68:                               # %setup_epd_line.split384
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	cltq
	movl	$9, board(,%rax,4)
	movw	$4547, BasicBlockSignatureTracker # imm = 0x11C3
	movw	$136, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_69:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$169, %ax
	cmpw	$4578, %ax              # imm = 0x11E2
	jne	.LBB20_180
# %bb.70:                               # %setup_epd_line.split386
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, bking_loc
	movslq	bking_loc, %rax
	movl	$6, board(,%rax,4)
	movw	$4578, BasicBlockSignatureTracker # imm = 0x11E2
	movw	$169, RunTimeSignatureAdjuster
	jmp	.LBB20_73
.LBB20_71:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$185, %ax
	cmpw	$4594, %ax              # imm = 0x11F2
	jne	.LBB20_180
# %bb.72:                               # %setup_epd_line.split388
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r13), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, wking_loc
	movslq	wking_loc, %rax
	movl	$5, board(,%rax,4)
	movw	$4594, BasicBlockSignatureTracker # imm = 0x11F2
	movw	$185, RunTimeSignatureAdjuster
.LBB20_73:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$184, %ax
	xorw	%cx, %ax
	cmpw	$4595, %ax              # imm = 0x11F3
	jne	.LBB20_180
# %bb.74:                               # %setup_epd_line.split364
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$4595, BasicBlockSignatureTracker # imm = 0x11F3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB20_167
.LBB20_75:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$208, %ax
	xorw	%cx, %ax
	cmpw	$4599, %ax              # imm = 0x11F7
	jne	.LBB20_180
# %bb.76:                               # %setup_epd_line.split360
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4599, BasicBlockSignatureTracker # imm = 0x11F7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$32, %eax
	jne	.LBB20_165
# %bb.77:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1017, %ax              # imm = 0x3F9
	cmpw	$4622, %ax              # imm = 0x120E
	jne	.LBB20_180
# %bb.78:                               # %setup_epd_line.split392
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$4622, BasicBlockSignatureTracker # imm = 0x120E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB20_93
# %bb.79:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$4623, %ax              # imm = 0x120F
	jne	.LBB20_180
# %bb.80:                               # %setup_epd_line.split396
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$4623, BasicBlockSignatureTracker # imm = 0x120F
	movw	$0, RunTimeSignatureAdjuster
.LBB20_81:                              #   Parent Loop BB20_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$4639, %ax              # imm = 0x121F
	jne	.LBB20_176
# %bb.82:                               # %setup_epd_line.split400
                                        #   in Loop: Header=BB20_81 Depth=2
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4639, BasicBlockSignatureTracker # imm = 0x121F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$32, %eax
	jne	.LBB20_85
# %bb.83:                               #   in Loop: Header=BB20_81 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$33, %ax
	cmpw	$4670, %ax              # imm = 0x123E
	jne	.LBB20_176
# %bb.84:                               # %setup_epd_line.split402
                                        #   in Loop: Header=BB20_81 Depth=2
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$4670, BasicBlockSignatureTracker # imm = 0x123E
	movw	$49, RunTimeSignatureAdjuster
	jmp	.LBB20_81
.LBB20_85:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$89, %ax
	cmpw	$4678, %ax              # imm = 0x1246
	jne	.LBB20_180
# %bb.86:                               # %setup_epd_line.split404
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4678, BasicBlockSignatureTracker # imm = 0x1246
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$119, %eax
	jne	.LBB20_89
# %bb.87:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$4696, %ax              # imm = 0x1258
	jne	.LBB20_180
# %bb.88:                               # %setup_epd_line.split406
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	$1, white_to_move
	movw	$4696, BasicBlockSignatureTracker # imm = 0x1258
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB20_91
.LBB20_89:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$4700, %ax              # imm = 0x125C
	jne	.LBB20_180
# %bb.90:                               # %setup_epd_line.split408
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	$0, white_to_move
	movw	$4700, BasicBlockSignatureTracker # imm = 0x125C
	movw	$4, RunTimeSignatureAdjuster
.LBB20_91:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$4706, %ax              # imm = 0x1262
	jne	.LBB20_180
# %bb.92:                               # %setup_epd_line.split410
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$4706, BasicBlockSignatureTracker # imm = 0x1262
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB20_163
.LBB20_93:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$100, %ax
	cmpw	$4714, %ax              # imm = 0x126A
	jne	.LBB20_180
# %bb.94:                               # %setup_epd_line.split398
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$4714, BasicBlockSignatureTracker # imm = 0x126A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB20_125
# %bb.95:                               #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$4716, %ax              # imm = 0x126C
	jne	.LBB20_180
# %bb.96:                               # %setup_epd_line.split414
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	$1, moved+120
	movl	$1, moved+132
	movl	$1, moved+104
	movl	$1, moved+468
	movl	$1, moved+456
	movl	$1, moved+440
	movw	$4716, BasicBlockSignatureTracker # imm = 0x126C
	movw	$0, RunTimeSignatureAdjuster
.LBB20_97:                              #   Parent Loop BB20_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$4730, %ax              # imm = 0x127A
	jne	.LBB20_178
# %bb.98:                               # %setup_epd_line.split418
                                        #   in Loop: Header=BB20_97 Depth=2
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4730, BasicBlockSignatureTracker # imm = 0x127A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$32, %eax
	jne	.LBB20_101
# %bb.99:                               #   in Loop: Header=BB20_97 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$4735, %ax              # imm = 0x127F
	jne	.LBB20_178
# %bb.100:                              # %setup_epd_line.split420
                                        #   in Loop: Header=BB20_97 Depth=2
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$4735, BasicBlockSignatureTracker # imm = 0x127F
	movw	$19, RunTimeSignatureAdjuster
	jmp	.LBB20_97
.LBB20_101:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$242, %ax
	cmpw	$4744, %ax              # imm = 0x1288
	jne	.LBB20_180
# %bb.102:                              # %setup_epd_line.split422
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$4744, BasicBlockSignatureTracker # imm = 0x1288
	movw	$0, RunTimeSignatureAdjuster
.LBB20_103:                             #   Parent Loop BB20_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$4760, %ax              # imm = 0x1298
	jne	.LBB20_177
# %bb.104:                              # %setup_epd_line.split424
                                        #   in Loop: Header=BB20_103 Depth=2
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4760, BasicBlockSignatureTracker # imm = 0x1298
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$32, %eax
	je	.LBB20_123
# %bb.105:                              #   in Loop: Header=BB20_103 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$4769, %ax              # imm = 0x12A1
	jne	.LBB20_177
# %bb.106:                              # %setup_epd_line.split426
                                        #   in Loop: Header=BB20_103 Depth=2
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4769, BasicBlockSignatureTracker(%rip) # imm = 0x12A1
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movl	%eax, %ecx
	subl	$45, %ecx
	je	.LBB20_111
	jmp	.LBB20_107
.LBB20_107:                             # %setup_epd_line.split426
                                        #   in Loop: Header=BB20_103 Depth=2
	movl	%eax, %ecx
	subl	$75, %ecx
	je	.LBB20_113
	jmp	.LBB20_108
.LBB20_108:                             # %setup_epd_line.split426
                                        #   in Loop: Header=BB20_103 Depth=2
	movl	%eax, %ecx
	subl	$81, %ecx
	je	.LBB20_115
	jmp	.LBB20_109
.LBB20_109:                             # %setup_epd_line.split426
                                        #   in Loop: Header=BB20_103 Depth=2
	movl	%eax, %ecx
	subl	$107, %ecx
	je	.LBB20_117
	jmp	.LBB20_110
.LBB20_110:                             # %setup_epd_line.split426
                                        #   in Loop: Header=BB20_103 Depth=2
	subl	$113, %eax
	je	.LBB20_119
	jmp	.LBB20_121
.LBB20_111:                             #   in Loop: Header=BB20_103 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$4772, %ax              # imm = 0x12A4
	jne	.LBB20_177
# %bb.112:                              # %setup_epd_line.split432
                                        #   in Loop: Header=BB20_103 Depth=2
	movw	$4772, BasicBlockSignatureTracker # imm = 0x12A4
	movw	$5, RunTimeSignatureAdjuster
	jmp	.LBB20_121
.LBB20_113:                             #   in Loop: Header=BB20_103 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$4787, %ax              # imm = 0x12B3
	jne	.LBB20_177
# %bb.114:                              # %setup_epd_line.split434
                                        #   in Loop: Header=BB20_103 Depth=2
	movl	$0, moved+132
	movl	$0, moved+120
	movw	$4787, BasicBlockSignatureTracker # imm = 0x12B3
	movw	$18, RunTimeSignatureAdjuster
	jmp	.LBB20_121
.LBB20_115:                             #   in Loop: Header=BB20_103 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$4792, %ax              # imm = 0x12B8
	jne	.LBB20_177
# %bb.116:                              # %setup_epd_line.split436
                                        #   in Loop: Header=BB20_103 Depth=2
	movl	$0, moved+104
	movl	$0, moved+120
	movw	$4792, BasicBlockSignatureTracker # imm = 0x12B8
	movw	$25, RunTimeSignatureAdjuster
	jmp	.LBB20_121
.LBB20_117:                             #   in Loop: Header=BB20_103 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$4797, %ax              # imm = 0x12BD
	jne	.LBB20_177
# %bb.118:                              # %setup_epd_line.split438
                                        #   in Loop: Header=BB20_103 Depth=2
	movl	$0, moved+468
	movl	$0, moved+456
	movw	$4797, BasicBlockSignatureTracker # imm = 0x12BD
	movw	$28, RunTimeSignatureAdjuster
	jmp	.LBB20_121
.LBB20_119:                             #   in Loop: Header=BB20_103 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$98, %ax
	cmpw	$4803, %ax              # imm = 0x12C3
	jne	.LBB20_177
# %bb.120:                              # %setup_epd_line.split440
                                        #   in Loop: Header=BB20_103 Depth=2
	movl	$0, moved+440
	movl	$0, moved+456
	movw	$4803, BasicBlockSignatureTracker # imm = 0x12C3
	movw	$98, RunTimeSignatureAdjuster
.LBB20_121:                             #   in Loop: Header=BB20_103 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$104, %ax
	xorw	%cx, %ax
	cmpw	$4809, %ax              # imm = 0x12C9
	jne	.LBB20_177
# %bb.122:                              # %setup_epd_line.split430
                                        #   in Loop: Header=BB20_103 Depth=2
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$4809, BasicBlockSignatureTracker # imm = 0x12C9
	movw	$65, RunTimeSignatureAdjuster
	jmp	.LBB20_103
.LBB20_123:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$103, %ax
	cmpw	$4863, %ax              # imm = 0x12FF
	jne	.LBB20_180
# %bb.124:                              # %setup_epd_line.split428
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r12), %eax
	addl	$-1, %eax
	movl	%eax, (%r12)
	movw	$4863, BasicBlockSignatureTracker # imm = 0x12FF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB20_161
.LBB20_125:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$366, %ax               # imm = 0x16E
	cmpw	$4868, %ax              # imm = 0x1304
	jne	.LBB20_180
# %bb.126:                              # %setup_epd_line.split416
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$4868, BasicBlockSignatureTracker # imm = 0x1304
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB20_141
# %bb.127:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$4875, %ax              # imm = 0x130B
	jne	.LBB20_180
# %bb.128:                              # %setup_epd_line.split444
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$4875, BasicBlockSignatureTracker # imm = 0x130B
	movw	$0, RunTimeSignatureAdjuster
.LBB20_129:                             #   Parent Loop BB20_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$34, %ax
	xorw	%cx, %ax
	cmpw	$4905, %ax              # imm = 0x1329
	jne	.LBB20_179
# %bb.130:                              # %setup_epd_line.split448
                                        #   in Loop: Header=BB20_129 Depth=2
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4905, BasicBlockSignatureTracker # imm = 0x1329
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$32, %eax
	jne	.LBB20_133
# %bb.131:                              #   in Loop: Header=BB20_129 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$4908, %ax              # imm = 0x132C
	jne	.LBB20_179
# %bb.132:                              # %setup_epd_line.split450
                                        #   in Loop: Header=BB20_129 Depth=2
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$4908, BasicBlockSignatureTracker # imm = 0x132C
	movw	$39, RunTimeSignatureAdjuster
	jmp	.LBB20_129
.LBB20_133:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$4910, %ax              # imm = 0x132E
	jne	.LBB20_180
# %bb.134:                              # %setup_epd_line.split452
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movsbl	(%rax,%rcx), %eax
	movw	$4910, BasicBlockSignatureTracker # imm = 0x132E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$45, %eax
	jne	.LBB20_137
# %bb.135:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$4915, %ax              # imm = 0x1333
	jne	.LBB20_180
# %bb.136:                              # %setup_epd_line.split454
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	$0, ep_square
	movw	$4915, BasicBlockSignatureTracker # imm = 0x1333
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB20_139
.LBB20_137:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$4926, %ax              # imm = 0x133E
	jne	.LBB20_180
# %bb.138:                              # %setup_epd_line.split456
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	(%r14), %rax
	movl	(%r12), %ecx
	movl	%ecx, %edx
	addl	$1, %edx
	movl	%edx, (%r12)
	movslq	%ecx, %rcx
	movsbl	(%rax,%rcx), %eax
	movq	-104(%rbp), %rsi        # 8-byte Reload
	movl	%eax, (%rsi)
	movq	(%r14), %rax
	movl	(%r12), %ecx
	movl	%ecx, %edx
	addl	$1, %edx
	movl	%edx, (%r12)
	movslq	%ecx, %rcx
	movsbl	(%rax,%rcx), %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rsi), %eax
	subl	(%rbx), %eax
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	%eax, (%rdx)
	movl	(%rcx), %eax
	subl	(%r15), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	imull	$12, (%rcx), %eax
	addl	$26, %eax
	addl	(%rdx), %eax
	movl	%eax, ep_square
	movw	$4926, BasicBlockSignatureTracker # imm = 0x133E
	movw	$13, RunTimeSignatureAdjuster
.LBB20_139:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$114, %ax
	xorw	%cx, %ax
	cmpw	$4929, %ax              # imm = 0x1341
	jne	.LBB20_180
# %bb.140:                              # %setup_epd_line.split458
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$4929, BasicBlockSignatureTracker # imm = 0x1341
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB20_159
.LBB20_141:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$76, %ax
	cmpw	$4936, %ax              # imm = 0x1348
	jne	.LBB20_180
# %bb.142:                              # %setup_epd_line.split446
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$4936, BasicBlockSignatureTracker # imm = 0x1348
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB20_145
# %bb.143:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$4938, %ax              # imm = 0x134A
	jne	.LBB20_180
# %bb.144:                              # %setup_epd_line.split462
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$4938, BasicBlockSignatureTracker # imm = 0x134A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB20_157
.LBB20_145:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$4940, %ax              # imm = 0x134C
	jne	.LBB20_180
# %bb.146:                              # %setup_epd_line.split464
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$4940, BasicBlockSignatureTracker # imm = 0x134C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB20_149
# %bb.147:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$4985, %ax              # imm = 0x1379
	jne	.LBB20_180
# %bb.148:                              # %setup_epd_line.split468
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$4985, BasicBlockSignatureTracker # imm = 0x1379
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB20_155
.LBB20_149:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$203, %ax
	cmpw	$4999, %ax              # imm = 0x1387
	jne	.LBB20_180
# %bb.150:                              # %setup_epd_line.split470
                                        #   in Loop: Header=BB20_10 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$4999, BasicBlockSignatureTracker # imm = 0x1387
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jne	.LBB20_153
# %bb.151:                              #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$5008, %ax              # imm = 0x1390
	jne	.LBB20_180
# %bb.152:                              # %setup_epd_line.split474
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$5008, BasicBlockSignatureTracker # imm = 0x1390
	movw	$23, RunTimeSignatureAdjuster
.LBB20_153:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$5022, %ax              # imm = 0x139E
	jne	.LBB20_180
# %bb.154:                              # %setup_epd_line.split476
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$5022, BasicBlockSignatureTracker # imm = 0x139E
	movw	$231, RunTimeSignatureAdjuster
.LBB20_155:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$201, %ax
	xorw	%cx, %ax
	cmpw	$5040, %ax              # imm = 0x13B0
	jne	.LBB20_180
# %bb.156:                              # %setup_epd_line.split472
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$5040, BasicBlockSignatureTracker # imm = 0x13B0
	movw	$250, RunTimeSignatureAdjuster
.LBB20_157:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$139, %ax
	xorw	%cx, %ax
	cmpw	$5057, %ax              # imm = 0x13C1
	jne	.LBB20_180
# %bb.158:                              # %setup_epd_line.split466
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$5057, BasicBlockSignatureTracker # imm = 0x13C1
	movw	$128, RunTimeSignatureAdjuster
.LBB20_159:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$137, %ax
	xorw	%cx, %ax
	cmpw	$5064, %ax              # imm = 0x13C8
	jne	.LBB20_180
# %bb.160:                              # %setup_epd_line.split460
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$5064, BasicBlockSignatureTracker # imm = 0x13C8
	movw	$311, RunTimeSignatureAdjuster # imm = 0x137
.LBB20_161:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$302, %ax               # imm = 0x12E
	xorw	%cx, %ax
	cmpw	$5073, %ax              # imm = 0x13D1
	jne	.LBB20_180
# %bb.162:                              # %setup_epd_line.split442
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$5073, BasicBlockSignatureTracker # imm = 0x13D1
	movw	$435, RunTimeSignatureAdjuster # imm = 0x1B3
.LBB20_163:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1635, %ax              # imm = 0x663
	xorw	%cx, %ax
	cmpw	$5121, %ax              # imm = 0x1401
	jne	.LBB20_180
# %bb.164:                              # %setup_epd_line.split412
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$5121, BasicBlockSignatureTracker # imm = 0x1401
	movw	$1526, RunTimeSignatureAdjuster # imm = 0x5F6
.LBB20_165:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1522, %ax              # imm = 0x5F2
	xorw	%cx, %ax
	cmpw	$5125, %ax              # imm = 0x1405
	jne	.LBB20_180
# %bb.166:                              # %setup_epd_line.split394
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$5125, BasicBlockSignatureTracker # imm = 0x1405
	movw	$1526, RunTimeSignatureAdjuster # imm = 0x5F6
.LBB20_167:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1533, %ax              # imm = 0x5FD
	xorw	%cx, %ax
	cmpw	$5134, %ax              # imm = 0x140E
	jne	.LBB20_180
# %bb.168:                              # %setup_epd_line.split390
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$5134, BasicBlockSignatureTracker # imm = 0x140E
	movw	$1300, RunTimeSignatureAdjuster # imm = 0x514
.LBB20_169:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1295, %ax              # imm = 0x50F
	xorw	%cx, %ax
	cmpw	$5141, %ax              # imm = 0x1415
	jne	.LBB20_180
# %bb.170:                              # %setup_epd_line.split356
                                        #   in Loop: Header=BB20_10 Depth=1
	movw	$5141, BasicBlockSignatureTracker # imm = 0x1415
	movw	$1308, RunTimeSignatureAdjuster # imm = 0x51C
.LBB20_171:                             #   in Loop: Header=BB20_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1320, %ax              # imm = 0x528
	xorw	%cx, %ax
	cmpw	$5153, %ax              # imm = 0x1421
	jne	.LBB20_180
# %bb.172:                              # %setup_epd_line.split348
                                        #   in Loop: Header=BB20_10 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$5153, BasicBlockSignatureTracker # imm = 0x1421
	movw	$1151, RunTimeSignatureAdjuster # imm = 0x47F
	jmp	.LBB20_10
.LBB20_173:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1202, %ax              # imm = 0x4B2
	cmpw	$5180, %ax              # imm = 0x143C
	jne	.LBB20_182
# %bb.174:                              # %setup_epd_line.split332
	movw	$5180, BasicBlockSignatureTracker # imm = 0x143C
	movw	$0, RunTimeSignatureAdjuster
	callq	reset_piece_square
	movw	$5180, BasicBlockSignatureTracker # imm = 0x143C
	movw	$0, RunTimeSignatureAdjuster
	movw	$5180, BasicBlockSignatureTracker # imm = 0x143C
	movw	$0, RunTimeSignatureAdjuster
	callq	initialize_hash
	movw	$5180, BasicBlockSignatureTracker # imm = 0x143C
	movw	$0, RunTimeSignatureAdjuster
	movw	$5180, BasicBlockSignatureTracker # imm = 0x143C
	movw	$128, RunTimeSignatureAdjuster
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB20_175:                             # %CFerrorHandler.setup_epd_line.loopexit
	jmp	.LBB20_182
.LBB20_176:                             # %CFerrorHandler.setup_epd_line.loopexit1
	jmp	.LBB20_182
.LBB20_177:                             # %CFerrorHandler.setup_epd_line.loopexit2
	jmp	.LBB20_182
.LBB20_178:                             # %CFerrorHandler.setup_epd_line.loopexit3
	jmp	.LBB20_182
.LBB20_179:                             # %CFerrorHandler.setup_epd_line.loopexit4
	jmp	.LBB20_182
.LBB20_180:                             # %CFerrorHandler.setup_epd_line.loopexit5
	jmp	.LBB20_182
.LBB20_181:                             # %CFerrorHandler.setup_epd_line.loopexit6
	jmp	.LBB20_182
.LBB20_182:                             # %CFerrorHandler.setup_epd_line
	callq	FAULT_DETECTED_CFC
.Lfunc_end20:
	.size	setup_epd_line, .Lfunc_end20-setup_epd_line
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI20_0:
	.quad	.LBB20_59
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_71
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_55
	.quad	.LBB20_73
	.quad	.LBB20_51
	.quad	.LBB20_67
	.quad	.LBB20_63
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_57
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_69
	.quad	.LBB20_73
	.quad	.LBB20_73
	.quad	.LBB20_53
	.quad	.LBB20_73
	.quad	.LBB20_49
	.quad	.LBB20_65
	.quad	.LBB20_61
                                        # -- End function
	.text
	.globl	check_solution          # -- Begin function check_solution
	.p2align	4, 0x90
	.type	check_solution,@function
check_solution:                         # @check_solution
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	leaq	16(%rbp), %rax
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$-6782, %cx             # imm = 0xE582
	xorw	%dx, %cx
	cmpw	$5201, %cx              # imm = 0x1451
	jne	.LBB21_24
# %bb.1:                                # %check_solution.split58
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r15
	addq	$-256, %r15
	movq	%r15, %rsp
	movq	%rdi, (%rbx)
	movw	$5201, BasicBlockSignatureTracker # imm = 0x1451
	movw	$0, RunTimeSignatureAdjuster
	subq	$32, %rsp
	movq	(%rax), %rcx
	movq	%rcx, (%rsp)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rsp)
	movq	16(%rax), %rax
	movq	%rax, 16(%rsp)
	movq	%r15, %rdi
	callq	comp_to_san
	addq	$32, %rsp
	movabsq	$.L.str.4, %rsi
	movw	$5201, BasicBlockSignatureTracker # imm = 0x1451
	movw	$0, RunTimeSignatureAdjuster
	movq	(%rbx), %rdi
	callq	strstr
	movw	$5201, BasicBlockSignatureTracker # imm = 0x1451
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB21_8
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$5207, %ax              # imm = 0x1457
	jne	.LBB21_24
# %bb.3:                                # %check_solution.split
	movq	(%rbx), %rdi
	movq	%r15, %rsi
	callq	strstr
	movw	$5207, BasicBlockSignatureTracker # imm = 0x1457
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB21_6
# %bb.4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$5212, %ax              # imm = 0x145C
	jne	.LBB21_24
# %bb.5:                                # %check_solution.split40
	movl	$1, (%r14)
	movw	$5212, BasicBlockSignatureTracker # imm = 0x145C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB21_22
.LBB21_6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$5216, %ax              # imm = 0x1460
	jne	.LBB21_24
# %bb.7:                                # %check_solution.split42
	movl	$0, (%r14)
	movw	$5216, BasicBlockSignatureTracker # imm = 0x1460
	movw	$60, RunTimeSignatureAdjuster
	jmp	.LBB21_22
.LBB21_8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$5219, %ax              # imm = 0x1463
	jne	.LBB21_24
# %bb.9:                                # %check_solution.split38
	movabsq	$.L.str.1.5, %rsi
	movq	(%rbx), %rdi
	callq	strstr
	movw	$5219, BasicBlockSignatureTracker # imm = 0x1463
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB21_16
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$5222, %ax              # imm = 0x1466
	jne	.LBB21_24
# %bb.11:                               # %check_solution.split46
	movq	(%rbx), %rdi
	movq	%r15, %rsi
	callq	strstr
	movw	$5222, BasicBlockSignatureTracker # imm = 0x1466
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB21_14
# %bb.12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$5236, %ax              # imm = 0x1474
	jne	.LBB21_24
# %bb.13:                               # %check_solution.split50
	movl	$0, (%r14)
	movw	$5236, BasicBlockSignatureTracker # imm = 0x1474
	movw	$40, RunTimeSignatureAdjuster
	jmp	.LBB21_22
.LBB21_14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$5239, %ax              # imm = 0x1477
	jne	.LBB21_24
# %bb.15:                               # %check_solution.split52
	movl	$1, (%r14)
	movw	$5239, BasicBlockSignatureTracker # imm = 0x1477
	movw	$43, RunTimeSignatureAdjuster
	jmp	.LBB21_22
.LBB21_16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$226, %ax
	cmpw	$5249, %ax              # imm = 0x1481
	jne	.LBB21_24
# %bb.17:                               # %check_solution.split48
	movabsq	$.L.str.2, %rdi
	movb	$0, %al
	callq	printf
	movw	$5249, BasicBlockSignatureTracker # imm = 0x1481
	movw	$0, RunTimeSignatureAdjuster
# %bb.18:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$5250, %ax              # imm = 0x1482
	jne	.LBB21_24
# %bb.19:                               # %check_solution.split54
	movw	$5250, BasicBlockSignatureTracker # imm = 0x1482
	movw	$0, RunTimeSignatureAdjuster
# %bb.20:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$5255, %ax              # imm = 0x1487
	jne	.LBB21_24
# %bb.21:                               # %check_solution.split56
	movl	$0, (%r14)
	movw	$5255, BasicBlockSignatureTracker # imm = 0x1487
	movw	$219, RunTimeSignatureAdjuster
.LBB21_22:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$201, %ax
	xorw	%cx, %ax
	cmpw	$5269, %ax              # imm = 0x1495
	jne	.LBB21_24
# %bb.23:                               # %check_solution.split44
	movl	(%r14), %eax
	movw	$5269, BasicBlockSignatureTracker # imm = 0x1495
	movw	$109, RunTimeSignatureAdjuster
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB21_24:                              # %CFerrorHandler.check_solution
	callq	FAULT_DETECTED_CFC
.Lfunc_end21:
	.size	check_solution, .Lfunc_end21-check_solution
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function run_epd_testsuite
.LCPI22_0:
	.long	1065353216              # float 1
.LCPI22_2:
	.long	1120403456              # float 100
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI22_1:
	.quad	4636737291354636288     # double 100
	.text
	.globl	run_epd_testsuite
	.p2align	4, 0x90
	.type	run_epd_testsuite,@function
run_epd_testsuite:                      # @run_epd_testsuite
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7667, %ax             # imm = 0xE20D
	xorw	%cx, %ax
	cmpw	$5301, %ax              # imm = 0x14B5
	jne	.LBB22_25
# %bb.1:                                # %run_epd_testsuite.split64
	movabsq	$.L.str.3.6, %rdi
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r13
	addq	$-2000, %r13            # imm = 0xF830
	movq	%r13, %rsp
	movq	%rsp, %rbx
	addq	$-4096, %rbx            # imm = 0xF000
	movq	%rbx, %rsp
	movq	%rsp, %rax
	addq	$-2000, %rax            # imm = 0xF830
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-32, %rcx
	movq	%rcx, -80(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movl	$0, (%r15)
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movl	$0, (%rax)
	movb	$0, %al
	callq	printf
	movq	stdin, %rdx
	movw	$5301, BasicBlockSignatureTracker # imm = 0x14B5
	movw	$0, RunTimeSignatureAdjuster
	movq	%rbx, %rdi
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	movabsq	$.L.str.4.7, %rdi
	movw	$5301, BasicBlockSignatureTracker # imm = 0x14B5
	movw	$0, RunTimeSignatureAdjuster
	movb	$0, %al
	callq	printf
	movq	stdin, %rdx
	movw	$5301, BasicBlockSignatureTracker # imm = 0x14B5
	movw	$0, RunTimeSignatureAdjuster
	movq	%r13, %rdi
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	movw	$5301, BasicBlockSignatureTracker # imm = 0x14B5
	movw	$0, RunTimeSignatureAdjuster
	movq	%r13, %rdi
	callq	atol
	movabsq	$.L.str.5, %rdi
	movl	%eax, (%r14)
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.6, %rsi
	imull	$100, (%r14), %eax
	movl	%eax, (%r14)
	movq	%rbx, %rdi
	callq	fopen
	movq	%rax, (%r12)
	movw	$5301, BasicBlockSignatureTracker # imm = 0x14B5
	movw	$0, RunTimeSignatureAdjuster
.LBB22_2:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$5308, %ax              # imm = 0x14BC
	jne	.LBB22_24
# %bb.3:                                # %run_epd_testsuite.split
                                        #   in Loop: Header=BB22_2 Depth=1
	movq	(%r12), %rdx
	movq	%r13, %rdi
	movl	$2000, %esi             # imm = 0x7D0
	callq	fgets
	movw	$5308, BasicBlockSignatureTracker # imm = 0x14BC
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB22_22
# %bb.4:                                #   in Loop: Header=BB22_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$98, %ax
	cmpw	$5342, %ax              # imm = 0x14DE
	jne	.LBB22_24
# %bb.5:                                # %run_epd_testsuite.split44
                                        #   in Loop: Header=BB22_2 Depth=1
	movl	(%r15), %eax
	addl	$1, %eax
	movl	%eax, (%r15)
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$0, RunTimeSignatureAdjuster
	movq	%r13, %rdi
	callq	setup_epd_line
	movl	$1, %eax
	xorl	%ecx, %ecx
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$0, RunTimeSignatureAdjuster
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	%eax, root_to_move
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$0, RunTimeSignatureAdjuster
	callq	clear_tt
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$0, RunTimeSignatureAdjuster
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$226, RunTimeSignatureAdjuster
	callq	initialize_hash
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$226, RunTimeSignatureAdjuster
	movq	stdout, %rdi
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$0, RunTimeSignatureAdjuster
	movl	$1, %esi
	callq	display_board
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$226, RunTimeSignatureAdjuster
	movl	$0, forcedwin
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$0, RunTimeSignatureAdjuster
	callq	interrupt
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$226, RunTimeSignatureAdjuster
	movw	$5342, BasicBlockSignatureTracker # imm = 0x14DE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB22_8
# %bb.6:                                #   in Loop: Header=BB22_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$5367, %ax              # imm = 0x14F7
	jne	.LBB22_24
# %bb.7:                                # %run_epd_testsuite.split48
                                        #   in Loop: Header=BB22_2 Depth=1
	movq	stdin, %rdx
	movw	$5367, BasicBlockSignatureTracker # imm = 0x14F7
	movw	$66, RunTimeSignatureAdjuster
	movq	-72(%rbp), %rdi         # 8-byte Reload
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	movw	$5367, BasicBlockSignatureTracker # imm = 0x14F7
	movw	$66, RunTimeSignatureAdjuster
	movw	$5367, BasicBlockSignatureTracker # imm = 0x14F7
	movw	$41, RunTimeSignatureAdjuster
.LBB22_8:                               #   in Loop: Header=BB22_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$5368, %ax              # imm = 0x14F8
	jne	.LBB22_24
# %bb.9:                                # %run_epd_testsuite.split50
                                        #   in Loop: Header=BB22_2 Depth=1
	movss	.LCPI22_0(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movss	%xmm0, -52(%rbp)        # 4-byte Spill
	movl	(%r14), %eax
	movl	%eax, fixed_time(%rip)
	movw	$5368, BasicBlockSignatureTracker(%rip) # imm = 0x14F8
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movq	-80(%rbp), %rbx         # 8-byte Reload
	movq	%rbx, %rdi
	callq	think
	movw	$5368, BasicBlockSignatureTracker(%rip) # imm = 0x14F8
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movq	16(%rbx), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movq	%rax, 16(%rcx)
	movups	(%rbx), %xmm0
	movups	%xmm0, (%rcx)
	movl	nodes(%rip), %esi
	cvtsi2ssl	qnodes(%rip), %xmm0
	cvtsi2ssl	%esi, %xmm1
	divss	%xmm1, %xmm0
	cvtss2sd	%xmm0, %xmm0
	movsd	.LCPI22_1(%rip), %xmm1  # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm0
	cvtsd2ss	%xmm0, %xmm0
	cvtss2sd	%xmm0, %xmm0
	movl	$.L.str.7, %edi
	movb	$1, %al
	callq	printf
	movl	ECacheProbes(%rip), %esi
	movl	ECacheHits(%rip), %edx
	cvtsi2ssq	%rdx, %xmm0
	cvtsi2ssq	%rsi, %xmm1
	addss	.LCPI22_0(%rip), %xmm1
	divss	%xmm1, %xmm0
	mulss	.LCPI22_2(%rip), %xmm0
	cvtss2sd	%xmm0, %xmm0
	movl	$.L.str.8, %edi
                                        # kill: def %esi killed %esi killed %rsi
                                        # kill: def %edx killed %edx killed %rdx
	movb	$1, %al
	callq	printf
	movl	TTStores(%rip), %esi
	movl	TTProbes(%rip), %edx
	movl	TTHits(%rip), %ecx
	cvtsi2ssq	%rcx, %xmm0
	cvtsi2ssq	%rdx, %xmm1
	addss	.LCPI22_0(%rip), %xmm1
	divss	%xmm1, %xmm0
	mulss	.LCPI22_2(%rip), %xmm0
	cvtss2sd	%xmm0, %xmm0
	movl	$.L.str.9, %edi
                                        # kill: def %edx killed %edx killed %rdx
                                        # kill: def %ecx killed %ecx killed %rcx
	movb	$1, %al
	callq	printf
	movl	NTries(%rip), %esi
	movl	NCuts(%rip), %edx
	cvtsi2ssq	%rdx, %xmm0
	mulss	.LCPI22_2(%rip), %xmm0
	cvtsi2ssq	%rsi, %xmm1
	addss	.LCPI22_0(%rip), %xmm1
	divss	%xmm1, %xmm0
	cvtss2sd	%xmm0, %xmm0
	movl	TExt(%rip), %ecx
	movl	$.L.str.10, %edi
                                        # kill: def %esi killed %esi killed %rsi
                                        # kill: def %edx killed %edx killed %rdx
	movb	$1, %al
	callq	printf
	movl	ext_check(%rip), %esi
	movl	razor_drop(%rip), %edx
	movl	razor_material(%rip), %ecx
	movl	$.L.str.11, %edi
	xorl	%eax, %eax
	callq	printf
	movl	FHF(%rip), %eax
	cvtsi2ssq	%rax, %xmm0
	mulss	.LCPI22_2(%rip), %xmm0
	movl	FH(%rip), %eax
	cvtsi2ssq	%rax, %xmm1
	divss	%xmm1, %xmm0
	addss	-52(%rbp), %xmm0        # 4-byte Folded Reload
	cvtss2sd	%xmm0, %xmm0
	movabsq	$.L.str.12, %rdi
	movb	$1, %al
	callq	printf
	movl	Material, %ebx
	movw	$5368, BasicBlockSignatureTracker # imm = 0x14F8
	movw	$0, RunTimeSignatureAdjuster
	movl	$4293967296, %edi       # imm = 0xFFF0BDC0
	movl	$1000000, %esi          # imm = 0xF4240
	callq	eval
	movabsq	$.L.str.13, %rdi
	movw	$5368, BasicBlockSignatureTracker # imm = 0x14F8
	movw	$0, RunTimeSignatureAdjuster
	movl	maxposdiff, %ecx
	movl	%ebx, %esi
	movl	%eax, %edx
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.5, %rdi
	movb	$0, %al
	callq	printf
	movl	forcedwin, %eax
	movw	$5368, BasicBlockSignatureTracker # imm = 0x14F8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB22_18
# %bb.10:                               #   in Loop: Header=BB22_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$5370, %ax              # imm = 0x14FA
	jne	.LBB22_24
# %bb.11:                               # %run_epd_testsuite.split54
                                        #   in Loop: Header=BB22_2 Depth=1
	movw	$5370, BasicBlockSignatureTracker # imm = 0x14FA
	movw	$-6871, RunTimeSignatureAdjuster # imm = 0xE529
	subq	$32, %rsp
	movq	%r13, %rdi
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movq	%rax, (%rsp)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsp)
	callq	check_solution
	addq	$32, %rsp
	movw	$5370, BasicBlockSignatureTracker # imm = 0x14FA
	movw	$-6871, RunTimeSignatureAdjuster # imm = 0xE529
	movw	$5370, BasicBlockSignatureTracker # imm = 0x14FA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB22_14
# %bb.12:                               #   in Loop: Header=BB22_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$5372, %ax              # imm = 0x14FC
	jne	.LBB22_24
# %bb.13:                               # %run_epd_testsuite.split56
                                        #   in Loop: Header=BB22_2 Depth=1
	movabsq	$.L.str.14, %rdi
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movb	$0, %al
	callq	printf
	movw	$5372, BasicBlockSignatureTracker # imm = 0x14FC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB22_16
.LBB22_14:                              #   in Loop: Header=BB22_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$5374, %ax              # imm = 0x14FE
	jne	.LBB22_24
# %bb.15:                               # %run_epd_testsuite.split58
                                        #   in Loop: Header=BB22_2 Depth=1
	movabsq	$.L.str.15, %rdi
	movb	$0, %al
	callq	printf
	movw	$5374, BasicBlockSignatureTracker # imm = 0x14FE
	movw	$2, RunTimeSignatureAdjuster
.LBB22_16:                              #   in Loop: Header=BB22_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$509, %ax               # imm = 0x1FD
	xorw	%cx, %ax
	cmpw	$5377, %ax              # imm = 0x1501
	jne	.LBB22_24
# %bb.17:                               # %run_epd_testsuite.split60
                                        #   in Loop: Header=BB22_2 Depth=1
	movw	$5377, BasicBlockSignatureTracker # imm = 0x1501
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB22_20
.LBB22_18:                              #   in Loop: Header=BB22_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$506, %ax               # imm = 0x1FA
	cmpw	$5378, %ax              # imm = 0x1502
	jne	.LBB22_24
# %bb.19:                               # %run_epd_testsuite.split52
                                        #   in Loop: Header=BB22_2 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$5378, BasicBlockSignatureTracker # imm = 0x1502
	movw	$3, RunTimeSignatureAdjuster
.LBB22_20:                              #   in Loop: Header=BB22_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$5381, %ax              # imm = 0x1505
	jne	.LBB22_24
# %bb.21:                               # %run_epd_testsuite.split62
                                        #   in Loop: Header=BB22_2 Depth=1
	movabsq	$.L.str.16, %rdi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movl	(%r15), %edx
	movb	$0, %al
	callq	printf
	movw	$5381, BasicBlockSignatureTracker # imm = 0x1505
	movw	$432, RunTimeSignatureAdjuster # imm = 0x1B0
	jmp	.LBB22_2
.LBB22_22:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$426, %ax               # imm = 0x1AA
	cmpw	$5398, %ax              # imm = 0x1516
	jne	.LBB22_25
# %bb.23:                               # %run_epd_testsuite.split46
	movabsq	$.L.str.5, %rdi
	movb	$0, %al
	callq	printf
	movw	$5398, BasicBlockSignatureTracker # imm = 0x1516
	movw	$-2391, RunTimeSignatureAdjuster # imm = 0xF6A9
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB22_24:                              # %CFerrorHandler.run_epd_testsuite.loopexit
	jmp	.LBB22_25
.LBB22_25:                              # %CFerrorHandler.run_epd_testsuite
	callq	FAULT_DETECTED_CFC
.Lfunc_end22:
	.size	run_epd_testsuite, .Lfunc_end22-run_epd_testsuite
	.cfi_endproc
                                        # -- End function
	.globl	run_autotest            # -- Begin function run_autotest
	.p2align	4, 0x90
	.type	run_autotest,@function
run_autotest:                           # @run_autotest
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-12912, %ax            # imm = 0xCD90
	xorw	%cx, %ax
	cmpw	$5428, %ax              # imm = 0x1534
	jne	.LBB23_17
# %bb.1:                                # %run_autotest.split38
	movabsq	$.L.str.6, %rsi
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r14
	addq	$-256, %r14
	movq	%r14, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %r12
	addq	$-32, %r12
	movq	%r12, %rsp
	movq	%rsp, %r15
	addq	$-32, %r15
	movq	%r15, %rsp
	movq	%rdi, (%rax)
	movq	(%rax), %rdi
	callq	fopen
	movq	%rax, (%rbx)
	movq	(%rbx), %rax
	movw	$5428, BasicBlockSignatureTracker # imm = 0x1534
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB23_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$5433, %ax              # imm = 0x1539
	jne	.LBB23_17
# %bb.3:                                # %run_autotest.split
	movl	$1, %edi
	callq	exit
	movw	$5433, BasicBlockSignatureTracker # imm = 0x1539
	movw	$0, RunTimeSignatureAdjuster
.LBB23_4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$5440, %ax              # imm = 0x1540
	jne	.LBB23_17
# %bb.5:                                # %run_autotest.split26
	movw	$5440, BasicBlockSignatureTracker # imm = 0x1540
	movw	$0, RunTimeSignatureAdjuster
	callq	rtime
	movw	$5440, BasicBlockSignatureTracker # imm = 0x1540
	movw	$0, RunTimeSignatureAdjuster
	movq	%rax, (%r13)
	movw	$5440, BasicBlockSignatureTracker # imm = 0x1540
	movw	$0, RunTimeSignatureAdjuster
.LBB23_6:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$5451, %ax              # imm = 0x154B
	jne	.LBB23_16
# %bb.7:                                # %run_autotest.split28
                                        #   in Loop: Header=BB23_6 Depth=1
	movq	(%rbx), %rdx
	movq	%r14, %rdi
	movl	$256, %esi              # imm = 0x100
	callq	fgets
	movw	$5451, BasicBlockSignatureTracker # imm = 0x154B
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB23_14
# %bb.8:                                #   in Loop: Header=BB23_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$5459, %ax              # imm = 0x1553
	jne	.LBB23_16
# %bb.9:                                # %run_autotest.split30
                                        #   in Loop: Header=BB23_6 Depth=1
	movw	$5459, BasicBlockSignatureTracker # imm = 0x1553
	movw	$397, RunTimeSignatureAdjuster # imm = 0x18D
	movq	%r14, %rdi
	callq	setup_epd_line
	movl	$1, %eax
	xorl	%ecx, %ecx
	movw	$5459, BasicBlockSignatureTracker # imm = 0x1553
	movw	$397, RunTimeSignatureAdjuster # imm = 0x18D
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	%eax, root_to_move
	movw	$5459, BasicBlockSignatureTracker # imm = 0x1553
	movw	$397, RunTimeSignatureAdjuster # imm = 0x18D
	callq	clear_tt
	movw	$5459, BasicBlockSignatureTracker # imm = 0x1553
	movw	$397, RunTimeSignatureAdjuster # imm = 0x18D
	movw	$5459, BasicBlockSignatureTracker # imm = 0x1553
	movw	$367, RunTimeSignatureAdjuster # imm = 0x16F
	callq	initialize_hash
	movabsq	$.L.str.5, %rdi
	movw	$5459, BasicBlockSignatureTracker # imm = 0x1553
	movw	$367, RunTimeSignatureAdjuster # imm = 0x16F
	movb	$0, %al
	callq	printf
	movq	stdout, %rdi
	movw	$5459, BasicBlockSignatureTracker # imm = 0x1553
	movw	$397, RunTimeSignatureAdjuster # imm = 0x18D
	movl	$1, %esi
	callq	display_board
	movabsq	$.L.str.17, %rdi
	movw	$5459, BasicBlockSignatureTracker # imm = 0x1553
	movw	$397, RunTimeSignatureAdjuster # imm = 0x18D
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movq	(%rbx), %rdx
	movq	%r14, %rdi
	movl	$256, %esi              # imm = 0x100
	callq	fgets
	movw	$5459, BasicBlockSignatureTracker # imm = 0x1553
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB23_12
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$194, %ax
	cmpw	$5521, %ax              # imm = 0x1591
	jne	.LBB23_17
# %bb.11:                               # %run_autotest.split34
	movl	$1, %edi
	callq	exit
	movw	$5521, BasicBlockSignatureTracker # imm = 0x1591
	movw	$0, RunTimeSignatureAdjuster
.LBB23_12:                              #   in Loop: Header=BB23_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$255, %ax
	cmpw	$5548, %ax              # imm = 0x15AC
	jne	.LBB23_16
# %bb.13:                               # %run_autotest.split36
                                        #   in Loop: Header=BB23_6 Depth=1
	movq	%r14, %rdi
	callq	atoi
	movabsq	$.L.str.18, %rdi
	movq	-48(%rbp), %r13         # 8-byte Reload
	movl	%eax, (%r13)
	movl	(%r13), %esi
	movb	$0, %al
	callq	printf
	movl	(%r13), %eax
	movl	%eax, maxdepth
	movl	$1000000, fixed_time    # imm = 0xF4240
	movw	$5548, BasicBlockSignatureTracker # imm = 0x15AC
	movw	$340, RunTimeSignatureAdjuster # imm = 0x154
	movq	%r15, %rdi
	callq	think
	movw	$5548, BasicBlockSignatureTracker # imm = 0x15AC
	movw	$340, RunTimeSignatureAdjuster # imm = 0x154
	movq	(%r15), %rax
	movq	%rax, (%r12)
	movq	8(%r15), %rax
	movq	%rax, 8(%r12)
	movq	16(%r15), %rax
	movq	%rax, 16(%r12)
	movw	$5548, BasicBlockSignatureTracker # imm = 0x15AC
	movw	$236, RunTimeSignatureAdjuster
	jmp	.LBB23_6
.LBB23_14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$247, %ax
	cmpw	$5564, %ax              # imm = 0x15BC
	jne	.LBB23_17
# %bb.15:                               # %run_autotest.split32
	movw	$5564, BasicBlockSignatureTracker # imm = 0x15BC
	movw	$252, RunTimeSignatureAdjuster
	callq	rtime
	movw	$5564, BasicBlockSignatureTracker # imm = 0x15BC
	movw	$252, RunTimeSignatureAdjuster
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	(%rbx), %rdi
	callq	fclose
	xorl	%edi, %edi
	callq	exit
	movw	$5564, BasicBlockSignatureTracker # imm = 0x15BC
	movw	$0, RunTimeSignatureAdjuster
.LBB23_16:                              # %CFerrorHandler.run_autotest.loopexit
	jmp	.LBB23_17
.LBB23_17:                              # %CFerrorHandler.run_autotest
	callq	FAULT_DETECTED_CFC
.Lfunc_end23:
	.size	run_autotest, .Lfunc_end23-run_autotest
	.cfi_endproc
                                        # -- End function
	.globl	initialize_eval         # -- Begin function initialize_eval
	.p2align	4, 0x90
	.type	initialize_eval,@function
initialize_eval:                        # @initialize_eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-19637, %ax            # imm = 0xB34B
	xorw	%cx, %ax
	cmpw	$5589, %ax              # imm = 0x15D5
	jne	.LBB24_74
# %bb.1:                                # %initialize_eval.split191
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movl	$0, (%r12)
	movw	$5589, BasicBlockSignatureTracker # imm = 0x15D5
	movw	$0, RunTimeSignatureAdjuster
.LBB24_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB24_6 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$5598, %ax              # imm = 0x15DE
	jne	.LBB24_73
# %bb.3:                                # %initialize_eval.split
                                        #   in Loop: Header=BB24_2 Depth=1
	movl	(%r12), %eax
	movw	$5598, BasicBlockSignatureTracker # imm = 0x15DE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$64, %eax
	jge	.LBB24_22
# %bb.4:                                #   in Loop: Header=BB24_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$5604, %ax              # imm = 0x15E4
	jne	.LBB24_73
# %bb.5:                                # %initialize_eval.split125
                                        #   in Loop: Header=BB24_2 Depth=1
	movl	$0, (%r15)
	movw	$5604, BasicBlockSignatureTracker # imm = 0x15E4
	movw	$0, RunTimeSignatureAdjuster
.LBB24_6:                               #   Parent Loop BB24_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$5607, %ax              # imm = 0x15E7
	jne	.LBB24_72
# %bb.7:                                # %initialize_eval.split129
                                        #   in Loop: Header=BB24_6 Depth=2
	movl	(%r15), %eax
	movw	$5607, BasicBlockSignatureTracker # imm = 0x15E7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$64, %eax
	jge	.LBB24_18
# %bb.8:                                #   in Loop: Header=BB24_6 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$5609, %ax              # imm = 0x15E9
	jne	.LBB24_72
# %bb.9:                                # %initialize_eval.split131
                                        #   in Loop: Header=BB24_6 Depth=2
	movl	(%r12), %edi
	andl	$7, %edi
	movl	(%r15), %eax
	andl	$7, %eax
	subl	%eax, %edi
	callq	abs
	movl	%eax, (%r14)
	movl	(%r12), %edi
	sarl	$3, %edi
	movl	(%r15), %eax
	sarl	$3, %eax
	subl	%eax, %edi
	callq	abs
	movabsq	$rookdistance, %rcx
	movl	%eax, (%rbx)
	movl	(%r14), %eax
	addl	(%rbx), %eax
	movslq	(%r12), %rdx
	movslq	upscale(,%rdx,4), %rdx
	imulq	$576, %rdx, %rdx        # imm = 0x240
	addq	%rdx, %rcx
	movslq	(%r15), %rdx
	movslq	upscale(,%rdx,4), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movl	(%r14), %eax
	movl	(%rbx), %ecx
	movw	$5609, BasicBlockSignatureTracker # imm = 0x15E9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB24_12
# %bb.10:                               #   in Loop: Header=BB24_6 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$5611, %ax              # imm = 0x15EB
	jne	.LBB24_72
# %bb.11:                               # %initialize_eval.split135
                                        #   in Loop: Header=BB24_6 Depth=2
	movl	(%r14), %eax
	movw	$5611, BasicBlockSignatureTracker # imm = 0x15EB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB24_14
.LBB24_12:                              #   in Loop: Header=BB24_6 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$5613, %ax              # imm = 0x15ED
	jne	.LBB24_72
# %bb.13:                               # %initialize_eval.split137
                                        #   in Loop: Header=BB24_6 Depth=2
	movl	(%rbx), %eax
	movw	$5613, BasicBlockSignatureTracker # imm = 0x15ED
	movw	$6, RunTimeSignatureAdjuster
.LBB24_14:                              #   in Loop: Header=BB24_6 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$4, %cx
	xorw	%dx, %cx
	cmpw	$5615, %cx              # imm = 0x15EF
	jne	.LBB24_72
# %bb.15:                               # %initialize_eval.split139
                                        #   in Loop: Header=BB24_6 Depth=2
	movabsq	$distance, %rcx
	movslq	(%r12), %rdx
	movslq	upscale(,%rdx,4), %rdx
	imulq	$576, %rdx, %rdx        # imm = 0x240
	addq	%rdx, %rcx
	movslq	(%r15), %rdx
	movslq	upscale(,%rdx,4), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$5615, BasicBlockSignatureTracker # imm = 0x15EF
	movw	$0, RunTimeSignatureAdjuster
# %bb.16:                               #   in Loop: Header=BB24_6 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1003, %ax              # imm = 0x3EB
	cmpw	$5636, %ax              # imm = 0x1604
	jne	.LBB24_72
# %bb.17:                               # %initialize_eval.split141
                                        #   in Loop: Header=BB24_6 Depth=2
	movl	(%r15), %eax
	addl	$1, %eax
	movl	%eax, (%r15)
	movw	$5636, BasicBlockSignatureTracker # imm = 0x1604
	movw	$992, RunTimeSignatureAdjuster # imm = 0x3E0
	jmp	.LBB24_6
.LBB24_18:                              #   in Loop: Header=BB24_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1002, %ax              # imm = 0x3EA
	cmpw	$5645, %ax              # imm = 0x160D
	jne	.LBB24_73
# %bb.19:                               # %initialize_eval.split133
                                        #   in Loop: Header=BB24_2 Depth=1
	movw	$5645, BasicBlockSignatureTracker # imm = 0x160D
	movw	$0, RunTimeSignatureAdjuster
# %bb.20:                               #   in Loop: Header=BB24_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$5651, %ax              # imm = 0x1613
	jne	.LBB24_73
# %bb.21:                               # %initialize_eval.split143
                                        #   in Loop: Header=BB24_2 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$5651, BasicBlockSignatureTracker # imm = 0x1613
	movw	$966, RunTimeSignatureAdjuster # imm = 0x3C6
	jmp	.LBB24_2
.LBB24_22:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$966, %ax               # imm = 0x3C6
	cmpw	$5656, %ax              # imm = 0x1618
	jne	.LBB24_74
# %bb.23:                               # %initialize_eval.split127
	movl	$0, (%r12)
	movw	$5656, BasicBlockSignatureTracker # imm = 0x1618
	movw	$0, RunTimeSignatureAdjuster
.LBB24_24:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB24_28 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$5667, %ax              # imm = 0x1623
	jne	.LBB24_71
# %bb.25:                               # %initialize_eval.split145
                                        #   in Loop: Header=BB24_24 Depth=1
	movl	(%r12), %eax
	movw	$5667, BasicBlockSignatureTracker # imm = 0x1623
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$144, %eax
	jge	.LBB24_68
# %bb.26:                               #   in Loop: Header=BB24_24 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$5690, %ax              # imm = 0x163A
	jne	.LBB24_71
# %bb.27:                               # %initialize_eval.split147
                                        #   in Loop: Header=BB24_24 Depth=1
	movl	$0, (%r15)
	movw	$5690, BasicBlockSignatureTracker # imm = 0x163A
	movw	$0, RunTimeSignatureAdjuster
.LBB24_28:                              #   Parent Loop BB24_24 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$123, %ax
	xorw	%cx, %ax
	cmpw	$5697, %ax              # imm = 0x1641
	jne	.LBB24_70
# %bb.29:                               # %initialize_eval.split151
                                        #   in Loop: Header=BB24_28 Depth=2
	movl	(%r15), %eax
	movw	$5697, BasicBlockSignatureTracker # imm = 0x1641
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$144, %eax
	jge	.LBB24_64
# %bb.30:                               #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$5714, %ax              # imm = 0x1652
	jne	.LBB24_70
# %bb.31:                               # %initialize_eval.split153
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movl	%eax, %r14d
	movslq	(%r12), %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movw	$5714, BasicBlockSignatureTracker # imm = 0x1652
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %r14d
	jle	.LBB24_34
# %bb.32:                               #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$5730, %ax              # imm = 0x1662
	jne	.LBB24_70
# %bb.33:                               # %initialize_eval.split157
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$5730, BasicBlockSignatureTracker # imm = 0x1662
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB24_36
.LBB24_34:                              #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$5731, %ax              # imm = 0x1663
	jne	.LBB24_70
# %bb.35:                               # %initialize_eval.split159
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movw	$5731, BasicBlockSignatureTracker # imm = 0x1663
	movw	$1, RunTimeSignatureAdjuster
.LBB24_36:                              #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$20, %cx
	xorw	%dx, %cx
	cmpw	$5750, %cx              # imm = 0x1676
	jne	.LBB24_70
# %bb.37:                               # %initialize_eval.split161
                                        #   in Loop: Header=BB24_28 Depth=2
	movabsq	$p_tropism, %rcx
	cltq
	movl	pre_p_tropism(,%rax,4), %eax
	movslq	(%r12), %rdx
	imulq	$144, %rdx, %rdx
	addq	%rdx, %rcx
	movslq	(%r15), %rdx
	movb	%al, (%rcx,%rdx)
	movslq	(%r12), %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movl	%eax, %r14d
	movslq	(%r12), %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movw	$5750, BasicBlockSignatureTracker # imm = 0x1676
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %r14d
	jle	.LBB24_40
# %bb.38:                               #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$243, %ax
	cmpw	$5765, %ax              # imm = 0x1685
	jne	.LBB24_70
# %bb.39:                               # %initialize_eval.split163
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$5765, BasicBlockSignatureTracker # imm = 0x1685
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB24_42
.LBB24_40:                              #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$248, %ax
	cmpw	$5774, %ax              # imm = 0x168E
	jne	.LBB24_70
# %bb.41:                               # %initialize_eval.split165
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movw	$5774, BasicBlockSignatureTracker # imm = 0x168E
	movw	$11, RunTimeSignatureAdjuster
.LBB24_42:                              #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$21, %cx
	xorw	%dx, %cx
	cmpw	$5776, %cx              # imm = 0x1690
	jne	.LBB24_70
# %bb.43:                               # %initialize_eval.split167
                                        #   in Loop: Header=BB24_28 Depth=2
	movabsq	$b_tropism, %rcx
	cltq
	movl	pre_b_tropism(,%rax,4), %eax
	movslq	(%r12), %rdx
	imulq	$144, %rdx, %rdx
	addq	%rdx, %rcx
	movslq	(%r15), %rdx
	movb	%al, (%rcx,%rdx)
	movslq	(%r12), %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movl	%eax, %r14d
	movslq	(%r12), %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movw	$5776, BasicBlockSignatureTracker # imm = 0x1690
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %r14d
	jle	.LBB24_46
# %bb.44:                               #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$5782, %ax              # imm = 0x1696
	jne	.LBB24_70
# %bb.45:                               # %initialize_eval.split169
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$5782, BasicBlockSignatureTracker # imm = 0x1696
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB24_48
.LBB24_46:                              #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$5802, %ax              # imm = 0x16AA
	jne	.LBB24_70
# %bb.47:                               # %initialize_eval.split171
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movw	$5802, BasicBlockSignatureTracker # imm = 0x16AA
	movw	$60, RunTimeSignatureAdjuster
.LBB24_48:                              #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$33, %cx
	xorw	%dx, %cx
	cmpw	$5815, %cx              # imm = 0x16B7
	jne	.LBB24_70
# %bb.49:                               # %initialize_eval.split173
                                        #   in Loop: Header=BB24_28 Depth=2
	movabsq	$n_tropism, %rcx
	cltq
	movl	pre_n_tropism(,%rax,4), %eax
	movslq	(%r12), %rdx
	imulq	$144, %rdx, %rdx
	addq	%rdx, %rcx
	movslq	(%r15), %rdx
	movb	%al, (%rcx,%rdx)
	movslq	(%r12), %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movl	%eax, %r14d
	movslq	(%r12), %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movw	$5815, BasicBlockSignatureTracker # imm = 0x16B7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %r14d
	jle	.LBB24_52
# %bb.50:                               #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$5826, %ax              # imm = 0x16C2
	jne	.LBB24_70
# %bb.51:                               # %initialize_eval.split175
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$5826, BasicBlockSignatureTracker # imm = 0x16C2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB24_54
.LBB24_52:                              #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$115, %ax
	cmpw	$5828, %ax              # imm = 0x16C4
	jne	.LBB24_70
# %bb.53:                               # %initialize_eval.split177
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movw	$5828, BasicBlockSignatureTracker # imm = 0x16C4
	movw	$6, RunTimeSignatureAdjuster
.LBB24_54:                              #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$10, %cx
	xorw	%dx, %cx
	cmpw	$5832, %cx              # imm = 0x16C8
	jne	.LBB24_70
# %bb.55:                               # %initialize_eval.split179
                                        #   in Loop: Header=BB24_28 Depth=2
	movabsq	$r_tropism, %rcx
	cltq
	movl	pre_r_tropism(,%rax,4), %eax
	movslq	(%r12), %rdx
	imulq	$144, %rdx, %rdx
	addq	%rdx, %rcx
	movslq	(%r15), %rdx
	movb	%al, (%rcx,%rdx)
	movslq	(%r12), %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movl	%eax, %r14d
	movslq	(%r12), %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movw	$5832, BasicBlockSignatureTracker # imm = 0x16C8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %r14d
	jle	.LBB24_58
# %bb.56:                               #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$5855, %ax              # imm = 0x16DF
	jne	.LBB24_70
# %bb.57:                               # %initialize_eval.split181
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$5855, BasicBlockSignatureTracker # imm = 0x16DF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB24_60
.LBB24_58:                              #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$5858, %ax              # imm = 0x16E2
	jne	.LBB24_70
# %bb.59:                               # %initialize_eval.split183
                                        #   in Loop: Header=BB24_28 Depth=2
	movslq	(%r12), %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movw	$5858, BasicBlockSignatureTracker # imm = 0x16E2
	movw	$61, RunTimeSignatureAdjuster
.LBB24_60:                              #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$60, %cx
	xorw	%dx, %cx
	cmpw	$5859, %cx              # imm = 0x16E3
	jne	.LBB24_70
# %bb.61:                               # %initialize_eval.split185
                                        #   in Loop: Header=BB24_28 Depth=2
	movabsq	$q_tropism, %rcx
	cltq
	movl	pre_q_tropism(,%rax,4), %eax
	movslq	(%r12), %rdx
	imulq	$144, %rdx, %rdx
	addq	%rdx, %rcx
	movslq	(%r15), %rdx
	movb	%al, (%rcx,%rdx)
	movw	$5859, BasicBlockSignatureTracker # imm = 0x16E3
	movw	$0, RunTimeSignatureAdjuster
# %bb.62:                               #   in Loop: Header=BB24_28 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$5875, %ax              # imm = 0x16F3
	jne	.LBB24_70
# %bb.63:                               # %initialize_eval.split187
                                        #   in Loop: Header=BB24_28 Depth=2
	movl	(%r15), %eax
	addl	$1, %eax
	movl	%eax, (%r15)
	movw	$5875, BasicBlockSignatureTracker # imm = 0x16F3
	movw	$201, RunTimeSignatureAdjuster
	jmp	.LBB24_28
.LBB24_64:                              #   in Loop: Header=BB24_24 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$191, %ax
	cmpw	$5886, %ax              # imm = 0x16FE
	jne	.LBB24_71
# %bb.65:                               # %initialize_eval.split155
                                        #   in Loop: Header=BB24_24 Depth=1
	movw	$5886, BasicBlockSignatureTracker # imm = 0x16FE
	movw	$0, RunTimeSignatureAdjuster
# %bb.66:                               #   in Loop: Header=BB24_24 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$498, %ax               # imm = 0x1F2
	cmpw	$5900, %ax              # imm = 0x170C
	jne	.LBB24_71
# %bb.67:                               # %initialize_eval.split189
                                        #   in Loop: Header=BB24_24 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$5900, BasicBlockSignatureTracker # imm = 0x170C
	movw	$276, RunTimeSignatureAdjuster # imm = 0x114
	jmp	.LBB24_24
.LBB24_68:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$300, %ax               # imm = 0x12C
	cmpw	$5903, %ax              # imm = 0x170F
	jne	.LBB24_74
# %bb.69:                               # %initialize_eval.split149
	movw	$5903, BasicBlockSignatureTracker # imm = 0x170F
	movw	$0, RunTimeSignatureAdjuster
	leaq	-32(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB24_70:                              # %CFerrorHandler.initialize_eval.loopexit
	jmp	.LBB24_74
.LBB24_71:                              # %CFerrorHandler.initialize_eval.loopexit1
	jmp	.LBB24_74
.LBB24_72:                              # %CFerrorHandler.initialize_eval.loopexit2
	jmp	.LBB24_74
.LBB24_73:                              # %CFerrorHandler.initialize_eval.loopexit3
	jmp	.LBB24_74
.LBB24_74:                              # %CFerrorHandler.initialize_eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end24:
	.size	initialize_eval, .Lfunc_end24-initialize_eval
	.cfi_endproc
                                        # -- End function
	.globl	eval                    # -- Begin function eval
	.p2align	4, 0x90
	.type	eval,@function
eval:                                   # @eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$72, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$981, %ax               # imm = 0x3D5
	xorw	%cx, %ax
	cmpw	$5933, %ax              # imm = 0x172D
	jne	.LBB25_638
# %bb.1:                                # %eval.split1855
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$981, %ax               # imm = 0x3D5
	xorw	%cx, %ax
	cmpw	$5933, %ax              # imm = 0x172D
	jne	.LBB25_638
# %bb.2:                                # %eval.split1853
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$981, %ax               # imm = 0x3D5
	xorw	%cx, %ax
	cmpw	$5933, %ax              # imm = 0x172D
	jne	.LBB25_638
# %bb.3:                                # %eval.split1851
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$981, %ax               # imm = 0x3D5
	xorw	%cx, %ax
	cmpw	$5933, %ax              # imm = 0x172D
	jne	.LBB25_638
# %bb.4:                                # %eval.split1849
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$981, %ax               # imm = 0x3D5
	xorw	%cx, %ax
	cmpw	$5933, %ax              # imm = 0x172D
	jne	.LBB25_638
# %bb.5:                                # %eval.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movl	%edi, (%r8)
	movl	%esi, (%r9)
	movl	$0, (%r11)
	movl	Variant, %edx
	movw	$5933, BasicBlockSignatureTracker # imm = 0x172D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %edx
	jne	.LBB25_8
# %bb.6:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$2, %dx
	cmpw	$5935, %dx              # imm = 0x172F
	jne	.LBB25_638
# %bb.7:                                # %eval.split1255
	movl	(%r8), %edi
	movl	(%r9), %esi
	movw	$5935, BasicBlockSignatureTracker # imm = 0x172F
	movw	$0, RunTimeSignatureAdjuster
	callq	std_eval
	movw	$5935, BasicBlockSignatureTracker # imm = 0x172F
	movw	$0, RunTimeSignatureAdjuster
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$5935, BasicBlockSignatureTracker # imm = 0x172F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_635
.LBB25_8:
	movq	%rbx, -88(%rbp)         # 8-byte Spill
	movq	%rax, -96(%rbp)         # 8-byte Spill
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	movq	%r10, -104(%rbp)        # 8-byte Spill
	movq	%r11, -48(%rbp)         # 8-byte Spill
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$5945, %ax              # imm = 0x1739
	jne	.LBB25_638
# %bb.9:                                # %eval.split1257
	movl	Variant, %eax
	movw	$5945, BasicBlockSignatureTracker # imm = 0x1739
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB25_12
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$5947, %ax              # imm = 0x173B
	jne	.LBB25_638
# %bb.11:                               # %eval.split1261
	movw	$5947, BasicBlockSignatureTracker # imm = 0x173B
	movw	$0, RunTimeSignatureAdjuster
	callq	suicide_eval
	movw	$5947, BasicBlockSignatureTracker # imm = 0x173B
	movw	$20, RunTimeSignatureAdjuster
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$5947, BasicBlockSignatureTracker # imm = 0x173B
	movw	$20, RunTimeSignatureAdjuster
	jmp	.LBB25_635
.LBB25_12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$5948, %ax              # imm = 0x173C
	jne	.LBB25_638
# %bb.13:                               # %eval.split1263
	movl	Variant, %eax
	movw	$5948, BasicBlockSignatureTracker # imm = 0x173C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB25_16
# %bb.14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$5959, %ax              # imm = 0x1747
	jne	.LBB25_638
# %bb.15:                               # %eval.split1265
	movw	$5959, BasicBlockSignatureTracker # imm = 0x1747
	movw	$0, RunTimeSignatureAdjuster
	callq	losers_eval
	movw	$5959, BasicBlockSignatureTracker # imm = 0x1747
	movw	$104, RunTimeSignatureAdjuster
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$5959, BasicBlockSignatureTracker # imm = 0x1747
	movw	$104, RunTimeSignatureAdjuster
	jmp	.LBB25_635
.LBB25_16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$5963, %ax              # imm = 0x174B
	jne	.LBB25_638
# %bb.17:                               # %eval.split1267
	movw	$5963, BasicBlockSignatureTracker # imm = 0x174B
	movw	$0, RunTimeSignatureAdjuster
# %bb.18:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$5974, %ax              # imm = 0x1756
	jne	.LBB25_638
# %bb.19:                               # %eval.split1269
	movw	$5974, BasicBlockSignatureTracker # imm = 0x1756
	movw	$0, RunTimeSignatureAdjuster
# %bb.20:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$5993, %ax              # imm = 0x1769
	jne	.LBB25_638
# %bb.21:                               # %eval.split1271
	movl	$0, (%r15)
	movw	$5993, BasicBlockSignatureTracker # imm = 0x1769
	movw	$0, RunTimeSignatureAdjuster
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	%r15, %rsi
	callq	checkECache
	movw	$5993, BasicBlockSignatureTracker # imm = 0x1769
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r15), %eax
	movw	$5993, BasicBlockSignatureTracker # imm = 0x1769
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_28
# %bb.22:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$6010, %ax              # imm = 0x177A
	jne	.LBB25_638
# %bb.23:                               # %eval.split1273
	movl	white_to_move, %eax
	movw	$6010, BasicBlockSignatureTracker # imm = 0x177A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB25_26
# %bb.24:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$240, %ax
	cmpw	$6026, %ax              # imm = 0x178A
	jne	.LBB25_638
# %bb.25:                               # %eval.split1277
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$6026, BasicBlockSignatureTracker # imm = 0x178A
	movw	$165, RunTimeSignatureAdjuster
	jmp	.LBB25_635
.LBB25_26:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$238, %ax
	cmpw	$6036, %ax              # imm = 0x1794
	jne	.LBB25_638
# %bb.27:                               # %eval.split1279
	xorl	%eax, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	subl	(%rcx), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$6036, BasicBlockSignatureTracker # imm = 0x1794
	movw	$187, RunTimeSignatureAdjuster
	jmp	.LBB25_635
.LBB25_28:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$192, %ax
	cmpw	$6057, %ax              # imm = 0x17A9
	jne	.LBB25_638
# %bb.29:                               # %eval.split1275
	movl	cfg_devscale, %eax
	movw	$6057, BasicBlockSignatureTracker # imm = 0x17A9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_76
# %bb.30:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$6060, %ax              # imm = 0x17AC
	jne	.LBB25_638
# %bb.31:                               # %eval.split1281
	movl	white_to_move, %eax
	movl	comp_color, %ecx
	movw	$6060, BasicBlockSignatureTracker # imm = 0x17AC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB25_50
# %bb.32:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$102, %ax
	cmpw	$6090, %ax              # imm = 0x17CA
	jne	.LBB25_638
# %bb.33:                               # %eval.split1285
	movl	white_hand_eval, %eax
	movw	$6090, BasicBlockSignatureTracker # imm = 0x17CA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$200, %eax
	jg	.LBB25_40
# %bb.34:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$6095, %ax              # imm = 0x17CF
	jne	.LBB25_638
# %bb.35:                               # %eval.split1289
	movl	Variant, %eax
	movw	$6095, BasicBlockSignatureTracker # imm = 0x17CF
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_40
# %bb.36:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-15498, %ax            # imm = 0xC376
	cmpw	$-11079, %ax            # imm = 0xD4B9
	jne	.LBB25_638
# %bb.37:                               # %eval.split1293
	movw	$-11079, BasicBlockSignatureTracker # imm = 0xD4B9
	movw	$-15498, RunTimeSignatureAdjuster # imm = 0xC376
# %bb.38:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$46, %ax
	xorw	%cx, %ax
	cmpw	$6113, %ax              # imm = 0x17E1
	jne	.LBB25_638
# %bb.39:                               # %eval.split1857
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$2, (%rax)
	movw	$6113, BasicBlockSignatureTracker # imm = 0x17E1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_48
.LBB25_40:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4041, %ax              # imm = 0xFC9
	xorw	%cx, %ax
	cmpw	$6147, %ax              # imm = 0x1803
	jne	.LBB25_638
# %bb.41:                               # %eval.split1291
	movl	white_hand_eval, %eax
	movw	$6147, BasicBlockSignatureTracker # imm = 0x1803
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$700, %eax              # imm = 0x2BC
	jl	.LBB25_44
# %bb.42:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$6156, %ax              # imm = 0x180C
	jne	.LBB25_638
# %bb.43:                               # %eval.split1297
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$6156, BasicBlockSignatureTracker # imm = 0x180C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_46
.LBB25_44:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$6167, %ax              # imm = 0x1817
	jne	.LBB25_638
# %bb.45:                               # %eval.split1299
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$1, (%rax)
	movw	$6167, BasicBlockSignatureTracker # imm = 0x1817
	movw	$27, RunTimeSignatureAdjuster
.LBB25_46:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$6169, %ax              # imm = 0x1819
	jne	.LBB25_638
# %bb.47:                               # %eval.split1301
	movw	$6169, BasicBlockSignatureTracker # imm = 0x1819
	movw	$4088, RunTimeSignatureAdjuster # imm = 0xFF8
.LBB25_48:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4046, %ax              # imm = 0xFCE
	xorw	%cx, %ax
	cmpw	$6191, %ax              # imm = 0x182F
	jne	.LBB25_638
# %bb.49:                               # %eval.split1295
	movw	$6191, BasicBlockSignatureTracker # imm = 0x182F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_52
.LBB25_50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3992, %ax              # imm = 0xF98
	cmpw	$6196, %ax              # imm = 0x1834
	jne	.LBB25_638
# %bb.51:                               # %eval.split1287
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$6196, BasicBlockSignatureTracker # imm = 0x1834
	movw	$27, RunTimeSignatureAdjuster
.LBB25_52:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$6201, %ax              # imm = 0x1839
	jne	.LBB25_638
# %bb.53:                               # %eval.split1303
	movl	white_to_move, %eax
	movl	comp_color, %ecx
	movw	$6201, BasicBlockSignatureTracker # imm = 0x1839
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB25_72
# %bb.54:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$121, %ax
	cmpw	$6208, %ax              # imm = 0x1840
	jne	.LBB25_638
# %bb.55:                               # %eval.split1305
	xorl	%eax, %eax
	subl	black_hand_eval, %eax
	movw	$6208, BasicBlockSignatureTracker # imm = 0x1840
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$200, %eax
	jg	.LBB25_62
# %bb.56:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$6232, %ax              # imm = 0x1858
	jne	.LBB25_638
# %bb.57:                               # %eval.split1309
	movl	Variant, %eax
	movw	$6232, BasicBlockSignatureTracker # imm = 0x1858
	movw	$24, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_62
# %bb.58:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20327, %ax             # imm = 0x4F67
	cmpw	$22335, %ax             # imm = 0x573F
	jne	.LBB25_638
# %bb.59:                               # %eval.split1313
	movw	$22335, BasicBlockSignatureTracker # imm = 0x573F
	movw	$20327, RunTimeSignatureAdjuster # imm = 0x4F67
# %bb.60:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$46, %ax
	xorw	%cx, %ax
	cmpw	$6262, %ax              # imm = 0x1876
	jne	.LBB25_638
# %bb.61:                               # %eval.split1859
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$2, (%rax)
	movw	$6262, BasicBlockSignatureTracker # imm = 0x1876
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_70
.LBB25_62:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$193, %ax
	xorw	%cx, %ax
	cmpw	$6273, %ax              # imm = 0x1881
	jne	.LBB25_638
# %bb.63:                               # %eval.split1311
	xorl	%eax, %eax
	subl	black_hand_eval, %eax
	movw	$6273, BasicBlockSignatureTracker # imm = 0x1881
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$700, %eax              # imm = 0x2BC
	jl	.LBB25_66
# %bb.64:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$6283, %ax              # imm = 0x188B
	jne	.LBB25_638
# %bb.65:                               # %eval.split1317
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$6283, BasicBlockSignatureTracker # imm = 0x188B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_68
.LBB25_66:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$6299, %ax              # imm = 0x189B
	jne	.LBB25_638
# %bb.67:                               # %eval.split1319
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$1, (%rax)
	movw	$6299, BasicBlockSignatureTracker # imm = 0x189B
	movw	$16, RunTimeSignatureAdjuster
.LBB25_68:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$6317, %ax              # imm = 0x18AD
	jne	.LBB25_638
# %bb.69:                               # %eval.split1321
	movw	$6317, BasicBlockSignatureTracker # imm = 0x18AD
	movw	$219, RunTimeSignatureAdjuster
.LBB25_70:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$203, %ax
	xorw	%cx, %ax
	cmpw	$6333, %ax              # imm = 0x18BD
	jne	.LBB25_638
# %bb.71:                               # %eval.split1315
	movw	$6333, BasicBlockSignatureTracker # imm = 0x18BD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_74
.LBB25_72:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$246, %ax
	cmpw	$6351, %ax              # imm = 0x18CF
	jne	.LBB25_638
# %bb.73:                               # %eval.split1307
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$6351, BasicBlockSignatureTracker # imm = 0x18CF
	movw	$114, RunTimeSignatureAdjuster
.LBB25_74:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$102, %ax
	xorw	%cx, %ax
	cmpw	$6363, %ax              # imm = 0x18DB
	jne	.LBB25_638
# %bb.75:                               # %eval.split1323
	movw	$6363, BasicBlockSignatureTracker # imm = 0x18DB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_78
.LBB25_76:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3921, %ax              # imm = 0xF51
	cmpw	$6392, %ax              # imm = 0x18F8
	jne	.LBB25_638
# %bb.77:                               # %eval.split1283
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$6392, BasicBlockSignatureTracker # imm = 0x18F8
	movw	$35, RunTimeSignatureAdjuster
.LBB25_78:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$460, %ax               # imm = 0x1CC
	xorw	%cx, %ax
	cmpw	$6423, %ax              # imm = 0x1917
	jne	.LBB25_638
# %bb.79:                               # %eval.split1325
	movl	$1, (%r14)
	movl	$1, (%r12)
	movw	$6423, BasicBlockSignatureTracker # imm = 0x1917
	movw	$0, RunTimeSignatureAdjuster
.LBB25_80:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$6430, %ax              # imm = 0x191E
	jne	.LBB25_637
# %bb.81:                               # %eval.split1327
                                        #   in Loop: Header=BB25_80 Depth=1
	movl	(%r14), %eax
	movl	piece_count, %ecx
	movw	$6430, BasicBlockSignatureTracker # imm = 0x191E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB25_115
# %bb.82:                               #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$6455, %ax              # imm = 0x1937
	jne	.LBB25_637
# %bb.83:                               # %eval.split1329
                                        #   in Loop: Header=BB25_80 Depth=1
	movslq	(%r12), %rax
	movl	pieces(,%rax,4), %eax
	movl	%eax, (%r13)
	movl	(%r13), %eax
	movw	$6455, BasicBlockSignatureTracker # imm = 0x1937
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_86
# %bb.84:                               #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$6464, %ax              # imm = 0x1940
	jne	.LBB25_637
# %bb.85:                               # %eval.split1335
                                        #   in Loop: Header=BB25_80 Depth=1
	movw	$6464, BasicBlockSignatureTracker # imm = 0x1940
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_113
.LBB25_86:                              #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$96, %ax
	cmpw	$6487, %ax              # imm = 0x1957
	jne	.LBB25_637
# %bb.87:                               # %eval.split1333
                                        #   in Loop: Header=BB25_80 Depth=1
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movw	$6487, BasicBlockSignatureTracker # imm = 0x1957
	movw	$0, RunTimeSignatureAdjuster
# %bb.88:                               #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$6506, %ax              # imm = 0x196A
	jne	.LBB25_637
# %bb.89:                               # %eval.split1339
                                        #   in Loop: Header=BB25_80 Depth=1
	movslq	(%r13), %rax
	movl	board(,%rax,4), %eax
	movw	$6506, BasicBlockSignatureTracker(%rip) # imm = 0x196A
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-1, %eax
	movl	%eax, %ecx
	subl	$11, %ecx
	ja	.LBB25_111
# %bb.90:                               # %eval.split1339
                                        #   in Loop: Header=BB25_80 Depth=1
	movq	.LJTI25_0(,%rax,8), %rax
	jmpq	*%rax
.LBB25_91:                              #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$234, %ax
	cmpw	$6528, %ax              # imm = 0x1980
	jne	.LBB25_637
# %bb.92:                               # %eval.split1343
                                        #   in Loop: Header=BB25_80 Depth=1
	movabsq	$p_tropism, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi), %ecx
	addl	$100, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	movl	white_pawn(,%rcx,4), %edx
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %edx
	addl	(%rsi), %edx
	movl	%edx, (%rsi)
	movslq	(%r13), %rcx
	imulq	$144, %rcx, %rcx
	addq	%rcx, %rax
	movslq	bking_loc, %rcx
	movzbl	(%rax,%rcx), %eax
	addl	(%rsi), %eax
	movl	%eax, (%rsi)
	movw	$6528, BasicBlockSignatureTracker # imm = 0x1980
	movw	$234, RunTimeSignatureAdjuster
	jmp	.LBB25_111
.LBB25_93:                              #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$239, %ax
	cmpw	$6533, %ax              # imm = 0x1985
	jne	.LBB25_637
# %bb.94:                               # %eval.split1345
                                        #   in Loop: Header=BB25_80 Depth=1
	movabsq	$p_tropism, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi), %ecx
	subl	$100, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	movl	black_pawn(,%rcx,4), %edx
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %edx
	movl	(%rsi), %ecx
	subl	%edx, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	imulq	$144, %rcx, %rcx
	addq	%rcx, %rax
	movslq	wking_loc, %rcx
	movzbl	(%rax,%rcx), %eax
	movl	(%rsi), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rsi)
	movw	$6533, BasicBlockSignatureTracker # imm = 0x1985
	movw	$239, RunTimeSignatureAdjuster
	jmp	.LBB25_111
.LBB25_95:                              #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$250, %ax
	cmpw	$6544, %ax              # imm = 0x1990
	jne	.LBB25_637
# %bb.96:                               # %eval.split1347
                                        #   in Loop: Header=BB25_80 Depth=1
	movabsq	$r_tropism, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi), %ecx
	addl	$250, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	movl	white_rook(,%rcx,4), %edx
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %edx
	addl	(%rsi), %edx
	movl	%edx, (%rsi)
	movslq	(%r13), %rcx
	imulq	$144, %rcx, %rcx
	addq	%rcx, %rax
	movslq	bking_loc, %rcx
	movzbl	(%rax,%rcx), %eax
	addl	(%rsi), %eax
	movl	%eax, (%rsi)
	movw	$6544, BasicBlockSignatureTracker # imm = 0x1990
	movw	$250, RunTimeSignatureAdjuster
	jmp	.LBB25_111
.LBB25_97:                              #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$252, %ax
	cmpw	$6550, %ax              # imm = 0x1996
	jne	.LBB25_637
# %bb.98:                               # %eval.split1349
                                        #   in Loop: Header=BB25_80 Depth=1
	movabsq	$r_tropism, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi), %ecx
	subl	$250, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	movl	black_rook(,%rcx,4), %edx
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %edx
	movl	(%rsi), %ecx
	subl	%edx, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	imulq	$144, %rcx, %rcx
	addq	%rcx, %rax
	movslq	wking_loc, %rcx
	movzbl	(%rax,%rcx), %eax
	movl	(%rsi), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rsi)
	movw	$6550, BasicBlockSignatureTracker # imm = 0x1996
	movw	$252, RunTimeSignatureAdjuster
	jmp	.LBB25_111
.LBB25_99:                              #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$243, %ax
	cmpw	$6553, %ax              # imm = 0x1999
	jne	.LBB25_637
# %bb.100:                              # %eval.split1351
                                        #   in Loop: Header=BB25_80 Depth=1
	movabsq	$b_tropism, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi), %ecx
	addl	$230, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	movl	pcsqbishop(,%rcx,4), %edx
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %edx
	addl	(%rsi), %edx
	movl	%edx, (%rsi)
	movslq	(%r13), %rcx
	imulq	$144, %rcx, %rcx
	addq	%rcx, %rax
	movslq	bking_loc, %rcx
	movzbl	(%rax,%rcx), %eax
	addl	(%rsi), %eax
	movl	%eax, (%rsi)
	movw	$6553, BasicBlockSignatureTracker # imm = 0x1999
	movw	$243, RunTimeSignatureAdjuster
	jmp	.LBB25_111
.LBB25_101:                             #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$203, %ax
	cmpw	$6561, %ax              # imm = 0x19A1
	jne	.LBB25_637
# %bb.102:                              # %eval.split1353
                                        #   in Loop: Header=BB25_80 Depth=1
	movabsq	$b_tropism, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi), %ecx
	subl	$230, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	movl	pcsqbishop(,%rcx,4), %edx
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %edx
	movl	(%rsi), %ecx
	subl	%edx, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	imulq	$144, %rcx, %rcx
	addq	%rcx, %rax
	movslq	wking_loc, %rcx
	movzbl	(%rax,%rcx), %eax
	movl	(%rsi), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rsi)
	movw	$6561, BasicBlockSignatureTracker # imm = 0x19A1
	movw	$203, RunTimeSignatureAdjuster
	jmp	.LBB25_111
.LBB25_103:                             #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$162, %ax
	cmpw	$6600, %ax              # imm = 0x19C8
	jne	.LBB25_637
# %bb.104:                              # %eval.split1355
                                        #   in Loop: Header=BB25_80 Depth=1
	movabsq	$n_tropism, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi), %ecx
	addl	$210, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	movl	white_knight(,%rcx,4), %edx
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %edx
	addl	(%rsi), %edx
	movl	%edx, (%rsi)
	movslq	(%r13), %rcx
	imulq	$144, %rcx, %rcx
	addq	%rcx, %rax
	movslq	bking_loc, %rcx
	movzbl	(%rax,%rcx), %eax
	addl	(%rsi), %eax
	movl	%eax, (%rsi)
	movw	$6600, BasicBlockSignatureTracker # imm = 0x19C8
	movw	$162, RunTimeSignatureAdjuster
	jmp	.LBB25_111
.LBB25_105:                             #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$178, %ax
	cmpw	$6616, %ax              # imm = 0x19D8
	jne	.LBB25_637
# %bb.106:                              # %eval.split1357
                                        #   in Loop: Header=BB25_80 Depth=1
	movabsq	$n_tropism, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi), %ecx
	subl	$210, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	movl	black_knight(,%rcx,4), %edx
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %edx
	movl	(%rsi), %ecx
	subl	%edx, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	imulq	$144, %rcx, %rcx
	addq	%rcx, %rax
	movslq	wking_loc, %rcx
	movzbl	(%rax,%rcx), %eax
	movl	(%rsi), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rsi)
	movw	$6616, BasicBlockSignatureTracker # imm = 0x19D8
	movw	$178, RunTimeSignatureAdjuster
	jmp	.LBB25_111
.LBB25_107:                             #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$143, %ax
	cmpw	$6629, %ax              # imm = 0x19E5
	jne	.LBB25_637
# %bb.108:                              # %eval.split1359
                                        #   in Loop: Header=BB25_80 Depth=1
	movabsq	$q_tropism, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi), %ecx
	addl	$450, %ecx              # imm = 0x1C2
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	movl	white_queen(,%rcx,4), %edx
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %edx
	addl	(%rsi), %edx
	movl	%edx, (%rsi)
	movslq	(%r13), %rcx
	imulq	$144, %rcx, %rcx
	addq	%rcx, %rax
	movslq	bking_loc, %rcx
	movzbl	(%rax,%rcx), %eax
	addl	(%rsi), %eax
	movl	%eax, (%rsi)
	movw	$6629, BasicBlockSignatureTracker # imm = 0x19E5
	movw	$143, RunTimeSignatureAdjuster
	jmp	.LBB25_111
.LBB25_109:                             #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$888, %ax               # imm = 0x378
	cmpw	$6674, %ax              # imm = 0x1A12
	jne	.LBB25_637
# %bb.110:                              # %eval.split1361
                                        #   in Loop: Header=BB25_80 Depth=1
	movabsq	$q_tropism, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi), %ecx
	subl	$450, %ecx              # imm = 0x1C2
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	movl	black_queen(,%rcx,4), %edx
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %edx
	movl	(%rsi), %ecx
	subl	%edx, %ecx
	movl	%ecx, (%rsi)
	movslq	(%r13), %rcx
	imulq	$144, %rcx, %rcx
	addq	%rcx, %rax
	movslq	wking_loc, %rcx
	movzbl	(%rax,%rcx), %eax
	movl	(%rsi), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rsi)
	movw	$6674, BasicBlockSignatureTracker # imm = 0x1A12
	movw	$888, RunTimeSignatureAdjuster # imm = 0x378
.LBB25_111:                             #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$846, %ax               # imm = 0x34E
	xorw	%cx, %ax
	cmpw	$6692, %ax              # imm = 0x1A24
	jne	.LBB25_637
# %bb.112:                              # %eval.split1341
                                        #   in Loop: Header=BB25_80 Depth=1
	movw	$6692, BasicBlockSignatureTracker # imm = 0x1A24
	movw	$868, RunTimeSignatureAdjuster # imm = 0x364
.LBB25_113:                             #   in Loop: Header=BB25_80 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$873, %ax               # imm = 0x369
	xorw	%cx, %ax
	cmpw	$6697, %ax              # imm = 0x1A29
	jne	.LBB25_637
# %bb.114:                              # %eval.split1337
                                        #   in Loop: Header=BB25_80 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$6697, BasicBlockSignatureTracker # imm = 0x1A29
	movw	$830, RunTimeSignatureAdjuster # imm = 0x33E
	jmp	.LBB25_80
.LBB25_115:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$821, %ax               # imm = 0x335
	cmpw	$6699, %ax              # imm = 0x1A2B
	jne	.LBB25_638
# %bb.116:                              # %eval.split1331
	movslq	wking_loc, %rax
	movl	white_king(,%rax,4), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	addl	(%rdx), %eax
	movl	%eax, (%rdx)
	movslq	bking_loc, %rax
	movl	black_king(,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %eax
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movl	white_castled, %eax
	movw	$6699, BasicBlockSignatureTracker # imm = 0x1A2B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_123
# %bb.117:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$6706, %ax              # imm = 0x1A32
	jne	.LBB25_638
# %bb.118:                              # %eval.split1365
	movl	moved+120, %eax
	movw	$6706, BasicBlockSignatureTracker # imm = 0x1A32
	movw	$25, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_123
# %bb.119:                              # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-21110, %ax            # imm = 0xAD8A
	cmpw	$-18504, %ax            # imm = 0xB7B8
	jne	.LBB25_638
# %bb.120:                              # %eval.split1367
	movw	$-18504, BasicBlockSignatureTracker # imm = 0xB7B8
	movw	$-21110, RunTimeSignatureAdjuster # imm = 0xAD8A
# %bb.121:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$6708, %ax              # imm = 0x1A34
	jne	.LBB25_638
# %bb.122:                              # %eval.split1861
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$30, %eax
	movl	%eax, (%rcx)
	movw	$6708, BasicBlockSignatureTracker # imm = 0x1A34
	movw	$31, RunTimeSignatureAdjuster
.LBB25_123:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$6711, %ax              # imm = 0x1A37
	jne	.LBB25_638
# %bb.124:                              # %eval.split1363
	movl	black_castled, %eax
	movw	$6711, BasicBlockSignatureTracker # imm = 0x1A37
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_131
# %bb.125:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$6720, %ax              # imm = 0x1A40
	jne	.LBB25_638
# %bb.126:                              # %eval.split1371
	movl	moved+456, %eax
	movw	$6720, BasicBlockSignatureTracker # imm = 0x1A40
	movw	$119, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_131
# %bb.127:                              # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28819, %ax             # imm = 0x7093
	cmpw	$27347, %ax             # imm = 0x6AD3
	jne	.LBB25_638
# %bb.128:                              # %eval.split1373
	movw	$27347, BasicBlockSignatureTracker # imm = 0x6AD3
	movw	$28819, RunTimeSignatureAdjuster # imm = 0x7093
# %bb.129:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$6726, %ax              # imm = 0x1A46
	jne	.LBB25_638
# %bb.130:                              # %eval.split1863
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$30, %eax
	movl	%eax, (%rcx)
	movw	$6726, BasicBlockSignatureTracker # imm = 0x1A46
	movw	$113, RunTimeSignatureAdjuster
.LBB25_131:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$100, %ax
	xorw	%cx, %ax
	cmpw	$6739, %ax              # imm = 0x1A53
	jne	.LBB25_638
# %bb.132:                              # %eval.split1369
	movl	moved+164, %eax
	movw	$6739, BasicBlockSignatureTracker # imm = 0x1A53
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_139
# %bb.133:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$6743, %ax              # imm = 0x1A57
	jne	.LBB25_638
# %bb.134:                              # %eval.split1377
	movl	board+212, %eax
	movw	$6743, BasicBlockSignatureTracker # imm = 0x1A57
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB25_139
# %bb.135:                              # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27429, %ax             # imm = 0x6B25
	cmpw	$29042, %ax             # imm = 0x7172
	jne	.LBB25_638
# %bb.136:                              # %eval.split1379
	movw	$29042, BasicBlockSignatureTracker # imm = 0x7172
	movw	$27429, RunTimeSignatureAdjuster # imm = 0x6B25
# %bb.137:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$6748, %ax              # imm = 0x1A5C
	jne	.LBB25_638
# %bb.138:                              # %eval.split1865
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$15, %eax
	movl	%eax, (%rcx)
	movw	$6748, BasicBlockSignatureTracker # imm = 0x1A5C
	movw	$15, RunTimeSignatureAdjuster
.LBB25_139:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$48, %ax
	xorw	%cx, %ax
	cmpw	$6755, %ax              # imm = 0x1A63
	jne	.LBB25_638
# %bb.140:                              # %eval.split1375
	movl	moved+168, %eax
	movw	$6755, BasicBlockSignatureTracker # imm = 0x1A63
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_147
# %bb.141:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$6761, %ax              # imm = 0x1A69
	jne	.LBB25_638
# %bb.142:                              # %eval.split1383
	movl	board+216, %eax
	movw	$6761, BasicBlockSignatureTracker # imm = 0x1A69
	movw	$10, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB25_147
# %bb.143:                              # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-245, %ax
	cmpw	$-6814, %ax             # imm = 0xE562
	jne	.LBB25_638
# %bb.144:                              # %eval.split1385
	movw	$-6814, BasicBlockSignatureTracker # imm = 0xE562
	movw	$-245, RunTimeSignatureAdjuster
# %bb.145:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$6768, %ax              # imm = 0x1A70
	jne	.LBB25_638
# %bb.146:                              # %eval.split1867
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$15, %eax
	movl	%eax, (%rcx)
	movw	$6768, BasicBlockSignatureTracker # imm = 0x1A70
	movw	$19, RunTimeSignatureAdjuster
.LBB25_147:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$6780, %ax              # imm = 0x1A7C
	jne	.LBB25_638
# %bb.148:                              # %eval.split1381
	movl	moved+404, %eax
	movw	$6780, BasicBlockSignatureTracker # imm = 0x1A7C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_155
# %bb.149:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$253, %ax
	cmpw	$6785, %ax              # imm = 0x1A81
	jne	.LBB25_638
# %bb.150:                              # %eval.split1389
	movl	board+356, %eax
	movw	$6785, BasicBlockSignatureTracker # imm = 0x1A81
	movw	$253, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB25_155
# %bb.151:                              # %Buffer__6
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12799, %ax            # imm = 0xCE01
	cmpw	$-11136, %ax            # imm = 0xD480
	jne	.LBB25_638
# %bb.152:                              # %eval.split1391
	movw	$-11136, BasicBlockSignatureTracker # imm = 0xD480
	movw	$-12799, RunTimeSignatureAdjuster # imm = 0xCE01
# %bb.153:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$6811, %ax              # imm = 0x1A9B
	jne	.LBB25_638
# %bb.154:                              # %eval.split1869
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$15, %eax
	movl	%eax, (%rcx)
	movw	$6811, BasicBlockSignatureTracker # imm = 0x1A9B
	movw	$231, RunTimeSignatureAdjuster
.LBB25_155:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$190, %ax
	xorw	%cx, %ax
	cmpw	$6850, %ax              # imm = 0x1AC2
	jne	.LBB25_638
# %bb.156:                              # %eval.split1387
	movl	moved+408, %eax
	movw	$6850, BasicBlockSignatureTracker # imm = 0x1AC2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_163
# %bb.157:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$6873, %ax              # imm = 0x1AD9
	jne	.LBB25_638
# %bb.158:                              # %eval.split1395
	movl	board+360, %eax
	movw	$6873, BasicBlockSignatureTracker # imm = 0x1AD9
	movw	$27, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB25_163
# %bb.159:                              # %Buffer__7
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1339, %ax             # imm = 0xFAC5
	cmpw	$-8164, %ax             # imm = 0xE01C
	jne	.LBB25_638
# %bb.160:                              # %eval.split1397
	movw	$-8164, BasicBlockSignatureTracker # imm = 0xE01C
	movw	$-1339, RunTimeSignatureAdjuster # imm = 0xFAC5
# %bb.161:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$6879, %ax              # imm = 0x1ADF
	jne	.LBB25_638
# %bb.162:                              # %eval.split1871
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$15, %eax
	movl	%eax, (%rcx)
	movw	$6879, BasicBlockSignatureTracker # imm = 0x1ADF
	movw	$29, RunTimeSignatureAdjuster
.LBB25_163:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$6894, %ax              # imm = 0x1AEE
	jne	.LBB25_638
# %bb.164:                              # %eval.split1393
	movl	cfg_smarteval, %eax
	movw	$6894, BasicBlockSignatureTracker # imm = 0x1AEE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_509
# %bb.165:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$6895, %ax              # imm = 0x1AEF
	jne	.LBB25_638
# %bb.166:                              # %eval.split1399
	movl	wking_loc, %eax
	movw	$6895, BasicBlockSignatureTracker # imm = 0x1AEF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$30, %eax
	je	.LBB25_201
# %bb.167:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$490, %ax               # imm = 0x1EA
	cmpw	$6917, %ax              # imm = 0x1B05
	jne	.LBB25_638
# %bb.168:                              # %eval.split1403
	movl	wking_loc, %eax
	movw	$6917, BasicBlockSignatureTracker # imm = 0x1B05
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	cmpl	$29, %eax
	je	.LBB25_201
# %bb.169:                              # %Buffer__8
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11239, %ax             # imm = 0x2BE7
	cmpw	$12514, %ax             # imm = 0x30E2
	jne	.LBB25_638
# %bb.170:                              # %eval.split1407
	movw	$12514, BasicBlockSignatureTracker # imm = 0x30E2
	movw	$11239, RunTimeSignatureAdjuster # imm = 0x2BE7
# %bb.171:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$6936, %ax              # imm = 0x1B18
	jne	.LBB25_638
# %bb.172:                              # %eval.split1873
	movl	wking_loc, %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$6936, BasicBlockSignatureTracker # imm = 0x1B18
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_175
# %bb.173:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$6954, %ax              # imm = 0x1B2A
	jne	.LBB25_638
# %bb.174:                              # %eval.split1409
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$24, %eax
	movl	%eax, (%rcx)
	movw	$6954, BasicBlockSignatureTracker # imm = 0x1B2A
	movw	$50, RunTimeSignatureAdjuster
.LBB25_175:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$6964, %ax              # imm = 0x1B34
	jne	.LBB25_638
# %bb.176:                              # %eval.split1411
	movl	wking_loc, %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$6964, BasicBlockSignatureTracker # imm = 0x1B34
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_179
# %bb.177:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$6969, %ax              # imm = 0x1B39
	jne	.LBB25_638
# %bb.178:                              # %eval.split1413
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$35, %eax
	movl	%eax, (%rcx)
	movw	$6969, BasicBlockSignatureTracker # imm = 0x1B39
	movw	$13, RunTimeSignatureAdjuster
.LBB25_179:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$6974, %ax              # imm = 0x1B3E
	jne	.LBB25_638
# %bb.180:                              # %eval.split1415
	movl	wking_loc, %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$6974, BasicBlockSignatureTracker # imm = 0x1B3E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_183
# %bb.181:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$6982, %ax              # imm = 0x1B46
	jne	.LBB25_638
# %bb.182:                              # %eval.split1417
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$24, %eax
	movl	%eax, (%rcx)
	movw	$6982, BasicBlockSignatureTracker # imm = 0x1B46
	movw	$120, RunTimeSignatureAdjuster
.LBB25_183:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$112, %ax
	xorw	%cx, %ax
	cmpw	$6990, %ax              # imm = 0x1B4E
	jne	.LBB25_638
# %bb.184:                              # %eval.split1419
	movl	white_castled, %eax
	movw	$6990, BasicBlockSignatureTracker # imm = 0x1B4E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_199
# %bb.185:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$6993, %ax              # imm = 0x1B51
	jne	.LBB25_638
# %bb.186:                              # %eval.split1421
	movl	bking_loc, %eax
	subl	$25, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$6993, BasicBlockSignatureTracker # imm = 0x1B51
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_189
# %bb.187:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$7001, %ax              # imm = 0x1B59
	jne	.LBB25_638
# %bb.188:                              # %eval.split1425
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$11, %eax
	movl	%eax, (%rcx)
	movw	$7001, BasicBlockSignatureTracker # imm = 0x1B59
	movw	$8, RunTimeSignatureAdjuster
.LBB25_189:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$7008, %ax              # imm = 0x1B60
	jne	.LBB25_638
# %bb.190:                              # %eval.split1427
	movl	bking_loc, %eax
	subl	$24, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7008, BasicBlockSignatureTracker # imm = 0x1B60
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_193
# %bb.191:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$7017, %ax              # imm = 0x1B69
	jne	.LBB25_638
# %bb.192:                              # %eval.split1429
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$15, %eax
	movl	%eax, (%rcx)
	movw	$7017, BasicBlockSignatureTracker # imm = 0x1B69
	movw	$9, RunTimeSignatureAdjuster
.LBB25_193:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$7019, %ax              # imm = 0x1B6B
	jne	.LBB25_638
# %bb.194:                              # %eval.split1431
	movl	bking_loc, %eax
	subl	$23, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7019, BasicBlockSignatureTracker # imm = 0x1B6B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_197
# %bb.195:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$7034, %ax              # imm = 0x1B7A
	jne	.LBB25_638
# %bb.196:                              # %eval.split1433
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$11, %eax
	movl	%eax, (%rcx)
	movw	$7034, BasicBlockSignatureTracker # imm = 0x1B7A
	movw	$17, RunTimeSignatureAdjuster
.LBB25_197:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$7037, %ax              # imm = 0x1B7D
	jne	.LBB25_638
# %bb.198:                              # %eval.split1435
	movw	$7037, BasicBlockSignatureTracker # imm = 0x1B7D
	movw	$51, RunTimeSignatureAdjuster
.LBB25_199:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$48, %ax
	xorw	%cx, %ax
	cmpw	$7038, %ax              # imm = 0x1B7E
	jne	.LBB25_638
# %bb.200:                              # %eval.split1423
	movw	$7038, BasicBlockSignatureTracker # imm = 0x1B7E
	movw	$401, RunTimeSignatureAdjuster # imm = 0x191
.LBB25_201:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$363, %ax               # imm = 0x16B
	xorw	%cx, %ax
	cmpw	$7044, %ax              # imm = 0x1B84
	jne	.LBB25_638
# %bb.202:                              # %eval.split1405
	movl	bking_loc, %eax
	movw	$7044, BasicBlockSignatureTracker # imm = 0x1B84
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$114, %eax
	je	.LBB25_237
# %bb.203:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$7048, %ax              # imm = 0x1B88
	jne	.LBB25_638
# %bb.204:                              # %eval.split1437
	movl	bking_loc, %eax
	movw	$7048, BasicBlockSignatureTracker # imm = 0x1B88
	movw	$12, RunTimeSignatureAdjuster
	cmpl	$113, %eax
	je	.LBB25_237
# %bb.205:                              # %Buffer__9
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-6904, %ax             # imm = 0xE508
	cmpw	$-384, %ax              # imm = 0xFE80
	jne	.LBB25_638
# %bb.206:                              # %eval.split1441
	movw	$-384, BasicBlockSignatureTracker # imm = 0xFE80
	movw	$-6904, RunTimeSignatureAdjuster # imm = 0xE508
# %bb.207:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$7053, %ax              # imm = 0x1B8D
	jne	.LBB25_638
# %bb.208:                              # %eval.split1875
	movl	bking_loc, %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7053, BasicBlockSignatureTracker # imm = 0x1B8D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB25_211
# %bb.209:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$7058, %ax              # imm = 0x1B92
	jne	.LBB25_638
# %bb.210:                              # %eval.split1443
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$24, %eax
	movl	%eax, (%rcx)
	movw	$7058, BasicBlockSignatureTracker # imm = 0x1B92
	movw	$31, RunTimeSignatureAdjuster
.LBB25_211:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$7066, %ax              # imm = 0x1B9A
	jne	.LBB25_638
# %bb.212:                              # %eval.split1445
	movl	bking_loc, %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7066, BasicBlockSignatureTracker # imm = 0x1B9A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB25_215
# %bb.213:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$7068, %ax              # imm = 0x1B9C
	jne	.LBB25_638
# %bb.214:                              # %eval.split1447
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$35, %eax
	movl	%eax, (%rcx)
	movw	$7068, BasicBlockSignatureTracker # imm = 0x1B9C
	movw	$6, RunTimeSignatureAdjuster
.LBB25_215:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$7077, %ax              # imm = 0x1BA5
	jne	.LBB25_638
# %bb.216:                              # %eval.split1449
	movl	bking_loc, %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7077, BasicBlockSignatureTracker # imm = 0x1BA5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB25_219
# %bb.217:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$7090, %ax              # imm = 0x1BB2
	jne	.LBB25_638
# %bb.218:                              # %eval.split1451
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$24, %eax
	movl	%eax, (%rcx)
	movw	$7090, BasicBlockSignatureTracker # imm = 0x1BB2
	movw	$23, RunTimeSignatureAdjuster
.LBB25_219:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$7094, %ax              # imm = 0x1BB6
	jne	.LBB25_638
# %bb.220:                              # %eval.split1453
	movl	black_castled, %eax
	movw	$7094, BasicBlockSignatureTracker # imm = 0x1BB6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_235
# %bb.221:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$127, %ax
	cmpw	$7113, %ax              # imm = 0x1BC9
	jne	.LBB25_638
# %bb.222:                              # %eval.split1455
	movl	bking_loc, %eax
	subl	$25, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7113, BasicBlockSignatureTracker # imm = 0x1BC9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_225
# %bb.223:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$7122, %ax              # imm = 0x1BD2
	jne	.LBB25_638
# %bb.224:                              # %eval.split1459
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$11, %eax
	movl	%eax, (%rcx)
	movw	$7122, BasicBlockSignatureTracker # imm = 0x1BD2
	movw	$27, RunTimeSignatureAdjuster
.LBB25_225:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$46, %ax
	xorw	%cx, %ax
	cmpw	$7143, %ax              # imm = 0x1BE7
	jne	.LBB25_638
# %bb.226:                              # %eval.split1461
	movl	bking_loc, %eax
	subl	$24, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7143, BasicBlockSignatureTracker # imm = 0x1BE7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_229
# %bb.227:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$7167, %ax              # imm = 0x1BFF
	jne	.LBB25_638
# %bb.228:                              # %eval.split1463
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$15, %eax
	movl	%eax, (%rcx)
	movw	$7167, BasicBlockSignatureTracker # imm = 0x1BFF
	movw	$24, RunTimeSignatureAdjuster
.LBB25_229:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2028, %ax              # imm = 0x7EC
	xorw	%cx, %ax
	cmpw	$7179, %ax              # imm = 0x1C0B
	jne	.LBB25_638
# %bb.230:                              # %eval.split1465
	movl	bking_loc, %eax
	subl	$23, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7179, BasicBlockSignatureTracker # imm = 0x1C0B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_233
# %bb.231:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$7180, %ax              # imm = 0x1C0C
	jne	.LBB25_638
# %bb.232:                              # %eval.split1467
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$11, %eax
	movl	%eax, (%rcx)
	movw	$7180, BasicBlockSignatureTracker # imm = 0x1C0C
	movw	$7, RunTimeSignatureAdjuster
.LBB25_233:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$7195, %ax              # imm = 0x1C1B
	jne	.LBB25_638
# %bb.234:                              # %eval.split1469
	movw	$7195, BasicBlockSignatureTracker # imm = 0x1C1B
	movw	$1965, RunTimeSignatureAdjuster # imm = 0x7AD
.LBB25_235:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1961, %ax              # imm = 0x7A9
	xorw	%cx, %ax
	cmpw	$7199, %ax              # imm = 0x1C1F
	jne	.LBB25_638
# %bb.236:                              # %eval.split1457
	movw	$7199, BasicBlockSignatureTracker # imm = 0x1C1F
	movw	$1947, RunTimeSignatureAdjuster # imm = 0x79B
.LBB25_237:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1959, %ax              # imm = 0x7A7
	xorw	%cx, %ax
	cmpw	$7203, %ax              # imm = 0x1C23
	jne	.LBB25_638
# %bb.238:                              # %eval.split1439
	movl	moved+168, %eax
	movw	$7203, BasicBlockSignatureTracker # imm = 0x1C23
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_257
# %bb.239:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$7209, %ax              # imm = 0x1C29
	jne	.LBB25_638
# %bb.240:                              # %eval.split1471
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$30, %eax
	movl	%eax, (%rcx)
	movl	moved+164, %eax
	movw	$7209, BasicBlockSignatureTracker # imm = 0x1C29
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_243
# %bb.241:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$7213, %ax              # imm = 0x1C2D
	jne	.LBB25_638
# %bb.242:                              # %eval.split1475
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$25, %eax
	movl	%eax, (%rcx)
	movw	$7213, BasicBlockSignatureTracker # imm = 0x1C2D
	movw	$4, RunTimeSignatureAdjuster
.LBB25_243:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$7223, %ax              # imm = 0x1C37
	jne	.LBB25_638
# %bb.244:                              # %eval.split1477
	movl	moved+128, %eax
	movw	$7223, BasicBlockSignatureTracker # imm = 0x1C37
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_247
# %bb.245:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$7228, %ax              # imm = 0x1C3C
	jne	.LBB25_638
# %bb.246:                              # %eval.split1479
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$20, %eax
	movl	%eax, (%rcx)
	movw	$7228, BasicBlockSignatureTracker # imm = 0x1C3C
	movw	$11, RunTimeSignatureAdjuster
.LBB25_247:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$122, %ax
	xorw	%cx, %ax
	cmpw	$7245, %ax              # imm = 0x1C4D
	jne	.LBB25_638
# %bb.248:                              # %eval.split1481
	movl	moved+108, %eax
	movw	$7245, BasicBlockSignatureTracker # imm = 0x1C4D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_251
# %bb.249:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$7261, %ax              # imm = 0x1C5D
	jne	.LBB25_638
# %bb.250:                              # %eval.split1483
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$15, %eax
	movl	%eax, (%rcx)
	movw	$7261, BasicBlockSignatureTracker # imm = 0x1C5D
	movw	$16, RunTimeSignatureAdjuster
.LBB25_251:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$39, %ax
	xorw	%cx, %ax
	cmpw	$7274, %ax              # imm = 0x1C6A
	jne	.LBB25_638
# %bb.252:                              # %eval.split1485
	movl	moved+112, %eax
	movw	$7274, BasicBlockSignatureTracker # imm = 0x1C6A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_255
# %bb.253:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$7276, %ax              # imm = 0x1C6C
	jne	.LBB25_638
# %bb.254:                              # %eval.split1487
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$10, %eax
	movl	%eax, (%rcx)
	movw	$7276, BasicBlockSignatureTracker # imm = 0x1C6C
	movw	$6, RunTimeSignatureAdjuster
.LBB25_255:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$7292, %ax              # imm = 0x1C7C
	jne	.LBB25_638
# %bb.256:                              # %eval.split1489
	movw	$7292, BasicBlockSignatureTracker # imm = 0x1C7C
	movw	$95, RunTimeSignatureAdjuster
.LBB25_257:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$166, %ax
	xorw	%cx, %ax
	cmpw	$7301, %ax              # imm = 0x1C85
	jne	.LBB25_638
# %bb.258:                              # %eval.split1473
	movl	moved+408, %eax
	movw	$7301, BasicBlockSignatureTracker # imm = 0x1C85
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_277
# %bb.259:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$36, %ax
	cmpw	$7329, %ax              # imm = 0x1CA1
	jne	.LBB25_638
# %bb.260:                              # %eval.split1491
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$30, %eax
	movl	%eax, (%rcx)
	movl	moved+404, %eax
	movw	$7329, BasicBlockSignatureTracker # imm = 0x1CA1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_263
# %bb.261:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$7330, %ax              # imm = 0x1CA2
	jne	.LBB25_638
# %bb.262:                              # %eval.split1495
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$25, %eax
	movl	%eax, (%rcx)
	movw	$7330, BasicBlockSignatureTracker # imm = 0x1CA2
	movw	$3, RunTimeSignatureAdjuster
.LBB25_263:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$7347, %ax              # imm = 0x1CB3
	jne	.LBB25_638
# %bb.264:                              # %eval.split1497
	movl	moved+464, %eax
	movw	$7347, BasicBlockSignatureTracker # imm = 0x1CB3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_267
# %bb.265:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$7354, %ax              # imm = 0x1CBA
	jne	.LBB25_638
# %bb.266:                              # %eval.split1499
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$20, %eax
	movl	%eax, (%rcx)
	movw	$7354, BasicBlockSignatureTracker # imm = 0x1CBA
	movw	$9, RunTimeSignatureAdjuster
.LBB25_267:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$123, %ax
	xorw	%cx, %ax
	cmpw	$7368, %ax              # imm = 0x1CC8
	jne	.LBB25_638
# %bb.268:                              # %eval.split1501
	movl	moved+444, %eax
	movw	$7368, BasicBlockSignatureTracker # imm = 0x1CC8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_271
# %bb.269:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$7372, %ax              # imm = 0x1CCC
	jne	.LBB25_638
# %bb.270:                              # %eval.split1503
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$15, %eax
	movl	%eax, (%rcx)
	movw	$7372, BasicBlockSignatureTracker # imm = 0x1CCC
	movw	$4, RunTimeSignatureAdjuster
.LBB25_271:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$33, %ax
	xorw	%cx, %ax
	cmpw	$7401, %ax              # imm = 0x1CE9
	jne	.LBB25_638
# %bb.272:                              # %eval.split1505
	movl	moved+448, %eax
	movw	$7401, BasicBlockSignatureTracker # imm = 0x1CE9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_275
# %bb.273:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$492, %ax               # imm = 0x1EC
	cmpw	$7429, %ax              # imm = 0x1D05
	jne	.LBB25_638
# %bb.274:                              # %eval.split1507
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$10, %eax
	movl	%eax, (%rcx)
	movw	$7429, BasicBlockSignatureTracker # imm = 0x1D05
	movw	$492, RunTimeSignatureAdjuster # imm = 0x1EC
.LBB25_275:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$456, %ax               # imm = 0x1C8
	xorw	%cx, %ax
	cmpw	$7457, %ax              # imm = 0x1D21
	jne	.LBB25_638
# %bb.276:                              # %eval.split1509
	movw	$7457, BasicBlockSignatureTracker # imm = 0x1D21
	movw	$420, RunTimeSignatureAdjuster # imm = 0x1A4
.LBB25_277:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$450, %ax               # imm = 0x1C2
	xorw	%cx, %ax
	cmpw	$7495, %ax              # imm = 0x1D47
	jne	.LBB25_638
# %bb.278:                              # %eval.split1493
	movl	board+176, %eax
	movw	$7495, BasicBlockSignatureTracker # imm = 0x1D47
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_287
# %bb.279:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$7499, %ax              # imm = 0x1D4B
	jne	.LBB25_638
# %bb.280:                              # %eval.split1511
	movl	board+220, %eax
	movw	$7499, BasicBlockSignatureTracker # imm = 0x1D4B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB25_285
# %bb.281:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$7500, %ax              # imm = 0x1D4C
	jne	.LBB25_638
# %bb.282:                              # %eval.split1517
	movl	board+264, %eax
	movw	$7500, BasicBlockSignatureTracker # imm = 0x1D4C
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_287
# %bb.283:                              # %Buffer__10
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26449, %ax             # imm = 0x6751
	cmpw	$31261, %ax             # imm = 0x7A1D
	jne	.LBB25_638
# %bb.284:                              # %eval.split1519
	movw	$31261, BasicBlockSignatureTracker # imm = 0x7A1D
	movw	$26454, RunTimeSignatureAdjuster # imm = 0x6756
.LBB25_285:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$7513, %ax              # imm = 0x1D59
	jne	.LBB25_638
# %bb.286:                              # %eval.split1515
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$30, %eax
	movl	%eax, (%rcx)
	movw	$7513, BasicBlockSignatureTracker # imm = 0x1D59
	movw	$30, RunTimeSignatureAdjuster
.LBB25_287:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$36, %ax
	xorw	%cx, %ax
	cmpw	$7523, %ax              # imm = 0x1D63
	jne	.LBB25_638
# %bb.288:                              # %eval.split1513
	movl	board+416, %eax
	movw	$7523, BasicBlockSignatureTracker # imm = 0x1D63
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB25_297
# %bb.289:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$7527, %ax              # imm = 0x1D67
	jne	.LBB25_638
# %bb.290:                              # %eval.split1521
	movl	board+364, %eax
	movw	$7527, BasicBlockSignatureTracker # imm = 0x1D67
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_295
# %bb.291:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$7539, %ax              # imm = 0x1D73
	jne	.LBB25_638
# %bb.292:                              # %eval.split1527
	movl	board+312, %eax
	movw	$7539, BasicBlockSignatureTracker # imm = 0x1D73
	movw	$16, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB25_297
# %bb.293:                              # %Buffer__11
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30018, %ax            # imm = 0x8ABE
	cmpw	$-26675, %ax            # imm = 0x97CD
	jne	.LBB25_638
# %bb.294:                              # %eval.split1529
	movw	$-26675, BasicBlockSignatureTracker # imm = 0x97CD
	movw	$-30038, RunTimeSignatureAdjuster # imm = 0x8AAA
.LBB25_295:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$229, %ax
	xorw	%cx, %ax
	cmpw	$7554, %ax              # imm = 0x1D82
	jne	.LBB25_638
# %bb.296:                              # %eval.split1525
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$30, %eax
	movl	%eax, (%rcx)
	movw	$7554, BasicBlockSignatureTracker # imm = 0x1D82
	movw	$225, RunTimeSignatureAdjuster
.LBB25_297:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$199, %ax
	xorw	%cx, %ax
	cmpw	$7588, %ax              # imm = 0x1DA4
	jne	.LBB25_638
# %bb.298:                              # %eval.split1523
	movl	wking_loc, %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7588, BasicBlockSignatureTracker # imm = 0x1DA4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB25_301
# %bb.299:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$111, %ax
	cmpw	$7627, %ax              # imm = 0x1DCB
	jne	.LBB25_638
# %bb.300:                              # %eval.split1533
	movl	wking_loc, %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7627, BasicBlockSignatureTracker # imm = 0x1DCB
	movw	$111, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	jne	.LBB25_311
.LBB25_301:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$7631, %ax              # imm = 0x1DCF
	jne	.LBB25_638
# %bb.302:                              # %eval.split1531
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$35, %eax
	movl	%eax, (%rcx)
	movl	wking_loc, %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7631, BasicBlockSignatureTracker # imm = 0x1DCF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_305
# %bb.303:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$7635, %ax              # imm = 0x1DD3
	jne	.LBB25_638
# %bb.304:                              # %eval.split1537
	xorl	%eax, %eax
	movw	$7635, BasicBlockSignatureTracker # imm = 0x1DD3
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB25_307
	jmp	.LBB25_309
.LBB25_305:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$7637, %ax              # imm = 0x1DD5
	jne	.LBB25_638
# %bb.306:                              # %eval.split1539
	movl	wking_loc, %edi
	addl	$12, %edi
	movw	$7637, BasicBlockSignatureTracker # imm = 0x1DD5
	movw	$0, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	is_attacked
	movw	$7637, BasicBlockSignatureTracker # imm = 0x1DD5
	movw	$6, RunTimeSignatureAdjuster
	movw	$7637, BasicBlockSignatureTracker # imm = 0x1DD5
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_309
.LBB25_307:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$7640, %ax              # imm = 0x1DD8
	jne	.LBB25_638
# %bb.308:                              # %eval.split1541
	movl	$150, %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movw	$7640, BasicBlockSignatureTracker # imm = 0x1DD8
	movw	$11, RunTimeSignatureAdjuster
.LBB25_309:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$48, %ax
	xorw	%cx, %ax
	cmpw	$7651, %ax              # imm = 0x1DE3
	jne	.LBB25_638
# %bb.310:                              # %eval.split1543
	movw	$7651, BasicBlockSignatureTracker # imm = 0x1DE3
	movw	$40, RunTimeSignatureAdjuster
	jmp	.LBB25_313
.LBB25_311:                             # %Buffer__12
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-28461, %ax            # imm = 0x90D3
	cmpw	$-29416, %ax            # imm = 0x8D18
	jne	.LBB25_638
# %bb.312:                              # %eval.split1535
	movw	$-29416, BasicBlockSignatureTracker # imm = 0x8D18
	movw	$-28461, RunTimeSignatureAdjuster # imm = 0x90D3
.LBB25_313:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$7659, %ax              # imm = 0x1DEB
	jne	.LBB25_638
# %bb.314:                              # %eval.split1545
	movl	bking_loc, %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7659, BasicBlockSignatureTracker # imm = 0x1DEB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_317
# %bb.315:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$7661, %ax              # imm = 0x1DED
	jne	.LBB25_638
# %bb.316:                              # %eval.split1549
	movl	bking_loc, %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7661, BasicBlockSignatureTracker # imm = 0x1DED
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	jne	.LBB25_327
.LBB25_317:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$7665, %ax              # imm = 0x1DF1
	jne	.LBB25_638
# %bb.318:                              # %eval.split1547
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$35, %eax
	movl	%eax, (%rcx)
	movl	bking_loc, %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$7665, BasicBlockSignatureTracker # imm = 0x1DF1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_321
# %bb.319:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1021, %ax              # imm = 0x3FD
	cmpw	$7692, %ax              # imm = 0x1E0C
	jne	.LBB25_638
# %bb.320:                              # %eval.split1553
	xorl	%eax, %eax
	movw	$7692, BasicBlockSignatureTracker # imm = 0x1E0C
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB25_323
	jmp	.LBB25_325
.LBB25_321:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1001, %ax              # imm = 0x3E9
	cmpw	$7704, %ax              # imm = 0x1E18
	jne	.LBB25_638
# %bb.322:                              # %eval.split1555
	movl	bking_loc, %edi
	subl	$12, %edi
	movw	$7704, BasicBlockSignatureTracker # imm = 0x1E18
	movw	$973, RunTimeSignatureAdjuster # imm = 0x3CD
	movl	$1, %esi
	callq	is_attacked
	movw	$7704, BasicBlockSignatureTracker # imm = 0x1E18
	movw	$973, RunTimeSignatureAdjuster # imm = 0x3CD
	movw	$7704, BasicBlockSignatureTracker # imm = 0x1E18
	movw	$20, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_325
.LBB25_323:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$48, %ax
	xorw	%cx, %ax
	cmpw	$7740, %ax              # imm = 0x1E3C
	jne	.LBB25_638
# %bb.324:                              # %eval.split1557
	movl	$150, %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$7740, BasicBlockSignatureTracker # imm = 0x1E3C
	movw	$48, RunTimeSignatureAdjuster
.LBB25_325:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$72, %ax
	xorw	%cx, %ax
	cmpw	$7748, %ax              # imm = 0x1E44
	jne	.LBB25_638
# %bb.326:                              # %eval.split1559
	movw	$7748, BasicBlockSignatureTracker # imm = 0x1E44
	movw	$937, RunTimeSignatureAdjuster # imm = 0x3A9
	jmp	.LBB25_329
.LBB25_327:                             # %Buffer__13
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28319, %ax             # imm = 0x6E9F
	cmpw	$29554, %ax             # imm = 0x7372
	jne	.LBB25_638
# %bb.328:                              # %eval.split1551
	movw	$29554, BasicBlockSignatureTracker # imm = 0x7372
	movw	$28319, RunTimeSignatureAdjuster # imm = 0x6E9F
.LBB25_329:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$860, %ax               # imm = 0x35C
	xorw	%cx, %ax
	cmpw	$7857, %ax              # imm = 0x1EB1
	jne	.LBB25_638
# %bb.330:                              # %eval.split1561
	movl	board+172, %eax
	movw	$7857, BasicBlockSignatureTracker # imm = 0x1EB1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_337
# %bb.331:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$7861, %ax              # imm = 0x1EB5
	jne	.LBB25_638
# %bb.332:                              # %eval.split1565
	movl	board+216, %eax
	movw	$7861, BasicBlockSignatureTracker # imm = 0x1EB5
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_337
# %bb.333:                              # %Buffer__14
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$7869, %ax              # imm = 0x1EBD
	jne	.LBB25_638
# %bb.334:                              # %eval.split1567
	movw	$7869, BasicBlockSignatureTracker # imm = 0x1EBD
	movw	$8, RunTimeSignatureAdjuster
# %bb.335:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$7866, %ax              # imm = 0x1EBA
	jne	.LBB25_638
# %bb.336:                              # %eval.split1877
	movl	board+216, %eax
	movw	$7866, BasicBlockSignatureTracker # imm = 0x1EBA
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_363
.LBB25_337:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$112, %ax
	xorw	%cx, %ax
	cmpw	$7873, %ax              # imm = 0x1EC1
	jne	.LBB25_638
# %bb.338:                              # %eval.split1563
	movl	board+216, %eax
	movw	$7873, BasicBlockSignatureTracker # imm = 0x1EC1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_341
# %bb.339:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$7876, %ax              # imm = 0x1EC4
	jne	.LBB25_638
# %bb.340:                              # %eval.split1571
	xorl	%eax, %eax
	movw	$7876, BasicBlockSignatureTracker # imm = 0x1EC4
	movw	$126, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB25_343
	jmp	.LBB25_365
.LBB25_341:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32, %ax
	cmpw	$7905, %ax              # imm = 0x1EE1
	jne	.LBB25_638
# %bb.342:                              # %eval.split1573
	movw	$7905, BasicBlockSignatureTracker # imm = 0x1EE1
	movw	$820, RunTimeSignatureAdjuster # imm = 0x334
	movl	$54, %edi
	xorl	%esi, %esi
	callq	is_attacked
	movw	$7905, BasicBlockSignatureTracker # imm = 0x1EE1
	movw	$820, RunTimeSignatureAdjuster # imm = 0x334
	movw	$7905, BasicBlockSignatureTracker # imm = 0x1EE1
	movw	$91, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_345
	jmp	.LBB25_365
.LBB25_343:                             # %Buffer__16
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25066, %ax             # imm = 0x61EA
	cmpw	$32558, %ax             # imm = 0x7F2E
	jne	.LBB25_638
# %bb.344:                              # %eval.split1577
	movw	$32558, BasicBlockSignatureTracker # imm = 0x7F2E
	movw	$25066, RunTimeSignatureAdjuster # imm = 0x61EA
	jmp	.LBB25_347
.LBB25_345:                             # %Buffer__17
	movw	BasicBlockSignatureTracker, %ax
	xorw	$734, %ax               # imm = 0x2DE
	cmpw	$7231, %ax              # imm = 0x1C3F
	jne	.LBB25_638
# %bb.346:                              # %eval.split1579
	movw	$7231, BasicBlockSignatureTracker # imm = 0x1C3F
	movw	$763, RunTimeSignatureAdjuster # imm = 0x2FB
.LBB25_347:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$7931, %ax              # imm = 0x1EFB
	jne	.LBB25_638
# %bb.348:                              # %eval.split1879
	movl	board+172, %eax
	movw	$7931, BasicBlockSignatureTracker # imm = 0x1EFB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB25_351
# %bb.349:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$493, %ax               # imm = 0x1ED
	cmpw	$7958, %ax              # imm = 0x1F16
	jne	.LBB25_638
# %bb.350:                              # %eval.split1581
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$10, %eax
	movl	%eax, (%rcx)
	movw	$7958, BasicBlockSignatureTracker # imm = 0x1F16
	movw	$493, RunTimeSignatureAdjuster # imm = 0x1ED
.LBB25_351:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$485, %ax               # imm = 0x1E5
	xorw	%cx, %ax
	cmpw	$7966, %ax              # imm = 0x1F1E
	jne	.LBB25_638
# %bb.352:                              # %eval.split1583
	movl	board+216, %eax
	movw	$7966, BasicBlockSignatureTracker # imm = 0x1F1E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB25_355
# %bb.353:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$7973, %ax              # imm = 0x1F25
	jne	.LBB25_638
# %bb.354:                              # %eval.split1585
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$20, %eax
	movl	%eax, (%rcx)
	movw	$7973, BasicBlockSignatureTracker # imm = 0x1F25
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_361
.LBB25_355:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$7977, %ax              # imm = 0x1F29
	jne	.LBB25_638
# %bb.356:                              # %eval.split1587
	movl	board+216, %eax
	movw	$7977, BasicBlockSignatureTracker # imm = 0x1F29
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_359
# %bb.357:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$7978, %ax              # imm = 0x1F2A
	jne	.LBB25_638
# %bb.358:                              # %eval.split1591
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$15, %eax
	movl	%eax, (%rcx)
	movw	$7978, BasicBlockSignatureTracker # imm = 0x1F2A
	movw	$3, RunTimeSignatureAdjuster
.LBB25_359:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$99, %ax
	xorw	%cx, %ax
	cmpw	$8010, %ax              # imm = 0x1F4A
	jne	.LBB25_638
# %bb.360:                              # %eval.split1593
	movw	$8010, BasicBlockSignatureTracker # imm = 0x1F4A
	movw	$111, RunTimeSignatureAdjuster
.LBB25_361:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$105, %ax
	xorw	%cx, %ax
	cmpw	$8012, %ax              # imm = 0x1F4C
	jne	.LBB25_638
# %bb.362:                              # %eval.split1589
	movw	$8012, BasicBlockSignatureTracker # imm = 0x1F4C
	movw	$502, RunTimeSignatureAdjuster # imm = 0x1F6
	jmp	.LBB25_365
.LBB25_363:                             # %Buffer__15
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22803, %ax            # imm = 0xA6ED
	cmpw	$-18345, %ax            # imm = 0xB857
	jne	.LBB25_638
# %bb.364:                              # %eval.split1569
	movw	$-18345, BasicBlockSignatureTracker # imm = 0xB857
	movw	$-22803, RunTimeSignatureAdjuster # imm = 0xA6ED
.LBB25_365:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$487, %ax               # imm = 0x1E7
	xorw	%cx, %ax
	cmpw	$8029, %ax              # imm = 0x1F5D
	jne	.LBB25_638
# %bb.366:                              # %eval.split1575
	movl	board+412, %eax
	movw	$8029, BasicBlockSignatureTracker # imm = 0x1F5D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB25_373
# %bb.367:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$8039, %ax              # imm = 0x1F67
	jne	.LBB25_638
# %bb.368:                              # %eval.split1597
	movl	board+360, %eax
	movw	$8039, BasicBlockSignatureTracker # imm = 0x1F67
	movw	$58, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB25_373
# %bb.369:                              # %Buffer__18
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22714, %ax            # imm = 0xA746
	cmpw	$-18399, %ax            # imm = 0xB821
	jne	.LBB25_638
# %bb.370:                              # %eval.split1599
	movw	$-18399, BasicBlockSignatureTracker # imm = 0xB821
	movw	$-22714, RunTimeSignatureAdjuster # imm = 0xA746
# %bb.371:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$193, %ax
	xorw	%cx, %ax
	cmpw	$8102, %ax              # imm = 0x1FA6
	jne	.LBB25_638
# %bb.372:                              # %eval.split1881
	movl	board+360, %eax
	movw	$8102, BasicBlockSignatureTracker # imm = 0x1FA6
	movw	$251, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB25_399
.LBB25_373:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$246, %ax
	xorw	%cx, %ax
	cmpw	$8107, %ax              # imm = 0x1FAB
	jne	.LBB25_638
# %bb.374:                              # %eval.split1595
	movl	board+360, %eax
	movw	$8107, BasicBlockSignatureTracker # imm = 0x1FAB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_377
# %bb.375:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$97, %ax
	cmpw	$8138, %ax              # imm = 0x1FCA
	jne	.LBB25_638
# %bb.376:                              # %eval.split1603
	xorl	%eax, %eax
	movw	$8138, BasicBlockSignatureTracker # imm = 0x1FCA
	movw	$108, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB25_379
	jmp	.LBB25_401
.LBB25_377:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$103, %ax
	cmpw	$8140, %ax              # imm = 0x1FCC
	jne	.LBB25_638
# %bb.378:                              # %eval.split1605
	movw	$8140, BasicBlockSignatureTracker # imm = 0x1FCC
	movw	$537, RunTimeSignatureAdjuster # imm = 0x219
	movl	$90, %edi
	movl	$1, %esi
	callq	is_attacked
	movw	$8140, BasicBlockSignatureTracker # imm = 0x1FCC
	movw	$537, RunTimeSignatureAdjuster # imm = 0x219
	movw	$8140, BasicBlockSignatureTracker # imm = 0x1FCC
	movw	$106, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_381
	jmp	.LBB25_401
.LBB25_379:                             # %Buffer__20
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29265, %ax            # imm = 0x8DAF
	cmpw	$-28059, %ax            # imm = 0x9265
	jne	.LBB25_638
# %bb.380:                              # %eval.split1609
	movw	$-28059, BasicBlockSignatureTracker # imm = 0x9265
	movw	$-29265, RunTimeSignatureAdjuster # imm = 0x8DAF
	jmp	.LBB25_383
.LBB25_381:                             # %Buffer__21
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12569, %ax            # imm = 0xCEE7
	cmpw	$-11989, %ax            # imm = 0xD12B
	jne	.LBB25_638
# %bb.382:                              # %eval.split1611
	movw	$-11989, BasicBlockSignatureTracker # imm = 0xD12B
	movw	$-12575, RunTimeSignatureAdjuster # imm = 0xCEE1
.LBB25_383:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$39, %ax
	xorw	%cx, %ax
	cmpw	$8173, %ax              # imm = 0x1FED
	jne	.LBB25_638
# %bb.384:                              # %eval.split1883
	movl	board+412, %eax
	movw	$8173, BasicBlockSignatureTracker # imm = 0x1FED
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_387
# %bb.385:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$8174, %ax              # imm = 0x1FEE
	jne	.LBB25_638
# %bb.386:                              # %eval.split1613
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$10, %eax
	movl	%eax, (%rcx)
	movw	$8174, BasicBlockSignatureTracker # imm = 0x1FEE
	movw	$3, RunTimeSignatureAdjuster
.LBB25_387:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16365, %ax             # imm = 0x3FED
	xorw	%cx, %ax
	cmpw	$8192, %ax              # imm = 0x2000
	jne	.LBB25_638
# %bb.388:                              # %eval.split1615
	movl	board+360, %eax
	movw	$8192, BasicBlockSignatureTracker # imm = 0x2000
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB25_391
# %bb.389:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$8214, %ax              # imm = 0x2016
	jne	.LBB25_638
# %bb.390:                              # %eval.split1617
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$20, %eax
	movl	%eax, (%rcx)
	movw	$8214, BasicBlockSignatureTracker # imm = 0x2016
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_397
.LBB25_391:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$8245, %ax              # imm = 0x2035
	jne	.LBB25_638
# %bb.392:                              # %eval.split1619
	movl	board+360, %eax
	movw	$8245, BasicBlockSignatureTracker # imm = 0x2035
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB25_395
# %bb.393:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$8248, %ax              # imm = 0x2038
	jne	.LBB25_638
# %bb.394:                              # %eval.split1623
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$15, %eax
	movl	%eax, (%rcx)
	movw	$8248, BasicBlockSignatureTracker # imm = 0x2038
	movw	$13, RunTimeSignatureAdjuster
.LBB25_395:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$8252, %ax              # imm = 0x203C
	jne	.LBB25_638
# %bb.396:                              # %eval.split1625
	movw	$8252, BasicBlockSignatureTracker # imm = 0x203C
	movw	$42, RunTimeSignatureAdjuster
.LBB25_397:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$8253, %ax              # imm = 0x203D
	jne	.LBB25_638
# %bb.398:                              # %eval.split1621
	movw	$8253, BasicBlockSignatureTracker # imm = 0x203D
	movw	$16283, RunTimeSignatureAdjuster # imm = 0x3F9B
	jmp	.LBB25_401
.LBB25_399:                             # %Buffer__19
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12498, %ax             # imm = 0x30D2
	cmpw	$12148, %ax             # imm = 0x2F74
	jne	.LBB25_638
# %bb.400:                              # %eval.split1601
	movw	$12148, BasicBlockSignatureTracker # imm = 0x2F74
	movw	$12498, RunTimeSignatureAdjuster # imm = 0x30D2
.LBB25_401:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16375, %ax             # imm = 0x3FF7
	xorw	%cx, %ax
	cmpw	$8273, %ax              # imm = 0x2051
	jne	.LBB25_638
# %bb.402:                              # %eval.split1607
	movslq	bking_loc, %rax
	movl	board(,%rax,4), %eax
	movw	$8273, BasicBlockSignatureTracker # imm = 0x2051
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_405
# %bb.403:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$8280, %ax              # imm = 0x2058
	jne	.LBB25_638
# %bb.404:                              # %eval.split1627
	xorl	%eax, %eax
	movw	$8280, BasicBlockSignatureTracker # imm = 0x2058
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB25_407
	jmp	.LBB25_409
.LBB25_405:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$8298, %ax              # imm = 0x206A
	jne	.LBB25_638
# %bb.406:                              # %eval.split1629
	movl	bking_loc, %edi
	movw	$8298, BasicBlockSignatureTracker # imm = 0x206A
	movw	$15807, RunTimeSignatureAdjuster # imm = 0x3DBF
	movl	$1, %esi
	callq	is_attacked
	movw	$8298, BasicBlockSignatureTracker # imm = 0x206A
	movw	$15807, RunTimeSignatureAdjuster # imm = 0x3DBF
	movw	$8298, BasicBlockSignatureTracker # imm = 0x206A
	movw	$50, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_409
.LBB25_407:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$52, %ax
	xorw	%cx, %ax
	cmpw	$8300, %ax              # imm = 0x206C
	jne	.LBB25_638
# %bb.408:                              # %eval.split1631
	movl	$50, %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$8300, BasicBlockSignatureTracker # imm = 0x206C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_419
.LBB25_409:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$54, %ax
	xorw	%cx, %ax
	cmpw	$8302, %ax              # imm = 0x206E
	jne	.LBB25_638
# %bb.410:                              # %eval.split1633
	movslq	wking_loc, %rax
	movl	board(,%rax,4), %eax
	movw	$8302, BasicBlockSignatureTracker # imm = 0x206E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_413
# %bb.411:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$8311, %ax              # imm = 0x2077
	jne	.LBB25_638
# %bb.412:                              # %eval.split1637
	xorl	%eax, %eax
	movw	$8311, BasicBlockSignatureTracker # imm = 0x2077
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB25_415
	jmp	.LBB25_417
.LBB25_413:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$233, %ax
	cmpw	$8327, %ax              # imm = 0x2087
	jne	.LBB25_638
# %bb.414:                              # %eval.split1639
	movl	wking_loc, %edi
	movw	$8327, BasicBlockSignatureTracker # imm = 0x2087
	movw	$15698, RunTimeSignatureAdjuster # imm = 0x3D52
	xorl	%esi, %esi
	callq	is_attacked
	movw	$8327, BasicBlockSignatureTracker # imm = 0x2087
	movw	$15698, RunTimeSignatureAdjuster # imm = 0x3D52
	movw	$8327, BasicBlockSignatureTracker # imm = 0x2087
	movw	$240, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_417
.LBB25_415:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$251, %ax
	xorw	%cx, %ax
	cmpw	$8332, %ax              # imm = 0x208C
	jne	.LBB25_638
# %bb.416:                              # %eval.split1641
	movl	$50, %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
                                        # kill: def %cl killed %ecx
	sarl	%cl, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movw	$8332, BasicBlockSignatureTracker # imm = 0x208C
	movw	$251, RunTimeSignatureAdjuster
.LBB25_417:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$228, %ax
	xorw	%cx, %ax
	cmpw	$8339, %ax              # imm = 0x2093
	jne	.LBB25_638
# %bb.418:                              # %eval.split1643
	movw	$8339, BasicBlockSignatureTracker # imm = 0x2093
	movw	$255, RunTimeSignatureAdjuster
.LBB25_419:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$248, %ax
	xorw	%cx, %ax
	cmpw	$8340, %ax              # imm = 0x2094
	jne	.LBB25_638
# %bb.420:                              # %eval.split1635
	movl	board+176, %eax
	movw	$8340, BasicBlockSignatureTracker # imm = 0x2094
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB25_439
# %bb.421:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$8357, %ax              # imm = 0x20A5
	jne	.LBB25_638
# %bb.422:                              # %eval.split1645
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$20, %eax
	movl	%eax, (%rcx)
	movl	board+176, %eax
	movw	$8357, BasicBlockSignatureTracker # imm = 0x20A5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_425
# %bb.423:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$8368, %ax              # imm = 0x20B0
	jne	.LBB25_638
# %bb.424:                              # %eval.split1649
	xorl	%eax, %eax
	movw	$8368, BasicBlockSignatureTracker # imm = 0x20B0
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB25_427
	jmp	.LBB25_429
.LBB25_425:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$103, %ax
	cmpw	$8386, %ax              # imm = 0x20C2
	jne	.LBB25_638
# %bb.426:                              # %eval.split1651
	movw	$8386, BasicBlockSignatureTracker # imm = 0x20C2
	movw	$15639, RunTimeSignatureAdjuster # imm = 0x3D17
	movl	$44, %edi
	xorl	%esi, %esi
	callq	is_attacked
	movw	$8386, BasicBlockSignatureTracker # imm = 0x20C2
	movw	$15639, RunTimeSignatureAdjuster # imm = 0x3D17
	movw	$8386, BasicBlockSignatureTracker # imm = 0x20C2
	movw	$114, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_429
.LBB25_427:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$118, %ax
	xorw	%cx, %ax
	cmpw	$8390, %ax              # imm = 0x20C6
	jne	.LBB25_638
# %bb.428:                              # %eval.split1653
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$40, %eax
	movl	%eax, (%rcx)
	movw	$8390, BasicBlockSignatureTracker # imm = 0x20C6
	movw	$118, RunTimeSignatureAdjuster
.LBB25_429:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$98, %ax
	xorw	%cx, %ax
	cmpw	$8402, %ax              # imm = 0x20D2
	jne	.LBB25_638
# %bb.430:                              # %eval.split1655
	movl	board+128, %eax
	movw	$8402, BasicBlockSignatureTracker # imm = 0x20D2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB25_433
# %bb.431:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$8407, %ax              # imm = 0x20D7
	jne	.LBB25_638
# %bb.432:                              # %eval.split1657
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$10, %eax
	movl	%eax, (%rcx)
	movw	$8407, BasicBlockSignatureTracker # imm = 0x20D7
	movw	$5, RunTimeSignatureAdjuster
.LBB25_433:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$8408, %ax              # imm = 0x20D8
	jne	.LBB25_638
# %bb.434:                              # %eval.split1659
	movl	board+124, %eax
	movw	$8408, BasicBlockSignatureTracker # imm = 0x20D8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	jne	.LBB25_437
# %bb.435:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$8431, %ax              # imm = 0x20EF
	jne	.LBB25_638
# %bb.436:                              # %eval.split1661
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$10, %eax
	movl	%eax, (%rcx)
	movw	$8431, BasicBlockSignatureTracker # imm = 0x20EF
	movw	$55, RunTimeSignatureAdjuster
.LBB25_437:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$8435, %ax              # imm = 0x20F3
	jne	.LBB25_638
# %bb.438:                              # %eval.split1663
	movw	$8435, BasicBlockSignatureTracker # imm = 0x20F3
	movw	$103, RunTimeSignatureAdjuster
.LBB25_439:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$388, %ax               # imm = 0x184
	xorw	%cx, %ax
	cmpw	$8464, %ax              # imm = 0x2110
	jne	.LBB25_638
# %bb.440:                              # %eval.split1647
	movl	board+416, %eax
	movw	$8464, BasicBlockSignatureTracker # imm = 0x2110
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB25_459
# %bb.441:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$8486, %ax              # imm = 0x2126
	jne	.LBB25_638
# %bb.442:                              # %eval.split1665
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$20, %eax
	movl	%eax, (%rcx)
	movl	board+416, %eax
	movw	$8486, BasicBlockSignatureTracker # imm = 0x2126
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_445
# %bb.443:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$8504, %ax              # imm = 0x2138
	jne	.LBB25_638
# %bb.444:                              # %eval.split1669
	xorl	%eax, %eax
	movw	$8504, BasicBlockSignatureTracker # imm = 0x2138
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB25_447
	jmp	.LBB25_449
.LBB25_445:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$8507, %ax              # imm = 0x213B
	jne	.LBB25_638
# %bb.446:                              # %eval.split1671
	movw	$8507, BasicBlockSignatureTracker # imm = 0x213B
	movw	$15598, RunTimeSignatureAdjuster # imm = 0x3CEE
	movl	$104, %edi
	movl	$1, %esi
	callq	is_attacked
	movw	$8507, BasicBlockSignatureTracker # imm = 0x213B
	movw	$15598, RunTimeSignatureAdjuster # imm = 0x3CEE
	movw	$8507, BasicBlockSignatureTracker # imm = 0x213B
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_449
.LBB25_447:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$119, %ax
	xorw	%cx, %ax
	cmpw	$8527, %ax              # imm = 0x214F
	jne	.LBB25_638
# %bb.448:                              # %eval.split1673
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$40, %eax
	movl	%eax, (%rcx)
	movw	$8527, BasicBlockSignatureTracker # imm = 0x214F
	movw	$119, RunTimeSignatureAdjuster
.LBB25_449:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$82, %ax
	xorw	%cx, %ax
	cmpw	$8554, %ax              # imm = 0x216A
	jne	.LBB25_638
# %bb.450:                              # %eval.split1675
	movl	board+464, %eax
	movw	$8554, BasicBlockSignatureTracker # imm = 0x216A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jne	.LBB25_453
# %bb.451:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$8559, %ax              # imm = 0x216F
	jne	.LBB25_638
# %bb.452:                              # %eval.split1677
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$10, %eax
	movl	%eax, (%rcx)
	movw	$8559, BasicBlockSignatureTracker # imm = 0x216F
	movw	$5, RunTimeSignatureAdjuster
.LBB25_453:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$251, %ax
	xorw	%cx, %ax
	cmpw	$8593, %ax              # imm = 0x2191
	jne	.LBB25_638
# %bb.454:                              # %eval.split1679
	movl	board+460, %eax
	movw	$8593, BasicBlockSignatureTracker # imm = 0x2191
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	jne	.LBB25_457
# %bb.455:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$8607, %ax              # imm = 0x219F
	jne	.LBB25_638
# %bb.456:                              # %eval.split1681
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$10, %eax
	movl	%eax, (%rcx)
	movw	$8607, BasicBlockSignatureTracker # imm = 0x219F
	movw	$14, RunTimeSignatureAdjuster
.LBB25_457:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$8625, %ax              # imm = 0x21B1
	jne	.LBB25_638
# %bb.458:                              # %eval.split1683
	movw	$8625, BasicBlockSignatureTracker # imm = 0x21B1
	movw	$161, RunTimeSignatureAdjuster
.LBB25_459:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$165, %ax
	xorw	%cx, %ax
	cmpw	$8629, %ax              # imm = 0x21B5
	jne	.LBB25_638
# %bb.460:                              # %eval.split1667
	movl	board+228, %eax
	movw	$8629, BasicBlockSignatureTracker # imm = 0x21B5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	jne	.LBB25_483
# %bb.461:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$124, %ax
	cmpw	$8649, %ax              # imm = 0x21C9
	jne	.LBB25_638
# %bb.462:                              # %eval.split1685
	movl	board+176, %eax
	movw	$8649, BasicBlockSignatureTracker # imm = 0x21C9
	movw	$124, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB25_483
# %bb.463:                              # %Buffer__22
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-32498, %ax            # imm = 0x810E
	cmpw	$-24377, %ax            # imm = 0xA0C7
	jne	.LBB25_638
# %bb.464:                              # %eval.split1689
	movw	$-24377, BasicBlockSignatureTracker # imm = 0xA0C7
	movw	$-32498, RunTimeSignatureAdjuster # imm = 0x810E
# %bb.465:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$8650, %ax              # imm = 0x21CA
	jne	.LBB25_638
# %bb.466:                              # %eval.split1885
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$20, %eax
	movl	%eax, (%rcx)
	movl	board+176, %eax
	movw	$8650, BasicBlockSignatureTracker # imm = 0x21CA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB25_481
# %bb.467:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$8690, %ax              # imm = 0x21F2
	jne	.LBB25_638
# %bb.468:                              # %eval.split1691
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$40, %eax
	movl	%eax, (%rcx)
	movl	board+124, %eax
	movw	$8690, BasicBlockSignatureTracker # imm = 0x21F2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB25_475
# %bb.469:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$8691, %ax              # imm = 0x21F3
	jne	.LBB25_638
# %bb.470:                              # %eval.split1697
	movl	board+128, %eax
	movw	$8691, BasicBlockSignatureTracker # imm = 0x21F3
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB25_475
# %bb.471:                              # %Buffer__23
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8399, %ax             # imm = 0xDF31
	cmpw	$-318, %ax              # imm = 0xFEC2
	jne	.LBB25_638
# %bb.472:                              # %eval.split1699
	movw	$-318, BasicBlockSignatureTracker # imm = 0xFEC2
	movw	$-8399, RunTimeSignatureAdjuster # imm = 0xDF31
# %bb.473:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1019, %ax              # imm = 0x3FB
	xorw	%cx, %ax
	cmpw	$8712, %ax              # imm = 0x2208
	jne	.LBB25_638
# %bb.474:                              # %eval.split1887
	movl	board+132, %eax
	movw	$8712, BasicBlockSignatureTracker # imm = 0x2208
	movw	$1018, RunTimeSignatureAdjuster # imm = 0x3FA
	cmpl	$5, %eax
	jne	.LBB25_477
.LBB25_475:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1002, %ax              # imm = 0x3EA
	xorw	%cx, %ax
	cmpw	$8728, %ax              # imm = 0x2218
	jne	.LBB25_638
# %bb.476:                              # %eval.split1695
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$80, %eax
	movl	%eax, (%rcx)
	movw	$8728, BasicBlockSignatureTracker # imm = 0x2218
	movw	$16, RunTimeSignatureAdjuster
	jmp	.LBB25_479
.LBB25_477:                             # %Buffer__24
	movw	BasicBlockSignatureTracker, %ax
	xorw	$381, %ax               # imm = 0x17D
	cmpw	$9077, %ax              # imm = 0x2375
	jne	.LBB25_638
# %bb.478:                              # %eval.split1701
	movw	$9077, BasicBlockSignatureTracker # imm = 0x2375
	movw	$381, RunTimeSignatureAdjuster # imm = 0x17D
.LBB25_479:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$8755, %ax              # imm = 0x2233
	jne	.LBB25_638
# %bb.480:                              # %eval.split1703
	movw	$8755, BasicBlockSignatureTracker # imm = 0x2233
	movw	$1017, RunTimeSignatureAdjuster # imm = 0x3F9
.LBB25_481:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1008, %ax              # imm = 0x3F0
	xorw	%cx, %ax
	cmpw	$8762, %ax              # imm = 0x223A
	jne	.LBB25_638
# %bb.482:                              # %eval.split1693
	movw	$8762, BasicBlockSignatureTracker # imm = 0x223A
	movw	$911, RunTimeSignatureAdjuster # imm = 0x38F
.LBB25_483:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1014, %ax              # imm = 0x3F6
	xorw	%cx, %ax
	cmpw	$8771, %ax              # imm = 0x2243
	jne	.LBB25_638
# %bb.484:                              # %eval.split1687
	movl	board+372, %eax
	movw	$8771, BasicBlockSignatureTracker # imm = 0x2243
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	jne	.LBB25_507
# %bb.485:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$8777, %ax              # imm = 0x2249
	jne	.LBB25_638
# %bb.486:                              # %eval.split1705
	movl	board+416, %eax
	movw	$8777, BasicBlockSignatureTracker # imm = 0x2249
	movw	$10, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB25_507
# %bb.487:                              # %Buffer__25
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22491, %ax             # imm = 0x57DB
	cmpw	$30098, %ax             # imm = 0x7592
	jne	.LBB25_638
# %bb.488:                              # %eval.split1709
	movw	$30098, BasicBlockSignatureTracker # imm = 0x7592
	movw	$22491, RunTimeSignatureAdjuster # imm = 0x57DB
# %bb.489:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$8782, %ax              # imm = 0x224E
	jne	.LBB25_638
# %bb.490:                              # %eval.split1889
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$20, %eax
	movl	%eax, (%rcx)
	movl	board+416, %eax
	movw	$8782, BasicBlockSignatureTracker # imm = 0x224E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB25_505
# %bb.491:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$8799, %ax              # imm = 0x225F
	jne	.LBB25_638
# %bb.492:                              # %eval.split1711
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$40, %eax
	movl	%eax, (%rcx)
	movl	board+460, %eax
	movw	$8799, BasicBlockSignatureTracker # imm = 0x225F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	je	.LBB25_499
# %bb.493:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$8800, %ax              # imm = 0x2260
	jne	.LBB25_638
# %bb.494:                              # %eval.split1717
	movl	board+464, %eax
	movw	$8800, BasicBlockSignatureTracker # imm = 0x2260
	movw	$63, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	je	.LBB25_499
# %bb.495:                              # %Buffer__26
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-6847, %ax             # imm = 0xE541
	cmpw	$-14559, %ax            # imm = 0xC721
	jne	.LBB25_638
# %bb.496:                              # %eval.split1719
	movw	$-14559, BasicBlockSignatureTracker # imm = 0xC721
	movw	$-6847, RunTimeSignatureAdjuster # imm = 0xE541
# %bb.497:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$8809, %ax              # imm = 0x2269
	jne	.LBB25_638
# %bb.498:                              # %eval.split1891
	movl	board+468, %eax
	movw	$8809, BasicBlockSignatureTracker # imm = 0x2269
	movw	$54, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jne	.LBB25_501
.LBB25_499:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$48, %ax
	xorw	%cx, %ax
	cmpw	$8815, %ax              # imm = 0x226F
	jne	.LBB25_638
# %bb.500:                              # %eval.split1715
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$80, %eax
	movl	%eax, (%rcx)
	movw	$8815, BasicBlockSignatureTracker # imm = 0x226F
	movw	$6, RunTimeSignatureAdjuster
	jmp	.LBB25_503
.LBB25_501:                             # %Buffer__27
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3184, %ax             # imm = 0xF390
	cmpw	$-11783, %ax            # imm = 0xD1F9
	jne	.LBB25_638
# %bb.502:                              # %eval.split1721
	movw	$-11783, BasicBlockSignatureTracker # imm = 0xD1F9
	movw	$-3184, RunTimeSignatureAdjuster # imm = 0xF390
.LBB25_503:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$8819, %ax              # imm = 0x2273
	jne	.LBB25_638
# %bb.504:                              # %eval.split1723
	movw	$8819, BasicBlockSignatureTracker # imm = 0x2273
	movw	$61, RunTimeSignatureAdjuster
.LBB25_505:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$220, %ax
	xorw	%cx, %ax
	cmpw	$8850, %ax              # imm = 0x2292
	jne	.LBB25_638
# %bb.506:                              # %eval.split1713
	movw	$8850, BasicBlockSignatureTracker # imm = 0x2292
	movw	$209, RunTimeSignatureAdjuster
.LBB25_507:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$222, %ax
	xorw	%cx, %ax
	cmpw	$8861, %ax              # imm = 0x229D
	jne	.LBB25_638
# %bb.508:                              # %eval.split1707
	movw	$8861, BasicBlockSignatureTracker # imm = 0x229D
	movw	$14451, RunTimeSignatureAdjuster # imm = 0x3873
.LBB25_509:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14408, %ax             # imm = 0x3848
	xorw	%cx, %ax
	cmpw	$8870, %ax              # imm = 0x22A6
	jne	.LBB25_638
# %bb.510:                              # %eval.split1401
	movl	cfg_attackeval, %eax
	movw	$8870, BasicBlockSignatureTracker # imm = 0x22A6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB25_629
# %bb.511:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$8882, %ax              # imm = 0x22B2
	jne	.LBB25_638
# %bb.512:                              # %eval.split1725
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movl	wking_loc, %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$8882, BasicBlockSignatureTracker # imm = 0x22B2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_515
# %bb.513:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$8884, %ax              # imm = 0x22B4
	jne	.LBB25_638
# %bb.514:                              # %eval.split1729
	xorl	%eax, %eax
	movw	$8884, BasicBlockSignatureTracker # imm = 0x22B4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_517
.LBB25_515:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$8885, %ax              # imm = 0x22B5
	jne	.LBB25_638
# %bb.516:                              # %eval.split1731
	movl	wking_loc, %edi
	subl	$13, %edi
	movw	$8885, BasicBlockSignatureTracker # imm = 0x22B5
	movw	$0, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	nk_attacked
	movw	$8885, BasicBlockSignatureTracker # imm = 0x22B5
	movw	$1, RunTimeSignatureAdjuster
	movw	$8885, BasicBlockSignatureTracker # imm = 0x22B5
	movw	$1, RunTimeSignatureAdjuster
.LBB25_517:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$117, %cx
	xorw	%dx, %cx
	cmpw	$8897, %cx              # imm = 0x22C1
	jne	.LBB25_638
# %bb.518:                              # %eval.split1733
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	wking_loc, %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$8897, BasicBlockSignatureTracker # imm = 0x22C1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_521
# %bb.519:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$8924, %ax              # imm = 0x22DC
	jne	.LBB25_638
# %bb.520:                              # %eval.split1735
	xorl	%eax, %eax
	movw	$8924, BasicBlockSignatureTracker # imm = 0x22DC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_523
.LBB25_521:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$8926, %ax              # imm = 0x22DE
	jne	.LBB25_638
# %bb.522:                              # %eval.split1737
	movl	wking_loc, %edi
	subl	$12, %edi
	movw	$8926, BasicBlockSignatureTracker # imm = 0x22DE
	movw	$107, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	nk_attacked
	movw	$8926, BasicBlockSignatureTracker # imm = 0x22DE
	movw	$107, RunTimeSignatureAdjuster
	movw	$8926, BasicBlockSignatureTracker # imm = 0x22DE
	movw	$2, RunTimeSignatureAdjuster
.LBB25_523:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$56, %cx
	xorw	%dx, %cx
	cmpw	$8932, %cx              # imm = 0x22E4
	jne	.LBB25_638
# %bb.524:                              # %eval.split1739
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	wking_loc, %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$8932, BasicBlockSignatureTracker # imm = 0x22E4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_527
# %bb.525:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$8934, %ax              # imm = 0x22E6
	jne	.LBB25_638
# %bb.526:                              # %eval.split1741
	xorl	%eax, %eax
	movw	$8934, BasicBlockSignatureTracker # imm = 0x22E6
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_529
.LBB25_527:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$8953, %ax              # imm = 0x22F9
	jne	.LBB25_638
# %bb.528:                              # %eval.split1743
	movl	wking_loc, %edi
	subl	$11, %edi
	movw	$8953, BasicBlockSignatureTracker # imm = 0x22F9
	movw	$76, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	nk_attacked
	movw	$8953, BasicBlockSignatureTracker # imm = 0x22F9
	movw	$76, RunTimeSignatureAdjuster
	movw	$8953, BasicBlockSignatureTracker # imm = 0x22F9
	movw	$31, RunTimeSignatureAdjuster
.LBB25_529:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$29, %cx
	xorw	%dx, %cx
	cmpw	$8955, %cx              # imm = 0x22FB
	jne	.LBB25_638
# %bb.530:                              # %eval.split1745
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	wking_loc, %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$8955, BasicBlockSignatureTracker # imm = 0x22FB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_533
# %bb.531:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$505, %ax               # imm = 0x1F9
	cmpw	$8962, %ax              # imm = 0x2302
	jne	.LBB25_638
# %bb.532:                              # %eval.split1747
	xorl	%eax, %eax
	movw	$8962, BasicBlockSignatureTracker # imm = 0x2302
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_535
.LBB25_533:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$511, %ax               # imm = 0x1FF
	cmpw	$8964, %ax              # imm = 0x2304
	jne	.LBB25_638
# %bb.534:                              # %eval.split1749
	movl	wking_loc, %edi
	subl	$1, %edi
	movw	$8964, BasicBlockSignatureTracker # imm = 0x2304
	movw	$433, RunTimeSignatureAdjuster # imm = 0x1B1
	xorl	%esi, %esi
	callq	nk_attacked
	movw	$8964, BasicBlockSignatureTracker # imm = 0x2304
	movw	$433, RunTimeSignatureAdjuster # imm = 0x1B1
	movw	$8964, BasicBlockSignatureTracker # imm = 0x2304
	movw	$6, RunTimeSignatureAdjuster
.LBB25_535:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$8, %cx
	xorw	%dx, %cx
	cmpw	$8970, %cx              # imm = 0x230A
	jne	.LBB25_638
# %bb.536:                              # %eval.split1751
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	wking_loc, %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$8970, BasicBlockSignatureTracker # imm = 0x230A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_539
# %bb.537:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$8976, %ax              # imm = 0x2310
	jne	.LBB25_638
# %bb.538:                              # %eval.split1753
	xorl	%eax, %eax
	movw	$8976, BasicBlockSignatureTracker # imm = 0x2310
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_541
.LBB25_539:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$8985, %ax              # imm = 0x2319
	jne	.LBB25_638
# %bb.540:                              # %eval.split1755
	movl	wking_loc, %edi
	addl	$1, %edi
	movw	$8985, BasicBlockSignatureTracker # imm = 0x2319
	movw	$428, RunTimeSignatureAdjuster # imm = 0x1AC
	xorl	%esi, %esi
	callq	nk_attacked
	movw	$8985, BasicBlockSignatureTracker # imm = 0x2319
	movw	$428, RunTimeSignatureAdjuster # imm = 0x1AC
	movw	$8985, BasicBlockSignatureTracker # imm = 0x2319
	movw	$9, RunTimeSignatureAdjuster
.LBB25_541:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$11, %cx
	xorw	%dx, %cx
	cmpw	$8987, %cx              # imm = 0x231B
	jne	.LBB25_638
# %bb.542:                              # %eval.split1757
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	wking_loc, %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$8987, BasicBlockSignatureTracker # imm = 0x231B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_545
# %bb.543:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$9001, %ax              # imm = 0x2329
	jne	.LBB25_638
# %bb.544:                              # %eval.split1759
	xorl	%eax, %eax
	movw	$9001, BasicBlockSignatureTracker # imm = 0x2329
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_547
.LBB25_545:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$9002, %ax              # imm = 0x232A
	jne	.LBB25_638
# %bb.546:                              # %eval.split1761
	movl	wking_loc, %edi
	addl	$11, %edi
	movw	$9002, BasicBlockSignatureTracker # imm = 0x232A
	movw	$415, RunTimeSignatureAdjuster # imm = 0x19F
	xorl	%esi, %esi
	callq	nk_attacked
	movw	$9002, BasicBlockSignatureTracker # imm = 0x232A
	movw	$415, RunTimeSignatureAdjuster # imm = 0x19F
	movw	$9002, BasicBlockSignatureTracker # imm = 0x232A
	movw	$3, RunTimeSignatureAdjuster
.LBB25_547:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$7, %cx
	xorw	%dx, %cx
	cmpw	$9006, %cx              # imm = 0x232E
	jne	.LBB25_638
# %bb.548:                              # %eval.split1763
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	wking_loc, %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$9006, BasicBlockSignatureTracker # imm = 0x232E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_551
# %bb.549:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$9013, %ax              # imm = 0x2335
	jne	.LBB25_638
# %bb.550:                              # %eval.split1765
	xorl	%eax, %eax
	movw	$9013, BasicBlockSignatureTracker # imm = 0x2335
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_553
.LBB25_551:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$100, %ax
	cmpw	$9034, %ax              # imm = 0x234A
	jne	.LBB25_638
# %bb.552:                              # %eval.split1767
	movl	wking_loc, %edi
	addl	$12, %edi
	movw	$9034, BasicBlockSignatureTracker # imm = 0x234A
	movw	$511, RunTimeSignatureAdjuster # imm = 0x1FF
	xorl	%esi, %esi
	callq	nk_attacked
	movw	$9034, BasicBlockSignatureTracker # imm = 0x234A
	movw	$511, RunTimeSignatureAdjuster # imm = 0x1FF
	movw	$9034, BasicBlockSignatureTracker # imm = 0x234A
	movw	$127, RunTimeSignatureAdjuster
.LBB25_553:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$126, %cx
	xorw	%dx, %cx
	cmpw	$9035, %cx              # imm = 0x234B
	jne	.LBB25_638
# %bb.554:                              # %eval.split1769
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	wking_loc, %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$9035, BasicBlockSignatureTracker # imm = 0x234B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_557
# %bb.555:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$9051, %ax              # imm = 0x235B
	jne	.LBB25_638
# %bb.556:                              # %eval.split1771
	xorl	%eax, %eax
	movw	$9051, BasicBlockSignatureTracker # imm = 0x235B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_559
.LBB25_557:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$40, %ax
	cmpw	$9059, %ax              # imm = 0x2363
	jne	.LBB25_638
# %bb.558:                              # %eval.split1773
	movl	wking_loc, %edi
	addl	$13, %edi
	movw	$9059, BasicBlockSignatureTracker # imm = 0x2363
	movw	$470, RunTimeSignatureAdjuster # imm = 0x1D6
	xorl	%esi, %esi
	callq	nk_attacked
	movw	$9059, BasicBlockSignatureTracker # imm = 0x2363
	movw	$470, RunTimeSignatureAdjuster # imm = 0x1D6
	movw	$9059, BasicBlockSignatureTracker # imm = 0x2363
	movw	$56, RunTimeSignatureAdjuster
.LBB25_559:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$61, %cx
	xorw	%dx, %cx
	cmpw	$9062, %cx              # imm = 0x2366
	jne	.LBB25_638
# %bb.560:                              # %eval.split1775
	movl	$100, %esi
	xorl	%ecx, %ecx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addl	(%rdx), %eax
	movl	%eax, (%rdx)
	subl	black_hand_eval, %ecx
	movl	%ecx, %eax
	cltd
	idivl	%esi
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$9062, BasicBlockSignatureTracker # imm = 0x2366
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$14, %eax
	jle	.LBB25_563
# %bb.561:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$9063, %ax              # imm = 0x2367
	jne	.LBB25_638
# %bb.562:                              # %eval.split1777
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	$14, (%rax)
	movw	$9063, BasicBlockSignatureTracker # imm = 0x2367
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_569
.LBB25_563:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$242, %ax
	cmpw	$9108, %ax              # imm = 0x2394
	jne	.LBB25_638
# %bb.564:                              # %eval.split1779
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$9108, BasicBlockSignatureTracker # imm = 0x2394
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jge	.LBB25_567
# %bb.565:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$9109, %ax              # imm = 0x2395
	jne	.LBB25_638
# %bb.566:                              # %eval.split1783
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$9109, BasicBlockSignatureTracker # imm = 0x2395
	movw	$1, RunTimeSignatureAdjuster
.LBB25_567:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$9113, %ax              # imm = 0x2399
	jne	.LBB25_638
# %bb.568:                              # %eval.split1785
	movw	$9113, BasicBlockSignatureTracker # imm = 0x2399
	movw	$254, RunTimeSignatureAdjuster
.LBB25_569:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$205, %ax
	xorw	%cx, %ax
	cmpw	$9130, %ax              # imm = 0x23AA
	jne	.LBB25_638
# %bb.570:                              # %eval.split1781
	movabsq	$ksafety_scaled, %rax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$36, %rcx, %rcx
	addq	%rcx, %rax
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	movl	(%rax,%rcx,4), %eax
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movl	$0, (%rsi)
	movl	bking_loc, %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$9130, BasicBlockSignatureTracker # imm = 0x23AA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_573
# %bb.571:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$9148, %ax              # imm = 0x23BC
	jne	.LBB25_638
# %bb.572:                              # %eval.split1787
	xorl	%eax, %eax
	movw	$9148, BasicBlockSignatureTracker # imm = 0x23BC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_575
.LBB25_573:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$9150, %ax              # imm = 0x23BE
	jne	.LBB25_638
# %bb.574:                              # %eval.split1789
	movl	bking_loc, %edi
	subl	$13, %edi
	movw	$9150, BasicBlockSignatureTracker # imm = 0x23BE
	movw	$267, RunTimeSignatureAdjuster # imm = 0x10B
	movl	$1, %esi
	callq	nk_attacked
	movw	$9150, BasicBlockSignatureTracker # imm = 0x23BE
	movw	$267, RunTimeSignatureAdjuster # imm = 0x10B
	movw	$9150, BasicBlockSignatureTracker # imm = 0x23BE
	movw	$2, RunTimeSignatureAdjuster
.LBB25_575:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$3, %cx
	xorw	%dx, %cx
	cmpw	$9151, %cx              # imm = 0x23BF
	jne	.LBB25_638
# %bb.576:                              # %eval.split1791
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	bking_loc, %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$9151, BasicBlockSignatureTracker # imm = 0x23BF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_579
# %bb.577:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$121, %ax
	cmpw	$9158, %ax              # imm = 0x23C6
	jne	.LBB25_638
# %bb.578:                              # %eval.split1793
	xorl	%eax, %eax
	movw	$9158, BasicBlockSignatureTracker # imm = 0x23C6
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_581
.LBB25_579:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$105, %ax
	cmpw	$9174, %ax              # imm = 0x23D6
	jne	.LBB25_638
# %bb.580:                              # %eval.split1795
	movl	bking_loc, %edi
	subl	$12, %edi
	movw	$9174, BasicBlockSignatureTracker # imm = 0x23D6
	movw	$355, RunTimeSignatureAdjuster # imm = 0x163
	movl	$1, %esi
	callq	nk_attacked
	movw	$9174, BasicBlockSignatureTracker # imm = 0x23D6
	movw	$355, RunTimeSignatureAdjuster # imm = 0x163
	movw	$9174, BasicBlockSignatureTracker # imm = 0x23D6
	movw	$16, RunTimeSignatureAdjuster
.LBB25_581:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$31, %cx
	xorw	%dx, %cx
	cmpw	$9177, %cx              # imm = 0x23D9
	jne	.LBB25_638
# %bb.582:                              # %eval.split1797
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	bking_loc, %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$9177, BasicBlockSignatureTracker # imm = 0x23D9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_585
# %bb.583:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$9184, %ax              # imm = 0x23E0
	jne	.LBB25_638
# %bb.584:                              # %eval.split1799
	xorl	%eax, %eax
	movw	$9184, BasicBlockSignatureTracker # imm = 0x23E0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_587
.LBB25_585:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$9190, %ax              # imm = 0x23E6
	jne	.LBB25_638
# %bb.586:                              # %eval.split1801
	movl	bking_loc, %edi
	subl	$11, %edi
	movw	$9190, BasicBlockSignatureTracker # imm = 0x23E6
	movw	$339, RunTimeSignatureAdjuster # imm = 0x153
	movl	$1, %esi
	callq	nk_attacked
	movw	$9190, BasicBlockSignatureTracker # imm = 0x23E6
	movw	$339, RunTimeSignatureAdjuster # imm = 0x153
	movw	$9190, BasicBlockSignatureTracker # imm = 0x23E6
	movw	$6, RunTimeSignatureAdjuster
.LBB25_587:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$23, %cx
	xorw	%dx, %cx
	cmpw	$9207, %cx              # imm = 0x23F7
	jne	.LBB25_638
# %bb.588:                              # %eval.split1803
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	bking_loc, %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$9207, BasicBlockSignatureTracker # imm = 0x23F7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_591
# %bb.589:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2042, %ax              # imm = 0x7FA
	cmpw	$9229, %ax              # imm = 0x240D
	jne	.LBB25_638
# %bb.590:                              # %eval.split1805
	xorl	%eax, %eax
	movw	$9229, BasicBlockSignatureTracker # imm = 0x240D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_593
.LBB25_591:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2017, %ax              # imm = 0x7E1
	cmpw	$9238, %ax              # imm = 0x2416
	jne	.LBB25_638
# %bb.592:                              # %eval.split1807
	movl	bking_loc, %edi
	subl	$1, %edi
	movw	$9238, BasicBlockSignatureTracker # imm = 0x2416
	movw	$1699, RunTimeSignatureAdjuster # imm = 0x6A3
	movl	$1, %esi
	callq	nk_attacked
	movw	$9238, BasicBlockSignatureTracker # imm = 0x2416
	movw	$1699, RunTimeSignatureAdjuster # imm = 0x6A3
	movw	$9238, BasicBlockSignatureTracker # imm = 0x2416
	movw	$27, RunTimeSignatureAdjuster
.LBB25_593:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$40, %cx
	xorw	%dx, %cx
	cmpw	$9253, %cx              # imm = 0x2425
	jne	.LBB25_638
# %bb.594:                              # %eval.split1809
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	bking_loc, %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$9253, BasicBlockSignatureTracker # imm = 0x2425
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_597
# %bb.595:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$9254, %ax              # imm = 0x2426
	jne	.LBB25_638
# %bb.596:                              # %eval.split1811
	xorl	%eax, %eax
	movw	$9254, BasicBlockSignatureTracker # imm = 0x2426
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_599
.LBB25_597:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$9272, %ax              # imm = 0x2438
	jne	.LBB25_638
# %bb.598:                              # %eval.split1813
	movl	bking_loc, %edi
	addl	$1, %edi
	movw	$9272, BasicBlockSignatureTracker # imm = 0x2438
	movw	$1677, RunTimeSignatureAdjuster # imm = 0x68D
	movl	$1, %esi
	callq	nk_attacked
	movw	$9272, BasicBlockSignatureTracker # imm = 0x2438
	movw	$1677, RunTimeSignatureAdjuster # imm = 0x68D
	movw	$9272, BasicBlockSignatureTracker # imm = 0x2438
	movw	$30, RunTimeSignatureAdjuster
.LBB25_599:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$29, %cx
	xorw	%dx, %cx
	cmpw	$9275, %cx              # imm = 0x243B
	jne	.LBB25_638
# %bb.600:                              # %eval.split1815
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	bking_loc, %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$9275, BasicBlockSignatureTracker # imm = 0x243B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_603
# %bb.601:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$9277, %ax              # imm = 0x243D
	jne	.LBB25_638
# %bb.602:                              # %eval.split1817
	xorl	%eax, %eax
	movw	$9277, BasicBlockSignatureTracker # imm = 0x243D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_605
.LBB25_603:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$122, %ax
	cmpw	$9281, %ax              # imm = 0x2441
	jne	.LBB25_638
# %bb.604:                              # %eval.split1819
	movl	bking_loc, %edi
	addl	$11, %edi
	movw	$9281, BasicBlockSignatureTracker # imm = 0x2441
	movw	$1780, RunTimeSignatureAdjuster # imm = 0x6F4
	movl	$1, %esi
	callq	nk_attacked
	movw	$9281, BasicBlockSignatureTracker # imm = 0x2441
	movw	$1780, RunTimeSignatureAdjuster # imm = 0x6F4
	movw	$9281, BasicBlockSignatureTracker # imm = 0x2441
	movw	$124, RunTimeSignatureAdjuster
.LBB25_605:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$118, %cx
	xorw	%dx, %cx
	cmpw	$9291, %cx              # imm = 0x244B
	jne	.LBB25_638
# %bb.606:                              # %eval.split1821
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	bking_loc, %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$9291, BasicBlockSignatureTracker # imm = 0x244B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_609
# %bb.607:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$9300, %ax              # imm = 0x2454
	jne	.LBB25_638
# %bb.608:                              # %eval.split1823
	xorl	%eax, %eax
	movw	$9300, BasicBlockSignatureTracker # imm = 0x2454
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_611
.LBB25_609:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$9313, %ax              # imm = 0x2461
	jne	.LBB25_638
# %bb.610:                              # %eval.split1825
	movl	bking_loc, %edi
	addl	$12, %edi
	movw	$9313, BasicBlockSignatureTracker # imm = 0x2461
	movw	$1748, RunTimeSignatureAdjuster # imm = 0x6D4
	movl	$1, %esi
	callq	nk_attacked
	movw	$9313, BasicBlockSignatureTracker # imm = 0x2461
	movw	$1748, RunTimeSignatureAdjuster # imm = 0x6D4
	movw	$9313, BasicBlockSignatureTracker # imm = 0x2461
	movw	$53, RunTimeSignatureAdjuster
.LBB25_611:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$208, %cx
	xorw	%dx, %cx
	cmpw	$9348, %cx              # imm = 0x2484
	jne	.LBB25_638
# %bb.612:                              # %eval.split1827
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	bking_loc, %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$9348, BasicBlockSignatureTracker # imm = 0x2484
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB25_615
# %bb.613:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$9351, %ax              # imm = 0x2487
	jne	.LBB25_638
# %bb.614:                              # %eval.split1829
	xorl	%eax, %eax
	movw	$9351, BasicBlockSignatureTracker # imm = 0x2487
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_617
.LBB25_615:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$9356, %ax              # imm = 0x248C
	jne	.LBB25_638
# %bb.616:                              # %eval.split1831
	movl	bking_loc, %edi
	addl	$13, %edi
	movw	$9356, BasicBlockSignatureTracker # imm = 0x248C
	movw	$1593, RunTimeSignatureAdjuster # imm = 0x639
	movl	$1, %esi
	callq	nk_attacked
	movw	$9356, BasicBlockSignatureTracker # imm = 0x248C
	movw	$1593, RunTimeSignatureAdjuster # imm = 0x639
	movw	$9356, BasicBlockSignatureTracker # imm = 0x248C
	movw	$11, RunTimeSignatureAdjuster
.LBB25_617:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$18, %cx
	xorw	%dx, %cx
	cmpw	$9365, %cx              # imm = 0x2495
	jne	.LBB25_638
# %bb.618:                              # %eval.split1833
	movl	$100, %ecx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addl	(%rdx), %eax
	movl	%eax, (%rdx)
	movl	white_hand_eval, %eax
	cltd
	idivl	%ecx
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$9365, BasicBlockSignatureTracker # imm = 0x2495
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$14, %eax
	jle	.LBB25_621
# %bb.619:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$9383, %ax              # imm = 0x24A7
	jne	.LBB25_638
# %bb.620:                              # %eval.split1835
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	$14, (%rax)
	movw	$9383, BasicBlockSignatureTracker # imm = 0x24A7
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB25_627
.LBB25_621:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$47, %ax
	cmpw	$9402, %ax              # imm = 0x24BA
	jne	.LBB25_638
# %bb.622:                              # %eval.split1837
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$9402, BasicBlockSignatureTracker # imm = 0x24BA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jge	.LBB25_625
# %bb.623:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$112, %ax
	cmpw	$9418, %ax              # imm = 0x24CA
	jne	.LBB25_638
# %bb.624:                              # %eval.split1841
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$9418, BasicBlockSignatureTracker # imm = 0x24CA
	movw	$112, RunTimeSignatureAdjuster
.LBB25_625:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$72, %ax
	xorw	%cx, %ax
	cmpw	$9458, %ax              # imm = 0x24F2
	jne	.LBB25_638
# %bb.626:                              # %eval.split1843
	movw	$9458, BasicBlockSignatureTracker # imm = 0x24F2
	movw	$85, RunTimeSignatureAdjuster
.LBB25_627:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$420, %ax               # imm = 0x1A4
	xorw	%cx, %ax
	cmpw	$9475, %ax              # imm = 0x2503
	jne	.LBB25_638
# %bb.628:                              # %eval.split1839
	movabsq	$ksafety_scaled, %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$36, %rcx, %rcx
	addq	%rcx, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movl	(%rax,%rcx,4), %eax
	movq	-104(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$9475, BasicBlockSignatureTracker # imm = 0x2503
	movw	$1957, RunTimeSignatureAdjuster # imm = 0x7A5
.LBB25_629:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1953, %ax              # imm = 0x7A1
	xorw	%cx, %ax
	cmpw	$9479, %ax              # imm = 0x2507
	jne	.LBB25_638
# %bb.630:                              # %eval.split1727
	movl	white_hand_eval, %eax
	addl	black_hand_eval, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	(%rcx), %edi
	movw	$9479, BasicBlockSignatureTracker # imm = 0x2507
	movw	$0, RunTimeSignatureAdjuster
	callq	storeECache
	movw	$9479, BasicBlockSignatureTracker # imm = 0x2507
	movw	$0, RunTimeSignatureAdjuster
	movl	white_to_move, %eax
	movw	$9479, BasicBlockSignatureTracker # imm = 0x2507
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB25_633
# %bb.631:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$9484, %ax              # imm = 0x250C
	jne	.LBB25_638
# %bb.632:                              # %eval.split1845
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$9484, BasicBlockSignatureTracker # imm = 0x250C
	movw	$12835, RunTimeSignatureAdjuster # imm = 0x3223
	jmp	.LBB25_635
.LBB25_633:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$9491, %ax              # imm = 0x2513
	jne	.LBB25_638
# %bb.634:                              # %eval.split1847
	xorl	%eax, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	subl	(%rcx), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$9491, BasicBlockSignatureTracker # imm = 0x2513
	movw	$12860, RunTimeSignatureAdjuster # imm = 0x323C
.LBB25_635:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12859, %ax             # imm = 0x323B
	xorw	%cx, %ax
	cmpw	$9492, %ax              # imm = 0x2514
	jne	.LBB25_638
# %bb.636:                              # %eval.split1259
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$9492, BasicBlockSignatureTracker # imm = 0x2514
	movw	$12746, RunTimeSignatureAdjuster # imm = 0x31CA
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB25_637:                             # %CFerrorHandler.eval.loopexit
	jmp	.LBB25_638
.LBB25_638:                             # %CFerrorHandler.eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end25:
	.size	eval, .Lfunc_end25-eval
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI25_0:
	.quad	.LBB25_91
	.quad	.LBB25_93
	.quad	.LBB25_103
	.quad	.LBB25_105
	.quad	.LBB25_111
	.quad	.LBB25_111
	.quad	.LBB25_95
	.quad	.LBB25_97
	.quad	.LBB25_107
	.quad	.LBB25_109
	.quad	.LBB25_99
	.quad	.LBB25_101
                                        # -- End function
	.text
	.globl	losers_eval             # -- Begin function losers_eval
	.p2align	4, 0x90
	.type	losers_eval,@function
losers_eval:                            # @losers_eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$136, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12900, %ax             # imm = 0x3264
	xorw	%cx, %ax
	cmpw	$9507, %ax              # imm = 0x2523
	jne	.LBB26_288
# %bb.1:                                # %losers_eval.split818
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12900, %ax             # imm = 0x3264
	xorw	%cx, %ax
	cmpw	$9507, %ax              # imm = 0x2523
	jne	.LBB26_288
# %bb.2:                                # %losers_eval.split816
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12900, %ax             # imm = 0x3264
	xorw	%cx, %ax
	cmpw	$9507, %ax              # imm = 0x2523
	jne	.LBB26_288
# %bb.3:                                # %losers_eval.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %rax
	addq	$-96, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-48, %rax
	movq	%rax, -112(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-48, %rax
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -136(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %rdi
	addq	$-16, %rdi
	movq	%rdi, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%r8, -72(%rbp)          # 8-byte Spill
	movl	$0, (%r8)
	movq	%r9, -48(%rbp)          # 8-byte Spill
	movl	$0, (%r9)
	movl	$0, (%r15)
	movq	%rcx, -96(%rbp)         # 8-byte Spill
	movl	$0, (%rcx)
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movl	$0, (%rax)
	movl	$0, (%r14)
	movl	$0, (%r13)
	movq	%rbx, -160(%rbp)        # 8-byte Spill
	movl	$0, (%rbx)
	movq	%rdi, -152(%rbp)        # 8-byte Spill
	movl	$0, (%rdi)
	movq	%rsi, -176(%rbp)        # 8-byte Spill
	movl	$0, (%rsi)
	movq	%rdx, -168(%rbp)        # 8-byte Spill
	movl	$0, (%rdx)
	movl	$0, (%r12)
	movw	$9507, BasicBlockSignatureTracker # imm = 0x2523
	movw	$12874, RunTimeSignatureAdjuster # imm = 0x324A
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	checkECache
	movw	$9507, BasicBlockSignatureTracker # imm = 0x2523
	movw	$12874, RunTimeSignatureAdjuster # imm = 0x324A
	movl	(%r12), %eax
	movw	$9507, BasicBlockSignatureTracker # imm = 0x2523
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB26_10
# %bb.4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$9511, %ax              # imm = 0x2527
	jne	.LBB26_288
# %bb.5:                                # %losers_eval.split560
	movl	white_to_move, %eax
	movw	$9511, BasicBlockSignatureTracker # imm = 0x2527
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB26_8
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$9520, %ax              # imm = 0x2530
	jne	.LBB26_288
# %bb.7:                                # %losers_eval.split564
	movl	(%r15), %eax
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$9520, BasicBlockSignatureTracker # imm = 0x2530
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB26_283
.LBB26_8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$9527, %ax              # imm = 0x2537
	jne	.LBB26_288
# %bb.9:                                # %losers_eval.split566
	xorl	%eax, %eax
	subl	(%r15), %eax
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$9527, BasicBlockSignatureTracker # imm = 0x2537
	movw	$7, RunTimeSignatureAdjuster
	jmp	.LBB26_283
.LBB26_10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$102, %ax
	cmpw	$9541, %ax              # imm = 0x2545
	jne	.LBB26_288
# %bb.11:                               # %losers_eval.split562
	movq	-64(%rbp), %rdi         # 8-byte Reload
	xorl	%esi, %esi
	movl	$88, %edx
	callq	memset
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movl	$0, (%rdx)
	movw	$9541, BasicBlockSignatureTracker # imm = 0x2545
	movw	$0, RunTimeSignatureAdjuster
.LBB26_12:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$9562, %ax              # imm = 0x255A
	jne	.LBB26_287
# %bb.13:                               # %losers_eval.split570
                                        #   in Loop: Header=BB26_12 Depth=1
	movl	(%rdx), %eax
	movw	$9562, BasicBlockSignatureTracker # imm = 0x255A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	jge	.LBB26_18
# %bb.14:                               #   in Loop: Header=BB26_12 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$9573, %ax              # imm = 0x2565
	jne	.LBB26_287
# %bb.15:                               # %losers_eval.split572
                                        #   in Loop: Header=BB26_12 Depth=1
	movslq	(%rdx), %rax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	$7, (%rcx,%rax,4)
	movslq	(%rdx), %rax
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	$2, (%rcx,%rax,4)
	movw	$9573, BasicBlockSignatureTracker # imm = 0x2565
	movw	$0, RunTimeSignatureAdjuster
# %bb.16:                               #   in Loop: Header=BB26_12 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$9574, %ax              # imm = 0x2566
	jne	.LBB26_287
# %bb.17:                               # %losers_eval.split576
                                        #   in Loop: Header=BB26_12 Depth=1
	movl	(%rdx), %eax
	addl	$1, %eax
	movl	%eax, (%rdx)
	movw	$9574, BasicBlockSignatureTracker # imm = 0x2566
	movw	$35, RunTimeSignatureAdjuster
	jmp	.LBB26_12
.LBB26_18:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$9578, %ax              # imm = 0x256A
	jne	.LBB26_288
# %bb.19:                               # %losers_eval.split574
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-136(%rbp), %rsi        # 8-byte Reload
	movl	$1, (%rsi)
	movw	$9578, BasicBlockSignatureTracker # imm = 0x256A
	movw	$0, RunTimeSignatureAdjuster
	movq	-56(%rbp), %rdx         # 8-byte Reload
.LBB26_20:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$9587, %ax              # imm = 0x2573
	jne	.LBB26_286
# %bb.21:                               # %losers_eval.split578
                                        #   in Loop: Header=BB26_20 Depth=1
	movl	(%rsi), %eax
	movl	piece_count, %ecx
	movw	$9587, BasicBlockSignatureTracker # imm = 0x2573
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB26_50
# %bb.22:                               #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$9593, %ax              # imm = 0x2579
	jne	.LBB26_286
# %bb.23:                               # %losers_eval.split580
                                        #   in Loop: Header=BB26_20 Depth=1
	movq	-128(%rbp), %rax        # 8-byte Reload
	movslq	(%rax), %rax
	movl	pieces(,%rax,4), %eax
	movl	%eax, (%rdx)
	movl	(%rdx), %eax
	movw	$9593, BasicBlockSignatureTracker # imm = 0x2579
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_26
# %bb.24:                               #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$9597, %ax              # imm = 0x257D
	jne	.LBB26_286
# %bb.25:                               # %losers_eval.split586
                                        #   in Loop: Header=BB26_20 Depth=1
	movw	$9597, BasicBlockSignatureTracker # imm = 0x257D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB26_48
.LBB26_26:                              #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$251, %ax
	cmpw	$9602, %ax              # imm = 0x2582
	jne	.LBB26_286
# %bb.27:                               # %losers_eval.split584
                                        #   in Loop: Header=BB26_20 Depth=1
	movl	(%rsi), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	movw	$9602, BasicBlockSignatureTracker # imm = 0x2582
	movw	$0, RunTimeSignatureAdjuster
# %bb.28:                               #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$9603, %ax              # imm = 0x2583
	jne	.LBB26_286
# %bb.29:                               # %losers_eval.split590
                                        #   in Loop: Header=BB26_20 Depth=1
	movslq	(%rdx), %rax
	movl	Xfile(,%rax,4), %eax
	addl	$1, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	(%rdx), %rax
	movl	Xrank(,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	(%rdx), %rax
	movl	board(,%rax,4), %eax
	movw	$9603, BasicBlockSignatureTracker # imm = 0x2583
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB26_36
# %bb.30:                               #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$9622, %ax              # imm = 0x2596
	jne	.LBB26_286
# %bb.31:                               # %losers_eval.split592
                                        #   in Loop: Header=BB26_20 Depth=1
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movl	44(%rsi,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, 44(%rsi,%rax,4)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	(%rdx), %rcx
	movq	-112(%rbp), %rdx        # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$9622, BasicBlockSignatureTracker # imm = 0x2596
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB26_34
# %bb.32:                               #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$9624, %ax              # imm = 0x2598
	jne	.LBB26_286
# %bb.33:                               # %losers_eval.split596
                                        #   in Loop: Header=BB26_20 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	-112(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx,%rcx,4)
	movw	$9624, BasicBlockSignatureTracker # imm = 0x2598
	movw	$14, RunTimeSignatureAdjuster
.LBB26_34:                              #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$9635, %ax              # imm = 0x25A3
	jne	.LBB26_286
# %bb.35:                               # %losers_eval.split598
                                        #   in Loop: Header=BB26_20 Depth=1
	movw	$9635, BasicBlockSignatureTracker # imm = 0x25A3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB26_46
.LBB26_36:                              #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$38, %ax
	cmpw	$9637, %ax              # imm = 0x25A5
	jne	.LBB26_286
# %bb.37:                               # %losers_eval.split594
                                        #   in Loop: Header=BB26_20 Depth=1
	movslq	(%rdx), %rax
	movl	board(,%rax,4), %eax
	movw	$9637, BasicBlockSignatureTracker # imm = 0x25A5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB26_44
# %bb.38:                               #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$9638, %ax              # imm = 0x25A6
	jne	.LBB26_286
# %bb.39:                               # %losers_eval.split602
                                        #   in Loop: Header=BB26_20 Depth=1
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rsi,%rax,4)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	(%rdx), %rcx
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$9638, BasicBlockSignatureTracker # imm = 0x25A6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB26_42
# %bb.40:                               #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$9643, %ax              # imm = 0x25AB
	jne	.LBB26_286
# %bb.41:                               # %losers_eval.split606
                                        #   in Loop: Header=BB26_20 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx,%rcx,4)
	movw	$9643, BasicBlockSignatureTracker # imm = 0x25AB
	movw	$13, RunTimeSignatureAdjuster
.LBB26_42:                              #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$9658, %ax              # imm = 0x25BA
	jne	.LBB26_286
# %bb.43:                               # %losers_eval.split608
                                        #   in Loop: Header=BB26_20 Depth=1
	movw	$9658, BasicBlockSignatureTracker # imm = 0x25BA
	movw	$31, RunTimeSignatureAdjuster
.LBB26_44:                              #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$9661, %ax              # imm = 0x25BD
	jne	.LBB26_286
# %bb.45:                               # %losers_eval.split604
                                        #   in Loop: Header=BB26_20 Depth=1
	movw	$9661, BasicBlockSignatureTracker # imm = 0x25BD
	movw	$30, RunTimeSignatureAdjuster
.LBB26_46:                              #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$9662, %ax              # imm = 0x25BE
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movq	-136(%rbp), %rsi        # 8-byte Reload
	jne	.LBB26_286
# %bb.47:                               # %losers_eval.split600
                                        #   in Loop: Header=BB26_20 Depth=1
	movw	$9662, BasicBlockSignatureTracker # imm = 0x25BE
	movw	$195, RunTimeSignatureAdjuster
.LBB26_48:                              #   in Loop: Header=BB26_20 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$177, %ax
	xorw	%cx, %ax
	cmpw	$9676, %ax              # imm = 0x25CC
	jne	.LBB26_286
# %bb.49:                               # %losers_eval.split588
                                        #   in Loop: Header=BB26_20 Depth=1
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$9676, BasicBlockSignatureTracker # imm = 0x25CC
	movw	$166, RunTimeSignatureAdjuster
	jmp	.LBB26_20
.LBB26_50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$188, %ax
	cmpw	$9679, %ax              # imm = 0x25CF
	jne	.LBB26_288
# %bb.51:                               # %losers_eval.split582
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$9679, BasicBlockSignatureTracker # imm = 0x25CF
	movw	$0, RunTimeSignatureAdjuster
.LBB26_52:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$9691, %ax              # imm = 0x25DB
	jne	.LBB26_285
# %bb.53:                               # %losers_eval.split610
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	piece_count, %ecx
	movw	$9691, BasicBlockSignatureTracker # imm = 0x25DB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB26_219
# %bb.54:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$9696, %ax              # imm = 0x25E0
	jne	.LBB26_285
# %bb.55:                               # %losers_eval.split612
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-128(%rbp), %rax        # 8-byte Reload
	movslq	(%rax), %rax
	movl	pieces(,%rax,4), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$9696, BasicBlockSignatureTracker # imm = 0x25E0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_58
# %bb.56:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$9716, %ax              # imm = 0x25F4
	jne	.LBB26_285
# %bb.57:                               # %losers_eval.split618
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$9716, BasicBlockSignatureTracker # imm = 0x25F4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB26_217
.LBB26_58:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1002, %ax              # imm = 0x3EA
	cmpw	$9738, %ax              # imm = 0x260A
	jne	.LBB26_285
# %bb.59:                               # %losers_eval.split616
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-136(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$9738, BasicBlockSignatureTracker # imm = 0x260A
	movw	$0, RunTimeSignatureAdjuster
# %bb.60:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$9750, %ax              # imm = 0x2616
	jne	.LBB26_285
# %bb.61:                               # %losers_eval.split622
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	board(,%rax,4), %eax
	movw	$9750, BasicBlockSignatureTracker(%rip) # imm = 0x2616
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-1, %eax
	movl	%eax, %ecx
	subl	$11, %ecx
	ja	.LBB26_215
# %bb.62:                               # %losers_eval.split622
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	.LJTI26_0(,%rax,8), %rax
	jmpq	*%rax
.LBB26_63:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$9759, %ax              # imm = 0x261F
	jne	.LBB26_285
# %bb.64:                               # %losers_eval.split626
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-176(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movslq	(%rbx), %rax
	movl	lcentral(,%rax,4), %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rbx), %edi
	movw	$9759, BasicBlockSignatureTracker # imm = 0x261F
	movw	$0, RunTimeSignatureAdjuster
	callq	l_pawn_mobility
	movw	$9759, BasicBlockSignatureTracker # imm = 0x261F
	movw	$0, RunTimeSignatureAdjuster
	shll	$2, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movslq	(%rbx), %rax
	movl	Xrank(,%rax,4), %eax
	subl	$2, %eax
	shll	$3, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$9759, BasicBlockSignatureTracker # imm = 0x261F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB26_79
# %bb.65:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$9781, %ax              # imm = 0x2635
	jne	.LBB26_285
# %bb.66:                               # %losers_eval.split650
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$9781, BasicBlockSignatureTracker # imm = 0x2635
	movw	$42, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB26_79
# %bb.67:                               # %Buffer__
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-27473, %ax            # imm = 0x94AF
	cmpw	$-19814, %ax            # imm = 0xB29A
	jne	.LBB26_285
# %bb.68:                               # %losers_eval.split654
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$-19814, BasicBlockSignatureTracker # imm = 0xB29A
	movw	$-27473, RunTimeSignatureAdjuster # imm = 0x94AF
# %bb.69:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$9787, %ax              # imm = 0x263B
	jne	.LBB26_285
# %bb.70:                               # %losers_eval.split820
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	subl	$8, %eax
	movl	%eax, (%r15)
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$9787, BasicBlockSignatureTracker # imm = 0x263B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_77
# %bb.71:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$9807, %ax              # imm = 0x264F
	jne	.LBB26_285
# %bb.72:                               # %losers_eval.split658
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$9807, BasicBlockSignatureTracker # imm = 0x264F
	movw	$116, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_77
# %bb.73:                               # %Buffer__1
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24684, %ax             # imm = 0x606C
	cmpw	$17955, %ax             # imm = 0x4623
	jne	.LBB26_285
# %bb.74:                               # %losers_eval.split660
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$17955, BasicBlockSignatureTracker # imm = 0x4623
	movw	$24684, RunTimeSignatureAdjuster # imm = 0x606C
# %bb.75:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$9808, %ax              # imm = 0x2650
	jne	.LBB26_285
# %bb.76:                               # %losers_eval.split822
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	subl	$12, %eax
	movl	%eax, (%r15)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$1, (%rax)
	movw	$9808, BasicBlockSignatureTracker # imm = 0x2650
	movw	$107, RunTimeSignatureAdjuster
.LBB26_77:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$185, %ax
	xorw	%cx, %ax
	cmpw	$9858, %ax              # imm = 0x2682
	jne	.LBB26_285
# %bb.78:                               # %losers_eval.split656
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$9858, BasicBlockSignatureTracker # imm = 0x2682
	movw	$157, RunTimeSignatureAdjuster
.LBB26_79:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$189, %ax
	xorw	%cx, %ax
	cmpw	$9890, %ax              # imm = 0x26A2
	jne	.LBB26_285
# %bb.80:                               # %losers_eval.split652
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$9890, BasicBlockSignatureTracker # imm = 0x26A2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_91
# %bb.81:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$9896, %ax              # imm = 0x26A8
	jne	.LBB26_285
# %bb.82:                               # %losers_eval.split664
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$9896, BasicBlockSignatureTracker # imm = 0x26A8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB26_85
# %bb.83:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$9899, %ax              # imm = 0x26AB
	jne	.LBB26_285
# %bb.84:                               # %losers_eval.split666
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	subl	$5, %eax
	movl	%eax, (%r15)
	movw	$9899, BasicBlockSignatureTracker # imm = 0x26AB
	movw	$3, RunTimeSignatureAdjuster
.LBB26_85:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$9902, %ax              # imm = 0x26AE
	jne	.LBB26_285
# %bb.86:                               # %losers_eval.split668
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$9902, BasicBlockSignatureTracker # imm = 0x26AE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB26_89
# %bb.87:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$9905, %ax              # imm = 0x26B1
	jne	.LBB26_285
# %bb.88:                               # %losers_eval.split670
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	subl	$8, %eax
	movl	%eax, (%r15)
	movw	$9905, BasicBlockSignatureTracker # imm = 0x26B1
	movw	$31, RunTimeSignatureAdjuster
.LBB26_89:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$9909, %ax              # imm = 0x26B5
	jne	.LBB26_285
# %bb.90:                               # %losers_eval.split672
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$9909, BasicBlockSignatureTracker # imm = 0x26B5
	movw	$23, RunTimeSignatureAdjuster
.LBB26_91:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$9915, %ax              # imm = 0x26BB
	jne	.LBB26_285
# %bb.92:                               # %losers_eval.split662
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$9915, BasicBlockSignatureTracker # imm = 0x26BB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB26_95
# %bb.93:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$9916, %ax              # imm = 0x26BC
	jne	.LBB26_285
# %bb.94:                               # %losers_eval.split674
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	subl	$1, %eax
	shll	$3, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$9916, BasicBlockSignatureTracker # imm = 0x26BC
	movw	$7, RunTimeSignatureAdjuster
.LBB26_95:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$121, %ax
	xorw	%cx, %ax
	cmpw	$9922, %ax              # imm = 0x26C2
	jne	.LBB26_285
# %bb.96:                               # %losers_eval.split676
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$9922, BasicBlockSignatureTracker # imm = 0x26C2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_123
# %bb.97:                               #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$9924, %ax              # imm = 0x26C4
	jne	.LBB26_285
# %bb.98:                               # %losers_eval.split680
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$9924, BasicBlockSignatureTracker # imm = 0x26C4
	movw	$6, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB26_123
# %bb.99:                               # %Buffer__2
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-32650, %ax            # imm = 0x8076
	cmpw	$-22862, %ax            # imm = 0xA6B2
	jne	.LBB26_285
# %bb.100:                              # %losers_eval.split682
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$-22862, BasicBlockSignatureTracker # imm = 0xA6B2
	movw	$-32650, RunTimeSignatureAdjuster # imm = 0x8076
# %bb.101:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$9938, %ax              # imm = 0x26D2
	jne	.LBB26_285
# %bb.102:                              # %losers_eval.split824
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$9938, BasicBlockSignatureTracker # imm = 0x26D2
	movw	$16, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB26_123
# %bb.103:                              # %Buffer__3
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12040, %ax             # imm = 0x2F08
	cmpw	$2522, %ax              # imm = 0x9DA
	jne	.LBB26_285
# %bb.104:                              # %losers_eval.split684
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$2522, BasicBlockSignatureTracker # imm = 0x9DA
	movw	$12040, RunTimeSignatureAdjuster # imm = 0x2F08
# %bb.105:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$9942, %ax              # imm = 0x26D6
	jne	.LBB26_285
# %bb.106:                              # %losers_eval.split826
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	Xrank(,%rax,4), %eax
	subl	$2, %eax
	imull	$10, %eax, %eax
	addl	$25, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movslq	(%rcx), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$9942, BasicBlockSignatureTracker # imm = 0x26D6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB26_109
# %bb.107:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$9978, %ax              # imm = 0x26FA
	jne	.LBB26_285
# %bb.108:                              # %losers_eval.split686
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	addl	$50, %eax
	movl	%eax, (%r15)
	movw	$9978, BasicBlockSignatureTracker # imm = 0x26FA
	movw	$44, RunTimeSignatureAdjuster
.LBB26_109:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$9981, %ax              # imm = 0x26FD
	jne	.LBB26_285
# %bb.110:                              # %losers_eval.split688
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$9981, BasicBlockSignatureTracker # imm = 0x26FD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB26_113
# %bb.111:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$9982, %ax              # imm = 0x26FE
	jne	.LBB26_285
# %bb.112:                              # %losers_eval.split692
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$9982, BasicBlockSignatureTracker # imm = 0x26FE
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jne	.LBB26_115
.LBB26_113:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$489, %ax               # imm = 0x1E9
	xorw	%cx, %ax
	cmpw	$10004, %ax             # imm = 0x2714
	jne	.LBB26_285
# %bb.114:                              # %losers_eval.split690
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xrank(,%rax,4), %eax
	subl	$2, %eax
	shll	$1, %eax
	addl	$4, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10004, BasicBlockSignatureTracker # imm = 0x2714
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	jmp	.LBB26_117
.LBB26_115:                             # %Buffer__4
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9435, %ax             # imm = 0xDB25
	cmpw	$-549, %ax              # imm = 0xFDDB
	jne	.LBB26_285
# %bb.116:                              # %losers_eval.split694
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$-549, BasicBlockSignatureTracker # imm = 0xFDDB
	movw	$-9435, RunTimeSignatureAdjuster # imm = 0xDB25
.LBB26_117:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$488, %ax               # imm = 0x1E8
	xorw	%cx, %ax
	cmpw	$10006, %ax             # imm = 0x2716
	jne	.LBB26_285
# %bb.118:                              # %losers_eval.split696
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$10006, BasicBlockSignatureTracker # imm = 0x2716
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_121
# %bb.119:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$10007, %ax             # imm = 0x2717
	jne	.LBB26_285
# %bb.120:                              # %losers_eval.split700
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	addl	$24, %eax
	movl	%eax, (%r15)
	movw	$10007, BasicBlockSignatureTracker # imm = 0x2717
	movw	$1, RunTimeSignatureAdjuster
.LBB26_121:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$10013, %ax             # imm = 0x271D
	jne	.LBB26_285
# %bb.122:                              # %losers_eval.split698
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$10013, BasicBlockSignatureTracker # imm = 0x271D
	movw	$479, RunTimeSignatureAdjuster # imm = 0x1DF
.LBB26_123:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$483, %ax               # imm = 0x1E3
	xorw	%cx, %ax
	cmpw	$10017, %ax             # imm = 0x2721
	jne	.LBB26_285
# %bb.124:                              # %losers_eval.split678
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$10017, BasicBlockSignatureTracker # imm = 0x2721
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_127
# %bb.125:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$10027, %ax             # imm = 0x272B
	jne	.LBB26_285
# %bb.126:                              # %losers_eval.split704
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	subl	$5, %eax
	movl	%eax, (%r15)
	movw	$10027, BasicBlockSignatureTracker # imm = 0x272B
	movw	$10, RunTimeSignatureAdjuster
.LBB26_127:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$10038, %ax             # imm = 0x2736
	jne	.LBB26_285
# %bb.128:                              # %losers_eval.split702
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$10038, BasicBlockSignatureTracker # imm = 0x2736
	movw	$288, RunTimeSignatureAdjuster # imm = 0x120
	jmp	.LBB26_215
.LBB26_129:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$326, %ax               # imm = 0x146
	cmpw	$10064, %ax             # imm = 0x2750
	jne	.LBB26_285
# %bb.130:                              # %losers_eval.split628
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-168(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movslq	(%rbx), %rax
	movl	lcentral(,%rax,4), %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rbx), %edi
	movw	$10064, BasicBlockSignatureTracker # imm = 0x2750
	movw	$335, RunTimeSignatureAdjuster # imm = 0x14F
	callq	l_pawn_mobility
	movl	$7, %ecx
	movw	$10064, BasicBlockSignatureTracker # imm = 0x2750
	movw	$335, RunTimeSignatureAdjuster # imm = 0x14F
	shll	$2, %eax
	movl	(%r15), %edx
	subl	%eax, %edx
	movl	%edx, (%r15)
	movslq	(%rbx), %rax
	subl	Xrank(,%rax,4), %ecx
	shll	$3, %ecx
	movl	(%r15), %eax
	subl	%ecx, %eax
	movl	%eax, (%r15)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$10064, BasicBlockSignatureTracker # imm = 0x2750
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB26_145
# %bb.131:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$10074, %ax             # imm = 0x275A
	jne	.LBB26_285
# %bb.132:                              # %losers_eval.split706
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$10074, BasicBlockSignatureTracker # imm = 0x275A
	movw	$10, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB26_145
# %bb.133:                              # %Buffer__5
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14047, %ax             # imm = 0x36DF
	cmpw	$4485, %ax              # imm = 0x1185
	jne	.LBB26_285
# %bb.134:                              # %losers_eval.split710
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$4485, BasicBlockSignatureTracker # imm = 0x1185
	movw	$14047, RunTimeSignatureAdjuster # imm = 0x36DF
# %bb.135:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$10079, %ax             # imm = 0x275F
	jne	.LBB26_285
# %bb.136:                              # %losers_eval.split828
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	addl	$8, %eax
	movl	%eax, (%r15)
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$10079, BasicBlockSignatureTracker # imm = 0x275F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_143
# %bb.137:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$10083, %ax             # imm = 0x2763
	jne	.LBB26_285
# %bb.138:                              # %losers_eval.split714
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$10083, BasicBlockSignatureTracker # imm = 0x2763
	movw	$60, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_143
# %bb.139:                              # %Buffer__6
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23599, %ax             # imm = 0x5C2F
	cmpw	$31564, %ax             # imm = 0x7B4C
	jne	.LBB26_285
# %bb.140:                              # %losers_eval.split716
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$31564, BasicBlockSignatureTracker # imm = 0x7B4C
	movw	$23599, RunTimeSignatureAdjuster # imm = 0x5C2F
# %bb.141:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$10096, %ax             # imm = 0x2770
	jne	.LBB26_285
# %bb.142:                              # %losers_eval.split830
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	addl	$12, %eax
	movl	%eax, (%r15)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$1, (%rax)
	movw	$10096, BasicBlockSignatureTracker # imm = 0x2770
	movw	$47, RunTimeSignatureAdjuster
.LBB26_143:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$40, %ax
	xorw	%cx, %ax
	cmpw	$10103, %ax             # imm = 0x2777
	jne	.LBB26_285
# %bb.144:                              # %losers_eval.split712
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$10103, BasicBlockSignatureTracker # imm = 0x2777
	movw	$39, RunTimeSignatureAdjuster
.LBB26_145:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$40, %ax
	xorw	%cx, %ax
	cmpw	$10104, %ax             # imm = 0x2778
	jne	.LBB26_285
# %bb.146:                              # %losers_eval.split708
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$10104, BasicBlockSignatureTracker # imm = 0x2778
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_157
# %bb.147:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$10105, %ax             # imm = 0x2779
	jne	.LBB26_285
# %bb.148:                              # %losers_eval.split720
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$10105, BasicBlockSignatureTracker # imm = 0x2779
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB26_151
# %bb.149:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$10111, %ax             # imm = 0x277F
	jne	.LBB26_285
# %bb.150:                              # %losers_eval.split722
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	addl	$5, %eax
	movl	%eax, (%r15)
	movw	$10111, BasicBlockSignatureTracker # imm = 0x277F
	movw	$6, RunTimeSignatureAdjuster
.LBB26_151:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$250, %ax
	xorw	%cx, %ax
	cmpw	$10115, %ax             # imm = 0x2783
	jne	.LBB26_285
# %bb.152:                              # %losers_eval.split724
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$10115, BasicBlockSignatureTracker # imm = 0x2783
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB26_155
# %bb.153:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$10133, %ax             # imm = 0x2795
	jne	.LBB26_285
# %bb.154:                              # %losers_eval.split726
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	addl	$8, %eax
	movl	%eax, (%r15)
	movw	$10133, BasicBlockSignatureTracker # imm = 0x2795
	movw	$22, RunTimeSignatureAdjuster
.LBB26_155:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$34, %ax
	xorw	%cx, %ax
	cmpw	$10145, %ax             # imm = 0x27A1
	jne	.LBB26_285
# %bb.156:                              # %losers_eval.split728
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$10145, BasicBlockSignatureTracker # imm = 0x27A1
	movw	$217, RunTimeSignatureAdjuster
.LBB26_157:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$208, %ax
	xorw	%cx, %ax
	cmpw	$10152, %ax             # imm = 0x27A8
	jne	.LBB26_285
# %bb.158:                              # %losers_eval.split718
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$10152, BasicBlockSignatureTracker # imm = 0x27A8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB26_161
# %bb.159:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$10168, %ax             # imm = 0x27B8
	jne	.LBB26_285
# %bb.160:                              # %losers_eval.split730
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	subl	$1, %eax
	shll	$3, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10168, BasicBlockSignatureTracker # imm = 0x27B8
	movw	$16, RunTimeSignatureAdjuster
.LBB26_161:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$104, %ax
	xorw	%cx, %ax
	cmpw	$10176, %ax             # imm = 0x27C0
	jne	.LBB26_285
# %bb.162:                              # %losers_eval.split732
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$10176, BasicBlockSignatureTracker # imm = 0x27C0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_189
# %bb.163:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$10190, %ax             # imm = 0x27CE
	jne	.LBB26_285
# %bb.164:                              # %losers_eval.split736
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-112(%rbp), %rdx        # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$10190, BasicBlockSignatureTracker # imm = 0x27CE
	movw	$14, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB26_189
# %bb.165:                              # %Buffer__7
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-15117, %ax            # imm = 0xC4F3
	cmpw	$-7363, %ax             # imm = 0xE33D
	jne	.LBB26_285
# %bb.166:                              # %losers_eval.split738
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$-7363, BasicBlockSignatureTracker # imm = 0xE33D
	movw	$-15117, RunTimeSignatureAdjuster # imm = 0xC4F3
# %bb.167:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$10192, %ax             # imm = 0x27D0
	jne	.LBB26_285
# %bb.168:                              # %losers_eval.split832
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-112(%rbp), %rdx        # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$10192, BasicBlockSignatureTracker # imm = 0x27D0
	movw	$16, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB26_189
# %bb.169:                              # %Buffer__8
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-15915, %ax            # imm = 0xC1D5
	cmpw	$-6651, %ax             # imm = 0xE605
	jne	.LBB26_285
# %bb.170:                              # %losers_eval.split740
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$-6651, BasicBlockSignatureTracker # imm = 0xE605
	movw	$-15915, RunTimeSignatureAdjuster # imm = 0xC1D5
# %bb.171:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$10209, %ax             # imm = 0x27E1
	jne	.LBB26_285
# %bb.172:                              # %losers_eval.split834
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	$7, %eax
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rcx
	subl	Xrank(,%rcx,4), %eax
	imull	$10, %eax, %eax
	addl	$25, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movslq	(%rdx), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$10209, BasicBlockSignatureTracker # imm = 0x27E1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB26_175
# %bb.173:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$10230, %ax             # imm = 0x27F6
	jne	.LBB26_285
# %bb.174:                              # %losers_eval.split742
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	subl	$50, %eax
	movl	%eax, (%r15)
	movw	$10230, BasicBlockSignatureTracker # imm = 0x27F6
	movw	$23, RunTimeSignatureAdjuster
.LBB26_175:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$10232, %ax             # imm = 0x27F8
	jne	.LBB26_285
# %bb.176:                              # %losers_eval.split744
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$10232, BasicBlockSignatureTracker # imm = 0x27F8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB26_179
# %bb.177:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$10234, %ax             # imm = 0x27FA
	jne	.LBB26_285
# %bb.178:                              # %losers_eval.split748
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$10234, BasicBlockSignatureTracker # imm = 0x27FA
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jne	.LBB26_181
.LBB26_179:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$10235, %ax             # imm = 0x27FB
	jne	.LBB26_285
# %bb.180:                              # %losers_eval.split746
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	$7, %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	subl	Xrank(,%rcx,4), %eax
	shll	$1, %eax
	addl	$4, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$10235, BasicBlockSignatureTracker # imm = 0x27FB
	movw	$1, RunTimeSignatureAdjuster
	jmp	.LBB26_183
.LBB26_181:                             # %Buffer__9
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31890, %ax             # imm = 0x7C92
	cmpw	$23400, %ax             # imm = 0x5B68
	jne	.LBB26_285
# %bb.182:                              # %losers_eval.split750
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$23400, BasicBlockSignatureTracker # imm = 0x5B68
	movw	$31890, RunTimeSignatureAdjuster # imm = 0x7C92
.LBB26_183:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4081, %ax              # imm = 0xFF1
	xorw	%cx, %ax
	cmpw	$10251, %ax             # imm = 0x280B
	jne	.LBB26_285
# %bb.184:                              # %losers_eval.split752
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$10251, BasicBlockSignatureTracker # imm = 0x280B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_187
# %bb.185:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$10261, %ax             # imm = 0x2815
	jne	.LBB26_285
# %bb.186:                              # %losers_eval.split756
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	subl	$24, %eax
	movl	%eax, (%r15)
	movw	$10261, BasicBlockSignatureTracker # imm = 0x2815
	movw	$30, RunTimeSignatureAdjuster
.LBB26_187:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$47, %ax
	xorw	%cx, %ax
	cmpw	$10276, %ax             # imm = 0x2824
	jne	.LBB26_285
# %bb.188:                              # %losers_eval.split754
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$10276, BasicBlockSignatureTracker # imm = 0x2824
	movw	$4068, RunTimeSignatureAdjuster # imm = 0xFE4
.LBB26_189:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4081, %ax              # imm = 0xFF1
	xorw	%cx, %ax
	cmpw	$10289, %ax             # imm = 0x2831
	jne	.LBB26_285
# %bb.190:                              # %losers_eval.split734
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$10289, BasicBlockSignatureTracker # imm = 0x2831
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_193
# %bb.191:                              #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$10295, %ax             # imm = 0x2837
	jne	.LBB26_285
# %bb.192:                              # %losers_eval.split760
                                        #   in Loop: Header=BB26_52 Depth=1
	movl	(%r15), %eax
	addl	$5, %eax
	movl	%eax, (%r15)
	movw	$10295, BasicBlockSignatureTracker # imm = 0x2837
	movw	$6, RunTimeSignatureAdjuster
.LBB26_193:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$10300, %ax             # imm = 0x283C
	jne	.LBB26_285
# %bb.194:                              # %losers_eval.split758
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$10300, BasicBlockSignatureTracker # imm = 0x283C
	movw	$3626, RunTimeSignatureAdjuster # imm = 0xE2A
	jmp	.LBB26_215
.LBB26_195:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3664, %ax              # imm = 0xE50
	cmpw	$10310, %ax             # imm = 0x2846
	jne	.LBB26_285
# %bb.196:                              # %losers_eval.split630
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %edi
	movw	$10310, BasicBlockSignatureTracker # imm = 0x2846
	movw	$0, RunTimeSignatureAdjuster
	callq	l_rook_mobility
	movw	$10310, BasicBlockSignatureTracker # imm = 0x2846
	movw	$3664, RunTimeSignatureAdjuster # imm = 0xE50
	shll	$2, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movslq	(%rbx), %rax
	movl	lcentral(,%rax,4), %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10310, BasicBlockSignatureTracker # imm = 0x2846
	movw	$3664, RunTimeSignatureAdjuster # imm = 0xE50
	jmp	.LBB26_215
.LBB26_197:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3677, %ax              # imm = 0xE5D
	cmpw	$10315, %ax             # imm = 0x284B
	jne	.LBB26_285
# %bb.198:                              # %losers_eval.split632
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %edi
	movw	$10315, BasicBlockSignatureTracker # imm = 0x284B
	movw	$13, RunTimeSignatureAdjuster
	callq	l_rook_mobility
	movw	$10315, BasicBlockSignatureTracker # imm = 0x284B
	movw	$13, RunTimeSignatureAdjuster
	shll	$2, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movslq	(%rbx), %rax
	movl	lcentral(,%rax,4), %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$10315, BasicBlockSignatureTracker # imm = 0x284B
	movw	$3677, RunTimeSignatureAdjuster # imm = 0xE5D
	jmp	.LBB26_215
.LBB26_199:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3653, %ax              # imm = 0xE45
	cmpw	$10323, %ax             # imm = 0x2853
	jne	.LBB26_285
# %bb.200:                              # %losers_eval.split634
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %edi
	movw	$10323, BasicBlockSignatureTracker # imm = 0x2853
	movw	$0, RunTimeSignatureAdjuster
	callq	l_bishop_mobility
	movw	$10323, BasicBlockSignatureTracker # imm = 0x2853
	movw	$3653, RunTimeSignatureAdjuster # imm = 0xE45
	shll	$2, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movslq	(%rbx), %rax
	movl	lcentral(,%rax,4), %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10323, BasicBlockSignatureTracker # imm = 0x2853
	movw	$3653, RunTimeSignatureAdjuster # imm = 0xE45
	jmp	.LBB26_215
.LBB26_201:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3706, %ax              # imm = 0xE7A
	cmpw	$10348, %ax             # imm = 0x286C
	jne	.LBB26_285
# %bb.202:                              # %losers_eval.split636
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %edi
	movw	$10348, BasicBlockSignatureTracker # imm = 0x286C
	movw	$63, RunTimeSignatureAdjuster
	callq	l_bishop_mobility
	movw	$10348, BasicBlockSignatureTracker # imm = 0x286C
	movw	$63, RunTimeSignatureAdjuster
	shll	$2, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movslq	(%rbx), %rax
	movl	lcentral(,%rax,4), %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$10348, BasicBlockSignatureTracker # imm = 0x286C
	movw	$3706, RunTimeSignatureAdjuster # imm = 0xE7A
	jmp	.LBB26_215
.LBB26_203:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3686, %ax              # imm = 0xE66
	cmpw	$10352, %ax             # imm = 0x2870
	jne	.LBB26_285
# %bb.204:                              # %losers_eval.split638
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	lcentral(,%rax,4), %eax
	shll	$1, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rcx), %edi
	movw	$10352, BasicBlockSignatureTracker # imm = 0x2870
	movw	$0, RunTimeSignatureAdjuster
	callq	l_knight_mobility
	movw	$10352, BasicBlockSignatureTracker # imm = 0x2870
	movw	$3686, RunTimeSignatureAdjuster # imm = 0xE66
	shll	$2, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10352, BasicBlockSignatureTracker # imm = 0x2870
	movw	$3686, RunTimeSignatureAdjuster # imm = 0xE66
	jmp	.LBB26_215
.LBB26_205:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3681, %ax              # imm = 0xE61
	cmpw	$10359, %ax             # imm = 0x2877
	jne	.LBB26_285
# %bb.206:                              # %losers_eval.split640
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movl	lcentral(,%rax,4), %eax
	shll	$1, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rdx), %edi
	movw	$10359, BasicBlockSignatureTracker # imm = 0x2877
	movw	$7, RunTimeSignatureAdjuster
	callq	l_knight_mobility
	movw	$10359, BasicBlockSignatureTracker # imm = 0x2877
	movw	$7, RunTimeSignatureAdjuster
	shll	$2, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$10359, BasicBlockSignatureTracker # imm = 0x2877
	movw	$3681, RunTimeSignatureAdjuster # imm = 0xE61
	jmp	.LBB26_215
.LBB26_207:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3689, %ax              # imm = 0xE69
	cmpw	$10367, %ax             # imm = 0x287F
	jne	.LBB26_285
# %bb.208:                              # %losers_eval.split642
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %edi
	movw	$10367, BasicBlockSignatureTracker # imm = 0x287F
	movw	$44, RunTimeSignatureAdjuster
	callq	l_bishop_mobility
	movw	$10367, BasicBlockSignatureTracker # imm = 0x287F
	movw	$44, RunTimeSignatureAdjuster
	shll	$1, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rbx), %edi
	movw	$10367, BasicBlockSignatureTracker # imm = 0x287F
	movw	$57, RunTimeSignatureAdjuster
	callq	l_rook_mobility
	movw	$10367, BasicBlockSignatureTracker # imm = 0x287F
	movw	$57, RunTimeSignatureAdjuster
	shll	$1, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movslq	(%rbx), %rax
	movl	lcentral(,%rax,4), %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10367, BasicBlockSignatureTracker # imm = 0x287F
	movw	$3689, RunTimeSignatureAdjuster # imm = 0xE69
	jmp	.LBB26_215
.LBB26_209:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3740, %ax              # imm = 0xE9C
	cmpw	$10378, %ax             # imm = 0x288A
	jne	.LBB26_285
# %bb.210:                              # %losers_eval.split644
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %edi
	movw	$10378, BasicBlockSignatureTracker # imm = 0x288A
	movw	$217, RunTimeSignatureAdjuster
	callq	l_bishop_mobility
	movw	$10378, BasicBlockSignatureTracker # imm = 0x288A
	movw	$217, RunTimeSignatureAdjuster
	shll	$1, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rbx), %edi
	movw	$10378, BasicBlockSignatureTracker # imm = 0x288A
	movw	$204, RunTimeSignatureAdjuster
	callq	l_rook_mobility
	movw	$10378, BasicBlockSignatureTracker # imm = 0x288A
	movw	$204, RunTimeSignatureAdjuster
	shll	$1, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movslq	(%rbx), %rax
	movl	lcentral(,%rax,4), %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$10378, BasicBlockSignatureTracker # imm = 0x288A
	movw	$3740, RunTimeSignatureAdjuster # imm = 0xE9C
	jmp	.LBB26_215
.LBB26_211:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3724, %ax              # imm = 0xE8C
	cmpw	$10394, %ax             # imm = 0x289A
	jne	.LBB26_285
# %bb.212:                              # %losers_eval.split646
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	lcentral(,%rax,4), %eax
	shll	$1, %eax
	movl	%eax, (%r14)
	movl	(%rcx), %edi
	movw	$10394, BasicBlockSignatureTracker # imm = 0x289A
	movw	$0, RunTimeSignatureAdjuster
	callq	l_king_mobility
	movw	$10394, BasicBlockSignatureTracker # imm = 0x289A
	movw	$3724, RunTimeSignatureAdjuster # imm = 0xE8C
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10394, BasicBlockSignatureTracker # imm = 0x289A
	movw	$3724, RunTimeSignatureAdjuster # imm = 0xE8C
	jmp	.LBB26_215
.LBB26_213:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3750, %ax              # imm = 0xEA6
	cmpw	$10416, %ax             # imm = 0x28B0
	jne	.LBB26_285
# %bb.214:                              # %losers_eval.split648
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	lcentral(,%rax,4), %eax
	shll	$1, %eax
	movl	%eax, (%r13)
	movl	(%rcx), %edi
	movw	$10416, BasicBlockSignatureTracker # imm = 0x28B0
	movw	$42, RunTimeSignatureAdjuster
	callq	l_king_mobility
	movw	$10416, BasicBlockSignatureTracker # imm = 0x28B0
	movw	$42, RunTimeSignatureAdjuster
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$10416, BasicBlockSignatureTracker # imm = 0x28B0
	movw	$3750, RunTimeSignatureAdjuster # imm = 0xEA6
.LBB26_215:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3746, %ax              # imm = 0xEA2
	xorw	%cx, %ax
	cmpw	$10420, %ax             # imm = 0x28B4
	jne	.LBB26_285
# %bb.216:                              # %losers_eval.split624
                                        #   in Loop: Header=BB26_52 Depth=1
	movw	$10420, BasicBlockSignatureTracker # imm = 0x28B4
	movw	$3392, RunTimeSignatureAdjuster # imm = 0xD40
.LBB26_217:                             #   in Loop: Header=BB26_52 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3395, %ax              # imm = 0xD43
	xorw	%cx, %ax
	cmpw	$10423, %ax             # imm = 0x28B7
	jne	.LBB26_285
# %bb.218:                              # %losers_eval.split620
                                        #   in Loop: Header=BB26_52 Depth=1
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$10423, BasicBlockSignatureTracker # imm = 0x28B7
	movw	$3448, RunTimeSignatureAdjuster # imm = 0xD78
	jmp	.LBB26_52
.LBB26_219:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3426, %ax              # imm = 0xD62
	cmpw	$10425, %ax             # imm = 0x28B9
	jne	.LBB26_288
# %bb.220:                              # %losers_eval.split614
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movw	$10425, BasicBlockSignatureTracker # imm = 0x28B9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jle	.LBB26_223
# %bb.221:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$112, %ax
	cmpw	$10441, %ax             # imm = 0x28C9
	jne	.LBB26_288
# %bb.222:                              # %losers_eval.split762
	movl	(%r14), %eax
	subl	(%r13), %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$10441, BasicBlockSignatureTracker # imm = 0x28C9
	movw	$112, RunTimeSignatureAdjuster
.LBB26_223:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$114, %ax
	xorw	%cx, %ax
	cmpw	$10443, %ax             # imm = 0x28CB
	jne	.LBB26_288
# %bb.224:                              # %losers_eval.split764
	movl	Material, %edi
	callq	abs
	movw	$10443, BasicBlockSignatureTracker # imm = 0x28CB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$900, %eax              # imm = 0x384
	jg	.LBB26_227
# %bb.225:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$10445, %ax             # imm = 0x28CD
	jne	.LBB26_288
# %bb.226:                              # %losers_eval.split766
	movl	Material, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10445, BasicBlockSignatureTracker # imm = 0x28CD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB26_257
.LBB26_227:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$10451, %ax             # imm = 0x28D3
	jne	.LBB26_288
# %bb.228:                              # %losers_eval.split768
	movl	Material, %eax
	movw	$10451, BasicBlockSignatureTracker # imm = 0x28D3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB26_239
# %bb.229:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$10454, %ax             # imm = 0x28D6
	jne	.LBB26_288
# %bb.230:                              # %losers_eval.split772
	movl	comp_color, %eax
	movw	$10454, BasicBlockSignatureTracker # imm = 0x28D6
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB26_239
# %bb.231:                              # %Buffer__10
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15606, %ax             # imm = 0x3CF6
	cmpw	$5152, %ax              # imm = 0x1420
	jne	.LBB26_288
# %bb.232:                              # %losers_eval.split776
	movw	$5152, BasicBlockSignatureTracker # imm = 0x1420
	movw	$15606, RunTimeSignatureAdjuster # imm = 0x3CF6
# %bb.233:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$10458, %ax             # imm = 0x28DA
	jne	.LBB26_288
# %bb.234:                              # %losers_eval.split836
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$10458, BasicBlockSignatureTracker # imm = 0x28DA
	movw	$9, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_239
# %bb.235:                              # %Buffer__11
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-13217, %ax            # imm = 0xCC5F
	cmpw	$-7035, %ax             # imm = 0xE485
	jne	.LBB26_288
# %bb.236:                              # %losers_eval.split778
	movw	$-7035, BasicBlockSignatureTracker # imm = 0xE485
	movw	$-13217, RunTimeSignatureAdjuster # imm = 0xCC5F
# %bb.237:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$10461, %ax             # imm = 0x28DD
	jne	.LBB26_288
# %bb.238:                              # %losers_eval.split838
	movl	$1800, %eax             # imm = 0x708
	subl	Material, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10461, BasicBlockSignatureTracker # imm = 0x28DD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB26_255
.LBB26_239:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$50, %ax
	xorw	%cx, %ax
	cmpw	$10465, %ax             # imm = 0x28E1
	jne	.LBB26_288
# %bb.240:                              # %losers_eval.split774
	movl	Material, %eax
	movw	$10465, BasicBlockSignatureTracker # imm = 0x28E1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jge	.LBB26_251
# %bb.241:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$10478, %ax             # imm = 0x28EE
	jne	.LBB26_288
# %bb.242:                              # %losers_eval.split782
	movl	comp_color, %eax
	movw	$10478, BasicBlockSignatureTracker # imm = 0x28EE
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_251
# %bb.243:                              # %Buffer__12
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-661, %ax              # imm = 0xFD6B
	cmpw	$-10875, %ax            # imm = 0xD585
	jne	.LBB26_288
# %bb.244:                              # %losers_eval.split786
	movw	$-10875, BasicBlockSignatureTracker # imm = 0xD585
	movw	$-661, RunTimeSignatureAdjuster # imm = 0xFD6B
# %bb.245:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$10492, %ax             # imm = 0x28FC
	jne	.LBB26_288
# %bb.246:                              # %losers_eval.split840
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$10492, BasicBlockSignatureTracker # imm = 0x28FC
	movw	$29, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_251
# %bb.247:                              # %Buffer__13
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-31983, %ax            # imm = 0x8311
	cmpw	$-21523, %ax            # imm = 0xABED
	jne	.LBB26_288
# %bb.248:                              # %losers_eval.split788
	movw	$-21523, BasicBlockSignatureTracker # imm = 0xABED
	movw	$-31983, RunTimeSignatureAdjuster # imm = 0x8311
# %bb.249:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$495, %ax               # imm = 0x1EF
	xorw	%cx, %ax
	cmpw	$10515, %ax             # imm = 0x2913
	jne	.LBB26_288
# %bb.250:                              # %losers_eval.split842
	xorl	%eax, %eax
	movl	Material, %ecx
	addl	$1800, %ecx             # imm = 0x708
	subl	%ecx, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10515, BasicBlockSignatureTracker # imm = 0x2913
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB26_253
.LBB26_251:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$501, %ax               # imm = 0x1F5
	xorw	%cx, %ax
	cmpw	$10516, %ax             # imm = 0x2914
	jne	.LBB26_288
# %bb.252:                              # %losers_eval.split784
	movl	Material, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$10516, BasicBlockSignatureTracker # imm = 0x2914
	movw	$7, RunTimeSignatureAdjuster
.LBB26_253:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$10520, %ax             # imm = 0x2918
	jne	.LBB26_288
# %bb.254:                              # %losers_eval.split790
	movw	$10520, BasicBlockSignatureTracker # imm = 0x2918
	movw	$453, RunTimeSignatureAdjuster # imm = 0x1C5
.LBB26_255:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$396, %ax               # imm = 0x18C
	xorw	%cx, %ax
	cmpw	$10577, %ax             # imm = 0x2951
	jne	.LBB26_288
# %bb.256:                              # %losers_eval.split780
	movw	$10577, BasicBlockSignatureTracker # imm = 0x2951
	movw	$412, RunTimeSignatureAdjuster # imm = 0x19C
.LBB26_257:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$408, %ax               # imm = 0x198
	xorw	%cx, %ax
	cmpw	$10581, %ax             # imm = 0x2955
	jne	.LBB26_288
# %bb.258:                              # %losers_eval.split770
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$10581, BasicBlockSignatureTracker # imm = 0x2955
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_261
# %bb.259:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$214, %ax
	cmpw	$10627, %ax             # imm = 0x2983
	jne	.LBB26_288
# %bb.260:                              # %losers_eval.split794
	movl	(%r15), %eax
	addl	$200, %eax
	movl	%eax, (%r15)
	movw	$10627, BasicBlockSignatureTracker # imm = 0x2983
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB26_267
.LBB26_261:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$217, %ax
	cmpw	$10636, %ax             # imm = 0x298C
	jne	.LBB26_288
# %bb.262:                              # %losers_eval.split792
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$10636, BasicBlockSignatureTracker # imm = 0x298C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_265
# %bb.263:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$10662, %ax             # imm = 0x29A6
	jne	.LBB26_288
# %bb.264:                              # %losers_eval.split800
	movl	(%r15), %eax
	subl	$200, %eax
	movl	%eax, (%r15)
	movw	$10662, BasicBlockSignatureTracker # imm = 0x29A6
	movw	$42, RunTimeSignatureAdjuster
.LBB26_265:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$10678, %ax             # imm = 0x29B6
	jne	.LBB26_288
# %bb.266:                              # %losers_eval.split798
	movw	$10678, BasicBlockSignatureTracker # imm = 0x29B6
	movw	$53, RunTimeSignatureAdjuster
.LBB26_267:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$73, %ax
	xorw	%cx, %ax
	cmpw	$10698, %ax             # imm = 0x29CA
	jne	.LBB26_288
# %bb.268:                              # %losers_eval.split796
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$10698, BasicBlockSignatureTracker # imm = 0x29CA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_271
# %bb.269:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$10699, %ax             # imm = 0x29CB
	jne	.LBB26_288
# %bb.270:                              # %losers_eval.split804
	movl	$1000000, (%r15)        # imm = 0xF4240
	movw	$10699, BasicBlockSignatureTracker # imm = 0x29CB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB26_277
.LBB26_271:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$10707, %ax             # imm = 0x29D3
	jne	.LBB26_288
# %bb.272:                              # %losers_eval.split802
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$10707, BasicBlockSignatureTracker # imm = 0x29D3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB26_275
# %bb.273:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$10721, %ax             # imm = 0x29E1
	jne	.LBB26_288
# %bb.274:                              # %losers_eval.split810
	movl	$-1000000, (%r15)       # imm = 0xFFF0BDC0
	movw	$10721, BasicBlockSignatureTracker # imm = 0x29E1
	movw	$50, RunTimeSignatureAdjuster
.LBB26_275:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$10729, %ax             # imm = 0x29E9
	jne	.LBB26_288
# %bb.276:                              # %losers_eval.split808
	movw	$10729, BasicBlockSignatureTracker # imm = 0x29E9
	movw	$34, RunTimeSignatureAdjuster
.LBB26_277:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$33, %ax
	xorw	%cx, %ax
	cmpw	$10730, %ax             # imm = 0x29EA
	jne	.LBB26_288
# %bb.278:                              # %losers_eval.split806
	movl	(%r15), %edi
	movw	$10730, BasicBlockSignatureTracker # imm = 0x29EA
	movw	$3309, RunTimeSignatureAdjuster # imm = 0xCED
	callq	storeECache
	movw	$10730, BasicBlockSignatureTracker # imm = 0x29EA
	movw	$3309, RunTimeSignatureAdjuster # imm = 0xCED
	movl	white_to_move, %eax
	movw	$10730, BasicBlockSignatureTracker # imm = 0x29EA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB26_281
# %bb.279:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$10750, %ax             # imm = 0x29FE
	jne	.LBB26_288
# %bb.280:                              # %losers_eval.split812
	movl	(%r15), %eax
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$10750, BasicBlockSignatureTracker # imm = 0x29FE
	movw	$3278, RunTimeSignatureAdjuster # imm = 0xCCE
	jmp	.LBB26_283
.LBB26_281:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$969, %ax               # imm = 0x3C9
	cmpw	$10787, %ax             # imm = 0x2A23
	jne	.LBB26_288
# %bb.282:                              # %losers_eval.split814
	xorl	%eax, %eax
	subl	(%r15), %eax
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$10787, BasicBlockSignatureTracker # imm = 0x2A23
	movw	$3859, RunTimeSignatureAdjuster # imm = 0xF13
.LBB26_283:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3845, %ax              # imm = 0xF05
	xorw	%cx, %ax
	cmpw	$10805, %ax             # imm = 0x2A35
	jne	.LBB26_288
# %bb.284:                              # %losers_eval.split568
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$10805, BasicBlockSignatureTracker # imm = 0x2A35
	movw	$15625, RunTimeSignatureAdjuster # imm = 0x3D09
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB26_285:                             # %CFerrorHandler.losers_eval.loopexit
	jmp	.LBB26_288
.LBB26_286:                             # %CFerrorHandler.losers_eval.loopexit1
	jmp	.LBB26_288
.LBB26_287:                             # %CFerrorHandler.losers_eval.loopexit2
	jmp	.LBB26_288
.LBB26_288:                             # %CFerrorHandler.losers_eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end26:
	.size	losers_eval, .Lfunc_end26-losers_eval
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI26_0:
	.quad	.LBB26_63
	.quad	.LBB26_129
	.quad	.LBB26_203
	.quad	.LBB26_205
	.quad	.LBB26_211
	.quad	.LBB26_213
	.quad	.LBB26_195
	.quad	.LBB26_197
	.quad	.LBB26_207
	.quad	.LBB26_209
	.quad	.LBB26_199
	.quad	.LBB26_201
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function l_pawn_mobility
	.type	l_pawn_mobility,@function
l_pawn_mobility:                        # @l_pawn_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3163, %ax              # imm = 0xC5B
	xorw	%cx, %ax
	cmpw	$10820, %ax             # imm = 0x2A44
	jne	.LBB27_17
# %bb.1:                                # %l_pawn_mobility.split35
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3163, %ax              # imm = 0xC5B
	xorw	%cx, %ax
	cmpw	$10820, %ax             # imm = 0x2A44
	jne	.LBB27_17
# %bb.2:                                # %l_pawn_mobility.split
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rcx)
	movl	$0, (%rax)
	movslq	(%rcx), %rdx
	movl	board(,%rdx,4), %edx
	movw	$10820, BasicBlockSignatureTracker # imm = 0x2A44
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %edx
	jne	.LBB27_9
# %bb.3:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$37, %dx
	cmpw	$10849, %dx             # imm = 0x2A61
	jne	.LBB27_17
# %bb.4:                                # %l_pawn_mobility.split37
	movl	(%rcx), %ecx
	addl	$12, %ecx
	movslq	%ecx, %rcx
	movl	board(,%rcx,4), %ecx
	movw	$10849, BasicBlockSignatureTracker # imm = 0x2A61
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %ecx
	jne	.LBB27_7
# %bb.5:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$4, %cx
	cmpw	$10853, %cx             # imm = 0x2A65
	jne	.LBB27_17
# %bb.6:                                # %l_pawn_mobility.split41
	movl	(%rax), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rax)
	movw	$10853, BasicBlockSignatureTracker # imm = 0x2A65
	movw	$4, RunTimeSignatureAdjuster
.LBB27_7:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$26, %cx
	xorw	%dx, %cx
	cmpw	$10875, %cx             # imm = 0x2A7B
	jne	.LBB27_17
# %bb.8:                                # %l_pawn_mobility.split43
	movw	$10875, BasicBlockSignatureTracker # imm = 0x2A7B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB27_15
.LBB27_9:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$211, %dx
	cmpw	$10903, %dx             # imm = 0x2A97
	jne	.LBB27_17
# %bb.10:                               # %l_pawn_mobility.split39
	movl	(%rcx), %ecx
	subl	$12, %ecx
	movslq	%ecx, %rcx
	movl	board(,%rcx,4), %ecx
	movw	$10903, BasicBlockSignatureTracker # imm = 0x2A97
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %ecx
	jne	.LBB27_13
# %bb.11:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$11, %cx
	cmpw	$10908, %cx             # imm = 0x2A9C
	jne	.LBB27_17
# %bb.12:                               # %l_pawn_mobility.split47
	movl	(%rax), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rax)
	movw	$10908, BasicBlockSignatureTracker # imm = 0x2A9C
	movw	$11, RunTimeSignatureAdjuster
.LBB27_13:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$8, %cx
	xorw	%dx, %cx
	cmpw	$10911, %cx             # imm = 0x2A9F
	jne	.LBB27_17
# %bb.14:                               # %l_pawn_mobility.split49
	movw	$10911, BasicBlockSignatureTracker # imm = 0x2A9F
	movw	$228, RunTimeSignatureAdjuster
.LBB27_15:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$203, %cx
	xorw	%dx, %cx
	cmpw	$10928, %cx             # imm = 0x2AB0
	jne	.LBB27_17
# %bb.16:                               # %l_pawn_mobility.split45
	movl	(%rax), %eax
	movw	$10928, BasicBlockSignatureTracker # imm = 0x2AB0
	movw	$3238, RunTimeSignatureAdjuster # imm = 0xCA6
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB27_17:                              # %CFerrorHandler.l_pawn_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end27:
	.size	l_pawn_mobility, .Lfunc_end27-l_pawn_mobility
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function l_rook_mobility
	.type	l_rook_mobility,@function
l_rook_mobility:                        # @l_rook_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$760, %ax               # imm = 0x2F8
	xorw	%cx, %ax
	cmpw	$10942, %ax             # imm = 0x2ABE
	jne	.LBB28_41
# %bb.1:                                # %l_rook_mobility.split78
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$760, %ax               # imm = 0x2F8
	xorw	%cx, %ax
	cmpw	$10942, %ax             # imm = 0x2ABE
	jne	.LBB28_41
# %bb.2:                                # %l_rook_mobility.split76
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$760, %ax               # imm = 0x2F8
	xorw	%cx, %ax
	cmpw	$10942, %ax             # imm = 0x2ABE
	jne	.LBB28_41
# %bb.3:                                # %l_rook_mobility.split74
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$760, %ax               # imm = 0x2F8
	xorw	%cx, %ax
	cmpw	$10942, %ax             # imm = 0x2ABE
	jne	.LBB28_41
# %bb.4:                                # %l_rook_mobility.split
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rdx)
	movl	$0, (%rax)
	movl	(%rdx), %esi
	subl	$12, %esi
	movl	%esi, (%rcx)
	movw	$10942, BasicBlockSignatureTracker # imm = 0x2ABE
	movw	$0, RunTimeSignatureAdjuster
.LBB28_5:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$116, %si
	xorw	%di, %si
	cmpw	$10954, %si             # imm = 0x2ACA
	jne	.LBB28_40
# %bb.6:                                # %l_rook_mobility.split80
                                        #   in Loop: Header=BB28_5 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$10954, BasicBlockSignatureTracker # imm = 0x2ACA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB28_11
# %bb.7:                                #   in Loop: Header=BB28_5 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$5, %si
	cmpw	$10959, %si             # imm = 0x2ACF
	jne	.LBB28_40
# %bb.8:                                # %l_rook_mobility.split82
                                        #   in Loop: Header=BB28_5 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$10959, BasicBlockSignatureTracker # imm = 0x2ACF
	movw	$0, RunTimeSignatureAdjuster
# %bb.9:                                #   in Loop: Header=BB28_5 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$19, %si
	cmpw	$10972, %si             # imm = 0x2ADC
	jne	.LBB28_40
# %bb.10:                               # %l_rook_mobility.split86
                                        #   in Loop: Header=BB28_5 Depth=1
	movl	(%rcx), %esi
	subl	$12, %esi
	movl	%esi, (%rcx)
	movw	$10972, BasicBlockSignatureTracker # imm = 0x2ADC
	movw	$98, RunTimeSignatureAdjuster
	jmp	.LBB28_5
.LBB28_11:
	movw	BasicBlockSignatureTracker, %si
	xorw	$39, %si
	cmpw	$10989, %si             # imm = 0x2AED
	jne	.LBB28_41
# %bb.12:                               # %l_rook_mobility.split84
	movl	(%rdx), %esi
	subl	$1, %esi
	movl	%esi, (%rcx)
	movw	$10989, BasicBlockSignatureTracker # imm = 0x2AED
	movw	$0, RunTimeSignatureAdjuster
.LBB28_13:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$27, %si
	xorw	%di, %si
	cmpw	$10998, %si             # imm = 0x2AF6
	jne	.LBB28_39
# %bb.14:                               # %l_rook_mobility.split88
                                        #   in Loop: Header=BB28_13 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$10998, BasicBlockSignatureTracker # imm = 0x2AF6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB28_19
# %bb.15:                               #   in Loop: Header=BB28_13 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$8, %si
	cmpw	$11006, %si             # imm = 0x2AFE
	jne	.LBB28_39
# %bb.16:                               # %l_rook_mobility.split90
                                        #   in Loop: Header=BB28_13 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$11006, BasicBlockSignatureTracker # imm = 0x2AFE
	movw	$0, RunTimeSignatureAdjuster
# %bb.17:                               #   in Loop: Header=BB28_13 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$503, %si               # imm = 0x1F7
	cmpw	$11017, %si             # imm = 0x2B09
	jne	.LBB28_39
# %bb.18:                               # %l_rook_mobility.split94
                                        #   in Loop: Header=BB28_13 Depth=1
	movl	(%rcx), %esi
	subl	$1, %esi
	movl	%esi, (%rcx)
	movw	$11017, BasicBlockSignatureTracker # imm = 0x2B09
	movw	$484, RunTimeSignatureAdjuster # imm = 0x1E4
	jmp	.LBB28_13
.LBB28_19:
	movw	BasicBlockSignatureTracker, %si
	xorw	$505, %si               # imm = 0x1F9
	cmpw	$11023, %si             # imm = 0x2B0F
	jne	.LBB28_41
# %bb.20:                               # %l_rook_mobility.split92
	movl	(%rdx), %esi
	addl	$1, %esi
	movl	%esi, (%rcx)
	movw	$11023, BasicBlockSignatureTracker # imm = 0x2B0F
	movw	$0, RunTimeSignatureAdjuster
.LBB28_21:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$31, %si
	xorw	%di, %si
	cmpw	$11024, %si             # imm = 0x2B10
	jne	.LBB28_38
# %bb.22:                               # %l_rook_mobility.split96
                                        #   in Loop: Header=BB28_21 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$11024, BasicBlockSignatureTracker # imm = 0x2B10
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB28_27
# %bb.23:                               #   in Loop: Header=BB28_21 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$4, %si
	cmpw	$11028, %si             # imm = 0x2B14
	jne	.LBB28_38
# %bb.24:                               # %l_rook_mobility.split98
                                        #   in Loop: Header=BB28_21 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$11028, BasicBlockSignatureTracker # imm = 0x2B14
	movw	$0, RunTimeSignatureAdjuster
# %bb.25:                               #   in Loop: Header=BB28_21 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$60, %si
	cmpw	$11048, %si             # imm = 0x2B28
	jne	.LBB28_38
# %bb.26:                               # %l_rook_mobility.split102
                                        #   in Loop: Header=BB28_21 Depth=1
	movl	(%rcx), %esi
	addl	$1, %esi
	movl	%esi, (%rcx)
	movw	$11048, BasicBlockSignatureTracker # imm = 0x2B28
	movw	$39, RunTimeSignatureAdjuster
	jmp	.LBB28_21
.LBB28_27:
	movw	BasicBlockSignatureTracker, %si
	xorw	$58, %si
	cmpw	$11050, %si             # imm = 0x2B2A
	jne	.LBB28_41
# %bb.28:                               # %l_rook_mobility.split100
	movl	(%rdx), %edx
	addl	$12, %edx
	movl	%edx, (%rcx)
	movw	$11050, BasicBlockSignatureTracker # imm = 0x2B2A
	movw	$0, RunTimeSignatureAdjuster
.LBB28_29:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$108, %dx
	xorw	%si, %dx
	cmpw	$11078, %dx             # imm = 0x2B46
	jne	.LBB28_37
# %bb.30:                               # %l_rook_mobility.split104
                                        #   in Loop: Header=BB28_29 Depth=1
	movslq	(%rcx), %rdx
	movl	board(,%rdx,4), %edx
	movw	$11078, BasicBlockSignatureTracker # imm = 0x2B46
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	jne	.LBB28_35
# %bb.31:                               #   in Loop: Header=BB28_29 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$17, %dx
	cmpw	$11095, %dx             # imm = 0x2B57
	jne	.LBB28_37
# %bb.32:                               # %l_rook_mobility.split106
                                        #   in Loop: Header=BB28_29 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$11095, BasicBlockSignatureTracker # imm = 0x2B57
	movw	$0, RunTimeSignatureAdjuster
# %bb.33:                               #   in Loop: Header=BB28_29 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$52, %dx
	cmpw	$11107, %dx             # imm = 0x2B63
	jne	.LBB28_37
# %bb.34:                               # %l_rook_mobility.split110
                                        #   in Loop: Header=BB28_29 Depth=1
	movl	(%rcx), %edx
	addl	$12, %edx
	movl	%edx, (%rcx)
	movw	$11107, BasicBlockSignatureTracker # imm = 0x2B63
	movw	$73, RunTimeSignatureAdjuster
	jmp	.LBB28_29
.LBB28_35:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$63, %cx
	cmpw	$11129, %cx             # imm = 0x2B79
	jne	.LBB28_41
# %bb.36:                               # %l_rook_mobility.split108
	movl	(%rax), %eax
	movw	$11129, BasicBlockSignatureTracker # imm = 0x2B79
	movw	$3439, RunTimeSignatureAdjuster # imm = 0xD6F
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB28_37:                              # %CFerrorHandler.l_rook_mobility.loopexit
	jmp	.LBB28_41
.LBB28_38:                              # %CFerrorHandler.l_rook_mobility.loopexit1
	jmp	.LBB28_41
.LBB28_39:                              # %CFerrorHandler.l_rook_mobility.loopexit2
	jmp	.LBB28_41
.LBB28_40:                              # %CFerrorHandler.l_rook_mobility.loopexit3
	jmp	.LBB28_41
.LBB28_41:                              # %CFerrorHandler.l_rook_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end28:
	.size	l_rook_mobility, .Lfunc_end28-l_rook_mobility
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function l_bishop_mobility
	.type	l_bishop_mobility,@function
l_bishop_mobility:                      # @l_bishop_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$987, %ax               # imm = 0x3DB
	xorw	%cx, %ax
	cmpw	$11144, %ax             # imm = 0x2B88
	jne	.LBB29_41
# %bb.1:                                # %l_bishop_mobility.split78
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$987, %ax               # imm = 0x3DB
	xorw	%cx, %ax
	cmpw	$11144, %ax             # imm = 0x2B88
	jne	.LBB29_41
# %bb.2:                                # %l_bishop_mobility.split76
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$987, %ax               # imm = 0x3DB
	xorw	%cx, %ax
	cmpw	$11144, %ax             # imm = 0x2B88
	jne	.LBB29_41
# %bb.3:                                # %l_bishop_mobility.split74
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$987, %ax               # imm = 0x3DB
	xorw	%cx, %ax
	cmpw	$11144, %ax             # imm = 0x2B88
	jne	.LBB29_41
# %bb.4:                                # %l_bishop_mobility.split
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rdx)
	movl	$0, (%rax)
	movl	(%rdx), %esi
	subl	$13, %esi
	movl	%esi, (%rcx)
	movw	$11144, BasicBlockSignatureTracker # imm = 0x2B88
	movw	$0, RunTimeSignatureAdjuster
.LBB29_5:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$4, %si
	xorw	%di, %si
	cmpw	$11148, %si             # imm = 0x2B8C
	jne	.LBB29_40
# %bb.6:                                # %l_bishop_mobility.split80
                                        #   in Loop: Header=BB29_5 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$11148, BasicBlockSignatureTracker # imm = 0x2B8C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB29_11
# %bb.7:                                #   in Loop: Header=BB29_5 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$2, %si
	cmpw	$11150, %si             # imm = 0x2B8E
	jne	.LBB29_40
# %bb.8:                                # %l_bishop_mobility.split82
                                        #   in Loop: Header=BB29_5 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$11150, BasicBlockSignatureTracker # imm = 0x2B8E
	movw	$0, RunTimeSignatureAdjuster
# %bb.9:                                #   in Loop: Header=BB29_5 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$30, %si
	cmpw	$11152, %si             # imm = 0x2B90
	jne	.LBB29_40
# %bb.10:                               # %l_bishop_mobility.split86
                                        #   in Loop: Header=BB29_5 Depth=1
	movl	(%rcx), %esi
	subl	$13, %esi
	movl	%esi, (%rcx)
	movw	$11152, BasicBlockSignatureTracker # imm = 0x2B90
	movw	$24, RunTimeSignatureAdjuster
	jmp	.LBB29_5
.LBB29_11:
	movw	BasicBlockSignatureTracker, %si
	xorw	$21, %si
	cmpw	$11161, %si             # imm = 0x2B99
	jne	.LBB29_41
# %bb.12:                               # %l_bishop_mobility.split84
	movl	(%rdx), %esi
	subl	$11, %esi
	movl	%esi, (%rcx)
	movw	$11161, BasicBlockSignatureTracker # imm = 0x2B99
	movw	$0, RunTimeSignatureAdjuster
.LBB29_13:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$48, %si
	xorw	%di, %si
	cmpw	$11177, %si             # imm = 0x2BA9
	jne	.LBB29_39
# %bb.14:                               # %l_bishop_mobility.split88
                                        #   in Loop: Header=BB29_13 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$11177, BasicBlockSignatureTracker # imm = 0x2BA9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB29_19
# %bb.15:                               #   in Loop: Header=BB29_13 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$6, %si
	cmpw	$11183, %si             # imm = 0x2BAF
	jne	.LBB29_39
# %bb.16:                               # %l_bishop_mobility.split90
                                        #   in Loop: Header=BB29_13 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$11183, BasicBlockSignatureTracker # imm = 0x2BAF
	movw	$0, RunTimeSignatureAdjuster
# %bb.17:                               #   in Loop: Header=BB29_13 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$127, %si
	cmpw	$11216, %si             # imm = 0x2BD0
	jne	.LBB29_39
# %bb.18:                               # %l_bishop_mobility.split94
                                        #   in Loop: Header=BB29_13 Depth=1
	movl	(%rcx), %esi
	subl	$11, %esi
	movl	%esi, (%rcx)
	movw	$11216, BasicBlockSignatureTracker # imm = 0x2BD0
	movw	$73, RunTimeSignatureAdjuster
	jmp	.LBB29_13
.LBB29_19:
	movw	BasicBlockSignatureTracker, %si
	xorw	$119, %si
	cmpw	$11230, %si             # imm = 0x2BDE
	jne	.LBB29_41
# %bb.20:                               # %l_bishop_mobility.split92
	movl	(%rdx), %esi
	addl	$11, %esi
	movl	%esi, (%rcx)
	movw	$11230, BasicBlockSignatureTracker # imm = 0x2BDE
	movw	$0, RunTimeSignatureAdjuster
.LBB29_21:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$55, %si
	xorw	%di, %si
	cmpw	$11241, %si             # imm = 0x2BE9
	jne	.LBB29_38
# %bb.22:                               # %l_bishop_mobility.split96
                                        #   in Loop: Header=BB29_21 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$11241, BasicBlockSignatureTracker # imm = 0x2BE9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB29_27
# %bb.23:                               #   in Loop: Header=BB29_21 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$2, %si
	cmpw	$11243, %si             # imm = 0x2BEB
	jne	.LBB29_38
# %bb.24:                               # %l_bishop_mobility.split98
                                        #   in Loop: Header=BB29_21 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$11243, BasicBlockSignatureTracker # imm = 0x2BEB
	movw	$0, RunTimeSignatureAdjuster
# %bb.25:                               #   in Loop: Header=BB29_21 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$2022, %si              # imm = 0x7E6
	cmpw	$11277, %si             # imm = 0x2C0D
	jne	.LBB29_38
# %bb.26:                               # %l_bishop_mobility.split102
                                        #   in Loop: Header=BB29_21 Depth=1
	movl	(%rcx), %esi
	addl	$11, %esi
	movl	%esi, (%rcx)
	movw	$11277, BasicBlockSignatureTracker # imm = 0x2C0D
	movw	$2003, RunTimeSignatureAdjuster # imm = 0x7D3
	jmp	.LBB29_21
.LBB29_27:
	movw	BasicBlockSignatureTracker, %si
	xorw	$2045, %si              # imm = 0x7FD
	cmpw	$11284, %si             # imm = 0x2C14
	jne	.LBB29_41
# %bb.28:                               # %l_bishop_mobility.split100
	movl	(%rdx), %edx
	addl	$13, %edx
	movl	%edx, (%rcx)
	movw	$11284, BasicBlockSignatureTracker # imm = 0x2C14
	movw	$0, RunTimeSignatureAdjuster
.LBB29_29:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$10, %dx
	xorw	%si, %dx
	cmpw	$11294, %dx             # imm = 0x2C1E
	jne	.LBB29_37
# %bb.30:                               # %l_bishop_mobility.split104
                                        #   in Loop: Header=BB29_29 Depth=1
	movslq	(%rcx), %rdx
	movl	board(,%rdx,4), %edx
	movw	$11294, BasicBlockSignatureTracker # imm = 0x2C1E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	jne	.LBB29_35
# %bb.31:                               #   in Loop: Header=BB29_29 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$43, %dx
	cmpw	$11317, %dx             # imm = 0x2C35
	jne	.LBB29_37
# %bb.32:                               # %l_bishop_mobility.split106
                                        #   in Loop: Header=BB29_29 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$11317, BasicBlockSignatureTracker # imm = 0x2C35
	movw	$0, RunTimeSignatureAdjuster
# %bb.33:                               #   in Loop: Header=BB29_29 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$12, %dx
	cmpw	$11321, %dx             # imm = 0x2C39
	jne	.LBB29_37
# %bb.34:                               # %l_bishop_mobility.split110
                                        #   in Loop: Header=BB29_29 Depth=1
	movl	(%rcx), %edx
	addl	$13, %edx
	movl	%edx, (%rcx)
	movw	$11321, BasicBlockSignatureTracker # imm = 0x2C39
	movw	$45, RunTimeSignatureAdjuster
	jmp	.LBB29_29
.LBB29_35:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$79, %cx
	cmpw	$11345, %cx             # imm = 0x2C51
	jne	.LBB29_41
# %bb.36:                               # %l_bishop_mobility.split108
	movl	(%rax), %eax
	movw	$11345, BasicBlockSignatureTracker # imm = 0x2C51
	movw	$2631, RunTimeSignatureAdjuster # imm = 0xA47
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB29_37:                              # %CFerrorHandler.l_bishop_mobility.loopexit
	jmp	.LBB29_41
.LBB29_38:                              # %CFerrorHandler.l_bishop_mobility.loopexit1
	jmp	.LBB29_41
.LBB29_39:                              # %CFerrorHandler.l_bishop_mobility.loopexit2
	jmp	.LBB29_41
.LBB29_40:                              # %CFerrorHandler.l_bishop_mobility.loopexit3
	jmp	.LBB29_41
.LBB29_41:                              # %CFerrorHandler.l_bishop_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end29:
	.size	l_bishop_mobility, .Lfunc_end29-l_bishop_mobility
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function l_knight_mobility
	.type	l_knight_mobility,@function
l_knight_mobility:                      # @l_knight_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1071, %ax              # imm = 0x42F
	xorw	%cx, %ax
	cmpw	$11359, %ax             # imm = 0x2C5F
	jne	.LBB30_16
# %bb.1:                                # %l_knight_mobility.split30
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1071, %ax              # imm = 0x42F
	xorw	%cx, %ax
	cmpw	$11359, %ax             # imm = 0x2C5F
	jne	.LBB30_16
# %bb.2:                                # %l_knight_mobility.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movl	%edi, (%rax)
	movl	$0, (%rcx)
	movl	$0, (%rdx)
	movw	$11359, BasicBlockSignatureTracker # imm = 0x2C5F
	movw	$0, RunTimeSignatureAdjuster
.LBB30_3:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$63, %si
	xorw	%di, %si
	cmpw	$11360, %si             # imm = 0x2C60
	jne	.LBB30_15
# %bb.4:                                # %l_knight_mobility.split32
                                        #   in Loop: Header=BB30_3 Depth=1
	movl	(%rdx), %esi
	movw	$11360, BasicBlockSignatureTracker # imm = 0x2C60
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %esi
	jge	.LBB30_13
# %bb.5:                                #   in Loop: Header=BB30_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$1, %si
	cmpw	$11361, %si             # imm = 0x2C61
	jne	.LBB30_15
# %bb.6:                                # %l_knight_mobility.split34
                                        #   in Loop: Header=BB30_3 Depth=1
	movl	(%rax), %esi
	movslq	(%rdx), %rdi
	addl	l_knight_mobility.knight_o(,%rdi,4), %esi
	movslq	%esi, %rsi
	movl	board(,%rsi,4), %esi
	movw	$11361, BasicBlockSignatureTracker # imm = 0x2C61
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB30_9
# %bb.7:                                #   in Loop: Header=BB30_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$2, %si
	cmpw	$11363, %si             # imm = 0x2C63
	jne	.LBB30_15
# %bb.8:                                # %l_knight_mobility.split38
                                        #   in Loop: Header=BB30_3 Depth=1
	movl	(%rcx), %esi
	addl	$1, %esi
	movl	%esi, (%rcx)
	movw	$11363, BasicBlockSignatureTracker # imm = 0x2C63
	movw	$2, RunTimeSignatureAdjuster
.LBB30_9:                               #   in Loop: Header=BB30_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$7, %si
	xorw	%di, %si
	cmpw	$11366, %si             # imm = 0x2C66
	jne	.LBB30_15
# %bb.10:                               # %l_knight_mobility.split40
                                        #   in Loop: Header=BB30_3 Depth=1
	movw	$11366, BasicBlockSignatureTracker # imm = 0x2C66
	movw	$0, RunTimeSignatureAdjuster
# %bb.11:                               #   in Loop: Header=BB30_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$1, %si
	cmpw	$11367, %si             # imm = 0x2C67
	jne	.LBB30_15
# %bb.12:                               # %l_knight_mobility.split42
                                        #   in Loop: Header=BB30_3 Depth=1
	movl	(%rdx), %esi
	addl	$1, %esi
	movl	%esi, (%rdx)
	movw	$11367, BasicBlockSignatureTracker # imm = 0x2C67
	movw	$56, RunTimeSignatureAdjuster
	jmp	.LBB30_3
.LBB30_13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$11371, %ax             # imm = 0x2C6B
	jne	.LBB30_16
# %bb.14:                               # %l_knight_mobility.split36
	movl	(%rcx), %eax
	movw	$11371, BasicBlockSignatureTracker # imm = 0x2C6B
	movw	$2685, RunTimeSignatureAdjuster # imm = 0xA7D
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB30_15:                              # %CFerrorHandler.l_knight_mobility.loopexit
	jmp	.LBB30_16
.LBB30_16:                              # %CFerrorHandler.l_knight_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end30:
	.size	l_knight_mobility, .Lfunc_end30-l_knight_mobility
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function l_king_mobility
	.type	l_king_mobility,@function
l_king_mobility:                        # @l_king_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1256, %ax              # imm = 0x4E8
	xorw	%cx, %ax
	cmpw	$11378, %ax             # imm = 0x2C72
	jne	.LBB31_16
# %bb.1:                                # %l_king_mobility.split30
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1256, %ax              # imm = 0x4E8
	xorw	%cx, %ax
	cmpw	$11378, %ax             # imm = 0x2C72
	jne	.LBB31_16
# %bb.2:                                # %l_king_mobility.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movl	%edi, (%rax)
	movl	$0, (%rcx)
	movl	$0, (%rdx)
	movw	$11378, BasicBlockSignatureTracker # imm = 0x2C72
	movw	$0, RunTimeSignatureAdjuster
.LBB31_3:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$15, %si
	xorw	%di, %si
	cmpw	$11389, %si             # imm = 0x2C7D
	jne	.LBB31_15
# %bb.4:                                # %l_king_mobility.split32
                                        #   in Loop: Header=BB31_3 Depth=1
	movl	(%rdx), %esi
	movw	$11389, BasicBlockSignatureTracker # imm = 0x2C7D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %esi
	jge	.LBB31_13
# %bb.5:                                #   in Loop: Header=BB31_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$3, %si
	cmpw	$11390, %si             # imm = 0x2C7E
	jne	.LBB31_15
# %bb.6:                                # %l_king_mobility.split34
                                        #   in Loop: Header=BB31_3 Depth=1
	movl	(%rax), %esi
	movslq	(%rdx), %rdi
	addl	l_king_mobility.king_o(,%rdi,4), %esi
	movslq	%esi, %rsi
	movl	board(,%rsi,4), %esi
	movw	$11390, BasicBlockSignatureTracker # imm = 0x2C7E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB31_9
# %bb.7:                                #   in Loop: Header=BB31_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$245, %si
	cmpw	$11403, %si             # imm = 0x2C8B
	jne	.LBB31_15
# %bb.8:                                # %l_king_mobility.split38
                                        #   in Loop: Header=BB31_3 Depth=1
	movl	(%rcx), %esi
	addl	$1, %esi
	movl	%esi, (%rcx)
	movw	$11403, BasicBlockSignatureTracker # imm = 0x2C8B
	movw	$245, RunTimeSignatureAdjuster
.LBB31_9:                               #   in Loop: Header=BB31_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$243, %si
	xorw	%di, %si
	cmpw	$11405, %si             # imm = 0x2C8D
	jne	.LBB31_15
# %bb.10:                               # %l_king_mobility.split40
                                        #   in Loop: Header=BB31_3 Depth=1
	movw	$11405, BasicBlockSignatureTracker # imm = 0x2C8D
	movw	$0, RunTimeSignatureAdjuster
# %bb.11:                               #   in Loop: Header=BB31_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$27, %si
	cmpw	$11414, %si             # imm = 0x2C96
	jne	.LBB31_15
# %bb.12:                               # %l_king_mobility.split42
                                        #   in Loop: Header=BB31_3 Depth=1
	movl	(%rdx), %esi
	addl	$1, %esi
	movl	%esi, (%rdx)
	movw	$11414, BasicBlockSignatureTracker # imm = 0x2C96
	movw	$228, RunTimeSignatureAdjuster
	jmp	.LBB31_3
.LBB31_13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$224, %ax
	cmpw	$11421, %ax             # imm = 0x2C9D
	jne	.LBB31_16
# %bb.14:                               # %l_king_mobility.split36
	movl	(%rcx), %eax
	movw	$11421, BasicBlockSignatureTracker # imm = 0x2C9D
	movw	$2699, RunTimeSignatureAdjuster # imm = 0xA8B
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB31_15:                              # %CFerrorHandler.l_king_mobility.loopexit
	jmp	.LBB31_16
.LBB31_16:                              # %CFerrorHandler.l_king_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end31:
	.size	l_king_mobility, .Lfunc_end31-l_king_mobility
	.cfi_endproc
                                        # -- End function
	.globl	check_legal             # -- Begin function check_legal
	.p2align	4, 0x90
	.type	check_legal,@function
check_legal:                            # @check_legal
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.1:                                # %check_legal.split2534
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.2:                                # %check_legal.split2532
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.3:                                # %check_legal.split2530
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.4:                                # %check_legal.split2528
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.5:                                # %check_legal.split2526
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.6:                                # %check_legal.split2524
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.7:                                # %check_legal.split2522
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.8:                                # %check_legal.split2520
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.9:                                # %check_legal.split2518
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.10:                               # %check_legal.split2516
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.11:                               # %check_legal.split2514
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.12:                               # %check_legal.split2512
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.13:                               # %check_legal.split2510
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.14:                               # %check_legal.split2508
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.15:                               # %check_legal.split2506
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.16:                               # %check_legal.split2504
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.17:                               # %check_legal.split2502
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.18:                               # %check_legal.split2500
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.19:                               # %check_legal.split2498
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.20:                               # %check_legal.split2496
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.21:                               # %check_legal.split2494
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.22:                               # %check_legal.split2492
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.23:                               # %check_legal.split2490
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.24:                               # %check_legal.split2488
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.25:                               # %check_legal.split2486
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.26:                               # %check_legal.split2484
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.27:                               # %check_legal.split2482
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.28:                               # %check_legal.split2480
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.29:                               # %check_legal.split2478
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.30:                               # %check_legal.split2476
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.31:                               # %check_legal.split2474
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.32:                               # %check_legal.split2472
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.33:                               # %check_legal.split2470
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.34:                               # %check_legal.split2468
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-23040, %ax            # imm = 0xA600
	xorw	%cx, %ax
	cmpw	$11440, %ax             # imm = 0x2CB0
	jne	.LBB32_882
# %bb.35:                               # %check_legal.split2466
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rdi, (%r11)
	movl	%esi, (%rcx)
	movl	%edx, (%rax)
	movq	(%r11), %rdx
	movslq	(%rcx), %rsi
	imulq	$24, %rsi, %rsi
	addq	%rsi, %rdx
	movl	16(%rdx), %edx
	movl	%edx, (%rbx)
	movq	(%r11), %rdx
	movslq	(%rcx), %rsi
	imulq	$24, %rsi, %rsi
	addq	%rsi, %rdx
	movl	(%rdx), %edx
	movl	%edx, (%r9)
	movq	(%r11), %rdx
	movslq	(%rcx), %rsi
	imulq	$24, %rsi, %rsi
	addq	%rsi, %rdx
	movl	4(%rdx), %edx
	movl	%edx, (%r10)
	movl	Variant, %edx
	movw	$11440, BasicBlockSignatureTracker # imm = 0x2CB0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %edx
	jne	.LBB32_38
# %bb.36:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$11441, %ax             # imm = 0x2CB1
	jne	.LBB32_882
# %bb.37:                               # %check_legal.split
	movl	$1, (%r14)
	movw	$11441, BasicBlockSignatureTracker # imm = 0x2CB1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_864
.LBB32_38:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$112, %dx
	cmpw	$11456, %dx             # imm = 0x2CC0
	jne	.LBB32_882
# %bb.39:                               # %check_legal.split1744
	movl	(%rbx), %edx
	movw	$11456, BasicBlockSignatureTracker # imm = 0x2CC0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB32_106
# %bb.40:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$11485, %ax             # imm = 0x2CDD
	jne	.LBB32_882
# %bb.41:                               # %check_legal.split1748
	movl	(%rbx), %eax
	movw	$11485, BasicBlockSignatureTracker # imm = 0x2CDD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB32_56
# %bb.42:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$11491, %ax             # imm = 0x2CE3
	jne	.LBB32_882
# %bb.43:                               # %check_legal.split1752
	movw	$11491, BasicBlockSignatureTracker # imm = 0x2CE3
	movw	$12598, RunTimeSignatureAdjuster # imm = 0x3136
	movl	$30, %edi
	xorl	%esi, %esi
	callq	is_attacked
	movw	$11491, BasicBlockSignatureTracker # imm = 0x2CE3
	movw	$12598, RunTimeSignatureAdjuster # imm = 0x3136
	movw	$11491, BasicBlockSignatureTracker # imm = 0x2CE3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_46
# %bb.44:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$11512, %ax             # imm = 0x2CF8
	jne	.LBB32_882
# %bb.45:                               # %check_legal.split1756
	movl	$0, (%r14)
	movw	$11512, BasicBlockSignatureTracker # imm = 0x2CF8
	movw	$73, RunTimeSignatureAdjuster
	jmp	.LBB32_864
.LBB32_46:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$11517, %ax             # imm = 0x2CFD
	jne	.LBB32_882
# %bb.47:                               # %check_legal.split1758
	movw	$11517, BasicBlockSignatureTracker # imm = 0x2CFD
	movw	$12584, RunTimeSignatureAdjuster # imm = 0x3128
	movl	$31, %edi
	xorl	%esi, %esi
	callq	is_attacked
	movw	$11517, BasicBlockSignatureTracker # imm = 0x2CFD
	movw	$12584, RunTimeSignatureAdjuster # imm = 0x3128
	movw	$11517, BasicBlockSignatureTracker # imm = 0x2CFD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_50
# %bb.48:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$11519, %ax             # imm = 0x2CFF
	jne	.LBB32_882
# %bb.49:                               # %check_legal.split1760
	movl	$0, (%r14)
	movw	$11519, BasicBlockSignatureTracker # imm = 0x2CFF
	movw	$78, RunTimeSignatureAdjuster
	jmp	.LBB32_864
.LBB32_50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$508, %ax               # imm = 0x1FC
	cmpw	$11521, %ax             # imm = 0x2D01
	jne	.LBB32_882
# %bb.51:                               # %check_legal.split1762
	movw	$11521, BasicBlockSignatureTracker # imm = 0x2D01
	movw	$12500, RunTimeSignatureAdjuster # imm = 0x30D4
	movl	$32, %edi
	xorl	%esi, %esi
	callq	is_attacked
	movw	$11521, BasicBlockSignatureTracker # imm = 0x2D01
	movw	$12500, RunTimeSignatureAdjuster # imm = 0x30D4
	movw	$11521, BasicBlockSignatureTracker # imm = 0x2D01
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_54
# %bb.52:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$11532, %ax             # imm = 0x2D0C
	jne	.LBB32_882
# %bb.53:                               # %check_legal.split1764
	movl	$0, (%r14)
	movw	$11532, BasicBlockSignatureTracker # imm = 0x2D0C
	movw	$445, RunTimeSignatureAdjuster # imm = 0x1BD
	jmp	.LBB32_864
.LBB32_54:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$11533, %ax             # imm = 0x2D0D
	jne	.LBB32_882
# %bb.55:                               # %check_legal.split1766
	movl	$1, (%r14)
	movw	$11533, BasicBlockSignatureTracker # imm = 0x2D0D
	movw	$444, RunTimeSignatureAdjuster # imm = 0x1BC
	jmp	.LBB32_864
.LBB32_56:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$462, %ax               # imm = 0x1CE
	cmpw	$11539, %ax             # imm = 0x2D13
	jne	.LBB32_882
# %bb.57:                               # %check_legal.split1754
	movl	(%rbx), %eax
	movw	$11539, BasicBlockSignatureTracker # imm = 0x2D13
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB32_72
# %bb.58:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$11546, %ax             # imm = 0x2D1A
	jne	.LBB32_882
# %bb.59:                               # %check_legal.split1768
	movw	$11546, BasicBlockSignatureTracker # imm = 0x2D1A
	movw	$12495, RunTimeSignatureAdjuster # imm = 0x30CF
	movl	$30, %edi
	xorl	%esi, %esi
	callq	is_attacked
	movw	$11546, BasicBlockSignatureTracker # imm = 0x2D1A
	movw	$12495, RunTimeSignatureAdjuster # imm = 0x30CF
	movw	$11546, BasicBlockSignatureTracker # imm = 0x2D1A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_62
# %bb.60:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$11560, %ax             # imm = 0x2D28
	jne	.LBB32_882
# %bb.61:                               # %check_legal.split1772
	movl	$0, (%r14)
	movw	$11560, BasicBlockSignatureTracker # imm = 0x2D28
	movw	$409, RunTimeSignatureAdjuster # imm = 0x199
	jmp	.LBB32_864
.LBB32_62:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$74, %ax
	cmpw	$11600, %ax             # imm = 0x2D50
	jne	.LBB32_882
# %bb.63:                               # %check_legal.split1774
	movw	$11600, BasicBlockSignatureTracker # imm = 0x2D50
	movw	$12421, RunTimeSignatureAdjuster # imm = 0x3085
	movl	$29, %edi
	xorl	%esi, %esi
	callq	is_attacked
	movw	$11600, BasicBlockSignatureTracker # imm = 0x2D50
	movw	$12421, RunTimeSignatureAdjuster # imm = 0x3085
	movw	$11600, BasicBlockSignatureTracker # imm = 0x2D50
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_66
# %bb.64:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$11602, %ax             # imm = 0x2D52
	jne	.LBB32_882
# %bb.65:                               # %check_legal.split1776
	movl	$0, (%r14)
	movw	$11602, BasicBlockSignatureTracker # imm = 0x2D52
	movw	$483, RunTimeSignatureAdjuster # imm = 0x1E3
	jmp	.LBB32_864
.LBB32_66:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$11603, %ax             # imm = 0x2D53
	jne	.LBB32_882
# %bb.67:                               # %check_legal.split1778
	movw	$11603, BasicBlockSignatureTracker # imm = 0x2D53
	movw	$12422, RunTimeSignatureAdjuster # imm = 0x3086
	movl	$28, %edi
	xorl	%esi, %esi
	callq	is_attacked
	movw	$11603, BasicBlockSignatureTracker # imm = 0x2D53
	movw	$12422, RunTimeSignatureAdjuster # imm = 0x3086
	movw	$11603, BasicBlockSignatureTracker # imm = 0x2D53
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_70
# %bb.68:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$11605, %ax             # imm = 0x2D55
	jne	.LBB32_882
# %bb.69:                               # %check_legal.split1780
	movl	$0, (%r14)
	movw	$11605, BasicBlockSignatureTracker # imm = 0x2D55
	movw	$484, RunTimeSignatureAdjuster # imm = 0x1E4
	jmp	.LBB32_864
.LBB32_70:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$11613, %ax             # imm = 0x2D5D
	jne	.LBB32_882
# %bb.71:                               # %check_legal.split1782
	movl	$1, (%r14)
	movw	$11613, BasicBlockSignatureTracker # imm = 0x2D5D
	movw	$492, RunTimeSignatureAdjuster # imm = 0x1EC
	jmp	.LBB32_864
.LBB32_72:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$152, %ax
	cmpw	$11659, %ax             # imm = 0x2D8B
	jne	.LBB32_882
# %bb.73:                               # %check_legal.split1770
	movl	(%rbx), %eax
	movw	$11659, BasicBlockSignatureTracker # imm = 0x2D8B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB32_88
# %bb.74:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$11680, %ax             # imm = 0x2DA0
	jne	.LBB32_882
# %bb.75:                               # %check_legal.split1784
	movw	$11680, BasicBlockSignatureTracker # imm = 0x2DA0
	movw	$12405, RunTimeSignatureAdjuster # imm = 0x3075
	movl	$114, %edi
	movl	$1, %esi
	callq	is_attacked
	movw	$11680, BasicBlockSignatureTracker # imm = 0x2DA0
	movw	$12405, RunTimeSignatureAdjuster # imm = 0x3075
	movw	$11680, BasicBlockSignatureTracker # imm = 0x2DA0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_78
# %bb.76:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$11685, %ax             # imm = 0x2DA5
	jne	.LBB32_882
# %bb.77:                               # %check_legal.split1788
	movl	$0, (%r14)
	movw	$11685, BasicBlockSignatureTracker # imm = 0x2DA5
	movw	$276, RunTimeSignatureAdjuster # imm = 0x114
	jmp	.LBB32_864
.LBB32_78:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$11690, %ax             # imm = 0x2DAA
	jne	.LBB32_882
# %bb.79:                               # %check_legal.split1790
	movw	$11690, BasicBlockSignatureTracker # imm = 0x2DAA
	movw	$12415, RunTimeSignatureAdjuster # imm = 0x307F
	movl	$115, %edi
	movl	$1, %esi
	callq	is_attacked
	movw	$11690, BasicBlockSignatureTracker # imm = 0x2DAA
	movw	$12415, RunTimeSignatureAdjuster # imm = 0x307F
	movw	$11690, BasicBlockSignatureTracker # imm = 0x2DAA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_82
# %bb.80:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$106, %ax
	cmpw	$11712, %ax             # imm = 0x2DC0
	jne	.LBB32_882
# %bb.81:                               # %check_legal.split1792
	movl	$0, (%r14)
	movw	$11712, BasicBlockSignatureTracker # imm = 0x2DC0
	movw	$369, RunTimeSignatureAdjuster # imm = 0x171
	jmp	.LBB32_864
.LBB32_82:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$115, %ax
	cmpw	$11737, %ax             # imm = 0x2DD9
	jne	.LBB32_882
# %bb.83:                               # %check_legal.split1794
	movw	$11737, BasicBlockSignatureTracker # imm = 0x2DD9
	movw	$12300, RunTimeSignatureAdjuster # imm = 0x300C
	movl	$116, %edi
	movl	$1, %esi
	callq	is_attacked
	movw	$11737, BasicBlockSignatureTracker # imm = 0x2DD9
	movw	$12300, RunTimeSignatureAdjuster # imm = 0x300C
	movw	$11737, BasicBlockSignatureTracker # imm = 0x2DD9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_86
# %bb.84:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$11750, %ax             # imm = 0x2DE6
	jne	.LBB32_882
# %bb.85:                               # %check_legal.split1796
	movl	$0, (%r14)
	movw	$11750, BasicBlockSignatureTracker # imm = 0x2DE6
	movw	$343, RunTimeSignatureAdjuster # imm = 0x157
	jmp	.LBB32_864
.LBB32_86:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$52, %ax
	cmpw	$11757, %ax             # imm = 0x2DED
	jne	.LBB32_882
# %bb.87:                               # %check_legal.split1798
	movl	$1, (%r14)
	movw	$11757, BasicBlockSignatureTracker # imm = 0x2DED
	movw	$348, RunTimeSignatureAdjuster # imm = 0x15C
	jmp	.LBB32_864
.LBB32_88:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$121, %ax
	cmpw	$11762, %ax             # imm = 0x2DF2
	jne	.LBB32_882
# %bb.89:                               # %check_legal.split1786
	movl	(%rbx), %eax
	movw	$11762, BasicBlockSignatureTracker # imm = 0x2DF2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB32_104
# %bb.90:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$11768, %ax             # imm = 0x2DF8
	jne	.LBB32_882
# %bb.91:                               # %check_legal.split1800
	movw	$11768, BasicBlockSignatureTracker # imm = 0x2DF8
	movw	$12333, RunTimeSignatureAdjuster # imm = 0x302D
	movl	$114, %edi
	movl	$1, %esi
	callq	is_attacked
	movw	$11768, BasicBlockSignatureTracker # imm = 0x2DF8
	movw	$12333, RunTimeSignatureAdjuster # imm = 0x302D
	movw	$11768, BasicBlockSignatureTracker # imm = 0x2DF8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_94
# %bb.92:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$11771, %ax             # imm = 0x2DFB
	jne	.LBB32_882
# %bb.93:                               # %check_legal.split1804
	movl	$0, (%r14)
	movw	$11771, BasicBlockSignatureTracker # imm = 0x2DFB
	movw	$330, RunTimeSignatureAdjuster # imm = 0x14A
	jmp	.LBB32_864
.LBB32_94:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1017, %ax              # imm = 0x3F9
	cmpw	$11777, %ax             # imm = 0x2E01
	jne	.LBB32_882
# %bb.95:                               # %check_legal.split1806
	movw	$11777, BasicBlockSignatureTracker # imm = 0x2E01
	movw	$13268, RunTimeSignatureAdjuster # imm = 0x33D4
	movl	$113, %edi
	movl	$1, %esi
	callq	is_attacked
	movw	$11777, BasicBlockSignatureTracker # imm = 0x2E01
	movw	$13268, RunTimeSignatureAdjuster # imm = 0x33D4
	movw	$11777, BasicBlockSignatureTracker # imm = 0x2E01
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_98
# %bb.96:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$11798, %ax             # imm = 0x2E16
	jne	.LBB32_882
# %bb.97:                               # %check_legal.split1808
	movl	$0, (%r14)
	movw	$11798, BasicBlockSignatureTracker # imm = 0x2E16
	movw	$679, RunTimeSignatureAdjuster # imm = 0x2A7
	jmp	.LBB32_864
.LBB32_98:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$33, %ax
	cmpw	$11808, %ax             # imm = 0x2E20
	jne	.LBB32_882
# %bb.99:                               # %check_legal.split1810
	movw	$11808, BasicBlockSignatureTracker # imm = 0x2E20
	movw	$13301, RunTimeSignatureAdjuster # imm = 0x33F5
	movl	$112, %edi
	movl	$1, %esi
	callq	is_attacked
	movw	$11808, BasicBlockSignatureTracker # imm = 0x2E20
	movw	$13301, RunTimeSignatureAdjuster # imm = 0x33F5
	movw	$11808, BasicBlockSignatureTracker # imm = 0x2E20
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_102
# %bb.100:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$11824, %ax             # imm = 0x2E30
	jne	.LBB32_882
# %bb.101:                              # %check_legal.split1812
	movl	$0, (%r14)
	movw	$11824, BasicBlockSignatureTracker # imm = 0x2E30
	movw	$641, RunTimeSignatureAdjuster # imm = 0x281
	jmp	.LBB32_864
.LBB32_102:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$110, %ax
	cmpw	$11854, %ax             # imm = 0x2E4E
	jne	.LBB32_882
# %bb.103:                              # %check_legal.split1814
	movl	$1, (%r14)
	movw	$11854, BasicBlockSignatureTracker # imm = 0x2E4E
	movw	$767, RunTimeSignatureAdjuster # imm = 0x2FF
	jmp	.LBB32_864
.LBB32_104:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$912, %ax               # imm = 0x390
	cmpw	$11874, %ax             # imm = 0x2E62
	jne	.LBB32_882
# %bb.105:                              # %check_legal.split1802
	movw	$11874, BasicBlockSignatureTracker # imm = 0x2E62
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_862
.LBB32_106:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$676, %dx               # imm = 0x2A4
	cmpw	$11876, %dx             # imm = 0x2E64
	jne	.LBB32_882
# %bb.107:                              # %check_legal.split1750
	movl	white_to_move, %edx
	andl	$1, %edx
	movw	$11876, BasicBlockSignatureTracker # imm = 0x2E64
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB32_485
# %bb.108:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$2, %dx
	cmpw	$11878, %dx             # imm = 0x2E66
	jne	.LBB32_882
# %bb.109:                              # %check_legal.split1818
	movl	(%rax), %eax
	movw	$11878, BasicBlockSignatureTracker # imm = 0x2E66
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB32_479
# %bb.110:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$11887, %ax             # imm = 0x2E6F
	jne	.LBB32_882
# %bb.111:                              # %check_legal.split1824
	movq	(%r11), %rax
	movslq	(%rcx), %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$11887, BasicBlockSignatureTracker # imm = 0x2E6F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB32_114
# %bb.112:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$11889, %ax             # imm = 0x2E71
	jne	.LBB32_882
# %bb.113:                              # %check_legal.split1826
	movl	$1, (%r14)
	movw	$11889, BasicBlockSignatureTracker # imm = 0x2E71
	movw	$704, RunTimeSignatureAdjuster # imm = 0x2C0
	jmp	.LBB32_864
.LBB32_114:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$11893, %ax             # imm = 0x2E75
	jne	.LBB32_882
# %bb.115:                              # %check_legal.split1828
	movq	(%r11), %rax
	movslq	(%rcx), %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$11893, BasicBlockSignatureTracker # imm = 0x2E75
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_118
# %bb.116:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$11899, %ax             # imm = 0x2E7B
	jne	.LBB32_882
# %bb.117:                              # %check_legal.split1830
	movl	$2, %eax
	movw	$11899, BasicBlockSignatureTracker # imm = 0x2E7B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_120
.LBB32_118:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$11901, %ax             # imm = 0x2E7D
	jne	.LBB32_882
# %bb.119:                              # %check_legal.split1832
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$11901, BasicBlockSignatureTracker # imm = 0x2E7D
	movw	$6, RunTimeSignatureAdjuster
.LBB32_120:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$216, %dx
	xorw	%si, %dx
	cmpw	$11939, %dx             # imm = 0x2EA3
	jne	.LBB32_882
# %bb.121:                              # %check_legal.split1834
	movw	$11939, BasicBlockSignatureTracker(%rip) # imm = 0x2EA3
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-2, %eax
	movl	%eax, %edx
	subl	$10, %edx
	ja	.LBB32_297
# %bb.122:                              # %check_legal.split1834
	movq	.LJTI32_1(,%rax,8), %rax
	jmpq	*%rax
.LBB32_123:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$11942, %ax             # imm = 0x2EA6
	jne	.LBB32_882
# %bb.124:                              # %check_legal.split1838
	movq	(%r11), %rax
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	8(%rax), %eax
	movw	$11942, BasicBlockSignatureTracker # imm = 0x2EA6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB32_143
# %bb.125:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$11949, %ax             # imm = 0x2EAD
	jne	.LBB32_882
# %bb.126:                              # %check_legal.split1848
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$11949, BasicBlockSignatureTracker # imm = 0x2EAD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_141
# %bb.127:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$108, %ax
	cmpw	$11969, %ax             # imm = 0x2EC1
	jne	.LBB32_882
# %bb.128:                              # %check_legal.split1852
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$11969, BasicBlockSignatureTracker # imm = 0x2EC1
	movw	$108, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_141
# %bb.129:                              # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24415, %ax             # imm = 0x5F5F
	cmpw	$29086, %ax             # imm = 0x719E
	jne	.LBB32_882
# %bb.130:                              # %check_legal.split1856
	movw	$29086, BasicBlockSignatureTracker # imm = 0x719E
	movw	$24415, RunTimeSignatureAdjuster # imm = 0x5F5F
# %bb.131:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$11980, %ax             # imm = 0x2ECC
	jne	.LBB32_882
# %bb.132:                              # %check_legal.split2536
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$11980, BasicBlockSignatureTracker # imm = 0x2ECC
	movw	$97, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_141
# %bb.133:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26164, %ax             # imm = 0x6634
	cmpw	$18680, %ax             # imm = 0x48F8
	jne	.LBB32_882
# %bb.134:                              # %check_legal.split1858
	movw	$18680, BasicBlockSignatureTracker # imm = 0x48F8
	movw	$26164, RunTimeSignatureAdjuster # imm = 0x6634
# %bb.135:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$11991, %ax             # imm = 0x2ED7
	jne	.LBB32_882
# %bb.136:                              # %check_legal.split2538
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$11991, BasicBlockSignatureTracker # imm = 0x2ED7
	movw	$122, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_141
# %bb.137:                              # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30239, %ax            # imm = 0x89E1
	cmpw	$-22730, %ax            # imm = 0xA736
	jne	.LBB32_882
# %bb.138:                              # %check_legal.split1860
	movw	$-22730, BasicBlockSignatureTracker # imm = 0xA736
	movw	$-30239, RunTimeSignatureAdjuster # imm = 0x89E1
# %bb.139:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$11992, %ax             # imm = 0x2ED8
	jne	.LBB32_882
# %bb.140:                              # %check_legal.split2540
	movl	$1, (%r14)
	movw	$11992, BasicBlockSignatureTracker # imm = 0x2ED8
	movw	$617, RunTimeSignatureAdjuster # imm = 0x269
	jmp	.LBB32_864
.LBB32_141:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$114, %ax
	xorw	%cx, %ax
	cmpw	$11999, %ax             # imm = 0x2EDF
	jne	.LBB32_882
# %bb.142:                              # %check_legal.split1854
	movw	$11999, BasicBlockSignatureTracker # imm = 0x2EDF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_157
.LBB32_143:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$69, %ax
	cmpw	$12003, %ax             # imm = 0x2EE3
	jne	.LBB32_882
# %bb.144:                              # %check_legal.split1850
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$12003, BasicBlockSignatureTracker # imm = 0x2EE3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_155
# %bb.145:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$12005, %ax             # imm = 0x2EE5
	jne	.LBB32_882
# %bb.146:                              # %check_legal.split1864
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$12005, BasicBlockSignatureTracker # imm = 0x2EE5
	movw	$6, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_155
# %bb.147:                              # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-16706, %ax            # imm = 0xBEBE
	cmpw	$-28581, %ax            # imm = 0x905B
	jne	.LBB32_882
# %bb.148:                              # %check_legal.split1868
	movw	$-28581, BasicBlockSignatureTracker # imm = 0x905B
	movw	$-16706, RunTimeSignatureAdjuster # imm = 0xBEBE
# %bb.149:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$12011, %ax             # imm = 0x2EEB
	jne	.LBB32_882
# %bb.150:                              # %check_legal.split2542
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$12011, BasicBlockSignatureTracker # imm = 0x2EEB
	movw	$8, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_155
# %bb.151:                              # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12196, %ax             # imm = 0x2FA4
	cmpw	$335, %ax               # imm = 0x14F
	jne	.LBB32_882
# %bb.152:                              # %check_legal.split1870
	movw	$335, BasicBlockSignatureTracker # imm = 0x14F
	movw	$12196, RunTimeSignatureAdjuster # imm = 0x2FA4
# %bb.153:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$510, %ax               # imm = 0x1FE
	xorw	%cx, %ax
	cmpw	$12053, %ax             # imm = 0x2F15
	jne	.LBB32_882
# %bb.154:                              # %check_legal.split2544
	movl	$1, (%r14)
	movw	$12053, BasicBlockSignatureTracker # imm = 0x2F15
	movw	$932, RunTimeSignatureAdjuster # imm = 0x3A4
	jmp	.LBB32_864
.LBB32_155:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$509, %ax               # imm = 0x1FD
	xorw	%cx, %ax
	cmpw	$12062, %ax             # imm = 0x2F1E
	jne	.LBB32_882
# %bb.156:                              # %check_legal.split1866
	movw	$12062, BasicBlockSignatureTracker # imm = 0x2F1E
	movw	$449, RunTimeSignatureAdjuster # imm = 0x1C1
.LBB32_157:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$448, %ax               # imm = 0x1C0
	xorw	%cx, %ax
	cmpw	$12063, %ax             # imm = 0x2F1F
	jne	.LBB32_882
# %bb.158:                              # %check_legal.split1862
	movw	$12063, BasicBlockSignatureTracker # imm = 0x2F1F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_299
.LBB32_159:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$484, %ax               # imm = 0x1E4
	cmpw	$12103, %ax             # imm = 0x2F47
	jne	.LBB32_882
# %bb.160:                              # %check_legal.split1840
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$12103, BasicBlockSignatureTracker # imm = 0x2F47
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_175
# %bb.161:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$12109, %ax             # imm = 0x2F4D
	jne	.LBB32_882
# %bb.162:                              # %check_legal.split1874
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$12109, BasicBlockSignatureTracker # imm = 0x2F4D
	movw	$10, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_175
# %bb.163:                              # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2344, %ax              # imm = 0x928
	cmpw	$9829, %ax              # imm = 0x2665
	jne	.LBB32_882
# %bb.164:                              # %check_legal.split1878
	movw	$9829, BasicBlockSignatureTracker # imm = 0x2665
	movw	$2344, RunTimeSignatureAdjuster # imm = 0x928
# %bb.165:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$12110, %ax             # imm = 0x2F4E
	jne	.LBB32_882
# %bb.166:                              # %check_legal.split2546
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$12110, BasicBlockSignatureTracker # imm = 0x2F4E
	movw	$9, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_175
# %bb.167:                              # %Buffer__6
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-31788, %ax            # imm = 0x83D4
	cmpw	$-21350, %ax            # imm = 0xAC9A
	jne	.LBB32_882
# %bb.168:                              # %check_legal.split1880
	movw	$-21350, BasicBlockSignatureTracker # imm = 0xAC9A
	movw	$-31788, RunTimeSignatureAdjuster # imm = 0x83D4
# %bb.169:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$12122, %ax             # imm = 0x2F5A
	jne	.LBB32_882
# %bb.170:                              # %check_legal.split2548
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$12122, BasicBlockSignatureTracker # imm = 0x2F5A
	movw	$29, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_175
# %bb.171:                              # %Buffer__7
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-27093, %ax            # imm = 0x962B
	cmpw	$-18063, %ax            # imm = 0xB971
	jne	.LBB32_882
# %bb.172:                              # %check_legal.split1882
	movw	$-18063, BasicBlockSignatureTracker # imm = 0xB971
	movw	$-27093, RunTimeSignatureAdjuster # imm = 0x962B
# %bb.173:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$12125, %ax             # imm = 0x2F5D
	jne	.LBB32_882
# %bb.174:                              # %check_legal.split2550
	movl	$1, (%r14)
	movw	$12125, BasicBlockSignatureTracker # imm = 0x2F5D
	movw	$1004, RunTimeSignatureAdjuster # imm = 0x3EC
	jmp	.LBB32_864
.LBB32_175:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$12129, %ax             # imm = 0x2F61
	jne	.LBB32_882
# %bb.176:                              # %check_legal.split1876
	movw	$12129, BasicBlockSignatureTracker # imm = 0x2F61
	movw	$126, RunTimeSignatureAdjuster
	jmp	.LBB32_299
.LBB32_177:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$448, %ax               # imm = 0x1C0
	cmpw	$12131, %ax             # imm = 0x2F63
	jne	.LBB32_882
# %bb.178:                              # %check_legal.split1842
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$12131, BasicBlockSignatureTracker # imm = 0x2F63
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_199
# %bb.179:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$12132, %ax             # imm = 0x2F64
	jne	.LBB32_882
# %bb.180:                              # %check_legal.split1884
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$12132, BasicBlockSignatureTracker # imm = 0x2F64
	movw	$7, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_199
# %bb.181:                              # %Buffer__8
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31421, %ax             # imm = 0x7ABD
	cmpw	$21977, %ax             # imm = 0x55D9
	jne	.LBB32_882
# %bb.182:                              # %check_legal.split1888
	movw	$21977, BasicBlockSignatureTracker # imm = 0x55D9
	movw	$31421, RunTimeSignatureAdjuster # imm = 0x7ABD
# %bb.183:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$12142, %ax             # imm = 0x2F6E
	jne	.LBB32_882
# %bb.184:                              # %check_legal.split2552
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$12142, BasicBlockSignatureTracker # imm = 0x2F6E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_191
# %bb.185:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$234, %ax
	cmpw	$12164, %ax             # imm = 0x2F84
	jne	.LBB32_882
# %bb.186:                              # %check_legal.split1890
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$12164, BasicBlockSignatureTracker # imm = 0x2F84
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_189
# %bb.187:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$12200, %ax             # imm = 0x2FA8
	jne	.LBB32_882
# %bb.188:                              # %check_legal.split1894
	movl	$1, (%r14)
	movw	$12200, BasicBlockSignatureTracker # imm = 0x2FA8
	movw	$793, RunTimeSignatureAdjuster # imm = 0x319
	jmp	.LBB32_864
.LBB32_189:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$12221, %ax             # imm = 0x2FBD
	jne	.LBB32_882
# %bb.190:                              # %check_legal.split1896
	movw	$12221, BasicBlockSignatureTracker # imm = 0x2FBD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_197
.LBB32_191:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$166, %ax
	cmpw	$12232, %ax             # imm = 0x2FC8
	jne	.LBB32_882
# %bb.192:                              # %check_legal.split1892
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$12232, BasicBlockSignatureTracker # imm = 0x2FC8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_195
# %bb.193:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$12233, %ax             # imm = 0x2FC9
	jne	.LBB32_882
# %bb.194:                              # %check_legal.split1900
	movl	$1, (%r14)
	movw	$12233, BasicBlockSignatureTracker # imm = 0x2FC9
	movw	$888, RunTimeSignatureAdjuster # imm = 0x378
	jmp	.LBB32_864
.LBB32_195:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$12234, %ax             # imm = 0x2FCA
	jne	.LBB32_882
# %bb.196:                              # %check_legal.split1902
	movw	$12234, BasicBlockSignatureTracker # imm = 0x2FCA
	movw	$119, RunTimeSignatureAdjuster
.LBB32_197:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$99, %ax
	xorw	%cx, %ax
	cmpw	$12254, %ax             # imm = 0x2FDE
	jne	.LBB32_882
# %bb.198:                              # %check_legal.split1898
	movw	$12254, BasicBlockSignatureTracker # imm = 0x2FDE
	movw	$189, RunTimeSignatureAdjuster
.LBB32_199:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$128, %ax
	xorw	%cx, %ax
	cmpw	$12259, %ax             # imm = 0x2FE3
	jne	.LBB32_882
# %bb.200:                              # %check_legal.split1886
	movw	$12259, BasicBlockSignatureTracker # imm = 0x2FE3
	movw	$252, RunTimeSignatureAdjuster
	jmp	.LBB32_299
.LBB32_201:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$326, %ax               # imm = 0x146
	cmpw	$12261, %ax             # imm = 0x2FE5
	jne	.LBB32_882
# %bb.202:                              # %check_legal.split1844
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$12261, BasicBlockSignatureTracker # imm = 0x2FE5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_223
# %bb.203:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$12276, %ax             # imm = 0x2FF4
	jne	.LBB32_882
# %bb.204:                              # %check_legal.split1904
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$12276, BasicBlockSignatureTracker # imm = 0x2FF4
	movw	$17, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_223
# %bb.205:                              # %Buffer__9
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4363, %ax              # imm = 0x110B
	cmpw	$16127, %ax             # imm = 0x3EFF
	jne	.LBB32_882
# %bb.206:                              # %check_legal.split1908
	movw	$16127, BasicBlockSignatureTracker # imm = 0x3EFF
	movw	$4363, RunTimeSignatureAdjuster # imm = 0x110B
# %bb.207:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8181, %ax              # imm = 0x1FF5
	xorw	%cx, %ax
	cmpw	$12289, %ax             # imm = 0x3001
	jne	.LBB32_882
# %bb.208:                              # %check_legal.split2554
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$12289, BasicBlockSignatureTracker # imm = 0x3001
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_215
# %bb.209:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$12292, %ax             # imm = 0x3004
	jne	.LBB32_882
# %bb.210:                              # %check_legal.split1910
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$12292, BasicBlockSignatureTracker # imm = 0x3004
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_213
# %bb.211:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$12293, %ax             # imm = 0x3005
	jne	.LBB32_882
# %bb.212:                              # %check_legal.split1914
	movl	$1, (%r14)
	movw	$12293, BasicBlockSignatureTracker # imm = 0x3005
	movw	$7348, RunTimeSignatureAdjuster # imm = 0x1CB4
	jmp	.LBB32_864
.LBB32_213:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$38, %ax
	cmpw	$12322, %ax             # imm = 0x3022
	jne	.LBB32_882
# %bb.214:                              # %check_legal.split1916
	movw	$12322, BasicBlockSignatureTracker # imm = 0x3022
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_221
.LBB32_215:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$64, %ax
	cmpw	$12353, %ax             # imm = 0x3041
	jne	.LBB32_882
# %bb.216:                              # %check_legal.split1912
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$12353, BasicBlockSignatureTracker # imm = 0x3041
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_219
# %bb.217:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$12356, %ax             # imm = 0x3044
	jne	.LBB32_882
# %bb.218:                              # %check_legal.split1920
	movl	$1, (%r14)
	movw	$12356, BasicBlockSignatureTracker # imm = 0x3044
	movw	$7413, RunTimeSignatureAdjuster # imm = 0x1CF5
	jmp	.LBB32_864
.LBB32_219:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$12360, %ax             # imm = 0x3048
	jne	.LBB32_882
# %bb.220:                              # %check_legal.split1922
	movw	$12360, BasicBlockSignatureTracker # imm = 0x3048
	movw	$106, RunTimeSignatureAdjuster
.LBB32_221:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$105, %ax
	xorw	%cx, %ax
	cmpw	$12363, %ax             # imm = 0x304B
	jne	.LBB32_882
# %bb.222:                              # %check_legal.split1918
	movw	$12363, BasicBlockSignatureTracker # imm = 0x304B
	movw	$8110, RunTimeSignatureAdjuster # imm = 0x1FAE
.LBB32_223:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8073, %ax              # imm = 0x1F89
	xorw	%cx, %ax
	cmpw	$12396, %ax             # imm = 0x306C
	jne	.LBB32_882
# %bb.224:                              # %check_legal.split1906
	movw	$12396, BasicBlockSignatureTracker # imm = 0x306C
	movw	$8051, RunTimeSignatureAdjuster # imm = 0x1F73
	jmp	.LBB32_299
.LBB32_225:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7902, %ax              # imm = 0x1EDE
	cmpw	$12413, %ax             # imm = 0x307D
	jne	.LBB32_882
# %bb.226:                              # %check_legal.split1846
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$12413, BasicBlockSignatureTracker # imm = 0x307D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_241
# %bb.227:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$255, %ax
	cmpw	$12418, %ax             # imm = 0x3082
	jne	.LBB32_882
# %bb.228:                              # %check_legal.split1924
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$12418, BasicBlockSignatureTracker # imm = 0x3082
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_239
# %bb.229:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$12428, %ax             # imm = 0x308C
	jne	.LBB32_882
# %bb.230:                              # %check_legal.split1928
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$12428, BasicBlockSignatureTracker # imm = 0x308C
	movw	$14, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_239
# %bb.231:                              # %Buffer__10
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-17904, %ax            # imm = 0xBA10
	cmpw	$-30052, %ax            # imm = 0x8A9C
	jne	.LBB32_882
# %bb.232:                              # %check_legal.split1932
	movw	$-30052, BasicBlockSignatureTracker # imm = 0x8A9C
	movw	$-17904, RunTimeSignatureAdjuster # imm = 0xBA10
# %bb.233:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$12429, %ax             # imm = 0x308D
	jne	.LBB32_882
# %bb.234:                              # %check_legal.split2556
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$12429, BasicBlockSignatureTracker # imm = 0x308D
	movw	$15, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_239
# %bb.235:                              # %Buffer__11
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14804, %ax            # imm = 0xC62C
	cmpw	$-2399, %ax             # imm = 0xF6A1
	jne	.LBB32_882
# %bb.236:                              # %check_legal.split1934
	movw	$-2399, BasicBlockSignatureTracker # imm = 0xF6A1
	movw	$-14804, RunTimeSignatureAdjuster # imm = 0xC62C
# %bb.237:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$12431, %ax             # imm = 0x308F
	jne	.LBB32_882
# %bb.238:                              # %check_legal.split2558
	movl	$1, (%r14)
	movw	$12431, BasicBlockSignatureTracker # imm = 0x308F
	movw	$7230, RunTimeSignatureAdjuster # imm = 0x1C3E
	jmp	.LBB32_864
.LBB32_239:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$12433, %ax             # imm = 0x3091
	jne	.LBB32_882
# %bb.240:                              # %check_legal.split1930
	movw	$12433, BasicBlockSignatureTracker # imm = 0x3091
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_295
.LBB32_241:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$239, %ax
	cmpw	$12434, %ax             # imm = 0x3092
	jne	.LBB32_882
# %bb.242:                              # %check_legal.split1926
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$12434, BasicBlockSignatureTracker # imm = 0x3092
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_257
# %bb.243:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$12435, %ax             # imm = 0x3093
	jne	.LBB32_882
# %bb.244:                              # %check_legal.split1938
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$12435, BasicBlockSignatureTracker # imm = 0x3093
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_255
# %bb.245:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$12441, %ax             # imm = 0x3099
	jne	.LBB32_882
# %bb.246:                              # %check_legal.split1942
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$12441, BasicBlockSignatureTracker # imm = 0x3099
	movw	$10, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_255
# %bb.247:                              # %Buffer__12
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3416, %ax              # imm = 0xD58
	cmpw	$15809, %ax             # imm = 0x3DC1
	jne	.LBB32_882
# %bb.248:                              # %check_legal.split1946
	movw	$15809, BasicBlockSignatureTracker # imm = 0x3DC1
	movw	$3416, RunTimeSignatureAdjuster # imm = 0xD58
# %bb.249:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$12451, %ax             # imm = 0x30A3
	jne	.LBB32_882
# %bb.250:                              # %check_legal.split2560
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$12451, BasicBlockSignatureTracker # imm = 0x30A3
	movw	$48, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_255
# %bb.251:                              # %Buffer__13
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-24911, %ax            # imm = 0x9EB1
	cmpw	$-20974, %ax            # imm = 0xAE12
	jne	.LBB32_882
# %bb.252:                              # %check_legal.split1948
	movw	$-20974, BasicBlockSignatureTracker # imm = 0xAE12
	movw	$-24911, RunTimeSignatureAdjuster # imm = 0x9EB1
# %bb.253:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$12471, %ax             # imm = 0x30B7
	jne	.LBB32_882
# %bb.254:                              # %check_legal.split2562
	movl	$1, (%r14)
	movw	$12471, BasicBlockSignatureTracker # imm = 0x30B7
	movw	$7174, RunTimeSignatureAdjuster # imm = 0x1C06
	jmp	.LBB32_864
.LBB32_255:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$40, %ax
	xorw	%cx, %ax
	cmpw	$12475, %ax             # imm = 0x30BB
	jne	.LBB32_882
# %bb.256:                              # %check_legal.split1944
	movw	$12475, BasicBlockSignatureTracker # imm = 0x30BB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_293
.LBB32_257:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$12478, %ax             # imm = 0x30BE
	jne	.LBB32_882
# %bb.258:                              # %check_legal.split1940
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$12478, BasicBlockSignatureTracker # imm = 0x30BE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_273
# %bb.259:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$12491, %ax             # imm = 0x30CB
	jne	.LBB32_882
# %bb.260:                              # %check_legal.split1952
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$12491, BasicBlockSignatureTracker # imm = 0x30CB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_271
# %bb.261:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$12496, %ax             # imm = 0x30D0
	jne	.LBB32_882
# %bb.262:                              # %check_legal.split1956
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$12496, BasicBlockSignatureTracker # imm = 0x30D0
	movw	$27, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_271
# %bb.263:                              # %Buffer__14
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23779, %ax             # imm = 0x5CE3
	cmpw	$27699, %ax             # imm = 0x6C33
	jne	.LBB32_882
# %bb.264:                              # %check_legal.split1960
	movw	$27699, BasicBlockSignatureTracker # imm = 0x6C33
	movw	$23779, RunTimeSignatureAdjuster # imm = 0x5CE3
# %bb.265:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$12524, %ax             # imm = 0x30EC
	jne	.LBB32_882
# %bb.266:                              # %check_legal.split2564
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$12524, BasicBlockSignatureTracker # imm = 0x30EC
	movw	$39, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_271
# %bb.267:                              # %Buffer__15
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13326, %ax             # imm = 0x340E
	cmpw	$1250, %ax              # imm = 0x4E2
	jne	.LBB32_882
# %bb.268:                              # %check_legal.split1962
	movw	$1250, BasicBlockSignatureTracker # imm = 0x4E2
	movw	$13326, RunTimeSignatureAdjuster # imm = 0x340E
# %bb.269:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$12534, %ax             # imm = 0x30F6
	jne	.LBB32_882
# %bb.270:                              # %check_legal.split2566
	movl	$1, (%r14)
	movw	$12534, BasicBlockSignatureTracker # imm = 0x30F6
	movw	$7239, RunTimeSignatureAdjuster # imm = 0x1C47
	jmp	.LBB32_864
.LBB32_271:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$50, %ax
	xorw	%cx, %ax
	cmpw	$12537, %ax             # imm = 0x30F9
	jne	.LBB32_882
# %bb.272:                              # %check_legal.split1958
	movw	$12537, BasicBlockSignatureTracker # imm = 0x30F9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_291
.LBB32_273:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$437, %ax               # imm = 0x1B5
	cmpw	$12555, %ax             # imm = 0x310B
	jne	.LBB32_882
# %bb.274:                              # %check_legal.split1954
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$12555, BasicBlockSignatureTracker # imm = 0x310B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_289
# %bb.275:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$12570, %ax             # imm = 0x311A
	jne	.LBB32_882
# %bb.276:                              # %check_legal.split1966
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$12570, BasicBlockSignatureTracker # imm = 0x311A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_287
# %bb.277:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$12577, %ax             # imm = 0x3121
	jne	.LBB32_882
# %bb.278:                              # %check_legal.split1970
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$12577, BasicBlockSignatureTracker # imm = 0x3121
	movw	$59, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_287
# %bb.279:                              # %Buffer__16
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20182, %ax            # imm = 0xB12A
	cmpw	$-32757, %ax            # imm = 0x800B
	jne	.LBB32_882
# %bb.280:                              # %check_legal.split1974
	movw	$-32757, BasicBlockSignatureTracker # imm = 0x800B
	movw	$-20182, RunTimeSignatureAdjuster # imm = 0xB12A
# %bb.281:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$12585, %ax             # imm = 0x3129
	jne	.LBB32_882
# %bb.282:                              # %check_legal.split2568
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$12585, BasicBlockSignatureTracker # imm = 0x3129
	movw	$51, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_287
# %bb.283:                              # %Buffer__17
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12260, %ax             # imm = 0x2FE4
	cmpw	$7885, %ax              # imm = 0x1ECD
	jne	.LBB32_882
# %bb.284:                              # %check_legal.split1976
	movw	$7885, BasicBlockSignatureTracker # imm = 0x1ECD
	movw	$12260, RunTimeSignatureAdjuster # imm = 0x2FE4
# %bb.285:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$12593, %ax             # imm = 0x3131
	jne	.LBB32_882
# %bb.286:                              # %check_legal.split2570
	movl	$1, (%r14)
	movw	$12593, BasicBlockSignatureTracker # imm = 0x3131
	movw	$7552, RunTimeSignatureAdjuster # imm = 0x1D80
	jmp	.LBB32_864
.LBB32_287:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$40, %ax
	xorw	%cx, %ax
	cmpw	$12594, %ax             # imm = 0x3132
	jne	.LBB32_882
# %bb.288:                              # %check_legal.split1972
	movw	$12594, BasicBlockSignatureTracker # imm = 0x3132
	movw	$57, RunTimeSignatureAdjuster
.LBB32_289:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$54, %ax
	xorw	%cx, %ax
	cmpw	$12605, %ax             # imm = 0x313D
	jne	.LBB32_882
# %bb.290:                              # %check_legal.split1968
	movw	$12605, BasicBlockSignatureTracker # imm = 0x313D
	movw	$452, RunTimeSignatureAdjuster # imm = 0x1C4
.LBB32_291:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$454, %ax               # imm = 0x1C6
	xorw	%cx, %ax
	cmpw	$12607, %ax             # imm = 0x313F
	jne	.LBB32_882
# %bb.292:                              # %check_legal.split1964
	movw	$12607, BasicBlockSignatureTracker # imm = 0x313F
	movw	$388, RunTimeSignatureAdjuster # imm = 0x184
.LBB32_293:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$506, %ax               # imm = 0x1FA
	xorw	%cx, %ax
	cmpw	$12609, %ax             # imm = 0x3141
	jne	.LBB32_882
# %bb.294:                              # %check_legal.split1950
	movw	$12609, BasicBlockSignatureTracker # imm = 0x3141
	movw	$464, RunTimeSignatureAdjuster # imm = 0x1D0
.LBB32_295:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$473, %ax               # imm = 0x1D9
	xorw	%cx, %ax
	cmpw	$12616, %ax             # imm = 0x3148
	jne	.LBB32_882
# %bb.296:                              # %check_legal.split1936
	movw	$12616, BasicBlockSignatureTracker # imm = 0x3148
	movw	$7767, RunTimeSignatureAdjuster # imm = 0x1E57
	jmp	.LBB32_299
.LBB32_297:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8170, %ax              # imm = 0x1FEA
	cmpw	$12617, %ax             # imm = 0x3149
	jne	.LBB32_882
# %bb.298:                              # %check_legal.split1836
	movw	$12617, BasicBlockSignatureTracker # imm = 0x3149
	movw	$7766, RunTimeSignatureAdjuster # imm = 0x1E56
.LBB32_299:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7751, %ax              # imm = 0x1E47
	xorw	%cx, %ax
	cmpw	$12632, %ax             # imm = 0x3158
	jne	.LBB32_882
# %bb.300:                              # %check_legal.split1872
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$12632, BasicBlockSignatureTracker # imm = 0x3158
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	je	.LBB32_477
# %bb.301:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$12636, %ax             # imm = 0x315C
	jne	.LBB32_882
# %bb.302:                              # %check_legal.split1978
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$12636, BasicBlockSignatureTracker # imm = 0x315C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_343
# %bb.303:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$12642, %ax             # imm = 0x3162
	jne	.LBB32_882
# %bb.304:                              # %check_legal.split1982
	movl	bking_loc, %eax
	movl	(%r9), %ecx
	movw	$12642, BasicBlockSignatureTracker # imm = 0x3162
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB32_323
# %bb.305:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$12655, %ax             # imm = 0x316F
	jne	.LBB32_882
# %bb.306:                              # %check_legal.split1986
	movl	bking_loc, %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$12655, BasicBlockSignatureTracker # imm = 0x316F
	movw	$0, RunTimeSignatureAdjuster
.LBB32_307:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$12667, %ax             # imm = 0x317B
	jne	.LBB32_866
# %bb.308:                              # %check_legal.split1990
                                        #   in Loop: Header=BB32_307 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12667, BasicBlockSignatureTracker # imm = 0x317B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_313
# %bb.309:                              #   in Loop: Header=BB32_307 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$255, %ax
	cmpw	$12676, %ax             # imm = 0x3184
	jne	.LBB32_866
# %bb.310:                              # %check_legal.split1992
                                        #   in Loop: Header=BB32_307 Depth=1
	movw	$12676, BasicBlockSignatureTracker # imm = 0x3184
	movw	$0, RunTimeSignatureAdjuster
# %bb.311:                              #   in Loop: Header=BB32_307 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$12678, %ax             # imm = 0x3186
	jne	.LBB32_866
# %bb.312:                              # %check_legal.split1996
                                        #   in Loop: Header=BB32_307 Depth=1
	movl	(%r8), %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$12678, BasicBlockSignatureTracker # imm = 0x3186
	movw	$233, RunTimeSignatureAdjuster
	jmp	.LBB32_307
.LBB32_313:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$232, %ax
	cmpw	$12691, %ax             # imm = 0x3193
	jne	.LBB32_882
# %bb.314:                              # %check_legal.split1994
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12691, BasicBlockSignatureTracker # imm = 0x3193
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB32_317
# %bb.315:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$12697, %ax             # imm = 0x3199
	jne	.LBB32_882
# %bb.316:                              # %check_legal.split2000
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12697, BasicBlockSignatureTracker # imm = 0x3199
	movw	$10, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB32_319
.LBB32_317:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$12702, %ax             # imm = 0x319E
	jne	.LBB32_882
# %bb.318:                              # %check_legal.split1998
	movl	$0, (%r14)
	movw	$12702, BasicBlockSignatureTracker # imm = 0x319E
	movw	$7471, RunTimeSignatureAdjuster # imm = 0x1D2F
	jmp	.LBB32_864
.LBB32_319:                             # %Buffer__18
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31388, %ax             # imm = 0x7A9C
	cmpw	$19205, %ax             # imm = 0x4B05
	jne	.LBB32_882
# %bb.320:                              # %check_legal.split2002
	movw	$19205, BasicBlockSignatureTracker # imm = 0x4B05
	movw	$31388, RunTimeSignatureAdjuster # imm = 0x7A9C
# %bb.321:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$12722, %ax             # imm = 0x31B2
	jne	.LBB32_882
# %bb.322:                              # %check_legal.split2572
	movw	$12722, BasicBlockSignatureTracker # imm = 0x31B2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_341
.LBB32_323:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$212, %ax
	cmpw	$12726, %ax             # imm = 0x31B6
	jne	.LBB32_882
# %bb.324:                              # %check_legal.split1988
	movl	bking_loc, %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$12726, BasicBlockSignatureTracker # imm = 0x31B6
	movw	$0, RunTimeSignatureAdjuster
.LBB32_325:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$12746, %ax             # imm = 0x31CA
	jne	.LBB32_867
# %bb.326:                              # %check_legal.split2006
                                        #   in Loop: Header=BB32_325 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12746, BasicBlockSignatureTracker # imm = 0x31CA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_331
# %bb.327:                              #   in Loop: Header=BB32_325 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$12750, %ax             # imm = 0x31CE
	jne	.LBB32_867
# %bb.328:                              # %check_legal.split2008
                                        #   in Loop: Header=BB32_325 Depth=1
	movw	$12750, BasicBlockSignatureTracker # imm = 0x31CE
	movw	$0, RunTimeSignatureAdjuster
# %bb.329:                              #   in Loop: Header=BB32_325 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$12772, %ax             # imm = 0x31E4
	jne	.LBB32_867
# %bb.330:                              # %check_legal.split2012
                                        #   in Loop: Header=BB32_325 Depth=1
	movl	(%r8), %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$12772, BasicBlockSignatureTracker # imm = 0x31E4
	movw	$82, RunTimeSignatureAdjuster
	jmp	.LBB32_325
.LBB32_331:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$35, %ax
	cmpw	$12777, %ax             # imm = 0x31E9
	jne	.LBB32_882
# %bb.332:                              # %check_legal.split2010
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12777, BasicBlockSignatureTracker # imm = 0x31E9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB32_335
# %bb.333:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$12788, %ax             # imm = 0x31F4
	jne	.LBB32_882
# %bb.334:                              # %check_legal.split2016
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12788, BasicBlockSignatureTracker # imm = 0x31F4
	movw	$29, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB32_337
.LBB32_335:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$12790, %ax             # imm = 0x31F6
	jne	.LBB32_882
# %bb.336:                              # %check_legal.split2014
	movl	$0, (%r14)
	movw	$12790, BasicBlockSignatureTracker # imm = 0x31F6
	movw	$7495, RunTimeSignatureAdjuster # imm = 0x1D47
	jmp	.LBB32_864
.LBB32_337:                             # %Buffer__19
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5961, %ax              # imm = 0x1749
	cmpw	$9917, %ax              # imm = 0x26BD
	jne	.LBB32_882
# %bb.338:                              # %check_legal.split2018
	movw	$9917, BasicBlockSignatureTracker # imm = 0x26BD
	movw	$5961, RunTimeSignatureAdjuster # imm = 0x1749
# %bb.339:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$12799, %ax             # imm = 0x31FF
	jne	.LBB32_882
# %bb.340:                              # %check_legal.split2574
	movw	$12799, BasicBlockSignatureTracker # imm = 0x31FF
	movw	$77, RunTimeSignatureAdjuster
.LBB32_341:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$946, %ax               # imm = 0x3B2
	xorw	%cx, %ax
	cmpw	$12800, %ax             # imm = 0x3200
	jne	.LBB32_882
# %bb.342:                              # %check_legal.split2004
	movw	$12800, BasicBlockSignatureTracker # imm = 0x3200
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_475
.LBB32_343:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$856, %ax               # imm = 0x358
	cmpw	$12804, %ax             # imm = 0x3204
	jne	.LBB32_882
# %bb.344:                              # %check_legal.split1984
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$12804, BasicBlockSignatureTracker # imm = 0x3204
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_385
# %bb.345:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$38, %ax
	cmpw	$12834, %ax             # imm = 0x3222
	jne	.LBB32_882
# %bb.346:                              # %check_legal.split2022
	movl	bking_loc, %eax
	movl	(%r9), %ecx
	movw	$12834, BasicBlockSignatureTracker # imm = 0x3222
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB32_365
# %bb.347:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$12852, %ax             # imm = 0x3234
	jne	.LBB32_882
# %bb.348:                              # %check_legal.split2026
	movl	bking_loc, %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$12852, BasicBlockSignatureTracker # imm = 0x3234
	movw	$0, RunTimeSignatureAdjuster
.LBB32_349:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$12853, %ax             # imm = 0x3235
	jne	.LBB32_868
# %bb.350:                              # %check_legal.split2030
                                        #   in Loop: Header=BB32_349 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12853, BasicBlockSignatureTracker # imm = 0x3235
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_355
# %bb.351:                              #   in Loop: Header=BB32_349 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$12862, %ax             # imm = 0x323E
	jne	.LBB32_868
# %bb.352:                              # %check_legal.split2032
                                        #   in Loop: Header=BB32_349 Depth=1
	movw	$12862, BasicBlockSignatureTracker # imm = 0x323E
	movw	$0, RunTimeSignatureAdjuster
# %bb.353:                              #   in Loop: Header=BB32_349 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$12870, %ax             # imm = 0x3246
	jne	.LBB32_868
# %bb.354:                              # %check_legal.split2036
                                        #   in Loop: Header=BB32_349 Depth=1
	movl	(%r8), %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$12870, BasicBlockSignatureTracker # imm = 0x3246
	movw	$114, RunTimeSignatureAdjuster
	jmp	.LBB32_349
.LBB32_355:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$99, %ax
	cmpw	$12886, %ax             # imm = 0x3256
	jne	.LBB32_882
# %bb.356:                              # %check_legal.split2034
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12886, BasicBlockSignatureTracker # imm = 0x3256
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB32_359
# %bb.357:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$12903, %ax             # imm = 0x3267
	jne	.LBB32_882
# %bb.358:                              # %check_legal.split2040
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12903, BasicBlockSignatureTracker # imm = 0x3267
	movw	$49, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB32_361
.LBB32_359:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$34, %ax
	xorw	%cx, %ax
	cmpw	$12916, %ax             # imm = 0x3274
	jne	.LBB32_882
# %bb.360:                              # %check_legal.split2038
	movl	$0, (%r14)
	movw	$12916, BasicBlockSignatureTracker # imm = 0x3274
	movw	$7877, RunTimeSignatureAdjuster # imm = 0x1EC5
	jmp	.LBB32_864
.LBB32_361:                             # %Buffer__20
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6848, %ax              # imm = 0x1AC0
	cmpw	$10407, %ax             # imm = 0x28A7
	jne	.LBB32_882
# %bb.362:                              # %check_legal.split2042
	movw	$10407, BasicBlockSignatureTracker # imm = 0x28A7
	movw	$6848, RunTimeSignatureAdjuster # imm = 0x1AC0
# %bb.363:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$12925, %ax             # imm = 0x327D
	jne	.LBB32_882
# %bb.364:                              # %check_legal.split2576
	movw	$12925, BasicBlockSignatureTracker # imm = 0x327D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_383
.LBB32_365:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$171, %ax
	cmpw	$12937, %ax             # imm = 0x3289
	jne	.LBB32_882
# %bb.366:                              # %check_legal.split2028
	movl	bking_loc, %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$12937, BasicBlockSignatureTracker # imm = 0x3289
	movw	$0, RunTimeSignatureAdjuster
.LBB32_367:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$12939, %ax             # imm = 0x328B
	jne	.LBB32_869
# %bb.368:                              # %check_legal.split2046
                                        #   in Loop: Header=BB32_367 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12939, BasicBlockSignatureTracker # imm = 0x328B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_373
# %bb.369:                              #   in Loop: Header=BB32_367 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$12949, %ax             # imm = 0x3295
	jne	.LBB32_869
# %bb.370:                              # %check_legal.split2048
                                        #   in Loop: Header=BB32_367 Depth=1
	movw	$12949, BasicBlockSignatureTracker # imm = 0x3295
	movw	$0, RunTimeSignatureAdjuster
# %bb.371:                              #   in Loop: Header=BB32_367 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$12950, %ax             # imm = 0x3296
	jne	.LBB32_869
# %bb.372:                              # %check_legal.split2052
                                        #   in Loop: Header=BB32_367 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$12950, BasicBlockSignatureTracker # imm = 0x3296
	movw	$31, RunTimeSignatureAdjuster
	jmp	.LBB32_367
.LBB32_373:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$12951, %ax             # imm = 0x3297
	jne	.LBB32_882
# %bb.374:                              # %check_legal.split2050
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12951, BasicBlockSignatureTracker # imm = 0x3297
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB32_377
# %bb.375:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$12987, %ax             # imm = 0x32BB
	jne	.LBB32_882
# %bb.376:                              # %check_legal.split2056
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$12987, BasicBlockSignatureTracker # imm = 0x32BB
	movw	$44, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB32_379
.LBB32_377:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$12990, %ax             # imm = 0x32BE
	jne	.LBB32_882
# %bb.378:                              # %check_legal.split2054
	movl	$0, (%r14)
	movw	$12990, BasicBlockSignatureTracker # imm = 0x32BE
	movw	$7695, RunTimeSignatureAdjuster # imm = 0x1E0F
	jmp	.LBB32_864
.LBB32_379:                             # %Buffer__21
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31323, %ax             # imm = 0x7A5B
	cmpw	$18656, %ax             # imm = 0x48E0
	jne	.LBB32_882
# %bb.380:                              # %check_legal.split2058
	movw	$18656, BasicBlockSignatureTracker # imm = 0x48E0
	movw	$31323, RunTimeSignatureAdjuster # imm = 0x7A5B
# %bb.381:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$116, %ax
	xorw	%cx, %ax
	cmpw	$13007, %ax             # imm = 0x32CF
	jne	.LBB32_882
# %bb.382:                              # %check_legal.split2578
	movw	$13007, BasicBlockSignatureTracker # imm = 0x32CF
	movw	$178, RunTimeSignatureAdjuster
.LBB32_383:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$175, %ax
	xorw	%cx, %ax
	cmpw	$13010, %ax             # imm = 0x32D2
	jne	.LBB32_882
# %bb.384:                              # %check_legal.split2044
	movw	$13010, BasicBlockSignatureTracker # imm = 0x32D2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_473
.LBB32_385:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$238, %ax
	cmpw	$13034, %ax             # imm = 0x32EA
	jne	.LBB32_882
# %bb.386:                              # %check_legal.split2024
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$13034, BasicBlockSignatureTracker # imm = 0x32EA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_427
# %bb.387:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$13036, %ax             # imm = 0x32EC
	jne	.LBB32_882
# %bb.388:                              # %check_legal.split2062
	movl	bking_loc, %eax
	movl	(%r9), %ecx
	movw	$13036, BasicBlockSignatureTracker # imm = 0x32EC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB32_407
# %bb.389:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$13054, %ax             # imm = 0x32FE
	jne	.LBB32_882
# %bb.390:                              # %check_legal.split2066
	movl	bking_loc, %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$13054, BasicBlockSignatureTracker # imm = 0x32FE
	movw	$0, RunTimeSignatureAdjuster
.LBB32_391:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$502, %ax               # imm = 0x1F6
	xorw	%cx, %ax
	cmpw	$13064, %ax             # imm = 0x3308
	jne	.LBB32_870
# %bb.392:                              # %check_legal.split2070
                                        #   in Loop: Header=BB32_391 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13064, BasicBlockSignatureTracker # imm = 0x3308
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_397
# %bb.393:                              #   in Loop: Header=BB32_391 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$13085, %ax             # imm = 0x331D
	jne	.LBB32_870
# %bb.394:                              # %check_legal.split2072
                                        #   in Loop: Header=BB32_391 Depth=1
	movw	$13085, BasicBlockSignatureTracker # imm = 0x331D
	movw	$0, RunTimeSignatureAdjuster
# %bb.395:                              #   in Loop: Header=BB32_391 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$13093, %ax             # imm = 0x3325
	jne	.LBB32_870
# %bb.396:                              # %check_legal.split2076
                                        #   in Loop: Header=BB32_391 Depth=1
	movl	(%r8), %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$13093, BasicBlockSignatureTracker # imm = 0x3325
	movw	$475, RunTimeSignatureAdjuster # imm = 0x1DB
	jmp	.LBB32_391
.LBB32_397:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$39, %ax
	cmpw	$13103, %ax             # imm = 0x332F
	jne	.LBB32_882
# %bb.398:                              # %check_legal.split2074
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13103, BasicBlockSignatureTracker # imm = 0x332F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB32_401
# %bb.399:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$111, %ax
	cmpw	$13120, %ax             # imm = 0x3340
	jne	.LBB32_882
# %bb.400:                              # %check_legal.split2080
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13120, BasicBlockSignatureTracker # imm = 0x3340
	movw	$111, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB32_403
.LBB32_401:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$103, %ax
	xorw	%cx, %ax
	cmpw	$13128, %ax             # imm = 0x3348
	jne	.LBB32_882
# %bb.402:                              # %check_legal.split2078
	movl	$0, (%r14)
	movw	$13128, BasicBlockSignatureTracker # imm = 0x3348
	movw	$8185, RunTimeSignatureAdjuster # imm = 0x1FF9
	jmp	.LBB32_864
.LBB32_403:                             # %Buffer__22
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2818, %ax              # imm = 0xB02
	cmpw	$14402, %ax             # imm = 0x3842
	jne	.LBB32_882
# %bb.404:                              # %check_legal.split2082
	movw	$14402, BasicBlockSignatureTracker # imm = 0x3842
	movw	$2818, RunTimeSignatureAdjuster # imm = 0xB02
# %bb.405:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$13145, %ax             # imm = 0x3359
	jne	.LBB32_882
# %bb.406:                              # %check_legal.split2580
	movw	$13145, BasicBlockSignatureTracker # imm = 0x3359
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_425
.LBB32_407:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$413, %ax               # imm = 0x19D
	cmpw	$13169, %ax             # imm = 0x3371
	jne	.LBB32_882
# %bb.408:                              # %check_legal.split2068
	movl	bking_loc, %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$13169, BasicBlockSignatureTracker # imm = 0x3371
	movw	$0, RunTimeSignatureAdjuster
.LBB32_409:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$13174, %ax             # imm = 0x3376
	jne	.LBB32_871
# %bb.410:                              # %check_legal.split2086
                                        #   in Loop: Header=BB32_409 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13174, BasicBlockSignatureTracker # imm = 0x3376
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_415
# %bb.411:                              #   in Loop: Header=BB32_409 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$237, %ax
	cmpw	$13211, %ax             # imm = 0x339B
	jne	.LBB32_871
# %bb.412:                              # %check_legal.split2088
                                        #   in Loop: Header=BB32_409 Depth=1
	movw	$13211, BasicBlockSignatureTracker # imm = 0x339B
	movw	$0, RunTimeSignatureAdjuster
# %bb.413:                              #   in Loop: Header=BB32_409 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$13230, %ax             # imm = 0x33AE
	jne	.LBB32_871
# %bb.414:                              # %check_legal.split2092
                                        #   in Loop: Header=BB32_409 Depth=1
	movl	(%r8), %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$13230, BasicBlockSignatureTracker # imm = 0x33AE
	movw	$223, RunTimeSignatureAdjuster
	jmp	.LBB32_409
.LBB32_415:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$203, %ax
	cmpw	$13245, %ax             # imm = 0x33BD
	jne	.LBB32_882
# %bb.416:                              # %check_legal.split2090
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13245, BasicBlockSignatureTracker # imm = 0x33BD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB32_419
# %bb.417:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$121, %ax
	cmpw	$13252, %ax             # imm = 0x33C4
	jne	.LBB32_882
# %bb.418:                              # %check_legal.split2096
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13252, BasicBlockSignatureTracker # imm = 0x33C4
	movw	$121, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB32_421
.LBB32_419:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$122, %ax
	xorw	%cx, %ax
	cmpw	$13255, %ax             # imm = 0x33C7
	jne	.LBB32_882
# %bb.420:                              # %check_legal.split2094
	movl	$0, (%r14)
	movw	$13255, BasicBlockSignatureTracker # imm = 0x33C7
	movw	$8054, RunTimeSignatureAdjuster # imm = 0x1F76
	jmp	.LBB32_864
.LBB32_421:                             # %Buffer__23
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-28617, %ax            # imm = 0x9037
	cmpw	$-23565, %ax            # imm = 0xA3F3
	jne	.LBB32_882
# %bb.422:                              # %check_legal.split2098
	movw	$-23565, BasicBlockSignatureTracker # imm = 0xA3F3
	movw	$-28617, RunTimeSignatureAdjuster # imm = 0x9037
# %bb.423:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$13258, %ax             # imm = 0x33CA
	jne	.LBB32_882
# %bb.424:                              # %check_legal.split2582
	movw	$13258, BasicBlockSignatureTracker # imm = 0x33CA
	movw	$147, RunTimeSignatureAdjuster
.LBB32_425:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$148, %ax
	xorw	%cx, %ax
	cmpw	$13261, %ax             # imm = 0x33CD
	jne	.LBB32_882
# %bb.426:                              # %check_legal.split2084
	movw	$13261, BasicBlockSignatureTracker # imm = 0x33CD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_471
.LBB32_427:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$293, %ax               # imm = 0x125
	cmpw	$13263, %ax             # imm = 0x33CF
	jne	.LBB32_882
# %bb.428:                              # %check_legal.split2064
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$13263, BasicBlockSignatureTracker # imm = 0x33CF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_469
# %bb.429:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$13268, %ax             # imm = 0x33D4
	jne	.LBB32_882
# %bb.430:                              # %check_legal.split2102
	movl	bking_loc, %eax
	movl	(%r9), %ecx
	movw	$13268, BasicBlockSignatureTracker # imm = 0x33D4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB32_449
# %bb.431:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$13275, %ax             # imm = 0x33DB
	jne	.LBB32_882
# %bb.432:                              # %check_legal.split2106
	movl	bking_loc, %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$13275, BasicBlockSignatureTracker # imm = 0x33DB
	movw	$0, RunTimeSignatureAdjuster
.LBB32_433:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$13277, %ax             # imm = 0x33DD
	jne	.LBB32_872
# %bb.434:                              # %check_legal.split2110
                                        #   in Loop: Header=BB32_433 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13277, BasicBlockSignatureTracker # imm = 0x33DD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_439
# %bb.435:                              #   in Loop: Header=BB32_433 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$13296, %ax             # imm = 0x33F0
	jne	.LBB32_872
# %bb.436:                              # %check_legal.split2112
                                        #   in Loop: Header=BB32_433 Depth=1
	movw	$13296, BasicBlockSignatureTracker # imm = 0x33F0
	movw	$0, RunTimeSignatureAdjuster
# %bb.437:                              #   in Loop: Header=BB32_433 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$13300, %ax             # imm = 0x33F4
	jne	.LBB32_872
# %bb.438:                              # %check_legal.split2116
                                        #   in Loop: Header=BB32_433 Depth=1
	movl	(%r8), %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$13300, BasicBlockSignatureTracker # imm = 0x33F4
	movw	$47, RunTimeSignatureAdjuster
	jmp	.LBB32_433
.LBB32_439:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$13302, %ax             # imm = 0x33F6
	jne	.LBB32_882
# %bb.440:                              # %check_legal.split2114
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13302, BasicBlockSignatureTracker # imm = 0x33F6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB32_443
# %bb.441:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$13303, %ax             # imm = 0x33F7
	jne	.LBB32_882
# %bb.442:                              # %check_legal.split2120
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13303, BasicBlockSignatureTracker # imm = 0x33F7
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB32_445
.LBB32_443:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$13308, %ax             # imm = 0x33FC
	jne	.LBB32_882
# %bb.444:                              # %check_legal.split2118
	movl	$0, (%r14)
	movw	$13308, BasicBlockSignatureTracker # imm = 0x33FC
	movw	$8013, RunTimeSignatureAdjuster # imm = 0x1F4D
	jmp	.LBB32_864
.LBB32_445:                             # %Buffer__24
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11711, %ax             # imm = 0x2DBF
	cmpw	$7752, %ax              # imm = 0x1E48
	jne	.LBB32_882
# %bb.446:                              # %check_legal.split2122
	movw	$7752, BasicBlockSignatureTracker # imm = 0x1E48
	movw	$11711, RunTimeSignatureAdjuster # imm = 0x2DBF
# %bb.447:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2040, %ax              # imm = 0x7F8
	xorw	%cx, %ax
	cmpw	$13327, %ax             # imm = 0x340F
	jne	.LBB32_882
# %bb.448:                              # %check_legal.split2584
	movw	$13327, BasicBlockSignatureTracker # imm = 0x340F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_467
.LBB32_449:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1984, %ax              # imm = 0x7C0
	cmpw	$13332, %ax             # imm = 0x3414
	jne	.LBB32_882
# %bb.450:                              # %check_legal.split2108
	movl	bking_loc, %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$13332, BasicBlockSignatureTracker # imm = 0x3414
	movw	$0, RunTimeSignatureAdjuster
.LBB32_451:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$13345, %ax             # imm = 0x3421
	jne	.LBB32_873
# %bb.452:                              # %check_legal.split2126
                                        #   in Loop: Header=BB32_451 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13345, BasicBlockSignatureTracker # imm = 0x3421
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_457
# %bb.453:                              #   in Loop: Header=BB32_451 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$13371, %ax             # imm = 0x343B
	jne	.LBB32_873
# %bb.454:                              # %check_legal.split2128
                                        #   in Loop: Header=BB32_451 Depth=1
	movw	$13371, BasicBlockSignatureTracker # imm = 0x343B
	movw	$0, RunTimeSignatureAdjuster
# %bb.455:                              #   in Loop: Header=BB32_451 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$124, %ax
	cmpw	$13383, %ax             # imm = 0x3447
	jne	.LBB32_873
# %bb.456:                              # %check_legal.split2132
                                        #   in Loop: Header=BB32_451 Depth=1
	movl	(%r8), %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$13383, BasicBlockSignatureTracker # imm = 0x3447
	movw	$83, RunTimeSignatureAdjuster
	jmp	.LBB32_451
.LBB32_457:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$109, %ax
	cmpw	$13388, %ax             # imm = 0x344C
	jne	.LBB32_882
# %bb.458:                              # %check_legal.split2130
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13388, BasicBlockSignatureTracker # imm = 0x344C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB32_461
# %bb.459:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$13394, %ax             # imm = 0x3452
	jne	.LBB32_882
# %bb.460:                              # %check_legal.split2136
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$13394, BasicBlockSignatureTracker # imm = 0x3452
	movw	$30, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB32_463
.LBB32_461:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$13396, %ax             # imm = 0x3454
	jne	.LBB32_882
# %bb.462:                              # %check_legal.split2134
	movl	$0, (%r14)
	movw	$13396, BasicBlockSignatureTracker # imm = 0x3454
	movw	$6373, RunTimeSignatureAdjuster # imm = 0x18E5
	jmp	.LBB32_864
.LBB32_463:                             # %Buffer__25
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29804, %ax             # imm = 0x746C
	cmpw	$16446, %ax             # imm = 0x403E
	jne	.LBB32_882
# %bb.464:                              # %check_legal.split2138
	movw	$16446, BasicBlockSignatureTracker # imm = 0x403E
	movw	$29804, RunTimeSignatureAdjuster # imm = 0x746C
# %bb.465:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$50, %ax
	xorw	%cx, %ax
	cmpw	$13408, %ax             # imm = 0x3460
	jne	.LBB32_882
# %bb.466:                              # %check_legal.split2586
	movw	$13408, BasicBlockSignatureTracker # imm = 0x3460
	movw	$111, RunTimeSignatureAdjuster
.LBB32_467:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$106, %ax
	xorw	%cx, %ax
	cmpw	$13413, %ax             # imm = 0x3465
	jne	.LBB32_882
# %bb.468:                              # %check_legal.split2124
	movw	$13413, BasicBlockSignatureTracker # imm = 0x3465
	movw	$1962, RunTimeSignatureAdjuster # imm = 0x7AA
.LBB32_469:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1887, %ax              # imm = 0x75F
	xorw	%cx, %ax
	cmpw	$13456, %ax             # imm = 0x3490
	jne	.LBB32_882
# %bb.470:                              # %check_legal.split2104
	movw	$13456, BasicBlockSignatureTracker # imm = 0x3490
	movw	$1885, RunTimeSignatureAdjuster # imm = 0x75D
.LBB32_471:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1873, %ax              # imm = 0x751
	xorw	%cx, %ax
	cmpw	$13468, %ax             # imm = 0x349C
	jne	.LBB32_882
# %bb.472:                              # %check_legal.split2100
	movw	$13468, BasicBlockSignatureTracker # imm = 0x349C
	movw	$1614, RunTimeSignatureAdjuster # imm = 0x64E
.LBB32_473:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1651, %ax              # imm = 0x673
	xorw	%cx, %ax
	cmpw	$13473, %ax             # imm = 0x34A1
	jne	.LBB32_882
# %bb.474:                              # %check_legal.split2060
	movw	$13473, BasicBlockSignatureTracker # imm = 0x34A1
	movw	$1697, RunTimeSignatureAdjuster # imm = 0x6A1
.LBB32_475:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1700, %ax              # imm = 0x6A4
	xorw	%cx, %ax
	cmpw	$13476, %ax             # imm = 0x34A4
	jne	.LBB32_882
# %bb.476:                              # %check_legal.split2020
	movl	$1, (%r14)
	movw	$13476, BasicBlockSignatureTracker # imm = 0x34A4
	movw	$6165, RunTimeSignatureAdjuster # imm = 0x1815
	jmp	.LBB32_864
.LBB32_477:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1533, %ax              # imm = 0x5FD
	cmpw	$13477, %ax             # imm = 0x34A5
	jne	.LBB32_882
# %bb.478:                              # %check_legal.split1980
	movw	$13477, BasicBlockSignatureTracker # imm = 0x34A5
	movw	$6851, RunTimeSignatureAdjuster # imm = 0x1AC3
.LBB32_479:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6875, %ax              # imm = 0x1ADB
	xorw	%cx, %ax
	cmpw	$13501, %ax             # imm = 0x34BD
	jne	.LBB32_882
# %bb.480:                              # %check_legal.split1822
	movl	bking_loc, %edi
	movw	$13501, BasicBlockSignatureTracker # imm = 0x34BD
	movw	$10600, RunTimeSignatureAdjuster # imm = 0x2968
	movl	$1, %esi
	callq	is_attacked
	movw	$13501, BasicBlockSignatureTracker # imm = 0x34BD
	movw	$10600, RunTimeSignatureAdjuster # imm = 0x2968
	movw	$13501, BasicBlockSignatureTracker # imm = 0x34BD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_483
# %bb.481:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$121, %ax
	cmpw	$13508, %ax             # imm = 0x34C4
	jne	.LBB32_882
# %bb.482:                              # %check_legal.split2140
	movl	$0, (%r14)
	movw	$13508, BasicBlockSignatureTracker # imm = 0x34C4
	movw	$6261, RunTimeSignatureAdjuster # imm = 0x1875
	jmp	.LBB32_864
.LBB32_483:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$112, %ax
	cmpw	$13517, %ax             # imm = 0x34CD
	jne	.LBB32_882
# %bb.484:                              # %check_legal.split2142
	movl	$1, (%r14)
	movw	$13517, BasicBlockSignatureTracker # imm = 0x34CD
	movw	$6268, RunTimeSignatureAdjuster # imm = 0x187C
	jmp	.LBB32_864
.LBB32_485:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$6790, %dx              # imm = 0x1A86
	cmpw	$13538, %dx             # imm = 0x34E2
	jne	.LBB32_882
# %bb.486:                              # %check_legal.split1820
	movl	(%rax), %eax
	movw	$13538, BasicBlockSignatureTracker # imm = 0x34E2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB32_856
# %bb.487:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$13546, %ax             # imm = 0x34EA
	jne	.LBB32_882
# %bb.488:                              # %check_legal.split2146
	movq	(%r11), %rax
	movslq	(%rcx), %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$13546, BasicBlockSignatureTracker # imm = 0x34EA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB32_491
# %bb.489:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$506, %ax               # imm = 0x1FA
	cmpw	$13584, %ax             # imm = 0x3510
	jne	.LBB32_882
# %bb.490:                              # %check_legal.split2148
	movl	$1, (%r14)
	movw	$13584, BasicBlockSignatureTracker # imm = 0x3510
	movw	$6561, RunTimeSignatureAdjuster # imm = 0x19A1
	jmp	.LBB32_864
.LBB32_491:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$510, %ax               # imm = 0x1FE
	cmpw	$13588, %ax             # imm = 0x3514
	jne	.LBB32_882
# %bb.492:                              # %check_legal.split2150
	movq	(%r11), %rax
	movslq	(%rcx), %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$13588, BasicBlockSignatureTracker # imm = 0x3514
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_495
# %bb.493:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$13595, %ax             # imm = 0x351B
	jne	.LBB32_882
# %bb.494:                              # %check_legal.split2152
	movl	$1, %eax
	movw	$13595, BasicBlockSignatureTracker # imm = 0x351B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_497
.LBB32_495:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$13597, %ax             # imm = 0x351D
	jne	.LBB32_882
# %bb.496:                              # %check_legal.split2154
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$13597, BasicBlockSignatureTracker # imm = 0x351D
	movw	$6, RunTimeSignatureAdjuster
.LBB32_497:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$61, %dx
	xorw	%si, %dx
	cmpw	$13606, %dx             # imm = 0x3526
	jne	.LBB32_882
# %bb.498:                              # %check_legal.split2156
	movw	$13606, BasicBlockSignatureTracker(%rip) # imm = 0x3526
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-1, %eax
	movl	%eax, %edx
	subl	$10, %edx
	ja	.LBB32_674
# %bb.499:                              # %check_legal.split2156
	movq	.LJTI32_0(,%rax,8), %rax
	jmpq	*%rax
.LBB32_500:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$13621, %ax             # imm = 0x3535
	jne	.LBB32_882
# %bb.501:                              # %check_legal.split2160
	movq	(%r11), %rax
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	8(%rax), %eax
	movw	$13621, BasicBlockSignatureTracker # imm = 0x3535
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB32_520
# %bb.502:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$121, %ax
	cmpw	$13644, %ax             # imm = 0x354C
	jne	.LBB32_882
# %bb.503:                              # %check_legal.split2170
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$13644, BasicBlockSignatureTracker # imm = 0x354C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_518
# %bb.504:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$13660, %ax             # imm = 0x355C
	jne	.LBB32_882
# %bb.505:                              # %check_legal.split2174
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$13660, BasicBlockSignatureTracker # imm = 0x355C
	movw	$16, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_518
# %bb.506:                              # %Buffer__26
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14225, %ax             # imm = 0x3791
	cmpw	$717, %ax               # imm = 0x2CD
	jne	.LBB32_882
# %bb.507:                              # %check_legal.split2178
	movw	$717, BasicBlockSignatureTracker # imm = 0x2CD
	movw	$14225, RunTimeSignatureAdjuster # imm = 0x3791
# %bb.508:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$13687, %ax             # imm = 0x3577
	jne	.LBB32_882
# %bb.509:                              # %check_legal.split2588
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$13687, BasicBlockSignatureTracker # imm = 0x3577
	movw	$59, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_518
# %bb.510:                              # %Buffer__27
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-7786, %ax             # imm = 0xE196
	cmpw	$-11039, %ax            # imm = 0xD4E1
	jne	.LBB32_882
# %bb.511:                              # %check_legal.split2180
	movw	$-11039, BasicBlockSignatureTracker # imm = 0xD4E1
	movw	$-7786, RunTimeSignatureAdjuster # imm = 0xE196
# %bb.512:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$13690, %ax             # imm = 0x357A
	jne	.LBB32_882
# %bb.513:                              # %check_legal.split2590
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$13690, BasicBlockSignatureTracker # imm = 0x357A
	movw	$54, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_518
# %bb.514:                              # %Buffer__28
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9903, %ax             # imm = 0xD951
	cmpw	$-5077, %ax             # imm = 0xEC2B
	jne	.LBB32_882
# %bb.515:                              # %check_legal.split2182
	movw	$-5077, BasicBlockSignatureTracker # imm = 0xEC2B
	movw	$-9903, RunTimeSignatureAdjuster # imm = 0xD951
# %bb.516:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$13691, %ax             # imm = 0x357B
	jne	.LBB32_882
# %bb.517:                              # %check_legal.split2592
	movl	$1, (%r14)
	movw	$13691, BasicBlockSignatureTracker # imm = 0x357B
	movw	$6602, RunTimeSignatureAdjuster # imm = 0x19CA
	jmp	.LBB32_864
.LBB32_518:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$204, %ax
	xorw	%cx, %ax
	cmpw	$13696, %ax             # imm = 0x3580
	jne	.LBB32_882
# %bb.519:                              # %check_legal.split2176
	movw	$13696, BasicBlockSignatureTracker # imm = 0x3580
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_534
.LBB32_520:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$176, %ax
	cmpw	$13701, %ax             # imm = 0x3585
	jne	.LBB32_882
# %bb.521:                              # %check_legal.split2172
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$13701, BasicBlockSignatureTracker # imm = 0x3585
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_532
# %bb.522:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$13717, %ax             # imm = 0x3595
	jne	.LBB32_882
# %bb.523:                              # %check_legal.split2186
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$13717, BasicBlockSignatureTracker # imm = 0x3595
	movw	$16, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_532
# %bb.524:                              # %Buffer__29
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16894, %ax             # imm = 0x41FE
	cmpw	$29803, %ax             # imm = 0x746B
	jne	.LBB32_882
# %bb.525:                              # %check_legal.split2190
	movw	$29803, BasicBlockSignatureTracker # imm = 0x746B
	movw	$16894, RunTimeSignatureAdjuster # imm = 0x41FE
# %bb.526:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$13726, %ax             # imm = 0x359E
	jne	.LBB32_882
# %bb.527:                              # %check_legal.split2594
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$13726, BasicBlockSignatureTracker # imm = 0x359E
	movw	$27, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_532
# %bb.528:                              # %Buffer__30
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10311, %ax             # imm = 0x2847
	cmpw	$7641, %ax              # imm = 0x1DD9
	jne	.LBB32_882
# %bb.529:                              # %check_legal.split2192
	movw	$7641, BasicBlockSignatureTracker # imm = 0x1DD9
	movw	$10311, RunTimeSignatureAdjuster # imm = 0x2847
# %bb.530:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$13737, %ax             # imm = 0x35A9
	jne	.LBB32_882
# %bb.531:                              # %check_legal.split2596
	movl	$1, (%r14)
	movw	$13737, BasicBlockSignatureTracker # imm = 0x35A9
	movw	$6424, RunTimeSignatureAdjuster # imm = 0x1918
	jmp	.LBB32_864
.LBB32_532:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$71, %ax
	xorw	%cx, %ax
	cmpw	$13762, %ax             # imm = 0x35C2
	jne	.LBB32_882
# %bb.533:                              # %check_legal.split2188
	movw	$13762, BasicBlockSignatureTracker # imm = 0x35C2
	movw	$66, RunTimeSignatureAdjuster
.LBB32_534:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$68, %ax
	xorw	%cx, %ax
	cmpw	$13764, %ax             # imm = 0x35C4
	jne	.LBB32_882
# %bb.535:                              # %check_legal.split2184
	movw	$13764, BasicBlockSignatureTracker # imm = 0x35C4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_676
.LBB32_536:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$242, %ax
	cmpw	$13780, %ax             # imm = 0x35D4
	jne	.LBB32_882
# %bb.537:                              # %check_legal.split2162
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$13780, BasicBlockSignatureTracker # imm = 0x35D4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_552
# %bb.538:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$13781, %ax             # imm = 0x35D5
	jne	.LBB32_882
# %bb.539:                              # %check_legal.split2196
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$13781, BasicBlockSignatureTracker # imm = 0x35D5
	movw	$1, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_552
# %bb.540:                              # %Buffer__31
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22857, %ax            # imm = 0xA6B7
	cmpw	$-27806, %ax            # imm = 0x9362
	jne	.LBB32_882
# %bb.541:                              # %check_legal.split2200
	movw	$-27806, BasicBlockSignatureTracker # imm = 0x9362
	movw	$-22857, RunTimeSignatureAdjuster # imm = 0xA6B7
# %bb.542:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$13794, %ax             # imm = 0x35E2
	jne	.LBB32_882
# %bb.543:                              # %check_legal.split2598
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$13794, BasicBlockSignatureTracker # imm = 0x35E2
	movw	$54, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_552
# %bb.544:                              # %Buffer__32
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10954, %ax             # imm = 0x2ACA
	cmpw	$7976, %ax              # imm = 0x1F28
	jne	.LBB32_882
# %bb.545:                              # %check_legal.split2202
	movw	$7976, BasicBlockSignatureTracker # imm = 0x1F28
	movw	$10954, RunTimeSignatureAdjuster # imm = 0x2ACA
# %bb.546:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$13799, %ax             # imm = 0x35E7
	jne	.LBB32_882
# %bb.547:                              # %check_legal.split2600
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$13799, BasicBlockSignatureTracker # imm = 0x35E7
	movw	$51, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_552
# %bb.548:                              # %Buffer__33
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29664, %ax            # imm = 0x8C20
	cmpw	$-17977, %ax            # imm = 0xB9C7
	jne	.LBB32_882
# %bb.549:                              # %check_legal.split2204
	movw	$-17977, BasicBlockSignatureTracker # imm = 0xB9C7
	movw	$-29664, RunTimeSignatureAdjuster # imm = 0x8C20
# %bb.550:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$13802, %ax             # imm = 0x35EA
	jne	.LBB32_882
# %bb.551:                              # %check_legal.split2602
	movl	$1, (%r14)
	movw	$13802, BasicBlockSignatureTracker # imm = 0x35EA
	movw	$6491, RunTimeSignatureAdjuster # imm = 0x195B
	jmp	.LBB32_864
.LBB32_552:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$13803, %ax             # imm = 0x35EB
	jne	.LBB32_882
# %bb.553:                              # %check_legal.split2198
	movw	$13803, BasicBlockSignatureTracker # imm = 0x35EB
	movw	$47, RunTimeSignatureAdjuster
	jmp	.LBB32_676
.LBB32_554:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$220, %ax
	cmpw	$13818, %ax             # imm = 0x35FA
	jne	.LBB32_882
# %bb.555:                              # %check_legal.split2164
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$13818, BasicBlockSignatureTracker # imm = 0x35FA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_576
# %bb.556:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1014, %ax              # imm = 0x3F6
	cmpw	$13836, %ax             # imm = 0x360C
	jne	.LBB32_882
# %bb.557:                              # %check_legal.split2206
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$13836, BasicBlockSignatureTracker # imm = 0x360C
	movw	$1014, RunTimeSignatureAdjuster # imm = 0x3F6
	cmpl	%ecx, %eax
	je	.LBB32_576
# %bb.558:                              # %Buffer__34
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30868, %ax            # imm = 0x876C
	cmpw	$-20128, %ax            # imm = 0xB160
	jne	.LBB32_882
# %bb.559:                              # %check_legal.split2210
	movw	$-20128, BasicBlockSignatureTracker # imm = 0xB160
	movw	$-30868, RunTimeSignatureAdjuster # imm = 0x876C
# %bb.560:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$13851, %ax             # imm = 0x361B
	jne	.LBB32_882
# %bb.561:                              # %check_legal.split2604
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$13851, BasicBlockSignatureTracker # imm = 0x361B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_568
# %bb.562:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$13855, %ax             # imm = 0x361F
	jne	.LBB32_882
# %bb.563:                              # %check_legal.split2212
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$13855, BasicBlockSignatureTracker # imm = 0x361F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_566
# %bb.564:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$13859, %ax             # imm = 0x3623
	jne	.LBB32_882
# %bb.565:                              # %check_legal.split2216
	movl	$1, (%r14)
	movw	$13859, BasicBlockSignatureTracker # imm = 0x3623
	movw	$6802, RunTimeSignatureAdjuster # imm = 0x1A92
	jmp	.LBB32_864
.LBB32_566:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$13861, %ax             # imm = 0x3625
	jne	.LBB32_882
# %bb.567:                              # %check_legal.split2218
	movw	$13861, BasicBlockSignatureTracker # imm = 0x3625
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_574
.LBB32_568:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$13868, %ax             # imm = 0x362C
	jne	.LBB32_882
# %bb.569:                              # %check_legal.split2214
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$13868, BasicBlockSignatureTracker # imm = 0x362C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_572
# %bb.570:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$13871, %ax             # imm = 0x362F
	jne	.LBB32_882
# %bb.571:                              # %check_legal.split2222
	movl	$1, (%r14)
	movw	$13871, BasicBlockSignatureTracker # imm = 0x362F
	movw	$6814, RunTimeSignatureAdjuster # imm = 0x1A9E
	jmp	.LBB32_864
.LBB32_572:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$100, %ax
	cmpw	$13896, %ax             # imm = 0x3648
	jne	.LBB32_882
# %bb.573:                              # %check_legal.split2224
	movw	$13896, BasicBlockSignatureTracker # imm = 0x3648
	movw	$109, RunTimeSignatureAdjuster
.LBB32_574:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$115, %ax
	xorw	%cx, %ax
	cmpw	$13910, %ax             # imm = 0x3656
	jne	.LBB32_882
# %bb.575:                              # %check_legal.split2220
	movw	$13910, BasicBlockSignatureTracker # imm = 0x3656
	movw	$940, RunTimeSignatureAdjuster # imm = 0x3AC
.LBB32_576:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$935, %ax               # imm = 0x3A7
	xorw	%cx, %ax
	cmpw	$13917, %ax             # imm = 0x365D
	jne	.LBB32_882
# %bb.577:                              # %check_legal.split2208
	movw	$13917, BasicBlockSignatureTracker # imm = 0x365D
	movw	$921, RunTimeSignatureAdjuster # imm = 0x399
	jmp	.LBB32_676
.LBB32_578:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$836, %ax               # imm = 0x344
	cmpw	$13922, %ax             # imm = 0x3662
	jne	.LBB32_882
# %bb.579:                              # %check_legal.split2166
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$13922, BasicBlockSignatureTracker # imm = 0x3662
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_600
# %bb.580:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$13945, %ax             # imm = 0x3679
	jne	.LBB32_882
# %bb.581:                              # %check_legal.split2226
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$13945, BasicBlockSignatureTracker # imm = 0x3679
	movw	$27, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_600
# %bb.582:                              # %Buffer__35
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-4384, %ax             # imm = 0xEEE0
	cmpw	$-10087, %ax            # imm = 0xD899
	jne	.LBB32_882
# %bb.583:                              # %check_legal.split2230
	movw	$-10087, BasicBlockSignatureTracker # imm = 0xD899
	movw	$-4384, RunTimeSignatureAdjuster # imm = 0xEEE0
# %bb.584:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$13946, %ax             # imm = 0x367A
	jne	.LBB32_882
# %bb.585:                              # %check_legal.split2606
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$13946, BasicBlockSignatureTracker # imm = 0x367A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_592
# %bb.586:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$13949, %ax             # imm = 0x367D
	jne	.LBB32_882
# %bb.587:                              # %check_legal.split2232
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$13949, BasicBlockSignatureTracker # imm = 0x367D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_590
# %bb.588:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$249, %ax
	cmpw	$13956, %ax             # imm = 0x3684
	jne	.LBB32_882
# %bb.589:                              # %check_legal.split2236
	movl	$1, (%r14)
	movw	$13956, BasicBlockSignatureTracker # imm = 0x3684
	movw	$6709, RunTimeSignatureAdjuster # imm = 0x1A35
	jmp	.LBB32_864
.LBB32_590:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$248, %ax
	cmpw	$13957, %ax             # imm = 0x3685
	jne	.LBB32_882
# %bb.591:                              # %check_legal.split2238
	movw	$13957, BasicBlockSignatureTracker # imm = 0x3685
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_598
.LBB32_592:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$246, %ax
	cmpw	$13964, %ax             # imm = 0x368C
	jne	.LBB32_882
# %bb.593:                              # %check_legal.split2234
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$13964, BasicBlockSignatureTracker # imm = 0x368C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_596
# %bb.594:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$13970, %ax             # imm = 0x3692
	jne	.LBB32_882
# %bb.595:                              # %check_legal.split2242
	movl	$1, (%r14)
	movw	$13970, BasicBlockSignatureTracker # imm = 0x3692
	movw	$6691, RunTimeSignatureAdjuster # imm = 0x1A23
	jmp	.LBB32_864
.LBB32_596:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$13976, %ax             # imm = 0x3698
	jne	.LBB32_882
# %bb.597:                              # %check_legal.split2244
	movw	$13976, BasicBlockSignatureTracker # imm = 0x3698
	movw	$29, RunTimeSignatureAdjuster
.LBB32_598:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$13992, %ax             # imm = 0x36A8
	jne	.LBB32_882
# %bb.599:                              # %check_legal.split2240
	movw	$13992, BasicBlockSignatureTracker # imm = 0x36A8
	movw	$202, RunTimeSignatureAdjuster
.LBB32_600:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$203, %ax
	xorw	%cx, %ax
	cmpw	$13993, %ax             # imm = 0x36A9
	jne	.LBB32_882
# %bb.601:                              # %check_legal.split2228
	movw	$13993, BasicBlockSignatureTracker # imm = 0x36A9
	movw	$877, RunTimeSignatureAdjuster # imm = 0x36D
	jmp	.LBB32_676
.LBB32_602:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$919, %ax               # imm = 0x397
	cmpw	$14001, %ax             # imm = 0x36B1
	jne	.LBB32_882
# %bb.603:                              # %check_legal.split2168
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movq	(%r11), %rdx
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rdx
	movslq	4(%rdx), %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$14001, BasicBlockSignatureTracker # imm = 0x36B1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_618
# %bb.604:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$14019, %ax             # imm = 0x36C3
	jne	.LBB32_882
# %bb.605:                              # %check_legal.split2246
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$14019, BasicBlockSignatureTracker # imm = 0x36C3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_616
# %bb.606:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$39, %ax
	cmpw	$14052, %ax             # imm = 0x36E4
	jne	.LBB32_882
# %bb.607:                              # %check_legal.split2250
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$14052, BasicBlockSignatureTracker # imm = 0x36E4
	movw	$39, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_616
# %bb.608:                              # %Buffer__36
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14660, %ax             # imm = 0x3944
	cmpw	$4000, %ax              # imm = 0xFA0
	jne	.LBB32_882
# %bb.609:                              # %check_legal.split2254
	movw	$4000, BasicBlockSignatureTracker # imm = 0xFA0
	movw	$14660, RunTimeSignatureAdjuster # imm = 0x3944
# %bb.610:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$14063, %ax             # imm = 0x36EF
	jne	.LBB32_882
# %bb.611:                              # %check_legal.split2608
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$14063, BasicBlockSignatureTracker # imm = 0x36EF
	movw	$44, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_616
# %bb.612:                              # %Buffer__37
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14672, %ax            # imm = 0xC6B0
	cmpw	$-4001, %ax             # imm = 0xF05F
	jne	.LBB32_882
# %bb.613:                              # %check_legal.split2256
	movw	$-4001, BasicBlockSignatureTracker # imm = 0xF05F
	movw	$-14672, RunTimeSignatureAdjuster # imm = 0xC6B0
# %bb.614:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$14065, %ax             # imm = 0x36F1
	jne	.LBB32_882
# %bb.615:                              # %check_legal.split2610
	movl	$1, (%r14)
	movw	$14065, BasicBlockSignatureTracker # imm = 0x36F1
	movw	$6720, RunTimeSignatureAdjuster # imm = 0x1A40
	jmp	.LBB32_864
.LBB32_616:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$451, %ax               # imm = 0x1C3
	xorw	%cx, %ax
	cmpw	$14080, %ax             # imm = 0x3700
	jne	.LBB32_882
# %bb.617:                              # %check_legal.split2252
	movw	$14080, BasicBlockSignatureTracker # imm = 0x3700
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_672
.LBB32_618:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$442, %ax               # imm = 0x1BA
	cmpw	$14091, %ax             # imm = 0x370B
	jne	.LBB32_882
# %bb.619:                              # %check_legal.split2248
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$14091, BasicBlockSignatureTracker # imm = 0x370B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_634
# %bb.620:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$14107, %ax             # imm = 0x371B
	jne	.LBB32_882
# %bb.621:                              # %check_legal.split2260
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$14107, BasicBlockSignatureTracker # imm = 0x371B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_632
# %bb.622:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$14112, %ax             # imm = 0x3720
	jne	.LBB32_882
# %bb.623:                              # %check_legal.split2264
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$14112, BasicBlockSignatureTracker # imm = 0x3720
	movw	$59, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_632
# %bb.624:                              # %Buffer__38
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12641, %ax             # imm = 0x3161
	cmpw	$1601, %ax              # imm = 0x641
	jne	.LBB32_882
# %bb.625:                              # %check_legal.split2268
	movw	$1601, BasicBlockSignatureTracker # imm = 0x641
	movw	$12641, RunTimeSignatureAdjuster # imm = 0x3161
# %bb.626:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$14117, %ax             # imm = 0x3725
	jne	.LBB32_882
# %bb.627:                              # %check_legal.split2612
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$14117, BasicBlockSignatureTracker # imm = 0x3725
	movw	$62, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_632
# %bb.628:                              # %Buffer__39
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6404, %ax              # imm = 0x1904
	cmpw	$11809, %ax             # imm = 0x2E21
	jne	.LBB32_882
# %bb.629:                              # %check_legal.split2270
	movw	$11809, BasicBlockSignatureTracker # imm = 0x2E21
	movw	$6404, RunTimeSignatureAdjuster # imm = 0x1904
# %bb.630:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$14123, %ax             # imm = 0x372B
	jne	.LBB32_882
# %bb.631:                              # %check_legal.split2614
	movl	$1, (%r14)
	movw	$14123, BasicBlockSignatureTracker # imm = 0x372B
	movw	$7066, RunTimeSignatureAdjuster # imm = 0x1B9A
	jmp	.LBB32_864
.LBB32_632:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$14126, %ax             # imm = 0x372E
	jne	.LBB32_882
# %bb.633:                              # %check_legal.split2266
	movw	$14126, BasicBlockSignatureTracker # imm = 0x372E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_670
.LBB32_634:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$14133, %ax             # imm = 0x3735
	jne	.LBB32_882
# %bb.635:                              # %check_legal.split2262
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$14133, BasicBlockSignatureTracker # imm = 0x3735
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_650
# %bb.636:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$125, %ax
	cmpw	$14152, %ax             # imm = 0x3748
	jne	.LBB32_882
# %bb.637:                              # %check_legal.split2274
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$14152, BasicBlockSignatureTracker # imm = 0x3748
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_648
# %bb.638:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$14162, %ax             # imm = 0x3752
	jne	.LBB32_882
# %bb.639:                              # %check_legal.split2278
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$14162, BasicBlockSignatureTracker # imm = 0x3752
	movw	$26, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_648
# %bb.640:                              # %Buffer__40
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9754, %ax              # imm = 0x261A
	cmpw	$4424, %ax              # imm = 0x1148
	jne	.LBB32_882
# %bb.641:                              # %check_legal.split2282
	movw	$4424, BasicBlockSignatureTracker # imm = 0x1148
	movw	$9754, RunTimeSignatureAdjuster # imm = 0x261A
# %bb.642:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$14163, %ax             # imm = 0x3753
	jne	.LBB32_882
# %bb.643:                              # %check_legal.split2616
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$14163, BasicBlockSignatureTracker # imm = 0x3753
	movw	$27, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_648
# %bb.644:                              # %Buffer__41
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17703, %ax             # imm = 0x4527
	cmpw	$29300, %ax             # imm = 0x7274
	jne	.LBB32_882
# %bb.645:                              # %check_legal.split2284
	movw	$29300, BasicBlockSignatureTracker # imm = 0x7274
	movw	$17703, RunTimeSignatureAdjuster # imm = 0x4527
# %bb.646:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$14173, %ax             # imm = 0x375D
	jne	.LBB32_882
# %bb.647:                              # %check_legal.split2618
	movl	$1, (%r14)
	movw	$14173, BasicBlockSignatureTracker # imm = 0x375D
	movw	$7148, RunTimeSignatureAdjuster # imm = 0x1BEC
	jmp	.LBB32_864
.LBB32_648:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$40, %ax
	xorw	%cx, %ax
	cmpw	$14176, %ax             # imm = 0x3760
	jne	.LBB32_882
# %bb.649:                              # %check_legal.split2280
	movw	$14176, BasicBlockSignatureTracker # imm = 0x3760
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_668
.LBB32_650:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$93, %ax
	cmpw	$14184, %ax             # imm = 0x3768
	jne	.LBB32_882
# %bb.651:                              # %check_legal.split2276
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	(%r10), %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$14184, BasicBlockSignatureTracker # imm = 0x3768
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_666
# %bb.652:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$14186, %ax             # imm = 0x376A
	jne	.LBB32_882
# %bb.653:                              # %check_legal.split2288
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$14186, BasicBlockSignatureTracker # imm = 0x376A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_664
# %bb.654:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$232, %ax
	cmpw	$14210, %ax             # imm = 0x3782
	jne	.LBB32_882
# %bb.655:                              # %check_legal.split2292
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$14210, BasicBlockSignatureTracker # imm = 0x3782
	movw	$232, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_664
# %bb.656:                              # %Buffer__42
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1153, %ax              # imm = 0x481
	cmpw	$13059, %ax             # imm = 0x3303
	jne	.LBB32_882
# %bb.657:                              # %check_legal.split2296
	movw	$13059, BasicBlockSignatureTracker # imm = 0x3303
	movw	$1153, RunTimeSignatureAdjuster # imm = 0x481
# %bb.658:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$14211, %ax             # imm = 0x3783
	jne	.LBB32_882
# %bb.659:                              # %check_legal.split2620
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$14211, BasicBlockSignatureTracker # imm = 0x3783
	movw	$233, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB32_664
# %bb.660:                              # %Buffer__43
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22832, %ax            # imm = 0xA6D0
	cmpw	$-28333, %ax            # imm = 0x9153
	jne	.LBB32_882
# %bb.661:                              # %check_legal.split2298
	movw	$-28333, BasicBlockSignatureTracker # imm = 0x9153
	movw	$-22832, RunTimeSignatureAdjuster # imm = 0xA6D0
# %bb.662:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$14220, %ax             # imm = 0x378C
	jne	.LBB32_882
# %bb.663:                              # %check_legal.split2622
	movl	$1, (%r14)
	movw	$14220, BasicBlockSignatureTracker # imm = 0x378C
	movw	$6973, RunTimeSignatureAdjuster # imm = 0x1B3D
	jmp	.LBB32_864
.LBB32_664:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$201, %ax
	xorw	%cx, %ax
	cmpw	$14243, %ax             # imm = 0x37A3
	jne	.LBB32_882
# %bb.665:                              # %check_legal.split2294
	movw	$14243, BasicBlockSignatureTracker # imm = 0x37A3
	movw	$203, RunTimeSignatureAdjuster
.LBB32_666:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$217, %ax
	xorw	%cx, %ax
	cmpw	$14257, %ax             # imm = 0x37B1
	jne	.LBB32_882
# %bb.667:                              # %check_legal.split2290
	movw	$14257, BasicBlockSignatureTracker # imm = 0x37B1
	movw	$209, RunTimeSignatureAdjuster
.LBB32_668:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$167, %ax
	xorw	%cx, %ax
	cmpw	$14279, %ax             # imm = 0x37C7
	jne	.LBB32_882
# %bb.669:                              # %check_legal.split2286
	movw	$14279, BasicBlockSignatureTracker # imm = 0x37C7
	movw	$233, RunTimeSignatureAdjuster
.LBB32_670:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$202, %ax
	xorw	%cx, %ax
	cmpw	$14308, %ax             # imm = 0x37E4
	jne	.LBB32_882
# %bb.671:                              # %check_legal.split2272
	movw	$14308, BasicBlockSignatureTracker # imm = 0x37E4
	movw	$228, RunTimeSignatureAdjuster
.LBB32_672:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$230, %ax
	xorw	%cx, %ax
	cmpw	$14310, %ax             # imm = 0x37E6
	jne	.LBB32_882
# %bb.673:                              # %check_legal.split2258
	movw	$14310, BasicBlockSignatureTracker # imm = 0x37E6
	movw	$546, RunTimeSignatureAdjuster # imm = 0x222
	jmp	.LBB32_676
.LBB32_674:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$725, %ax               # imm = 0x2D5
	cmpw	$14323, %ax             # imm = 0x37F3
	jne	.LBB32_882
# %bb.675:                              # %check_legal.split2158
	movw	$14323, BasicBlockSignatureTracker # imm = 0x37F3
	movw	$567, RunTimeSignatureAdjuster # imm = 0x237
.LBB32_676:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$563, %ax               # imm = 0x233
	xorw	%cx, %ax
	cmpw	$14327, %ax             # imm = 0x37F7
	jne	.LBB32_882
# %bb.677:                              # %check_legal.split2194
	movslq	(%r10), %rax
	movl	board(,%rax,4), %eax
	movw	$14327, BasicBlockSignatureTracker # imm = 0x37F7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB32_854
# %bb.678:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4081, %ax              # imm = 0xFF1
	cmpw	$14342, %ax             # imm = 0x3806
	jne	.LBB32_882
# %bb.679:                              # %check_legal.split2300
	movslq	(%r9), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$14342, BasicBlockSignatureTracker # imm = 0x3806
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_720
# %bb.680:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$14349, %ax             # imm = 0x380D
	jne	.LBB32_882
# %bb.681:                              # %check_legal.split2304
	movl	wking_loc, %eax
	movl	(%r9), %ecx
	movw	$14349, BasicBlockSignatureTracker # imm = 0x380D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB32_700
# %bb.682:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$35, %ax
	cmpw	$14382, %ax             # imm = 0x382E
	jne	.LBB32_882
# %bb.683:                              # %check_legal.split2308
	movl	wking_loc, %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$14382, BasicBlockSignatureTracker # imm = 0x382E
	movw	$0, RunTimeSignatureAdjuster
.LBB32_684:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$14386, %ax             # imm = 0x3832
	jne	.LBB32_874
# %bb.685:                              # %check_legal.split2312
                                        #   in Loop: Header=BB32_684 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14386, BasicBlockSignatureTracker # imm = 0x3832
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_690
# %bb.686:                              #   in Loop: Header=BB32_684 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$113, %ax
	cmpw	$14403, %ax             # imm = 0x3843
	jne	.LBB32_874
# %bb.687:                              # %check_legal.split2314
                                        #   in Loop: Header=BB32_684 Depth=1
	movw	$14403, BasicBlockSignatureTracker # imm = 0x3843
	movw	$0, RunTimeSignatureAdjuster
# %bb.688:                              #   in Loop: Header=BB32_684 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$14410, %ax             # imm = 0x384A
	jne	.LBB32_874
# %bb.689:                              # %check_legal.split2318
                                        #   in Loop: Header=BB32_684 Depth=1
	movl	(%r8), %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$14410, BasicBlockSignatureTracker # imm = 0x384A
	movw	$100, RunTimeSignatureAdjuster
	jmp	.LBB32_684
.LBB32_690:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$99, %ax
	cmpw	$14417, %ax             # imm = 0x3851
	jne	.LBB32_882
# %bb.691:                              # %check_legal.split2316
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14417, BasicBlockSignatureTracker # imm = 0x3851
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB32_694
# %bb.692:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$14422, %ax             # imm = 0x3856
	jne	.LBB32_882
# %bb.693:                              # %check_legal.split2322
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14422, BasicBlockSignatureTracker # imm = 0x3856
	movw	$7, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB32_696
.LBB32_694:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$14436, %ax             # imm = 0x3864
	jne	.LBB32_882
# %bb.695:                              # %check_legal.split2320
	movl	$0, (%r14)
	movw	$14436, BasicBlockSignatureTracker # imm = 0x3864
	movw	$5333, RunTimeSignatureAdjuster # imm = 0x14D5
	jmp	.LBB32_864
.LBB32_696:                             # %Buffer__44
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22252, %ax            # imm = 0xA914
	cmpw	$-28350, %ax            # imm = 0x9142
	jne	.LBB32_882
# %bb.697:                              # %check_legal.split2324
	movw	$-28350, BasicBlockSignatureTracker # imm = 0x9142
	movw	$-22252, RunTimeSignatureAdjuster # imm = 0xA914
# %bb.698:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$14454, %ax             # imm = 0x3876
	jne	.LBB32_882
# %bb.699:                              # %check_legal.split2624
	movw	$14454, BasicBlockSignatureTracker # imm = 0x3876
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_718
.LBB32_700:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$14457, %ax             # imm = 0x3879
	jne	.LBB32_882
# %bb.701:                              # %check_legal.split2310
	movl	wking_loc, %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$14457, BasicBlockSignatureTracker # imm = 0x3879
	movw	$0, RunTimeSignatureAdjuster
.LBB32_702:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$14459, %ax             # imm = 0x387B
	jne	.LBB32_875
# %bb.703:                              # %check_legal.split2328
                                        #   in Loop: Header=BB32_702 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14459, BasicBlockSignatureTracker # imm = 0x387B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_708
# %bb.704:                              #   in Loop: Header=BB32_702 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$237, %ax
	cmpw	$14486, %ax             # imm = 0x3896
	jne	.LBB32_875
# %bb.705:                              # %check_legal.split2330
                                        #   in Loop: Header=BB32_702 Depth=1
	movw	$14486, BasicBlockSignatureTracker # imm = 0x3896
	movw	$0, RunTimeSignatureAdjuster
# %bb.706:                              #   in Loop: Header=BB32_702 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$14488, %ax             # imm = 0x3898
	jne	.LBB32_875
# %bb.707:                              # %check_legal.split2334
                                        #   in Loop: Header=BB32_702 Depth=1
	movl	(%r8), %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$14488, BasicBlockSignatureTracker # imm = 0x3898
	movw	$225, RunTimeSignatureAdjuster
	jmp	.LBB32_702
.LBB32_708:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$210, %ax
	cmpw	$14505, %ax             # imm = 0x38A9
	jne	.LBB32_882
# %bb.709:                              # %check_legal.split2332
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14505, BasicBlockSignatureTracker # imm = 0x38A9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB32_712
# %bb.710:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$14515, %ax             # imm = 0x38B3
	jne	.LBB32_882
# %bb.711:                              # %check_legal.split2338
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14515, BasicBlockSignatureTracker # imm = 0x38B3
	movw	$26, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB32_714
.LBB32_712:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$14518, %ax             # imm = 0x38B6
	jne	.LBB32_882
# %bb.713:                              # %check_legal.split2336
	movl	$0, (%r14)
	movw	$14518, BasicBlockSignatureTracker # imm = 0x38B6
	movw	$5127, RunTimeSignatureAdjuster # imm = 0x1407
	jmp	.LBB32_864
.LBB32_714:                             # %Buffer__45
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18106, %ax             # imm = 0x46BA
	cmpw	$32265, %ax             # imm = 0x7E09
	jne	.LBB32_882
# %bb.715:                              # %check_legal.split2340
	movw	$32265, BasicBlockSignatureTracker # imm = 0x7E09
	movw	$18106, RunTimeSignatureAdjuster # imm = 0x46BA
# %bb.716:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$117, %ax
	xorw	%cx, %ax
	cmpw	$14534, %ax             # imm = 0x38C6
	jne	.LBB32_882
# %bb.717:                              # %check_legal.split2626
	movw	$14534, BasicBlockSignatureTracker # imm = 0x38C6
	movw	$176, RunTimeSignatureAdjuster
.LBB32_718:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$163, %ax
	xorw	%cx, %ax
	cmpw	$14549, %ax             # imm = 0x38D5
	jne	.LBB32_882
# %bb.719:                              # %check_legal.split2326
	movw	$14549, BasicBlockSignatureTracker # imm = 0x38D5
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_852
.LBB32_720:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$216, %ax
	cmpw	$14558, %ax             # imm = 0x38DE
	jne	.LBB32_882
# %bb.721:                              # %check_legal.split2306
	movslq	(%r9), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xrank(,%rcx,4), %ecx
	movw	$14558, BasicBlockSignatureTracker # imm = 0x38DE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_762
# %bb.722:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$14559, %ax             # imm = 0x38DF
	jne	.LBB32_882
# %bb.723:                              # %check_legal.split2344
	movl	wking_loc, %eax
	movl	(%r9), %ecx
	movw	$14559, BasicBlockSignatureTracker # imm = 0x38DF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB32_742
# %bb.724:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$466, %ax               # imm = 0x1D2
	cmpw	$14605, %ax             # imm = 0x390D
	jne	.LBB32_882
# %bb.725:                              # %check_legal.split2348
	movl	wking_loc, %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$14605, BasicBlockSignatureTracker # imm = 0x390D
	movw	$0, RunTimeSignatureAdjuster
.LBB32_726:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$14607, %ax             # imm = 0x390F
	jne	.LBB32_876
# %bb.727:                              # %check_legal.split2352
                                        #   in Loop: Header=BB32_726 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14607, BasicBlockSignatureTracker # imm = 0x390F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_732
# %bb.728:                              #   in Loop: Header=BB32_726 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$14622, %ax             # imm = 0x391E
	jne	.LBB32_876
# %bb.729:                              # %check_legal.split2354
                                        #   in Loop: Header=BB32_726 Depth=1
	movw	$14622, BasicBlockSignatureTracker # imm = 0x391E
	movw	$0, RunTimeSignatureAdjuster
# %bb.730:                              #   in Loop: Header=BB32_726 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$14625, %ax             # imm = 0x3921
	jne	.LBB32_876
# %bb.731:                              # %check_legal.split2358
                                        #   in Loop: Header=BB32_726 Depth=1
	movl	(%r8), %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$14625, BasicBlockSignatureTracker # imm = 0x3921
	movw	$44, RunTimeSignatureAdjuster
	jmp	.LBB32_726
.LBB32_732:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$14654, %ax             # imm = 0x393E
	jne	.LBB32_882
# %bb.733:                              # %check_legal.split2356
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14654, BasicBlockSignatureTracker # imm = 0x393E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB32_736
# %bb.734:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$14656, %ax             # imm = 0x3940
	jne	.LBB32_882
# %bb.735:                              # %check_legal.split2362
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14656, BasicBlockSignatureTracker # imm = 0x3940
	movw	$126, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB32_738
.LBB32_736:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$119, %ax
	xorw	%cx, %ax
	cmpw	$14665, %ax             # imm = 0x3949
	jne	.LBB32_882
# %bb.737:                              # %check_legal.split2360
	movl	$0, (%r14)
	movw	$14665, BasicBlockSignatureTracker # imm = 0x3949
	movw	$5624, RunTimeSignatureAdjuster # imm = 0x15F8
	jmp	.LBB32_864
.LBB32_738:                             # %Buffer__46
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-32432, %ax            # imm = 0x8150
	cmpw	$-18416, %ax            # imm = 0xB810
	jne	.LBB32_882
# %bb.739:                              # %check_legal.split2364
	movw	$-18416, BasicBlockSignatureTracker # imm = 0xB810
	movw	$-32432, RunTimeSignatureAdjuster # imm = 0x8150
# %bb.740:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$14683, %ax             # imm = 0x395B
	jne	.LBB32_882
# %bb.741:                              # %check_legal.split2628
	movw	$14683, BasicBlockSignatureTracker # imm = 0x395B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_760
.LBB32_742:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$348, %ax               # imm = 0x15C
	cmpw	$14723, %ax             # imm = 0x3983
	jne	.LBB32_882
# %bb.743:                              # %check_legal.split2350
	movl	wking_loc, %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$14723, BasicBlockSignatureTracker # imm = 0x3983
	movw	$0, RunTimeSignatureAdjuster
.LBB32_744:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$14726, %ax             # imm = 0x3986
	jne	.LBB32_877
# %bb.745:                              # %check_legal.split2368
                                        #   in Loop: Header=BB32_744 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14726, BasicBlockSignatureTracker # imm = 0x3986
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_750
# %bb.746:                              #   in Loop: Header=BB32_744 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$14732, %ax             # imm = 0x398C
	jne	.LBB32_877
# %bb.747:                              # %check_legal.split2370
                                        #   in Loop: Header=BB32_744 Depth=1
	movw	$14732, BasicBlockSignatureTracker # imm = 0x398C
	movw	$0, RunTimeSignatureAdjuster
# %bb.748:                              #   in Loop: Header=BB32_744 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$14739, %ax             # imm = 0x3993
	jne	.LBB32_877
# %bb.749:                              # %check_legal.split2374
                                        #   in Loop: Header=BB32_744 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$14739, BasicBlockSignatureTracker # imm = 0x3993
	movw	$16, RunTimeSignatureAdjuster
	jmp	.LBB32_744
.LBB32_750:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$14745, %ax             # imm = 0x3999
	jne	.LBB32_882
# %bb.751:                              # %check_legal.split2372
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14745, BasicBlockSignatureTracker # imm = 0x3999
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB32_754
# %bb.752:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$14746, %ax             # imm = 0x399A
	jne	.LBB32_882
# %bb.753:                              # %check_legal.split2378
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14746, BasicBlockSignatureTracker # imm = 0x399A
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB32_756
.LBB32_754:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$14751, %ax             # imm = 0x399F
	jne	.LBB32_882
# %bb.755:                              # %check_legal.split2376
	movl	$0, (%r14)
	movw	$14751, BasicBlockSignatureTracker # imm = 0x399F
	movw	$5422, RunTimeSignatureAdjuster # imm = 0x152E
	jmp	.LBB32_864
.LBB32_756:                             # %Buffer__47
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-32653, %ax            # imm = 0x8073
	cmpw	$-17943, %ax            # imm = 0xB9E9
	jne	.LBB32_882
# %bb.757:                              # %check_legal.split2380
	movw	$-17943, BasicBlockSignatureTracker # imm = 0xB9E9
	movw	$-32653, RunTimeSignatureAdjuster # imm = 0x8073
# %bb.758:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$14752, %ax             # imm = 0x39A0
	jne	.LBB32_882
# %bb.759:                              # %check_legal.split2630
	movw	$14752, BasicBlockSignatureTracker # imm = 0x39A0
	movw	$251, RunTimeSignatureAdjuster
.LBB32_760:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$248, %ax
	xorw	%cx, %ax
	cmpw	$14755, %ax             # imm = 0x39A3
	jne	.LBB32_882
# %bb.761:                              # %check_legal.split2366
	movw	$14755, BasicBlockSignatureTracker # imm = 0x39A3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_850
.LBB32_762:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$375, %ax               # imm = 0x177
	cmpw	$14761, %ax             # imm = 0x39A9
	jne	.LBB32_882
# %bb.763:                              # %check_legal.split2346
	movslq	(%r9), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagl(,%rcx,4), %ecx
	movw	$14761, BasicBlockSignatureTracker # imm = 0x39A9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_804
# %bb.764:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$14813, %ax             # imm = 0x39DD
	jne	.LBB32_882
# %bb.765:                              # %check_legal.split2384
	movl	wking_loc, %eax
	movl	(%r9), %ecx
	movw	$14813, BasicBlockSignatureTracker # imm = 0x39DD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB32_784
# %bb.766:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$14827, %ax             # imm = 0x39EB
	jne	.LBB32_882
# %bb.767:                              # %check_legal.split2388
	movl	wking_loc, %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$14827, BasicBlockSignatureTracker # imm = 0x39EB
	movw	$0, RunTimeSignatureAdjuster
.LBB32_768:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$14839, %ax             # imm = 0x39F7
	jne	.LBB32_878
# %bb.769:                              # %check_legal.split2392
                                        #   in Loop: Header=BB32_768 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14839, BasicBlockSignatureTracker # imm = 0x39F7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_774
# %bb.770:                              #   in Loop: Header=BB32_768 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$14840, %ax             # imm = 0x39F8
	jne	.LBB32_878
# %bb.771:                              # %check_legal.split2394
                                        #   in Loop: Header=BB32_768 Depth=1
	movw	$14840, BasicBlockSignatureTracker # imm = 0x39F8
	movw	$0, RunTimeSignatureAdjuster
# %bb.772:                              #   in Loop: Header=BB32_768 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$980, %ax               # imm = 0x3D4
	cmpw	$14892, %ax             # imm = 0x3A2C
	jne	.LBB32_878
# %bb.773:                              # %check_legal.split2398
                                        #   in Loop: Header=BB32_768 Depth=1
	movl	(%r8), %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$14892, BasicBlockSignatureTracker # imm = 0x3A2C
	movw	$967, RunTimeSignatureAdjuster # imm = 0x3C7
	jmp	.LBB32_768
.LBB32_774:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$966, %ax               # imm = 0x3C6
	cmpw	$14897, %ax             # imm = 0x3A31
	jne	.LBB32_882
# %bb.775:                              # %check_legal.split2396
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14897, BasicBlockSignatureTracker # imm = 0x3A31
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB32_778
# %bb.776:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$14901, %ax             # imm = 0x3A35
	jne	.LBB32_882
# %bb.777:                              # %check_legal.split2402
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14901, BasicBlockSignatureTracker # imm = 0x3A35
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB32_780
.LBB32_778:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$96, %ax
	xorw	%cx, %ax
	cmpw	$14929, %ax             # imm = 0x3A51
	jne	.LBB32_882
# %bb.779:                              # %check_legal.split2400
	movl	$0, (%r14)
	movw	$14929, BasicBlockSignatureTracker # imm = 0x3A51
	movw	$5856, RunTimeSignatureAdjuster # imm = 0x16E0
	jmp	.LBB32_864
.LBB32_780:                             # %Buffer__48
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-804, %ax              # imm = 0xFCDC
	cmpw	$-14615, %ax            # imm = 0xC6E9
	jne	.LBB32_882
# %bb.781:                              # %check_legal.split2404
	movw	$-14615, BasicBlockSignatureTracker # imm = 0xC6E9
	movw	$-804, RunTimeSignatureAdjuster # imm = 0xFCDC
# %bb.782:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$90, %ax
	xorw	%cx, %ax
	cmpw	$14959, %ax             # imm = 0x3A6F
	jne	.LBB32_882
# %bb.783:                              # %check_legal.split2632
	movw	$14959, BasicBlockSignatureTracker # imm = 0x3A6F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_802
.LBB32_784:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$943, %ax               # imm = 0x3AF
	cmpw	$14962, %ax             # imm = 0x3A72
	jne	.LBB32_882
# %bb.785:                              # %check_legal.split2390
	movl	wking_loc, %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$14962, BasicBlockSignatureTracker # imm = 0x3A72
	movw	$0, RunTimeSignatureAdjuster
.LBB32_786:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$224, %ax
	xorw	%cx, %ax
	cmpw	$14994, %ax             # imm = 0x3A92
	jne	.LBB32_879
# %bb.787:                              # %check_legal.split2408
                                        #   in Loop: Header=BB32_786 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$14994, BasicBlockSignatureTracker # imm = 0x3A92
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_792
# %bb.788:                              #   in Loop: Header=BB32_786 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$14996, %ax             # imm = 0x3A94
	jne	.LBB32_879
# %bb.789:                              # %check_legal.split2410
                                        #   in Loop: Header=BB32_786 Depth=1
	movw	$14996, BasicBlockSignatureTracker # imm = 0x3A94
	movw	$0, RunTimeSignatureAdjuster
# %bb.790:                              #   in Loop: Header=BB32_786 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$15005, %ax             # imm = 0x3A9D
	jne	.LBB32_879
# %bb.791:                              # %check_legal.split2414
                                        #   in Loop: Header=BB32_786 Depth=1
	movl	(%r8), %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$15005, BasicBlockSignatureTracker # imm = 0x3A9D
	movw	$239, RunTimeSignatureAdjuster
	jmp	.LBB32_786
.LBB32_792:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$15007, %ax             # imm = 0x3A9F
	jne	.LBB32_882
# %bb.793:                              # %check_legal.split2412
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$15007, BasicBlockSignatureTracker # imm = 0x3A9F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB32_796
# %bb.794:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$15010, %ax             # imm = 0x3AA2
	jne	.LBB32_882
# %bb.795:                              # %check_legal.split2418
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$15010, BasicBlockSignatureTracker # imm = 0x3AA2
	movw	$61, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB32_798
.LBB32_796:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$15011, %ax             # imm = 0x3AA3
	jne	.LBB32_882
# %bb.797:                              # %check_legal.split2416
	movl	$0, (%r14)
	movw	$15011, BasicBlockSignatureTracker # imm = 0x3AA3
	movw	$5650, RunTimeSignatureAdjuster # imm = 0x1612
	jmp	.LBB32_864
.LBB32_798:                             # %Buffer__49
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-13584, %ax            # imm = 0xCAF0
	cmpw	$-4014, %ax             # imm = 0xF052
	jne	.LBB32_882
# %bb.799:                              # %check_legal.split2420
	movw	$-4014, BasicBlockSignatureTracker # imm = 0xF052
	movw	$-13584, RunTimeSignatureAdjuster # imm = 0xCAF0
# %bb.800:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$15021, %ax             # imm = 0x3AAD
	jne	.LBB32_882
# %bb.801:                              # %check_legal.split2634
	movw	$15021, BasicBlockSignatureTracker # imm = 0x3AAD
	movw	$194, RunTimeSignatureAdjuster
.LBB32_802:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$223, %ax
	xorw	%cx, %ax
	cmpw	$15024, %ax             # imm = 0x3AB0
	jne	.LBB32_882
# %bb.803:                              # %check_legal.split2406
	movw	$15024, BasicBlockSignatureTracker # imm = 0x3AB0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_848
.LBB32_804:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$875, %ax               # imm = 0x36B
	cmpw	$15042, %ax             # imm = 0x3AC2
	jne	.LBB32_882
# %bb.805:                              # %check_legal.split2386
	movslq	(%r9), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rcx
	movl	Xdiagr(,%rcx,4), %ecx
	movw	$15042, BasicBlockSignatureTracker # imm = 0x3AC2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB32_846
# %bb.806:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$15044, %ax             # imm = 0x3AC4
	jne	.LBB32_882
# %bb.807:                              # %check_legal.split2424
	movl	wking_loc, %eax
	movl	(%r9), %ecx
	movw	$15044, BasicBlockSignatureTracker # imm = 0x3AC4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB32_826
# %bb.808:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$15049, %ax             # imm = 0x3AC9
	jne	.LBB32_882
# %bb.809:                              # %check_legal.split2428
	movl	wking_loc, %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$15049, BasicBlockSignatureTracker # imm = 0x3AC9
	movw	$0, RunTimeSignatureAdjuster
.LBB32_810:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$15055, %ax             # imm = 0x3ACF
	jne	.LBB32_880
# %bb.811:                              # %check_legal.split2432
                                        #   in Loop: Header=BB32_810 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$15055, BasicBlockSignatureTracker # imm = 0x3ACF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_816
# %bb.812:                              #   in Loop: Header=BB32_810 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$40, %ax
	cmpw	$15079, %ax             # imm = 0x3AE7
	jne	.LBB32_880
# %bb.813:                              # %check_legal.split2434
                                        #   in Loop: Header=BB32_810 Depth=1
	movw	$15079, BasicBlockSignatureTracker # imm = 0x3AE7
	movw	$0, RunTimeSignatureAdjuster
# %bb.814:                              #   in Loop: Header=BB32_810 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$502, %ax               # imm = 0x1F6
	cmpw	$15121, %ax             # imm = 0x3B11
	jne	.LBB32_880
# %bb.815:                              # %check_legal.split2438
                                        #   in Loop: Header=BB32_810 Depth=1
	movl	(%r8), %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$15121, BasicBlockSignatureTracker # imm = 0x3B11
	movw	$472, RunTimeSignatureAdjuster # imm = 0x1D8
	jmp	.LBB32_810
.LBB32_816:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$473, %ax               # imm = 0x1D9
	cmpw	$15126, %ax             # imm = 0x3B16
	jne	.LBB32_882
# %bb.817:                              # %check_legal.split2436
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$15126, BasicBlockSignatureTracker # imm = 0x3B16
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB32_820
# %bb.818:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$15150, %ax             # imm = 0x3B2E
	jne	.LBB32_882
# %bb.819:                              # %check_legal.split2442
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$15150, BasicBlockSignatureTracker # imm = 0x3B2E
	movw	$56, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB32_822
.LBB32_820:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$34, %ax
	xorw	%cx, %ax
	cmpw	$15156, %ax             # imm = 0x3B34
	jne	.LBB32_882
# %bb.821:                              # %check_legal.split2440
	movl	$0, (%r14)
	movw	$15156, BasicBlockSignatureTracker # imm = 0x3B34
	movw	$6021, RunTimeSignatureAdjuster # imm = 0x1785
	jmp	.LBB32_864
.LBB32_822:                             # %Buffer__50
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14295, %ax            # imm = 0xC829
	cmpw	$-3321, %ax             # imm = 0xF307
	jne	.LBB32_882
# %bb.823:                              # %check_legal.split2444
	movw	$-3321, BasicBlockSignatureTracker # imm = 0xF307
	movw	$-14295, RunTimeSignatureAdjuster # imm = 0xC829
# %bb.824:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$15173, %ax             # imm = 0x3B45
	jne	.LBB32_882
# %bb.825:                              # %check_legal.split2636
	movw	$15173, BasicBlockSignatureTracker # imm = 0x3B45
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB32_844
.LBB32_826:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$387, %ax               # imm = 0x183
	cmpw	$15175, %ax             # imm = 0x3B47
	jne	.LBB32_882
# %bb.827:                              # %check_legal.split2430
	movl	wking_loc, %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$15175, BasicBlockSignatureTracker # imm = 0x3B47
	movw	$0, RunTimeSignatureAdjuster
.LBB32_828:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$15193, %ax             # imm = 0x3B59
	jne	.LBB32_881
# %bb.829:                              # %check_legal.split2448
                                        #   in Loop: Header=BB32_828 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$15193, BasicBlockSignatureTracker # imm = 0x3B59
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB32_834
# %bb.830:                              #   in Loop: Header=BB32_828 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$15202, %ax             # imm = 0x3B62
	jne	.LBB32_881
# %bb.831:                              # %check_legal.split2450
                                        #   in Loop: Header=BB32_828 Depth=1
	movw	$15202, BasicBlockSignatureTracker # imm = 0x3B62
	movw	$0, RunTimeSignatureAdjuster
# %bb.832:                              #   in Loop: Header=BB32_828 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$15215, %ax             # imm = 0x3B6F
	jne	.LBB32_881
# %bb.833:                              # %check_legal.split2454
                                        #   in Loop: Header=BB32_828 Depth=1
	movl	(%r8), %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$15215, BasicBlockSignatureTracker # imm = 0x3B6F
	movw	$40, RunTimeSignatureAdjuster
	jmp	.LBB32_828
.LBB32_834:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$15216, %ax             # imm = 0x3B70
	jne	.LBB32_882
# %bb.835:                              # %check_legal.split2452
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$15216, BasicBlockSignatureTracker # imm = 0x3B70
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB32_838
# %bb.836:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$15227, %ax             # imm = 0x3B7B
	jne	.LBB32_882
# %bb.837:                              # %check_legal.split2458
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$15227, BasicBlockSignatureTracker # imm = 0x3B7B
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB32_840
.LBB32_838:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$247, %ax
	xorw	%cx, %ax
	cmpw	$15239, %ax             # imm = 0x3B87
	jne	.LBB32_882
# %bb.839:                              # %check_legal.split2456
	movl	$0, (%r14)
	movw	$15239, BasicBlockSignatureTracker # imm = 0x3B87
	movw	$5942, RunTimeSignatureAdjuster # imm = 0x1736
	jmp	.LBB32_864
.LBB32_840:                             # %Buffer__51
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13793, %ax             # imm = 0x35E1
	cmpw	$3738, %ax              # imm = 0xE9A
	jne	.LBB32_882
# %bb.841:                              # %check_legal.split2460
	movw	$3738, BasicBlockSignatureTracker # imm = 0xE9A
	movw	$13793, RunTimeSignatureAdjuster # imm = 0x35E1
# %bb.842:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$241, %ax
	xorw	%cx, %ax
	cmpw	$15242, %ax             # imm = 0x3B8A
	jne	.LBB32_882
# %bb.843:                              # %check_legal.split2638
	movw	$15242, BasicBlockSignatureTracker # imm = 0x3B8A
	movw	$207, RunTimeSignatureAdjuster
.LBB32_844:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$213, %ax
	xorw	%cx, %ax
	cmpw	$15248, %ax             # imm = 0x3B90
	jne	.LBB32_882
# %bb.845:                              # %check_legal.split2446
	movw	$15248, BasicBlockSignatureTracker # imm = 0x3B90
	movw	$338, RunTimeSignatureAdjuster # imm = 0x152
.LBB32_846:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$353, %ax               # imm = 0x161
	xorw	%cx, %ax
	cmpw	$15267, %ax             # imm = 0x3BA3
	jne	.LBB32_882
# %bb.847:                              # %check_legal.split2426
	movw	$15267, BasicBlockSignatureTracker # imm = 0x3BA3
	movw	$275, RunTimeSignatureAdjuster # imm = 0x113
.LBB32_848:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$280, %ax               # imm = 0x118
	xorw	%cx, %ax
	cmpw	$15272, %ax             # imm = 0x3BA8
	jne	.LBB32_882
# %bb.849:                              # %check_legal.split2422
	movw	$15272, BasicBlockSignatureTracker # imm = 0x3BA8
	movw	$523, RunTimeSignatureAdjuster # imm = 0x20B
.LBB32_850:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$522, %ax               # imm = 0x20A
	xorw	%cx, %ax
	cmpw	$15273, %ax             # imm = 0x3BA9
	jne	.LBB32_882
# %bb.851:                              # %check_legal.split2382
	movw	$15273, BasicBlockSignatureTracker # imm = 0x3BA9
	movw	$892, RunTimeSignatureAdjuster # imm = 0x37C
.LBB32_852:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$888, %ax               # imm = 0x378
	xorw	%cx, %ax
	cmpw	$15277, %ax             # imm = 0x3BAD
	jne	.LBB32_882
# %bb.853:                              # %check_legal.split2342
	movl	$1, (%r14)
	movw	$15277, BasicBlockSignatureTracker # imm = 0x3BAD
	movw	$5916, RunTimeSignatureAdjuster # imm = 0x171C
	jmp	.LBB32_864
.LBB32_854:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3150, %ax              # imm = 0xC4E
	cmpw	$15289, %ax             # imm = 0x3BB9
	jne	.LBB32_882
# %bb.855:                              # %check_legal.split2302
	movw	$15289, BasicBlockSignatureTracker # imm = 0x3BB9
	movw	$3931, RunTimeSignatureAdjuster # imm = 0xF5B
.LBB32_856:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3878, %ax              # imm = 0xF26
	xorw	%cx, %ax
	cmpw	$15300, %ax             # imm = 0x3BC4
	jne	.LBB32_882
# %bb.857:                              # %check_legal.split2144
	movl	wking_loc, %edi
	movw	$15300, BasicBlockSignatureTracker # imm = 0x3BC4
	movw	$9745, RunTimeSignatureAdjuster # imm = 0x2611
	xorl	%esi, %esi
	callq	is_attacked
	movw	$15300, BasicBlockSignatureTracker # imm = 0x3BC4
	movw	$9745, RunTimeSignatureAdjuster # imm = 0x2611
	movw	$15300, BasicBlockSignatureTracker # imm = 0x3BC4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB32_860
# %bb.858:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$15304, %ax             # imm = 0x3BC8
	jne	.LBB32_882
# %bb.859:                              # %check_legal.split2462
	movl	$0, (%r14)
	movw	$15304, BasicBlockSignatureTracker # imm = 0x3BC8
	movw	$6009, RunTimeSignatureAdjuster # imm = 0x1779
	jmp	.LBB32_864
.LBB32_860:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$15305, %ax             # imm = 0x3BC9
	jne	.LBB32_882
# %bb.861:                              # %check_legal.split2464
	movl	$1, (%r14)
	movw	$15305, BasicBlockSignatureTracker # imm = 0x3BC9
	movw	$6008, RunTimeSignatureAdjuster # imm = 0x1778
	jmp	.LBB32_864
.LBB32_862:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5504, %ax              # imm = 0x1580
	cmpw	$15330, %ax             # imm = 0x3BE2
	jne	.LBB32_882
# %bb.863:                              # %check_legal.split1816
	movl	$0, (%r14)
	movw	$15330, BasicBlockSignatureTracker # imm = 0x3BE2
	movw	$5971, RunTimeSignatureAdjuster # imm = 0x1753
.LBB32_864:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5981, %ax              # imm = 0x175D
	xorw	%cx, %ax
	cmpw	$15340, %ax             # imm = 0x3BEC
	jne	.LBB32_882
# %bb.865:                              # %check_legal.split1746
	movl	(%r14), %eax
	movw	$15340, BasicBlockSignatureTracker # imm = 0x3BEC
	movw	$-20153, RunTimeSignatureAdjuster # imm = 0xB147
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB32_866:                             # %CFerrorHandler.check_legal.loopexit
	jmp	.LBB32_882
.LBB32_867:                             # %CFerrorHandler.check_legal.loopexit1
	jmp	.LBB32_882
.LBB32_868:                             # %CFerrorHandler.check_legal.loopexit2
	jmp	.LBB32_882
.LBB32_869:                             # %CFerrorHandler.check_legal.loopexit3
	jmp	.LBB32_882
.LBB32_870:                             # %CFerrorHandler.check_legal.loopexit4
	jmp	.LBB32_882
.LBB32_871:                             # %CFerrorHandler.check_legal.loopexit5
	jmp	.LBB32_882
.LBB32_872:                             # %CFerrorHandler.check_legal.loopexit6
	jmp	.LBB32_882
.LBB32_873:                             # %CFerrorHandler.check_legal.loopexit7
	jmp	.LBB32_882
.LBB32_874:                             # %CFerrorHandler.check_legal.loopexit8
	jmp	.LBB32_882
.LBB32_875:                             # %CFerrorHandler.check_legal.loopexit9
	jmp	.LBB32_882
.LBB32_876:                             # %CFerrorHandler.check_legal.loopexit10
	jmp	.LBB32_882
.LBB32_877:                             # %CFerrorHandler.check_legal.loopexit11
	jmp	.LBB32_882
.LBB32_878:                             # %CFerrorHandler.check_legal.loopexit12
	jmp	.LBB32_882
.LBB32_879:                             # %CFerrorHandler.check_legal.loopexit13
	jmp	.LBB32_882
.LBB32_880:                             # %CFerrorHandler.check_legal.loopexit14
	jmp	.LBB32_882
.LBB32_881:                             # %CFerrorHandler.check_legal.loopexit15
	jmp	.LBB32_882
.LBB32_882:                             # %CFerrorHandler.check_legal
	callq	FAULT_DETECTED_CFC
.Lfunc_end32:
	.size	check_legal, .Lfunc_end32-check_legal
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI32_0:
	.quad	.LBB32_500
	.quad	.LBB32_674
	.quad	.LBB32_536
	.quad	.LBB32_674
	.quad	.LBB32_674
	.quad	.LBB32_674
	.quad	.LBB32_578
	.quad	.LBB32_674
	.quad	.LBB32_602
	.quad	.LBB32_674
	.quad	.LBB32_554
.LJTI32_1:
	.quad	.LBB32_123
	.quad	.LBB32_297
	.quad	.LBB32_159
	.quad	.LBB32_297
	.quad	.LBB32_297
	.quad	.LBB32_297
	.quad	.LBB32_201
	.quad	.LBB32_297
	.quad	.LBB32_225
	.quad	.LBB32_297
	.quad	.LBB32_177
                                        # -- End function
	.text
	.globl	gen                     # -- Begin function gen
	.p2align	4, 0x90
	.type	gen,@function
gen:                                    # @gen
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.1:                                # %gen.split2234
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.2:                                # %gen.split2232
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.3:                                # %gen.split2230
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.4:                                # %gen.split2228
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.5:                                # %gen.split2226
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.6:                                # %gen.split2224
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.7:                                # %gen.split2222
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.8:                                # %gen.split2220
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.9:                                # %gen.split2218
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.10:                               # %gen.split2216
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.11:                               # %gen.split2214
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.12:                               # %gen.split2212
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.13:                               # %gen.split2210
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.14:                               # %gen.split2208
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.15:                               # %gen.split2206
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.16:                               # %gen.split2204
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.17:                               # %gen.split2202
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.18:                               # %gen.split2200
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.19:                               # %gen.split2198
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.20:                               # %gen.split2196
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.21:                               # %gen.split2194
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.22:                               # %gen.split2192
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.23:                               # %gen.split2190
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.24:                               # %gen.split2188
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.25:                               # %gen.split2186
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.26:                               # %gen.split2184
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.27:                               # %gen.split2182
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.28:                               # %gen.split2180
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.29:                               # %gen.split2178
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.30:                               # %gen.split2176
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.31:                               # %gen.split2174
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.32:                               # %gen.split2172
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.33:                               # %gen.split2170
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.34:                               # %gen.split2168
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.35:                               # %gen.split2166
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.36:                               # %gen.split2164
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20123, %ax            # imm = 0xB165
	xorw	%cx, %ax
	cmpw	$15349, %ax             # imm = 0x3BF5
	jne	.LBB33_725
# %bb.37:                               # %gen.split2162
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rdi, (%rax)
	movl	$0, kingcap
	movl	$0, numb_moves
	movq	(%rax), %rax
	movq	%rax, genfor
	movl	Variant, %eax
	movw	$15349, BasicBlockSignatureTracker # imm = 0x3BF5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB33_40
# %bb.38:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$15357, %ax             # imm = 0x3BFD
	jne	.LBB33_725
# %bb.39:                               # %gen.split
	movl	$0, captures
	movl	$0, fcaptures
	movw	$15357, BasicBlockSignatureTracker # imm = 0x3BFD
	movw	$8, RunTimeSignatureAdjuster
.LBB33_40:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2036, %ax              # imm = 0x7F4
	xorw	%cx, %ax
	cmpw	$15361, %ax             # imm = 0x3C01
	jne	.LBB33_725
# %bb.41:                               # %gen.split1558
	movw	$15361, BasicBlockSignatureTracker # imm = 0x3C01
	movw	$0, RunTimeSignatureAdjuster
.LBB33_42:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB33_46 Depth 2
                                        #     Child Loop BB33_301 Depth 2
                                        #     Child Loop BB33_588 Depth 2
                                        #     Child Loop BB33_653 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$15377, %ax             # imm = 0x3C11
	jne	.LBB33_724
# %bb.43:                               # %gen.split1560
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	white_to_move, %eax
	movw	$15377, BasicBlockSignatureTracker # imm = 0x3C11
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_299
# %bb.44:                               #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$52, %ax
	cmpw	$15397, %ax             # imm = 0x3C25
	jne	.LBB33_724
# %bb.45:                               # %gen.split1562
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	$1, (%rbx)
	movl	$1, (%r15)
	movw	$15397, BasicBlockSignatureTracker # imm = 0x3C25
	movw	$0, RunTimeSignatureAdjuster
.LBB33_46:                              #   Parent Loop BB33_42 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$15408, %ax             # imm = 0x3C30
	jne	.LBB33_722
# %bb.47:                               # %gen.split1566
                                        #   in Loop: Header=BB33_46 Depth=2
	xorl	%eax, %eax
	movl	(%rbx), %ecx
	movl	piece_count, %edx
	movw	$15408, BasicBlockSignatureTracker # imm = 0x3C30
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jg	.LBB33_62
# %bb.48:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$15417, %ax             # imm = 0x3C39
	jne	.LBB33_722
# %bb.49:                               # %gen.split1568
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	Variant, %eax
	movw	$15417, BasicBlockSignatureTracker # imm = 0x3C39
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB33_52
# %bb.50:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$15435, %ax             # imm = 0x3C4B
	jne	.LBB33_722
# %bb.51:                               # %gen.split1572
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	kingcap, %eax
	movw	$15435, BasicBlockSignatureTracker # imm = 0x3C4B
	movw	$114, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_58
.LBB33_52:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$117, %ax
	xorw	%cx, %ax
	cmpw	$15436, %ax             # imm = 0x3C4C
	jne	.LBB33_722
# %bb.53:                               # %gen.split1574
                                        #   in Loop: Header=BB33_46 Depth=2
	xorl	%eax, %eax
	movl	Variant, %ecx
	movw	$15436, BasicBlockSignatureTracker # imm = 0x3C4C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %ecx
	jne	.LBB33_56
# %bb.54:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$15437, %ax             # imm = 0x3C4D
	jne	.LBB33_722
# %bb.55:                               # %gen.split1578
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	fcaptures, %eax
	cmpl	captures, %eax
	sete	%al
	movw	$15437, BasicBlockSignatureTracker # imm = 0x3C4D
	movw	$1, RunTimeSignatureAdjuster
.LBB33_56:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$3, %cx
	xorw	%dx, %cx
	cmpw	$15439, %cx             # imm = 0x3C4F
	jne	.LBB33_722
# %bb.57:                               # %gen.split1580
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15439, BasicBlockSignatureTracker # imm = 0x3C4F
	movw	$4, RunTimeSignatureAdjuster
	jmp	.LBB33_60
.LBB33_58:                              # %Buffer__
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24947, %ax             # imm = 0x6173
	cmpw	$23864, %ax             # imm = 0x5D38
	jne	.LBB33_722
# %bb.59:                               # %gen.split1576
                                        #   in Loop: Header=BB33_46 Depth=2
	movb	$1, %al
	movw	$23864, BasicBlockSignatureTracker # imm = 0x5D38
	movw	$24947, RunTimeSignatureAdjuster # imm = 0x6173
.LBB33_60:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$26, %cx
	xorw	%dx, %cx
	cmpw	$15441, %cx             # imm = 0x3C51
	jne	.LBB33_722
# %bb.61:                               # %gen.split1582
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15441, BasicBlockSignatureTracker # imm = 0x3C51
	movw	$97, RunTimeSignatureAdjuster
.LBB33_62:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$66, %cx
	xorw	%dx, %cx
	cmpw	$15474, %cx             # imm = 0x3C72
	jne	.LBB33_722
# %bb.63:                               # %gen.split1570
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15474, BasicBlockSignatureTracker # imm = 0x3C72
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB33_64
	jmp	.LBB33_297
.LBB33_64:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$15478, %ax             # imm = 0x3C76
	jne	.LBB33_722
# %bb.65:                               # %gen.split1584
                                        #   in Loop: Header=BB33_46 Depth=2
	movslq	(%r15), %rax
	movl	pieces(,%rax,4), %eax
	movl	%eax, (%r12)
	movl	(%r12), %eax
	movw	$15478, BasicBlockSignatureTracker # imm = 0x3C76
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_68
# %bb.66:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$254, %ax
	cmpw	$15496, %ax             # imm = 0x3C88
	jne	.LBB33_722
# %bb.67:                               # %gen.split1590
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15496, BasicBlockSignatureTracker # imm = 0x3C88
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_295
.LBB33_68:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$255, %ax
	cmpw	$15497, %ax             # imm = 0x3C89
	jne	.LBB33_722
# %bb.69:                               # %gen.split1588
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%rbx), %eax
	addl	$1, %eax
	movl	%eax, (%rbx)
	movw	$15497, BasicBlockSignatureTracker # imm = 0x3C89
	movw	$0, RunTimeSignatureAdjuster
# %bb.70:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$15502, %ax             # imm = 0x3C8E
	jne	.LBB33_722
# %bb.71:                               # %gen.split1594
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r12), %eax
	movl	%eax, (%r14)
	movl	(%r12), %eax
	movl	%eax, gfrom(%rip)
	movslq	(%r14), %rax
	movl	board(,%rax,4), %eax
	movw	$15502, BasicBlockSignatureTracker(%rip) # imm = 0x3C8E
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-1, %eax
	movl	%eax, %ecx
	subl	$10, %ecx
	ja	.LBB33_291
# %bb.72:                               # %gen.split1594
                                        #   in Loop: Header=BB33_46 Depth=2
	movq	.LJTI33_1(,%rax,8), %rax
	jmpq	*%rax
.LBB33_73:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$15509, %ax             # imm = 0x3C95
	jne	.LBB33_722
# %bb.74:                               # %gen.split1598
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15509, BasicBlockSignatureTracker # imm = 0x3C95
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_103
# %bb.75:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$15513, %ax             # imm = 0x3C99
	jne	.LBB33_722
# %bb.76:                               # %gen.split1610
                                        #   in Loop: Header=BB33_46 Depth=2
	movslq	(%r14), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$15513, BasicBlockSignatureTracker # imm = 0x3C99
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB33_87
# %bb.77:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$15516, %ax             # imm = 0x3C9C
	jne	.LBB33_722
# %bb.78:                               # %gen.split1614
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	Variant, %eax
	movw	$15516, BasicBlockSignatureTracker # imm = 0x3C9C
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB33_87
# %bb.79:                               # %Buffer__1
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4057, %ax              # imm = 0xFD9
	cmpw	$13125, %ax             # imm = 0x3345
	jne	.LBB33_722
# %bb.80:                               # %gen.split1618
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$13125, BasicBlockSignatureTracker # imm = 0x3345
	movw	$4057, RunTimeSignatureAdjuster # imm = 0xFD9
# %bb.81:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$46, %ax
	xorw	%cx, %ax
	cmpw	$15538, %ax             # imm = 0x3CB2
	jne	.LBB33_722
# %bb.82:                               # %gen.split2236
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	Variant, %eax
	movw	$15538, BasicBlockSignatureTracker # imm = 0x3CB2
	movw	$43, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB33_87
# %bb.83:                               # %Buffer__2
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11738, %ax             # imm = 0x2DDA
	cmpw	$4456, %ax              # imm = 0x1168
	jne	.LBB33_722
# %bb.84:                               # %gen.split1620
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$4456, BasicBlockSignatureTracker # imm = 0x1168
	movw	$11738, RunTimeSignatureAdjuster # imm = 0x2DDA
# %bb.85:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$15548, %ax             # imm = 0x3CBC
	jne	.LBB33_722
# %bb.86:                               # %gen.split2238
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$12, %edi
	movw	$15548, BasicBlockSignatureTracker # imm = 0x3CBC
	movw	$0, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	push_pawn
	movw	$15548, BasicBlockSignatureTracker # imm = 0x3CBC
	movw	$0, RunTimeSignatureAdjuster
	movw	$15548, BasicBlockSignatureTracker # imm = 0x3CBC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_101
.LBB33_87:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$75, %ax
	xorw	%cx, %ax
	cmpw	$15570, %ax             # imm = 0x3CD2
	jne	.LBB33_722
# %bb.88:                               # %gen.split1616
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	captures, %eax
	movw	$15570, BasicBlockSignatureTracker # imm = 0x3CD2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_99
# %bb.89:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$15593, %ax             # imm = 0x3CE9
	jne	.LBB33_722
# %bb.90:                               # %gen.split1626
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$12, %edi
	movw	$15593, BasicBlockSignatureTracker # imm = 0x3CE9
	movw	$85, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	push_pawn
	movw	$15593, BasicBlockSignatureTracker # imm = 0x3CE9
	movw	$85, RunTimeSignatureAdjuster
	movslq	(%r14), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$15593, BasicBlockSignatureTracker # imm = 0x3CE9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB33_97
# %bb.91:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$484, %ax               # imm = 0x1E4
	cmpw	$15629, %ax             # imm = 0x3D0D
	jne	.LBB33_722
# %bb.92:                               # %gen.split1628
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$24, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15629, BasicBlockSignatureTracker # imm = 0x3D0D
	movw	$484, RunTimeSignatureAdjuster # imm = 0x1E4
	cmpl	$13, %eax
	jne	.LBB33_97
# %bb.93:                               # %Buffer__3
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3860, %ax              # imm = 0xF14
	cmpw	$12825, %ax             # imm = 0x3219
	jne	.LBB33_722
# %bb.94:                               # %gen.split1632
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$12825, BasicBlockSignatureTracker # imm = 0x3219
	movw	$3860, RunTimeSignatureAdjuster # imm = 0xF14
# %bb.95:                               #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$15652, %ax             # imm = 0x3D24
	jne	.LBB33_722
# %bb.96:                               # %gen.split2240
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$24, %edi
	movw	$15652, BasicBlockSignatureTracker # imm = 0x3D24
	movw	$0, RunTimeSignatureAdjuster
	callq	push_pawn_simple
	movw	$15652, BasicBlockSignatureTracker # imm = 0x3D24
	movw	$461, RunTimeSignatureAdjuster # imm = 0x1CD
	movw	$15652, BasicBlockSignatureTracker # imm = 0x3D24
	movw	$461, RunTimeSignatureAdjuster # imm = 0x1CD
.LBB33_97:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$454, %ax               # imm = 0x1C6
	xorw	%cx, %ax
	cmpw	$15663, %ax             # imm = 0x3D2F
	jne	.LBB33_722
# %bb.98:                               # %gen.split1630
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15663, BasicBlockSignatureTracker # imm = 0x3D2F
	movw	$509, RunTimeSignatureAdjuster # imm = 0x1FD
.LBB33_99:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$402, %ax               # imm = 0x192
	xorw	%cx, %ax
	cmpw	$15680, %ax             # imm = 0x3D40
	jne	.LBB33_722
# %bb.100:                              # %gen.split1624
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15680, BasicBlockSignatureTracker # imm = 0x3D40
	movw	$508, RunTimeSignatureAdjuster # imm = 0x1FC
.LBB33_101:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$505, %ax               # imm = 0x1F9
	xorw	%cx, %ax
	cmpw	$15685, %ax             # imm = 0x3D45
	jne	.LBB33_722
# %bb.102:                              # %gen.split1622
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15685, BasicBlockSignatureTracker # imm = 0x3D45
	movw	$464, RunTimeSignatureAdjuster # imm = 0x1D0
.LBB33_103:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$502, %ax               # imm = 0x1F6
	xorw	%cx, %ax
	cmpw	$15715, %ax             # imm = 0x3D63
	jne	.LBB33_722
# %bb.104:                              # %gen.split1612
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	andl	$1, %eax
	movw	$15715, BasicBlockSignatureTracker # imm = 0x3D63
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_111
# %bb.105:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$15719, %ax             # imm = 0x3D67
	jne	.LBB33_722
# %bb.106:                              # %gen.split1634
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15719, BasicBlockSignatureTracker # imm = 0x3D67
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_111
# %bb.107:                              # %Buffer__4
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8726, %ax              # imm = 0x2216
	cmpw	$8049, %ax              # imm = 0x1F71
	jne	.LBB33_722
# %bb.108:                              # %gen.split1638
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$8049, BasicBlockSignatureTracker # imm = 0x1F71
	movw	$8726, RunTimeSignatureAdjuster # imm = 0x2216
# %bb.109:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$239, %ax
	xorw	%cx, %ax
	cmpw	$15752, %ax             # imm = 0x3D88
	jne	.LBB33_722
# %bb.110:                              # %gen.split2242
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$13, %edi
	movw	$15752, BasicBlockSignatureTracker # imm = 0x3D88
	movw	$308, RunTimeSignatureAdjuster # imm = 0x134
	xorl	%esi, %esi
	callq	push_pawn
	movw	$15752, BasicBlockSignatureTracker # imm = 0x3D88
	movw	$308, RunTimeSignatureAdjuster # imm = 0x134
	movw	$15752, BasicBlockSignatureTracker # imm = 0x3D88
	movw	$235, RunTimeSignatureAdjuster
.LBB33_111:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$246, %ax
	xorw	%cx, %ax
	cmpw	$15765, %ax             # imm = 0x3D95
	jne	.LBB33_722
# %bb.112:                              # %gen.split1636
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	andl	$1, %eax
	movw	$15765, BasicBlockSignatureTracker # imm = 0x3D95
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_119
# %bb.113:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$15776, %ax             # imm = 0x3DA0
	jne	.LBB33_722
# %bb.114:                              # %gen.split1640
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15776, BasicBlockSignatureTracker # imm = 0x3DA0
	movw	$53, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_119
# %bb.115:                              # %Buffer__5
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-18317, %ax            # imm = 0xB873
	cmpw	$-31277, %ax            # imm = 0x85D3
	jne	.LBB33_722
# %bb.116:                              # %gen.split1644
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$-31277, BasicBlockSignatureTracker # imm = 0x85D3
	movw	$-18317, RunTimeSignatureAdjuster # imm = 0xB873
# %bb.117:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$15781, %ax             # imm = 0x3DA5
	jne	.LBB33_722
# %bb.118:                              # %gen.split2244
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$11, %edi
	movw	$15781, BasicBlockSignatureTracker # imm = 0x3DA5
	movw	$281, RunTimeSignatureAdjuster # imm = 0x119
	xorl	%esi, %esi
	callq	push_pawn
	movw	$15781, BasicBlockSignatureTracker # imm = 0x3DA5
	movw	$281, RunTimeSignatureAdjuster # imm = 0x119
	movw	$15781, BasicBlockSignatureTracker # imm = 0x3DA5
	movw	$48, RunTimeSignatureAdjuster
.LBB33_119:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$15790, %ax             # imm = 0x3DAE
	jne	.LBB33_722
# %bb.120:                              # %gen.split1642
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	ep_square, %eax
	movl	(%r14), %ecx
	addl	$13, %ecx
	movw	$15790, BasicBlockSignatureTracker # imm = 0x3DAE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB33_123
# %bb.121:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$15793, %ax             # imm = 0x3DB1
	jne	.LBB33_722
# %bb.122:                              # %gen.split1646
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$13, %edi
	movw	$15793, BasicBlockSignatureTracker # imm = 0x3DB1
	movw	$269, RunTimeSignatureAdjuster # imm = 0x10D
	movl	$1, %esi
	callq	push_pawn
	movw	$15793, BasicBlockSignatureTracker # imm = 0x3DB1
	movw	$269, RunTimeSignatureAdjuster # imm = 0x10D
	movw	$15793, BasicBlockSignatureTracker # imm = 0x3DB1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_129
.LBB33_123:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$98, %ax
	cmpw	$15820, %ax             # imm = 0x3DCC
	jne	.LBB33_722
# %bb.124:                              # %gen.split1648
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	ep_square, %eax
	movl	(%r14), %ecx
	addl	$11, %ecx
	movw	$15820, BasicBlockSignatureTracker # imm = 0x3DCC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB33_127
# %bb.125:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$15823, %ax             # imm = 0x3DCF
	jne	.LBB33_722
# %bb.126:                              # %gen.split1652
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$11, %edi
	movw	$15823, BasicBlockSignatureTracker # imm = 0x3DCF
	movw	$371, RunTimeSignatureAdjuster # imm = 0x173
	movl	$1, %esi
	callq	push_pawn
	movw	$15823, BasicBlockSignatureTracker # imm = 0x3DCF
	movw	$371, RunTimeSignatureAdjuster # imm = 0x173
	movw	$15823, BasicBlockSignatureTracker # imm = 0x3DCF
	movw	$3, RunTimeSignatureAdjuster
.LBB33_127:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$40, %ax
	xorw	%cx, %ax
	cmpw	$15844, %ax             # imm = 0x3DE4
	jne	.LBB33_722
# %bb.128:                              # %gen.split1654
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15844, BasicBlockSignatureTracker # imm = 0x3DE4
	movw	$85, RunTimeSignatureAdjuster
.LBB33_129:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$93, %ax
	xorw	%cx, %ax
	cmpw	$15852, %ax             # imm = 0x3DEC
	jne	.LBB33_722
# %bb.130:                              # %gen.split1650
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15852, BasicBlockSignatureTracker # imm = 0x3DEC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_293
.LBB33_131:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$380, %ax               # imm = 0x17C
	cmpw	$15858, %ax             # imm = 0x3DF2
	jne	.LBB33_722
# %bb.132:                              # %gen.split1600
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$25, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15858, BasicBlockSignatureTracker # imm = 0x3DF2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_135
# %bb.133:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$15859, %ax             # imm = 0x3DF3
	jne	.LBB33_722
# %bb.134:                              # %gen.split1658
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$25, %edi
	movw	$15859, BasicBlockSignatureTracker # imm = 0x3DF3
	movw	$0, RunTimeSignatureAdjuster
	callq	push_knighT
	movw	$15859, BasicBlockSignatureTracker # imm = 0x3DF3
	movw	$1, RunTimeSignatureAdjuster
	movw	$15859, BasicBlockSignatureTracker # imm = 0x3DF3
	movw	$1, RunTimeSignatureAdjuster
.LBB33_135:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1012, %ax              # imm = 0x3F4
	xorw	%cx, %ax
	cmpw	$15878, %ax             # imm = 0x3E06
	jne	.LBB33_722
# %bb.136:                              # %gen.split1660
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$23, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15878, BasicBlockSignatureTracker # imm = 0x3E06
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_139
# %bb.137:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$15892, %ax             # imm = 0x3E14
	jne	.LBB33_722
# %bb.138:                              # %gen.split1662
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$23, %edi
	movw	$15892, BasicBlockSignatureTracker # imm = 0x3E14
	movw	$999, RunTimeSignatureAdjuster # imm = 0x3E7
	callq	push_knighT
	movw	$15892, BasicBlockSignatureTracker # imm = 0x3E14
	movw	$999, RunTimeSignatureAdjuster # imm = 0x3E7
	movw	$15892, BasicBlockSignatureTracker # imm = 0x3E14
	movw	$18, RunTimeSignatureAdjuster
.LBB33_139:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$15893, %ax             # imm = 0x3E15
	jne	.LBB33_722
# %bb.140:                              # %gen.split1664
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$14, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15893, BasicBlockSignatureTracker # imm = 0x3E15
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_143
# %bb.141:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$15898, %ax             # imm = 0x3E1A
	jne	.LBB33_722
# %bb.142:                              # %gen.split1666
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$14, %edi
	movw	$15898, BasicBlockSignatureTracker # imm = 0x3E1A
	movw	$1001, RunTimeSignatureAdjuster # imm = 0x3E9
	callq	push_knighT
	movw	$15898, BasicBlockSignatureTracker # imm = 0x3E1A
	movw	$1001, RunTimeSignatureAdjuster # imm = 0x3E9
	movw	$15898, BasicBlockSignatureTracker # imm = 0x3E1A
	movw	$15, RunTimeSignatureAdjuster
.LBB33_143:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$15910, %ax             # imm = 0x3E26
	jne	.LBB33_722
# %bb.144:                              # %gen.split1668
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$10, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15910, BasicBlockSignatureTracker # imm = 0x3E26
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_147
# %bb.145:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$15915, %ax             # imm = 0x3E2B
	jne	.LBB33_722
# %bb.146:                              # %gen.split1670
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$10, %edi
	movw	$15915, BasicBlockSignatureTracker # imm = 0x3E2B
	movw	$984, RunTimeSignatureAdjuster # imm = 0x3D8
	callq	push_knighT
	movw	$15915, BasicBlockSignatureTracker # imm = 0x3E2B
	movw	$984, RunTimeSignatureAdjuster # imm = 0x3D8
	movw	$15915, BasicBlockSignatureTracker # imm = 0x3E2B
	movw	$13, RunTimeSignatureAdjuster
.LBB33_147:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$15920, %ax             # imm = 0x3E30
	jne	.LBB33_722
# %bb.148:                              # %gen.split1672
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$10, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15920, BasicBlockSignatureTracker # imm = 0x3E30
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_151
# %bb.149:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$15922, %ax             # imm = 0x3E32
	jne	.LBB33_722
# %bb.150:                              # %gen.split1674
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$10, %edi
	movw	$15922, BasicBlockSignatureTracker # imm = 0x3E32
	movw	$961, RunTimeSignatureAdjuster # imm = 0x3C1
	callq	push_knighT
	movw	$15922, BasicBlockSignatureTracker # imm = 0x3E32
	movw	$961, RunTimeSignatureAdjuster # imm = 0x3C1
	movw	$15922, BasicBlockSignatureTracker # imm = 0x3E32
	movw	$2, RunTimeSignatureAdjuster
.LBB33_151:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$15924, %ax             # imm = 0x3E34
	jne	.LBB33_722
# %bb.152:                              # %gen.split1676
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$14, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15924, BasicBlockSignatureTracker # imm = 0x3E34
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_155
# %bb.153:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$15937, %ax             # imm = 0x3E41
	jne	.LBB33_722
# %bb.154:                              # %gen.split1678
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$14, %edi
	movw	$15937, BasicBlockSignatureTracker # imm = 0x3E41
	movw	$946, RunTimeSignatureAdjuster # imm = 0x3B2
	callq	push_knighT
	movw	$15937, BasicBlockSignatureTracker # imm = 0x3E41
	movw	$946, RunTimeSignatureAdjuster # imm = 0x3B2
	movw	$15937, BasicBlockSignatureTracker # imm = 0x3E41
	movw	$117, RunTimeSignatureAdjuster
.LBB33_155:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$112, %ax
	xorw	%cx, %ax
	cmpw	$15940, %ax             # imm = 0x3E44
	jne	.LBB33_722
# %bb.156:                              # %gen.split1680
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$23, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15940, BasicBlockSignatureTracker # imm = 0x3E44
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_159
# %bb.157:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$15941, %ax             # imm = 0x3E45
	jne	.LBB33_722
# %bb.158:                              # %gen.split1682
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$23, %edi
	movw	$15941, BasicBlockSignatureTracker # imm = 0x3E45
	movw	$950, RunTimeSignatureAdjuster # imm = 0x3B6
	callq	push_knighT
	movw	$15941, BasicBlockSignatureTracker # imm = 0x3E45
	movw	$950, RunTimeSignatureAdjuster # imm = 0x3B6
	movw	$15941, BasicBlockSignatureTracker # imm = 0x3E45
	movw	$1, RunTimeSignatureAdjuster
.LBB33_159:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$15950, %ax             # imm = 0x3E4E
	jne	.LBB33_722
# %bb.160:                              # %gen.split1684
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$25, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15950, BasicBlockSignatureTracker # imm = 0x3E4E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_163
# %bb.161:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$15962, %ax             # imm = 0x3E5A
	jne	.LBB33_722
# %bb.162:                              # %gen.split1686
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$25, %edi
	movw	$15962, BasicBlockSignatureTracker # imm = 0x3E5A
	movw	$937, RunTimeSignatureAdjuster # imm = 0x3A9
	callq	push_knighT
	movw	$15962, BasicBlockSignatureTracker # imm = 0x3E5A
	movw	$937, RunTimeSignatureAdjuster # imm = 0x3A9
	movw	$15962, BasicBlockSignatureTracker # imm = 0x3E5A
	movw	$20, RunTimeSignatureAdjuster
.LBB33_163:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$15964, %ax             # imm = 0x3E5C
	jne	.LBB33_722
# %bb.164:                              # %gen.split1688
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15964, BasicBlockSignatureTracker # imm = 0x3E5C
	movw	$944, RunTimeSignatureAdjuster # imm = 0x3B0
	jmp	.LBB33_293
.LBB33_165:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$720, %ax               # imm = 0x2D0
	cmpw	$15966, %ax             # imm = 0x3E5E
	jne	.LBB33_722
# %bb.166:                              # %gen.split1602
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$15966, BasicBlockSignatureTracker # imm = 0x3E5E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_169
# %bb.167:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$15974, %ax             # imm = 0x3E66
	jne	.LBB33_722
# %bb.168:                              # %gen.split1690
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$13, %edi
	movw	$15974, BasicBlockSignatureTracker # imm = 0x3E66
	movw	$0, RunTimeSignatureAdjuster
	callq	push_slidE
	movw	$15974, BasicBlockSignatureTracker # imm = 0x3E66
	movw	$56, RunTimeSignatureAdjuster
	movw	$15974, BasicBlockSignatureTracker # imm = 0x3E66
	movw	$56, RunTimeSignatureAdjuster
.LBB33_169:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$209, %ax
	xorw	%cx, %ax
	cmpw	$16015, %ax             # imm = 0x3E8F
	jne	.LBB33_722
# %bb.170:                              # %gen.split1692
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16015, BasicBlockSignatureTracker # imm = 0x3E8F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_173
# %bb.171:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$16024, %ax             # imm = 0x3E98
	jne	.LBB33_722
# %bb.172:                              # %gen.split1694
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$11, %edi
	movw	$16024, BasicBlockSignatureTracker # imm = 0x3E98
	movw	$254, RunTimeSignatureAdjuster
	callq	push_slidE
	movw	$16024, BasicBlockSignatureTracker # imm = 0x3E98
	movw	$254, RunTimeSignatureAdjuster
	movw	$16024, BasicBlockSignatureTracker # imm = 0x3E98
	movw	$23, RunTimeSignatureAdjuster
.LBB33_173:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$16036, %ax             # imm = 0x3EA4
	jne	.LBB33_722
# %bb.174:                              # %gen.split1696
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16036, BasicBlockSignatureTracker # imm = 0x3EA4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_177
# %bb.175:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$16041, %ax             # imm = 0x3EA9
	jne	.LBB33_722
# %bb.176:                              # %gen.split1698
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$11, %edi
	movw	$16041, BasicBlockSignatureTracker # imm = 0x3EA9
	movw	$207, RunTimeSignatureAdjuster
	callq	push_slidE
	movw	$16041, BasicBlockSignatureTracker # imm = 0x3EA9
	movw	$207, RunTimeSignatureAdjuster
	movw	$16041, BasicBlockSignatureTracker # imm = 0x3EA9
	movw	$13, RunTimeSignatureAdjuster
.LBB33_177:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$101, %ax
	xorw	%cx, %ax
	cmpw	$16065, %ax             # imm = 0x3EC1
	jne	.LBB33_722
# %bb.178:                              # %gen.split1700
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16065, BasicBlockSignatureTracker # imm = 0x3EC1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_181
# %bb.179:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$47, %ax
	cmpw	$16110, %ax             # imm = 0x3EEE
	jne	.LBB33_722
# %bb.180:                              # %gen.split1702
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$13, %edi
	movw	$16110, BasicBlockSignatureTracker # imm = 0x3EEE
	movw	$136, RunTimeSignatureAdjuster
	callq	push_slidE
	movw	$16110, BasicBlockSignatureTracker # imm = 0x3EEE
	movw	$136, RunTimeSignatureAdjuster
	movw	$16110, BasicBlockSignatureTracker # imm = 0x3EEE
	movw	$47, RunTimeSignatureAdjuster
.LBB33_181:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$16123, %ax             # imm = 0x3EFB
	jne	.LBB33_722
# %bb.182:                              # %gen.split1704
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$16123, BasicBlockSignatureTracker # imm = 0x3EFB
	movw	$791, RunTimeSignatureAdjuster # imm = 0x317
	jmp	.LBB33_293
.LBB33_183:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$911, %ax               # imm = 0x38F
	cmpw	$16129, %ax             # imm = 0x3F01
	jne	.LBB33_722
# %bb.184:                              # %gen.split1604
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16129, BasicBlockSignatureTracker # imm = 0x3F01
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_187
# %bb.185:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$16131, %ax             # imm = 0x3F03
	jne	.LBB33_722
# %bb.186:                              # %gen.split1706
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$12, %edi
	movw	$16131, BasicBlockSignatureTracker # imm = 0x3F03
	movw	$357, RunTimeSignatureAdjuster # imm = 0x165
	callq	push_slidE
	movw	$16131, BasicBlockSignatureTracker # imm = 0x3F03
	movw	$357, RunTimeSignatureAdjuster # imm = 0x165
	movw	$16131, BasicBlockSignatureTracker # imm = 0x3F03
	movw	$2, RunTimeSignatureAdjuster
.LBB33_187:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$16140, %ax             # imm = 0x3F0C
	jne	.LBB33_722
# %bb.188:                              # %gen.split1708
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16140, BasicBlockSignatureTracker # imm = 0x3F0C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_191
# %bb.189:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$16152, %ax             # imm = 0x3F18
	jne	.LBB33_722
# %bb.190:                              # %gen.split1710
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$1, %edi
	movw	$16152, BasicBlockSignatureTracker # imm = 0x3F18
	movw	$382, RunTimeSignatureAdjuster # imm = 0x17E
	callq	push_slidE
	movw	$16152, BasicBlockSignatureTracker # imm = 0x3F18
	movw	$382, RunTimeSignatureAdjuster # imm = 0x17E
	movw	$16152, BasicBlockSignatureTracker # imm = 0x3F18
	movw	$20, RunTimeSignatureAdjuster
.LBB33_191:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$16157, %ax             # imm = 0x3F1D
	jne	.LBB33_722
# %bb.192:                              # %gen.split1712
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16157, BasicBlockSignatureTracker # imm = 0x3F1D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_195
# %bb.193:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$16158, %ax             # imm = 0x3F1E
	jne	.LBB33_722
# %bb.194:                              # %gen.split1714
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$1, %edi
	movw	$16158, BasicBlockSignatureTracker # imm = 0x3F1E
	movw	$376, RunTimeSignatureAdjuster # imm = 0x178
	callq	push_slidE
	movw	$16158, BasicBlockSignatureTracker # imm = 0x3F1E
	movw	$376, RunTimeSignatureAdjuster # imm = 0x178
	movw	$16158, BasicBlockSignatureTracker # imm = 0x3F1E
	movw	$3, RunTimeSignatureAdjuster
.LBB33_195:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$16176, %ax             # imm = 0x3F30
	jne	.LBB33_722
# %bb.196:                              # %gen.split1716
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16176, BasicBlockSignatureTracker # imm = 0x3F30
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_199
# %bb.197:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$82, %ax
	cmpw	$16226, %ax             # imm = 0x3F62
	jne	.LBB33_722
# %bb.198:                              # %gen.split1718
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$12, %edi
	movw	$16226, BasicBlockSignatureTracker # imm = 0x3F62
	movw	$260, RunTimeSignatureAdjuster # imm = 0x104
	callq	push_slidE
	movw	$16226, BasicBlockSignatureTracker # imm = 0x3F62
	movw	$260, RunTimeSignatureAdjuster # imm = 0x104
	movw	$16226, BasicBlockSignatureTracker # imm = 0x3F62
	movw	$82, RunTimeSignatureAdjuster
.LBB33_199:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$87, %ax
	xorw	%cx, %ax
	cmpw	$16231, %ax             # imm = 0x3F67
	jne	.LBB33_722
# %bb.200:                              # %gen.split1720
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$16231, BasicBlockSignatureTracker # imm = 0x3F67
	movw	$651, RunTimeSignatureAdjuster # imm = 0x28B
	jmp	.LBB33_293
.LBB33_201:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$996, %ax               # imm = 0x3E4
	cmpw	$16234, %ax             # imm = 0x3F6A
	jne	.LBB33_722
# %bb.202:                              # %gen.split1606
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16234, BasicBlockSignatureTracker # imm = 0x3F6A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_205
# %bb.203:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$16245, %ax             # imm = 0x3F75
	jne	.LBB33_722
# %bb.204:                              # %gen.split1722
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$13, %edi
	movw	$16245, BasicBlockSignatureTracker # imm = 0x3F75
	movw	$275, RunTimeSignatureAdjuster # imm = 0x113
	callq	push_slidE
	movw	$16245, BasicBlockSignatureTracker # imm = 0x3F75
	movw	$275, RunTimeSignatureAdjuster # imm = 0x113
	movw	$16245, BasicBlockSignatureTracker # imm = 0x3F75
	movw	$31, RunTimeSignatureAdjuster
.LBB33_205:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$16249, %ax             # imm = 0x3F79
	jne	.LBB33_722
# %bb.206:                              # %gen.split1724
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16249, BasicBlockSignatureTracker # imm = 0x3F79
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_209
# %bb.207:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$247, %ax
	cmpw	$16270, %ax             # imm = 0x3F8E
	jne	.LBB33_722
# %bb.208:                              # %gen.split1726
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$12, %edi
	movw	$16270, BasicBlockSignatureTracker # imm = 0x3F8E
	movw	$488, RunTimeSignatureAdjuster # imm = 0x1E8
	callq	push_slidE
	movw	$16270, BasicBlockSignatureTracker # imm = 0x3F8E
	movw	$488, RunTimeSignatureAdjuster # imm = 0x1E8
	movw	$16270, BasicBlockSignatureTracker # imm = 0x3F8E
	movw	$247, RunTimeSignatureAdjuster
.LBB33_209:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$233, %ax
	xorw	%cx, %ax
	cmpw	$16272, %ax             # imm = 0x3F90
	jne	.LBB33_722
# %bb.210:                              # %gen.split1728
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16272, BasicBlockSignatureTracker # imm = 0x3F90
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_213
# %bb.211:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$16285, %ax             # imm = 0x3F9D
	jne	.LBB33_722
# %bb.212:                              # %gen.split1730
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$11, %edi
	movw	$16285, BasicBlockSignatureTracker # imm = 0x3F9D
	movw	$507, RunTimeSignatureAdjuster # imm = 0x1FB
	callq	push_slidE
	movw	$16285, BasicBlockSignatureTracker # imm = 0x3F9D
	movw	$507, RunTimeSignatureAdjuster # imm = 0x1FB
	movw	$16285, BasicBlockSignatureTracker # imm = 0x3F9D
	movw	$13, RunTimeSignatureAdjuster
.LBB33_213:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$16307, %ax             # imm = 0x3FB3
	jne	.LBB33_722
# %bb.214:                              # %gen.split1732
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16307, BasicBlockSignatureTracker # imm = 0x3FB3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_217
# %bb.215:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$16311, %ax             # imm = 0x3FB7
	jne	.LBB33_722
# %bb.216:                              # %gen.split1734
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$1, %edi
	movw	$16311, BasicBlockSignatureTracker # imm = 0x3FB7
	movw	$465, RunTimeSignatureAdjuster # imm = 0x1D1
	callq	push_slidE
	movw	$16311, BasicBlockSignatureTracker # imm = 0x3FB7
	movw	$465, RunTimeSignatureAdjuster # imm = 0x1D1
	movw	$16311, BasicBlockSignatureTracker # imm = 0x3FB7
	movw	$4, RunTimeSignatureAdjuster
.LBB33_217:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$121, %ax
	xorw	%cx, %ax
	cmpw	$16330, %ax             # imm = 0x3FCA
	jne	.LBB33_722
# %bb.218:                              # %gen.split1736
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16330, BasicBlockSignatureTracker # imm = 0x3FCA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_221
# %bb.219:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$16339, %ax             # imm = 0x3FD3
	jne	.LBB33_722
# %bb.220:                              # %gen.split1738
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$1, %edi
	movw	$16339, BasicBlockSignatureTracker # imm = 0x3FD3
	movw	$437, RunTimeSignatureAdjuster # imm = 0x1B5
	callq	push_slidE
	movw	$16339, BasicBlockSignatureTracker # imm = 0x3FD3
	movw	$437, RunTimeSignatureAdjuster # imm = 0x1B5
	movw	$16339, BasicBlockSignatureTracker # imm = 0x3FD3
	movw	$25, RunTimeSignatureAdjuster
.LBB33_221:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$16355, %ax             # imm = 0x3FE3
	jne	.LBB33_722
# %bb.222:                              # %gen.split1740
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16355, BasicBlockSignatureTracker # imm = 0x3FE3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_225
# %bb.223:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$16358, %ax             # imm = 0x3FE6
	jne	.LBB33_722
# %bb.224:                              # %gen.split1742
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$11, %edi
	movw	$16358, BasicBlockSignatureTracker # imm = 0x3FE6
	movw	$384, RunTimeSignatureAdjuster # imm = 0x180
	callq	push_slidE
	movw	$16358, BasicBlockSignatureTracker # imm = 0x3FE6
	movw	$384, RunTimeSignatureAdjuster # imm = 0x180
	movw	$16358, BasicBlockSignatureTracker # imm = 0x3FE6
	movw	$5, RunTimeSignatureAdjuster
.LBB33_225:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32706, %ax             # imm = 0x7FC2
	xorw	%cx, %ax
	cmpw	$16417, %ax             # imm = 0x4021
	jne	.LBB33_722
# %bb.226:                              # %gen.split1744
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16417, BasicBlockSignatureTracker # imm = 0x4021
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_229
# %bb.227:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$16426, %ax             # imm = 0x402A
	jne	.LBB33_722
# %bb.228:                              # %gen.split1746
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$12, %edi
	movw	$16426, BasicBlockSignatureTracker # imm = 0x402A
	movw	$32332, RunTimeSignatureAdjuster # imm = 0x7E4C
	callq	push_slidE
	movw	$16426, BasicBlockSignatureTracker # imm = 0x402A
	movw	$32332, RunTimeSignatureAdjuster # imm = 0x7E4C
	movw	$16426, BasicBlockSignatureTracker # imm = 0x402A
	movw	$11, RunTimeSignatureAdjuster
.LBB33_229:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$100, %ax
	xorw	%cx, %ax
	cmpw	$16453, %ax             # imm = 0x4045
	jne	.LBB33_722
# %bb.230:                              # %gen.split1748
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16453, BasicBlockSignatureTracker # imm = 0x4045
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_233
# %bb.231:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$16457, %ax             # imm = 0x4049
	jne	.LBB33_722
# %bb.232:                              # %gen.split1750
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$13, %edi
	movw	$16457, BasicBlockSignatureTracker # imm = 0x4049
	movw	$32303, RunTimeSignatureAdjuster # imm = 0x7E2F
	callq	push_slidE
	movw	$16457, BasicBlockSignatureTracker # imm = 0x4049
	movw	$32303, RunTimeSignatureAdjuster # imm = 0x7E2F
	movw	$16457, BasicBlockSignatureTracker # imm = 0x4049
	movw	$12, RunTimeSignatureAdjuster
.LBB33_233:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$34, %ax
	xorw	%cx, %ax
	cmpw	$16487, %ax             # imm = 0x4067
	jne	.LBB33_722
# %bb.234:                              # %gen.split1752
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$16487, BasicBlockSignatureTracker # imm = 0x4067
	movw	$32139, RunTimeSignatureAdjuster # imm = 0x7D8B
	jmp	.LBB33_293
.LBB33_235:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31972, %ax             # imm = 0x7CE4
	cmpw	$16490, %ax             # imm = 0x406A
	jne	.LBB33_722
# %bb.236:                              # %gen.split1608
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$13, %edi
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	callq	push_king
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r14), %edi
	subl	$12, %edi
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	callq	push_king
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r14), %edi
	subl	$11, %edi
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	callq	push_king
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r14), %edi
	subl	$1, %edi
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	callq	push_king
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r14), %edi
	addl	$1, %edi
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	callq	push_king
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r14), %edi
	addl	$11, %edi
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	callq	push_king
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r14), %edi
	addl	$12, %edi
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	callq	push_king
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r14), %edi
	addl	$13, %edi
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	callq	push_king
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r14), %eax
	movw	$16490, BasicBlockSignatureTracker # imm = 0x406A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$30, %eax
	jne	.LBB33_289
# %bb.237:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$16492, %ax             # imm = 0x406C
	jne	.LBB33_722
# %bb.238:                              # %gen.split1754
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	moved+120, %eax
	movw	$16492, BasicBlockSignatureTracker # imm = 0x406C
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_289
# %bb.239:                              # %Buffer__6
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3998, %ax              # imm = 0xF9E
	cmpw	$20466, %ax             # imm = 0x4FF2
	jne	.LBB33_722
# %bb.240:                              # %gen.split1758
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$20466, BasicBlockSignatureTracker # imm = 0x4FF2
	movw	$3998, RunTimeSignatureAdjuster # imm = 0xF9E
# %bb.241:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$16501, %ax             # imm = 0x4075
	jne	.LBB33_722
# %bb.242:                              # %gen.split2246
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	captures, %eax
	movw	$16501, BasicBlockSignatureTracker # imm = 0x4075
	movw	$31, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_289
# %bb.243:                              # %Buffer__7
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3418, %ax             # imm = 0xF2A6
	cmpw	$-19757, %ax            # imm = 0xB2D3
	jne	.LBB33_722
# %bb.244:                              # %gen.split1760
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$-19757, BasicBlockSignatureTracker # imm = 0xB2D3
	movw	$-3418, RunTimeSignatureAdjuster # imm = 0xF2A6
# %bb.245:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$247, %ax
	xorw	%cx, %ax
	cmpw	$16514, %ax             # imm = 0x4082
	jne	.LBB33_722
# %bb.246:                              # %gen.split2248
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	Variant, %eax
	movw	$16514, BasicBlockSignatureTracker # imm = 0x4082
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB33_251
# %bb.247:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$16520, %ax             # imm = 0x4088
	jne	.LBB33_722
# %bb.248:                              # %gen.split1764
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	Giveaway, %eax
	movw	$16520, BasicBlockSignatureTracker # imm = 0x4088
	movw	$226, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB33_289
# %bb.249:                              # %Buffer__8
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-13806, %ax            # imm = 0xCA12
	cmpw	$-30054, %ax            # imm = 0x8A9A
	jne	.LBB33_722
# %bb.250:                              # %gen.split1766
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$-30054, BasicBlockSignatureTracker # imm = 0x8A9A
	movw	$-13800, RunTimeSignatureAdjuster # imm = 0xCA18
.LBB33_251:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$16524, %ax             # imm = 0x408C
	jne	.LBB33_722
# %bb.252:                              # %gen.split1762
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	moved+132, %eax
	movw	$16524, BasicBlockSignatureTracker # imm = 0x408C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_267
# %bb.253:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$16530, %ax             # imm = 0x4092
	jne	.LBB33_722
# %bb.254:                              # %gen.split1770
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	board+132, %eax
	movw	$16530, BasicBlockSignatureTracker # imm = 0x4092
	movw	$30, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB33_267
# %bb.255:                              # %Buffer__9
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12169, %ax             # imm = 0x2F89
	cmpw	$28443, %ax             # imm = 0x6F1B
	jne	.LBB33_722
# %bb.256:                              # %gen.split1772
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$28443, BasicBlockSignatureTracker # imm = 0x6F1B
	movw	$12169, RunTimeSignatureAdjuster # imm = 0x2F89
# %bb.257:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$16533, %ax             # imm = 0x4095
	jne	.LBB33_722
# %bb.258:                              # %gen.split2250
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	board+124, %eax
	movw	$16533, BasicBlockSignatureTracker # imm = 0x4095
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_265
# %bb.259:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$16556, %ax             # imm = 0x40AC
	jne	.LBB33_722
# %bb.260:                              # %gen.split1774
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	board+128, %eax
	movw	$16556, BasicBlockSignatureTracker # imm = 0x40AC
	movw	$57, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_265
# %bb.261:                              # %Buffer__10
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11318, %ax             # imm = 0x2C36
	cmpw	$27802, %ax             # imm = 0x6C9A
	jne	.LBB33_722
# %bb.262:                              # %gen.split1778
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$27802, BasicBlockSignatureTracker # imm = 0x6C9A
	movw	$11318, RunTimeSignatureAdjuster # imm = 0x2C36
# %bb.263:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$100, %ax
	xorw	%cx, %ax
	cmpw	$16584, %ax             # imm = 0x40C8
	jne	.LBB33_722
# %bb.264:                              # %gen.split2252
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	addl	$2, %edi
	movw	$16584, BasicBlockSignatureTracker # imm = 0x40C8
	movw	$0, RunTimeSignatureAdjuster
	movl	$1, %esi
	callq	push_king_castle
	movw	$16584, BasicBlockSignatureTracker # imm = 0x40C8
	movw	$93, RunTimeSignatureAdjuster
	movw	$16584, BasicBlockSignatureTracker # imm = 0x40C8
	movw	$93, RunTimeSignatureAdjuster
.LBB33_265:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$70, %ax
	xorw	%cx, %ax
	cmpw	$16595, %ax             # imm = 0x40D3
	jne	.LBB33_722
# %bb.266:                              # %gen.split1776
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$16595, BasicBlockSignatureTracker # imm = 0x40D3
	movw	$95, RunTimeSignatureAdjuster
.LBB33_267:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$104, %ax
	xorw	%cx, %ax
	cmpw	$16612, %ax             # imm = 0x40E4
	jne	.LBB33_722
# %bb.268:                              # %gen.split1768
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	moved+104, %eax
	movw	$16612, BasicBlockSignatureTracker # imm = 0x40E4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_287
# %bb.269:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$16614, %ax             # imm = 0x40E6
	jne	.LBB33_722
# %bb.270:                              # %gen.split1782
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	board+104, %eax
	movw	$16614, BasicBlockSignatureTracker # imm = 0x40E6
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB33_287
# %bb.271:                              # %Buffer__11
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31516, %ax             # imm = 0x7B1C
	cmpw	$15354, %ax             # imm = 0x3BFA
	jne	.LBB33_722
# %bb.272:                              # %gen.split1784
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$15354, BasicBlockSignatureTracker # imm = 0x3BFA
	movw	$31516, RunTimeSignatureAdjuster # imm = 0x7B1C
# %bb.273:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$16632, %ax             # imm = 0x40F8
	jne	.LBB33_722
# %bb.274:                              # %gen.split2254
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	board+108, %eax
	movw	$16632, BasicBlockSignatureTracker # imm = 0x40F8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_285
# %bb.275:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$16635, %ax             # imm = 0x40FB
	jne	.LBB33_722
# %bb.276:                              # %gen.split1786
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	board+112, %eax
	movw	$16635, BasicBlockSignatureTracker # imm = 0x40FB
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_285
# %bb.277:                              # %Buffer__12
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1871, %ax              # imm = 0x74F
	cmpw	$18356, %ax             # imm = 0x47B4
	jne	.LBB33_722
# %bb.278:                              # %gen.split1790
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$18356, BasicBlockSignatureTracker # imm = 0x47B4
	movw	$1871, RunTimeSignatureAdjuster # imm = 0x74F
# %bb.279:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$16639, %ax             # imm = 0x40FF
	jne	.LBB33_722
# %bb.280:                              # %gen.split2256
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	board+116, %eax
	movw	$16639, BasicBlockSignatureTracker # imm = 0x40FF
	movw	$7, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_285
# %bb.281:                              # %Buffer__13
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15557, %ax             # imm = 0x3CC5
	cmpw	$31802, %ax             # imm = 0x7C3A
	jne	.LBB33_722
# %bb.282:                              # %gen.split1792
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$31802, BasicBlockSignatureTracker # imm = 0x7C3A
	movw	$15557, RunTimeSignatureAdjuster # imm = 0x3CC5
# %bb.283:                              #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$490, %ax               # imm = 0x1EA
	xorw	%cx, %ax
	cmpw	$16661, %ax             # imm = 0x4115
	jne	.LBB33_722
# %bb.284:                              # %gen.split2258
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r14), %edi
	subl	$2, %edi
	movw	$16661, BasicBlockSignatureTracker # imm = 0x4115
	movw	$477, RunTimeSignatureAdjuster # imm = 0x1DD
	movl	$2, %esi
	callq	push_king_castle
	movw	$16661, BasicBlockSignatureTracker # imm = 0x4115
	movw	$477, RunTimeSignatureAdjuster # imm = 0x1DD
	movw	$16661, BasicBlockSignatureTracker # imm = 0x4115
	movw	$493, RunTimeSignatureAdjuster # imm = 0x1ED
.LBB33_285:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$475, %ax               # imm = 0x1DB
	xorw	%cx, %ax
	cmpw	$16675, %ax             # imm = 0x4123
	jne	.LBB33_722
# %bb.286:                              # %gen.split1788
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$16675, BasicBlockSignatureTracker # imm = 0x4123
	movw	$455, RunTimeSignatureAdjuster # imm = 0x1C7
.LBB33_287:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$470, %ax               # imm = 0x1D6
	xorw	%cx, %ax
	cmpw	$16690, %ax             # imm = 0x4132
	jne	.LBB33_722
# %bb.288:                              # %gen.split1780
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$16690, BasicBlockSignatureTracker # imm = 0x4132
	movw	$344, RunTimeSignatureAdjuster # imm = 0x158
.LBB33_289:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$336, %ax               # imm = 0x150
	xorw	%cx, %ax
	cmpw	$16698, %ax             # imm = 0x413A
	jne	.LBB33_722
# %bb.290:                              # %gen.split1756
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$16698, BasicBlockSignatureTracker # imm = 0x413A
	movw	$31958, RunTimeSignatureAdjuster # imm = 0x7CD6
	jmp	.LBB33_293
.LBB33_291:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32181, %ax             # imm = 0x7DB5
	cmpw	$16699, %ax             # imm = 0x413B
	jne	.LBB33_722
# %bb.292:                              # %gen.split1596
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$16699, BasicBlockSignatureTracker # imm = 0x413B
	movw	$31959, RunTimeSignatureAdjuster # imm = 0x7CD7
.LBB33_293:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31916, %ax             # imm = 0x7CAC
	xorw	%cx, %ax
	cmpw	$16704, %ax             # imm = 0x4140
	jne	.LBB33_722
# %bb.294:                              # %gen.split1656
                                        #   in Loop: Header=BB33_46 Depth=2
	movw	$16704, BasicBlockSignatureTracker # imm = 0x4140
	movw	$32200, RunTimeSignatureAdjuster # imm = 0x7DC8
.LBB33_295:                             #   in Loop: Header=BB33_46 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32205, %ax             # imm = 0x7DCD
	xorw	%cx, %ax
	cmpw	$16709, %ax             # imm = 0x4145
	jne	.LBB33_722
# %bb.296:                              # %gen.split1592
                                        #   in Loop: Header=BB33_46 Depth=2
	movl	(%r15), %eax
	addl	$1, %eax
	movl	%eax, (%r15)
	movw	$16709, BasicBlockSignatureTracker # imm = 0x4145
	movw	$32096, RunTimeSignatureAdjuster # imm = 0x7D60
	jmp	.LBB33_46
.LBB33_297:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32062, %ax             # imm = 0x7D3E
	cmpw	$16716, %ax             # imm = 0x414C
	jne	.LBB33_724
# %bb.298:                              # %gen.split1586
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$16716, BasicBlockSignatureTracker # imm = 0x414C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_554
.LBB33_299:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32069, %ax             # imm = 0x7D45
	cmpw	$16724, %ax             # imm = 0x4154
	jne	.LBB33_724
# %bb.300:                              # %gen.split1564
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	$1, (%rbx)
	movl	$1, (%r15)
	movw	$16724, BasicBlockSignatureTracker # imm = 0x4154
	movw	$0, RunTimeSignatureAdjuster
.LBB33_301:                             #   Parent Loop BB33_42 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$16729, %ax             # imm = 0x4159
	jne	.LBB33_723
# %bb.302:                              # %gen.split1796
                                        #   in Loop: Header=BB33_301 Depth=2
	xorl	%eax, %eax
	movl	(%rbx), %ecx
	movl	piece_count, %edx
	movw	$16729, BasicBlockSignatureTracker # imm = 0x4159
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jg	.LBB33_317
# %bb.303:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$16746, %ax             # imm = 0x416A
	jne	.LBB33_723
# %bb.304:                              # %gen.split1798
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	Variant, %eax
	movw	$16746, BasicBlockSignatureTracker # imm = 0x416A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB33_307
# %bb.305:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$246, %ax
	cmpw	$16796, %ax             # imm = 0x419C
	jne	.LBB33_723
# %bb.306:                              # %gen.split1802
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	kingcap, %eax
	movw	$16796, BasicBlockSignatureTracker # imm = 0x419C
	movw	$246, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_313
.LBB33_307:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$202, %ax
	xorw	%cx, %ax
	cmpw	$16800, %ax             # imm = 0x41A0
	jne	.LBB33_723
# %bb.308:                              # %gen.split1804
                                        #   in Loop: Header=BB33_301 Depth=2
	xorl	%eax, %eax
	movl	Variant, %ecx
	movw	$16800, BasicBlockSignatureTracker # imm = 0x41A0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %ecx
	jne	.LBB33_311
# %bb.309:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$16810, %ax             # imm = 0x41AA
	jne	.LBB33_723
# %bb.310:                              # %gen.split1808
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	fcaptures, %eax
	cmpl	captures, %eax
	sete	%al
	movw	$16810, BasicBlockSignatureTracker # imm = 0x41AA
	movw	$10, RunTimeSignatureAdjuster
.LBB33_311:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$15, %cx
	xorw	%dx, %cx
	cmpw	$16815, %cx             # imm = 0x41AF
	jne	.LBB33_723
# %bb.312:                              # %gen.split1810
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$16815, BasicBlockSignatureTracker # imm = 0x41AF
	movw	$51, RunTimeSignatureAdjuster
	jmp	.LBB33_315
.LBB33_313:                             # %Buffer__14
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28102, %ax             # imm = 0x6DC6
	cmpw	$11354, %ax             # imm = 0x2C5A
	jne	.LBB33_723
# %bb.314:                              # %gen.split1806
                                        #   in Loop: Header=BB33_301 Depth=2
	movb	$1, %al
	movw	$11354, BasicBlockSignatureTracker # imm = 0x2C5A
	movw	$28102, RunTimeSignatureAdjuster # imm = 0x6DC6
.LBB33_315:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$44, %cx
	xorw	%dx, %cx
	cmpw	$16816, %cx             # imm = 0x41B0
	jne	.LBB33_723
# %bb.316:                              # %gen.split1812
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$16816, BasicBlockSignatureTracker # imm = 0x41B0
	movw	$233, RunTimeSignatureAdjuster
.LBB33_317:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$231, %cx
	xorw	%dx, %cx
	cmpw	$16830, %cx             # imm = 0x41BE
	jne	.LBB33_723
# %bb.318:                              # %gen.split1800
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$16830, BasicBlockSignatureTracker # imm = 0x41BE
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB33_319
	jmp	.LBB33_552
.LBB33_319:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$16844, %ax             # imm = 0x41CC
	jne	.LBB33_723
# %bb.320:                              # %gen.split1814
                                        #   in Loop: Header=BB33_301 Depth=2
	movslq	(%r15), %rax
	movl	pieces(,%rax,4), %eax
	movl	%eax, (%r12)
	movl	(%r12), %eax
	movw	$16844, BasicBlockSignatureTracker # imm = 0x41CC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_323
# %bb.321:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$16856, %ax             # imm = 0x41D8
	jne	.LBB33_723
# %bb.322:                              # %gen.split1820
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$16856, BasicBlockSignatureTracker # imm = 0x41D8
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_550
.LBB33_323:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$16859, %ax             # imm = 0x41DB
	jne	.LBB33_723
# %bb.324:                              # %gen.split1818
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%rbx), %eax
	addl	$1, %eax
	movl	%eax, (%rbx)
	movw	$16859, BasicBlockSignatureTracker # imm = 0x41DB
	movw	$0, RunTimeSignatureAdjuster
# %bb.325:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$16871, %ax             # imm = 0x41E7
	jne	.LBB33_723
# %bb.326:                              # %gen.split1824
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r12), %eax
	movl	%eax, (%r14)
	movl	(%r12), %eax
	movl	%eax, gfrom(%rip)
	movslq	(%r14), %rax
	movl	board(,%rax,4), %eax
	movw	$16871, BasicBlockSignatureTracker(%rip) # imm = 0x41E7
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-2, %eax
	movl	%eax, %ecx
	subl	$10, %ecx
	ja	.LBB33_546
# %bb.327:                              # %gen.split1824
                                        #   in Loop: Header=BB33_301 Depth=2
	movq	.LJTI33_0(,%rax,8), %rax
	jmpq	*%rax
.LBB33_328:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$16872, %ax             # imm = 0x41E8
	jne	.LBB33_723
# %bb.329:                              # %gen.split1828
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16872, BasicBlockSignatureTracker # imm = 0x41E8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_358
# %bb.330:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$16882, %ax             # imm = 0x41F2
	jne	.LBB33_723
# %bb.331:                              # %gen.split1840
                                        #   in Loop: Header=BB33_301 Depth=2
	movslq	(%r14), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$16882, BasicBlockSignatureTracker # imm = 0x41F2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB33_342
# %bb.332:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$16891, %ax             # imm = 0x41FB
	jne	.LBB33_723
# %bb.333:                              # %gen.split1844
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	Variant, %eax
	movw	$16891, BasicBlockSignatureTracker # imm = 0x41FB
	movw	$9, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB33_342
# %bb.334:                              # %Buffer__15
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-5359, %ax             # imm = 0xEB11
	cmpw	$-21782, %ax            # imm = 0xAAEA
	jne	.LBB33_723
# %bb.335:                              # %gen.split1848
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$-21782, BasicBlockSignatureTracker # imm = 0xAAEA
	movw	$-5359, RunTimeSignatureAdjuster # imm = 0xEB11
# %bb.336:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$16893, %ax             # imm = 0x41FD
	jne	.LBB33_723
# %bb.337:                              # %gen.split2260
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	Variant, %eax
	movw	$16893, BasicBlockSignatureTracker # imm = 0x41FD
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB33_342
# %bb.338:                              # %Buffer__16
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7046, %ax              # imm = 0x1B86
	cmpw	$23163, %ax             # imm = 0x5A7B
	jne	.LBB33_723
# %bb.339:                              # %gen.split1850
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$23163, BasicBlockSignatureTracker # imm = 0x5A7B
	movw	$7046, RunTimeSignatureAdjuster # imm = 0x1B86
# %bb.340:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1023, %ax              # imm = 0x3FF
	xorw	%cx, %ax
	cmpw	$16898, %ax             # imm = 0x4202
	jne	.LBB33_723
# %bb.341:                              # %gen.split2262
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$12, %edi
	movw	$16898, BasicBlockSignatureTracker # imm = 0x4202
	movw	$32446, RunTimeSignatureAdjuster # imm = 0x7EBE
	xorl	%esi, %esi
	callq	push_pawn
	movw	$16898, BasicBlockSignatureTracker # imm = 0x4202
	movw	$32446, RunTimeSignatureAdjuster # imm = 0x7EBE
	movw	$16898, BasicBlockSignatureTracker # imm = 0x4202
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_356
.LBB33_342:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1018, %ax              # imm = 0x3FA
	xorw	%cx, %ax
	cmpw	$16904, %ax             # imm = 0x4208
	jne	.LBB33_723
# %bb.343:                              # %gen.split1846
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	captures, %eax
	movw	$16904, BasicBlockSignatureTracker # imm = 0x4208
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_354
# %bb.344:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$16912, %ax             # imm = 0x4210
	jne	.LBB33_723
# %bb.345:                              # %gen.split1856
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$12, %edi
	movw	$16912, BasicBlockSignatureTracker # imm = 0x4210
	movw	$32428, RunTimeSignatureAdjuster # imm = 0x7EAC
	xorl	%esi, %esi
	callq	push_pawn
	movw	$16912, BasicBlockSignatureTracker # imm = 0x4210
	movw	$32428, RunTimeSignatureAdjuster # imm = 0x7EAC
	movslq	(%r14), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$16912, BasicBlockSignatureTracker # imm = 0x4210
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB33_352
# %bb.346:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$16913, %ax             # imm = 0x4211
	jne	.LBB33_723
# %bb.347:                              # %gen.split1858
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$24, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$16913, BasicBlockSignatureTracker # imm = 0x4211
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_352
# %bb.348:                              # %Buffer__17
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-477, %ax              # imm = 0xFE23
	cmpw	$-17358, %ax            # imm = 0xBC32
	jne	.LBB33_723
# %bb.349:                              # %gen.split1862
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$-17358, BasicBlockSignatureTracker # imm = 0xBC32
	movw	$-477, RunTimeSignatureAdjuster # imm = 0xFE23
# %bb.350:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$16923, %ax             # imm = 0x421B
	jne	.LBB33_723
# %bb.351:                              # %gen.split2264
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$24, %edi
	movw	$16923, BasicBlockSignatureTracker # imm = 0x421B
	movw	$32575, RunTimeSignatureAdjuster # imm = 0x7F3F
	callq	push_pawn_simple
	movw	$16923, BasicBlockSignatureTracker # imm = 0x421B
	movw	$32575, RunTimeSignatureAdjuster # imm = 0x7F3F
	movw	$16923, BasicBlockSignatureTracker # imm = 0x421B
	movw	$11, RunTimeSignatureAdjuster
.LBB33_352:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$16947, %ax             # imm = 0x4233
	jne	.LBB33_723
# %bb.353:                              # %gen.split1860
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$16947, BasicBlockSignatureTracker # imm = 0x4233
	movw	$59, RunTimeSignatureAdjuster
.LBB33_354:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$54, %ax
	xorw	%cx, %ax
	cmpw	$16958, %ax             # imm = 0x423E
	jne	.LBB33_723
# %bb.355:                              # %gen.split1854
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$16958, BasicBlockSignatureTracker # imm = 0x423E
	movw	$60, RunTimeSignatureAdjuster
.LBB33_356:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$77, %ax
	xorw	%cx, %ax
	cmpw	$16975, %ax             # imm = 0x424F
	jne	.LBB33_723
# %bb.357:                              # %gen.split1852
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$16975, BasicBlockSignatureTracker # imm = 0x424F
	movw	$935, RunTimeSignatureAdjuster # imm = 0x3A7
.LBB33_358:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$952, %ax               # imm = 0x3B8
	xorw	%cx, %ax
	cmpw	$16976, %ax             # imm = 0x4250
	jne	.LBB33_723
# %bb.359:                              # %gen.split1842
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	andl	$1, %eax
	movw	$16976, BasicBlockSignatureTracker # imm = 0x4250
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB33_366
# %bb.360:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$17000, %ax             # imm = 0x4268
	jne	.LBB33_723
# %bb.361:                              # %gen.split1864
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17000, BasicBlockSignatureTracker # imm = 0x4268
	movw	$56, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB33_366
# %bb.362:                              # %Buffer__18
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-18792, %ax            # imm = 0xB698
	cmpw	$-2832, %ax             # imm = 0xF4F0
	jne	.LBB33_723
# %bb.363:                              # %gen.split1868
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$-2832, BasicBlockSignatureTracker # imm = 0xF4F0
	movw	$-18792, RunTimeSignatureAdjuster # imm = 0xB698
# %bb.364:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$17006, %ax             # imm = 0x426E
	jne	.LBB33_723
# %bb.365:                              # %gen.split2266
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$13, %edi
	movw	$17006, BasicBlockSignatureTracker # imm = 0x426E
	movw	$32466, RunTimeSignatureAdjuster # imm = 0x7ED2
	xorl	%esi, %esi
	callq	push_pawn
	movw	$17006, BasicBlockSignatureTracker # imm = 0x426E
	movw	$32466, RunTimeSignatureAdjuster # imm = 0x7ED2
	movw	$17006, BasicBlockSignatureTracker # imm = 0x426E
	movw	$62, RunTimeSignatureAdjuster
.LBB33_366:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$17007, %ax             # imm = 0x426F
	jne	.LBB33_723
# %bb.367:                              # %gen.split1866
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	andl	$1, %eax
	movw	$17007, BasicBlockSignatureTracker # imm = 0x426F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB33_374
# %bb.368:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$17013, %ax             # imm = 0x4275
	jne	.LBB33_723
# %bb.369:                              # %gen.split1870
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17013, BasicBlockSignatureTracker # imm = 0x4275
	movw	$26, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB33_374
# %bb.370:                              # %Buffer__19
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12533, %ax            # imm = 0xCF0B
	cmpw	$-29314, %ax            # imm = 0x8D7E
	jne	.LBB33_723
# %bb.371:                              # %gen.split1874
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$-29314, BasicBlockSignatureTracker # imm = 0x8D7E
	movw	$-12533, RunTimeSignatureAdjuster # imm = 0xCF0B
# %bb.372:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$255, %ax
	xorw	%cx, %ax
	cmpw	$17034, %ax             # imm = 0x428A
	jne	.LBB33_723
# %bb.373:                              # %gen.split2268
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$11, %edi
	movw	$17034, BasicBlockSignatureTracker # imm = 0x428A
	movw	$32310, RunTimeSignatureAdjuster # imm = 0x7E36
	xorl	%esi, %esi
	callq	push_pawn
	movw	$17034, BasicBlockSignatureTracker # imm = 0x428A
	movw	$32310, RunTimeSignatureAdjuster # imm = 0x7E36
	movw	$17034, BasicBlockSignatureTracker # imm = 0x428A
	movw	$229, RunTimeSignatureAdjuster
.LBB33_374:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$226, %ax
	xorw	%cx, %ax
	cmpw	$17037, %ax             # imm = 0x428D
	jne	.LBB33_723
# %bb.375:                              # %gen.split1872
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	ep_square, %eax
	movl	(%r14), %ecx
	subl	$13, %ecx
	movw	$17037, BasicBlockSignatureTracker # imm = 0x428D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB33_378
# %bb.376:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$17059, %ax             # imm = 0x42A3
	jne	.LBB33_723
# %bb.377:                              # %gen.split1876
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$13, %edi
	movw	$17059, BasicBlockSignatureTracker # imm = 0x42A3
	movw	$32287, RunTimeSignatureAdjuster # imm = 0x7E1F
	movl	$1, %esi
	callq	push_pawn
	movw	$17059, BasicBlockSignatureTracker # imm = 0x42A3
	movw	$32287, RunTimeSignatureAdjuster # imm = 0x7E1F
	movw	$17059, BasicBlockSignatureTracker # imm = 0x42A3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_384
.LBB33_378:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$38, %ax
	cmpw	$17067, %ax             # imm = 0x42AB
	jne	.LBB33_723
# %bb.379:                              # %gen.split1878
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	ep_square, %eax
	movl	(%r14), %ecx
	subl	$11, %ecx
	movw	$17067, BasicBlockSignatureTracker # imm = 0x42AB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB33_382
# %bb.380:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$17068, %ax             # imm = 0x42AC
	jne	.LBB33_723
# %bb.381:                              # %gen.split1882
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$11, %edi
	movw	$17068, BasicBlockSignatureTracker # imm = 0x42AC
	movw	$32272, RunTimeSignatureAdjuster # imm = 0x7E10
	movl	$1, %esi
	callq	push_pawn
	movw	$17068, BasicBlockSignatureTracker # imm = 0x42AC
	movw	$32272, RunTimeSignatureAdjuster # imm = 0x7E10
	movw	$17068, BasicBlockSignatureTracker # imm = 0x42AC
	movw	$7, RunTimeSignatureAdjuster
.LBB33_382:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$17076, %ax             # imm = 0x42B4
	jne	.LBB33_723
# %bb.383:                              # %gen.split1884
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17076, BasicBlockSignatureTracker # imm = 0x42B4
	movw	$23, RunTimeSignatureAdjuster
.LBB33_384:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$17087, %ax             # imm = 0x42BF
	jne	.LBB33_723
# %bb.385:                              # %gen.split1880
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17087, BasicBlockSignatureTracker # imm = 0x42BF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_548
.LBB33_386:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$815, %ax               # imm = 0x32F
	cmpw	$17096, %ax             # imm = 0x42C8
	jne	.LBB33_723
# %bb.387:                              # %gen.split1830
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$25, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17096, BasicBlockSignatureTracker # imm = 0x42C8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_390
# %bb.388:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$17122, %ax             # imm = 0x42E2
	jne	.LBB33_723
# %bb.389:                              # %gen.split1888
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$25, %edi
	movw	$17122, BasicBlockSignatureTracker # imm = 0x42E2
	movw	$32529, RunTimeSignatureAdjuster # imm = 0x7F11
	callq	push_knighT
	movw	$17122, BasicBlockSignatureTracker # imm = 0x42E2
	movw	$32529, RunTimeSignatureAdjuster # imm = 0x7F11
	movw	$17122, BasicBlockSignatureTracker # imm = 0x42E2
	movw	$42, RunTimeSignatureAdjuster
.LBB33_390:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$17124, %ax             # imm = 0x42E4
	jne	.LBB33_723
# %bb.391:                              # %gen.split1890
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$23, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17124, BasicBlockSignatureTracker # imm = 0x42E4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_394
# %bb.392:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$17132, %ax             # imm = 0x42EC
	jne	.LBB33_723
# %bb.393:                              # %gen.split1892
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$23, %edi
	movw	$17132, BasicBlockSignatureTracker # imm = 0x42EC
	movw	$32543, RunTimeSignatureAdjuster # imm = 0x7F1F
	callq	push_knighT
	movw	$17132, BasicBlockSignatureTracker # imm = 0x42EC
	movw	$32543, RunTimeSignatureAdjuster # imm = 0x7F1F
	movw	$17132, BasicBlockSignatureTracker # imm = 0x42EC
	movw	$8, RunTimeSignatureAdjuster
.LBB33_394:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$17143, %ax             # imm = 0x42F7
	jne	.LBB33_723
# %bb.395:                              # %gen.split1894
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$14, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17143, BasicBlockSignatureTracker # imm = 0x42F7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_398
# %bb.396:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$502, %ax               # imm = 0x1F6
	cmpw	$17153, %ax             # imm = 0x4301
	jne	.LBB33_723
# %bb.397:                              # %gen.split1896
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$14, %edi
	movw	$17153, BasicBlockSignatureTracker # imm = 0x4301
	movw	$32498, RunTimeSignatureAdjuster # imm = 0x7EF2
	callq	push_knighT
	movw	$17153, BasicBlockSignatureTracker # imm = 0x4301
	movw	$32498, RunTimeSignatureAdjuster # imm = 0x7EF2
	movw	$17153, BasicBlockSignatureTracker # imm = 0x4301
	movw	$502, RunTimeSignatureAdjuster # imm = 0x1F6
.LBB33_398:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$489, %ax               # imm = 0x1E9
	xorw	%cx, %ax
	cmpw	$17182, %ax             # imm = 0x431E
	jne	.LBB33_723
# %bb.399:                              # %gen.split1898
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$10, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17182, BasicBlockSignatureTracker # imm = 0x431E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_402
# %bb.400:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$17185, %ax             # imm = 0x4321
	jne	.LBB33_723
# %bb.401:                              # %gen.split1900
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$10, %edi
	movw	$17185, BasicBlockSignatureTracker # imm = 0x4321
	movw	$32466, RunTimeSignatureAdjuster # imm = 0x7ED2
	callq	push_knighT
	movw	$17185, BasicBlockSignatureTracker # imm = 0x4321
	movw	$32466, RunTimeSignatureAdjuster # imm = 0x7ED2
	movw	$17185, BasicBlockSignatureTracker # imm = 0x4321
	movw	$63, RunTimeSignatureAdjuster
.LBB33_402:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$17186, %ax             # imm = 0x4322
	jne	.LBB33_723
# %bb.403:                              # %gen.split1902
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$10, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17186, BasicBlockSignatureTracker # imm = 0x4322
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_406
# %bb.404:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$17200, %ax             # imm = 0x4330
	jne	.LBB33_723
# %bb.405:                              # %gen.split1904
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$10, %edi
	movw	$17200, BasicBlockSignatureTracker # imm = 0x4330
	movw	$32451, RunTimeSignatureAdjuster # imm = 0x7EC3
	callq	push_knighT
	movw	$17200, BasicBlockSignatureTracker # imm = 0x4330
	movw	$32451, RunTimeSignatureAdjuster # imm = 0x7EC3
	movw	$17200, BasicBlockSignatureTracker # imm = 0x4330
	movw	$18, RunTimeSignatureAdjuster
.LBB33_406:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$96, %ax
	xorw	%cx, %ax
	cmpw	$17218, %ax             # imm = 0x4342
	jne	.LBB33_723
# %bb.407:                              # %gen.split1906
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$14, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17218, BasicBlockSignatureTracker # imm = 0x4342
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_410
# %bb.408:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$17238, %ax             # imm = 0x4356
	jne	.LBB33_723
# %bb.409:                              # %gen.split1908
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$14, %edi
	movw	$17238, BasicBlockSignatureTracker # imm = 0x4356
	movw	$32421, RunTimeSignatureAdjuster # imm = 0x7EA5
	callq	push_knighT
	movw	$17238, BasicBlockSignatureTracker # imm = 0x4356
	movw	$32421, RunTimeSignatureAdjuster # imm = 0x7EA5
	movw	$17238, BasicBlockSignatureTracker # imm = 0x4356
	movw	$20, RunTimeSignatureAdjuster
.LBB33_410:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$17240, %ax             # imm = 0x4358
	jne	.LBB33_723
# %bb.411:                              # %gen.split1910
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$23, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17240, BasicBlockSignatureTracker # imm = 0x4358
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_414
# %bb.412:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$17251, %ax             # imm = 0x4363
	jne	.LBB33_723
# %bb.413:                              # %gen.split1912
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$23, %edi
	movw	$17251, BasicBlockSignatureTracker # imm = 0x4363
	movw	$32400, RunTimeSignatureAdjuster # imm = 0x7E90
	callq	push_knighT
	movw	$17251, BasicBlockSignatureTracker # imm = 0x4363
	movw	$32400, RunTimeSignatureAdjuster # imm = 0x7E90
	movw	$17251, BasicBlockSignatureTracker # imm = 0x4363
	movw	$59, RunTimeSignatureAdjuster
.LBB33_414:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$62, %ax
	xorw	%cx, %ax
	cmpw	$17254, %ax             # imm = 0x4366
	jne	.LBB33_723
# %bb.415:                              # %gen.split1914
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$25, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17254, BasicBlockSignatureTracker # imm = 0x4366
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_418
# %bb.416:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$17256, %ax             # imm = 0x4368
	jne	.LBB33_723
# %bb.417:                              # %gen.split1916
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$25, %edi
	movw	$17256, BasicBlockSignatureTracker # imm = 0x4368
	movw	$32411, RunTimeSignatureAdjuster # imm = 0x7E9B
	callq	push_knighT
	movw	$17256, BasicBlockSignatureTracker # imm = 0x4368
	movw	$32411, RunTimeSignatureAdjuster # imm = 0x7E9B
	movw	$17256, BasicBlockSignatureTracker # imm = 0x4368
	movw	$14, RunTimeSignatureAdjuster
.LBB33_418:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$17261, %ax             # imm = 0x436D
	jne	.LBB33_723
# %bb.419:                              # %gen.split1918
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17261, BasicBlockSignatureTracker # imm = 0x436D
	movw	$466, RunTimeSignatureAdjuster # imm = 0x1D2
	jmp	.LBB33_548
.LBB33_420:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$665, %ax               # imm = 0x299
	cmpw	$17278, %ax             # imm = 0x437E
	jne	.LBB33_723
# %bb.421:                              # %gen.split1832
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17278, BasicBlockSignatureTracker # imm = 0x437E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_424
# %bb.422:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$251, %ax
	cmpw	$17285, %ax             # imm = 0x4385
	jne	.LBB33_723
# %bb.423:                              # %gen.split1920
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$13, %edi
	movw	$17285, BasicBlockSignatureTracker # imm = 0x4385
	movw	$32227, RunTimeSignatureAdjuster # imm = 0x7DE3
	callq	push_slidE
	movw	$17285, BasicBlockSignatureTracker # imm = 0x4385
	movw	$32227, RunTimeSignatureAdjuster # imm = 0x7DE3
	movw	$17285, BasicBlockSignatureTracker # imm = 0x4385
	movw	$251, RunTimeSignatureAdjuster
.LBB33_424:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$243, %ax
	xorw	%cx, %ax
	cmpw	$17293, %ax             # imm = 0x438D
	jne	.LBB33_723
# %bb.425:                              # %gen.split1922
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17293, BasicBlockSignatureTracker # imm = 0x438D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_428
# %bb.426:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$17299, %ax             # imm = 0x4393
	jne	.LBB33_723
# %bb.427:                              # %gen.split1924
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$11, %edi
	movw	$17299, BasicBlockSignatureTracker # imm = 0x4393
	movw	$32245, RunTimeSignatureAdjuster # imm = 0x7DF5
	callq	push_slidE
	movw	$17299, BasicBlockSignatureTracker # imm = 0x4393
	movw	$32245, RunTimeSignatureAdjuster # imm = 0x7DF5
	movw	$17299, BasicBlockSignatureTracker # imm = 0x4393
	movw	$30, RunTimeSignatureAdjuster
.LBB33_428:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$17307, %ax             # imm = 0x439B
	jne	.LBB33_723
# %bb.429:                              # %gen.split1926
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17307, BasicBlockSignatureTracker # imm = 0x439B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_432
# %bb.430:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$17309, %ax             # imm = 0x439D
	jne	.LBB33_723
# %bb.431:                              # %gen.split1928
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$11, %edi
	movw	$17309, BasicBlockSignatureTracker # imm = 0x439D
	movw	$32251, RunTimeSignatureAdjuster # imm = 0x7DFB
	callq	push_slidE
	movw	$17309, BasicBlockSignatureTracker # imm = 0x439D
	movw	$32251, RunTimeSignatureAdjuster # imm = 0x7DFB
	movw	$17309, BasicBlockSignatureTracker # imm = 0x439D
	movw	$6, RunTimeSignatureAdjuster
.LBB33_432:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$17312, %ax             # imm = 0x43A0
	jne	.LBB33_723
# %bb.433:                              # %gen.split1930
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17312, BasicBlockSignatureTracker # imm = 0x43A0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_436
# %bb.434:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$17322, %ax             # imm = 0x43AA
	jne	.LBB33_723
# %bb.435:                              # %gen.split1932
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$13, %edi
	movw	$17322, BasicBlockSignatureTracker # imm = 0x43AA
	movw	$32204, RunTimeSignatureAdjuster # imm = 0x7DCC
	callq	push_slidE
	movw	$17322, BasicBlockSignatureTracker # imm = 0x43AA
	movw	$32204, RunTimeSignatureAdjuster # imm = 0x7DCC
	movw	$17322, BasicBlockSignatureTracker # imm = 0x43AA
	movw	$10, RunTimeSignatureAdjuster
.LBB33_436:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$17331, %ax             # imm = 0x43B3
	jne	.LBB33_723
# %bb.437:                              # %gen.split1934
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17331, BasicBlockSignatureTracker # imm = 0x43B3
	movw	$268, RunTimeSignatureAdjuster # imm = 0x10C
	jmp	.LBB33_548
.LBB33_438:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$552, %ax               # imm = 0x228
	cmpw	$17359, %ax             # imm = 0x43CF
	jne	.LBB33_723
# %bb.439:                              # %gen.split1834
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17359, BasicBlockSignatureTracker # imm = 0x43CF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_442
# %bb.440:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$17368, %ax             # imm = 0x43D8
	jne	.LBB33_723
# %bb.441:                              # %gen.split1936
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$12, %edi
	movw	$17368, BasicBlockSignatureTracker # imm = 0x43D8
	movw	$32190, RunTimeSignatureAdjuster # imm = 0x7DBE
	callq	push_slidE
	movw	$17368, BasicBlockSignatureTracker # imm = 0x43D8
	movw	$32190, RunTimeSignatureAdjuster # imm = 0x7DBE
	movw	$17368, BasicBlockSignatureTracker # imm = 0x43D8
	movw	$23, RunTimeSignatureAdjuster
.LBB33_442:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$62, %ax
	xorw	%cx, %ax
	cmpw	$17393, %ax             # imm = 0x43F1
	jne	.LBB33_723
# %bb.443:                              # %gen.split1938
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17393, BasicBlockSignatureTracker # imm = 0x43F1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_446
# %bb.444:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2031, %ax              # imm = 0x7EF
	cmpw	$17438, %ax             # imm = 0x441E
	jne	.LBB33_723
# %bb.445:                              # %gen.split1940
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$1, %edi
	movw	$17438, BasicBlockSignatureTracker # imm = 0x441E
	movw	$31352, RunTimeSignatureAdjuster # imm = 0x7A78
	callq	push_slidE
	movw	$17438, BasicBlockSignatureTracker # imm = 0x441E
	movw	$31352, RunTimeSignatureAdjuster # imm = 0x7A78
	movw	$17438, BasicBlockSignatureTracker # imm = 0x441E
	movw	$2031, RunTimeSignatureAdjuster # imm = 0x7EF
.LBB33_446:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2014, %ax              # imm = 0x7DE
	xorw	%cx, %ax
	cmpw	$17455, %ax             # imm = 0x442F
	jne	.LBB33_723
# %bb.447:                              # %gen.split1942
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17455, BasicBlockSignatureTracker # imm = 0x442F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_450
# %bb.448:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$17456, %ax             # imm = 0x4430
	jne	.LBB33_723
# %bb.449:                              # %gen.split1944
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$1, %edi
	movw	$17456, BasicBlockSignatureTracker # imm = 0x4430
	movw	$31318, RunTimeSignatureAdjuster # imm = 0x7A56
	callq	push_slidE
	movw	$17456, BasicBlockSignatureTracker # imm = 0x4430
	movw	$31318, RunTimeSignatureAdjuster # imm = 0x7A56
	movw	$17456, BasicBlockSignatureTracker # imm = 0x4430
	movw	$31, RunTimeSignatureAdjuster
.LBB33_450:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$17466, %ax             # imm = 0x443A
	jne	.LBB33_723
# %bb.451:                              # %gen.split1946
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17466, BasicBlockSignatureTracker # imm = 0x443A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_454
# %bb.452:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$17471, %ax             # imm = 0x443F
	jne	.LBB33_723
# %bb.453:                              # %gen.split1948
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$12, %edi
	movw	$17471, BasicBlockSignatureTracker # imm = 0x443F
	movw	$31321, RunTimeSignatureAdjuster # imm = 0x7A59
	callq	push_slidE
	movw	$17471, BasicBlockSignatureTracker # imm = 0x443F
	movw	$31321, RunTimeSignatureAdjuster # imm = 0x7A59
	movw	$17471, BasicBlockSignatureTracker # imm = 0x443F
	movw	$5, RunTimeSignatureAdjuster
.LBB33_454:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$92, %ax
	xorw	%cx, %ax
	cmpw	$17510, %ax             # imm = 0x4466
	jne	.LBB33_723
# %bb.455:                              # %gen.split1950
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17510, BasicBlockSignatureTracker # imm = 0x4466
	movw	$1753, RunTimeSignatureAdjuster # imm = 0x6D9
	jmp	.LBB33_548
.LBB33_456:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1427, %ax              # imm = 0x593
	cmpw	$17524, %ax             # imm = 0x4474
	jne	.LBB33_723
# %bb.457:                              # %gen.split1836
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17524, BasicBlockSignatureTracker # imm = 0x4474
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_460
# %bb.458:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$17525, %ax             # imm = 0x4475
	jne	.LBB33_723
# %bb.459:                              # %gen.split1952
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$13, %edi
	movw	$17525, BasicBlockSignatureTracker # imm = 0x4475
	movw	$31251, RunTimeSignatureAdjuster # imm = 0x7A13
	callq	push_slidE
	movw	$17525, BasicBlockSignatureTracker # imm = 0x4475
	movw	$31251, RunTimeSignatureAdjuster # imm = 0x7A13
	movw	$17525, BasicBlockSignatureTracker # imm = 0x4475
	movw	$1, RunTimeSignatureAdjuster
.LBB33_460:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$17527, %ax             # imm = 0x4477
	jne	.LBB33_723
# %bb.461:                              # %gen.split1954
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17527, BasicBlockSignatureTracker # imm = 0x4477
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_464
# %bb.462:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$194, %ax
	cmpw	$17589, %ax             # imm = 0x44B5
	jne	.LBB33_723
# %bb.463:                              # %gen.split1956
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$12, %edi
	movw	$17589, BasicBlockSignatureTracker # imm = 0x44B5
	movw	$31443, RunTimeSignatureAdjuster # imm = 0x7AD3
	callq	push_slidE
	movw	$17589, BasicBlockSignatureTracker # imm = 0x44B5
	movw	$31443, RunTimeSignatureAdjuster # imm = 0x7AD3
	movw	$17589, BasicBlockSignatureTracker # imm = 0x44B5
	movw	$194, RunTimeSignatureAdjuster
.LBB33_464:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$206, %ax
	xorw	%cx, %ax
	cmpw	$17593, %ax             # imm = 0x44B9
	jne	.LBB33_723
# %bb.465:                              # %gen.split1958
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17593, BasicBlockSignatureTracker # imm = 0x44B9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_468
# %bb.466:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$17598, %ax             # imm = 0x44BE
	jne	.LBB33_723
# %bb.467:                              # %gen.split1960
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$11, %edi
	movw	$17598, BasicBlockSignatureTracker # imm = 0x44BE
	movw	$31448, RunTimeSignatureAdjuster # imm = 0x7AD8
	callq	push_slidE
	movw	$17598, BasicBlockSignatureTracker # imm = 0x44BE
	movw	$31448, RunTimeSignatureAdjuster # imm = 0x7AD8
	movw	$17598, BasicBlockSignatureTracker # imm = 0x44BE
	movw	$7, RunTimeSignatureAdjuster
.LBB33_468:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$100, %ax
	xorw	%cx, %ax
	cmpw	$17629, %ax             # imm = 0x44DD
	jne	.LBB33_723
# %bb.469:                              # %gen.split1962
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17629, BasicBlockSignatureTracker # imm = 0x44DD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_472
# %bb.470:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$17633, %ax             # imm = 0x44E1
	jne	.LBB33_723
# %bb.471:                              # %gen.split1964
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$1, %edi
	movw	$17633, BasicBlockSignatureTracker # imm = 0x44E1
	movw	$31367, RunTimeSignatureAdjuster # imm = 0x7A87
	callq	push_slidE
	movw	$17633, BasicBlockSignatureTracker # imm = 0x44E1
	movw	$31367, RunTimeSignatureAdjuster # imm = 0x7A87
	movw	$17633, BasicBlockSignatureTracker # imm = 0x44E1
	movw	$60, RunTimeSignatureAdjuster
.LBB33_472:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$17638, %ax             # imm = 0x44E6
	jne	.LBB33_723
# %bb.473:                              # %gen.split1966
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17638, BasicBlockSignatureTracker # imm = 0x44E6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_476
# %bb.474:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$17640, %ax             # imm = 0x44E8
	jne	.LBB33_723
# %bb.475:                              # %gen.split1968
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$1, %edi
	movw	$17640, BasicBlockSignatureTracker # imm = 0x44E8
	movw	$31374, RunTimeSignatureAdjuster # imm = 0x7A8E
	callq	push_slidE
	movw	$17640, BasicBlockSignatureTracker # imm = 0x44E8
	movw	$31374, RunTimeSignatureAdjuster # imm = 0x7A8E
	movw	$17640, BasicBlockSignatureTracker # imm = 0x44E8
	movw	$14, RunTimeSignatureAdjuster
.LBB33_476:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$17644, %ax             # imm = 0x44EC
	jne	.LBB33_723
# %bb.477:                              # %gen.split1970
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17644, BasicBlockSignatureTracker # imm = 0x44EC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_480
# %bb.478:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$17645, %ax             # imm = 0x44ED
	jne	.LBB33_723
# %bb.479:                              # %gen.split1972
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$11, %edi
	movw	$17645, BasicBlockSignatureTracker # imm = 0x44ED
	movw	$31371, RunTimeSignatureAdjuster # imm = 0x7A8B
	callq	push_slidE
	movw	$17645, BasicBlockSignatureTracker # imm = 0x44ED
	movw	$31371, RunTimeSignatureAdjuster # imm = 0x7A8B
	movw	$17645, BasicBlockSignatureTracker # imm = 0x44ED
	movw	$1, RunTimeSignatureAdjuster
.LBB33_480:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$17659, %ax             # imm = 0x44FB
	jne	.LBB33_723
# %bb.481:                              # %gen.split1974
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17659, BasicBlockSignatureTracker # imm = 0x44FB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_484
# %bb.482:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$495, %ax               # imm = 0x1EF
	cmpw	$17684, %ax             # imm = 0x4514
	jne	.LBB33_723
# %bb.483:                              # %gen.split1976
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$12, %edi
	movw	$17684, BasicBlockSignatureTracker # imm = 0x4514
	movw	$31602, RunTimeSignatureAdjuster # imm = 0x7B72
	callq	push_slidE
	movw	$17684, BasicBlockSignatureTracker # imm = 0x4514
	movw	$31602, RunTimeSignatureAdjuster # imm = 0x7B72
	movw	$17684, BasicBlockSignatureTracker # imm = 0x4514
	movw	$495, RunTimeSignatureAdjuster # imm = 0x1EF
.LBB33_484:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$493, %ax               # imm = 0x1ED
	xorw	%cx, %ax
	cmpw	$17686, %ax             # imm = 0x4516
	jne	.LBB33_723
# %bb.485:                              # %gen.split1978
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$17686, BasicBlockSignatureTracker # imm = 0x4516
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_488
# %bb.486:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$17687, %ax             # imm = 0x4517
	jne	.LBB33_723
# %bb.487:                              # %gen.split1980
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$13, %edi
	movw	$17687, BasicBlockSignatureTracker # imm = 0x4517
	movw	$31601, RunTimeSignatureAdjuster # imm = 0x7B71
	callq	push_slidE
	movw	$17687, BasicBlockSignatureTracker # imm = 0x4517
	movw	$31601, RunTimeSignatureAdjuster # imm = 0x7B71
	movw	$17687, BasicBlockSignatureTracker # imm = 0x4517
	movw	$1, RunTimeSignatureAdjuster
.LBB33_488:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$17688, %ax             # imm = 0x4518
	jne	.LBB33_723
# %bb.489:                              # %gen.split1982
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17688, BasicBlockSignatureTracker # imm = 0x4518
	movw	$1959, RunTimeSignatureAdjuster # imm = 0x7A7
	jmp	.LBB33_548
.LBB33_490:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1277, %ax              # imm = 0x4FD
	cmpw	$17690, %ax             # imm = 0x451A
	jne	.LBB33_723
# %bb.491:                              # %gen.split1838
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$13, %edi
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	callq	push_king
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	movl	(%r14), %edi
	subl	$12, %edi
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	callq	push_king
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	movl	(%r14), %edi
	subl	$11, %edi
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	callq	push_king
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	movl	(%r14), %edi
	subl	$1, %edi
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	callq	push_king
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	movl	(%r14), %edi
	addl	$1, %edi
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	callq	push_king
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	movl	(%r14), %edi
	addl	$11, %edi
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	callq	push_king
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	movl	(%r14), %edi
	addl	$12, %edi
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	callq	push_king
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	movl	(%r14), %edi
	addl	$13, %edi
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	callq	push_king
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$1392, RunTimeSignatureAdjuster # imm = 0x570
	movl	(%r14), %eax
	movw	$17690, BasicBlockSignatureTracker # imm = 0x451A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$114, %eax
	jne	.LBB33_544
# %bb.492:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$17712, %ax             # imm = 0x4530
	jne	.LBB33_723
# %bb.493:                              # %gen.split1984
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	moved+456, %eax
	movw	$17712, BasicBlockSignatureTracker # imm = 0x4530
	movw	$42, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_544
# %bb.494:                              # %Buffer__20
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-15614, %ax            # imm = 0xC302
	cmpw	$-31182, %ax            # imm = 0x8632
	jne	.LBB33_723
# %bb.495:                              # %gen.split1988
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$-31182, BasicBlockSignatureTracker # imm = 0x8632
	movw	$-15614, RunTimeSignatureAdjuster # imm = 0xC302
# %bb.496:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$17713, %ax             # imm = 0x4531
	jne	.LBB33_723
# %bb.497:                              # %gen.split2270
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	captures, %eax
	movw	$17713, BasicBlockSignatureTracker # imm = 0x4531
	movw	$43, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_544
# %bb.498:                              # %Buffer__21
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20150, %ax             # imm = 0x4EB6
	cmpw	$2951, %ax              # imm = 0xB87
	jne	.LBB33_723
# %bb.499:                              # %gen.split1990
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$2951, BasicBlockSignatureTracker # imm = 0xB87
	movw	$20150, RunTimeSignatureAdjuster # imm = 0x4EB6
# %bb.500:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$17723, %ax             # imm = 0x453B
	jne	.LBB33_723
# %bb.501:                              # %gen.split2272
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	Variant, %eax
	movw	$17723, BasicBlockSignatureTracker # imm = 0x453B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB33_506
# %bb.502:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$110, %ax
	cmpw	$17749, %ax             # imm = 0x4555
	jne	.LBB33_723
# %bb.503:                              # %gen.split1994
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	Giveaway, %eax
	movw	$17749, BasicBlockSignatureTracker # imm = 0x4555
	movw	$79, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB33_544
# %bb.504:                              # %Buffer__22
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16576, %ax             # imm = 0x40C0
	cmpw	$1429, %ax              # imm = 0x595
	jne	.LBB33_723
# %bb.505:                              # %gen.split1996
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$1429, BasicBlockSignatureTracker # imm = 0x595
	movw	$16558, RunTimeSignatureAdjuster # imm = 0x40AE
.LBB33_506:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$93, %ax
	xorw	%cx, %ax
	cmpw	$17766, %ax             # imm = 0x4566
	jne	.LBB33_723
# %bb.507:                              # %gen.split1992
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	moved+468, %eax
	movw	$17766, BasicBlockSignatureTracker # imm = 0x4566
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_522
# %bb.508:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$17767, %ax             # imm = 0x4567
	jne	.LBB33_723
# %bb.509:                              # %gen.split2000
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	board+468, %eax
	movw	$17767, BasicBlockSignatureTracker # imm = 0x4567
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jne	.LBB33_522
# %bb.510:                              # %Buffer__23
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1403, %ax              # imm = 0x57B
	cmpw	$16412, %ax             # imm = 0x401C
	jne	.LBB33_723
# %bb.511:                              # %gen.split2002
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$16412, BasicBlockSignatureTracker # imm = 0x401C
	movw	$1403, RunTimeSignatureAdjuster # imm = 0x57B
# %bb.512:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$17774, %ax             # imm = 0x456E
	jne	.LBB33_723
# %bb.513:                              # %gen.split2274
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	board+460, %eax
	movw	$17774, BasicBlockSignatureTracker # imm = 0x456E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_520
# %bb.514:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$17777, %ax             # imm = 0x4571
	jne	.LBB33_723
# %bb.515:                              # %gen.split2004
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	board+464, %eax
	movw	$17777, BasicBlockSignatureTracker # imm = 0x4571
	movw	$31, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_520
# %bb.516:                              # %Buffer__24
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-26880, %ax            # imm = 0x9700
	cmpw	$-11663, %ax            # imm = 0xD271
	jne	.LBB33_723
# %bb.517:                              # %gen.split2008
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$-11663, BasicBlockSignatureTracker # imm = 0xD271
	movw	$-26880, RunTimeSignatureAdjuster # imm = 0x9700
# %bb.518:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$17784, %ax             # imm = 0x4578
	jne	.LBB33_723
# %bb.519:                              # %gen.split2276
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	addl	$2, %edi
	movw	$17784, BasicBlockSignatureTracker # imm = 0x4578
	movw	$1456, RunTimeSignatureAdjuster # imm = 0x5B0
	movl	$3, %esi
	callq	push_king_castle
	movw	$17784, BasicBlockSignatureTracker # imm = 0x4578
	movw	$1456, RunTimeSignatureAdjuster # imm = 0x5B0
	movw	$17784, BasicBlockSignatureTracker # imm = 0x4578
	movw	$22, RunTimeSignatureAdjuster
.LBB33_520:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$17785, %ax             # imm = 0x4579
	jne	.LBB33_723
# %bb.521:                              # %gen.split2006
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17785, BasicBlockSignatureTracker # imm = 0x4579
	movw	$31, RunTimeSignatureAdjuster
.LBB33_522:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$253, %ax
	xorw	%cx, %ax
	cmpw	$17819, %ax             # imm = 0x459B
	jne	.LBB33_723
# %bb.523:                              # %gen.split1998
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	moved+440, %eax
	movw	$17819, BasicBlockSignatureTracker # imm = 0x459B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_542
# %bb.524:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$17824, %ax             # imm = 0x45A0
	jne	.LBB33_723
# %bb.525:                              # %gen.split2012
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	board+440, %eax
	movw	$17824, BasicBlockSignatureTracker # imm = 0x45A0
	movw	$59, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jne	.LBB33_542
# %bb.526:                              # %Buffer__25
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20408, %ax            # imm = 0xB048
	cmpw	$-2584, %ax             # imm = 0xF5E8
	jne	.LBB33_723
# %bb.527:                              # %gen.split2014
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$-2584, BasicBlockSignatureTracker # imm = 0xF5E8
	movw	$-20408, RunTimeSignatureAdjuster # imm = 0xB048
# %bb.528:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$17840, %ax             # imm = 0x45B0
	jne	.LBB33_723
# %bb.529:                              # %gen.split2278
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	board+444, %eax
	movw	$17840, BasicBlockSignatureTracker # imm = 0x45B0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_540
# %bb.530:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$17842, %ax             # imm = 0x45B2
	jne	.LBB33_723
# %bb.531:                              # %gen.split2016
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	board+448, %eax
	movw	$17842, BasicBlockSignatureTracker # imm = 0x45B2
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_540
# %bb.532:                              # %Buffer__26
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-10165, %ax            # imm = 0xD84B
	cmpw	$-25095, %ax            # imm = 0x9DF9
	jne	.LBB33_723
# %bb.533:                              # %gen.split2020
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$-25095, BasicBlockSignatureTracker # imm = 0x9DF9
	movw	$-10165, RunTimeSignatureAdjuster # imm = 0xD84B
# %bb.534:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$17844, %ax             # imm = 0x45B4
	jne	.LBB33_723
# %bb.535:                              # %gen.split2280
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	board+452, %eax
	movw	$17844, BasicBlockSignatureTracker # imm = 0x45B4
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB33_540
# %bb.536:                              # %Buffer__27
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-32564, %ax            # imm = 0x80CC
	cmpw	$-14984, %ax            # imm = 0xC578
	jne	.LBB33_723
# %bb.537:                              # %gen.split2022
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$-14984, BasicBlockSignatureTracker # imm = 0xC578
	movw	$-32564, RunTimeSignatureAdjuster # imm = 0x80CC
# %bb.538:                              #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$100, %ax
	xorw	%cx, %ax
	cmpw	$17872, %ax             # imm = 0x45D0
	jne	.LBB33_723
# %bb.539:                              # %gen.split2282
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r14), %edi
	subl	$2, %edi
	movw	$17872, BasicBlockSignatureTracker # imm = 0x45D0
	movw	$1304, RunTimeSignatureAdjuster # imm = 0x518
	movl	$4, %esi
	callq	push_king_castle
	movw	$17872, BasicBlockSignatureTracker # imm = 0x45D0
	movw	$1304, RunTimeSignatureAdjuster # imm = 0x518
	movw	$17872, BasicBlockSignatureTracker # imm = 0x45D0
	movw	$96, RunTimeSignatureAdjuster
.LBB33_540:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$97, %ax
	xorw	%cx, %ax
	cmpw	$17873, %ax             # imm = 0x45D1
	jne	.LBB33_723
# %bb.541:                              # %gen.split2018
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17873, BasicBlockSignatureTracker # imm = 0x45D1
	movw	$74, RunTimeSignatureAdjuster
.LBB33_542:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$127, %ax
	xorw	%cx, %ax
	cmpw	$17892, %ax             # imm = 0x45E4
	jne	.LBB33_723
# %bb.543:                              # %gen.split2010
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17892, BasicBlockSignatureTracker # imm = 0x45E4
	movw	$254, RunTimeSignatureAdjuster
.LBB33_544:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$255, %ax
	xorw	%cx, %ax
	cmpw	$17893, %ax             # imm = 0x45E5
	jne	.LBB33_723
# %bb.545:                              # %gen.split1986
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17893, BasicBlockSignatureTracker # imm = 0x45E5
	movw	$1882, RunTimeSignatureAdjuster # imm = 0x75A
	jmp	.LBB33_548
.LBB33_546:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1985, %ax              # imm = 0x7C1
	cmpw	$17958, %ax             # imm = 0x4626
	jne	.LBB33_723
# %bb.547:                              # %gen.split1826
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17958, BasicBlockSignatureTracker # imm = 0x4626
	movw	$1177, RunTimeSignatureAdjuster # imm = 0x499
.LBB33_548:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1166, %ax              # imm = 0x48E
	xorw	%cx, %ax
	cmpw	$17969, %ax             # imm = 0x4631
	jne	.LBB33_723
# %bb.549:                              # %gen.split1886
                                        #   in Loop: Header=BB33_301 Depth=2
	movw	$17969, BasicBlockSignatureTracker # imm = 0x4631
	movw	$2025, RunTimeSignatureAdjuster # imm = 0x7E9
.LBB33_550:                             #   in Loop: Header=BB33_301 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1944, %ax              # imm = 0x798
	xorw	%cx, %ax
	cmpw	$17984, %ax             # imm = 0x4640
	jne	.LBB33_723
# %bb.551:                              # %gen.split1822
                                        #   in Loop: Header=BB33_301 Depth=2
	movl	(%r15), %eax
	addl	$1, %eax
	movl	%eax, (%r15)
	movw	$17984, BasicBlockSignatureTracker # imm = 0x4640
	movw	$1812, RunTimeSignatureAdjuster # imm = 0x714
	jmp	.LBB33_301
.LBB33_552:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2043, %ax              # imm = 0x7FB
	cmpw	$17989, %ax             # imm = 0x4645
	jne	.LBB33_724
# %bb.553:                              # %gen.split1816
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$17989, BasicBlockSignatureTracker # imm = 0x4645
	movw	$1801, RunTimeSignatureAdjuster # imm = 0x709
.LBB33_554:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1822, %ax              # imm = 0x71E
	xorw	%cx, %ax
	cmpw	$18002, %ax             # imm = 0x4652
	jne	.LBB33_724
# %bb.555:                              # %gen.split1794
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	Variant, %eax
	movw	$18002, BasicBlockSignatureTracker # imm = 0x4652
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_558
# %bb.556:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$18013, %ax             # imm = 0x465D
	jne	.LBB33_724
# %bb.557:                              # %gen.split2026
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	Variant, %eax
	movw	$18013, BasicBlockSignatureTracker # imm = 0x465D
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB33_700
.LBB33_558:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$18036, %ax             # imm = 0x4674
	jne	.LBB33_724
# %bb.559:                              # %gen.split2024
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	captures, %eax
	movw	$18036, BasicBlockSignatureTracker # imm = 0x4674
	movw	$41, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_702
# %bb.560:                              # %Buffer__29
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-17083, %ax            # imm = 0xBD45
	cmpw	$-1231, %ax             # imm = 0xFB31
	jne	.LBB33_724
# %bb.561:                              # %gen.split2032
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$-1231, BasicBlockSignatureTracker # imm = 0xFB31
	movw	$-17083, RunTimeSignatureAdjuster # imm = 0xBD45
# %bb.562:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$18041, %ax             # imm = 0x4679
	jne	.LBB33_724
# %bb.563:                              # %gen.split2284
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	kingcap, %eax
	movw	$18041, BasicBlockSignatureTracker # imm = 0x4679
	movw	$36, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_702
# %bb.564:                              # %Buffer__30
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-16697, %ax            # imm = 0xBEC7
	cmpw	$-1858, %ax             # imm = 0xF8BE
	jne	.LBB33_724
# %bb.565:                              # %gen.split2034
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$-1858, BasicBlockSignatureTracker # imm = 0xF8BE
	movw	$-16697, RunTimeSignatureAdjuster # imm = 0xBEC7
# %bb.566:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$18044, %ax             # imm = 0x467C
	jne	.LBB33_724
# %bb.567:                              # %gen.split2286
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	white_to_move, %eax
	movw	$18044, BasicBlockSignatureTracker # imm = 0x467C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_631
# %bb.568:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$245, %ax
	cmpw	$18057, %ax             # imm = 0x4689
	jne	.LBB33_724
# %bb.569:                              # %gen.split2036
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	holding+4, %eax
	movw	$18057, BasicBlockSignatureTracker # imm = 0x4689
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_586
# %bb.570:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$18058, %ax             # imm = 0x468A
	jne	.LBB33_724
# %bb.571:                              # %gen.split2042
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	holding+12, %eax
	movw	$18058, BasicBlockSignatureTracker # imm = 0x468A
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_586
# %bb.572:                              # %Buffer__31
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21344, %ax             # imm = 0x5360
	cmpw	$5610, %ax              # imm = 0x15EA
	jne	.LBB33_724
# %bb.573:                              # %gen.split2044
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$5610, BasicBlockSignatureTracker # imm = 0x15EA
	movw	$21344, RunTimeSignatureAdjuster # imm = 0x5360
# %bb.574:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$18069, %ax             # imm = 0x4695
	jne	.LBB33_724
# %bb.575:                              # %gen.split2288
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	holding+44, %eax
	movw	$18069, BasicBlockSignatureTracker # imm = 0x4695
	movw	$28, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_586
# %bb.576:                              # %Buffer__32
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27614, %ax             # imm = 0x6BDE
	cmpw	$11595, %ax             # imm = 0x2D4B
	jne	.LBB33_724
# %bb.577:                              # %gen.split2046
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$11595, BasicBlockSignatureTracker # imm = 0x2D4B
	movw	$27614, RunTimeSignatureAdjuster # imm = 0x6BDE
# %bb.578:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$18073, %ax             # imm = 0x4699
	jne	.LBB33_724
# %bb.579:                              # %gen.split2290
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	holding+36, %eax
	movw	$18073, BasicBlockSignatureTracker # imm = 0x4699
	movw	$16, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_586
# %bb.580:                              # %Buffer__33
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8921, %ax             # imm = 0xDD27
	cmpw	$-25666, %ax            # imm = 0x9BBE
	jne	.LBB33_724
# %bb.581:                              # %gen.split2048
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$-25666, BasicBlockSignatureTracker # imm = 0x9BBE
	movw	$-8921, RunTimeSignatureAdjuster # imm = 0xDD27
# %bb.582:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$18100, %ax             # imm = 0x46B4
	jne	.LBB33_724
# %bb.583:                              # %gen.split2292
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	holding+28, %eax
	movw	$18100, BasicBlockSignatureTracker # imm = 0x46B4
	movw	$200, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_631
# %bb.584:                              # %Buffer__34
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29258, %ax            # imm = 0x8DB6
	cmpw	$-13566, %ax            # imm = 0xCB02
	jne	.LBB33_724
# %bb.585:                              # %gen.split2050
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$-13566, BasicBlockSignatureTracker # imm = 0xCB02
	movw	$-29301, RunTimeSignatureAdjuster # imm = 0x8D8B
.LBB33_586:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$18108, %ax             # imm = 0x46BC
	jne	.LBB33_724
# %bb.587:                              # %gen.split2040
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	$26, (%r14)
	movw	$18108, BasicBlockSignatureTracker # imm = 0x46BC
	movw	$0, RunTimeSignatureAdjuster
.LBB33_588:                             #   Parent Loop BB33_42 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$18110, %ax             # imm = 0x46BE
	jne	.LBB33_720
# %bb.589:                              # %gen.split2052
                                        #   in Loop: Header=BB33_588 Depth=2
	movl	(%r14), %eax
	movw	$18110, BasicBlockSignatureTracker # imm = 0x46BE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$118, %eax
	jge	.LBB33_629
# %bb.590:                              #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$112, %ax
	cmpw	$18126, %ax             # imm = 0x46CE
	jne	.LBB33_720
# %bb.591:                              # %gen.split2054
                                        #   in Loop: Header=BB33_588 Depth=2
	movl	(%r14), %eax
	movl	%eax, gfrom(%rip)
	movslq	(%r14), %rax
	movl	board(,%rax,4), %eax
	movw	$18126, BasicBlockSignatureTracker(%rip) # imm = 0x46CE
	movw	$0, RunTimeSignatureAdjuster(%rip)
	testl	%eax, %eax
	je	.LBB33_593
	jmp	.LBB33_592
.LBB33_592:                             # %gen.split2054
                                        #   in Loop: Header=BB33_588 Depth=2
	subl	$13, %eax
	je	.LBB33_595
	jmp	.LBB33_625
.LBB33_593:                             #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$18133, %ax             # imm = 0x46D5
	jne	.LBB33_720
# %bb.594:                              # %gen.split2060
                                        #   in Loop: Header=BB33_588 Depth=2
	movl	(%r14), %eax
	addl	$3, %eax
	movl	%eax, (%r14)
	movw	$18133, BasicBlockSignatureTracker # imm = 0x46D5
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_627
.LBB33_595:                             #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$18163, %ax             # imm = 0x46F3
	jne	.LBB33_720
# %bb.596:                              # %gen.split2062
                                        #   in Loop: Header=BB33_588 Depth=2
	movl	holding+4, %eax
	movw	$18163, BasicBlockSignatureTracker # imm = 0x46F3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_607
# %bb.597:                              #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$18169, %ax             # imm = 0x46F9
	jne	.LBB33_720
# %bb.598:                              # %gen.split2066
                                        #   in Loop: Header=BB33_588 Depth=2
	movslq	(%r14), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$18169, BasicBlockSignatureTracker # imm = 0x46F9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB33_605
# %bb.599:                              #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$485, %ax               # imm = 0x1E5
	cmpw	$18204, %ax             # imm = 0x471C
	jne	.LBB33_720
# %bb.600:                              # %gen.split2070
                                        #   in Loop: Header=BB33_588 Depth=2
	movslq	(%r14), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$18204, BasicBlockSignatureTracker # imm = 0x471C
	movw	$485, RunTimeSignatureAdjuster # imm = 0x1E5
	cmpl	$1, %eax
	je	.LBB33_605
# %bb.601:                              # %Buffer__35
                                        #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24900, %ax             # imm = 0x6144
	cmpw	$9816, %ax              # imm = 0x2658
	jne	.LBB33_720
# %bb.602:                              # %gen.split2074
                                        #   in Loop: Header=BB33_588 Depth=2
	movw	$9816, BasicBlockSignatureTracker # imm = 0x2658
	movw	$24900, RunTimeSignatureAdjuster # imm = 0x6144
# %bb.603:                              #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$18224, %ax             # imm = 0x4730
	jne	.LBB33_720
# %bb.604:                              # %gen.split2294
                                        #   in Loop: Header=BB33_588 Depth=2
	movw	$18224, BasicBlockSignatureTracker # imm = 0x4730
	movw	$0, RunTimeSignatureAdjuster
	movl	$1, %edi
	callq	try_drop
	movw	$18224, BasicBlockSignatureTracker # imm = 0x4730
	movw	$457, RunTimeSignatureAdjuster # imm = 0x1C9
	movw	$18224, BasicBlockSignatureTracker # imm = 0x4730
	movw	$457, RunTimeSignatureAdjuster # imm = 0x1C9
.LBB33_605:                             #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$438, %ax               # imm = 0x1B6
	xorw	%cx, %ax
	cmpw	$18255, %ax             # imm = 0x474F
	jne	.LBB33_720
# %bb.606:                              # %gen.split2072
                                        #   in Loop: Header=BB33_588 Depth=2
	movw	$18255, BasicBlockSignatureTracker # imm = 0x474F
	movw	$444, RunTimeSignatureAdjuster # imm = 0x1BC
.LBB33_607:                             #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$417, %ax               # imm = 0x1A1
	xorw	%cx, %ax
	cmpw	$18258, %ax             # imm = 0x4752
	jne	.LBB33_720
# %bb.608:                              # %gen.split2068
                                        #   in Loop: Header=BB33_588 Depth=2
	movl	holding+12, %eax
	movw	$18258, BasicBlockSignatureTracker # imm = 0x4752
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_611
# %bb.609:                              #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$18261, %ax             # imm = 0x4755
	jne	.LBB33_720
# %bb.610:                              # %gen.split2076
                                        #   in Loop: Header=BB33_588 Depth=2
	movw	$18261, BasicBlockSignatureTracker # imm = 0x4755
	movw	$101, RunTimeSignatureAdjuster
	movl	$3, %edi
	callq	try_drop
	movw	$18261, BasicBlockSignatureTracker # imm = 0x4755
	movw	$101, RunTimeSignatureAdjuster
	movw	$18261, BasicBlockSignatureTracker # imm = 0x4755
	movw	$7, RunTimeSignatureAdjuster
.LBB33_611:                             #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$54, %ax
	xorw	%cx, %ax
	cmpw	$18276, %ax             # imm = 0x4764
	jne	.LBB33_720
# %bb.612:                              # %gen.split2078
                                        #   in Loop: Header=BB33_588 Depth=2
	movl	holding+44, %eax
	movw	$18276, BasicBlockSignatureTracker # imm = 0x4764
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_615
# %bb.613:                              #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$227, %ax
	cmpw	$18311, %ax             # imm = 0x4787
	jne	.LBB33_720
# %bb.614:                              # %gen.split2080
                                        #   in Loop: Header=BB33_588 Depth=2
	movw	$18311, BasicBlockSignatureTracker # imm = 0x4787
	movw	$183, RunTimeSignatureAdjuster
	movl	$11, %edi
	callq	try_drop
	movw	$18311, BasicBlockSignatureTracker # imm = 0x4787
	movw	$183, RunTimeSignatureAdjuster
	movw	$18311, BasicBlockSignatureTracker # imm = 0x4787
	movw	$227, RunTimeSignatureAdjuster
.LBB33_615:                             #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$232, %ax
	xorw	%cx, %ax
	cmpw	$18316, %ax             # imm = 0x478C
	jne	.LBB33_720
# %bb.616:                              # %gen.split2082
                                        #   in Loop: Header=BB33_588 Depth=2
	movl	holding+28, %eax
	movw	$18316, BasicBlockSignatureTracker # imm = 0x478C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_619
# %bb.617:                              #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$18321, %ax             # imm = 0x4791
	jne	.LBB33_720
# %bb.618:                              # %gen.split2084
                                        #   in Loop: Header=BB33_588 Depth=2
	movw	$18321, BasicBlockSignatureTracker # imm = 0x4791
	movw	$161, RunTimeSignatureAdjuster
	movl	$7, %edi
	callq	try_drop
	movw	$18321, BasicBlockSignatureTracker # imm = 0x4791
	movw	$161, RunTimeSignatureAdjuster
	movw	$18321, BasicBlockSignatureTracker # imm = 0x4791
	movw	$29, RunTimeSignatureAdjuster
.LBB33_619:                             #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$18325, %ax             # imm = 0x4795
	jne	.LBB33_720
# %bb.620:                              # %gen.split2086
                                        #   in Loop: Header=BB33_588 Depth=2
	movl	holding+36, %eax
	movw	$18325, BasicBlockSignatureTracker # imm = 0x4795
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_623
# %bb.621:                              #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$18326, %ax             # imm = 0x4796
	jne	.LBB33_720
# %bb.622:                              # %gen.split2088
                                        #   in Loop: Header=BB33_588 Depth=2
	movw	$18326, BasicBlockSignatureTracker # imm = 0x4796
	movw	$166, RunTimeSignatureAdjuster
	movl	$9, %edi
	callq	try_drop
	movw	$18326, BasicBlockSignatureTracker # imm = 0x4796
	movw	$166, RunTimeSignatureAdjuster
	movw	$18326, BasicBlockSignatureTracker # imm = 0x4796
	movw	$3, RunTimeSignatureAdjuster
.LBB33_623:                             #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$18329, %ax             # imm = 0x4799
	jne	.LBB33_720
# %bb.624:                              # %gen.split2090
                                        #   in Loop: Header=BB33_588 Depth=2
	movw	$18329, BasicBlockSignatureTracker # imm = 0x4799
	movw	$343, RunTimeSignatureAdjuster # imm = 0x157
.LBB33_625:                             #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$358, %ax               # imm = 0x166
	xorw	%cx, %ax
	cmpw	$18344, %ax             # imm = 0x47A8
	jne	.LBB33_720
# %bb.626:                              # %gen.split2058
                                        #   in Loop: Header=BB33_588 Depth=2
	movw	$18344, BasicBlockSignatureTracker # imm = 0x47A8
	movw	$381, RunTimeSignatureAdjuster # imm = 0x17D
.LBB33_627:                             #   in Loop: Header=BB33_588 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$361, %ax               # imm = 0x169
	xorw	%cx, %ax
	cmpw	$18364, %ax             # imm = 0x47BC
	jne	.LBB33_720
# %bb.628:                              # %gen.split2064
                                        #   in Loop: Header=BB33_588 Depth=2
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movw	$18364, BasicBlockSignatureTracker # imm = 0x47BC
	movw	$256, RunTimeSignatureAdjuster # imm = 0x100
	jmp	.LBB33_588
.LBB33_629:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$375, %ax               # imm = 0x177
	cmpw	$18377, %ax             # imm = 0x47C9
	jne	.LBB33_724
# %bb.630:                              # %gen.split2056
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$18377, BasicBlockSignatureTracker # imm = 0x47C9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_698
.LBB33_631:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$403, %ax               # imm = 0x193
	xorw	%cx, %ax
	cmpw	$18415, %ax             # imm = 0x47EF
	jne	.LBB33_724
# %bb.632:                              # %gen.split2038
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	white_to_move, %eax
	movw	$18415, BasicBlockSignatureTracker # imm = 0x47EF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_696
# %bb.633:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$18418, %ax             # imm = 0x47F2
	jne	.LBB33_724
# %bb.634:                              # %gen.split2096
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	holding+72, %eax
	movw	$18418, BasicBlockSignatureTracker # imm = 0x47F2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_651
# %bb.635:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$18428, %ax             # imm = 0x47FC
	jne	.LBB33_724
# %bb.636:                              # %gen.split2100
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	holding+80, %eax
	movw	$18428, BasicBlockSignatureTracker # imm = 0x47FC
	movw	$14, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB33_651
# %bb.637:                              # %Buffer__36
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-21596, %ax            # imm = 0xABA4
	cmpw	$-5032, %ax             # imm = 0xEC58
	jne	.LBB33_724
# %bb.638:                              # %gen.split2102
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$-5032, BasicBlockSignatureTracker # imm = 0xEC58
	movw	$-21596, RunTimeSignatureAdjuster # imm = 0xABA4
# %bb.639:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4090, %ax              # imm = 0xFFA
	xorw	%cx, %ax
	cmpw	$18438, %ax             # imm = 0x4806
	jne	.LBB33_724
# %bb.640:                              # %gen.split2296
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	holding+112, %eax
	movw	$18438, BasicBlockSignatureTracker # imm = 0x4806
	movw	$4084, RunTimeSignatureAdjuster # imm = 0xFF4
	cmpl	$0, %eax
	jne	.LBB33_651
# %bb.641:                              # %Buffer__37
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32666, %ax             # imm = 0x7F9A
	cmpw	$14236, %ax             # imm = 0x379C
	jne	.LBB33_724
# %bb.642:                              # %gen.split2104
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$14236, BasicBlockSignatureTracker # imm = 0x379C
	movw	$32666, RunTimeSignatureAdjuster # imm = 0x7F9A
# %bb.643:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$18439, %ax             # imm = 0x4807
	jne	.LBB33_724
# %bb.644:                              # %gen.split2298
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	holding+104, %eax
	movw	$18439, BasicBlockSignatureTracker # imm = 0x4807
	movw	$4085, RunTimeSignatureAdjuster # imm = 0xFF5
	cmpl	$0, %eax
	jne	.LBB33_651
# %bb.645:                              # %Buffer__38
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10837, %ax             # imm = 0x2A55
	cmpw	$25170, %ax             # imm = 0x6252
	jne	.LBB33_724
# %bb.646:                              # %gen.split2106
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$25170, BasicBlockSignatureTracker # imm = 0x6252
	movw	$10837, RunTimeSignatureAdjuster # imm = 0x2A55
# %bb.647:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$18450, %ax             # imm = 0x4812
	jne	.LBB33_724
# %bb.648:                              # %gen.split2300
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	holding+96, %eax
	movw	$18450, BasicBlockSignatureTracker # imm = 0x4812
	movw	$4093, RunTimeSignatureAdjuster # imm = 0xFFD
	cmpl	$0, %eax
	je	.LBB33_696
# %bb.649:                              # %Buffer__39
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31775, %ax             # imm = 0x7C1F
	cmpw	$13325, %ax             # imm = 0x340D
	jne	.LBB33_724
# %bb.650:                              # %gen.split2108
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$13325, BasicBlockSignatureTracker # imm = 0x340D
	movw	$29695, RunTimeSignatureAdjuster # imm = 0x73FF
.LBB33_651:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4072, %ax              # imm = 0xFE8
	xorw	%cx, %ax
	cmpw	$18458, %ax             # imm = 0x481A
	jne	.LBB33_724
# %bb.652:                              # %gen.split2098
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	$26, (%r14)
	movw	$18458, BasicBlockSignatureTracker # imm = 0x481A
	movw	$0, RunTimeSignatureAdjuster
.LBB33_653:                             #   Parent Loop BB33_42 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$18463, %ax             # imm = 0x481F
	jne	.LBB33_721
# %bb.654:                              # %gen.split2110
                                        #   in Loop: Header=BB33_653 Depth=2
	movl	(%r14), %eax
	movw	$18463, BasicBlockSignatureTracker # imm = 0x481F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$118, %eax
	jge	.LBB33_694
# %bb.655:                              #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$18466, %ax             # imm = 0x4822
	jne	.LBB33_721
# %bb.656:                              # %gen.split2112
                                        #   in Loop: Header=BB33_653 Depth=2
	movl	(%r14), %eax
	movl	%eax, gfrom(%rip)
	movslq	(%r14), %rax
	movl	board(,%rax,4), %eax
	movw	$18466, BasicBlockSignatureTracker(%rip) # imm = 0x4822
	movw	$0, RunTimeSignatureAdjuster(%rip)
	testl	%eax, %eax
	je	.LBB33_658
	jmp	.LBB33_657
.LBB33_657:                             # %gen.split2112
                                        #   in Loop: Header=BB33_653 Depth=2
	subl	$13, %eax
	je	.LBB33_660
	jmp	.LBB33_690
.LBB33_658:                             #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$18468, %ax             # imm = 0x4824
	jne	.LBB33_721
# %bb.659:                              # %gen.split2118
                                        #   in Loop: Header=BB33_653 Depth=2
	movl	(%r14), %eax
	addl	$3, %eax
	movl	%eax, (%r14)
	movw	$18468, BasicBlockSignatureTracker # imm = 0x4824
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB33_692
.LBB33_660:                             #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$18486, %ax             # imm = 0x4836
	jne	.LBB33_721
# %bb.661:                              # %gen.split2120
                                        #   in Loop: Header=BB33_653 Depth=2
	movl	holding+72, %eax
	movw	$18486, BasicBlockSignatureTracker # imm = 0x4836
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_672
# %bb.662:                              #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$18504, %ax             # imm = 0x4848
	jne	.LBB33_721
# %bb.663:                              # %gen.split2124
                                        #   in Loop: Header=BB33_653 Depth=2
	movslq	(%r14), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$18504, BasicBlockSignatureTracker # imm = 0x4848
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB33_670
# %bb.664:                              #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$18509, %ax             # imm = 0x484D
	jne	.LBB33_721
# %bb.665:                              # %gen.split2128
                                        #   in Loop: Header=BB33_653 Depth=2
	movslq	(%r14), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$18509, BasicBlockSignatureTracker # imm = 0x484D
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB33_670
# %bb.666:                              # %Buffer__40
                                        #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1125, %ax             # imm = 0xFB9B
	cmpw	$-19498, %ax            # imm = 0xB3D6
	jne	.LBB33_721
# %bb.667:                              # %gen.split2132
                                        #   in Loop: Header=BB33_653 Depth=2
	movw	$-19498, BasicBlockSignatureTracker # imm = 0xB3D6
	movw	$-1125, RunTimeSignatureAdjuster # imm = 0xFB9B
# %bb.668:                              #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$36, %ax
	xorw	%cx, %ax
	cmpw	$18537, %ax             # imm = 0x4869
	jne	.LBB33_721
# %bb.669:                              # %gen.split2302
                                        #   in Loop: Header=BB33_653 Depth=2
	movw	$18537, BasicBlockSignatureTracker # imm = 0x4869
	movw	$3929, RunTimeSignatureAdjuster # imm = 0xF59
	movl	$2, %edi
	callq	try_drop
	movw	$18537, BasicBlockSignatureTracker # imm = 0x4869
	movw	$3929, RunTimeSignatureAdjuster # imm = 0xF59
	movw	$18537, BasicBlockSignatureTracker # imm = 0x4869
	movw	$33, RunTimeSignatureAdjuster
.LBB33_670:                             #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$56, %ax
	xorw	%cx, %ax
	cmpw	$18544, %ax             # imm = 0x4870
	jne	.LBB33_721
# %bb.671:                              # %gen.split2130
                                        #   in Loop: Header=BB33_653 Depth=2
	movw	$18544, BasicBlockSignatureTracker # imm = 0x4870
	movw	$70, RunTimeSignatureAdjuster
.LBB33_672:                             #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$69, %ax
	xorw	%cx, %ax
	cmpw	$18547, %ax             # imm = 0x4873
	jne	.LBB33_721
# %bb.673:                              # %gen.split2126
                                        #   in Loop: Header=BB33_653 Depth=2
	movl	holding+80, %eax
	movw	$18547, BasicBlockSignatureTracker # imm = 0x4873
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_676
# %bb.674:                              #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$18556, %ax             # imm = 0x487C
	jne	.LBB33_721
# %bb.675:                              # %gen.split2134
                                        #   in Loop: Header=BB33_653 Depth=2
	movw	$18556, BasicBlockSignatureTracker # imm = 0x487C
	movw	$3916, RunTimeSignatureAdjuster # imm = 0xF4C
	movl	$4, %edi
	callq	try_drop
	movw	$18556, BasicBlockSignatureTracker # imm = 0x487C
	movw	$3916, RunTimeSignatureAdjuster # imm = 0xF4C
	movw	$18556, BasicBlockSignatureTracker # imm = 0x487C
	movw	$15, RunTimeSignatureAdjuster
.LBB33_676:                             #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$247, %ax
	xorw	%cx, %ax
	cmpw	$18564, %ax             # imm = 0x4884
	jne	.LBB33_721
# %bb.677:                              # %gen.split2136
                                        #   in Loop: Header=BB33_653 Depth=2
	movl	holding+112, %eax
	movw	$18564, BasicBlockSignatureTracker # imm = 0x4884
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_680
# %bb.678:                              #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$18567, %ax             # imm = 0x4887
	jne	.LBB33_721
# %bb.679:                              # %gen.split2138
                                        #   in Loop: Header=BB33_653 Depth=2
	movw	$18567, BasicBlockSignatureTracker # imm = 0x4887
	movw	$4023, RunTimeSignatureAdjuster # imm = 0xFB7
	movl	$12, %edi
	callq	try_drop
	movw	$18567, BasicBlockSignatureTracker # imm = 0x4887
	movw	$4023, RunTimeSignatureAdjuster # imm = 0xFB7
	movw	$18567, BasicBlockSignatureTracker # imm = 0x4887
	movw	$3, RunTimeSignatureAdjuster
.LBB33_680:                             #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$18569, %ax             # imm = 0x4889
	jne	.LBB33_721
# %bb.681:                              # %gen.split2140
                                        #   in Loop: Header=BB33_653 Depth=2
	movl	holding+96, %eax
	movw	$18569, BasicBlockSignatureTracker # imm = 0x4889
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_684
# %bb.682:                              #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$18572, %ax             # imm = 0x488C
	jne	.LBB33_721
# %bb.683:                              # %gen.split2142
                                        #   in Loop: Header=BB33_653 Depth=2
	movw	$18572, BasicBlockSignatureTracker # imm = 0x488C
	movw	$4028, RunTimeSignatureAdjuster # imm = 0xFBC
	movl	$8, %edi
	callq	try_drop
	movw	$18572, BasicBlockSignatureTracker # imm = 0x488C
	movw	$4028, RunTimeSignatureAdjuster # imm = 0xFBC
	movw	$18572, BasicBlockSignatureTracker # imm = 0x488C
	movw	$5, RunTimeSignatureAdjuster
.LBB33_684:                             #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$18573, %ax             # imm = 0x488D
	jne	.LBB33_721
# %bb.685:                              # %gen.split2144
                                        #   in Loop: Header=BB33_653 Depth=2
	movl	holding+104, %eax
	movw	$18573, BasicBlockSignatureTracker # imm = 0x488D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB33_688
# %bb.686:                              #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$18574, %ax             # imm = 0x488E
	jne	.LBB33_721
# %bb.687:                              # %gen.split2146
                                        #   in Loop: Header=BB33_653 Depth=2
	movw	$18574, BasicBlockSignatureTracker # imm = 0x488E
	movw	$4030, RunTimeSignatureAdjuster # imm = 0xFBE
	movl	$10, %edi
	callq	try_drop
	movw	$18574, BasicBlockSignatureTracker # imm = 0x488E
	movw	$4030, RunTimeSignatureAdjuster # imm = 0xFBE
	movw	$18574, BasicBlockSignatureTracker # imm = 0x488E
	movw	$3, RunTimeSignatureAdjuster
.LBB33_688:                             #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$18577, %ax             # imm = 0x4891
	jne	.LBB33_721
# %bb.689:                              # %gen.split2148
                                        #   in Loop: Header=BB33_653 Depth=2
	movw	$18577, BasicBlockSignatureTracker # imm = 0x4891
	movw	$179, RunTimeSignatureAdjuster
.LBB33_690:                             #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$187, %ax
	xorw	%cx, %ax
	cmpw	$18585, %ax             # imm = 0x4899
	jne	.LBB33_721
# %bb.691:                              # %gen.split2116
                                        #   in Loop: Header=BB33_653 Depth=2
	movw	$18585, BasicBlockSignatureTracker # imm = 0x4899
	movw	$189, RunTimeSignatureAdjuster
.LBB33_692:                             #   in Loop: Header=BB33_653 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$186, %ax
	xorw	%cx, %ax
	cmpw	$18590, %ax             # imm = 0x489E
	jne	.LBB33_721
# %bb.693:                              # %gen.split2122
                                        #   in Loop: Header=BB33_653 Depth=2
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movw	$18590, BasicBlockSignatureTracker # imm = 0x489E
	movw	$132, RunTimeSignatureAdjuster
	jmp	.LBB33_653
.LBB33_694:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$170, %ax
	cmpw	$18613, %ax             # imm = 0x48B5
	jne	.LBB33_724
# %bb.695:                              # %gen.split2114
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$18613, BasicBlockSignatureTracker # imm = 0x48B5
	movw	$3930, RunTimeSignatureAdjuster # imm = 0xF5A
.LBB33_696:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3895, %ax              # imm = 0xF37
	xorw	%cx, %ax
	cmpw	$18648, %ax             # imm = 0x48D8
	jne	.LBB33_724
# %bb.697:                              # %gen.split2094
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$18648, BasicBlockSignatureTracker # imm = 0x48D8
	movw	$3857, RunTimeSignatureAdjuster # imm = 0xF11
.LBB33_698:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3875, %ax              # imm = 0xF23
	xorw	%cx, %ax
	cmpw	$18666, %ax             # imm = 0x48EA
	jne	.LBB33_724
# %bb.699:                              # %gen.split2092
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$18666, BasicBlockSignatureTracker # imm = 0x48EA
	movw	$3767, RunTimeSignatureAdjuster # imm = 0xEB7
	jmp	.LBB33_702
.LBB33_700:                             # %Buffer__28
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17119, %ax             # imm = 0x42DF
	cmpw	$1154, %ax              # imm = 0x482
	jne	.LBB33_724
# %bb.701:                              # %gen.split2028
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$1154, BasicBlockSignatureTracker # imm = 0x482
	movw	$17119, RunTimeSignatureAdjuster # imm = 0x42DF
.LBB33_702:                             #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3752, %ax              # imm = 0xEA8
	xorw	%cx, %ax
	cmpw	$18677, %ax             # imm = 0x48F5
	jne	.LBB33_724
# %bb.703:                              # %gen.split2030
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	Variant, %eax
	movw	$18677, BasicBlockSignatureTracker # imm = 0x48F5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB33_714
# %bb.704:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$508, %ax               # imm = 0x1FC
	cmpw	$18697, %ax             # imm = 0x4909
	jne	.LBB33_724
# %bb.705:                              # %gen.split2150
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	fcaptures, %eax
	movw	$18697, BasicBlockSignatureTracker # imm = 0x4909
	movw	$508, RunTimeSignatureAdjuster # imm = 0x1FC
	cmpl	$1, %eax
	jne	.LBB33_714
# %bb.706:                              # %Buffer__41
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14427, %ax            # imm = 0xC7A5
	cmpw	$-29012, %ax            # imm = 0x8EAC
	jne	.LBB33_724
# %bb.707:                              # %gen.split2154
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$-29012, BasicBlockSignatureTracker # imm = 0x8EAC
	movw	$-14427, RunTimeSignatureAdjuster # imm = 0xC7A5
# %bb.708:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$34, %ax
	xorw	%cx, %ax
	cmpw	$18731, %ax             # imm = 0x492B
	jne	.LBB33_724
# %bb.709:                              # %gen.split2304
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	captures, %eax
	movw	$18731, BasicBlockSignatureTracker # imm = 0x492B
	movw	$478, RunTimeSignatureAdjuster # imm = 0x1DE
	cmpl	$0, %eax
	jne	.LBB33_714
# %bb.710:                              # %Buffer__42
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-26660, %ax            # imm = 0x97DC
	cmpw	$-8457, %ax             # imm = 0xDEF7
	jne	.LBB33_724
# %bb.711:                              # %gen.split2156
                                        #   in Loop: Header=BB33_42 Depth=1
	movw	$-8457, BasicBlockSignatureTracker # imm = 0xDEF7
	movw	$-26660, RunTimeSignatureAdjuster # imm = 0x97DC
# %bb.712:                              #   in Loop: Header=BB33_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$98, %ax
	xorw	%cx, %ax
	cmpw	$18761, %ax             # imm = 0x4949
	jne	.LBB33_724
# %bb.713:                              # %gen.split2306
                                        #   in Loop: Header=BB33_42 Depth=1
	movl	$1, captures
	movl	$0, numb_moves
	movw	$18761, BasicBlockSignatureTracker # imm = 0x4949
	movw	$30024, RunTimeSignatureAdjuster # imm = 0x7548
	jmp	.LBB33_42
.LBB33_714:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$416, %ax               # imm = 0x1A0
	xorw	%cx, %ax
	cmpw	$18773, %ax             # imm = 0x4955
	jne	.LBB33_725
# %bb.715:                              # %gen.split2152
	movl	Variant, %eax
	movw	$18773, BasicBlockSignatureTracker # imm = 0x4955
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB33_718
# %bb.716:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$18780, %ax             # imm = 0x495C
	jne	.LBB33_725
# %bb.717:                              # %gen.split2158
	movl	$0, kingcap
	movw	$18780, BasicBlockSignatureTracker # imm = 0x495C
	movw	$9, RunTimeSignatureAdjuster
.LBB33_718:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$18788, %ax             # imm = 0x4964
	jne	.LBB33_725
# %bb.719:                              # %gen.split2160
	movw	$18788, BasicBlockSignatureTracker # imm = 0x4964
	movw	$-15381, RunTimeSignatureAdjuster # imm = 0xC3EB
	leaq	-32(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB33_720:                             # %CFerrorHandler.gen.loopexit
	jmp	.LBB33_725
.LBB33_721:                             # %CFerrorHandler.gen.loopexit1
	jmp	.LBB33_725
.LBB33_722:                             # %CFerrorHandler.gen.loopexit2
	jmp	.LBB33_725
.LBB33_723:                             # %CFerrorHandler.gen.loopexit3
	jmp	.LBB33_725
.LBB33_724:                             # %CFerrorHandler.gen.loopexit4
	jmp	.LBB33_725
.LBB33_725:                             # %CFerrorHandler.gen
	callq	FAULT_DETECTED_CFC
.Lfunc_end33:
	.size	gen, .Lfunc_end33-gen
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI33_0:
	.quad	.LBB33_328
	.quad	.LBB33_546
	.quad	.LBB33_386
	.quad	.LBB33_546
	.quad	.LBB33_490
	.quad	.LBB33_546
	.quad	.LBB33_438
	.quad	.LBB33_546
	.quad	.LBB33_456
	.quad	.LBB33_546
	.quad	.LBB33_420
.LJTI33_1:
	.quad	.LBB33_73
	.quad	.LBB33_291
	.quad	.LBB33_131
	.quad	.LBB33_291
	.quad	.LBB33_235
	.quad	.LBB33_291
	.quad	.LBB33_183
	.quad	.LBB33_291
	.quad	.LBB33_201
	.quad	.LBB33_291
	.quad	.LBB33_165
                                        # -- End function
	.text
	.globl	push_pawn               # -- Begin function push_pawn
	.p2align	4, 0x90
	.type	push_pawn,@function
push_pawn:                              # @push_pawn
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.1:                                # %push_pawn.split144
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.2:                                # %push_pawn.split142
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.3:                                # %push_pawn.split140
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.4:                                # %push_pawn.split138
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.5:                                # %push_pawn.split136
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.6:                                # %push_pawn.split134
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.7:                                # %push_pawn.split132
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.8:                                # %push_pawn.split130
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.9:                                # %push_pawn.split128
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.10:                               # %push_pawn.split126
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.11:                               # %push_pawn.split124
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30153, %ax             # imm = 0x75C9
	xorw	%cx, %ax
	cmpw	$18805, %ax             # imm = 0x4975
	jne	.LBB34_47
# %bb.12:                               # %push_pawn.split
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movl	%edi, (%rbx)
	movl	%esi, (%rax)
	movl	(%rax), %eax
	movw	$18805, BasicBlockSignatureTracker # imm = 0x4975
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB34_19
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$241, %ax
	cmpw	$18820, %ax             # imm = 0x4984
	jne	.LBB34_47
# %bb.14:                               # %push_pawn.split146
	movslq	gfrom, %rax
	movl	board(,%rax,4), %eax
	movw	$18820, BasicBlockSignatureTracker # imm = 0x4984
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB34_17
# %bb.15:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$18822, %ax             # imm = 0x4986
	jne	.LBB34_47
# %bb.16:                               # %push_pawn.split150
	movl	(%rbx), %edi
	movw	$18822, BasicBlockSignatureTracker # imm = 0x4986
	movw	$0, RunTimeSignatureAdjuster
	movl	$2, %esi
	xorl	%edx, %edx
	movl	$1, %ecx
	callq	add_capture
	movw	$18822, BasicBlockSignatureTracker # imm = 0x4986
	movw	$0, RunTimeSignatureAdjuster
	movw	$18822, BasicBlockSignatureTracker # imm = 0x4986
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB34_45
.LBB34_17:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$18823, %ax             # imm = 0x4987
	jne	.LBB34_47
# %bb.18:                               # %push_pawn.split152
	movl	(%rbx), %edi
	movw	$18823, BasicBlockSignatureTracker # imm = 0x4987
	movw	$1, RunTimeSignatureAdjuster
	movl	$1, %esi
	xorl	%edx, %edx
	movl	$1, %ecx
	callq	add_capture
	movw	$18823, BasicBlockSignatureTracker # imm = 0x4987
	movw	$1, RunTimeSignatureAdjuster
	movw	$18823, BasicBlockSignatureTracker # imm = 0x4987
	movw	$1, RunTimeSignatureAdjuster
	jmp	.LBB34_45
.LBB34_19:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$249, %ax
	cmpw	$18828, %ax             # imm = 0x498C
	jne	.LBB34_47
# %bb.20:                               # %push_pawn.split148
	movslq	(%rbx), %rax
	movl	board(,%rax,4), %eax
	movl	%eax, (%r14)
	movslq	gfrom, %rax
	movl	board(,%rax,4), %eax
	movw	$18828, BasicBlockSignatureTracker # imm = 0x498C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB34_31
# %bb.21:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$18829, %ax             # imm = 0x498D
	jne	.LBB34_47
# %bb.22:                               # %push_pawn.split156
	movslq	gfrom, %rax
	movl	Xrank(,%rax,4), %eax
	movw	$18829, BasicBlockSignatureTracker # imm = 0x498D
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB34_31
# %bb.23:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32735, %ax             # imm = 0x7FDF
	cmpw	$13906, %ax             # imm = 0x3652
	jne	.LBB34_47
# %bb.24:                               # %push_pawn.split160
	movw	$13906, BasicBlockSignatureTracker # imm = 0x3652
	movw	$32735, RunTimeSignatureAdjuster # imm = 0x7FDF
# %bb.25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$18837, %ax             # imm = 0x4995
	jne	.LBB34_47
# %bb.26:                               # %push_pawn.split176
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18837, BasicBlockSignatureTracker # imm = 0x4995
	movw	$19, RunTimeSignatureAdjuster
	movl	$9, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18837, BasicBlockSignatureTracker # imm = 0x4995
	movw	$19, RunTimeSignatureAdjuster
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18837, BasicBlockSignatureTracker # imm = 0x4995
	movw	$19, RunTimeSignatureAdjuster
	movl	$7, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18837, BasicBlockSignatureTracker # imm = 0x4995
	movw	$19, RunTimeSignatureAdjuster
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18837, BasicBlockSignatureTracker # imm = 0x4995
	movw	$19, RunTimeSignatureAdjuster
	movl	$11, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18837, BasicBlockSignatureTracker # imm = 0x4995
	movw	$19, RunTimeSignatureAdjuster
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18837, BasicBlockSignatureTracker # imm = 0x4995
	movw	$19, RunTimeSignatureAdjuster
	movl	$3, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18837, BasicBlockSignatureTracker # imm = 0x4995
	movw	$19, RunTimeSignatureAdjuster
	movl	Variant, %eax
	movw	$18837, BasicBlockSignatureTracker # imm = 0x4995
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB34_29
# %bb.27:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$18854, %ax             # imm = 0x49A6
	jne	.LBB34_47
# %bb.28:                               # %push_pawn.split162
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18854, BasicBlockSignatureTracker # imm = 0x49A6
	movw	$32, RunTimeSignatureAdjuster
	movl	$5, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18854, BasicBlockSignatureTracker # imm = 0x49A6
	movw	$32, RunTimeSignatureAdjuster
	movw	$18854, BasicBlockSignatureTracker # imm = 0x49A6
	movw	$51, RunTimeSignatureAdjuster
.LBB34_29:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$56, %ax
	xorw	%cx, %ax
	cmpw	$18861, %ax             # imm = 0x49AD
	jne	.LBB34_47
# %bb.30:                               # %push_pawn.split164
	movw	$18861, BasicBlockSignatureTracker # imm = 0x49AD
	movw	$43, RunTimeSignatureAdjuster
	jmp	.LBB34_45
.LBB34_31:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$18870, %ax             # imm = 0x49B6
	jne	.LBB34_47
# %bb.32:                               # %push_pawn.split158
	movslq	gfrom, %rax
	movl	board(,%rax,4), %eax
	movw	$18870, BasicBlockSignatureTracker # imm = 0x49B6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB34_43
# %bb.33:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$18877, %ax             # imm = 0x49BD
	jne	.LBB34_47
# %bb.34:                               # %push_pawn.split166
	movslq	gfrom, %rax
	movl	Xrank(,%rax,4), %eax
	movw	$18877, BasicBlockSignatureTracker # imm = 0x49BD
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB34_43
# %bb.35:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-24422, %ax            # imm = 0xA09A
	cmpw	$-5849, %ax             # imm = 0xE927
	jne	.LBB34_47
# %bb.36:                               # %push_pawn.split170
	movw	$-5849, BasicBlockSignatureTracker # imm = 0xE927
	movw	$-24422, RunTimeSignatureAdjuster # imm = 0xA09A
# %bb.37:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$18883, %ax             # imm = 0x49C3
	jne	.LBB34_47
# %bb.38:                               # %push_pawn.split178
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18883, BasicBlockSignatureTracker # imm = 0x49C3
	movw	$69, RunTimeSignatureAdjuster
	movl	$10, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18883, BasicBlockSignatureTracker # imm = 0x49C3
	movw	$69, RunTimeSignatureAdjuster
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18883, BasicBlockSignatureTracker # imm = 0x49C3
	movw	$69, RunTimeSignatureAdjuster
	movl	$8, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18883, BasicBlockSignatureTracker # imm = 0x49C3
	movw	$69, RunTimeSignatureAdjuster
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18883, BasicBlockSignatureTracker # imm = 0x49C3
	movw	$69, RunTimeSignatureAdjuster
	movl	$12, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18883, BasicBlockSignatureTracker # imm = 0x49C3
	movw	$69, RunTimeSignatureAdjuster
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18883, BasicBlockSignatureTracker # imm = 0x49C3
	movw	$69, RunTimeSignatureAdjuster
	movl	$4, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18883, BasicBlockSignatureTracker # imm = 0x49C3
	movw	$69, RunTimeSignatureAdjuster
	movl	Variant, %eax
	movw	$18883, BasicBlockSignatureTracker # imm = 0x49C3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB34_41
# %bb.39:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$18900, %ax             # imm = 0x49D4
	jne	.LBB34_47
# %bb.40:                               # %push_pawn.split172
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18900, BasicBlockSignatureTracker # imm = 0x49D4
	movw	$82, RunTimeSignatureAdjuster
	movl	$6, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18900, BasicBlockSignatureTracker # imm = 0x49D4
	movw	$82, RunTimeSignatureAdjuster
	movw	$18900, BasicBlockSignatureTracker # imm = 0x49D4
	movw	$23, RunTimeSignatureAdjuster
.LBB34_41:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$18902, %ax             # imm = 0x49D6
	jne	.LBB34_47
# %bb.42:                               # %push_pawn.split174
	movw	$18902, BasicBlockSignatureTracker # imm = 0x49D6
	movw	$80, RunTimeSignatureAdjuster
	jmp	.LBB34_45
.LBB34_43:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$89, %ax
	xorw	%cx, %ax
	cmpw	$18927, %ax             # imm = 0x49EF
	jne	.LBB34_47
# %bb.44:                               # %push_pawn.split168
	movl	(%rbx), %edi
	movl	(%r14), %esi
	movw	$18927, BasicBlockSignatureTracker # imm = 0x49EF
	movw	$105, RunTimeSignatureAdjuster
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$18927, BasicBlockSignatureTracker # imm = 0x49EF
	movw	$105, RunTimeSignatureAdjuster
	movw	$18927, BasicBlockSignatureTracker # imm = 0x49EF
	movw	$105, RunTimeSignatureAdjuster
.LBB34_45:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$112, %ax
	xorw	%cx, %ax
	cmpw	$18934, %ax             # imm = 0x49F6
	jne	.LBB34_47
# %bb.46:                               # %push_pawn.split154
	movw	$18934, BasicBlockSignatureTracker # imm = 0x49F6
	movw	$30020, RunTimeSignatureAdjuster # imm = 0x7544
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB34_47:                              # %CFerrorHandler.push_pawn
	callq	FAULT_DETECTED_CFC
.Lfunc_end34:
	.size	push_pawn, .Lfunc_end34-push_pawn
	.cfi_endproc
                                        # -- End function
	.globl	push_pawn_simple        # -- Begin function push_pawn_simple
	.p2align	4, 0x90
	.type	push_pawn_simple,@function
push_pawn_simple:                       # @push_pawn_simple
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30513, %ax             # imm = 0x7731
	xorw	%cx, %ax
	cmpw	$18965, %ax             # imm = 0x4A15
	jne	.LBB35_3
# %bb.1:                                # %push_pawn_simple.split8
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30513, %ax             # imm = 0x7731
	xorw	%cx, %ax
	cmpw	$18965, %ax             # imm = 0x4A15
	jne	.LBB35_3
# %bb.2:                                # %push_pawn_simple.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rax)
	movl	(%rax), %edi
	movw	$18965, BasicBlockSignatureTracker # imm = 0x4A15
	movw	$0, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	add_move
	movw	$18965, BasicBlockSignatureTracker # imm = 0x4A15
	movw	$2052, RunTimeSignatureAdjuster # imm = 0x804
	movw	$18965, BasicBlockSignatureTracker # imm = 0x4A15
	movw	$30488, RunTimeSignatureAdjuster # imm = 0x7718
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB35_3:                               # %CFerrorHandler.push_pawn_simple
	callq	FAULT_DETECTED_CFC
.Lfunc_end35:
	.size	push_pawn_simple, .Lfunc_end35-push_pawn_simple
	.cfi_endproc
                                        # -- End function
	.globl	push_knighT             # -- Begin function push_knighT
	.p2align	4, 0x90
	.type	push_knighT,@function
push_knighT:                            # @push_knighT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.1:                                # %push_knighT.split142
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.2:                                # %push_knighT.split140
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.3:                                # %push_knighT.split138
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.4:                                # %push_knighT.split136
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.5:                                # %push_knighT.split134
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.6:                                # %push_knighT.split132
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.7:                                # %push_knighT.split130
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.8:                                # %push_knighT.split128
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.9:                                # %push_knighT.split126
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.10:                               # %push_knighT.split124
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.11:                               # %push_knighT.split122
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.12:                               # %push_knighT.split120
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.13:                               # %push_knighT.split118
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.14:                               # %push_knighT.split116
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.15:                               # %push_knighT.split114
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30680, %ax             # imm = 0x77D8
	xorw	%cx, %ax
	cmpw	$18987, %ax             # imm = 0x4A2B
	jne	.LBB36_37
# %bb.16:                               # %push_knighT.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rax)
	movslq	(%rax), %rcx
	movl	board(,%rcx,4), %ecx
	movw	$18987, BasicBlockSignatureTracker # imm = 0x4A2B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %ecx
	jne	.LBB36_23
# %bb.17:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$5, %cx
	cmpw	$18990, %cx             # imm = 0x4A2E
	jne	.LBB36_37
# %bb.18:                               # %push_knighT.split144
	movl	captures, %ecx
	movw	$18990, BasicBlockSignatureTracker # imm = 0x4A2E
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB36_23
# %bb.19:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12028, %ax            # imm = 0xD104
	cmpw	$-25814, %ax            # imm = 0x9B2A
	jne	.LBB36_37
# %bb.20:                               # %push_knighT.split148
	movw	$-25814, BasicBlockSignatureTracker # imm = 0x9B2A
	movw	$-12028, RunTimeSignatureAdjuster # imm = 0xD104
# %bb.21:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$18994, %ax             # imm = 0x4A32
	jne	.LBB36_37
# %bb.22:                               # %push_knighT.split162
	movw	$18994, BasicBlockSignatureTracker # imm = 0x4A32
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB36_35
.LBB36_23:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$30, %cx
	xorw	%dx, %cx
	cmpw	$18997, %cx             # imm = 0x4A35
	jne	.LBB36_37
# %bb.24:                               # %push_knighT.split146
	movslq	(%rax), %rcx
	movl	board(,%rcx,4), %ecx
	movw	$18997, BasicBlockSignatureTracker # imm = 0x4A35
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %ecx
	jne	.LBB36_27
# %bb.25:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$112, %cx
	cmpw	$19013, %cx             # imm = 0x4A45
	jne	.LBB36_37
# %bb.26:                               # %push_knighT.split152
	movl	(%rax), %edi
	movw	$19013, BasicBlockSignatureTracker # imm = 0x4A45
	movw	$80, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	add_move
	movw	$19013, BasicBlockSignatureTracker # imm = 0x4A45
	movw	$80, RunTimeSignatureAdjuster
	movw	$19013, BasicBlockSignatureTracker # imm = 0x4A45
	movw	$119, RunTimeSignatureAdjuster
	jmp	.LBB36_35
.LBB36_27:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$115, %cx
	cmpw	$19014, %cx             # imm = 0x4A46
	jne	.LBB36_37
# %bb.28:                               # %push_knighT.split154
	movslq	(%rax), %rcx
	movl	board(,%rcx,4), %ecx
	andl	$1, %ecx
	movslq	gfrom, %rdx
	movl	board(,%rdx,4), %edx
	andl	$1, %edx
	movw	$19014, BasicBlockSignatureTracker # imm = 0x4A46
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	je	.LBB36_31
# %bb.29:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$15, %cx
	cmpw	$19017, %cx             # imm = 0x4A49
	jne	.LBB36_37
# %bb.30:                               # %push_knighT.split156
	movl	(%rax), %edi
	movslq	(%rax), %rax
	movl	board(,%rax,4), %esi
	movw	$19017, BasicBlockSignatureTracker # imm = 0x4A49
	movw	$975, RunTimeSignatureAdjuster # imm = 0x3CF
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$19017, BasicBlockSignatureTracker # imm = 0x4A49
	movw	$975, RunTimeSignatureAdjuster # imm = 0x3CF
	movw	$19017, BasicBlockSignatureTracker # imm = 0x4A49
	movw	$123, RunTimeSignatureAdjuster
	jmp	.LBB36_35
.LBB36_31:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$19027, %ax             # imm = 0x4A53
	jne	.LBB36_37
# %bb.32:                               # %push_knighT.split158
	movw	$19027, BasicBlockSignatureTracker # imm = 0x4A53
	movw	$0, RunTimeSignatureAdjuster
# %bb.33:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$19031, %ax             # imm = 0x4A57
	jne	.LBB36_37
# %bb.34:                               # %push_knighT.split160
	movw	$19031, BasicBlockSignatureTracker # imm = 0x4A57
	movw	$101, RunTimeSignatureAdjuster
.LBB36_35:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$106, %ax
	xorw	%cx, %ax
	cmpw	$19032, %ax             # imm = 0x4A58
	jne	.LBB36_37
# %bb.36:                               # %push_knighT.split150
	movw	$19032, BasicBlockSignatureTracker # imm = 0x4A58
	movw	$30634, RunTimeSignatureAdjuster # imm = 0x77AA
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB36_37:                              # %CFerrorHandler.push_knighT
	callq	FAULT_DETECTED_CFC
.Lfunc_end36:
	.size	push_knighT, .Lfunc_end36-push_knighT
	.cfi_endproc
                                        # -- End function
	.globl	push_slidE              # -- Begin function push_slidE
	.p2align	4, 0x90
	.type	push_slidE,@function
push_slidE:                             # @push_slidE
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.1:                                # %push_slidE.split257
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.2:                                # %push_slidE.split255
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.3:                                # %push_slidE.split253
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.4:                                # %push_slidE.split251
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.5:                                # %push_slidE.split249
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.6:                                # %push_slidE.split247
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.7:                                # %push_slidE.split245
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.8:                                # %push_slidE.split243
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.9:                                # %push_slidE.split241
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.10:                               # %push_slidE.split239
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.11:                               # %push_slidE.split237
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.12:                               # %push_slidE.split235
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.13:                               # %push_slidE.split233
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.14:                               # %push_slidE.split231
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.15:                               # %push_slidE.split229
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.16:                               # %push_slidE.split227
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.17:                               # %push_slidE.split225
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.18:                               # %push_slidE.split223
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.19:                               # %push_slidE.split221
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.20:                               # %push_slidE.split219
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.21:                               # %push_slidE.split217
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.22:                               # %push_slidE.split215
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.23:                               # %push_slidE.split213
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.24:                               # %push_slidE.split211
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.25:                               # %push_slidE.split209
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.26:                               # %push_slidE.split207
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.27:                               # %push_slidE.split205
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.28:                               # %push_slidE.split203
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.29:                               # %push_slidE.split201
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.30:                               # %push_slidE.split199
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.31:                               # %push_slidE.split197
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29711, %ax             # imm = 0x740F
	xorw	%cx, %ax
	cmpw	$19049, %ax             # imm = 0x4A69
	jne	.LBB37_57
# %bb.32:                               # %push_slidE.split
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movl	%edi, (%rbx)
	movl	(%rbx), %eax
	subl	gfrom, %eax
	movl	%eax, (%r15)
	movslq	gfrom, %rax
	movl	board(,%rax,4), %eax
	andl	$1, %eax
	movl	%eax, (%r14)
	movw	$19049, BasicBlockSignatureTracker # imm = 0x4A69
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB37_35
.LBB37_33:                              # %Buffer__
                                        #   in Loop: Header=BB37_35 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24981, %ax             # imm = 0x6195
	cmpw	$11075, %ax             # imm = 0x2B43
	jne	.LBB37_56
# %bb.34:                               # %push_slidE.split279
                                        #   in Loop: Header=BB37_35 Depth=1
	movw	$11075, BasicBlockSignatureTracker # imm = 0x2B43
	movw	$24874, RunTimeSignatureAdjuster # imm = 0x612A
.LBB37_35:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$19053, %ax             # imm = 0x4A6D
	jne	.LBB37_56
# %bb.36:                               # %push_slidE.split259
                                        #   in Loop: Header=BB37_35 Depth=1
	movslq	(%rbx), %rax
	movl	board(,%rax,4), %eax
	movw	$19053, BasicBlockSignatureTracker # imm = 0x4A6D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB37_43
# %bb.37:                               #   in Loop: Header=BB37_35 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$239, %ax
	cmpw	$19074, %ax             # imm = 0x4A82
	jne	.LBB37_56
# %bb.38:                               # %push_slidE.split261
                                        #   in Loop: Header=BB37_35 Depth=1
	movl	captures, %eax
	movw	$19074, BasicBlockSignatureTracker # imm = 0x4A82
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB37_41
# %bb.39:                               #   in Loop: Header=BB37_35 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$19089, %ax             # imm = 0x4A91
	jne	.LBB37_56
# %bb.40:                               # %push_slidE.split267
                                        #   in Loop: Header=BB37_35 Depth=1
	movl	(%rbx), %edi
	movw	$19089, BasicBlockSignatureTracker # imm = 0x4A91
	movw	$132, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	add_move
	movw	$19089, BasicBlockSignatureTracker # imm = 0x4A91
	movw	$132, RunTimeSignatureAdjuster
	movw	$19089, BasicBlockSignatureTracker # imm = 0x4A91
	movw	$19, RunTimeSignatureAdjuster
.LBB37_41:                              #   in Loop: Header=BB37_35 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$19102, %ax             # imm = 0x4A9E
	jne	.LBB37_56
# %bb.42:                               # %push_slidE.split265
                                        #   in Loop: Header=BB37_35 Depth=1
	movl	(%r15), %eax
	addl	(%rbx), %eax
	movl	%eax, (%rbx)
	movw	$19102, BasicBlockSignatureTracker # imm = 0x4A9E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB37_49
.LBB37_43:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$196, %ax
	cmpw	$19113, %ax             # imm = 0x4AA9
	jne	.LBB37_57
# %bb.44:                               # %push_slidE.split263
	movslq	(%rbx), %rax
	movl	board(,%rax,4), %eax
	andl	$1, %eax
	movl	(%r14), %ecx
	movw	$19113, BasicBlockSignatureTracker # imm = 0x4AA9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB37_47
# %bb.45:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$104, %ax
	cmpw	$19137, %ax             # imm = 0x4AC1
	jne	.LBB37_57
# %bb.46:                               # %push_slidE.split271
	movl	(%rbx), %edi
	movslq	(%rbx), %rax
	movl	board(,%rax,4), %esi
	movw	$19137, BasicBlockSignatureTracker # imm = 0x4AC1
	movw	$839, RunTimeSignatureAdjuster # imm = 0x347
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$19137, BasicBlockSignatureTracker # imm = 0x4AC1
	movw	$839, RunTimeSignatureAdjuster # imm = 0x347
	movw	$19137, BasicBlockSignatureTracker # imm = 0x4AC1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB37_54
.LBB37_47:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$98, %ax
	cmpw	$19147, %ax             # imm = 0x4ACB
	jne	.LBB37_57
# %bb.48:                               # %push_slidE.split273
	movw	$19147, BasicBlockSignatureTracker # imm = 0x4ACB
	movw	$10, RunTimeSignatureAdjuster
	jmp	.LBB37_54
.LBB37_49:                              #   in Loop: Header=BB37_35 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$79, %ax
	cmpw	$19153, %ax             # imm = 0x4AD1
	jne	.LBB37_56
# %bb.50:                               # %push_slidE.split269
                                        #   in Loop: Header=BB37_35 Depth=1
	movw	$19153, BasicBlockSignatureTracker # imm = 0x4AD1
	movw	$0, RunTimeSignatureAdjuster
# %bb.51:                               #   in Loop: Header=BB37_35 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$19158, %ax             # imm = 0x4AD6
	jne	.LBB37_56
# %bb.52:                               # %push_slidE.split277
                                        #   in Loop: Header=BB37_35 Depth=1
	movslq	(%rbx), %rax
	movl	board(,%rax,4), %eax
	movw	$19158, BasicBlockSignatureTracker # imm = 0x4AD6
	movw	$23, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB37_33
# %bb.53:                               # %.loopexit
	jmp	.LBB37_54
.LBB37_54:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$19164, %ax             # imm = 0x4ADC
	jne	.LBB37_57
# %bb.55:                               # %push_slidE.split275
	movw	$19164, BasicBlockSignatureTracker # imm = 0x4ADC
	movw	$29826, RunTimeSignatureAdjuster # imm = 0x7482
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB37_56:                              # %CFerrorHandler.push_slidE.loopexit
	jmp	.LBB37_57
.LBB37_57:                              # %CFerrorHandler.push_slidE
	callq	FAULT_DETECTED_CFC
.Lfunc_end37:
	.size	push_slidE, .Lfunc_end37-push_slidE
	.cfi_endproc
                                        # -- End function
	.globl	push_king               # -- Begin function push_king
	.p2align	4, 0x90
	.type	push_king,@function
push_king:                              # @push_king
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.1:                                # %push_king.split148
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.2:                                # %push_king.split146
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.3:                                # %push_king.split144
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.4:                                # %push_king.split142
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.5:                                # %push_king.split140
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.6:                                # %push_king.split138
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.7:                                # %push_king.split136
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.8:                                # %push_king.split134
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.9:                                # %push_king.split132
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.10:                               # %push_king.split130
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.11:                               # %push_king.split128
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.12:                               # %push_king.split126
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.13:                               # %push_king.split124
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.14:                               # %push_king.split122
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.15:                               # %push_king.split120
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2702, %ax              # imm = 0xA8E
	xorw	%cx, %ax
	cmpw	$19172, %ax             # imm = 0x4AE4
	jne	.LBB38_41
# %bb.16:                               # %push_king.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rax)
	movslq	(%rax), %rcx
	movl	board(,%rcx,4), %ecx
	movw	$19172, BasicBlockSignatureTracker # imm = 0x4AE4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	jne	.LBB38_19
# %bb.17:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$19197, %ax             # imm = 0x4AFD
	jne	.LBB38_41
# %bb.18:                               # %push_king.split150
	movw	$19197, BasicBlockSignatureTracker # imm = 0x4AFD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB38_39
.LBB38_19:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$495, %cx               # imm = 0x1EF
	cmpw	$19211, %cx             # imm = 0x4B0B
	jne	.LBB38_41
# %bb.20:                               # %push_king.split152
	movslq	(%rax), %rcx
	movl	board(,%rcx,4), %ecx
	movw	$19211, BasicBlockSignatureTracker # imm = 0x4B0B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %ecx
	jne	.LBB38_27
# %bb.21:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$40, %cx
	cmpw	$19235, %cx             # imm = 0x4B23
	jne	.LBB38_41
# %bb.22:                               # %push_king.split156
	movl	captures, %ecx
	movw	$19235, BasicBlockSignatureTracker # imm = 0x4B23
	movw	$40, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB38_27
# %bb.23:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15749, %ax             # imm = 0x3D85
	cmpw	$30374, %ax             # imm = 0x76A6
	jne	.LBB38_41
# %bb.24:                               # %push_king.split160
	movw	$30374, BasicBlockSignatureTracker # imm = 0x76A6
	movw	$15749, RunTimeSignatureAdjuster # imm = 0x3D85
# %bb.25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$19236, %ax             # imm = 0x4B24
	jne	.LBB38_41
# %bb.26:                               # %push_king.split172
	movw	$19236, BasicBlockSignatureTracker # imm = 0x4B24
	movw	$473, RunTimeSignatureAdjuster # imm = 0x1D9
	jmp	.LBB38_39
.LBB38_27:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$75, %cx
	xorw	%dx, %cx
	cmpw	$19264, %cx             # imm = 0x4B40
	jne	.LBB38_41
# %bb.28:                               # %push_king.split158
	movslq	(%rax), %rcx
	movl	board(,%rcx,4), %ecx
	movw	$19264, BasicBlockSignatureTracker # imm = 0x4B40
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %ecx
	jne	.LBB38_31
# %bb.29:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$5, %cx
	cmpw	$19269, %cx             # imm = 0x4B45
	jne	.LBB38_41
# %bb.30:                               # %push_king.split162
	movl	(%rax), %edi
	movw	$19269, BasicBlockSignatureTracker # imm = 0x4B45
	movw	$336, RunTimeSignatureAdjuster # imm = 0x150
	xorl	%esi, %esi
	callq	add_move
	movw	$19269, BasicBlockSignatureTracker # imm = 0x4B45
	movw	$336, RunTimeSignatureAdjuster # imm = 0x150
	movw	$19269, BasicBlockSignatureTracker # imm = 0x4B45
	movw	$440, RunTimeSignatureAdjuster # imm = 0x1B8
	jmp	.LBB38_39
.LBB38_31:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$8, %cx
	cmpw	$19272, %cx             # imm = 0x4B48
	jne	.LBB38_41
# %bb.32:                               # %push_king.split164
	movslq	(%rax), %rcx
	movl	board(,%rcx,4), %ecx
	andl	$1, %ecx
	movslq	gfrom, %rdx
	movl	board(,%rdx,4), %edx
	andl	$1, %edx
	movw	$19272, BasicBlockSignatureTracker # imm = 0x4B48
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	je	.LBB38_35
# %bb.33:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$40, %cx
	cmpw	$19296, %cx             # imm = 0x4B60
	jne	.LBB38_41
# %bb.34:                               # %push_king.split166
	movl	(%rax), %edi
	movslq	(%rax), %rax
	movl	board(,%rax,4), %esi
	movw	$19296, BasicBlockSignatureTracker # imm = 0x4B60
	movw	$742, RunTimeSignatureAdjuster # imm = 0x2E6
	xorl	%edx, %edx
	xorl	%ecx, %ecx
	callq	add_capture
	movw	$19296, BasicBlockSignatureTracker # imm = 0x4B60
	movw	$742, RunTimeSignatureAdjuster # imm = 0x2E6
	movw	$19296, BasicBlockSignatureTracker # imm = 0x4B60
	movw	$413, RunTimeSignatureAdjuster # imm = 0x19D
	jmp	.LBB38_39
.LBB38_35:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$19300, %ax             # imm = 0x4B64
	jne	.LBB38_41
# %bb.36:                               # %push_king.split168
	movw	$19300, BasicBlockSignatureTracker # imm = 0x4B64
	movw	$0, RunTimeSignatureAdjuster
# %bb.37:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$19314, %ax             # imm = 0x4B72
	jne	.LBB38_41
# %bb.38:                               # %push_king.split170
	movw	$19314, BasicBlockSignatureTracker # imm = 0x4B72
	movw	$399, RunTimeSignatureAdjuster # imm = 0x18F
.LBB38_39:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$377, %ax               # imm = 0x179
	xorw	%cx, %ax
	cmpw	$19332, %ax             # imm = 0x4B84
	jne	.LBB38_41
# %bb.40:                               # %push_king.split154
	movw	$19332, BasicBlockSignatureTracker # imm = 0x4B84
	movw	$30474, RunTimeSignatureAdjuster # imm = 0x770A
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB38_41:                              # %CFerrorHandler.push_king
	callq	FAULT_DETECTED_CFC
.Lfunc_end38:
	.size	push_king, .Lfunc_end38-push_king
	.cfi_endproc
                                        # -- End function
	.globl	push_king_castle        # -- Begin function push_king_castle
	.p2align	4, 0x90
	.type	push_king_castle,@function
push_king_castle:                       # @push_king_castle
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2904, %ax              # imm = 0xB58
	xorw	%cx, %ax
	cmpw	$19344, %ax             # imm = 0x4B90
	jne	.LBB39_5
# %bb.1:                                # %push_king_castle.split22
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2904, %ax              # imm = 0xB58
	xorw	%cx, %ax
	cmpw	$19344, %ax             # imm = 0x4B90
	jne	.LBB39_5
# %bb.2:                                # %push_king_castle.split20
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2904, %ax              # imm = 0xB58
	xorw	%cx, %ax
	cmpw	$19344, %ax             # imm = 0x4B90
	jne	.LBB39_5
# %bb.3:                                # %push_king_castle.split18
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2904, %ax              # imm = 0xB58
	xorw	%cx, %ax
	cmpw	$19344, %ax             # imm = 0x4B90
	jne	.LBB39_5
# %bb.4:                                # %push_king_castle.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movl	%edi, (%rax)
	movl	%esi, (%rcx)
	movl	gfrom, %edx
	movq	genfor, %rsi
	movslq	numb_moves, %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	%edx, (%rsi)
	movl	(%rax), %eax
	movq	genfor, %rdx
	movslq	numb_moves, %rsi
	imulq	$24, %rsi, %rsi
	addq	%rsi, %rdx
	movl	%eax, 4(%rdx)
	movq	genfor, %rax
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	$13, 8(%rax)
	movl	(%rcx), %eax
	movq	genfor, %rcx
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movl	%eax, 16(%rcx)
	movq	genfor, %rax
	movslq	numb_moves, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	$0, 12(%rax)
	movq	genfor, %rax
	movslq	numb_moves, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	$0, 20(%rax)
	movl	numb_moves, %eax
	addl	$1, %eax
	movl	%eax, numb_moves
	movw	$19344, BasicBlockSignatureTracker # imm = 0x4B90
	movw	$2876, RunTimeSignatureAdjuster # imm = 0xB3C
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB39_5:                               # %CFerrorHandler.push_king_castle
	callq	FAULT_DETECTED_CFC
.Lfunc_end39:
	.size	push_king_castle, .Lfunc_end39-push_king_castle
	.cfi_endproc
                                        # -- End function
	.globl	try_drop                # -- Begin function try_drop
	.p2align	4, 0x90
	.type	try_drop,@function
try_drop:                               # @try_drop
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3218, %ax              # imm = 0xC92
	xorw	%cx, %ax
	cmpw	$19362, %ax             # imm = 0x4BA2
	jne	.LBB40_11
# %bb.1:                                # %try_drop.split64
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3218, %ax              # imm = 0xC92
	xorw	%cx, %ax
	cmpw	$19362, %ax             # imm = 0x4BA2
	jne	.LBB40_11
# %bb.2:                                # %try_drop.split62
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3218, %ax              # imm = 0xC92
	xorw	%cx, %ax
	cmpw	$19362, %ax             # imm = 0x4BA2
	jne	.LBB40_11
# %bb.3:                                # %try_drop.split60
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3218, %ax              # imm = 0xC92
	xorw	%cx, %ax
	cmpw	$19362, %ax             # imm = 0x4BA2
	jne	.LBB40_11
# %bb.4:                                # %try_drop.split58
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3218, %ax              # imm = 0xC92
	xorw	%cx, %ax
	cmpw	$19362, %ax             # imm = 0x4BA2
	jne	.LBB40_11
# %bb.5:                                # %try_drop.split56
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3218, %ax              # imm = 0xC92
	xorw	%cx, %ax
	cmpw	$19362, %ax             # imm = 0x4BA2
	jne	.LBB40_11
# %bb.6:                                # %try_drop.split54
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3218, %ax              # imm = 0xC92
	xorw	%cx, %ax
	cmpw	$19362, %ax             # imm = 0x4BA2
	jne	.LBB40_11
# %bb.7:                                # %try_drop.split52
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3218, %ax              # imm = 0xC92
	xorw	%cx, %ax
	cmpw	$19362, %ax             # imm = 0x4BA2
	jne	.LBB40_11
# %bb.8:                                # %try_drop.split50
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3218, %ax              # imm = 0xC92
	xorw	%cx, %ax
	cmpw	$19362, %ax             # imm = 0x4BA2
	jne	.LBB40_11
# %bb.9:                                # %try_drop.split48
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3218, %ax              # imm = 0xC92
	xorw	%cx, %ax
	cmpw	$19362, %ax             # imm = 0x4BA2
	jne	.LBB40_11
# %bb.10:                               # %try_drop.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rax)
	movq	genfor, %rcx
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movl	$0, (%rcx)
	movl	gfrom, %ecx
	movq	genfor, %rdx
	movslq	numb_moves, %rsi
	imulq	$24, %rsi, %rsi
	addq	%rsi, %rdx
	movl	%ecx, 4(%rdx)
	movq	genfor, %rcx
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movl	$13, 8(%rcx)
	movq	genfor, %rcx
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movl	$0, 16(%rcx)
	movl	(%rax), %eax
	movq	genfor, %rcx
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movl	%eax, 12(%rcx)
	movq	genfor, %rax
	movslq	numb_moves, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	$0, 20(%rax)
	movl	numb_moves, %eax
	addl	$1, %eax
	movl	%eax, numb_moves
	movw	$19362, BasicBlockSignatureTracker # imm = 0x4BA2
	movw	$3262, RunTimeSignatureAdjuster # imm = 0xCBE
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB40_11:                              # %CFerrorHandler.try_drop
	callq	FAULT_DETECTED_CFC
.Lfunc_end40:
	.size	try_drop, .Lfunc_end40-try_drop
	.cfi_endproc
                                        # -- End function
	.globl	add_move                # -- Begin function add_move
	.p2align	4, 0x90
	.type	add_move,@function
add_move:                               # @add_move
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$434, %ax               # imm = 0x1B2
	xorw	%cx, %ax
	cmpw	$19367, %ax             # imm = 0x4BA7
	jne	.LBB41_5
# %bb.1:                                # %add_move.split22
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$434, %ax               # imm = 0x1B2
	xorw	%cx, %ax
	cmpw	$19367, %ax             # imm = 0x4BA7
	jne	.LBB41_5
# %bb.2:                                # %add_move.split20
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$434, %ax               # imm = 0x1B2
	xorw	%cx, %ax
	cmpw	$19367, %ax             # imm = 0x4BA7
	jne	.LBB41_5
# %bb.3:                                # %add_move.split18
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$434, %ax               # imm = 0x1B2
	xorw	%cx, %ax
	cmpw	$19367, %ax             # imm = 0x4BA7
	jne	.LBB41_5
# %bb.4:                                # %add_move.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movl	%edi, (%rax)
	movl	%esi, (%rcx)
	movl	gfrom, %edx
	movq	genfor, %rsi
	movslq	numb_moves, %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	%edx, (%rsi)
	movl	(%rax), %eax
	movq	genfor, %rdx
	movslq	numb_moves, %rsi
	imulq	$24, %rsi, %rsi
	addq	%rsi, %rdx
	movl	%eax, 4(%rdx)
	movq	genfor, %rax
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	$13, 8(%rax)
	movq	genfor, %rax
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	$0, 16(%rax)
	movl	(%rcx), %eax
	movq	genfor, %rcx
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movl	%eax, 12(%rcx)
	movq	genfor, %rax
	movslq	numb_moves, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	$0, 20(%rax)
	movl	numb_moves, %eax
	addl	$1, %eax
	movl	%eax, numb_moves
	movw	$19367, BasicBlockSignatureTracker # imm = 0x4BA7
	movw	$30339, RunTimeSignatureAdjuster # imm = 0x7683
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB41_5:                               # %CFerrorHandler.add_move
	callq	FAULT_DETECTED_CFC
.Lfunc_end41:
	.size	add_move, .Lfunc_end41-add_move
	.cfi_endproc
                                        # -- End function
	.globl	add_capture             # -- Begin function add_capture
	.p2align	4, 0x90
	.type	add_capture,@function
add_capture:                            # @add_capture
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.1:                                # %add_capture.split141
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.2:                                # %add_capture.split139
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.3:                                # %add_capture.split137
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.4:                                # %add_capture.split135
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.5:                                # %add_capture.split133
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.6:                                # %add_capture.split131
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.7:                                # %add_capture.split129
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.8:                                # %add_capture.split127
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.9:                                # %add_capture.split125
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.10:                               # %add_capture.split123
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.11:                               # %add_capture.split121
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.12:                               # %add_capture.split119
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.13:                               # %add_capture.split117
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.14:                               # %add_capture.split115
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.15:                               # %add_capture.split113
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$561, %ax               # imm = 0x231
	xorw	%r8w, %ax
	cmpw	$19383, %ax             # imm = 0x4BB7
	jne	.LBB42_35
# %bb.16:                               # %add_capture.split
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movl	%edi, (%r10)
	movl	%esi, (%rax)
	movl	%edx, (%r9)
	movl	%ecx, (%r8)
	movl	Variant, %ecx
	movw	$19383, BasicBlockSignatureTracker # imm = 0x4BB7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %ecx
	je	.LBB42_25
# %bb.17:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$13, %cx
	cmpw	$19386, %cx             # imm = 0x4BBA
	jne	.LBB42_35
# %bb.18:                               # %add_capture.split143
	movl	(%rax), %ecx
	movw	$19386, BasicBlockSignatureTracker # imm = 0x4BBA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %ecx
	je	.LBB42_23
# %bb.19:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$121, %cx
	cmpw	$19395, %cx             # imm = 0x4BC3
	jne	.LBB42_35
# %bb.20:                               # %add_capture.split149
	movl	(%rax), %ecx
	movw	$19395, BasicBlockSignatureTracker # imm = 0x4BC3
	movw	$116, RunTimeSignatureAdjuster
	cmpl	$6, %ecx
	jne	.LBB42_25
# %bb.21:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-23700, %ax            # imm = 0xA36C
	cmpw	$-5969, %ax             # imm = 0xE8AF
	jne	.LBB42_35
# %bb.22:                               # %add_capture.split151
	movw	$-5969, BasicBlockSignatureTracker # imm = 0xE8AF
	movw	$-23787, RunTimeSignatureAdjuster # imm = 0xA315
.LBB42_23:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$113, %ax
	xorw	%cx, %ax
	cmpw	$19403, %ax             # imm = 0x4BCB
	jne	.LBB42_35
# %bb.24:                               # %add_capture.split147
	movl	$1, kingcap
	movw	$19403, BasicBlockSignatureTracker # imm = 0x4BCB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB42_33
.LBB42_25:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$111, %cx
	xorw	%dx, %cx
	cmpw	$19416, %cx             # imm = 0x4BD8
	jne	.LBB42_35
# %bb.26:                               # %add_capture.split145
	movl	(%rax), %ecx
	movw	$19416, BasicBlockSignatureTracker # imm = 0x4BD8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %ecx
	je	.LBB42_29
# %bb.27:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$7, %cx
	cmpw	$19423, %cx             # imm = 0x4BDF
	jne	.LBB42_35
# %bb.28:                               # %add_capture.split155
	movl	$1, fcaptures
	movw	$19423, BasicBlockSignatureTracker # imm = 0x4BDF
	movw	$7, RunTimeSignatureAdjuster
.LBB42_29:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$57, %cx
	xorw	%dx, %cx
	cmpw	$19425, %cx             # imm = 0x4BE1
	jne	.LBB42_35
# %bb.30:                               # %add_capture.split157
	movw	$19425, BasicBlockSignatureTracker # imm = 0x4BE1
	movw	$0, RunTimeSignatureAdjuster
# %bb.31:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$4, %cx
	cmpw	$19429, %cx             # imm = 0x4BE5
	jne	.LBB42_35
# %bb.32:                               # %add_capture.split159
	movl	gfrom, %ecx
	movq	genfor, %rdx
	movslq	numb_moves, %rsi
	imulq	$24, %rsi, %rsi
	addq	%rsi, %rdx
	movl	%ecx, (%rdx)
	movl	(%r10), %ecx
	movq	genfor, %rdx
	movslq	numb_moves, %rsi
	imulq	$24, %rsi, %rsi
	addq	%rsi, %rdx
	movl	%ecx, 4(%rdx)
	movl	(%rax), %eax
	movq	genfor, %rcx
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movl	%eax, 8(%rcx)
	movq	genfor, %rax
	movslq	numb_moves, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	$0, 16(%rax)
	movl	(%r9), %eax
	movq	genfor, %rcx
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movl	%eax, 12(%rcx)
	movl	(%r8), %eax
	movq	genfor, %rcx
	movslq	numb_moves, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movl	%eax, 20(%rcx)
	movl	numb_moves, %eax
	addl	$1, %eax
	movl	%eax, numb_moves
	movw	$19429, BasicBlockSignatureTracker # imm = 0x4BE5
	movw	$46, RunTimeSignatureAdjuster
.LBB42_33:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$19441, %ax             # imm = 0x4BF1
	jne	.LBB42_35
# %bb.34:                               # %add_capture.split153
	movw	$19441, BasicBlockSignatureTracker # imm = 0x4BF1
	movw	$629, RunTimeSignatureAdjuster # imm = 0x275
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB42_35:                              # %CFerrorHandler.add_capture
	callq	FAULT_DETECTED_CFC
.Lfunc_end42:
	.size	add_capture, .Lfunc_end42-add_capture
	.cfi_endproc
                                        # -- End function
	.globl	in_check                # -- Begin function in_check
	.p2align	4, 0x90
	.type	in_check,@function
in_check:                               # @in_check
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.1:                                # %in_check.split174
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.2:                                # %in_check.split172
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.3:                                # %in_check.split170
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.4:                                # %in_check.split168
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.5:                                # %in_check.split166
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.6:                                # %in_check.split164
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.7:                                # %in_check.split162
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.8:                                # %in_check.split160
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.9:                                # %in_check.split158
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.10:                               # %in_check.split156
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.11:                               # %in_check.split154
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.12:                               # %in_check.split152
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.13:                               # %in_check.split150
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.14:                               # %in_check.split148
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.15:                               # %in_check.split146
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.16:                               # %in_check.split144
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.17:                               # %in_check.split142
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-14713, %ax            # imm = 0xC687
	xorw	%cx, %ax
	cmpw	$19464, %ax             # imm = 0x4C08
	jne	.LBB43_39
# %bb.18:                               # %in_check.split140
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movl	Variant, %eax
	movw	$19464, BasicBlockSignatureTracker # imm = 0x4C08
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB43_21
# %bb.19:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$19473, %ax             # imm = 0x4C11
	jne	.LBB43_39
# %bb.20:                               # %in_check.split
	movl	$0, (%rbx)
	movw	$19473, BasicBlockSignatureTracker # imm = 0x4C11
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB43_37
.LBB43_21:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$19480, %ax             # imm = 0x4C18
	jne	.LBB43_39
# %bb.22:                               # %in_check.split122
	movl	white_to_move, %eax
	movw	$19480, BasicBlockSignatureTracker # imm = 0x4C18
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB43_29
# %bb.23:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$19490, %ax             # imm = 0x4C22
	jne	.LBB43_39
# %bb.24:                               # %in_check.split126
	movl	wking_loc, %edi
	movw	$19490, BasicBlockSignatureTracker # imm = 0x4C22
	movw	$20983, RunTimeSignatureAdjuster # imm = 0x51F7
	xorl	%esi, %esi
	callq	is_attacked
	movw	$19490, BasicBlockSignatureTracker # imm = 0x4C22
	movw	$20983, RunTimeSignatureAdjuster # imm = 0x51F7
	movw	$19490, BasicBlockSignatureTracker # imm = 0x4C22
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB43_27
# %bb.25:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$19519, %ax             # imm = 0x4C3F
	jne	.LBB43_39
# %bb.26:                               # %in_check.split130
	movl	$1, (%rbx)
	movw	$19519, BasicBlockSignatureTracker # imm = 0x4C3F
	movw	$46, RunTimeSignatureAdjuster
	jmp	.LBB43_37
.LBB43_27:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$115, %ax
	cmpw	$19537, %ax             # imm = 0x4C51
	jne	.LBB43_39
# %bb.28:                               # %in_check.split132
	movw	$19537, BasicBlockSignatureTracker # imm = 0x4C51
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB43_35
.LBB43_29:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$19555, %ax             # imm = 0x4C63
	jne	.LBB43_39
# %bb.30:                               # %in_check.split128
	movl	bking_loc, %edi
	movw	$19555, BasicBlockSignatureTracker # imm = 0x4C63
	movw	$20918, RunTimeSignatureAdjuster # imm = 0x51B6
	movl	$1, %esi
	callq	is_attacked
	movw	$19555, BasicBlockSignatureTracker # imm = 0x4C63
	movw	$20918, RunTimeSignatureAdjuster # imm = 0x51B6
	movw	$19555, BasicBlockSignatureTracker # imm = 0x4C63
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB43_33
# %bb.31:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$19564, %ax             # imm = 0x4C6C
	jne	.LBB43_39
# %bb.32:                               # %in_check.split136
	movl	$1, (%rbx)
	movw	$19564, BasicBlockSignatureTracker # imm = 0x4C6C
	movw	$125, RunTimeSignatureAdjuster
	jmp	.LBB43_37
.LBB43_33:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$19570, %ax             # imm = 0x4C72
	jne	.LBB43_39
# %bb.34:                               # %in_check.split138
	movw	$19570, BasicBlockSignatureTracker # imm = 0x4C72
	movw	$35, RunTimeSignatureAdjuster
.LBB43_35:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$19579, %ax             # imm = 0x4C7B
	jne	.LBB43_39
# %bb.36:                               # %in_check.split134
	movl	$0, (%rbx)
	movw	$19579, BasicBlockSignatureTracker # imm = 0x4C7B
	movw	$106, RunTimeSignatureAdjuster
.LBB43_37:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$111, %ax
	xorw	%cx, %ax
	cmpw	$19582, %ax             # imm = 0x4C7E
	jne	.LBB43_39
# %bb.38:                               # %in_check.split124
	movl	(%rbx), %eax
	movw	$19582, BasicBlockSignatureTracker # imm = 0x4C7E
	movw	$-14795, RunTimeSignatureAdjuster # imm = 0xC635
	leaq	-8(%rbp), %rsp
	popq	%rbx
	popq	%rbp
	retq
.LBB43_39:                              # %CFerrorHandler.in_check
	callq	FAULT_DETECTED_CFC
.Lfunc_end43:
	.size	in_check, .Lfunc_end43-in_check
	.cfi_endproc
                                        # -- End function
	.globl	f_in_check              # -- Begin function f_in_check
	.p2align	4, 0x90
	.type	f_in_check,@function
f_in_check:                             # @f_in_check
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1359, %ax             # imm = 0xFAB1
	xorw	%cx, %ax
	cmpw	$19612, %ax             # imm = 0x4C9C
	jne	.LBB44_1069
# %bb.1:                                # %f_in_check.split2798
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1359, %ax             # imm = 0xFAB1
	xorw	%cx, %ax
	cmpw	$19612, %ax             # imm = 0x4C9C
	jne	.LBB44_1069
# %bb.2:                                # %f_in_check.split2796
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rdi, (%rbx)
	movl	%esi, (%rax)
	movq	(%rbx), %rsi
	movslq	(%rax), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	4(%rsi), %esi
	movl	%esi, (%rdx)
	movq	(%rbx), %rsi
	movslq	(%rax), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	(%rsi), %esi
	movl	%esi, (%rcx)
	movl	Variant, %esi
	movw	$19612, BasicBlockSignatureTracker # imm = 0x4C9C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %esi
	jne	.LBB44_5
# %bb.3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$19613, %ax             # imm = 0x4C9D
	jne	.LBB44_1069
# %bb.4:                                # %f_in_check.split
	movl	$0, (%r14)
	movw	$19613, BasicBlockSignatureTracker # imm = 0x4C9D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_1017
.LBB44_5:
	movw	BasicBlockSignatureTracker, %si
	xorw	$52, %si
	cmpw	$19624, %si             # imm = 0x4CA8
	jne	.LBB44_1069
# %bb.6:                                # %f_in_check.split1820
	movl	white_to_move, %esi
	movw	$19624, BasicBlockSignatureTracker # imm = 0x4CA8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %esi
	jne	.LBB44_512
# %bb.7:
	movw	BasicBlockSignatureTracker, %si
	xorw	$19, %si
	cmpw	$19643, %si             # imm = 0x4CBB
	jne	.LBB44_1069
# %bb.8:                                # %f_in_check.split1824
	movslq	(%rdx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$19643, BasicBlockSignatureTracker(%rip) # imm = 0x4CBB
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-2, %esi
	movl	%esi, %edi
	subl	$10, %edi
	ja	.LBB44_332
# %bb.9:                                # %f_in_check.split1824
	movq	.LJTI44_1(,%rsi,8), %rsi
	jmpq	*%rsi
.LBB44_10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$19657, %ax             # imm = 0x4CC9
	jne	.LBB44_1069
# %bb.11:                               # %f_in_check.split1830
	movl	(%rdx), %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$19657, BasicBlockSignatureTracker # imm = 0x4CC9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB44_14
# %bb.12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$19664, %ax             # imm = 0x4CD0
	jne	.LBB44_1069
# %bb.13:                               # %f_in_check.split1844
	movl	(%rdx), %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$19664, BasicBlockSignatureTracker # imm = 0x4CD0
	movw	$25, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB44_16
.LBB44_14:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$19676, %ax             # imm = 0x4CDC
	jne	.LBB44_1069
# %bb.15:                               # %f_in_check.split1842
	movl	$1, (%r14)
	movw	$19676, BasicBlockSignatureTracker # imm = 0x4CDC
	movw	$65, RunTimeSignatureAdjuster
	jmp	.LBB44_1017
.LBB44_16:                              # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-603, %ax              # imm = 0xFDA5
	cmpw	$-20107, %ax            # imm = 0xB175
	jne	.LBB44_1069
# %bb.17:                               # %f_in_check.split1846
	movw	$-20107, BasicBlockSignatureTracker # imm = 0xB175
	movw	$-603, RunTimeSignatureAdjuster # imm = 0xFDA5
# %bb.18:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$14, %ax
	xorw	%dx, %ax
	cmpw	$19678, %ax             # imm = 0x4CDE
	jne	.LBB44_1069
# %bb.19:                               # %f_in_check.split2800
	movw	$19678, BasicBlockSignatureTracker # imm = 0x4CDE
	movw	$101, RunTimeSignatureAdjuster
	jmp	.LBB44_332
.LBB44_20:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$75, %ax
	cmpw	$19696, %ax             # imm = 0x4CF0
	jne	.LBB44_1069
# %bb.21:                               # %f_in_check.split1832
	movslq	(%rdx), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rsi
	movl	Xdiagl(,%rsi,4), %esi
	movw	$19696, BasicBlockSignatureTracker # imm = 0x4CF0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_54
# %bb.22:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$19708, %ax             # imm = 0x4CFC
	jne	.LBB44_1069
# %bb.23:                               # %f_in_check.split1848
	movl	wking_loc, %eax
	movl	(%rdx), %esi
	movw	$19708, BasicBlockSignatureTracker # imm = 0x4CFC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_38
# %bb.24:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$500, %ax               # imm = 0x1F4
	cmpw	$19720, %ax             # imm = 0x4D08
	jne	.LBB44_1069
# %bb.25:                               # %f_in_check.split1852
	movl	wking_loc, %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$19720, BasicBlockSignatureTracker # imm = 0x4D08
	movw	$0, RunTimeSignatureAdjuster
.LBB44_26:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$3, %ax
	xorw	%si, %ax
	cmpw	$19723, %ax             # imm = 0x4D0B
	jne	.LBB44_1027
# %bb.27:                               # %f_in_check.split1856
                                        #   in Loop: Header=BB44_26 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$19723, BasicBlockSignatureTracker # imm = 0x4D0B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_32
# %bb.28:                               #   in Loop: Header=BB44_26 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$19729, %ax             # imm = 0x4D11
	jne	.LBB44_1027
# %bb.29:                               # %f_in_check.split1858
                                        #   in Loop: Header=BB44_26 Depth=1
	movw	$19729, BasicBlockSignatureTracker # imm = 0x4D11
	movw	$0, RunTimeSignatureAdjuster
# %bb.30:                               #   in Loop: Header=BB44_26 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$19739, %ax             # imm = 0x4D1B
	jne	.LBB44_1027
# %bb.31:                               # %f_in_check.split1862
                                        #   in Loop: Header=BB44_26 Depth=1
	movl	(%r8), %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$19739, BasicBlockSignatureTracker # imm = 0x4D1B
	movw	$19, RunTimeSignatureAdjuster
	jmp	.LBB44_26
.LBB44_32:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$19743, %ax             # imm = 0x4D1F
	jne	.LBB44_1069
# %bb.33:                               # %f_in_check.split1860
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$19743, BasicBlockSignatureTracker # imm = 0x4D1F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_36
# %bb.34:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$19756, %ax             # imm = 0x4D2C
	jne	.LBB44_1069
# %bb.35:                               # %f_in_check.split1864
	movl	$1, (%r14)
	movw	$19756, BasicBlockSignatureTracker # imm = 0x4D2C
	movw	$433, RunTimeSignatureAdjuster # imm = 0x1B1
	jmp	.LBB44_1017
.LBB44_36:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$19757, %ax             # imm = 0x4D2D
	jne	.LBB44_1069
# %bb.37:                               # %f_in_check.split1866
	movw	$19757, BasicBlockSignatureTracker # imm = 0x4D2D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_52
.LBB44_38:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$446, %ax               # imm = 0x1BE
	cmpw	$19778, %ax             # imm = 0x4D42
	jne	.LBB44_1069
# %bb.39:                               # %f_in_check.split1854
	movl	wking_loc, %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$19778, BasicBlockSignatureTracker # imm = 0x4D42
	movw	$0, RunTimeSignatureAdjuster
.LBB44_40:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$16, %ax
	xorw	%si, %ax
	cmpw	$19794, %ax             # imm = 0x4D52
	jne	.LBB44_1028
# %bb.41:                               # %f_in_check.split1870
                                        #   in Loop: Header=BB44_40 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$19794, BasicBlockSignatureTracker # imm = 0x4D52
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_46
# %bb.42:                               #   in Loop: Header=BB44_40 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$19796, %ax             # imm = 0x4D54
	jne	.LBB44_1028
# %bb.43:                               # %f_in_check.split1872
                                        #   in Loop: Header=BB44_40 Depth=1
	movw	$19796, BasicBlockSignatureTracker # imm = 0x4D54
	movw	$0, RunTimeSignatureAdjuster
# %bb.44:                               #   in Loop: Header=BB44_40 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$19801, %ax             # imm = 0x4D59
	jne	.LBB44_1028
# %bb.45:                               # %f_in_check.split1876
                                        #   in Loop: Header=BB44_40 Depth=1
	movl	(%r8), %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$19801, BasicBlockSignatureTracker # imm = 0x4D59
	movw	$27, RunTimeSignatureAdjuster
	jmp	.LBB44_40
.LBB44_46:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$19816, %ax             # imm = 0x4D68
	jne	.LBB44_1069
# %bb.47:                               # %f_in_check.split1874
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$19816, BasicBlockSignatureTracker # imm = 0x4D68
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_50
# %bb.48:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$236, %ax
	cmpw	$19844, %ax             # imm = 0x4D84
	jne	.LBB44_1069
# %bb.49:                               # %f_in_check.split1878
	movl	$1, (%r14)
	movw	$19844, BasicBlockSignatureTracker # imm = 0x4D84
	movw	$281, RunTimeSignatureAdjuster # imm = 0x119
	jmp	.LBB44_1017
.LBB44_50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$237, %ax
	cmpw	$19845, %ax             # imm = 0x4D85
	jne	.LBB44_1069
# %bb.51:                               # %f_in_check.split1880
	movw	$19845, BasicBlockSignatureTracker # imm = 0x4D85
	movw	$168, RunTimeSignatureAdjuster
.LBB44_52:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$142, %ax
	xorw	%dx, %ax
	cmpw	$19875, %ax             # imm = 0x4DA3
	jne	.LBB44_1069
# %bb.53:                               # %f_in_check.split1868
	movw	$19875, BasicBlockSignatureTracker # imm = 0x4DA3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_90
.LBB44_54:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$327, %ax               # imm = 0x147
	cmpw	$19895, %ax             # imm = 0x4DB7
	jne	.LBB44_1069
# %bb.55:                               # %f_in_check.split1850
	movslq	(%rdx), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rsi
	movl	Xdiagr(,%rsi,4), %esi
	movw	$19895, BasicBlockSignatureTracker # imm = 0x4DB7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_88
# %bb.56:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$19900, %ax             # imm = 0x4DBC
	jne	.LBB44_1069
# %bb.57:                               # %f_in_check.split1884
	movl	wking_loc, %eax
	movl	(%rdx), %esi
	movw	$19900, BasicBlockSignatureTracker # imm = 0x4DBC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_72
# %bb.58:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$115, %ax
	cmpw	$19919, %ax             # imm = 0x4DCF
	jne	.LBB44_1069
# %bb.59:                               # %f_in_check.split1888
	movl	wking_loc, %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$19919, BasicBlockSignatureTracker # imm = 0x4DCF
	movw	$0, RunTimeSignatureAdjuster
.LBB44_60:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$22, %ax
	xorw	%si, %ax
	cmpw	$19929, %ax             # imm = 0x4DD9
	jne	.LBB44_1029
# %bb.61:                               # %f_in_check.split1892
                                        #   in Loop: Header=BB44_60 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$19929, BasicBlockSignatureTracker # imm = 0x4DD9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_66
# %bb.62:                               #   in Loop: Header=BB44_60 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$19933, %ax             # imm = 0x4DDD
	jne	.LBB44_1029
# %bb.63:                               # %f_in_check.split1894
                                        #   in Loop: Header=BB44_60 Depth=1
	movw	$19933, BasicBlockSignatureTracker # imm = 0x4DDD
	movw	$0, RunTimeSignatureAdjuster
# %bb.64:                               #   in Loop: Header=BB44_60 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$19946, %ax             # imm = 0x4DEA
	jne	.LBB44_1029
# %bb.65:                               # %f_in_check.split1898
                                        #   in Loop: Header=BB44_60 Depth=1
	movl	(%r8), %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$19946, BasicBlockSignatureTracker # imm = 0x4DEA
	movw	$37, RunTimeSignatureAdjuster
	jmp	.LBB44_60
.LBB44_66:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$19957, %ax             # imm = 0x4DF5
	jne	.LBB44_1069
# %bb.67:                               # %f_in_check.split1896
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$19957, BasicBlockSignatureTracker # imm = 0x4DF5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_70
# %bb.68:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1015, %ax              # imm = 0x3F7
	cmpw	$19970, %ax             # imm = 0x4E02
	jne	.LBB44_1069
# %bb.69:                               # %f_in_check.split1900
	movl	$1, (%r14)
	movw	$19970, BasicBlockSignatureTracker # imm = 0x4E02
	movw	$671, RunTimeSignatureAdjuster # imm = 0x29F
	jmp	.LBB44_1017
.LBB44_70:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1008, %ax              # imm = 0x3F0
	cmpw	$19973, %ax             # imm = 0x4E05
	jne	.LBB44_1069
# %bb.71:                               # %f_in_check.split1902
	movw	$19973, BasicBlockSignatureTracker # imm = 0x4E05
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_86
.LBB44_72:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$934, %ax               # imm = 0x3A6
	cmpw	$19994, %ax             # imm = 0x4E1A
	jne	.LBB44_1069
# %bb.73:                               # %f_in_check.split1890
	movl	wking_loc, %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$19994, BasicBlockSignatureTracker # imm = 0x4E1A
	movw	$0, RunTimeSignatureAdjuster
.LBB44_74:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$58, %ax
	xorw	%si, %ax
	cmpw	$20000, %ax             # imm = 0x4E20
	jne	.LBB44_1030
# %bb.75:                               # %f_in_check.split1906
                                        #   in Loop: Header=BB44_74 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20000, BasicBlockSignatureTracker # imm = 0x4E20
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_80
# %bb.76:                               #   in Loop: Header=BB44_74 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$20010, %ax             # imm = 0x4E2A
	jne	.LBB44_1030
# %bb.77:                               # %f_in_check.split1908
                                        #   in Loop: Header=BB44_74 Depth=1
	movw	$20010, BasicBlockSignatureTracker # imm = 0x4E2A
	movw	$0, RunTimeSignatureAdjuster
# %bb.78:                               #   in Loop: Header=BB44_74 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$20026, %ax             # imm = 0x4E3A
	jne	.LBB44_1030
# %bb.79:                               # %f_in_check.split1912
                                        #   in Loop: Header=BB44_74 Depth=1
	movl	(%r8), %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$20026, BasicBlockSignatureTracker # imm = 0x4E3A
	movw	$32, RunTimeSignatureAdjuster
	jmp	.LBB44_74
.LBB44_80:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$110, %ax
	cmpw	$20046, %ax             # imm = 0x4E4E
	jne	.LBB44_1069
# %bb.81:                               # %f_in_check.split1910
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$20046, BasicBlockSignatureTracker # imm = 0x4E4E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_84
# %bb.82:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$20051, %ax             # imm = 0x4E53
	jne	.LBB44_1069
# %bb.83:                               # %f_in_check.split1914
	movl	$1, (%r14)
	movw	$20051, BasicBlockSignatureTracker # imm = 0x4E53
	movw	$718, RunTimeSignatureAdjuster # imm = 0x2CE
	jmp	.LBB44_1017
.LBB44_84:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$20062, %ax             # imm = 0x4E5E
	jne	.LBB44_1069
# %bb.85:                               # %f_in_check.split1916
	movw	$20062, BasicBlockSignatureTracker # imm = 0x4E5E
	movw	$91, RunTimeSignatureAdjuster
.LBB44_86:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$102, %ax
	xorw	%dx, %ax
	cmpw	$20067, %ax             # imm = 0x4E63
	jne	.LBB44_1069
# %bb.87:                               # %f_in_check.split1904
	movw	$20067, BasicBlockSignatureTracker # imm = 0x4E63
	movw	$980, RunTimeSignatureAdjuster # imm = 0x3D4
.LBB44_88:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$964, %ax               # imm = 0x3C4
	xorw	%dx, %ax
	cmpw	$20083, %ax             # imm = 0x4E73
	jne	.LBB44_1069
# %bb.89:                               # %f_in_check.split1886
	movw	$20083, BasicBlockSignatureTracker # imm = 0x4E73
	movw	$976, RunTimeSignatureAdjuster # imm = 0x3D0
.LBB44_90:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$817, %ax               # imm = 0x331
	xorw	%dx, %ax
	cmpw	$20114, %ax             # imm = 0x4E92
	jne	.LBB44_1069
# %bb.91:                               # %f_in_check.split1882
	movw	$20114, BasicBlockSignatureTracker # imm = 0x4E92
	movw	$553, RunTimeSignatureAdjuster # imm = 0x229
	jmp	.LBB44_332
.LBB44_92:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$544, %ax               # imm = 0x220
	cmpw	$20123, %ax             # imm = 0x4E9B
	jne	.LBB44_1069
# %bb.93:                               # %f_in_check.split1834
	movslq	(%rdx), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rsi
	movl	Xfile(,%rsi,4), %esi
	movw	$20123, BasicBlockSignatureTracker # imm = 0x4E9B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_126
# %bb.94:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$20125, %ax             # imm = 0x4E9D
	jne	.LBB44_1069
# %bb.95:                               # %f_in_check.split1918
	movl	wking_loc, %eax
	movl	(%rdx), %esi
	movw	$20125, BasicBlockSignatureTracker # imm = 0x4E9D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_110
# %bb.96:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$20126, %ax             # imm = 0x4E9E
	jne	.LBB44_1069
# %bb.97:                               # %f_in_check.split1922
	movl	wking_loc, %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$20126, BasicBlockSignatureTracker # imm = 0x4E9E
	movw	$0, RunTimeSignatureAdjuster
.LBB44_98:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$61, %ax
	xorw	%si, %ax
	cmpw	$20131, %ax             # imm = 0x4EA3
	jne	.LBB44_1031
# %bb.99:                               # %f_in_check.split1926
                                        #   in Loop: Header=BB44_98 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20131, BasicBlockSignatureTracker # imm = 0x4EA3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_104
# %bb.100:                              #   in Loop: Header=BB44_98 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$20135, %ax             # imm = 0x4EA7
	jne	.LBB44_1031
# %bb.101:                              # %f_in_check.split1928
                                        #   in Loop: Header=BB44_98 Depth=1
	movw	$20135, BasicBlockSignatureTracker # imm = 0x4EA7
	movw	$0, RunTimeSignatureAdjuster
# %bb.102:                              #   in Loop: Header=BB44_98 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$20137, %ax             # imm = 0x4EA9
	jne	.LBB44_1031
# %bb.103:                              # %f_in_check.split1932
                                        #   in Loop: Header=BB44_98 Depth=1
	movl	(%r8), %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$20137, BasicBlockSignatureTracker # imm = 0x4EA9
	movw	$55, RunTimeSignatureAdjuster
	jmp	.LBB44_98
.LBB44_104:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$20138, %ax             # imm = 0x4EAA
	jne	.LBB44_1069
# %bb.105:                              # %f_in_check.split1930
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$20138, BasicBlockSignatureTracker # imm = 0x4EAA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_108
# %bb.106:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$109, %ax
	cmpw	$20167, %ax             # imm = 0x4EC7
	jne	.LBB44_1069
# %bb.107:                              # %f_in_check.split1934
	movl	$1, (%r14)
	movw	$20167, BasicBlockSignatureTracker # imm = 0x4EC7
	movw	$602, RunTimeSignatureAdjuster # imm = 0x25A
	jmp	.LBB44_1017
.LBB44_108:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$20177, %ax             # imm = 0x4ED1
	jne	.LBB44_1069
# %bb.109:                              # %f_in_check.split1936
	movw	$20177, BasicBlockSignatureTracker # imm = 0x4ED1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_124
.LBB44_110:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$78, %ax
	cmpw	$20179, %ax             # imm = 0x4ED3
	jne	.LBB44_1069
# %bb.111:                              # %f_in_check.split1924
	movl	wking_loc, %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$20179, BasicBlockSignatureTracker # imm = 0x4ED3
	movw	$0, RunTimeSignatureAdjuster
.LBB44_112:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$5, %ax
	xorw	%si, %ax
	cmpw	$20182, %ax             # imm = 0x4ED6
	jne	.LBB44_1032
# %bb.113:                              # %f_in_check.split1940
                                        #   in Loop: Header=BB44_112 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20182, BasicBlockSignatureTracker # imm = 0x4ED6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_118
# %bb.114:                              #   in Loop: Header=BB44_112 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$20201, %ax             # imm = 0x4EE9
	jne	.LBB44_1032
# %bb.115:                              # %f_in_check.split1942
                                        #   in Loop: Header=BB44_112 Depth=1
	movw	$20201, BasicBlockSignatureTracker # imm = 0x4EE9
	movw	$0, RunTimeSignatureAdjuster
# %bb.116:                              #   in Loop: Header=BB44_112 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$20204, %ax             # imm = 0x4EEC
	jne	.LBB44_1032
# %bb.117:                              # %f_in_check.split1946
                                        #   in Loop: Header=BB44_112 Depth=1
	movl	(%r8), %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$20204, BasicBlockSignatureTracker # imm = 0x4EEC
	movw	$63, RunTimeSignatureAdjuster
	jmp	.LBB44_112
.LBB44_118:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$38, %ax
	cmpw	$20208, %ax             # imm = 0x4EF0
	jne	.LBB44_1069
# %bb.119:                              # %f_in_check.split1944
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$20208, BasicBlockSignatureTracker # imm = 0x4EF0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_122
# %bb.120:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$20216, %ax             # imm = 0x4EF8
	jne	.LBB44_1069
# %bb.121:                              # %f_in_check.split1948
	movl	$1, (%r14)
	movw	$20216, BasicBlockSignatureTracker # imm = 0x4EF8
	movw	$613, RunTimeSignatureAdjuster # imm = 0x265
	jmp	.LBB44_1017
.LBB44_122:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$503, %ax               # imm = 0x1F7
	cmpw	$20231, %ax             # imm = 0x4F07
	jne	.LBB44_1069
# %bb.123:                              # %f_in_check.split1950
	movw	$20231, BasicBlockSignatureTracker # imm = 0x4F07
	movw	$470, RunTimeSignatureAdjuster # imm = 0x1D6
.LBB44_124:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$477, %ax               # imm = 0x1DD
	xorw	%dx, %ax
	cmpw	$20236, %ax             # imm = 0x4F0C
	jne	.LBB44_1069
# %bb.125:                              # %f_in_check.split1938
	movw	$20236, BasicBlockSignatureTracker # imm = 0x4F0C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_162
.LBB44_126:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$405, %ax               # imm = 0x195
	cmpw	$20238, %ax             # imm = 0x4F0E
	jne	.LBB44_1069
# %bb.127:                              # %f_in_check.split1920
	movslq	(%rdx), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rsi
	movl	Xrank(,%rsi,4), %esi
	movw	$20238, BasicBlockSignatureTracker # imm = 0x4F0E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_160
# %bb.128:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$20254, %ax             # imm = 0x4F1E
	jne	.LBB44_1069
# %bb.129:                              # %f_in_check.split1954
	movl	wking_loc, %eax
	movl	(%rdx), %esi
	movw	$20254, BasicBlockSignatureTracker # imm = 0x4F1E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_144
# %bb.130:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$20256, %ax             # imm = 0x4F20
	jne	.LBB44_1069
# %bb.131:                              # %f_in_check.split1958
	movl	wking_loc, %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$20256, BasicBlockSignatureTracker # imm = 0x4F20
	movw	$0, RunTimeSignatureAdjuster
.LBB44_132:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$4, %ax
	xorw	%si, %ax
	cmpw	$20260, %ax             # imm = 0x4F24
	jne	.LBB44_1033
# %bb.133:                              # %f_in_check.split1962
                                        #   in Loop: Header=BB44_132 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20260, BasicBlockSignatureTracker # imm = 0x4F24
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_138
# %bb.134:                              #   in Loop: Header=BB44_132 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$112, %ax
	cmpw	$20308, %ax             # imm = 0x4F54
	jne	.LBB44_1033
# %bb.135:                              # %f_in_check.split1964
                                        #   in Loop: Header=BB44_132 Depth=1
	movw	$20308, BasicBlockSignatureTracker # imm = 0x4F54
	movw	$0, RunTimeSignatureAdjuster
# %bb.136:                              #   in Loop: Header=BB44_132 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$20310, %ax             # imm = 0x4F56
	jne	.LBB44_1033
# %bb.137:                              # %f_in_check.split1968
                                        #   in Loop: Header=BB44_132 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$20310, BasicBlockSignatureTracker # imm = 0x4F56
	movw	$118, RunTimeSignatureAdjuster
	jmp	.LBB44_132
.LBB44_138:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$95, %ax
	cmpw	$20347, %ax             # imm = 0x4F7B
	jne	.LBB44_1069
# %bb.139:                              # %f_in_check.split1966
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$20347, BasicBlockSignatureTracker # imm = 0x4F7B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_142
# %bb.140:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$20350, %ax             # imm = 0x4F7E
	jne	.LBB44_1069
# %bb.141:                              # %f_in_check.split1970
	movl	$1, (%r14)
	movw	$20350, BasicBlockSignatureTracker # imm = 0x4F7E
	movw	$995, RunTimeSignatureAdjuster # imm = 0x3E3
	jmp	.LBB44_1017
.LBB44_142:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$20351, %ax             # imm = 0x4F7F
	jne	.LBB44_1069
# %bb.143:                              # %f_in_check.split1972
	movw	$20351, BasicBlockSignatureTracker # imm = 0x4F7F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_158
.LBB44_144:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$149, %ax
	cmpw	$20363, %ax             # imm = 0x4F8B
	jne	.LBB44_1069
# %bb.145:                              # %f_in_check.split1960
	movl	wking_loc, %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$20363, BasicBlockSignatureTracker # imm = 0x4F8B
	movw	$0, RunTimeSignatureAdjuster
.LBB44_146:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$48, %ax
	xorw	%si, %ax
	cmpw	$20411, %ax             # imm = 0x4FBB
	jne	.LBB44_1034
# %bb.147:                              # %f_in_check.split1976
                                        #   in Loop: Header=BB44_146 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20411, BasicBlockSignatureTracker # imm = 0x4FBB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_152
# %bb.148:                              #   in Loop: Header=BB44_146 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$106, %ax
	cmpw	$20433, %ax             # imm = 0x4FD1
	jne	.LBB44_1034
# %bb.149:                              # %f_in_check.split1978
                                        #   in Loop: Header=BB44_146 Depth=1
	movw	$20433, BasicBlockSignatureTracker # imm = 0x4FD1
	movw	$0, RunTimeSignatureAdjuster
# %bb.150:                              #   in Loop: Header=BB44_146 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$20445, %ax             # imm = 0x4FDD
	jne	.LBB44_1034
# %bb.151:                              # %f_in_check.split1982
                                        #   in Loop: Header=BB44_146 Depth=1
	movl	(%r8), %eax
	addl	$-1, %eax
	movl	%eax, (%r8)
	movw	$20445, BasicBlockSignatureTracker # imm = 0x4FDD
	movw	$86, RunTimeSignatureAdjuster
	jmp	.LBB44_146
.LBB44_152:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$95, %ax
	cmpw	$20452, %ax             # imm = 0x4FE4
	jne	.LBB44_1069
# %bb.153:                              # %f_in_check.split1980
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$20452, BasicBlockSignatureTracker # imm = 0x4FE4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_156
# %bb.154:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$20463, %ax             # imm = 0x4FEF
	jne	.LBB44_1069
# %bb.155:                              # %f_in_check.split1984
	movl	$1, (%r14)
	movw	$20463, BasicBlockSignatureTracker # imm = 0x4FEF
	movw	$882, RunTimeSignatureAdjuster # imm = 0x372
	jmp	.LBB44_1017
.LBB44_156:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$20471, %ax             # imm = 0x4FF7
	jne	.LBB44_1069
# %bb.157:                              # %f_in_check.split1986
	movw	$20471, BasicBlockSignatureTracker # imm = 0x4FF7
	movw	$136, RunTimeSignatureAdjuster
.LBB44_158:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$8050, %ax              # imm = 0x1F72
	xorw	%dx, %ax
	cmpw	$20493, %ax             # imm = 0x500D
	jne	.LBB44_1069
# %bb.159:                              # %f_in_check.split1974
	movw	$20493, BasicBlockSignatureTracker # imm = 0x500D
	movw	$7939, RunTimeSignatureAdjuster # imm = 0x1F03
.LBB44_160:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$7966, %ax              # imm = 0x1F1E
	xorw	%dx, %ax
	cmpw	$20496, %ax             # imm = 0x5010
	jne	.LBB44_1069
# %bb.161:                              # %f_in_check.split1956
	movw	$20496, BasicBlockSignatureTracker # imm = 0x5010
	movw	$7964, RunTimeSignatureAdjuster # imm = 0x1F1C
.LBB44_162:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$7955, %ax              # imm = 0x1F13
	xorw	%dx, %ax
	cmpw	$20511, %ax             # imm = 0x501F
	jne	.LBB44_1069
# %bb.163:                              # %f_in_check.split1952
	movw	$20511, BasicBlockSignatureTracker # imm = 0x501F
	movw	$7332, RunTimeSignatureAdjuster # imm = 0x1CA4
	jmp	.LBB44_332
.LBB44_164:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7314, %ax              # imm = 0x1C92
	cmpw	$20521, %ax             # imm = 0x5029
	jne	.LBB44_1069
# %bb.165:                              # %f_in_check.split1836
	movl	$0, (%r8)
	movw	$20521, BasicBlockSignatureTracker # imm = 0x5029
	movw	$0, RunTimeSignatureAdjuster
.LBB44_166:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$25, %ax
	xorw	%si, %ax
	cmpw	$20528, %ax             # imm = 0x5030
	jne	.LBB44_1035
# %bb.167:                              # %f_in_check.split1988
                                        #   in Loop: Header=BB44_166 Depth=1
	movl	(%r8), %eax
	movw	$20528, BasicBlockSignatureTracker # imm = 0x5030
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jge	.LBB44_176
# %bb.168:                              #   in Loop: Header=BB44_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$20530, %ax             # imm = 0x5032
	jne	.LBB44_1035
# %bb.169:                              # %f_in_check.split1990
                                        #   in Loop: Header=BB44_166 Depth=1
	movl	wking_loc, %eax
	movslq	(%r8), %rsi
	addl	f_in_check.knight_o(,%rsi,4), %eax
	movl	(%rdx), %esi
	movw	$20530, BasicBlockSignatureTracker # imm = 0x5032
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_172
# %bb.170:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$20535, %ax             # imm = 0x5037
	jne	.LBB44_1069
# %bb.171:                              # %f_in_check.split1994
	movl	$1, (%r14)
	movw	$20535, BasicBlockSignatureTracker # imm = 0x5037
	movw	$7338, RunTimeSignatureAdjuster # imm = 0x1CAA
	jmp	.LBB44_1017
.LBB44_172:                             #   in Loop: Header=BB44_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$20539, %ax             # imm = 0x503B
	jne	.LBB44_1035
# %bb.173:                              # %f_in_check.split1996
                                        #   in Loop: Header=BB44_166 Depth=1
	movw	$20539, BasicBlockSignatureTracker # imm = 0x503B
	movw	$0, RunTimeSignatureAdjuster
# %bb.174:                              #   in Loop: Header=BB44_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$20543, %ax             # imm = 0x503F
	jne	.LBB44_1035
# %bb.175:                              # %f_in_check.split1998
                                        #   in Loop: Header=BB44_166 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$20543, BasicBlockSignatureTracker # imm = 0x503F
	movw	$22, RunTimeSignatureAdjuster
	jmp	.LBB44_166
.LBB44_176:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$20552, %ax             # imm = 0x5048
	jne	.LBB44_1069
# %bb.177:                              # %f_in_check.split1992
	movw	$20552, BasicBlockSignatureTracker # imm = 0x5048
	movw	$7411, RunTimeSignatureAdjuster # imm = 0x1CF3
	jmp	.LBB44_332
.LBB44_178:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7405, %ax              # imm = 0x1CED
	cmpw	$20566, %ax             # imm = 0x5056
	jne	.LBB44_1069
# %bb.179:                              # %f_in_check.split1838
	movslq	(%rdx), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rsi
	movl	Xfile(,%rsi,4), %esi
	movw	$20566, BasicBlockSignatureTracker # imm = 0x5056
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_212
# %bb.180:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$20574, %ax             # imm = 0x505E
	jne	.LBB44_1069
# %bb.181:                              # %f_in_check.split2000
	movl	wking_loc, %eax
	movl	(%rdx), %esi
	movw	$20574, BasicBlockSignatureTracker # imm = 0x505E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_196
# %bb.182:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$20596, %ax             # imm = 0x5074
	jne	.LBB44_1069
# %bb.183:                              # %f_in_check.split2004
	movl	wking_loc, %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$20596, BasicBlockSignatureTracker # imm = 0x5074
	movw	$0, RunTimeSignatureAdjuster
.LBB44_184:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$2, %ax
	xorw	%si, %ax
	cmpw	$20598, %ax             # imm = 0x5076
	jne	.LBB44_1036
# %bb.185:                              # %f_in_check.split2008
                                        #   in Loop: Header=BB44_184 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20598, BasicBlockSignatureTracker # imm = 0x5076
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_190
# %bb.186:                              #   in Loop: Header=BB44_184 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$20600, %ax             # imm = 0x5078
	jne	.LBB44_1036
# %bb.187:                              # %f_in_check.split2010
                                        #   in Loop: Header=BB44_184 Depth=1
	movw	$20600, BasicBlockSignatureTracker # imm = 0x5078
	movw	$0, RunTimeSignatureAdjuster
# %bb.188:                              #   in Loop: Header=BB44_184 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$20601, %ax             # imm = 0x5079
	jne	.LBB44_1036
# %bb.189:                              # %f_in_check.split2014
                                        #   in Loop: Header=BB44_184 Depth=1
	movl	(%r8), %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$20601, BasicBlockSignatureTracker # imm = 0x5079
	movw	$13, RunTimeSignatureAdjuster
	jmp	.LBB44_184
.LBB44_190:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$20603, %ax             # imm = 0x507B
	jne	.LBB44_1069
# %bb.191:                              # %f_in_check.split2012
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$20603, BasicBlockSignatureTracker # imm = 0x507B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_194
# %bb.192:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$20605, %ax             # imm = 0x507D
	jne	.LBB44_1069
# %bb.193:                              # %f_in_check.split2016
	movl	$1, (%r14)
	movw	$20605, BasicBlockSignatureTracker # imm = 0x507D
	movw	$7392, RunTimeSignatureAdjuster # imm = 0x1CE0
	jmp	.LBB44_1017
.LBB44_194:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$20606, %ax             # imm = 0x507E
	jne	.LBB44_1069
# %bb.195:                              # %f_in_check.split2018
	movw	$20606, BasicBlockSignatureTracker # imm = 0x507E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_210
.LBB44_196:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$206, %ax
	cmpw	$20624, %ax             # imm = 0x5090
	jne	.LBB44_1069
# %bb.197:                              # %f_in_check.split2006
	movl	wking_loc, %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$20624, BasicBlockSignatureTracker # imm = 0x5090
	movw	$0, RunTimeSignatureAdjuster
.LBB44_198:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$4, %ax
	xorw	%si, %ax
	cmpw	$20628, %ax             # imm = 0x5094
	jne	.LBB44_1037
# %bb.199:                              # %f_in_check.split2022
                                        #   in Loop: Header=BB44_198 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20628, BasicBlockSignatureTracker # imm = 0x5094
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_204
# %bb.200:                              #   in Loop: Header=BB44_198 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$20642, %ax             # imm = 0x50A2
	jne	.LBB44_1037
# %bb.201:                              # %f_in_check.split2024
                                        #   in Loop: Header=BB44_198 Depth=1
	movw	$20642, BasicBlockSignatureTracker # imm = 0x50A2
	movw	$0, RunTimeSignatureAdjuster
# %bb.202:                              #   in Loop: Header=BB44_198 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$20643, %ax             # imm = 0x50A3
	jne	.LBB44_1037
# %bb.203:                              # %f_in_check.split2028
                                        #   in Loop: Header=BB44_198 Depth=1
	movl	(%r8), %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$20643, BasicBlockSignatureTracker # imm = 0x50A3
	movw	$51, RunTimeSignatureAdjuster
	jmp	.LBB44_198
.LBB44_204:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$39, %ax
	cmpw	$20659, %ax             # imm = 0x50B3
	jne	.LBB44_1069
# %bb.205:                              # %f_in_check.split2026
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$20659, BasicBlockSignatureTracker # imm = 0x50B3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_208
# %bb.206:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$20667, %ax             # imm = 0x50BB
	jne	.LBB44_1069
# %bb.207:                              # %f_in_check.split2030
	movl	$1, (%r14)
	movw	$20667, BasicBlockSignatureTracker # imm = 0x50BB
	movw	$7206, RunTimeSignatureAdjuster # imm = 0x1C26
	jmp	.LBB44_1017
.LBB44_208:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$20669, %ax             # imm = 0x50BD
	jne	.LBB44_1069
# %bb.209:                              # %f_in_check.split2032
	movw	$20669, BasicBlockSignatureTracker # imm = 0x50BD
	movw	$195, RunTimeSignatureAdjuster
.LBB44_210:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$153, %ax
	xorw	%dx, %ax
	cmpw	$20711, %ax             # imm = 0x50E7
	jne	.LBB44_1069
# %bb.211:                              # %f_in_check.split2020
	movw	$20711, BasicBlockSignatureTracker # imm = 0x50E7
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_320
.LBB44_212:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$189, %ax
	cmpw	$20715, %ax             # imm = 0x50EB
	jne	.LBB44_1069
# %bb.213:                              # %f_in_check.split2002
	movslq	(%rdx), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rsi
	movl	Xrank(,%rsi,4), %esi
	movw	$20715, BasicBlockSignatureTracker # imm = 0x50EB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_246
# %bb.214:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$20717, %ax             # imm = 0x50ED
	jne	.LBB44_1069
# %bb.215:                              # %f_in_check.split2036
	movl	wking_loc, %eax
	movl	(%rdx), %esi
	movw	$20717, BasicBlockSignatureTracker # imm = 0x50ED
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_230
# %bb.216:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$20733, %ax             # imm = 0x50FD
	jne	.LBB44_1069
# %bb.217:                              # %f_in_check.split2040
	movl	wking_loc, %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$20733, BasicBlockSignatureTracker # imm = 0x50FD
	movw	$0, RunTimeSignatureAdjuster
.LBB44_218:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$2, %ax
	xorw	%si, %ax
	cmpw	$20735, %ax             # imm = 0x50FF
	jne	.LBB44_1038
# %bb.219:                              # %f_in_check.split2044
                                        #   in Loop: Header=BB44_218 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20735, BasicBlockSignatureTracker # imm = 0x50FF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_224
# %bb.220:                              #   in Loop: Header=BB44_218 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$488, %ax               # imm = 0x1E8
	cmpw	$20759, %ax             # imm = 0x5117
	jne	.LBB44_1038
# %bb.221:                              # %f_in_check.split2046
                                        #   in Loop: Header=BB44_218 Depth=1
	movw	$20759, BasicBlockSignatureTracker # imm = 0x5117
	movw	$0, RunTimeSignatureAdjuster
# %bb.222:                              #   in Loop: Header=BB44_218 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$20763, %ax             # imm = 0x511B
	jne	.LBB44_1038
# %bb.223:                              # %f_in_check.split2050
                                        #   in Loop: Header=BB44_218 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$20763, BasicBlockSignatureTracker # imm = 0x511B
	movw	$486, RunTimeSignatureAdjuster # imm = 0x1E6
	jmp	.LBB44_218
.LBB44_224:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$473, %ax               # imm = 0x1D9
	cmpw	$20774, %ax             # imm = 0x5126
	jne	.LBB44_1069
# %bb.225:                              # %f_in_check.split2048
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$20774, BasicBlockSignatureTracker # imm = 0x5126
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_228
# %bb.226:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$20796, %ax             # imm = 0x513C
	jne	.LBB44_1069
# %bb.227:                              # %f_in_check.split2052
	movl	$1, (%r14)
	movw	$20796, BasicBlockSignatureTracker # imm = 0x513C
	movw	$7585, RunTimeSignatureAdjuster # imm = 0x1DA1
	jmp	.LBB44_1017
.LBB44_228:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$103, %ax
	cmpw	$20801, %ax             # imm = 0x5141
	jne	.LBB44_1069
# %bb.229:                              # %f_in_check.split2054
	movw	$20801, BasicBlockSignatureTracker # imm = 0x5141
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_244
.LBB44_230:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$425, %ax               # imm = 0x1A9
	cmpw	$20804, %ax             # imm = 0x5144
	jne	.LBB44_1069
# %bb.231:                              # %f_in_check.split2042
	movl	wking_loc, %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$20804, BasicBlockSignatureTracker # imm = 0x5144
	movw	$0, RunTimeSignatureAdjuster
.LBB44_232:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$26, %ax
	xorw	%si, %ax
	cmpw	$20830, %ax             # imm = 0x515E
	jne	.LBB44_1039
# %bb.233:                              # %f_in_check.split2058
                                        #   in Loop: Header=BB44_232 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20830, BasicBlockSignatureTracker # imm = 0x515E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_238
# %bb.234:                              #   in Loop: Header=BB44_232 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$20831, %ax             # imm = 0x515F
	jne	.LBB44_1039
# %bb.235:                              # %f_in_check.split2060
                                        #   in Loop: Header=BB44_232 Depth=1
	movw	$20831, BasicBlockSignatureTracker # imm = 0x515F
	movw	$0, RunTimeSignatureAdjuster
# %bb.236:                              #   in Loop: Header=BB44_232 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$20840, %ax             # imm = 0x5168
	jne	.LBB44_1039
# %bb.237:                              # %f_in_check.split2064
                                        #   in Loop: Header=BB44_232 Depth=1
	movl	(%r8), %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$20840, BasicBlockSignatureTracker # imm = 0x5168
	movw	$44, RunTimeSignatureAdjuster
	jmp	.LBB44_232
.LBB44_238:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$20845, %ax             # imm = 0x516D
	jne	.LBB44_1069
# %bb.239:                              # %f_in_check.split2062
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$20845, BasicBlockSignatureTracker # imm = 0x516D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_242
# %bb.240:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$20849, %ax             # imm = 0x5171
	jne	.LBB44_1069
# %bb.241:                              # %f_in_check.split2066
	movl	$1, (%r14)
	movw	$20849, BasicBlockSignatureTracker # imm = 0x5171
	movw	$7660, RunTimeSignatureAdjuster # imm = 0x1DEC
	jmp	.LBB44_1017
.LBB44_242:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$20853, %ax             # imm = 0x5175
	jne	.LBB44_1069
# %bb.243:                              # %f_in_check.split2068
	movw	$20853, BasicBlockSignatureTracker # imm = 0x5175
	movw	$52, RunTimeSignatureAdjuster
.LBB44_244:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$59, %ax
	xorw	%dx, %ax
	cmpw	$20858, %ax             # imm = 0x517A
	jne	.LBB44_1069
# %bb.245:                              # %f_in_check.split2056
	movw	$20858, BasicBlockSignatureTracker # imm = 0x517A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_318
.LBB44_246:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$405, %ax               # imm = 0x195
	cmpw	$20862, %ax             # imm = 0x517E
	jne	.LBB44_1069
# %bb.247:                              # %f_in_check.split2038
	movslq	(%rdx), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rsi
	movl	Xdiagl(,%rsi,4), %esi
	movw	$20862, BasicBlockSignatureTracker # imm = 0x517E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_280
# %bb.248:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$252, %ax
	cmpw	$20866, %ax             # imm = 0x5182
	jne	.LBB44_1069
# %bb.249:                              # %f_in_check.split2072
	movl	wking_loc, %eax
	movl	(%rdx), %esi
	movw	$20866, BasicBlockSignatureTracker # imm = 0x5182
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_264
# %bb.250:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$20868, %ax             # imm = 0x5184
	jne	.LBB44_1069
# %bb.251:                              # %f_in_check.split2076
	movl	wking_loc, %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$20868, BasicBlockSignatureTracker # imm = 0x5184
	movw	$0, RunTimeSignatureAdjuster
.LBB44_252:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$54, %ax
	xorw	%si, %ax
	cmpw	$20914, %ax             # imm = 0x51B2
	jne	.LBB44_1040
# %bb.253:                              # %f_in_check.split2080
                                        #   in Loop: Header=BB44_252 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20914, BasicBlockSignatureTracker # imm = 0x51B2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_258
# %bb.254:                              #   in Loop: Header=BB44_252 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$20915, %ax             # imm = 0x51B3
	jne	.LBB44_1040
# %bb.255:                              # %f_in_check.split2082
                                        #   in Loop: Header=BB44_252 Depth=1
	movw	$20915, BasicBlockSignatureTracker # imm = 0x51B3
	movw	$0, RunTimeSignatureAdjuster
# %bb.256:                              #   in Loop: Header=BB44_252 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$20918, %ax             # imm = 0x51B6
	jne	.LBB44_1040
# %bb.257:                              # %f_in_check.split2086
                                        #   in Loop: Header=BB44_252 Depth=1
	movl	(%r8), %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$20918, BasicBlockSignatureTracker # imm = 0x51B6
	movw	$50, RunTimeSignatureAdjuster
	jmp	.LBB44_252
.LBB44_258:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$20923, %ax             # imm = 0x51BB
	jne	.LBB44_1069
# %bb.259:                              # %f_in_check.split2084
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$20923, BasicBlockSignatureTracker # imm = 0x51BB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_262
# %bb.260:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$20942, %ax             # imm = 0x51CE
	jne	.LBB44_1069
# %bb.261:                              # %f_in_check.split2088
	movl	$1, (%r14)
	movw	$20942, BasicBlockSignatureTracker # imm = 0x51CE
	movw	$7507, RunTimeSignatureAdjuster # imm = 0x1D53
	jmp	.LBB44_1017
.LBB44_262:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$101, %ax
	cmpw	$20958, %ax             # imm = 0x51DE
	jne	.LBB44_1069
# %bb.263:                              # %f_in_check.split2090
	movw	$20958, BasicBlockSignatureTracker # imm = 0x51DE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_278
.LBB44_264:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$106, %ax
	cmpw	$20968, %ax             # imm = 0x51E8
	jne	.LBB44_1069
# %bb.265:                              # %f_in_check.split2078
	movl	wking_loc, %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$20968, BasicBlockSignatureTracker # imm = 0x51E8
	movw	$0, RunTimeSignatureAdjuster
.LBB44_266:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$6, %ax
	xorw	%si, %ax
	cmpw	$20974, %ax             # imm = 0x51EE
	jne	.LBB44_1041
# %bb.267:                              # %f_in_check.split2094
                                        #   in Loop: Header=BB44_266 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$20974, BasicBlockSignatureTracker # imm = 0x51EE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_272
# %bb.268:                              #   in Loop: Header=BB44_266 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$20990, %ax             # imm = 0x51FE
	jne	.LBB44_1041
# %bb.269:                              # %f_in_check.split2096
                                        #   in Loop: Header=BB44_266 Depth=1
	movw	$20990, BasicBlockSignatureTracker # imm = 0x51FE
	movw	$0, RunTimeSignatureAdjuster
# %bb.270:                              #   in Loop: Header=BB44_266 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1009, %ax              # imm = 0x3F1
	cmpw	$21007, %ax             # imm = 0x520F
	jne	.LBB44_1041
# %bb.271:                              # %f_in_check.split2100
                                        #   in Loop: Header=BB44_266 Depth=1
	movl	(%r8), %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$21007, BasicBlockSignatureTracker # imm = 0x520F
	movw	$999, RunTimeSignatureAdjuster # imm = 0x3E7
	jmp	.LBB44_266
.LBB44_272:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1023, %ax              # imm = 0x3FF
	cmpw	$21009, %ax             # imm = 0x5211
	jne	.LBB44_1069
# %bb.273:                              # %f_in_check.split2098
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$21009, BasicBlockSignatureTracker # imm = 0x5211
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_276
# %bb.274:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$21019, %ax             # imm = 0x521B
	jne	.LBB44_1069
# %bb.275:                              # %f_in_check.split2102
	movl	$1, (%r14)
	movw	$21019, BasicBlockSignatureTracker # imm = 0x521B
	movw	$7814, RunTimeSignatureAdjuster # imm = 0x1E86
	jmp	.LBB44_1017
.LBB44_276:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$21023, %ax             # imm = 0x521F
	jne	.LBB44_1069
# %bb.277:                              # %f_in_check.split2104
	movw	$21023, BasicBlockSignatureTracker # imm = 0x521F
	movw	$961, RunTimeSignatureAdjuster # imm = 0x3C1
.LBB44_278:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$911, %ax               # imm = 0x38F
	xorw	%dx, %ax
	cmpw	$21073, %ax             # imm = 0x5251
	jne	.LBB44_1069
# %bb.279:                              # %f_in_check.split2092
	movw	$21073, BasicBlockSignatureTracker # imm = 0x5251
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_316
.LBB44_280:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$805, %ax               # imm = 0x325
	cmpw	$21083, %ax             # imm = 0x525B
	jne	.LBB44_1069
# %bb.281:                              # %f_in_check.split2074
	movslq	(%rdx), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rsi
	movl	Xdiagr(,%rsi,4), %esi
	movw	$21083, BasicBlockSignatureTracker # imm = 0x525B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_314
# %bb.282:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$21084, %ax             # imm = 0x525C
	jne	.LBB44_1069
# %bb.283:                              # %f_in_check.split2108
	movl	wking_loc, %eax
	movl	(%rdx), %esi
	movw	$21084, BasicBlockSignatureTracker # imm = 0x525C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_298
# %bb.284:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$21094, %ax             # imm = 0x5266
	jne	.LBB44_1069
# %bb.285:                              # %f_in_check.split2112
	movl	wking_loc, %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$21094, BasicBlockSignatureTracker # imm = 0x5266
	movw	$0, RunTimeSignatureAdjuster
.LBB44_286:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$15, %ax
	xorw	%si, %ax
	cmpw	$21097, %ax             # imm = 0x5269
	jne	.LBB44_1042
# %bb.287:                              # %f_in_check.split2116
                                        #   in Loop: Header=BB44_286 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21097, BasicBlockSignatureTracker # imm = 0x5269
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_292
# %bb.288:                              #   in Loop: Header=BB44_286 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$21099, %ax             # imm = 0x526B
	jne	.LBB44_1042
# %bb.289:                              # %f_in_check.split2118
                                        #   in Loop: Header=BB44_286 Depth=1
	movw	$21099, BasicBlockSignatureTracker # imm = 0x526B
	movw	$0, RunTimeSignatureAdjuster
# %bb.290:                              #   in Loop: Header=BB44_286 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$21101, %ax             # imm = 0x526D
	jne	.LBB44_1042
# %bb.291:                              # %f_in_check.split2122
                                        #   in Loop: Header=BB44_286 Depth=1
	movl	(%r8), %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$21101, BasicBlockSignatureTracker # imm = 0x526D
	movw	$11, RunTimeSignatureAdjuster
	jmp	.LBB44_286
.LBB44_292:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$21109, %ax             # imm = 0x5275
	jne	.LBB44_1069
# %bb.293:                              # %f_in_check.split2120
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$21109, BasicBlockSignatureTracker # imm = 0x5275
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_296
# %bb.294:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$21119, %ax             # imm = 0x527F
	jne	.LBB44_1069
# %bb.295:                              # %f_in_check.split2124
	movl	$1, (%r14)
	movw	$21119, BasicBlockSignatureTracker # imm = 0x527F
	movw	$7906, RunTimeSignatureAdjuster # imm = 0x1EE2
	jmp	.LBB44_1017
.LBB44_296:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$228, %ax
	cmpw	$21137, %ax             # imm = 0x5291
	jne	.LBB44_1069
# %bb.297:                              # %f_in_check.split2126
	movw	$21137, BasicBlockSignatureTracker # imm = 0x5291
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_312
.LBB44_298:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$203, %ax
	cmpw	$21143, %ax             # imm = 0x5297
	jne	.LBB44_1069
# %bb.299:                              # %f_in_check.split2114
	movl	wking_loc, %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$21143, BasicBlockSignatureTracker # imm = 0x5297
	movw	$0, RunTimeSignatureAdjuster
.LBB44_300:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$13, %ax
	xorw	%si, %ax
	cmpw	$21146, %ax             # imm = 0x529A
	jne	.LBB44_1043
# %bb.301:                              # %f_in_check.split2130
                                        #   in Loop: Header=BB44_300 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21146, BasicBlockSignatureTracker # imm = 0x529A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_306
# %bb.302:                              #   in Loop: Header=BB44_300 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$21153, %ax             # imm = 0x52A1
	jne	.LBB44_1043
# %bb.303:                              # %f_in_check.split2132
                                        #   in Loop: Header=BB44_300 Depth=1
	movw	$21153, BasicBlockSignatureTracker # imm = 0x52A1
	movw	$0, RunTimeSignatureAdjuster
# %bb.304:                              #   in Loop: Header=BB44_300 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$21171, %ax             # imm = 0x52B3
	jne	.LBB44_1043
# %bb.305:                              # %f_in_check.split2136
                                        #   in Loop: Header=BB44_300 Depth=1
	movl	(%r8), %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$21171, BasicBlockSignatureTracker # imm = 0x52B3
	movw	$36, RunTimeSignatureAdjuster
	jmp	.LBB44_300
.LBB44_306:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$21174, %ax             # imm = 0x52B6
	jne	.LBB44_1069
# %bb.307:                              # %f_in_check.split2134
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$21174, BasicBlockSignatureTracker # imm = 0x52B6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_310
# %bb.308:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$21177, %ax             # imm = 0x52B9
	jne	.LBB44_1069
# %bb.309:                              # %f_in_check.split2138
	movl	$1, (%r14)
	movw	$21177, BasicBlockSignatureTracker # imm = 0x52B9
	movw	$7716, RunTimeSignatureAdjuster # imm = 0x1E24
	jmp	.LBB44_1017
.LBB44_310:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$21187, %ax             # imm = 0x52C3
	jne	.LBB44_1069
# %bb.311:                              # %f_in_check.split2140
	movw	$21187, BasicBlockSignatureTracker # imm = 0x52C3
	movw	$82, RunTimeSignatureAdjuster
.LBB44_312:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$94, %ax
	xorw	%dx, %ax
	cmpw	$21199, %ax             # imm = 0x52CF
	jne	.LBB44_1069
# %bb.313:                              # %f_in_check.split2128
	movw	$21199, BasicBlockSignatureTracker # imm = 0x52CF
	movw	$148, RunTimeSignatureAdjuster
.LBB44_314:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$128, %ax
	xorw	%dx, %ax
	cmpw	$21211, %ax             # imm = 0x52DB
	jne	.LBB44_1069
# %bb.315:                              # %f_in_check.split2110
	movw	$21211, BasicBlockSignatureTracker # imm = 0x52DB
	movw	$138, RunTimeSignatureAdjuster
.LBB44_316:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$176, %ax
	xorw	%dx, %ax
	cmpw	$21217, %ax             # imm = 0x52E1
	jne	.LBB44_1069
# %bb.317:                              # %f_in_check.split2106
	movw	$21217, BasicBlockSignatureTracker # imm = 0x52E1
	movw	$923, RunTimeSignatureAdjuster # imm = 0x39B
.LBB44_318:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$927, %ax               # imm = 0x39F
	xorw	%dx, %ax
	cmpw	$21221, %ax             # imm = 0x52E5
	jne	.LBB44_1069
# %bb.319:                              # %f_in_check.split2070
	movw	$21221, BasicBlockSignatureTracker # imm = 0x52E5
	movw	$514, RunTimeSignatureAdjuster # imm = 0x202
.LBB44_320:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$520, %ax               # imm = 0x208
	xorw	%dx, %ax
	cmpw	$21231, %ax             # imm = 0x52EF
	jne	.LBB44_1069
# %bb.321:                              # %f_in_check.split2034
	movw	$21231, BasicBlockSignatureTracker # imm = 0x52EF
	movw	$7764, RunTimeSignatureAdjuster # imm = 0x1E54
	jmp	.LBB44_332
.LBB44_322:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$7744, %dx              # imm = 0x1E40
	cmpw	$21243, %dx             # imm = 0x52FB
	jne	.LBB44_1069
# %bb.323:                              # %f_in_check.split1840
	movq	(%rbx), %rdx
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	addq	%rax, %rdx
	movl	16(%rdx), %eax
	movw	$21243, BasicBlockSignatureTracker # imm = 0x52FB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB44_330
# %bb.324:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$505, %ax               # imm = 0x1F9
	cmpw	$21250, %ax             # imm = 0x5302
	jne	.LBB44_1069
# %bb.325:                              # %f_in_check.split2142
	movl	wking_loc, %edi
	movw	$21250, BasicBlockSignatureTracker # imm = 0x5302
	movw	$20183, RunTimeSignatureAdjuster # imm = 0x4ED7
	xorl	%esi, %esi
	callq	is_attacked
	movw	$21250, BasicBlockSignatureTracker # imm = 0x5302
	movw	$20183, RunTimeSignatureAdjuster # imm = 0x4ED7
	movw	$21250, BasicBlockSignatureTracker # imm = 0x5302
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB44_328
# %bb.326:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$21260, %ax             # imm = 0x530C
	jne	.LBB44_1069
# %bb.327:                              # %f_in_check.split2146
	movl	$1, (%r14)
	movw	$21260, BasicBlockSignatureTracker # imm = 0x530C
	movw	$8081, RunTimeSignatureAdjuster # imm = 0x1F91
	jmp	.LBB44_1017
.LBB44_328:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$21280, %ax             # imm = 0x5320
	jne	.LBB44_1069
# %bb.329:                              # %f_in_check.split2148
	movl	$0, (%r14)
	movw	$21280, BasicBlockSignatureTracker # imm = 0x5320
	movw	$8125, RunTimeSignatureAdjuster # imm = 0x1FBD
	jmp	.LBB44_1017
.LBB44_330:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$479, %ax               # imm = 0x1DF
	cmpw	$21284, %ax             # imm = 0x5324
	jne	.LBB44_1069
# %bb.331:                              # %f_in_check.split2144
	movw	$21284, BasicBlockSignatureTracker # imm = 0x5324
	movw	$8095, RunTimeSignatureAdjuster # imm = 0x1F9F
.LBB44_332:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$8086, %ax              # imm = 0x1F96
	xorw	%dx, %ax
	cmpw	$21293, %ax             # imm = 0x532D
	jne	.LBB44_1069
# %bb.333:                              # %f_in_check.split1828
	movl	(%rcx), %eax
	movw	$21293, BasicBlockSignatureTracker # imm = 0x532D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB44_336
# %bb.334:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$21311, %ax             # imm = 0x533F
	jne	.LBB44_1069
# %bb.335:                              # %f_in_check.split2150
	movl	$0, (%r14)
	movw	$21311, BasicBlockSignatureTracker # imm = 0x533F
	movw	$8098, RunTimeSignatureAdjuster # imm = 0x1FA2
	jmp	.LBB44_1017
.LBB44_336:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$101, %ax
	cmpw	$21320, %ax             # imm = 0x5348
	jne	.LBB44_1069
# %bb.337:                              # %f_in_check.split2152
	movslq	(%rcx), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	wking_loc, %rdx
	movl	Xrank(,%rdx,4), %edx
	movw	$21320, BasicBlockSignatureTracker # imm = 0x5348
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_378
# %bb.338:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$21327, %ax             # imm = 0x534F
	jne	.LBB44_1069
# %bb.339:                              # %f_in_check.split2154
	movl	wking_loc, %eax
	movl	(%rcx), %ecx
	movw	$21327, BasicBlockSignatureTracker # imm = 0x534F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB44_358
# %bb.340:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$21340, %ax             # imm = 0x535C
	jne	.LBB44_1069
# %bb.341:                              # %f_in_check.split2158
	movl	wking_loc, %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$21340, BasicBlockSignatureTracker # imm = 0x535C
	movw	$0, RunTimeSignatureAdjuster
.LBB44_342:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$21353, %ax             # imm = 0x5369
	jne	.LBB44_1019
# %bb.343:                              # %f_in_check.split2162
                                        #   in Loop: Header=BB44_342 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21353, BasicBlockSignatureTracker # imm = 0x5369
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_348
# %bb.344:                              #   in Loop: Header=BB44_342 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$21354, %ax             # imm = 0x536A
	jne	.LBB44_1019
# %bb.345:                              # %f_in_check.split2164
                                        #   in Loop: Header=BB44_342 Depth=1
	movw	$21354, BasicBlockSignatureTracker # imm = 0x536A
	movw	$0, RunTimeSignatureAdjuster
# %bb.346:                              #   in Loop: Header=BB44_342 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$246, %ax
	cmpw	$21404, %ax             # imm = 0x539C
	jne	.LBB44_1019
# %bb.347:                              # %f_in_check.split2168
                                        #   in Loop: Header=BB44_342 Depth=1
	movl	(%r8), %eax
	addl	$-1, %eax
	movl	%eax, (%r8)
	movw	$21404, BasicBlockSignatureTracker # imm = 0x539C
	movw	$192, RunTimeSignatureAdjuster
	jmp	.LBB44_342
.LBB44_348:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$194, %ax
	cmpw	$21419, %ax             # imm = 0x53AB
	jne	.LBB44_1069
# %bb.349:                              # %f_in_check.split2166
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21419, BasicBlockSignatureTracker # imm = 0x53AB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB44_352
# %bb.350:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$21433, %ax             # imm = 0x53B9
	jne	.LBB44_1069
# %bb.351:                              # %f_in_check.split2172
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21433, BasicBlockSignatureTracker # imm = 0x53B9
	movw	$18, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB44_354
.LBB44_352:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$106, %ax
	xorw	%cx, %ax
	cmpw	$21441, %ax             # imm = 0x53C1
	jne	.LBB44_1069
# %bb.353:                              # %f_in_check.split2170
	movl	$1, (%r14)
	movw	$21441, BasicBlockSignatureTracker # imm = 0x53C1
	movw	$8028, RunTimeSignatureAdjuster # imm = 0x1F5C
	jmp	.LBB44_1017
.LBB44_354:                             # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-11884, %ax            # imm = 0xD194
	cmpw	$-32211, %ax            # imm = 0x822D
	jne	.LBB44_1069
# %bb.355:                              # %f_in_check.split2174
	movw	$-32211, BasicBlockSignatureTracker # imm = 0x822D
	movw	$-11884, RunTimeSignatureAdjuster # imm = 0xD194
# %bb.356:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$115, %ax
	xorw	%cx, %ax
	cmpw	$21450, %ax             # imm = 0x53CA
	jne	.LBB44_1069
# %bb.357:                              # %f_in_check.split2802
	movw	$21450, BasicBlockSignatureTracker # imm = 0x53CA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_376
.LBB44_358:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$145, %ax
	cmpw	$21470, %ax             # imm = 0x53DE
	jne	.LBB44_1069
# %bb.359:                              # %f_in_check.split2160
	movl	wking_loc, %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$21470, BasicBlockSignatureTracker # imm = 0x53DE
	movw	$0, RunTimeSignatureAdjuster
.LBB44_360:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$21477, %ax             # imm = 0x53E5
	jne	.LBB44_1020
# %bb.361:                              # %f_in_check.split2178
                                        #   in Loop: Header=BB44_360 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21477, BasicBlockSignatureTracker # imm = 0x53E5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_366
# %bb.362:                              #   in Loop: Header=BB44_360 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$21493, %ax             # imm = 0x53F5
	jne	.LBB44_1020
# %bb.363:                              # %f_in_check.split2180
                                        #   in Loop: Header=BB44_360 Depth=1
	movw	$21493, BasicBlockSignatureTracker # imm = 0x53F5
	movw	$0, RunTimeSignatureAdjuster
# %bb.364:                              #   in Loop: Header=BB44_360 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$21497, %ax             # imm = 0x53F9
	jne	.LBB44_1020
# %bb.365:                              # %f_in_check.split2184
                                        #   in Loop: Header=BB44_360 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$21497, BasicBlockSignatureTracker # imm = 0x53F9
	movw	$39, RunTimeSignatureAdjuster
	jmp	.LBB44_360
.LBB44_366:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$21501, %ax             # imm = 0x53FD
	jne	.LBB44_1069
# %bb.367:                              # %f_in_check.split2182
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21501, BasicBlockSignatureTracker # imm = 0x53FD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB44_370
# %bb.368:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1997, %ax              # imm = 0x7CD
	cmpw	$21552, %ax             # imm = 0x5430
	jne	.LBB44_1069
# %bb.369:                              # %f_in_check.split2188
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21552, BasicBlockSignatureTracker # imm = 0x5430
	movw	$1997, RunTimeSignatureAdjuster # imm = 0x7CD
	cmpl	$10, %eax
	jne	.LBB44_372
.LBB44_370:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1981, %ax              # imm = 0x7BD
	xorw	%cx, %ax
	cmpw	$21568, %ax             # imm = 0x5440
	jne	.LBB44_1069
# %bb.371:                              # %f_in_check.split2186
	movl	$1, (%r14)
	movw	$21568, BasicBlockSignatureTracker # imm = 0x5440
	movw	$6365, RunTimeSignatureAdjuster # imm = 0x18DD
	jmp	.LBB44_1017
.LBB44_372:                             # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-17803, %ax            # imm = 0xBA75
	cmpw	$-4539, %ax             # imm = 0xEE45
	jne	.LBB44_1069
# %bb.373:                              # %f_in_check.split2190
	movw	$-4539, BasicBlockSignatureTracker # imm = 0xEE45
	movw	$-17803, RunTimeSignatureAdjuster # imm = 0xBA75
# %bb.374:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$113, %ax
	xorw	%cx, %ax
	cmpw	$21569, %ax             # imm = 0x5441
	jne	.LBB44_1069
# %bb.375:                              # %f_in_check.split2804
	movw	$21569, BasicBlockSignatureTracker # imm = 0x5441
	movw	$1931, RunTimeSignatureAdjuster # imm = 0x78B
.LBB44_376:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1924, %ax              # imm = 0x784
	xorw	%cx, %ax
	cmpw	$21582, %ax             # imm = 0x544E
	jne	.LBB44_1069
# %bb.377:                              # %f_in_check.split2176
	movw	$21582, BasicBlockSignatureTracker # imm = 0x544E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_510
.LBB44_378:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1827, %ax              # imm = 0x723
	cmpw	$21611, %ax             # imm = 0x546B
	jne	.LBB44_1069
# %bb.379:                              # %f_in_check.split2156
	movslq	(%rcx), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	wking_loc, %rdx
	movl	Xfile(,%rdx,4), %edx
	movw	$21611, BasicBlockSignatureTracker # imm = 0x546B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_420
# %bb.380:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$21623, %ax             # imm = 0x5477
	jne	.LBB44_1069
# %bb.381:                              # %f_in_check.split2194
	movl	wking_loc, %eax
	movl	(%rcx), %ecx
	movw	$21623, BasicBlockSignatureTracker # imm = 0x5477
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB44_400
# %bb.382:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$21624, %ax             # imm = 0x5478
	jne	.LBB44_1069
# %bb.383:                              # %f_in_check.split2198
	movl	wking_loc, %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$21624, BasicBlockSignatureTracker # imm = 0x5478
	movw	$0, RunTimeSignatureAdjuster
.LBB44_384:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$21628, %ax             # imm = 0x547C
	jne	.LBB44_1021
# %bb.385:                              # %f_in_check.split2202
                                        #   in Loop: Header=BB44_384 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21628, BasicBlockSignatureTracker # imm = 0x547C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_390
# %bb.386:                              #   in Loop: Header=BB44_384 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$236, %ax
	cmpw	$21648, %ax             # imm = 0x5490
	jne	.LBB44_1021
# %bb.387:                              # %f_in_check.split2204
                                        #   in Loop: Header=BB44_384 Depth=1
	movw	$21648, BasicBlockSignatureTracker # imm = 0x5490
	movw	$0, RunTimeSignatureAdjuster
# %bb.388:                              #   in Loop: Header=BB44_384 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$21651, %ax             # imm = 0x5493
	jne	.LBB44_1021
# %bb.389:                              # %f_in_check.split2208
                                        #   in Loop: Header=BB44_384 Depth=1
	movl	(%r8), %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$21651, BasicBlockSignatureTracker # imm = 0x5493
	movw	$235, RunTimeSignatureAdjuster
	jmp	.LBB44_384
.LBB44_390:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$230, %ax
	cmpw	$21658, %ax             # imm = 0x549A
	jne	.LBB44_1069
# %bb.391:                              # %f_in_check.split2206
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21658, BasicBlockSignatureTracker # imm = 0x549A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB44_394
# %bb.392:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$21662, %ax             # imm = 0x549E
	jne	.LBB44_1069
# %bb.393:                              # %f_in_check.split2212
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21662, BasicBlockSignatureTracker # imm = 0x549E
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB44_396
.LBB44_394:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$21663, %ax             # imm = 0x549F
	jne	.LBB44_1069
# %bb.395:                              # %f_in_check.split2210
	movl	$1, (%r14)
	movw	$21663, BasicBlockSignatureTracker # imm = 0x549F
	movw	$6146, RunTimeSignatureAdjuster # imm = 0x1802
	jmp	.LBB44_1017
.LBB44_396:                             # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-23281, %ax            # imm = 0xA50F
	cmpw	$-3695, %ax             # imm = 0xF191
	jne	.LBB44_1069
# %bb.397:                              # %f_in_check.split2214
	movw	$-3695, BasicBlockSignatureTracker # imm = 0xF191
	movw	$-23281, RunTimeSignatureAdjuster # imm = 0xA50F
# %bb.398:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$21667, %ax             # imm = 0x54A3
	jne	.LBB44_1069
# %bb.399:                              # %f_in_check.split2806
	movw	$21667, BasicBlockSignatureTracker # imm = 0x54A3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_418
.LBB44_400:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$204, %ax
	cmpw	$21691, %ax             # imm = 0x54BB
	jne	.LBB44_1069
# %bb.401:                              # %f_in_check.split2200
	movl	wking_loc, %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$21691, BasicBlockSignatureTracker # imm = 0x54BB
	movw	$0, RunTimeSignatureAdjuster
.LBB44_402:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$101, %ax
	xorw	%cx, %ax
	cmpw	$21726, %ax             # imm = 0x54DE
	jne	.LBB44_1022
# %bb.403:                              # %f_in_check.split2218
                                        #   in Loop: Header=BB44_402 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21726, BasicBlockSignatureTracker # imm = 0x54DE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_408
# %bb.404:                              #   in Loop: Header=BB44_402 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$21737, %ax             # imm = 0x54E9
	jne	.LBB44_1022
# %bb.405:                              # %f_in_check.split2220
                                        #   in Loop: Header=BB44_402 Depth=1
	movw	$21737, BasicBlockSignatureTracker # imm = 0x54E9
	movw	$0, RunTimeSignatureAdjuster
# %bb.406:                              #   in Loop: Header=BB44_402 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$21758, %ax             # imm = 0x54FE
	jne	.LBB44_1022
# %bb.407:                              # %f_in_check.split2224
                                        #   in Loop: Header=BB44_402 Depth=1
	movl	(%r8), %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$21758, BasicBlockSignatureTracker # imm = 0x54FE
	movw	$69, RunTimeSignatureAdjuster
	jmp	.LBB44_402
.LBB44_408:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$448, %ax               # imm = 0x1C0
	cmpw	$21790, %ax             # imm = 0x551E
	jne	.LBB44_1069
# %bb.409:                              # %f_in_check.split2222
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21790, BasicBlockSignatureTracker # imm = 0x551E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB44_412
# %bb.410:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$21793, %ax             # imm = 0x5521
	jne	.LBB44_1069
# %bb.411:                              # %f_in_check.split2228
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21793, BasicBlockSignatureTracker # imm = 0x5521
	movw	$63, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB44_414
.LBB44_412:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$21799, %ax             # imm = 0x5527
	jne	.LBB44_1069
# %bb.413:                              # %f_in_check.split2226
	movl	$1, (%r14)
	movw	$21799, BasicBlockSignatureTracker # imm = 0x5527
	movw	$6586, RunTimeSignatureAdjuster # imm = 0x19BA
	jmp	.LBB44_1017
.LBB44_414:                             # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20212, %ax            # imm = 0xB10C
	cmpw	$-7123, %ax             # imm = 0xE42D
	jne	.LBB44_1069
# %bb.415:                              # %f_in_check.split2230
	movw	$-7123, BasicBlockSignatureTracker # imm = 0xE42D
	movw	$-20212, RunTimeSignatureAdjuster # imm = 0xB10C
# %bb.416:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$21808, %ax             # imm = 0x5530
	jne	.LBB44_1069
# %bb.417:                              # %f_in_check.split2808
	movw	$21808, BasicBlockSignatureTracker # imm = 0x5530
	movw	$403, RunTimeSignatureAdjuster # imm = 0x193
.LBB44_418:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$483, %ax               # imm = 0x1E3
	xorw	%cx, %ax
	cmpw	$21824, %ax             # imm = 0x5540
	jne	.LBB44_1069
# %bb.419:                              # %f_in_check.split2216
	movw	$21824, BasicBlockSignatureTracker # imm = 0x5540
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_508
.LBB44_420:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$271, %ax               # imm = 0x10F
	cmpw	$21860, %ax             # imm = 0x5564
	jne	.LBB44_1069
# %bb.421:                              # %f_in_check.split2196
	movslq	(%rcx), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	wking_loc, %rdx
	movl	Xdiagl(,%rdx,4), %edx
	movw	$21860, BasicBlockSignatureTracker # imm = 0x5564
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_462
# %bb.422:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$21861, %ax             # imm = 0x5565
	jne	.LBB44_1069
# %bb.423:                              # %f_in_check.split2234
	movl	wking_loc, %eax
	movl	(%rcx), %ecx
	movw	$21861, BasicBlockSignatureTracker # imm = 0x5565
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB44_442
# %bb.424:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$21864, %ax             # imm = 0x5568
	jne	.LBB44_1069
# %bb.425:                              # %f_in_check.split2238
	movl	wking_loc, %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$21864, BasicBlockSignatureTracker # imm = 0x5568
	movw	$0, RunTimeSignatureAdjuster
.LBB44_426:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$250, %ax
	xorw	%cx, %ax
	cmpw	$21906, %ax             # imm = 0x5592
	jne	.LBB44_1023
# %bb.427:                              # %f_in_check.split2242
                                        #   in Loop: Header=BB44_426 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21906, BasicBlockSignatureTracker # imm = 0x5592
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_432
# %bb.428:                              #   in Loop: Header=BB44_426 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$21911, %ax             # imm = 0x5597
	jne	.LBB44_1023
# %bb.429:                              # %f_in_check.split2244
                                        #   in Loop: Header=BB44_426 Depth=1
	movw	$21911, BasicBlockSignatureTracker # imm = 0x5597
	movw	$0, RunTimeSignatureAdjuster
# %bb.430:                              #   in Loop: Header=BB44_426 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$52, %ax
	cmpw	$21923, %ax             # imm = 0x55A3
	jne	.LBB44_1023
# %bb.431:                              # %f_in_check.split2248
                                        #   in Loop: Header=BB44_426 Depth=1
	movl	(%r8), %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$21923, BasicBlockSignatureTracker # imm = 0x55A3
	movw	$203, RunTimeSignatureAdjuster
	jmp	.LBB44_426
.LBB44_432:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$21933, %ax             # imm = 0x55AD
	jne	.LBB44_1069
# %bb.433:                              # %f_in_check.split2246
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21933, BasicBlockSignatureTracker # imm = 0x55AD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB44_436
# %bb.434:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$21935, %ax             # imm = 0x55AF
	jne	.LBB44_1069
# %bb.435:                              # %f_in_check.split2252
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21935, BasicBlockSignatureTracker # imm = 0x55AF
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB44_438
.LBB44_436:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$21941, %ax             # imm = 0x55B5
	jne	.LBB44_1069
# %bb.437:                              # %f_in_check.split2250
	movl	$1, (%r14)
	movw	$21941, BasicBlockSignatureTracker # imm = 0x55B5
	movw	$6440, RunTimeSignatureAdjuster # imm = 0x1928
	jmp	.LBB44_1017
.LBB44_438:                             # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20408, %ax             # imm = 0x4FB8
	cmpw	$6679, %ax              # imm = 0x1A17
	jne	.LBB44_1069
# %bb.439:                              # %f_in_check.split2254
	movw	$6679, BasicBlockSignatureTracker # imm = 0x1A17
	movw	$20408, RunTimeSignatureAdjuster # imm = 0x4FB8
# %bb.440:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$21956, %ax             # imm = 0x55C4
	jne	.LBB44_1069
# %bb.441:                              # %f_in_check.split2810
	movw	$21956, BasicBlockSignatureTracker # imm = 0x55C4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_460
.LBB44_442:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$175, %ax
	cmpw	$21962, %ax             # imm = 0x55CA
	jne	.LBB44_1069
# %bb.443:                              # %f_in_check.split2240
	movl	wking_loc, %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$21962, BasicBlockSignatureTracker # imm = 0x55CA
	movw	$0, RunTimeSignatureAdjuster
.LBB44_444:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$21978, %ax             # imm = 0x55DA
	jne	.LBB44_1024
# %bb.445:                              # %f_in_check.split2258
                                        #   in Loop: Header=BB44_444 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$21978, BasicBlockSignatureTracker # imm = 0x55DA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_450
# %bb.446:                              #   in Loop: Header=BB44_444 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$22004, %ax             # imm = 0x55F4
	jne	.LBB44_1024
# %bb.447:                              # %f_in_check.split2260
                                        #   in Loop: Header=BB44_444 Depth=1
	movw	$22004, BasicBlockSignatureTracker # imm = 0x55F4
	movw	$0, RunTimeSignatureAdjuster
# %bb.448:                              #   in Loop: Header=BB44_444 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$22009, %ax             # imm = 0x55F9
	jne	.LBB44_1024
# %bb.449:                              # %f_in_check.split2264
                                        #   in Loop: Header=BB44_444 Depth=1
	movl	(%r8), %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$22009, BasicBlockSignatureTracker # imm = 0x55F9
	movw	$51, RunTimeSignatureAdjuster
	jmp	.LBB44_444
.LBB44_450:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$37, %ax
	cmpw	$22015, %ax             # imm = 0x55FF
	jne	.LBB44_1069
# %bb.451:                              # %f_in_check.split2262
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22015, BasicBlockSignatureTracker # imm = 0x55FF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB44_454
# %bb.452:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1017, %ax              # imm = 0x3F9
	cmpw	$22022, %ax             # imm = 0x5606
	jne	.LBB44_1069
# %bb.453:                              # %f_in_check.split2268
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22022, BasicBlockSignatureTracker # imm = 0x5606
	movw	$1017, RunTimeSignatureAdjuster # imm = 0x3F9
	cmpl	$10, %eax
	jne	.LBB44_456
.LBB44_454:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1014, %ax              # imm = 0x3F6
	xorw	%cx, %ax
	cmpw	$22025, %ax             # imm = 0x5609
	jne	.LBB44_1069
# %bb.455:                              # %f_in_check.split2266
	movl	$1, (%r14)
	movw	$22025, BasicBlockSignatureTracker # imm = 0x5609
	movw	$6804, RunTimeSignatureAdjuster # imm = 0x1A94
	jmp	.LBB44_1017
.LBB44_456:                             # %Buffer__6
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9030, %ax             # imm = 0xDCBA
	cmpw	$-30020, %ax            # imm = 0x8ABC
	jne	.LBB44_1069
# %bb.457:                              # %f_in_check.split2270
	movw	$-30020, BasicBlockSignatureTracker # imm = 0x8ABC
	movw	$-9030, RunTimeSignatureAdjuster # imm = 0xDCBA
# %bb.458:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$22034, %ax             # imm = 0x5612
	jne	.LBB44_1069
# %bb.459:                              # %f_in_check.split2812
	movw	$22034, BasicBlockSignatureTracker # imm = 0x5612
	movw	$982, RunTimeSignatureAdjuster # imm = 0x3D6
.LBB44_460:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$987, %ax               # imm = 0x3DB
	xorw	%cx, %ax
	cmpw	$22047, %ax             # imm = 0x561F
	jne	.LBB44_1069
# %bb.461:                              # %f_in_check.split2256
	movw	$22047, BasicBlockSignatureTracker # imm = 0x561F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_506
.LBB44_462:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$833, %ax               # imm = 0x341
	cmpw	$22053, %ax             # imm = 0x5625
	jne	.LBB44_1069
# %bb.463:                              # %f_in_check.split2236
	movslq	(%rcx), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	wking_loc, %rdx
	movl	Xdiagr(,%rdx,4), %edx
	movw	$22053, BasicBlockSignatureTracker # imm = 0x5625
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_504
# %bb.464:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$22065, %ax             # imm = 0x5631
	jne	.LBB44_1069
# %bb.465:                              # %f_in_check.split2274
	movl	wking_loc, %eax
	movl	(%rcx), %ecx
	movw	$22065, BasicBlockSignatureTracker # imm = 0x5631
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB44_484
# %bb.466:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$112, %ax
	cmpw	$22081, %ax             # imm = 0x5641
	jne	.LBB44_1069
# %bb.467:                              # %f_in_check.split2278
	movl	wking_loc, %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$22081, BasicBlockSignatureTracker # imm = 0x5641
	movw	$0, RunTimeSignatureAdjuster
.LBB44_468:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$22087, %ax             # imm = 0x5647
	jne	.LBB44_1025
# %bb.469:                              # %f_in_check.split2282
                                        #   in Loop: Header=BB44_468 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22087, BasicBlockSignatureTracker # imm = 0x5647
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_474
# %bb.470:                              #   in Loop: Header=BB44_468 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$22090, %ax             # imm = 0x564A
	jne	.LBB44_1025
# %bb.471:                              # %f_in_check.split2284
                                        #   in Loop: Header=BB44_468 Depth=1
	movw	$22090, BasicBlockSignatureTracker # imm = 0x564A
	movw	$0, RunTimeSignatureAdjuster
# %bb.472:                              #   in Loop: Header=BB44_468 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$22095, %ax             # imm = 0x564F
	jne	.LBB44_1025
# %bb.473:                              # %f_in_check.split2288
                                        #   in Loop: Header=BB44_468 Depth=1
	movl	(%r8), %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$22095, BasicBlockSignatureTracker # imm = 0x564F
	movw	$14, RunTimeSignatureAdjuster
	jmp	.LBB44_468
.LBB44_474:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$22107, %ax             # imm = 0x565B
	jne	.LBB44_1069
# %bb.475:                              # %f_in_check.split2286
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22107, BasicBlockSignatureTracker # imm = 0x565B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB44_478
# %bb.476:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$22117, %ax             # imm = 0x5665
	jne	.LBB44_1069
# %bb.477:                              # %f_in_check.split2292
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22117, BasicBlockSignatureTracker # imm = 0x5665
	movw	$62, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB44_480
.LBB44_478:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$22130, %ax             # imm = 0x5672
	jne	.LBB44_1069
# %bb.479:                              # %f_in_check.split2290
	movl	$1, (%r14)
	movw	$22130, BasicBlockSignatureTracker # imm = 0x5672
	movw	$6895, RunTimeSignatureAdjuster # imm = 0x1AEF
	jmp	.LBB44_1017
.LBB44_480:                             # %Buffer__7
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17584, %ax             # imm = 0x44B0
	cmpw	$4821, %ax              # imm = 0x12D5
	jne	.LBB44_1069
# %bb.481:                              # %f_in_check.split2294
	movw	$4821, BasicBlockSignatureTracker # imm = 0x12D5
	movw	$17584, RunTimeSignatureAdjuster # imm = 0x44B0
# %bb.482:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$22141, %ax             # imm = 0x567D
	jne	.LBB44_1069
# %bb.483:                              # %f_in_check.split2814
	movw	$22141, BasicBlockSignatureTracker # imm = 0x567D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_502
.LBB44_484:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$181, %ax
	cmpw	$22148, %ax             # imm = 0x5684
	jne	.LBB44_1069
# %bb.485:                              # %f_in_check.split2280
	movl	wking_loc, %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$22148, BasicBlockSignatureTracker # imm = 0x5684
	movw	$0, RunTimeSignatureAdjuster
.LBB44_486:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$22173, %ax             # imm = 0x569D
	jne	.LBB44_1026
# %bb.487:                              # %f_in_check.split2298
                                        #   in Loop: Header=BB44_486 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22173, BasicBlockSignatureTracker # imm = 0x569D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_492
# %bb.488:                              #   in Loop: Header=BB44_486 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$22177, %ax             # imm = 0x56A1
	jne	.LBB44_1026
# %bb.489:                              # %f_in_check.split2300
                                        #   in Loop: Header=BB44_486 Depth=1
	movw	$22177, BasicBlockSignatureTracker # imm = 0x56A1
	movw	$0, RunTimeSignatureAdjuster
# %bb.490:                              #   in Loop: Header=BB44_486 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$22178, %ax             # imm = 0x56A2
	jne	.LBB44_1026
# %bb.491:                              # %f_in_check.split2304
                                        #   in Loop: Header=BB44_486 Depth=1
	movl	(%r8), %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$22178, BasicBlockSignatureTracker # imm = 0x56A2
	movw	$38, RunTimeSignatureAdjuster
	jmp	.LBB44_486
.LBB44_492:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$22182, %ax             # imm = 0x56A6
	jne	.LBB44_1069
# %bb.493:                              # %f_in_check.split2302
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22182, BasicBlockSignatureTracker # imm = 0x56A6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB44_496
# %bb.494:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$22187, %ax             # imm = 0x56AB
	jne	.LBB44_1069
# %bb.495:                              # %f_in_check.split2308
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22187, BasicBlockSignatureTracker # imm = 0x56AB
	movw	$13, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB44_498
.LBB44_496:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$22221, %ax             # imm = 0x56CD
	jne	.LBB44_1069
# %bb.497:                              # %f_in_check.split2306
	movl	$1, (%r14)
	movw	$22221, BasicBlockSignatureTracker # imm = 0x56CD
	movw	$6736, RunTimeSignatureAdjuster # imm = 0x1A50
	jmp	.LBB44_1017
.LBB44_498:                             # %Buffer__8
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22479, %ax            # imm = 0xA831
	cmpw	$-358, %ax              # imm = 0xFE9A
	jne	.LBB44_1069
# %bb.499:                              # %f_in_check.split2310
	movw	$-358, BasicBlockSignatureTracker # imm = 0xFE9A
	movw	$-22479, RunTimeSignatureAdjuster # imm = 0xA831
# %bb.500:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$22231, %ax             # imm = 0x56D7
	jne	.LBB44_1069
# %bb.501:                              # %f_in_check.split2816
	movw	$22231, BasicBlockSignatureTracker # imm = 0x56D7
	movw	$170, RunTimeSignatureAdjuster
.LBB44_502:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$155, %ax
	xorw	%cx, %ax
	cmpw	$22246, %ax             # imm = 0x56E6
	jne	.LBB44_1069
# %bb.503:                              # %f_in_check.split2296
	movw	$22246, BasicBlockSignatureTracker # imm = 0x56E6
	movw	$195, RunTimeSignatureAdjuster
.LBB44_504:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$212, %ax
	xorw	%cx, %ax
	cmpw	$22257, %ax             # imm = 0x56F1
	jne	.LBB44_1069
# %bb.505:                              # %f_in_check.split2276
	movw	$22257, BasicBlockSignatureTracker # imm = 0x56F1
	movw	$238, RunTimeSignatureAdjuster
.LBB44_506:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$281, %ax               # imm = 0x119
	xorw	%cx, %ax
	cmpw	$22278, %ax             # imm = 0x5706
	jne	.LBB44_1069
# %bb.507:                              # %f_in_check.split2272
	movw	$22278, BasicBlockSignatureTracker # imm = 0x5706
	movw	$582, RunTimeSignatureAdjuster # imm = 0x246
.LBB44_508:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$590, %ax               # imm = 0x24E
	xorw	%cx, %ax
	cmpw	$22286, %ax             # imm = 0x570E
	jne	.LBB44_1069
# %bb.509:                              # %f_in_check.split2232
	movw	$22286, BasicBlockSignatureTracker # imm = 0x570E
	movw	$832, RunTimeSignatureAdjuster # imm = 0x340
.LBB44_510:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$859, %ax               # imm = 0x35B
	xorw	%cx, %ax
	cmpw	$22293, %ax             # imm = 0x5715
	jne	.LBB44_1069
# %bb.511:                              # %f_in_check.split2192
	movl	$0, (%r14)
	movw	$22293, BasicBlockSignatureTracker # imm = 0x5715
	movw	$7048, RunTimeSignatureAdjuster # imm = 0x1B88
	jmp	.LBB44_1017
.LBB44_512:
	movw	BasicBlockSignatureTracker, %si
	xorw	$7071, %si              # imm = 0x1B9F
	cmpw	$22327, %si             # imm = 0x5737
	jne	.LBB44_1069
# %bb.513:                              # %f_in_check.split1826
	movslq	(%rdx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$22327, BasicBlockSignatureTracker(%rip) # imm = 0x5737
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-1, %esi
	movl	%esi, %edi
	subl	$10, %edi
	ja	.LBB44_837
# %bb.514:                              # %f_in_check.split1826
	movq	.LJTI44_0(,%rsi,8), %rsi
	jmpq	*%rsi
.LBB44_515:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$22328, %ax             # imm = 0x5738
	jne	.LBB44_1069
# %bb.516:                              # %f_in_check.split2314
	movl	(%rdx), %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$22328, BasicBlockSignatureTracker # imm = 0x5738
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	je	.LBB44_519
# %bb.517:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$22330, %ax             # imm = 0x573A
	jne	.LBB44_1069
# %bb.518:                              # %f_in_check.split2328
	movl	(%rdx), %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$22330, BasicBlockSignatureTracker # imm = 0x573A
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jne	.LBB44_521
.LBB44_519:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$115, %ax
	xorw	%cx, %ax
	cmpw	$22347, %ax             # imm = 0x574B
	jne	.LBB44_1069
# %bb.520:                              # %f_in_check.split2326
	movl	$1, (%r14)
	movw	$22347, BasicBlockSignatureTracker # imm = 0x574B
	movw	$7126, RunTimeSignatureAdjuster # imm = 0x1BD6
	jmp	.LBB44_1017
.LBB44_521:                             # %Buffer__9
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-4291, %ax             # imm = 0xEF3D
	cmpw	$-18425, %ax            # imm = 0xB807
	jne	.LBB44_1069
# %bb.522:                              # %f_in_check.split2330
	movw	$-18425, BasicBlockSignatureTracker # imm = 0xB807
	movw	$-4291, RunTimeSignatureAdjuster # imm = 0xEF3D
# %bb.523:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$118, %ax
	xorw	%dx, %ax
	cmpw	$22348, %ax             # imm = 0x574C
	jne	.LBB44_1069
# %bb.524:                              # %f_in_check.split2818
	movw	$22348, BasicBlockSignatureTracker # imm = 0x574C
	movw	$123, RunTimeSignatureAdjuster
	jmp	.LBB44_837
.LBB44_525:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$82, %ax
	cmpw	$22373, %ax             # imm = 0x5765
	jne	.LBB44_1069
# %bb.526:                              # %f_in_check.split2316
	movslq	(%rdx), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rsi
	movl	Xdiagl(,%rsi,4), %esi
	movw	$22373, BasicBlockSignatureTracker # imm = 0x5765
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_559
# %bb.527:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$232, %ax
	cmpw	$22413, %ax             # imm = 0x578D
	jne	.LBB44_1069
# %bb.528:                              # %f_in_check.split2332
	movl	bking_loc, %eax
	movl	(%rdx), %esi
	movw	$22413, BasicBlockSignatureTracker # imm = 0x578D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_543
# %bb.529:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$22417, %ax             # imm = 0x5791
	jne	.LBB44_1069
# %bb.530:                              # %f_in_check.split2336
	movl	bking_loc, %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$22417, BasicBlockSignatureTracker # imm = 0x5791
	movw	$0, RunTimeSignatureAdjuster
.LBB44_531:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$2, %ax
	xorw	%si, %ax
	cmpw	$22419, %ax             # imm = 0x5793
	jne	.LBB44_1052
# %bb.532:                              # %f_in_check.split2340
                                        #   in Loop: Header=BB44_531 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22419, BasicBlockSignatureTracker # imm = 0x5793
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_537
# %bb.533:                              #   in Loop: Header=BB44_531 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$22427, %ax             # imm = 0x579B
	jne	.LBB44_1052
# %bb.534:                              # %f_in_check.split2342
                                        #   in Loop: Header=BB44_531 Depth=1
	movw	$22427, BasicBlockSignatureTracker # imm = 0x579B
	movw	$0, RunTimeSignatureAdjuster
# %bb.535:                              #   in Loop: Header=BB44_531 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$22428, %ax             # imm = 0x579C
	jne	.LBB44_1052
# %bb.536:                              # %f_in_check.split2346
                                        #   in Loop: Header=BB44_531 Depth=1
	movl	(%r8), %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$22428, BasicBlockSignatureTracker # imm = 0x579C
	movw	$13, RunTimeSignatureAdjuster
	jmp	.LBB44_531
.LBB44_537:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$22431, %ax             # imm = 0x579F
	jne	.LBB44_1069
# %bb.538:                              # %f_in_check.split2344
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$22431, BasicBlockSignatureTracker # imm = 0x579F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_541
# %bb.539:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$22439, %ax             # imm = 0x57A7
	jne	.LBB44_1069
# %bb.540:                              # %f_in_check.split2348
	movl	$1, (%r14)
	movw	$22439, BasicBlockSignatureTracker # imm = 0x57A7
	movw	$6970, RunTimeSignatureAdjuster # imm = 0x1B3A
	jmp	.LBB44_1017
.LBB44_541:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$47, %ax
	cmpw	$22448, %ax             # imm = 0x57B0
	jne	.LBB44_1069
# %bb.542:                              # %f_in_check.split2350
	movw	$22448, BasicBlockSignatureTracker # imm = 0x57B0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_557
.LBB44_543:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$22449, %ax             # imm = 0x57B1
	jne	.LBB44_1069
# %bb.544:                              # %f_in_check.split2338
	movl	bking_loc, %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$22449, BasicBlockSignatureTracker # imm = 0x57B1
	movw	$0, RunTimeSignatureAdjuster
.LBB44_545:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$6, %ax
	xorw	%si, %ax
	cmpw	$22455, %ax             # imm = 0x57B7
	jne	.LBB44_1053
# %bb.546:                              # %f_in_check.split2354
                                        #   in Loop: Header=BB44_545 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22455, BasicBlockSignatureTracker # imm = 0x57B7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_551
# %bb.547:                              #   in Loop: Header=BB44_545 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$127, %ax
	cmpw	$22472, %ax             # imm = 0x57C8
	jne	.LBB44_1053
# %bb.548:                              # %f_in_check.split2356
                                        #   in Loop: Header=BB44_545 Depth=1
	movw	$22472, BasicBlockSignatureTracker # imm = 0x57C8
	movw	$0, RunTimeSignatureAdjuster
# %bb.549:                              #   in Loop: Header=BB44_545 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$22480, %ax             # imm = 0x57D0
	jne	.LBB44_1053
# %bb.550:                              # %f_in_check.split2360
                                        #   in Loop: Header=BB44_545 Depth=1
	movl	(%r8), %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$22480, BasicBlockSignatureTracker # imm = 0x57D0
	movw	$97, RunTimeSignatureAdjuster
	jmp	.LBB44_545
.LBB44_551:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$104, %ax
	cmpw	$22495, %ax             # imm = 0x57DF
	jne	.LBB44_1069
# %bb.552:                              # %f_in_check.split2358
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$22495, BasicBlockSignatureTracker # imm = 0x57DF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_555
# %bb.553:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$22502, %ax             # imm = 0x57E6
	jne	.LBB44_1069
# %bb.554:                              # %f_in_check.split2362
	movl	$1, (%r14)
	movw	$22502, BasicBlockSignatureTracker # imm = 0x57E6
	movw	$7035, RunTimeSignatureAdjuster # imm = 0x1B7B
	jmp	.LBB44_1017
.LBB44_555:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$22503, %ax             # imm = 0x57E7
	jne	.LBB44_1069
# %bb.556:                              # %f_in_check.split2364
	movw	$22503, BasicBlockSignatureTracker # imm = 0x57E7
	movw	$87, RunTimeSignatureAdjuster
.LBB44_557:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$91, %ax
	xorw	%dx, %ax
	cmpw	$22507, %ax             # imm = 0x57EB
	jne	.LBB44_1069
# %bb.558:                              # %f_in_check.split2352
	movw	$22507, BasicBlockSignatureTracker # imm = 0x57EB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_595
.LBB44_559:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$151, %ax
	cmpw	$22514, %ax             # imm = 0x57F2
	jne	.LBB44_1069
# %bb.560:                              # %f_in_check.split2334
	movslq	(%rdx), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rsi
	movl	Xdiagr(,%rsi,4), %esi
	movw	$22514, BasicBlockSignatureTracker # imm = 0x57F2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_593
# %bb.561:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4092, %ax              # imm = 0xFFC
	cmpw	$22542, %ax             # imm = 0x580E
	jne	.LBB44_1069
# %bb.562:                              # %f_in_check.split2368
	movl	bking_loc, %eax
	movl	(%rdx), %esi
	movw	$22542, BasicBlockSignatureTracker # imm = 0x580E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_577
# %bb.563:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$22544, %ax             # imm = 0x5810
	jne	.LBB44_1069
# %bb.564:                              # %f_in_check.split2372
	movl	bking_loc, %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$22544, BasicBlockSignatureTracker # imm = 0x5810
	movw	$0, RunTimeSignatureAdjuster
.LBB44_565:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$55, %ax
	xorw	%si, %ax
	cmpw	$22567, %ax             # imm = 0x5827
	jne	.LBB44_1054
# %bb.566:                              # %f_in_check.split2376
                                        #   in Loop: Header=BB44_565 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22567, BasicBlockSignatureTracker # imm = 0x5827
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_571
# %bb.567:                              #   in Loop: Header=BB44_565 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$22571, %ax             # imm = 0x582B
	jne	.LBB44_1054
# %bb.568:                              # %f_in_check.split2378
                                        #   in Loop: Header=BB44_565 Depth=1
	movw	$22571, BasicBlockSignatureTracker # imm = 0x582B
	movw	$0, RunTimeSignatureAdjuster
# %bb.569:                              #   in Loop: Header=BB44_565 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$22572, %ax             # imm = 0x582C
	jne	.LBB44_1054
# %bb.570:                              # %f_in_check.split2382
                                        #   in Loop: Header=BB44_565 Depth=1
	movl	(%r8), %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$22572, BasicBlockSignatureTracker # imm = 0x582C
	movw	$60, RunTimeSignatureAdjuster
	jmp	.LBB44_565
.LBB44_571:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$22574, %ax             # imm = 0x582E
	jne	.LBB44_1069
# %bb.572:                              # %f_in_check.split2380
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$22574, BasicBlockSignatureTracker # imm = 0x582E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_575
# %bb.573:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$111, %ax
	cmpw	$22593, %ax             # imm = 0x5841
	jne	.LBB44_1069
# %bb.574:                              # %f_in_check.split2384
	movl	$1, (%r14)
	movw	$22593, BasicBlockSignatureTracker # imm = 0x5841
	movw	$5340, RunTimeSignatureAdjuster # imm = 0x14DC
	jmp	.LBB44_1017
.LBB44_575:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$22608, %ax             # imm = 0x5850
	jne	.LBB44_1069
# %bb.576:                              # %f_in_check.split2386
	movw	$22608, BasicBlockSignatureTracker # imm = 0x5850
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_591
.LBB44_577:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$95, %ax
	cmpw	$22609, %ax             # imm = 0x5851
	jne	.LBB44_1069
# %bb.578:                              # %f_in_check.split2374
	movl	bking_loc, %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$22609, BasicBlockSignatureTracker # imm = 0x5851
	movw	$0, RunTimeSignatureAdjuster
.LBB44_579:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$7, %ax
	xorw	%si, %ax
	cmpw	$22614, %ax             # imm = 0x5856
	jne	.LBB44_1055
# %bb.580:                              # %f_in_check.split2390
                                        #   in Loop: Header=BB44_579 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22614, BasicBlockSignatureTracker # imm = 0x5856
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_585
# %bb.581:                              #   in Loop: Header=BB44_579 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$22620, %ax             # imm = 0x585C
	jne	.LBB44_1055
# %bb.582:                              # %f_in_check.split2392
                                        #   in Loop: Header=BB44_579 Depth=1
	movw	$22620, BasicBlockSignatureTracker # imm = 0x585C
	movw	$0, RunTimeSignatureAdjuster
# %bb.583:                              #   in Loop: Header=BB44_579 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$22621, %ax             # imm = 0x585D
	jne	.LBB44_1055
# %bb.584:                              # %f_in_check.split2396
                                        #   in Loop: Header=BB44_579 Depth=1
	movl	(%r8), %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$22621, BasicBlockSignatureTracker # imm = 0x585D
	movw	$12, RunTimeSignatureAdjuster
	jmp	.LBB44_579
.LBB44_585:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$37, %ax
	cmpw	$22643, %ax             # imm = 0x5873
	jne	.LBB44_1069
# %bb.586:                              # %f_in_check.split2394
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$22643, BasicBlockSignatureTracker # imm = 0x5873
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_589
# %bb.587:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$255, %ax
	cmpw	$22668, %ax             # imm = 0x588C
	jne	.LBB44_1069
# %bb.588:                              # %f_in_check.split2398
	movl	$1, (%r14)
	movw	$22668, BasicBlockSignatureTracker # imm = 0x588C
	movw	$5137, RunTimeSignatureAdjuster # imm = 0x1411
	jmp	.LBB44_1017
.LBB44_589:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$238, %ax
	cmpw	$22685, %ax             # imm = 0x589D
	jne	.LBB44_1069
# %bb.590:                              # %f_in_check.split2400
	movw	$22685, BasicBlockSignatureTracker # imm = 0x589D
	movw	$205, RunTimeSignatureAdjuster
.LBB44_591:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$247, %ax
	xorw	%dx, %ax
	cmpw	$22695, %ax             # imm = 0x58A7
	jne	.LBB44_1069
# %bb.592:                              # %f_in_check.split2388
	movw	$22695, BasicBlockSignatureTracker # imm = 0x58A7
	movw	$3925, RunTimeSignatureAdjuster # imm = 0xF55
.LBB44_593:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$3907, %ax              # imm = 0xF43
	xorw	%dx, %ax
	cmpw	$22705, %ax             # imm = 0x58B1
	jne	.LBB44_1069
# %bb.594:                              # %f_in_check.split2370
	movw	$22705, BasicBlockSignatureTracker # imm = 0x58B1
	movw	$3930, RunTimeSignatureAdjuster # imm = 0xF5A
.LBB44_595:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$3921, %ax              # imm = 0xF51
	xorw	%dx, %ax
	cmpw	$22714, %ax             # imm = 0x58BA
	jne	.LBB44_1069
# %bb.596:                              # %f_in_check.split2366
	movw	$22714, BasicBlockSignatureTracker # imm = 0x58BA
	movw	$3981, RunTimeSignatureAdjuster # imm = 0xF8D
	jmp	.LBB44_837
.LBB44_597:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3980, %ax              # imm = 0xF8C
	cmpw	$22715, %ax             # imm = 0x58BB
	jne	.LBB44_1069
# %bb.598:                              # %f_in_check.split2318
	movslq	(%rdx), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rsi
	movl	Xfile(,%rsi,4), %esi
	movw	$22715, BasicBlockSignatureTracker # imm = 0x58BB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_631
# %bb.599:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$22718, %ax             # imm = 0x58BE
	jne	.LBB44_1069
# %bb.600:                              # %f_in_check.split2402
	movl	bking_loc, %eax
	movl	(%rdx), %esi
	movw	$22718, BasicBlockSignatureTracker # imm = 0x58BE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_615
# %bb.601:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$103, %ax
	cmpw	$22745, %ax             # imm = 0x58D9
	jne	.LBB44_1069
# %bb.602:                              # %f_in_check.split2406
	movl	bking_loc, %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$22745, BasicBlockSignatureTracker # imm = 0x58D9
	movw	$0, RunTimeSignatureAdjuster
.LBB44_603:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$61, %ax
	xorw	%si, %ax
	cmpw	$22756, %ax             # imm = 0x58E4
	jne	.LBB44_1056
# %bb.604:                              # %f_in_check.split2410
                                        #   in Loop: Header=BB44_603 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22756, BasicBlockSignatureTracker # imm = 0x58E4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_609
# %bb.605:                              #   in Loop: Header=BB44_603 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$22763, %ax             # imm = 0x58EB
	jne	.LBB44_1056
# %bb.606:                              # %f_in_check.split2412
                                        #   in Loop: Header=BB44_603 Depth=1
	movw	$22763, BasicBlockSignatureTracker # imm = 0x58EB
	movw	$0, RunTimeSignatureAdjuster
# %bb.607:                              #   in Loop: Header=BB44_603 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$22764, %ax             # imm = 0x58EC
	jne	.LBB44_1056
# %bb.608:                              # %f_in_check.split2416
                                        #   in Loop: Header=BB44_603 Depth=1
	movl	(%r8), %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$22764, BasicBlockSignatureTracker # imm = 0x58EC
	movw	$53, RunTimeSignatureAdjuster
	jmp	.LBB44_603
.LBB44_609:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$22783, %ax             # imm = 0x58FF
	jne	.LBB44_1069
# %bb.610:                              # %f_in_check.split2414
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$22783, BasicBlockSignatureTracker # imm = 0x58FF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_613
# %bb.611:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$505, %ax               # imm = 0x1F9
	cmpw	$22790, %ax             # imm = 0x5906
	jne	.LBB44_1069
# %bb.612:                              # %f_in_check.split2418
	movl	$1, (%r14)
	movw	$22790, BasicBlockSignatureTracker # imm = 0x5906
	movw	$5531, RunTimeSignatureAdjuster # imm = 0x159B
	jmp	.LBB44_1017
.LBB44_613:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$503, %ax               # imm = 0x1F7
	cmpw	$22792, %ax             # imm = 0x5908
	jne	.LBB44_1069
# %bb.614:                              # %f_in_check.split2420
	movw	$22792, BasicBlockSignatureTracker # imm = 0x5908
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_629
.LBB44_615:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$431, %ax               # imm = 0x1AF
	cmpw	$22801, %ax             # imm = 0x5911
	jne	.LBB44_1069
# %bb.616:                              # %f_in_check.split2408
	movl	bking_loc, %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$22801, BasicBlockSignatureTracker # imm = 0x5911
	movw	$0, RunTimeSignatureAdjuster
.LBB44_617:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$4, %ax
	xorw	%si, %ax
	cmpw	$22805, %ax             # imm = 0x5915
	jne	.LBB44_1057
# %bb.618:                              # %f_in_check.split2424
                                        #   in Loop: Header=BB44_617 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$22805, BasicBlockSignatureTracker # imm = 0x5915
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_623
# %bb.619:                              #   in Loop: Header=BB44_617 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$22810, %ax             # imm = 0x591A
	jne	.LBB44_1057
# %bb.620:                              # %f_in_check.split2426
                                        #   in Loop: Header=BB44_617 Depth=1
	movw	$22810, BasicBlockSignatureTracker # imm = 0x591A
	movw	$0, RunTimeSignatureAdjuster
# %bb.621:                              #   in Loop: Header=BB44_617 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$22829, %ax             # imm = 0x592D
	jne	.LBB44_1057
# %bb.622:                              # %f_in_check.split2430
                                        #   in Loop: Header=BB44_617 Depth=1
	movl	(%r8), %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$22829, BasicBlockSignatureTracker # imm = 0x592D
	movw	$60, RunTimeSignatureAdjuster
	jmp	.LBB44_617
.LBB44_623:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$89, %ax
	cmpw	$22860, %ax             # imm = 0x594C
	jne	.LBB44_1069
# %bb.624:                              # %f_in_check.split2428
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$22860, BasicBlockSignatureTracker # imm = 0x594C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_627
# %bb.625:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$22880, %ax             # imm = 0x5960
	jne	.LBB44_1069
# %bb.626:                              # %f_in_check.split2432
	movl	$1, (%r14)
	movw	$22880, BasicBlockSignatureTracker # imm = 0x5960
	movw	$5629, RunTimeSignatureAdjuster # imm = 0x15FD
	jmp	.LBB44_1017
.LBB44_627:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$22894, %ax             # imm = 0x596E
	jne	.LBB44_1069
# %bb.628:                              # %f_in_check.split2434
	movw	$22894, BasicBlockSignatureTracker # imm = 0x596E
	movw	$102, RunTimeSignatureAdjuster
.LBB44_629:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$117, %ax
	xorw	%dx, %ax
	cmpw	$22909, %ax             # imm = 0x597D
	jne	.LBB44_1069
# %bb.630:                              # %f_in_check.split2422
	movw	$22909, BasicBlockSignatureTracker # imm = 0x597D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_667
.LBB44_631:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$314, %ax               # imm = 0x13A
	cmpw	$22913, %ax             # imm = 0x5981
	jne	.LBB44_1069
# %bb.632:                              # %f_in_check.split2404
	movslq	(%rdx), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rsi
	movl	Xrank(,%rsi,4), %esi
	movw	$22913, BasicBlockSignatureTracker # imm = 0x5981
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_665
# %bb.633:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$22964, %ax             # imm = 0x59B4
	jne	.LBB44_1069
# %bb.634:                              # %f_in_check.split2438
	movl	bking_loc, %eax
	movl	(%rdx), %esi
	movw	$22964, BasicBlockSignatureTracker # imm = 0x59B4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_649
# %bb.635:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$22988, %ax             # imm = 0x59CC
	jne	.LBB44_1069
# %bb.636:                              # %f_in_check.split2442
	movl	bking_loc, %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$22988, BasicBlockSignatureTracker # imm = 0x59CC
	movw	$0, RunTimeSignatureAdjuster
.LBB44_637:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$23, %ax
	xorw	%si, %ax
	cmpw	$23003, %ax             # imm = 0x59DB
	jne	.LBB44_1058
# %bb.638:                              # %f_in_check.split2446
                                        #   in Loop: Header=BB44_637 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$23003, BasicBlockSignatureTracker # imm = 0x59DB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_643
# %bb.639:                              #   in Loop: Header=BB44_637 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$23004, %ax             # imm = 0x59DC
	jne	.LBB44_1058
# %bb.640:                              # %f_in_check.split2448
                                        #   in Loop: Header=BB44_637 Depth=1
	movw	$23004, BasicBlockSignatureTracker # imm = 0x59DC
	movw	$0, RunTimeSignatureAdjuster
# %bb.641:                              #   in Loop: Header=BB44_637 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$23021, %ax             # imm = 0x59ED
	jne	.LBB44_1058
# %bb.642:                              # %f_in_check.split2452
                                        #   in Loop: Header=BB44_637 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$23021, BasicBlockSignatureTracker # imm = 0x59ED
	movw	$33, RunTimeSignatureAdjuster
	jmp	.LBB44_637
.LBB44_643:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$23026, %ax             # imm = 0x59F2
	jne	.LBB44_1069
# %bb.644:                              # %f_in_check.split2450
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$23026, BasicBlockSignatureTracker # imm = 0x59F2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_647
# %bb.645:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1015, %ax              # imm = 0x3F7
	cmpw	$23045, %ax             # imm = 0x5A05
	jne	.LBB44_1069
# %bb.646:                              # %f_in_check.split2454
	movl	$1, (%r14)
	movw	$23045, BasicBlockSignatureTracker # imm = 0x5A05
	movw	$5784, RunTimeSignatureAdjuster # imm = 0x1698
	jmp	.LBB44_1017
.LBB44_647:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1013, %ax              # imm = 0x3F5
	cmpw	$23047, %ax             # imm = 0x5A07
	jne	.LBB44_1069
# %bb.648:                              # %f_in_check.split2456
	movw	$23047, BasicBlockSignatureTracker # imm = 0x5A07
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_663
.LBB44_649:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$941, %ax               # imm = 0x3AD
	cmpw	$23065, %ax             # imm = 0x5A19
	jne	.LBB44_1069
# %bb.650:                              # %f_in_check.split2444
	movl	bking_loc, %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$23065, BasicBlockSignatureTracker # imm = 0x5A19
	movw	$0, RunTimeSignatureAdjuster
.LBB44_651:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$40, %ax
	xorw	%si, %ax
	cmpw	$23089, %ax             # imm = 0x5A31
	jne	.LBB44_1059
# %bb.652:                              # %f_in_check.split2460
                                        #   in Loop: Header=BB44_651 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$23089, BasicBlockSignatureTracker # imm = 0x5A31
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_657
# %bb.653:                              #   in Loop: Header=BB44_651 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$23092, %ax             # imm = 0x5A34
	jne	.LBB44_1059
# %bb.654:                              # %f_in_check.split2462
                                        #   in Loop: Header=BB44_651 Depth=1
	movw	$23092, BasicBlockSignatureTracker # imm = 0x5A34
	movw	$0, RunTimeSignatureAdjuster
# %bb.655:                              #   in Loop: Header=BB44_651 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$112, %ax
	cmpw	$23108, %ax             # imm = 0x5A44
	jne	.LBB44_1059
# %bb.656:                              # %f_in_check.split2466
                                        #   in Loop: Header=BB44_651 Depth=1
	movl	(%r8), %eax
	addl	$-1, %eax
	movl	%eax, (%r8)
	movw	$23108, BasicBlockSignatureTracker # imm = 0x5A44
	movw	$93, RunTimeSignatureAdjuster
	jmp	.LBB44_651
.LBB44_657:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$124, %ax
	cmpw	$23117, %ax             # imm = 0x5A4D
	jne	.LBB44_1069
# %bb.658:                              # %f_in_check.split2464
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$23117, BasicBlockSignatureTracker # imm = 0x5A4D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_661
# %bb.659:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$23125, %ax             # imm = 0x5A55
	jne	.LBB44_1069
# %bb.660:                              # %f_in_check.split2468
	movl	$1, (%r14)
	movw	$23125, BasicBlockSignatureTracker # imm = 0x5A55
	movw	$5832, RunTimeSignatureAdjuster # imm = 0x16C8
	jmp	.LBB44_1017
.LBB44_661:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$23126, %ax             # imm = 0x5A56
	jne	.LBB44_1069
# %bb.662:                              # %f_in_check.split2470
	movw	$23126, BasicBlockSignatureTracker # imm = 0x5A56
	movw	$81, RunTimeSignatureAdjuster
.LBB44_663:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$92, %ax
	xorw	%dx, %ax
	cmpw	$23131, %ax             # imm = 0x5A5B
	jne	.LBB44_1069
# %bb.664:                              # %f_in_check.split2458
	movw	$23131, BasicBlockSignatureTracker # imm = 0x5A5B
	movw	$986, RunTimeSignatureAdjuster # imm = 0x3DA
.LBB44_665:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$989, %ax               # imm = 0x3DD
	xorw	%dx, %ax
	cmpw	$23132, %ax             # imm = 0x5A5C
	jne	.LBB44_1069
# %bb.666:                              # %f_in_check.split2440
	movw	$23132, BasicBlockSignatureTracker # imm = 0x5A5C
	movw	$801, RunTimeSignatureAdjuster # imm = 0x321
.LBB44_667:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$794, %ax               # imm = 0x31A
	xorw	%dx, %ax
	cmpw	$23143, %ax             # imm = 0x5A67
	jne	.LBB44_1069
# %bb.668:                              # %f_in_check.split2436
	movw	$23143, BasicBlockSignatureTracker # imm = 0x5A67
	movw	$3408, RunTimeSignatureAdjuster # imm = 0xD50
	jmp	.LBB44_837
.LBB44_669:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3397, %ax              # imm = 0xD45
	cmpw	$23154, %ax             # imm = 0x5A72
	jne	.LBB44_1069
# %bb.670:                              # %f_in_check.split2320
	movl	$0, (%r8)
	movw	$23154, BasicBlockSignatureTracker # imm = 0x5A72
	movw	$0, RunTimeSignatureAdjuster
.LBB44_671:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$6, %ax
	xorw	%si, %ax
	cmpw	$23156, %ax             # imm = 0x5A74
	jne	.LBB44_1060
# %bb.672:                              # %f_in_check.split2472
                                        #   in Loop: Header=BB44_671 Depth=1
	movl	(%r8), %eax
	movw	$23156, BasicBlockSignatureTracker # imm = 0x5A74
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jge	.LBB44_681
# %bb.673:                              #   in Loop: Header=BB44_671 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$23159, %ax             # imm = 0x5A77
	jne	.LBB44_1060
# %bb.674:                              # %f_in_check.split2474
                                        #   in Loop: Header=BB44_671 Depth=1
	movl	bking_loc, %eax
	movslq	(%r8), %rsi
	addl	f_in_check.knight_o(,%rsi,4), %eax
	movl	(%rdx), %esi
	movw	$23159, BasicBlockSignatureTracker # imm = 0x5A77
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_677
# %bb.675:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$232, %ax
	cmpw	$23199, %ax             # imm = 0x5A9F
	jne	.LBB44_1069
# %bb.676:                              # %f_in_check.split2478
	movl	$1, (%r14)
	movw	$23199, BasicBlockSignatureTracker # imm = 0x5A9F
	movw	$5634, RunTimeSignatureAdjuster # imm = 0x1602
	jmp	.LBB44_1017
.LBB44_677:                             #   in Loop: Header=BB44_671 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$213, %ax
	cmpw	$23202, %ax             # imm = 0x5AA2
	jne	.LBB44_1060
# %bb.678:                              # %f_in_check.split2480
                                        #   in Loop: Header=BB44_671 Depth=1
	movw	$23202, BasicBlockSignatureTracker # imm = 0x5AA2
	movw	$0, RunTimeSignatureAdjuster
# %bb.679:                              #   in Loop: Header=BB44_671 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$23203, %ax             # imm = 0x5AA3
	jne	.LBB44_1060
# %bb.680:                              # %f_in_check.split2482
                                        #   in Loop: Header=BB44_671 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$23203, BasicBlockSignatureTracker # imm = 0x5AA3
	movw	$209, RunTimeSignatureAdjuster
	jmp	.LBB44_671
.LBB44_681:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$198, %ax
	cmpw	$23218, %ax             # imm = 0x5AB2
	jne	.LBB44_1069
# %bb.682:                              # %f_in_check.split2476
	movw	$23218, BasicBlockSignatureTracker # imm = 0x5AB2
	movw	$3461, RunTimeSignatureAdjuster # imm = 0xD85
	jmp	.LBB44_837
.LBB44_683:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3467, %ax              # imm = 0xD8B
	cmpw	$23228, %ax             # imm = 0x5ABC
	jne	.LBB44_1069
# %bb.684:                              # %f_in_check.split2322
	movslq	(%rdx), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rsi
	movl	Xfile(,%rsi,4), %esi
	movw	$23228, BasicBlockSignatureTracker # imm = 0x5ABC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_717
# %bb.685:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$23230, %ax             # imm = 0x5ABE
	jne	.LBB44_1069
# %bb.686:                              # %f_in_check.split2484
	movl	bking_loc, %eax
	movl	(%rdx), %esi
	movw	$23230, BasicBlockSignatureTracker # imm = 0x5ABE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_701
# %bb.687:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$99, %ax
	cmpw	$23261, %ax             # imm = 0x5ADD
	jne	.LBB44_1069
# %bb.688:                              # %f_in_check.split2488
	movl	bking_loc, %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$23261, BasicBlockSignatureTracker # imm = 0x5ADD
	movw	$0, RunTimeSignatureAdjuster
.LBB44_689:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$59, %ax
	xorw	%si, %ax
	cmpw	$23270, %ax             # imm = 0x5AE6
	jne	.LBB44_1061
# %bb.690:                              # %f_in_check.split2492
                                        #   in Loop: Header=BB44_689 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$23270, BasicBlockSignatureTracker # imm = 0x5AE6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_695
# %bb.691:                              #   in Loop: Header=BB44_689 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$23273, %ax             # imm = 0x5AE9
	jne	.LBB44_1061
# %bb.692:                              # %f_in_check.split2494
                                        #   in Loop: Header=BB44_689 Depth=1
	movw	$23273, BasicBlockSignatureTracker # imm = 0x5AE9
	movw	$0, RunTimeSignatureAdjuster
# %bb.693:                              #   in Loop: Header=BB44_689 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$23275, %ax             # imm = 0x5AEB
	jne	.LBB44_1061
# %bb.694:                              # %f_in_check.split2498
                                        #   in Loop: Header=BB44_689 Depth=1
	movl	(%r8), %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$23275, BasicBlockSignatureTracker # imm = 0x5AEB
	movw	$54, RunTimeSignatureAdjuster
	jmp	.LBB44_689
.LBB44_695:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$23277, %ax             # imm = 0x5AED
	jne	.LBB44_1069
# %bb.696:                              # %f_in_check.split2496
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$23277, BasicBlockSignatureTracker # imm = 0x5AED
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_699
# %bb.697:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$23288, %ax             # imm = 0x5AF8
	jne	.LBB44_1069
# %bb.698:                              # %f_in_check.split2500
	movl	$1, (%r14)
	movw	$23288, BasicBlockSignatureTracker # imm = 0x5AF8
	movw	$5733, RunTimeSignatureAdjuster # imm = 0x1665
	jmp	.LBB44_1017
.LBB44_699:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$23292, %ax             # imm = 0x5AFC
	jne	.LBB44_1069
# %bb.700:                              # %f_in_check.split2502
	movw	$23292, BasicBlockSignatureTracker # imm = 0x5AFC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_715
.LBB44_701:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$434, %ax               # imm = 0x1B2
	cmpw	$23308, %ax             # imm = 0x5B0C
	jne	.LBB44_1069
# %bb.702:                              # %f_in_check.split2490
	movl	bking_loc, %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$23308, BasicBlockSignatureTracker # imm = 0x5B0C
	movw	$0, RunTimeSignatureAdjuster
.LBB44_703:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$40, %ax
	xorw	%si, %ax
	cmpw	$23332, %ax             # imm = 0x5B24
	jne	.LBB44_1062
# %bb.704:                              # %f_in_check.split2506
                                        #   in Loop: Header=BB44_703 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$23332, BasicBlockSignatureTracker # imm = 0x5B24
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_709
# %bb.705:                              #   in Loop: Header=BB44_703 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$23353, %ax             # imm = 0x5B39
	jne	.LBB44_1062
# %bb.706:                              # %f_in_check.split2508
                                        #   in Loop: Header=BB44_703 Depth=1
	movw	$23353, BasicBlockSignatureTracker # imm = 0x5B39
	movw	$0, RunTimeSignatureAdjuster
# %bb.707:                              #   in Loop: Header=BB44_703 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$23358, %ax             # imm = 0x5B3E
	jne	.LBB44_1062
# %bb.708:                              # %f_in_check.split2512
                                        #   in Loop: Header=BB44_703 Depth=1
	movl	(%r8), %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$23358, BasicBlockSignatureTracker # imm = 0x5B3E
	movw	$50, RunTimeSignatureAdjuster
	jmp	.LBB44_703
.LBB44_709:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$100, %ax
	cmpw	$23360, %ax             # imm = 0x5B40
	jne	.LBB44_1069
# %bb.710:                              # %f_in_check.split2510
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$23360, BasicBlockSignatureTracker # imm = 0x5B40
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_713
# %bb.711:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$23379, %ax             # imm = 0x5B53
	jne	.LBB44_1069
# %bb.712:                              # %f_in_check.split2514
	movl	$1, (%r14)
	movw	$23379, BasicBlockSignatureTracker # imm = 0x5B53
	movw	$6094, RunTimeSignatureAdjuster # imm = 0x17CE
	jmp	.LBB44_1017
.LBB44_713:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$23380, %ax             # imm = 0x5B54
	jne	.LBB44_1069
# %bb.714:                              # %f_in_check.split2516
	movw	$23380, BasicBlockSignatureTracker # imm = 0x5B54
	movw	$424, RunTimeSignatureAdjuster # imm = 0x1A8
.LBB44_715:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$426, %ax               # imm = 0x1AA
	xorw	%dx, %ax
	cmpw	$23382, %ax             # imm = 0x5B56
	jne	.LBB44_1069
# %bb.716:                              # %f_in_check.split2504
	movw	$23382, BasicBlockSignatureTracker # imm = 0x5B56
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_825
.LBB44_717:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$470, %ax               # imm = 0x1D6
	cmpw	$23402, %ax             # imm = 0x5B6A
	jne	.LBB44_1069
# %bb.718:                              # %f_in_check.split2486
	movslq	(%rdx), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rsi
	movl	Xrank(,%rsi,4), %esi
	movw	$23402, BasicBlockSignatureTracker # imm = 0x5B6A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_751
# %bb.719:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$23423, %ax             # imm = 0x5B7F
	jne	.LBB44_1069
# %bb.720:                              # %f_in_check.split2520
	movl	bking_loc, %eax
	movl	(%rdx), %esi
	movw	$23423, BasicBlockSignatureTracker # imm = 0x5B7F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_735
# %bb.721:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$245, %ax
	cmpw	$23434, %ax             # imm = 0x5B8A
	jne	.LBB44_1069
# %bb.722:                              # %f_in_check.split2524
	movl	bking_loc, %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$23434, BasicBlockSignatureTracker # imm = 0x5B8A
	movw	$0, RunTimeSignatureAdjuster
.LBB44_723:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$4, %ax
	xorw	%si, %ax
	cmpw	$23438, %ax             # imm = 0x5B8E
	jne	.LBB44_1063
# %bb.724:                              # %f_in_check.split2528
                                        #   in Loop: Header=BB44_723 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$23438, BasicBlockSignatureTracker # imm = 0x5B8E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_729
# %bb.725:                              #   in Loop: Header=BB44_723 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$23463, %ax             # imm = 0x5BA7
	jne	.LBB44_1063
# %bb.726:                              # %f_in_check.split2530
                                        #   in Loop: Header=BB44_723 Depth=1
	movw	$23463, BasicBlockSignatureTracker # imm = 0x5BA7
	movw	$0, RunTimeSignatureAdjuster
# %bb.727:                              #   in Loop: Header=BB44_723 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$23466, %ax             # imm = 0x5BAA
	jne	.LBB44_1063
# %bb.728:                              # %f_in_check.split2534
                                        #   in Loop: Header=BB44_723 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$23466, BasicBlockSignatureTracker # imm = 0x5BAA
	movw	$32, RunTimeSignatureAdjuster
	jmp	.LBB44_723
.LBB44_729:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$23472, %ax             # imm = 0x5BB0
	jne	.LBB44_1069
# %bb.730:                              # %f_in_check.split2532
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$23472, BasicBlockSignatureTracker # imm = 0x5BB0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_733
# %bb.731:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$23478, %ax             # imm = 0x5BB6
	jne	.LBB44_1069
# %bb.732:                              # %f_in_check.split2536
	movl	$1, (%r14)
	movw	$23478, BasicBlockSignatureTracker # imm = 0x5BB6
	movw	$5931, RunTimeSignatureAdjuster # imm = 0x172B
	jmp	.LBB44_1017
.LBB44_733:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$23480, %ax             # imm = 0x5BB8
	jne	.LBB44_1069
# %bb.734:                              # %f_in_check.split2538
	movw	$23480, BasicBlockSignatureTracker # imm = 0x5BB8
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_749
.LBB44_735:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$171, %ax
	cmpw	$23508, %ax             # imm = 0x5BD4
	jne	.LBB44_1069
# %bb.736:                              # %f_in_check.split2526
	movl	bking_loc, %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$23508, BasicBlockSignatureTracker # imm = 0x5BD4
	movw	$0, RunTimeSignatureAdjuster
.LBB44_737:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$61, %ax
	xorw	%si, %ax
	cmpw	$23529, %ax             # imm = 0x5BE9
	jne	.LBB44_1064
# %bb.738:                              # %f_in_check.split2542
                                        #   in Loop: Header=BB44_737 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$23529, BasicBlockSignatureTracker # imm = 0x5BE9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_743
# %bb.739:                              #   in Loop: Header=BB44_737 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2024, %ax              # imm = 0x7E8
	cmpw	$23553, %ax             # imm = 0x5C01
	jne	.LBB44_1064
# %bb.740:                              # %f_in_check.split2544
                                        #   in Loop: Header=BB44_737 Depth=1
	movw	$23553, BasicBlockSignatureTracker # imm = 0x5C01
	movw	$0, RunTimeSignatureAdjuster
# %bb.741:                              #   in Loop: Header=BB44_737 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$23565, %ax             # imm = 0x5C0D
	jne	.LBB44_1064
# %bb.742:                              # %f_in_check.split2548
                                        #   in Loop: Header=BB44_737 Depth=1
	movl	(%r8), %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$23565, BasicBlockSignatureTracker # imm = 0x5C0D
	movw	$2009, RunTimeSignatureAdjuster # imm = 0x7D9
	jmp	.LBB44_737
.LBB44_743:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2022, %ax              # imm = 0x7E6
	cmpw	$23567, %ax             # imm = 0x5C0F
	jne	.LBB44_1069
# %bb.744:                              # %f_in_check.split2546
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$23567, BasicBlockSignatureTracker # imm = 0x5C0F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_747
# %bb.745:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$23576, %ax             # imm = 0x5C18
	jne	.LBB44_1069
# %bb.746:                              # %f_in_check.split2550
	movl	$1, (%r14)
	movw	$23576, BasicBlockSignatureTracker # imm = 0x5C18
	movw	$4229, RunTimeSignatureAdjuster # imm = 0x1085
	jmp	.LBB44_1017
.LBB44_747:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$37, %ax
	cmpw	$23594, %ax             # imm = 0x5C2A
	jne	.LBB44_1069
# %bb.748:                              # %f_in_check.split2552
	movw	$23594, BasicBlockSignatureTracker # imm = 0x5C2A
	movw	$1938, RunTimeSignatureAdjuster # imm = 0x792
.LBB44_749:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$1928, %ax              # imm = 0x788
	xorw	%dx, %ax
	cmpw	$23600, %ax             # imm = 0x5C30
	jne	.LBB44_1069
# %bb.750:                              # %f_in_check.split2540
	movw	$23600, BasicBlockSignatureTracker # imm = 0x5C30
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_823
.LBB44_751:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1881, %ax              # imm = 0x759
	cmpw	$23603, %ax             # imm = 0x5C33
	jne	.LBB44_1069
# %bb.752:                              # %f_in_check.split2522
	movslq	(%rdx), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rsi
	movl	Xdiagl(,%rsi,4), %esi
	movw	$23603, BasicBlockSignatureTracker # imm = 0x5C33
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_785
# %bb.753:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$23608, %ax             # imm = 0x5C38
	jne	.LBB44_1069
# %bb.754:                              # %f_in_check.split2556
	movl	bking_loc, %eax
	movl	(%rdx), %esi
	movw	$23608, BasicBlockSignatureTracker # imm = 0x5C38
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_769
# %bb.755:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$23609, %ax             # imm = 0x5C39
	jne	.LBB44_1069
# %bb.756:                              # %f_in_check.split2560
	movl	bking_loc, %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$23609, BasicBlockSignatureTracker # imm = 0x5C39
	movw	$0, RunTimeSignatureAdjuster
.LBB44_757:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$116, %ax
	xorw	%si, %ax
	cmpw	$23629, %ax             # imm = 0x5C4D
	jne	.LBB44_1065
# %bb.758:                              # %f_in_check.split2564
                                        #   in Loop: Header=BB44_757 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$23629, BasicBlockSignatureTracker # imm = 0x5C4D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_763
# %bb.759:                              #   in Loop: Header=BB44_757 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$23643, %ax             # imm = 0x5C5B
	jne	.LBB44_1065
# %bb.760:                              # %f_in_check.split2566
                                        #   in Loop: Header=BB44_757 Depth=1
	movw	$23643, BasicBlockSignatureTracker # imm = 0x5C5B
	movw	$0, RunTimeSignatureAdjuster
# %bb.761:                              #   in Loop: Header=BB44_757 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$23659, %ax             # imm = 0x5C6B
	jne	.LBB44_1065
# %bb.762:                              # %f_in_check.split2570
                                        #   in Loop: Header=BB44_757 Depth=1
	movl	(%r8), %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$23659, BasicBlockSignatureTracker # imm = 0x5C6B
	movw	$82, RunTimeSignatureAdjuster
	jmp	.LBB44_757
.LBB44_763:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32, %ax
	cmpw	$23661, %ax             # imm = 0x5C6D
	jne	.LBB44_1069
# %bb.764:                              # %f_in_check.split2568
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$23661, BasicBlockSignatureTracker # imm = 0x5C6D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_767
# %bb.765:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$205, %ax
	cmpw	$23712, %ax             # imm = 0x5CA0
	jne	.LBB44_1069
# %bb.766:                              # %f_in_check.split2572
	movl	$1, (%r14)
	movw	$23712, BasicBlockSignatureTracker # imm = 0x5CA0
	movw	$4157, RunTimeSignatureAdjuster # imm = 0x103D
	jmp	.LBB44_1017
.LBB44_767:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$201, %ax
	cmpw	$23716, %ax             # imm = 0x5CA4
	jne	.LBB44_1069
# %bb.768:                              # %f_in_check.split2574
	movw	$23716, BasicBlockSignatureTracker # imm = 0x5CA4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_783
.LBB44_769:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$144, %ax
	cmpw	$23720, %ax             # imm = 0x5CA8
	jne	.LBB44_1069
# %bb.770:                              # %f_in_check.split2562
	movl	bking_loc, %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$23720, BasicBlockSignatureTracker # imm = 0x5CA8
	movw	$0, RunTimeSignatureAdjuster
.LBB44_771:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$6, %ax
	xorw	%si, %ax
	cmpw	$23726, %ax             # imm = 0x5CAE
	jne	.LBB44_1066
# %bb.772:                              # %f_in_check.split2578
                                        #   in Loop: Header=BB44_771 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$23726, BasicBlockSignatureTracker # imm = 0x5CAE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_777
# %bb.773:                              #   in Loop: Header=BB44_771 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$23728, %ax             # imm = 0x5CB0
	jne	.LBB44_1066
# %bb.774:                              # %f_in_check.split2580
                                        #   in Loop: Header=BB44_771 Depth=1
	movw	$23728, BasicBlockSignatureTracker # imm = 0x5CB0
	movw	$0, RunTimeSignatureAdjuster
# %bb.775:                              #   in Loop: Header=BB44_771 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$98, %ax
	cmpw	$23762, %ax             # imm = 0x5CD2
	jne	.LBB44_1066
# %bb.776:                              # %f_in_check.split2584
                                        #   in Loop: Header=BB44_771 Depth=1
	movl	(%r8), %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$23762, BasicBlockSignatureTracker # imm = 0x5CD2
	movw	$122, RunTimeSignatureAdjuster
	jmp	.LBB44_771
.LBB44_777:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$90, %ax
	cmpw	$23796, %ax             # imm = 0x5CF4
	jne	.LBB44_1069
# %bb.778:                              # %f_in_check.split2582
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$23796, BasicBlockSignatureTracker # imm = 0x5CF4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_781
# %bb.779:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$23807, %ax             # imm = 0x5CFF
	jne	.LBB44_1069
# %bb.780:                              # %f_in_check.split2586
	movl	$1, (%r14)
	movw	$23807, BasicBlockSignatureTracker # imm = 0x5CFF
	movw	$4194, RunTimeSignatureAdjuster # imm = 0x1062
	jmp	.LBB44_1017
.LBB44_781:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$511, %ax               # imm = 0x1FF
	cmpw	$23819, %ax             # imm = 0x5D0B
	jne	.LBB44_1069
# %bb.782:                              # %f_in_check.split2588
	movw	$23819, BasicBlockSignatureTracker # imm = 0x5D0B
	movw	$431, RunTimeSignatureAdjuster # imm = 0x1AF
.LBB44_783:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$425, %ax               # imm = 0x1A9
	xorw	%dx, %ax
	cmpw	$23821, %ax             # imm = 0x5D0D
	jne	.LBB44_1069
# %bb.784:                              # %f_in_check.split2576
	movw	$23821, BasicBlockSignatureTracker # imm = 0x5D0D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_821
.LBB44_785:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$317, %ax               # imm = 0x13D
	cmpw	$23822, %ax             # imm = 0x5D0E
	jne	.LBB44_1069
# %bb.786:                              # %f_in_check.split2558
	movslq	(%rdx), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rsi
	movl	Xdiagr(,%rsi,4), %esi
	movw	$23822, BasicBlockSignatureTracker # imm = 0x5D0E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jne	.LBB44_819
# %bb.787:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$23830, %ax             # imm = 0x5D16
	jne	.LBB44_1069
# %bb.788:                              # %f_in_check.split2592
	movl	bking_loc, %eax
	movl	(%rdx), %esi
	movw	$23830, BasicBlockSignatureTracker # imm = 0x5D16
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %eax
	jge	.LBB44_803
# %bb.789:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$23834, %ax             # imm = 0x5D1A
	jne	.LBB44_1069
# %bb.790:                              # %f_in_check.split2596
	movl	bking_loc, %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$23834, BasicBlockSignatureTracker # imm = 0x5D1A
	movw	$0, RunTimeSignatureAdjuster
.LBB44_791:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$6, %ax
	xorw	%si, %ax
	cmpw	$23836, %ax             # imm = 0x5D1C
	jne	.LBB44_1067
# %bb.792:                              # %f_in_check.split2600
                                        #   in Loop: Header=BB44_791 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$23836, BasicBlockSignatureTracker # imm = 0x5D1C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_797
# %bb.793:                              #   in Loop: Header=BB44_791 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$23843, %ax             # imm = 0x5D23
	jne	.LBB44_1067
# %bb.794:                              # %f_in_check.split2602
                                        #   in Loop: Header=BB44_791 Depth=1
	movw	$23843, BasicBlockSignatureTracker # imm = 0x5D23
	movw	$0, RunTimeSignatureAdjuster
# %bb.795:                              #   in Loop: Header=BB44_791 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$23848, %ax             # imm = 0x5D28
	jne	.LBB44_1067
# %bb.796:                              # %f_in_check.split2606
                                        #   in Loop: Header=BB44_791 Depth=1
	movl	(%r8), %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$23848, BasicBlockSignatureTracker # imm = 0x5D28
	movw	$50, RunTimeSignatureAdjuster
	jmp	.LBB44_791
.LBB44_797:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$23858, %ax             # imm = 0x5D32
	jne	.LBB44_1069
# %bb.798:                              # %f_in_check.split2604
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$23858, BasicBlockSignatureTracker # imm = 0x5D32
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_801
# %bb.799:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$23865, %ax             # imm = 0x5D39
	jne	.LBB44_1069
# %bb.800:                              # %f_in_check.split2608
	movl	$1, (%r14)
	movw	$23865, BasicBlockSignatureTracker # imm = 0x5D39
	movw	$4516, RunTimeSignatureAdjuster # imm = 0x11A4
	jmp	.LBB44_1017
.LBB44_801:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$23866, %ax             # imm = 0x5D3A
	jne	.LBB44_1069
# %bb.802:                              # %f_in_check.split2610
	movw	$23866, BasicBlockSignatureTracker # imm = 0x5D3A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_817
.LBB44_803:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$23867, %ax             # imm = 0x5D3B
	jne	.LBB44_1069
# %bb.804:                              # %f_in_check.split2598
	movl	bking_loc, %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$23867, BasicBlockSignatureTracker # imm = 0x5D3B
	movw	$0, RunTimeSignatureAdjuster
.LBB44_805:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$124, %ax
	xorw	%si, %ax
	cmpw	$23879, %ax             # imm = 0x5D47
	jne	.LBB44_1068
# %bb.806:                              # %f_in_check.split2614
                                        #   in Loop: Header=BB44_805 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$23879, BasicBlockSignatureTracker # imm = 0x5D47
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_811
# %bb.807:                              #   in Loop: Header=BB44_805 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$36, %ax
	cmpw	$23907, %ax             # imm = 0x5D63
	jne	.LBB44_1068
# %bb.808:                              # %f_in_check.split2616
                                        #   in Loop: Header=BB44_805 Depth=1
	movw	$23907, BasicBlockSignatureTracker # imm = 0x5D63
	movw	$0, RunTimeSignatureAdjuster
# %bb.809:                              #   in Loop: Header=BB44_805 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$23912, %ax             # imm = 0x5D68
	jne	.LBB44_1068
# %bb.810:                              # %f_in_check.split2620
                                        #   in Loop: Header=BB44_805 Depth=1
	movl	(%r8), %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$23912, BasicBlockSignatureTracker # imm = 0x5D68
	movw	$83, RunTimeSignatureAdjuster
	jmp	.LBB44_805
.LBB44_811:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$40, %ax
	cmpw	$23919, %ax             # imm = 0x5D6F
	jne	.LBB44_1069
# %bb.812:                              # %f_in_check.split2618
	movl	(%r8), %eax
	movl	(%rdx), %edx
	movw	$23919, BasicBlockSignatureTracker # imm = 0x5D6F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_815
# %bb.813:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$23934, %ax             # imm = 0x5D7E
	jne	.LBB44_1069
# %bb.814:                              # %f_in_check.split2622
	movl	$1, (%r14)
	movw	$23934, BasicBlockSignatureTracker # imm = 0x5D7E
	movw	$4579, RunTimeSignatureAdjuster # imm = 0x11E3
	jmp	.LBB44_1017
.LBB44_815:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$234, %ax
	cmpw	$23941, %ax             # imm = 0x5D85
	jne	.LBB44_1069
# %bb.816:                              # %f_in_check.split2624
	movw	$23941, BasicBlockSignatureTracker # imm = 0x5D85
	movw	$191, RunTimeSignatureAdjuster
.LBB44_817:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$188, %ax
	xorw	%dx, %ax
	cmpw	$23942, %ax             # imm = 0x5D86
	jne	.LBB44_1069
# %bb.818:                              # %f_in_check.split2612
	movw	$23942, BasicBlockSignatureTracker # imm = 0x5D86
	movw	$136, RunTimeSignatureAdjuster
.LBB44_819:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$150, %ax
	xorw	%dx, %ax
	cmpw	$23960, %ax             # imm = 0x5D98
	jne	.LBB44_1069
# %bb.820:                              # %f_in_check.split2594
	movw	$23960, BasicBlockSignatureTracker # imm = 0x5D98
	movw	$149, RunTimeSignatureAdjuster
.LBB44_821:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$174, %ax
	xorw	%dx, %ax
	cmpw	$23971, %ax             # imm = 0x5DA3
	jne	.LBB44_1069
# %bb.822:                              # %f_in_check.split2590
	movw	$23971, BasicBlockSignatureTracker # imm = 0x5DA3
	movw	$403, RunTimeSignatureAdjuster # imm = 0x193
.LBB44_823:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$396, %ax               # imm = 0x18C
	xorw	%dx, %ax
	cmpw	$23996, %ax             # imm = 0x5DBC
	jne	.LBB44_1069
# %bb.824:                              # %f_in_check.split2554
	movw	$23996, BasicBlockSignatureTracker # imm = 0x5DBC
	movw	$1770, RunTimeSignatureAdjuster # imm = 0x6EA
.LBB44_825:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$1688, %ax              # imm = 0x698
	xorw	%dx, %ax
	cmpw	$24014, %ax             # imm = 0x5DCE
	jne	.LBB44_1069
# %bb.826:                              # %f_in_check.split2518
	movw	$24014, BasicBlockSignatureTracker # imm = 0x5DCE
	movw	$2809, RunTimeSignatureAdjuster # imm = 0xAF9
	jmp	.LBB44_837
.LBB44_827:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$2798, %dx              # imm = 0xAEE
	cmpw	$24025, %dx             # imm = 0x5DD9
	jne	.LBB44_1069
# %bb.828:                              # %f_in_check.split2324
	movq	(%rbx), %rdx
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	addq	%rax, %rdx
	movl	16(%rdx), %eax
	movw	$24025, BasicBlockSignatureTracker # imm = 0x5DD9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB44_835
# %bb.829:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$24029, %ax             # imm = 0x5DDD
	jne	.LBB44_1069
# %bb.830:                              # %f_in_check.split2626
	movl	bking_loc, %edi
	movw	$24029, BasicBlockSignatureTracker # imm = 0x5DDD
	movw	$16392, RunTimeSignatureAdjuster # imm = 0x4008
	movl	$1, %esi
	callq	is_attacked
	movw	$24029, BasicBlockSignatureTracker # imm = 0x5DDD
	movw	$16392, RunTimeSignatureAdjuster # imm = 0x4008
	movw	$24029, BasicBlockSignatureTracker # imm = 0x5DDD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB44_833
# %bb.831:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$24044, %ax             # imm = 0x5DEC
	jne	.LBB44_1069
# %bb.832:                              # %f_in_check.split2630
	movl	$1, (%r14)
	movw	$24044, BasicBlockSignatureTracker # imm = 0x5DEC
	movw	$4465, RunTimeSignatureAdjuster # imm = 0x1171
	jmp	.LBB44_1017
.LBB44_833:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$24047, %ax             # imm = 0x5DEF
	jne	.LBB44_1069
# %bb.834:                              # %f_in_check.split2632
	movl	$0, (%r14)
	movw	$24047, BasicBlockSignatureTracker # imm = 0x5DEF
	movw	$4466, RunTimeSignatureAdjuster # imm = 0x1172
	jmp	.LBB44_1017
.LBB44_835:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$24059, %ax             # imm = 0x5DFB
	jne	.LBB44_1069
# %bb.836:                              # %f_in_check.split2628
	movw	$24059, BasicBlockSignatureTracker # imm = 0x5DFB
	movw	$2764, RunTimeSignatureAdjuster # imm = 0xACC
.LBB44_837:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$2358, %ax              # imm = 0x936
	xorw	%dx, %ax
	cmpw	$24065, %ax             # imm = 0x5E01
	jne	.LBB44_1069
# %bb.838:                              # %f_in_check.split2312
	movl	(%rcx), %eax
	movw	$24065, BasicBlockSignatureTracker # imm = 0x5E01
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB44_841
# %bb.839:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$24066, %ax             # imm = 0x5E02
	jne	.LBB44_1069
# %bb.840:                              # %f_in_check.split2634
	movl	$0, (%r14)
	movw	$24066, BasicBlockSignatureTracker # imm = 0x5E02
	movw	$4767, RunTimeSignatureAdjuster # imm = 0x129F
	jmp	.LBB44_1017
.LBB44_841:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$24074, %ax             # imm = 0x5E0A
	jne	.LBB44_1069
# %bb.842:                              # %f_in_check.split2636
	movslq	(%rcx), %rax
	movl	Xrank(,%rax,4), %eax
	movslq	bking_loc, %rdx
	movl	Xrank(,%rdx,4), %edx
	movw	$24074, BasicBlockSignatureTracker # imm = 0x5E0A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_883
# %bb.843:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$24080, %ax             # imm = 0x5E10
	jne	.LBB44_1069
# %bb.844:                              # %f_in_check.split2638
	movl	bking_loc, %eax
	movl	(%rcx), %ecx
	movw	$24080, BasicBlockSignatureTracker # imm = 0x5E10
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB44_863
# %bb.845:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$24085, %ax             # imm = 0x5E15
	jne	.LBB44_1069
# %bb.846:                              # %f_in_check.split2642
	movl	bking_loc, %eax
	subl	$1, %eax
	movl	%eax, (%r8)
	movw	$24085, BasicBlockSignatureTracker # imm = 0x5E15
	movw	$0, RunTimeSignatureAdjuster
.LBB44_847:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$24086, %ax             # imm = 0x5E16
	jne	.LBB44_1044
# %bb.848:                              # %f_in_check.split2646
                                        #   in Loop: Header=BB44_847 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24086, BasicBlockSignatureTracker # imm = 0x5E16
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_853
# %bb.849:                              #   in Loop: Header=BB44_847 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$24091, %ax             # imm = 0x5E1B
	jne	.LBB44_1044
# %bb.850:                              # %f_in_check.split2648
                                        #   in Loop: Header=BB44_847 Depth=1
	movw	$24091, BasicBlockSignatureTracker # imm = 0x5E1B
	movw	$0, RunTimeSignatureAdjuster
# %bb.851:                              #   in Loop: Header=BB44_847 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$24096, %ax             # imm = 0x5E20
	jne	.LBB44_1044
# %bb.852:                              # %f_in_check.split2652
                                        #   in Loop: Header=BB44_847 Depth=1
	movl	(%r8), %eax
	addl	$-1, %eax
	movl	%eax, (%r8)
	movw	$24096, BasicBlockSignatureTracker # imm = 0x5E20
	movw	$53, RunTimeSignatureAdjuster
	jmp	.LBB44_847
.LBB44_853:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$24104, %ax             # imm = 0x5E28
	jne	.LBB44_1069
# %bb.854:                              # %f_in_check.split2650
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24104, BasicBlockSignatureTracker # imm = 0x5E28
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB44_857
# %bb.855:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$24117, %ax             # imm = 0x5E35
	jne	.LBB44_1069
# %bb.856:                              # %f_in_check.split2656
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24117, BasicBlockSignatureTracker # imm = 0x5E35
	movw	$29, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB44_859
.LBB44_857:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$24124, %ax             # imm = 0x5E3C
	jne	.LBB44_1069
# %bb.858:                              # %f_in_check.split2654
	movl	$1, (%r14)
	movw	$24124, BasicBlockSignatureTracker # imm = 0x5E3C
	movw	$4769, RunTimeSignatureAdjuster # imm = 0x12A1
	jmp	.LBB44_1017
.LBB44_859:                             # %Buffer__10
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30001, %ax             # imm = 0x7531
	cmpw	$11012, %ax             # imm = 0x2B04
	jne	.LBB44_1069
# %bb.860:                              # %f_in_check.split2658
	movw	$11012, BasicBlockSignatureTracker # imm = 0x2B04
	movw	$30001, RunTimeSignatureAdjuster # imm = 0x7531
# %bb.861:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$110, %ax
	xorw	%cx, %ax
	cmpw	$24155, %ax             # imm = 0x5E5B
	jne	.LBB44_1069
# %bb.862:                              # %f_in_check.split2820
	movw	$24155, BasicBlockSignatureTracker # imm = 0x5E5B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_881
.LBB44_863:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$127, %ax
	cmpw	$24175, %ax             # imm = 0x5E6F
	jne	.LBB44_1069
# %bb.864:                              # %f_in_check.split2644
	movl	bking_loc, %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$24175, BasicBlockSignatureTracker # imm = 0x5E6F
	movw	$0, RunTimeSignatureAdjuster
.LBB44_865:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$24176, %ax             # imm = 0x5E70
	jne	.LBB44_1045
# %bb.866:                              # %f_in_check.split2662
                                        #   in Loop: Header=BB44_865 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24176, BasicBlockSignatureTracker # imm = 0x5E70
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_871
# %bb.867:                              #   in Loop: Header=BB44_865 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$24184, %ax             # imm = 0x5E78
	jne	.LBB44_1045
# %bb.868:                              # %f_in_check.split2664
                                        #   in Loop: Header=BB44_865 Depth=1
	movw	$24184, BasicBlockSignatureTracker # imm = 0x5E78
	movw	$0, RunTimeSignatureAdjuster
# %bb.869:                              #   in Loop: Header=BB44_865 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$24185, %ax             # imm = 0x5E79
	jne	.LBB44_1045
# %bb.870:                              # %f_in_check.split2668
                                        #   in Loop: Header=BB44_865 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$24185, BasicBlockSignatureTracker # imm = 0x5E79
	movw	$22, RunTimeSignatureAdjuster
	jmp	.LBB44_865
.LBB44_871:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$243, %ax
	cmpw	$24195, %ax             # imm = 0x5E83
	jne	.LBB44_1069
# %bb.872:                              # %f_in_check.split2666
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24195, BasicBlockSignatureTracker # imm = 0x5E83
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB44_875
# %bb.873:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$24198, %ax             # imm = 0x5E86
	jne	.LBB44_1069
# %bb.874:                              # %f_in_check.split2672
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24198, BasicBlockSignatureTracker # imm = 0x5E86
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB44_877
.LBB44_875:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$24203, %ax             # imm = 0x5E8B
	jne	.LBB44_1069
# %bb.876:                              # %f_in_check.split2670
	movl	$1, (%r14)
	movw	$24203, BasicBlockSignatureTracker # imm = 0x5E8B
	movw	$4630, RunTimeSignatureAdjuster # imm = 0x1216
	jmp	.LBB44_1017
.LBB44_877:                             # %Buffer__11
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-15138, %ax            # imm = 0xC4DE
	cmpw	$-26024, %ax            # imm = 0x9A58
	jne	.LBB44_1069
# %bb.878:                              # %f_in_check.split2674
	movw	$-26024, BasicBlockSignatureTracker # imm = 0x9A58
	movw	$-15138, RunTimeSignatureAdjuster # imm = 0xC4DE
# %bb.879:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$24216, %ax             # imm = 0x5E98
	jne	.LBB44_1069
# %bb.880:                              # %f_in_check.split2822
	movw	$24216, BasicBlockSignatureTracker # imm = 0x5E98
	movw	$195, RunTimeSignatureAdjuster
.LBB44_881:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$253, %ax
	xorw	%cx, %ax
	cmpw	$24230, %ax             # imm = 0x5EA6
	jne	.LBB44_1069
# %bb.882:                              # %f_in_check.split2660
	movw	$24230, BasicBlockSignatureTracker # imm = 0x5EA6
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_1015
.LBB44_883:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$163, %ax
	cmpw	$24233, %ax             # imm = 0x5EA9
	jne	.LBB44_1069
# %bb.884:                              # %f_in_check.split2640
	movslq	(%rcx), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	bking_loc, %rdx
	movl	Xfile(,%rdx,4), %edx
	movw	$24233, BasicBlockSignatureTracker # imm = 0x5EA9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_925
# %bb.885:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$24236, %ax             # imm = 0x5EAC
	jne	.LBB44_1069
# %bb.886:                              # %f_in_check.split2678
	movl	bking_loc, %eax
	movl	(%rcx), %ecx
	movw	$24236, BasicBlockSignatureTracker # imm = 0x5EAC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB44_905
# %bb.887:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$24239, %ax             # imm = 0x5EAF
	jne	.LBB44_1069
# %bb.888:                              # %f_in_check.split2682
	movl	bking_loc, %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$24239, BasicBlockSignatureTracker # imm = 0x5EAF
	movw	$0, RunTimeSignatureAdjuster
.LBB44_889:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$24243, %ax             # imm = 0x5EB3
	jne	.LBB44_1046
# %bb.890:                              # %f_in_check.split2686
                                        #   in Loop: Header=BB44_889 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24243, BasicBlockSignatureTracker # imm = 0x5EB3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_895
# %bb.891:                              #   in Loop: Header=BB44_889 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$24248, %ax             # imm = 0x5EB8
	jne	.LBB44_1046
# %bb.892:                              # %f_in_check.split2688
                                        #   in Loop: Header=BB44_889 Depth=1
	movw	$24248, BasicBlockSignatureTracker # imm = 0x5EB8
	movw	$0, RunTimeSignatureAdjuster
# %bb.893:                              #   in Loop: Header=BB44_889 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$24255, %ax             # imm = 0x5EBF
	jne	.LBB44_1046
# %bb.894:                              # %f_in_check.split2692
                                        #   in Loop: Header=BB44_889 Depth=1
	movl	(%r8), %eax
	subl	$12, %eax
	movl	%eax, (%r8)
	movw	$24255, BasicBlockSignatureTracker # imm = 0x5EBF
	movw	$16, RunTimeSignatureAdjuster
	jmp	.LBB44_889
.LBB44_895:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$24267, %ax             # imm = 0x5ECB
	jne	.LBB44_1069
# %bb.896:                              # %f_in_check.split2690
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24267, BasicBlockSignatureTracker # imm = 0x5ECB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB44_899
# %bb.897:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$24269, %ax             # imm = 0x5ECD
	jne	.LBB44_1069
# %bb.898:                              # %f_in_check.split2696
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24269, BasicBlockSignatureTracker # imm = 0x5ECD
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB44_901
.LBB44_899:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$24278, %ax             # imm = 0x5ED6
	jne	.LBB44_1069
# %bb.900:                              # %f_in_check.split2694
	movl	$1, (%r14)
	movw	$24278, BasicBlockSignatureTracker # imm = 0x5ED6
	movw	$4683, RunTimeSignatureAdjuster # imm = 0x124B
	jmp	.LBB44_1017
.LBB44_901:                             # %Buffer__12
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27529, %ax             # imm = 0x6B89
	cmpw	$13636, %ax             # imm = 0x3544
	jne	.LBB44_1069
# %bb.902:                              # %f_in_check.split2698
	movw	$13636, BasicBlockSignatureTracker # imm = 0x3544
	movw	$27529, RunTimeSignatureAdjuster # imm = 0x6B89
# %bb.903:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$24283, %ax             # imm = 0x5EDB
	jne	.LBB44_1069
# %bb.904:                              # %f_in_check.split2824
	movw	$24283, BasicBlockSignatureTracker # imm = 0x5EDB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_923
.LBB44_905:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$77, %ax
	cmpw	$24289, %ax             # imm = 0x5EE1
	jne	.LBB44_1069
# %bb.906:                              # %f_in_check.split2684
	movl	bking_loc, %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$24289, BasicBlockSignatureTracker # imm = 0x5EE1
	movw	$0, RunTimeSignatureAdjuster
.LBB44_907:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$24306, %ax             # imm = 0x5EF2
	jne	.LBB44_1047
# %bb.908:                              # %f_in_check.split2702
                                        #   in Loop: Header=BB44_907 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24306, BasicBlockSignatureTracker # imm = 0x5EF2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_913
# %bb.909:                              #   in Loop: Header=BB44_907 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$499, %ax               # imm = 0x1F3
	cmpw	$24321, %ax             # imm = 0x5F01
	jne	.LBB44_1047
# %bb.910:                              # %f_in_check.split2704
                                        #   in Loop: Header=BB44_907 Depth=1
	movw	$24321, BasicBlockSignatureTracker # imm = 0x5F01
	movw	$0, RunTimeSignatureAdjuster
# %bb.911:                              #   in Loop: Header=BB44_907 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$24337, %ax             # imm = 0x5F11
	jne	.LBB44_1047
# %bb.912:                              # %f_in_check.split2708
                                        #   in Loop: Header=BB44_907 Depth=1
	movl	(%r8), %eax
	addl	$12, %eax
	movl	%eax, (%r8)
	movw	$24337, BasicBlockSignatureTracker # imm = 0x5F11
	movw	$496, RunTimeSignatureAdjuster # imm = 0x1F0
	jmp	.LBB44_907
.LBB44_913:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$480, %ax               # imm = 0x1E0
	cmpw	$24338, %ax             # imm = 0x5F12
	jne	.LBB44_1069
# %bb.914:                              # %f_in_check.split2706
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24338, BasicBlockSignatureTracker # imm = 0x5F12
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB44_917
# %bb.915:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$24354, %ax             # imm = 0x5F22
	jne	.LBB44_1069
# %bb.916:                              # %f_in_check.split2712
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24354, BasicBlockSignatureTracker # imm = 0x5F22
	movw	$48, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB44_919
.LBB44_917:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$54, %ax
	xorw	%cx, %ax
	cmpw	$24356, %ax             # imm = 0x5F24
	jne	.LBB44_1069
# %bb.918:                              # %f_in_check.split2710
	movl	$1, (%r14)
	movw	$24356, BasicBlockSignatureTracker # imm = 0x5F24
	movw	$5049, RunTimeSignatureAdjuster # imm = 0x13B9
	jmp	.LBB44_1017
.LBB44_919:                             # %Buffer__13
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22236, %ax            # imm = 0xA924
	cmpw	$-2554, %ax             # imm = 0xF606
	jne	.LBB44_1069
# %bb.920:                              # %f_in_check.split2714
	movw	$-2554, BasicBlockSignatureTracker # imm = 0xF606
	movw	$-22236, RunTimeSignatureAdjuster # imm = 0xA924
# %bb.921:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$24357, %ax             # imm = 0x5F25
	jne	.LBB44_1069
# %bb.922:                              # %f_in_check.split2826
	movw	$24357, BasicBlockSignatureTracker # imm = 0x5F25
	movw	$510, RunTimeSignatureAdjuster # imm = 0x1FE
.LBB44_923:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$410, %ax               # imm = 0x19A
	xorw	%cx, %ax
	cmpw	$24385, %ax             # imm = 0x5F41
	jne	.LBB44_1069
# %bb.924:                              # %f_in_check.split2700
	movw	$24385, BasicBlockSignatureTracker # imm = 0x5F41
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_1013
.LBB44_925:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$485, %ax               # imm = 0x1E5
	cmpw	$24396, %ax             # imm = 0x5F4C
	jne	.LBB44_1069
# %bb.926:                              # %f_in_check.split2680
	movslq	(%rcx), %rax
	movl	Xdiagl(,%rax,4), %eax
	movslq	bking_loc, %rdx
	movl	Xdiagl(,%rdx,4), %edx
	movw	$24396, BasicBlockSignatureTracker # imm = 0x5F4C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_967
# %bb.927:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$24397, %ax             # imm = 0x5F4D
	jne	.LBB44_1069
# %bb.928:                              # %f_in_check.split2718
	movl	bking_loc, %eax
	movl	(%rcx), %ecx
	movw	$24397, BasicBlockSignatureTracker # imm = 0x5F4D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB44_947
# %bb.929:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$24399, %ax             # imm = 0x5F4F
	jne	.LBB44_1069
# %bb.930:                              # %f_in_check.split2722
	movl	bking_loc, %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$24399, BasicBlockSignatureTracker # imm = 0x5F4F
	movw	$0, RunTimeSignatureAdjuster
.LBB44_931:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$24403, %ax             # imm = 0x5F53
	jne	.LBB44_1048
# %bb.932:                              # %f_in_check.split2726
                                        #   in Loop: Header=BB44_931 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24403, BasicBlockSignatureTracker # imm = 0x5F53
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_937
# %bb.933:                              #   in Loop: Header=BB44_931 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$24410, %ax             # imm = 0x5F5A
	jne	.LBB44_1048
# %bb.934:                              # %f_in_check.split2728
                                        #   in Loop: Header=BB44_931 Depth=1
	movw	$24410, BasicBlockSignatureTracker # imm = 0x5F5A
	movw	$0, RunTimeSignatureAdjuster
# %bb.935:                              #   in Loop: Header=BB44_931 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$24418, %ax             # imm = 0x5F62
	jne	.LBB44_1048
# %bb.936:                              # %f_in_check.split2732
                                        #   in Loop: Header=BB44_931 Depth=1
	movl	(%r8), %eax
	subl	$13, %eax
	movl	%eax, (%r8)
	movw	$24418, BasicBlockSignatureTracker # imm = 0x5F62
	movw	$45, RunTimeSignatureAdjuster
	jmp	.LBB44_931
.LBB44_937:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32, %ax
	cmpw	$24435, %ax             # imm = 0x5F73
	jne	.LBB44_1069
# %bb.938:                              # %f_in_check.split2730
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24435, BasicBlockSignatureTracker # imm = 0x5F73
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB44_941
# %bb.939:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$24442, %ax             # imm = 0x5F7A
	jne	.LBB44_1069
# %bb.940:                              # %f_in_check.split2736
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24442, BasicBlockSignatureTracker # imm = 0x5F7A
	movw	$9, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB44_943
.LBB44_941:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$243, %ax
	xorw	%cx, %ax
	cmpw	$24448, %ax             # imm = 0x5F80
	jne	.LBB44_1069
# %bb.942:                              # %f_in_check.split2734
	movl	$1, (%r14)
	movw	$24448, BasicBlockSignatureTracker # imm = 0x5F80
	movw	$4893, RunTimeSignatureAdjuster # imm = 0x131D
	jmp	.LBB44_1017
.LBB44_943:                             # %Buffer__14
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-24630, %ax            # imm = 0x9FCA
	cmpw	$-16208, %ax            # imm = 0xC0B0
	jne	.LBB44_1069
# %bb.944:                              # %f_in_check.split2738
	movw	$-16208, BasicBlockSignatureTracker # imm = 0xC0B0
	movw	$-24630, RunTimeSignatureAdjuster # imm = 0x9FCA
# %bb.945:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$239, %ax
	xorw	%cx, %ax
	cmpw	$24469, %ax             # imm = 0x5F95
	jne	.LBB44_1069
# %bb.946:                              # %f_in_check.split2828
	movw	$24469, BasicBlockSignatureTracker # imm = 0x5F95
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_965
.LBB44_947:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$213, %ax
	cmpw	$24472, %ax             # imm = 0x5F98
	jne	.LBB44_1069
# %bb.948:                              # %f_in_check.split2724
	movl	bking_loc, %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$24472, BasicBlockSignatureTracker # imm = 0x5F98
	movw	$0, RunTimeSignatureAdjuster
.LBB44_949:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$89, %ax
	xorw	%cx, %ax
	cmpw	$24513, %ax             # imm = 0x5FC1
	jne	.LBB44_1049
# %bb.950:                              # %f_in_check.split2742
                                        #   in Loop: Header=BB44_949 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24513, BasicBlockSignatureTracker # imm = 0x5FC1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_955
# %bb.951:                              #   in Loop: Header=BB44_949 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$24526, %ax             # imm = 0x5FCE
	jne	.LBB44_1049
# %bb.952:                              # %f_in_check.split2744
                                        #   in Loop: Header=BB44_949 Depth=1
	movw	$24526, BasicBlockSignatureTracker # imm = 0x5FCE
	movw	$0, RunTimeSignatureAdjuster
# %bb.953:                              #   in Loop: Header=BB44_949 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$24531, %ax             # imm = 0x5FD3
	jne	.LBB44_1049
# %bb.954:                              # %f_in_check.split2748
                                        #   in Loop: Header=BB44_949 Depth=1
	movl	(%r8), %eax
	addl	$13, %eax
	movl	%eax, (%r8)
	movw	$24531, BasicBlockSignatureTracker # imm = 0x5FD3
	movw	$75, RunTimeSignatureAdjuster
	jmp	.LBB44_949
.LBB44_955:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$24547, %ax             # imm = 0x5FE3
	jne	.LBB44_1069
# %bb.956:                              # %f_in_check.split2746
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24547, BasicBlockSignatureTracker # imm = 0x5FE3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB44_959
# %bb.957:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$24563, %ax             # imm = 0x5FF3
	jne	.LBB44_1069
# %bb.958:                              # %f_in_check.split2752
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24563, BasicBlockSignatureTracker # imm = 0x5FF3
	movw	$16, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB44_961
.LBB44_959:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$24564, %ax             # imm = 0x5FF4
	jne	.LBB44_1069
# %bb.960:                              # %f_in_check.split2750
	movl	$1, (%r14)
	movw	$24564, BasicBlockSignatureTracker # imm = 0x5FF4
	movw	$4969, RunTimeSignatureAdjuster # imm = 0x1369
	jmp	.LBB44_1017
.LBB44_961:                             # %Buffer__15
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32366, %ax             # imm = 0x7E6E
	cmpw	$8605, %ax              # imm = 0x219D
	jne	.LBB44_1069
# %bb.962:                              # %f_in_check.split2754
	movw	$8605, BasicBlockSignatureTracker # imm = 0x219D
	movw	$32366, RunTimeSignatureAdjuster # imm = 0x7E6E
# %bb.963:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$24574, %ax             # imm = 0x5FFE
	jne	.LBB44_1069
# %bb.964:                              # %f_in_check.split2830
	movw	$24574, BasicBlockSignatureTracker # imm = 0x5FFE
	movw	$107, RunTimeSignatureAdjuster
.LBB44_965:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16286, %ax             # imm = 0x3F9E
	xorw	%cx, %ax
	cmpw	$24587, %ax             # imm = 0x600B
	jne	.LBB44_1069
# %bb.966:                              # %f_in_check.split2740
	movw	$24587, BasicBlockSignatureTracker # imm = 0x600B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_1011
.LBB44_967:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16208, %ax             # imm = 0x3F50
	cmpw	$24604, %ax             # imm = 0x601C
	jne	.LBB44_1069
# %bb.968:                              # %f_in_check.split2720
	movslq	(%rcx), %rax
	movl	Xdiagr(,%rax,4), %eax
	movslq	bking_loc, %rdx
	movl	Xdiagr(,%rdx,4), %edx
	movw	$24604, BasicBlockSignatureTracker # imm = 0x601C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB44_1009
# %bb.969:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$24610, %ax             # imm = 0x6022
	jne	.LBB44_1069
# %bb.970:                              # %f_in_check.split2758
	movl	bking_loc, %eax
	movl	(%rcx), %ecx
	movw	$24610, BasicBlockSignatureTracker # imm = 0x6022
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB44_989
# %bb.971:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$24612, %ax             # imm = 0x6024
	jne	.LBB44_1069
# %bb.972:                              # %f_in_check.split2762
	movl	bking_loc, %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$24612, BasicBlockSignatureTracker # imm = 0x6024
	movw	$0, RunTimeSignatureAdjuster
.LBB44_973:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$24621, %ax             # imm = 0x602D
	jne	.LBB44_1050
# %bb.974:                              # %f_in_check.split2766
                                        #   in Loop: Header=BB44_973 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24621, BasicBlockSignatureTracker # imm = 0x602D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_979
# %bb.975:                              #   in Loop: Header=BB44_973 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$24622, %ax             # imm = 0x602E
	jne	.LBB44_1050
# %bb.976:                              # %f_in_check.split2768
                                        #   in Loop: Header=BB44_973 Depth=1
	movw	$24622, BasicBlockSignatureTracker # imm = 0x602E
	movw	$0, RunTimeSignatureAdjuster
# %bb.977:                              #   in Loop: Header=BB44_973 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$24637, %ax             # imm = 0x603D
	jne	.LBB44_1050
# %bb.978:                              # %f_in_check.split2772
                                        #   in Loop: Header=BB44_973 Depth=1
	movl	(%r8), %eax
	subl	$11, %eax
	movl	%eax, (%r8)
	movw	$24637, BasicBlockSignatureTracker # imm = 0x603D
	movw	$25, RunTimeSignatureAdjuster
	jmp	.LBB44_973
.LBB44_979:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$109, %ax
	cmpw	$24640, %ax             # imm = 0x6040
	jne	.LBB44_1069
# %bb.980:                              # %f_in_check.split2770
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24640, BasicBlockSignatureTracker # imm = 0x6040
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB44_983
# %bb.981:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$24657, %ax             # imm = 0x6051
	jne	.LBB44_1069
# %bb.982:                              # %f_in_check.split2776
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24657, BasicBlockSignatureTracker # imm = 0x6051
	movw	$17, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB44_985
.LBB44_983:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$24675, %ax             # imm = 0x6063
	jne	.LBB44_1069
# %bb.984:                              # %f_in_check.split2774
	movl	$1, (%r14)
	movw	$24675, BasicBlockSignatureTracker # imm = 0x6063
	movw	$11518, RunTimeSignatureAdjuster # imm = 0x2CFE
	jmp	.LBB44_1017
.LBB44_985:                             # %Buffer__16
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19955, %ax             # imm = 0x4DF3
	cmpw	$11682, %ax             # imm = 0x2DA2
	jne	.LBB44_1069
# %bb.986:                              # %f_in_check.split2778
	movw	$11682, BasicBlockSignatureTracker # imm = 0x2DA2
	movw	$19955, RunTimeSignatureAdjuster # imm = 0x4DF3
# %bb.987:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$24686, %ax             # imm = 0x606E
	jne	.LBB44_1069
# %bb.988:                              # %f_in_check.split2832
	movw	$24686, BasicBlockSignatureTracker # imm = 0x606E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB44_1007
.LBB44_989:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$174, %ax
	cmpw	$24716, %ax             # imm = 0x608C
	jne	.LBB44_1069
# %bb.990:                              # %f_in_check.split2764
	movl	bking_loc, %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$24716, BasicBlockSignatureTracker # imm = 0x608C
	movw	$0, RunTimeSignatureAdjuster
.LBB44_991:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$24719, %ax             # imm = 0x608F
	jne	.LBB44_1051
# %bb.992:                              # %f_in_check.split2782
                                        #   in Loop: Header=BB44_991 Depth=1
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24719, BasicBlockSignatureTracker # imm = 0x608F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB44_997
# %bb.993:                              #   in Loop: Header=BB44_991 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$24730, %ax             # imm = 0x609A
	jne	.LBB44_1051
# %bb.994:                              # %f_in_check.split2784
                                        #   in Loop: Header=BB44_991 Depth=1
	movw	$24730, BasicBlockSignatureTracker # imm = 0x609A
	movw	$0, RunTimeSignatureAdjuster
# %bb.995:                              #   in Loop: Header=BB44_991 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$24745, %ax             # imm = 0x60A9
	jne	.LBB44_1051
# %bb.996:                              # %f_in_check.split2788
                                        #   in Loop: Header=BB44_991 Depth=1
	movl	(%r8), %eax
	addl	$11, %eax
	movl	%eax, (%r8)
	movw	$24745, BasicBlockSignatureTracker # imm = 0x60A9
	movw	$37, RunTimeSignatureAdjuster
	jmp	.LBB44_991
.LBB44_997:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$37, %ax
	cmpw	$24746, %ax             # imm = 0x60AA
	jne	.LBB44_1069
# %bb.998:                              # %f_in_check.split2786
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24746, BasicBlockSignatureTracker # imm = 0x60AA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB44_1001
# %bb.999:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$24756, %ax             # imm = 0x60B4
	jne	.LBB44_1069
# %bb.1000:                             # %f_in_check.split2792
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movw	$24756, BasicBlockSignatureTracker # imm = 0x60B4
	movw	$30, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB44_1003
.LBB44_1001:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$24762, %ax             # imm = 0x60BA
	jne	.LBB44_1069
# %bb.1002:                             # %f_in_check.split2790
	movl	$1, (%r14)
	movw	$24762, BasicBlockSignatureTracker # imm = 0x60BA
	movw	$11303, RunTimeSignatureAdjuster # imm = 0x2C27
	jmp	.LBB44_1017
.LBB44_1003:                            # %Buffer__17
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13598, %ax             # imm = 0x351E
	cmpw	$21930, %ax             # imm = 0x55AA
	jne	.LBB44_1069
# %bb.1004:                             # %f_in_check.split2794
	movw	$21930, BasicBlockSignatureTracker # imm = 0x55AA
	movw	$13598, RunTimeSignatureAdjuster # imm = 0x351E
# %bb.1005:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$24764, %ax             # imm = 0x60BC
	jne	.LBB44_1069
# %bb.1006:                             # %f_in_check.split2834
	movw	$24764, BasicBlockSignatureTracker # imm = 0x60BC
	movw	$210, RunTimeSignatureAdjuster
.LBB44_1007:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$208, %ax
	xorw	%cx, %ax
	cmpw	$24766, %ax             # imm = 0x60BE
	jne	.LBB44_1069
# %bb.1008:                             # %f_in_check.split2780
	movw	$24766, BasicBlockSignatureTracker # imm = 0x60BE
	movw	$162, RunTimeSignatureAdjuster
.LBB44_1009:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$209, %ax
	xorw	%cx, %ax
	cmpw	$24781, %ax             # imm = 0x60CD
	jne	.LBB44_1069
# %bb.1010:                             # %f_in_check.split2760
	movw	$24781, BasicBlockSignatureTracker # imm = 0x60CD
	movw	$198, RunTimeSignatureAdjuster
.LBB44_1011:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$208, %ax
	xorw	%cx, %ax
	cmpw	$24795, %ax             # imm = 0x60DB
	jne	.LBB44_1069
# %bb.1012:                             # %f_in_check.split2756
	movw	$24795, BasicBlockSignatureTracker # imm = 0x60DB
	movw	$16282, RunTimeSignatureAdjuster # imm = 0x3F9A
.LBB44_1013:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16302, %ax             # imm = 0x3FAE
	xorw	%cx, %ax
	cmpw	$24815, %ax             # imm = 0x60EF
	jne	.LBB44_1069
# %bb.1014:                             # %f_in_check.split2716
	movw	$24815, BasicBlockSignatureTracker # imm = 0x60EF
	movw	$15945, RunTimeSignatureAdjuster # imm = 0x3E49
.LBB44_1015:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15956, %ax             # imm = 0x3E54
	xorw	%cx, %ax
	cmpw	$24818, %ax             # imm = 0x60F2
	jne	.LBB44_1069
# %bb.1016:                             # %f_in_check.split2676
	movl	$0, (%r14)
	movw	$24818, BasicBlockSignatureTracker # imm = 0x60F2
	movw	$11375, RunTimeSignatureAdjuster # imm = 0x2C6F
.LBB44_1017:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11368, %ax             # imm = 0x2C68
	xorw	%cx, %ax
	cmpw	$24821, %ax             # imm = 0x60F5
	jne	.LBB44_1069
# %bb.1018:                             # %f_in_check.split1822
	movl	(%r14), %eax
	movw	$24821, BasicBlockSignatureTracker # imm = 0x60F5
	movw	$-10542, RunTimeSignatureAdjuster # imm = 0xD6D2
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB44_1019:                            # %CFerrorHandler.f_in_check.loopexit
	jmp	.LBB44_1069
.LBB44_1020:                            # %CFerrorHandler.f_in_check.loopexit1
	jmp	.LBB44_1069
.LBB44_1021:                            # %CFerrorHandler.f_in_check.loopexit2
	jmp	.LBB44_1069
.LBB44_1022:                            # %CFerrorHandler.f_in_check.loopexit3
	jmp	.LBB44_1069
.LBB44_1023:                            # %CFerrorHandler.f_in_check.loopexit4
	jmp	.LBB44_1069
.LBB44_1024:                            # %CFerrorHandler.f_in_check.loopexit5
	jmp	.LBB44_1069
.LBB44_1025:                            # %CFerrorHandler.f_in_check.loopexit6
	jmp	.LBB44_1069
.LBB44_1026:                            # %CFerrorHandler.f_in_check.loopexit7
	jmp	.LBB44_1069
.LBB44_1027:                            # %CFerrorHandler.f_in_check.loopexit8
	jmp	.LBB44_1069
.LBB44_1028:                            # %CFerrorHandler.f_in_check.loopexit9
	jmp	.LBB44_1069
.LBB44_1029:                            # %CFerrorHandler.f_in_check.loopexit10
	jmp	.LBB44_1069
.LBB44_1030:                            # %CFerrorHandler.f_in_check.loopexit11
	jmp	.LBB44_1069
.LBB44_1031:                            # %CFerrorHandler.f_in_check.loopexit12
	jmp	.LBB44_1069
.LBB44_1032:                            # %CFerrorHandler.f_in_check.loopexit13
	jmp	.LBB44_1069
.LBB44_1033:                            # %CFerrorHandler.f_in_check.loopexit14
	jmp	.LBB44_1069
.LBB44_1034:                            # %CFerrorHandler.f_in_check.loopexit15
	jmp	.LBB44_1069
.LBB44_1035:                            # %CFerrorHandler.f_in_check.loopexit16
	jmp	.LBB44_1069
.LBB44_1036:                            # %CFerrorHandler.f_in_check.loopexit17
	jmp	.LBB44_1069
.LBB44_1037:                            # %CFerrorHandler.f_in_check.loopexit18
	jmp	.LBB44_1069
.LBB44_1038:                            # %CFerrorHandler.f_in_check.loopexit19
	jmp	.LBB44_1069
.LBB44_1039:                            # %CFerrorHandler.f_in_check.loopexit20
	jmp	.LBB44_1069
.LBB44_1040:                            # %CFerrorHandler.f_in_check.loopexit21
	jmp	.LBB44_1069
.LBB44_1041:                            # %CFerrorHandler.f_in_check.loopexit22
	jmp	.LBB44_1069
.LBB44_1042:                            # %CFerrorHandler.f_in_check.loopexit23
	jmp	.LBB44_1069
.LBB44_1043:                            # %CFerrorHandler.f_in_check.loopexit24
	jmp	.LBB44_1069
.LBB44_1044:                            # %CFerrorHandler.f_in_check.loopexit25
	jmp	.LBB44_1069
.LBB44_1045:                            # %CFerrorHandler.f_in_check.loopexit26
	jmp	.LBB44_1069
.LBB44_1046:                            # %CFerrorHandler.f_in_check.loopexit27
	jmp	.LBB44_1069
.LBB44_1047:                            # %CFerrorHandler.f_in_check.loopexit28
	jmp	.LBB44_1069
.LBB44_1048:                            # %CFerrorHandler.f_in_check.loopexit29
	jmp	.LBB44_1069
.LBB44_1049:                            # %CFerrorHandler.f_in_check.loopexit30
	jmp	.LBB44_1069
.LBB44_1050:                            # %CFerrorHandler.f_in_check.loopexit31
	jmp	.LBB44_1069
.LBB44_1051:                            # %CFerrorHandler.f_in_check.loopexit32
	jmp	.LBB44_1069
.LBB44_1052:                            # %CFerrorHandler.f_in_check.loopexit33
	jmp	.LBB44_1069
.LBB44_1053:                            # %CFerrorHandler.f_in_check.loopexit34
	jmp	.LBB44_1069
.LBB44_1054:                            # %CFerrorHandler.f_in_check.loopexit35
	jmp	.LBB44_1069
.LBB44_1055:                            # %CFerrorHandler.f_in_check.loopexit36
	jmp	.LBB44_1069
.LBB44_1056:                            # %CFerrorHandler.f_in_check.loopexit37
	jmp	.LBB44_1069
.LBB44_1057:                            # %CFerrorHandler.f_in_check.loopexit38
	jmp	.LBB44_1069
.LBB44_1058:                            # %CFerrorHandler.f_in_check.loopexit39
	jmp	.LBB44_1069
.LBB44_1059:                            # %CFerrorHandler.f_in_check.loopexit40
	jmp	.LBB44_1069
.LBB44_1060:                            # %CFerrorHandler.f_in_check.loopexit41
	jmp	.LBB44_1069
.LBB44_1061:                            # %CFerrorHandler.f_in_check.loopexit42
	jmp	.LBB44_1069
.LBB44_1062:                            # %CFerrorHandler.f_in_check.loopexit43
	jmp	.LBB44_1069
.LBB44_1063:                            # %CFerrorHandler.f_in_check.loopexit44
	jmp	.LBB44_1069
.LBB44_1064:                            # %CFerrorHandler.f_in_check.loopexit45
	jmp	.LBB44_1069
.LBB44_1065:                            # %CFerrorHandler.f_in_check.loopexit46
	jmp	.LBB44_1069
.LBB44_1066:                            # %CFerrorHandler.f_in_check.loopexit47
	jmp	.LBB44_1069
.LBB44_1067:                            # %CFerrorHandler.f_in_check.loopexit48
	jmp	.LBB44_1069
.LBB44_1068:                            # %CFerrorHandler.f_in_check.loopexit49
	jmp	.LBB44_1069
.LBB44_1069:                            # %CFerrorHandler.f_in_check
	callq	FAULT_DETECTED_CFC
.Lfunc_end44:
	.size	f_in_check, .Lfunc_end44-f_in_check
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI44_0:
	.quad	.LBB44_515
	.quad	.LBB44_837
	.quad	.LBB44_669
	.quad	.LBB44_837
	.quad	.LBB44_827
	.quad	.LBB44_837
	.quad	.LBB44_597
	.quad	.LBB44_837
	.quad	.LBB44_683
	.quad	.LBB44_837
	.quad	.LBB44_525
.LJTI44_1:
	.quad	.LBB44_10
	.quad	.LBB44_332
	.quad	.LBB44_164
	.quad	.LBB44_332
	.quad	.LBB44_322
	.quad	.LBB44_332
	.quad	.LBB44_92
	.quad	.LBB44_332
	.quad	.LBB44_178
	.quad	.LBB44_332
	.quad	.LBB44_20
                                        # -- End function
	.text
	.globl	extended_in_check       # -- Begin function extended_in_check
	.p2align	4, 0x90
	.type	extended_in_check,@function
extended_in_check:                      # @extended_in_check
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movl	Variant, %eax
	movw	$24841, BasicBlockSignatureTracker # imm = 0x6109
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB45_3
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$24860, %ax             # imm = 0x611C
	jne	.LBB45_207
# %bb.2:                                # %extended_in_check.split
	movl	$0, -8(%rbp)
	movw	$24860, BasicBlockSignatureTracker # imm = 0x611C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB45_203
.LBB45_3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$24861, %ax             # imm = 0x611D
	jne	.LBB45_207
# %bb.4:                                # %extended_in_check.split413
	movl	white_to_move, %eax
	movw	$24861, BasicBlockSignatureTracker # imm = 0x611D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB45_103
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$24869, %ax             # imm = 0x6125
	jne	.LBB45_207
# %bb.6:                                # %extended_in_check.split417
	movl	wking_loc, %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$24869, BasicBlockSignatureTracker # imm = 0x6125
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB45_9
# %bb.7:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$24871, %ax             # imm = 0x6127
	jne	.LBB45_207
# %bb.8:                                # %extended_in_check.split423
	movl	-4(%rbp), %eax
	movw	$24871, BasicBlockSignatureTracker # imm = 0x6127
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB45_11
.LBB45_9:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$24874, %ax             # imm = 0x612A
	jne	.LBB45_207
# %bb.10:                               # %extended_in_check.split421
	movl	$2, -8(%rbp)
	movw	$24874, BasicBlockSignatureTracker # imm = 0x612A
	movw	$54, RunTimeSignatureAdjuster
	jmp	.LBB45_203
.LBB45_11:                              # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-32673, %ax            # imm = 0x805F
	cmpw	$-7816, %ax             # imm = 0xE178
	jne	.LBB45_207
# %bb.12:                               # %extended_in_check.split425
	movw	$-7816, BasicBlockSignatureTracker # imm = 0xE178
	movw	$-32673, RunTimeSignatureAdjuster # imm = 0x805F
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$24879, %ax             # imm = 0x612F
	jne	.LBB45_207
# %bb.14:                               # %extended_in_check.split571
	movl	wking_loc, %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$24879, BasicBlockSignatureTracker # imm = 0x612F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB45_17
# %bb.15:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$106, %ax
	cmpw	$24901, %ax             # imm = 0x6145
	jne	.LBB45_207
# %bb.16:                               # %extended_in_check.split429
	movl	-4(%rbp), %eax
	movw	$24901, BasicBlockSignatureTracker # imm = 0x6145
	movw	$106, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB45_19
.LBB45_17:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$101, %ax
	xorw	%cx, %ax
	cmpw	$24906, %ax             # imm = 0x614A
	jne	.LBB45_207
# %bb.18:                               # %extended_in_check.split427
	movl	$2, -8(%rbp)
	movw	$24906, BasicBlockSignatureTracker # imm = 0x614A
	movw	$86, RunTimeSignatureAdjuster
	jmp	.LBB45_203
.LBB45_19:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12054, %ax            # imm = 0xD0EA
	cmpw	$-20049, %ax            # imm = 0xB1AF
	jne	.LBB45_207
# %bb.20:                               # %extended_in_check.split431
	movw	$-20049, BasicBlockSignatureTracker # imm = 0xB1AF
	movw	$-12054, RunTimeSignatureAdjuster # imm = 0xD0EA
# %bb.21:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$24907, %ax             # imm = 0x614B
	jne	.LBB45_207
# %bb.22:                               # %extended_in_check.split573
	movl	wking_loc, %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$24907, BasicBlockSignatureTracker # imm = 0x614B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB45_25
# %bb.23:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$24915, %ax             # imm = 0x6153
	jne	.LBB45_207
# %bb.24:                               # %extended_in_check.split435
	movl	-4(%rbp), %eax
	movw	$24915, BasicBlockSignatureTracker # imm = 0x6153
	movw	$24, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB45_27
.LBB45_25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$221, %ax
	xorw	%cx, %ax
	cmpw	$24982, %ax             # imm = 0x6196
	jne	.LBB45_207
# %bb.26:                               # %extended_in_check.split433
	movl	$2, -8(%rbp)
	movw	$24982, BasicBlockSignatureTracker # imm = 0x6196
	movw	$138, RunTimeSignatureAdjuster
	jmp	.LBB45_203
.LBB45_27:                              # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30360, %ax             # imm = 0x7698
	cmpw	$6091, %ax              # imm = 0x17CB
	jne	.LBB45_207
# %bb.28:                               # %extended_in_check.split437
	movw	$6091, BasicBlockSignatureTracker # imm = 0x17CB
	movw	$30360, RunTimeSignatureAdjuster # imm = 0x7698
# %bb.29:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$203, %ax
	xorw	%cx, %ax
	cmpw	$24984, %ax             # imm = 0x6198
	jne	.LBB45_207
# %bb.30:                               # %extended_in_check.split575
	movl	wking_loc, %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$24984, BasicBlockSignatureTracker # imm = 0x6198
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB45_33
# %bb.31:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$24997, %ax             # imm = 0x61A5
	jne	.LBB45_207
# %bb.32:                               # %extended_in_check.split441
	movl	-4(%rbp), %eax
	movw	$24997, BasicBlockSignatureTracker # imm = 0x61A5
	movw	$61, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB45_35
.LBB45_33:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$25075, %ax             # imm = 0x61F3
	jne	.LBB45_207
# %bb.34:                               # %extended_in_check.split439
	movl	$2, -8(%rbp)
	movw	$25075, BasicBlockSignatureTracker # imm = 0x61F3
	movw	$239, RunTimeSignatureAdjuster
	jmp	.LBB45_203
.LBB45_35:                              # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1165, %ax             # imm = 0xFB73
	cmpw	$-25898, %ax            # imm = 0x9AD6
	jne	.LBB45_207
# %bb.36:                               # %extended_in_check.split443
	movw	$-25898, BasicBlockSignatureTracker # imm = 0x9AD6
	movw	$-1165, RunTimeSignatureAdjuster # imm = 0xFB73
# %bb.37:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$941, %ax               # imm = 0x3AD
	xorw	%cx, %ax
	cmpw	$25096, %ax             # imm = 0x6208
	jne	.LBB45_207
# %bb.38:                               # %extended_in_check.split577
	movl	wking_loc, %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25096, BasicBlockSignatureTracker # imm = 0x6208
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB45_45
# %bb.39:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$25101, %ax             # imm = 0x620D
	jne	.LBB45_207
# %bb.40:                               # %extended_in_check.split447
	movl	-4(%rbp), %eax
	movw	$25101, BasicBlockSignatureTracker # imm = 0x620D
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	je	.LBB45_45
# %bb.41:                               # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-21050, %ax            # imm = 0xADC6
	cmpw	$-12341, %ax            # imm = 0xCFCB
	jne	.LBB45_207
# %bb.42:                               # %extended_in_check.split449
	movw	$-12341, BasicBlockSignatureTracker # imm = 0xCFCB
	movw	$-21050, RunTimeSignatureAdjuster # imm = 0xADC6
# %bb.43:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$25104, %ax             # imm = 0x6210
	jne	.LBB45_207
# %bb.44:                               # %extended_in_check.split579
	movl	-4(%rbp), %eax
	movw	$25104, BasicBlockSignatureTracker # imm = 0x6210
	movw	$24, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB45_47
.LBB45_45:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$25118, %ax             # imm = 0x621E
	jne	.LBB45_207
# %bb.46:                               # %extended_in_check.split445
	movl	$2, -8(%rbp)
	movw	$25118, BasicBlockSignatureTracker # imm = 0x621E
	movw	$770, RunTimeSignatureAdjuster # imm = 0x302
	jmp	.LBB45_203
.LBB45_47:                              # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8478, %ax              # imm = 0x211E
	cmpw	$17166, %ax             # imm = 0x430E
	jne	.LBB45_207
# %bb.48:                               # %extended_in_check.split451
	movw	$17166, BasicBlockSignatureTracker # imm = 0x430E
	movw	$8478, RunTimeSignatureAdjuster # imm = 0x211E
# %bb.49:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$25123, %ax             # imm = 0x6223
	jne	.LBB45_207
# %bb.50:                               # %extended_in_check.split581
	movl	wking_loc, %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25123, BasicBlockSignatureTracker # imm = 0x6223
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB45_57
# %bb.51:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$25128, %ax             # imm = 0x6228
	jne	.LBB45_207
# %bb.52:                               # %extended_in_check.split455
	movl	-4(%rbp), %eax
	movw	$25128, BasicBlockSignatureTracker # imm = 0x6228
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	je	.LBB45_57
# %bb.53:                               # %Buffer__6
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29524, %ax             # imm = 0x7354
	cmpw	$4476, %ax              # imm = 0x117C
	jne	.LBB45_207
# %bb.54:                               # %extended_in_check.split457
	movw	$4476, BasicBlockSignatureTracker # imm = 0x117C
	movw	$29524, RunTimeSignatureAdjuster # imm = 0x7354
# %bb.55:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$25133, %ax             # imm = 0x622D
	jne	.LBB45_207
# %bb.56:                               # %extended_in_check.split583
	movl	-4(%rbp), %eax
	movw	$25133, BasicBlockSignatureTracker # imm = 0x622D
	movw	$14, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB45_59
.LBB45_57:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$25148, %ax             # imm = 0x623C
	jne	.LBB45_207
# %bb.58:                               # %extended_in_check.split453
	movl	$2, -8(%rbp)
	movw	$25148, BasicBlockSignatureTracker # imm = 0x623C
	movw	$800, RunTimeSignatureAdjuster # imm = 0x320
	jmp	.LBB45_203
.LBB45_59:                              # %Buffer__7
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9642, %ax             # imm = 0xDA56
	cmpw	$-18309, %ax            # imm = 0xB87B
	jne	.LBB45_207
# %bb.60:                               # %extended_in_check.split459
	movw	$-18309, BasicBlockSignatureTracker # imm = 0xB87B
	movw	$-9642, RunTimeSignatureAdjuster # imm = 0xDA56
# %bb.61:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$109, %ax
	xorw	%cx, %ax
	cmpw	$25152, %ax             # imm = 0x6240
	jne	.LBB45_207
# %bb.62:                               # %extended_in_check.split585
	movl	wking_loc, %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25152, BasicBlockSignatureTracker # imm = 0x6240
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB45_65
# %bb.63:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$25171, %ax             # imm = 0x6253
	jne	.LBB45_207
# %bb.64:                               # %extended_in_check.split463
	movl	-4(%rbp), %eax
	movw	$25171, BasicBlockSignatureTracker # imm = 0x6253
	movw	$19, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB45_67
.LBB45_65:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$25173, %ax             # imm = 0x6255
	jne	.LBB45_207
# %bb.66:                               # %extended_in_check.split461
	movl	$2, -8(%rbp)
	movw	$25173, BasicBlockSignatureTracker # imm = 0x6255
	movw	$841, RunTimeSignatureAdjuster # imm = 0x349
	jmp	.LBB45_203
.LBB45_67:                              # %Buffer__8
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-26928, %ax            # imm = 0x96D0
	cmpw	$-2941, %ax             # imm = 0xF483
	jne	.LBB45_207
# %bb.68:                               # %extended_in_check.split465
	movw	$-2941, BasicBlockSignatureTracker # imm = 0xF483
	movw	$-26928, RunTimeSignatureAdjuster # imm = 0x96D0
# %bb.69:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$25180, %ax             # imm = 0x625C
	jne	.LBB45_207
# %bb.70:                               # %extended_in_check.split587
	movl	wking_loc, %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25180, BasicBlockSignatureTracker # imm = 0x625C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB45_73
# %bb.71:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$25185, %ax             # imm = 0x6261
	jne	.LBB45_207
# %bb.72:                               # %extended_in_check.split469
	movl	-4(%rbp), %eax
	movw	$25185, BasicBlockSignatureTracker # imm = 0x6261
	movw	$61, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB45_75
.LBB45_73:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$48, %ax
	xorw	%cx, %ax
	cmpw	$25196, %ax             # imm = 0x626C
	jne	.LBB45_207
# %bb.74:                               # %extended_in_check.split467
	movl	$2, -8(%rbp)
	movw	$25196, BasicBlockSignatureTracker # imm = 0x626C
	movw	$880, RunTimeSignatureAdjuster # imm = 0x370
	jmp	.LBB45_203
.LBB45_75:                              # %Buffer__9
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3637, %ax             # imm = 0xF1CB
	cmpw	$-27734, %ax            # imm = 0x93AA
	jne	.LBB45_207
# %bb.76:                               # %extended_in_check.split471
	movw	$-27734, BasicBlockSignatureTracker # imm = 0x93AA
	movw	$-3637, RunTimeSignatureAdjuster # imm = 0xF1CB
# %bb.77:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$25197, %ax             # imm = 0x626D
	jne	.LBB45_207
# %bb.78:                               # %extended_in_check.split589
	movl	$0, -4(%rbp)
	movw	$25197, BasicBlockSignatureTracker # imm = 0x626D
	movw	$0, RunTimeSignatureAdjuster
.LBB45_79:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$25206, %ax             # imm = 0x6276
	jne	.LBB45_205
# %bb.80:                               # %extended_in_check.split473
                                        #   in Loop: Header=BB45_79 Depth=1
	movl	-4(%rbp), %eax
	movw	$25206, BasicBlockSignatureTracker # imm = 0x6276
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jge	.LBB45_89
# %bb.81:                               #   in Loop: Header=BB45_79 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$25207, %ax             # imm = 0x6277
	jne	.LBB45_205
# %bb.82:                               # %extended_in_check.split475
                                        #   in Loop: Header=BB45_79 Depth=1
	movl	wking_loc, %eax
	movslq	-4(%rbp), %rcx
	addl	extended_in_check.knight_o(,%rcx,4), %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$25207, BasicBlockSignatureTracker # imm = 0x6277
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB45_85
# %bb.83:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$242, %ax
	cmpw	$25221, %ax             # imm = 0x6285
	jne	.LBB45_207
# %bb.84:                               # %extended_in_check.split479
	movl	$2, -8(%rbp)
	movw	$25221, BasicBlockSignatureTracker # imm = 0x6285
	movw	$921, RunTimeSignatureAdjuster # imm = 0x399
	jmp	.LBB45_203
.LBB45_85:                              #   in Loop: Header=BB45_79 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$211, %ax
	cmpw	$25252, %ax             # imm = 0x62A4
	jne	.LBB45_205
# %bb.86:                               # %extended_in_check.split481
                                        #   in Loop: Header=BB45_79 Depth=1
	movw	$25252, BasicBlockSignatureTracker # imm = 0x62A4
	movw	$0, RunTimeSignatureAdjuster
# %bb.87:                               #   in Loop: Header=BB45_79 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$25262, %ax             # imm = 0x62AE
	jne	.LBB45_205
# %bb.88:                               # %extended_in_check.split483
                                        #   in Loop: Header=BB45_79 Depth=1
	movl	-4(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -4(%rbp)
	movw	$25262, BasicBlockSignatureTracker # imm = 0x62AE
	movw	$195, RunTimeSignatureAdjuster
	jmp	.LBB45_79
.LBB45_89:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$196, %ax
	cmpw	$25266, %ax             # imm = 0x62B2
	jne	.LBB45_207
# %bb.90:                               # %extended_in_check.split477
	movl	wking_loc, %edi
	movw	$25266, BasicBlockSignatureTracker # imm = 0x62B2
	movw	$32615, RunTimeSignatureAdjuster # imm = 0x7F67
	xorl	%esi, %esi
	callq	is_attacked
	movw	$25266, BasicBlockSignatureTracker # imm = 0x62B2
	movw	$32615, RunTimeSignatureAdjuster # imm = 0x7F67
	movw	$25266, BasicBlockSignatureTracker # imm = 0x62B2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB45_101
# %bb.91:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$25268, %ax             # imm = 0x62B4
	jne	.LBB45_207
# %bb.92:                               # %extended_in_check.split485
	movl	Variant, %eax
	movw	$25268, BasicBlockSignatureTracker # imm = 0x62B4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB45_95
# %bb.93:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$25273, %ax             # imm = 0x62B9
	jne	.LBB45_207
# %bb.94:                               # %extended_in_check.split491
	movl	Variant, %eax
	movw	$25273, BasicBlockSignatureTracker # imm = 0x62B9
	movw	$13, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB45_97
.LBB45_95:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$118, %ax
	xorw	%cx, %ax
	cmpw	$25282, %ax             # imm = 0x62C2
	jne	.LBB45_207
# %bb.96:                               # %extended_in_check.split489
	movl	$2, -8(%rbp)
	movw	$25282, BasicBlockSignatureTracker # imm = 0x62C2
	movw	$990, RunTimeSignatureAdjuster # imm = 0x3DE
	jmp	.LBB45_203
.LBB45_97:                              # %Buffer__10
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-15239, %ax            # imm = 0xC479
	cmpw	$-22848, %ax            # imm = 0xA6C0
	jne	.LBB45_207
# %bb.98:                               # %extended_in_check.split493
	movw	$-22848, BasicBlockSignatureTracker # imm = 0xA6C0
	movw	$-15239, RunTimeSignatureAdjuster # imm = 0xC479
# %bb.99:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$127, %ax
	xorw	%cx, %ax
	cmpw	$25286, %ax             # imm = 0x62C6
	jne	.LBB45_207
# %bb.100:                              # %extended_in_check.split591
	movl	$1, -8(%rbp)
	movw	$25286, BasicBlockSignatureTracker # imm = 0x62C6
	movw	$986, RunTimeSignatureAdjuster # imm = 0x3DA
	jmp	.LBB45_203
.LBB45_101:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$25287, %ax             # imm = 0x62C7
	jne	.LBB45_207
# %bb.102:                              # %extended_in_check.split487
	movw	$25287, BasicBlockSignatureTracker # imm = 0x62C7
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB45_201
.LBB45_103:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1019, %ax              # imm = 0x3FB
	cmpw	$25318, %ax             # imm = 0x62E6
	jne	.LBB45_207
# %bb.104:                              # %extended_in_check.split419
	movl	bking_loc, %eax
	subl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25318, BasicBlockSignatureTracker # imm = 0x62E6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB45_107
# %bb.105:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$25332, %ax             # imm = 0x62F4
	jne	.LBB45_207
# %bb.106:                              # %extended_in_check.split499
	movl	-4(%rbp), %eax
	movw	$25332, BasicBlockSignatureTracker # imm = 0x62F4
	movw	$18, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB45_109
.LBB45_107:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$25336, %ax             # imm = 0x62F8
	jne	.LBB45_207
# %bb.108:                              # %extended_in_check.split497
	movl	$2, -8(%rbp)
	movw	$25336, BasicBlockSignatureTracker # imm = 0x62F8
	movw	$996, RunTimeSignatureAdjuster # imm = 0x3E4
	jmp	.LBB45_203
.LBB45_109:                             # %Buffer__11
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-31519, %ax            # imm = 0x84E1
	cmpw	$-6635, %ax             # imm = 0xE615
	jne	.LBB45_207
# %bb.110:                              # %extended_in_check.split501
	movw	$-6635, BasicBlockSignatureTracker # imm = 0xE615
	movw	$-31519, RunTimeSignatureAdjuster # imm = 0x84E1
# %bb.111:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$25342, %ax             # imm = 0x62FE
	jne	.LBB45_207
# %bb.112:                              # %extended_in_check.split593
	movl	bking_loc, %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25342, BasicBlockSignatureTracker # imm = 0x62FE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB45_115
# %bb.113:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$495, %ax               # imm = 0x1EF
	cmpw	$25361, %ax             # imm = 0x6311
	jne	.LBB45_207
# %bb.114:                              # %extended_in_check.split505
	movl	-4(%rbp), %eax
	movw	$25361, BasicBlockSignatureTracker # imm = 0x6311
	movw	$495, RunTimeSignatureAdjuster # imm = 0x1EF
	cmpl	$9, %eax
	jne	.LBB45_117
.LBB45_115:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$491, %ax               # imm = 0x1EB
	xorw	%cx, %ax
	cmpw	$25365, %ax             # imm = 0x6315
	jne	.LBB45_207
# %bb.116:                              # %extended_in_check.split503
	movl	$2, -8(%rbp)
	movw	$25365, BasicBlockSignatureTracker # imm = 0x6315
	movw	$521, RunTimeSignatureAdjuster # imm = 0x209
	jmp	.LBB45_203
.LBB45_117:                             # %Buffer__12
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29863, %ax            # imm = 0x8B59
	cmpw	$-6072, %ax             # imm = 0xE848
	jne	.LBB45_207
# %bb.118:                              # %extended_in_check.split507
	movw	$-6072, BasicBlockSignatureTracker # imm = 0xE848
	movw	$-29863, RunTimeSignatureAdjuster # imm = 0x8B59
# %bb.119:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$25374, %ax             # imm = 0x631E
	jne	.LBB45_207
# %bb.120:                              # %extended_in_check.split595
	movl	bking_loc, %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25374, BasicBlockSignatureTracker # imm = 0x631E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB45_123
# %bb.121:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$25384, %ax             # imm = 0x6328
	jne	.LBB45_207
# %bb.122:                              # %extended_in_check.split511
	movl	-4(%rbp), %eax
	movw	$25384, BasicBlockSignatureTracker # imm = 0x6328
	movw	$54, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB45_125
.LBB45_123:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$25397, %ax             # imm = 0x6335
	jne	.LBB45_207
# %bb.124:                              # %extended_in_check.split509
	movl	$2, -8(%rbp)
	movw	$25397, BasicBlockSignatureTracker # imm = 0x6335
	movw	$553, RunTimeSignatureAdjuster # imm = 0x229
	jmp	.LBB45_203
.LBB45_125:                             # %Buffer__13
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5815, %ax              # imm = 0x16B7
	cmpw	$30111, %ax             # imm = 0x759F
	jne	.LBB45_207
# %bb.126:                              # %extended_in_check.split513
	movw	$30111, BasicBlockSignatureTracker # imm = 0x759F
	movw	$5815, RunTimeSignatureAdjuster # imm = 0x16B7
# %bb.127:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$25398, %ax             # imm = 0x6336
	jne	.LBB45_207
# %bb.128:                              # %extended_in_check.split597
	movl	bking_loc, %eax
	addl	$12, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25398, BasicBlockSignatureTracker # imm = 0x6336
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB45_131
# %bb.129:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$25405, %ax             # imm = 0x633D
	jne	.LBB45_207
# %bb.130:                              # %extended_in_check.split517
	movl	-4(%rbp), %eax
	movw	$25405, BasicBlockSignatureTracker # imm = 0x633D
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB45_133
.LBB45_131:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$65, %ax
	xorw	%cx, %ax
	cmpw	$25463, %ax             # imm = 0x6377
	jne	.LBB45_207
# %bb.132:                              # %extended_in_check.split515
	movl	$2, -8(%rbp)
	movw	$25463, BasicBlockSignatureTracker # imm = 0x6377
	movw	$619, RunTimeSignatureAdjuster # imm = 0x26B
	jmp	.LBB45_203
.LBB45_133:                             # %Buffer__14
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24930, %ax             # imm = 0x6162
	cmpw	$607, %ax               # imm = 0x25F
	jne	.LBB45_207
# %bb.134:                              # %extended_in_check.split519
	movw	$607, BasicBlockSignatureTracker # imm = 0x25F
	movw	$24930, RunTimeSignatureAdjuster # imm = 0x6162
# %bb.135:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$190, %ax
	xorw	%cx, %ax
	cmpw	$25475, %ax             # imm = 0x6383
	jne	.LBB45_207
# %bb.136:                              # %extended_in_check.split599
	movl	bking_loc, %eax
	subl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25475, BasicBlockSignatureTracker # imm = 0x6383
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB45_143
# %bb.137:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$25476, %ax             # imm = 0x6384
	jne	.LBB45_207
# %bb.138:                              # %extended_in_check.split523
	movl	-4(%rbp), %eax
	movw	$25476, BasicBlockSignatureTracker # imm = 0x6384
	movw	$7, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	je	.LBB45_143
# %bb.139:                              # %Buffer__15
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4120, %ax              # imm = 0x1018
	cmpw	$29596, %ax             # imm = 0x739C
	jne	.LBB45_207
# %bb.140:                              # %extended_in_check.split525
	movw	$29596, BasicBlockSignatureTracker # imm = 0x739C
	movw	$4120, RunTimeSignatureAdjuster # imm = 0x1018
# %bb.141:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$25483, %ax             # imm = 0x638B
	jne	.LBB45_207
# %bb.142:                              # %extended_in_check.split601
	movl	-4(%rbp), %eax
	movw	$25483, BasicBlockSignatureTracker # imm = 0x638B
	movw	$8, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB45_145
.LBB45_143:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$25489, %ax             # imm = 0x6391
	jne	.LBB45_207
# %bb.144:                              # %extended_in_check.split521
	movl	$2, -8(%rbp)
	movw	$25489, BasicBlockSignatureTracker # imm = 0x6391
	movw	$653, RunTimeSignatureAdjuster # imm = 0x28D
	jmp	.LBB45_203
.LBB45_145:                             # %Buffer__16
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25552, %ax             # imm = 0x63D0
	cmpw	$91, %ax
	jne	.LBB45_207
# %bb.146:                              # %extended_in_check.split527
	movw	$91, BasicBlockSignatureTracker
	movw	$25552, RunTimeSignatureAdjuster # imm = 0x63D0
# %bb.147:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$25490, %ax             # imm = 0x6392
	jne	.LBB45_207
# %bb.148:                              # %extended_in_check.split603
	movl	bking_loc, %eax
	subl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25490, BasicBlockSignatureTracker # imm = 0x6392
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB45_155
# %bb.149:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$25492, %ax             # imm = 0x6394
	jne	.LBB45_207
# %bb.150:                              # %extended_in_check.split531
	movl	-4(%rbp), %eax
	movw	$25492, BasicBlockSignatureTracker # imm = 0x6394
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	je	.LBB45_155
# %bb.151:                              # %Buffer__17
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4514, %ax              # imm = 0x11A2
	cmpw	$29238, %ax             # imm = 0x7236
	jne	.LBB45_207
# %bb.152:                              # %extended_in_check.split533
	movw	$29238, BasicBlockSignatureTracker # imm = 0x7236
	movw	$4514, RunTimeSignatureAdjuster # imm = 0x11A2
# %bb.153:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$25517, %ax             # imm = 0x63AD
	jne	.LBB45_207
# %bb.154:                              # %extended_in_check.split605
	movl	-4(%rbp), %eax
	movw	$25517, BasicBlockSignatureTracker # imm = 0x63AD
	movw	$63, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB45_157
.LBB45_155:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$46, %ax
	xorw	%cx, %ax
	cmpw	$25532, %ax             # imm = 0x63BC
	jne	.LBB45_207
# %bb.156:                              # %extended_in_check.split529
	movl	$2, -8(%rbp)
	movw	$25532, BasicBlockSignatureTracker # imm = 0x63BC
	movw	$672, RunTimeSignatureAdjuster # imm = 0x2A0
	jmp	.LBB45_203
.LBB45_157:                             # %Buffer__18
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9265, %ax             # imm = 0xDBCF
	cmpw	$-18334, %ax            # imm = 0xB862
	jne	.LBB45_207
# %bb.158:                              # %extended_in_check.split535
	movw	$-18334, BasicBlockSignatureTracker # imm = 0xB862
	movw	$-9265, RunTimeSignatureAdjuster # imm = 0xDBCF
# %bb.159:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$96, %ax
	xorw	%cx, %ax
	cmpw	$25549, %ax             # imm = 0x63CD
	jne	.LBB45_207
# %bb.160:                              # %extended_in_check.split607
	movl	bking_loc, %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25549, BasicBlockSignatureTracker # imm = 0x63CD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB45_163
# %bb.161:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$25550, %ax             # imm = 0x63CE
	jne	.LBB45_207
# %bb.162:                              # %extended_in_check.split539
	movl	-4(%rbp), %eax
	movw	$25550, BasicBlockSignatureTracker # imm = 0x63CE
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB45_165
.LBB45_163:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$25569, %ax             # imm = 0x63E1
	jne	.LBB45_207
# %bb.164:                              # %extended_in_check.split537
	movl	$2, -8(%rbp)
	movw	$25569, BasicBlockSignatureTracker # imm = 0x63E1
	movw	$765, RunTimeSignatureAdjuster # imm = 0x2FD
	jmp	.LBB45_203
.LBB45_165:                             # %Buffer__19
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9206, %ax              # imm = 0x23F6
	cmpw	$16440, %ax             # imm = 0x4038
	jne	.LBB45_207
# %bb.166:                              # %extended_in_check.split541
	movw	$16440, BasicBlockSignatureTracker # imm = 0x4038
	movw	$9206, RunTimeSignatureAdjuster # imm = 0x23F6
# %bb.167:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$25571, %ax             # imm = 0x63E3
	jne	.LBB45_207
# %bb.168:                              # %extended_in_check.split609
	movl	bking_loc, %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$25571, BasicBlockSignatureTracker # imm = 0x63E3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB45_171
# %bb.169:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$25585, %ax             # imm = 0x63F1
	jne	.LBB45_207
# %bb.170:                              # %extended_in_check.split545
	movl	-4(%rbp), %eax
	movw	$25585, BasicBlockSignatureTracker # imm = 0x63F1
	movw	$18, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB45_173
.LBB45_171:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$25588, %ax             # imm = 0x63F4
	jne	.LBB45_207
# %bb.172:                              # %extended_in_check.split543
	movl	$2, -8(%rbp)
	movw	$25588, BasicBlockSignatureTracker # imm = 0x63F4
	movw	$744, RunTimeSignatureAdjuster # imm = 0x2E8
	jmp	.LBB45_203
.LBB45_173:                             # %Buffer__20
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28543, %ax             # imm = 0x6F7F
	cmpw	$3214, %ax              # imm = 0xC8E
	jne	.LBB45_207
# %bb.174:                              # %extended_in_check.split547
	movw	$3214, BasicBlockSignatureTracker # imm = 0xC8E
	movw	$28543, RunTimeSignatureAdjuster # imm = 0x6F7F
# %bb.175:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2033, %ax              # imm = 0x7F1
	xorw	%cx, %ax
	cmpw	$25600, %ax             # imm = 0x6400
	jne	.LBB45_207
# %bb.176:                              # %extended_in_check.split611
	movl	$0, -4(%rbp)
	movw	$25600, BasicBlockSignatureTracker # imm = 0x6400
	movw	$0, RunTimeSignatureAdjuster
.LBB45_177:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$25614, %ax             # imm = 0x640E
	jne	.LBB45_206
# %bb.178:                              # %extended_in_check.split549
                                        #   in Loop: Header=BB45_177 Depth=1
	movl	-4(%rbp), %eax
	movw	$25614, BasicBlockSignatureTracker # imm = 0x640E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jge	.LBB45_187
# %bb.179:                              #   in Loop: Header=BB45_177 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$25648, %ax             # imm = 0x6430
	jne	.LBB45_206
# %bb.180:                              # %extended_in_check.split551
                                        #   in Loop: Header=BB45_177 Depth=1
	movl	bking_loc, %eax
	movslq	-4(%rbp), %rcx
	addl	extended_in_check.knight_o(,%rcx,4), %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$25648, BasicBlockSignatureTracker # imm = 0x6430
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB45_183
# %bb.181:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$25654, %ax             # imm = 0x6436
	jne	.LBB45_207
# %bb.182:                              # %extended_in_check.split555
	movl	$2, -8(%rbp)
	movw	$25654, BasicBlockSignatureTracker # imm = 0x6436
	movw	$1322, RunTimeSignatureAdjuster # imm = 0x52A
	jmp	.LBB45_203
.LBB45_183:                             #   in Loop: Header=BB45_177 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$25671, %ax             # imm = 0x6447
	jne	.LBB45_206
# %bb.184:                              # %extended_in_check.split557
                                        #   in Loop: Header=BB45_177 Depth=1
	movw	$25671, BasicBlockSignatureTracker # imm = 0x6447
	movw	$0, RunTimeSignatureAdjuster
# %bb.185:                              #   in Loop: Header=BB45_177 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$25672, %ax             # imm = 0x6448
	jne	.LBB45_206
# %bb.186:                              # %extended_in_check.split559
                                        #   in Loop: Header=BB45_177 Depth=1
	movl	-4(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -4(%rbp)
	movw	$25672, BasicBlockSignatureTracker # imm = 0x6448
	movw	$72, RunTimeSignatureAdjuster
	jmp	.LBB45_177
.LBB45_187:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$65, %ax
	cmpw	$25679, %ax             # imm = 0x644F
	jne	.LBB45_207
# %bb.188:                              # %extended_in_check.split553
	movl	bking_loc, %edi
	movw	$25679, BasicBlockSignatureTracker # imm = 0x644F
	movw	$31130, RunTimeSignatureAdjuster # imm = 0x799A
	movl	$1, %esi
	callq	is_attacked
	movw	$25679, BasicBlockSignatureTracker # imm = 0x644F
	movw	$31130, RunTimeSignatureAdjuster # imm = 0x799A
	movw	$25679, BasicBlockSignatureTracker # imm = 0x644F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB45_199
# %bb.189:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$25681, %ax             # imm = 0x6451
	jne	.LBB45_207
# %bb.190:                              # %extended_in_check.split561
	movl	Variant, %eax
	movw	$25681, BasicBlockSignatureTracker # imm = 0x6451
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB45_193
# %bb.191:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$25720, %ax             # imm = 0x6478
	jne	.LBB45_207
# %bb.192:                              # %extended_in_check.split567
	movl	Variant, %eax
	movw	$25720, BasicBlockSignatureTracker # imm = 0x6478
	movw	$41, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB45_195
.LBB45_193:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$25723, %ax             # imm = 0x647B
	jne	.LBB45_207
# %bb.194:                              # %extended_in_check.split565
	movl	$2, -8(%rbp)
	movw	$25723, BasicBlockSignatureTracker # imm = 0x647B
	movw	$1383, RunTimeSignatureAdjuster # imm = 0x567
	jmp	.LBB45_203
.LBB45_195:                             # %Buffer__21
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30241, %ax            # imm = 0x89DF
	cmpw	$-4697, %ax             # imm = 0xEDA7
	jne	.LBB45_207
# %bb.196:                              # %extended_in_check.split569
	movw	$-4697, BasicBlockSignatureTracker # imm = 0xEDA7
	movw	$-30241, RunTimeSignatureAdjuster # imm = 0x89DF
# %bb.197:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$249, %ax
	xorw	%cx, %ax
	cmpw	$25729, %ax             # imm = 0x6481
	jne	.LBB45_207
# %bb.198:                              # %extended_in_check.split613
	movl	$1, -8(%rbp)
	movw	$25729, BasicBlockSignatureTracker # imm = 0x6481
	movw	$1437, RunTimeSignatureAdjuster # imm = 0x59D
	jmp	.LBB45_203
.LBB45_199:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$205, %ax
	cmpw	$25730, %ax             # imm = 0x6482
	jne	.LBB45_207
# %bb.200:                              # %extended_in_check.split563
	movw	$25730, BasicBlockSignatureTracker # imm = 0x6482
	movw	$1605, RunTimeSignatureAdjuster # imm = 0x645
.LBB45_201:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1601, %ax              # imm = 0x641
	xorw	%cx, %ax
	cmpw	$25734, %ax             # imm = 0x6486
	jne	.LBB45_207
# %bb.202:                              # %extended_in_check.split495
	movl	$0, -8(%rbp)
	movw	$25734, BasicBlockSignatureTracker # imm = 0x6486
	movw	$1434, RunTimeSignatureAdjuster # imm = 0x59A
.LBB45_203:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1424, %ax              # imm = 0x590
	xorw	%cx, %ax
	cmpw	$25740, %ax             # imm = 0x648C
	jne	.LBB45_207
# %bb.204:                              # %extended_in_check.split415
	movl	-8(%rbp), %eax
	movw	$25740, BasicBlockSignatureTracker # imm = 0x648C
	movw	$0, RunTimeSignatureAdjuster
	addq	$16, %rsp
	popq	%rbp
	retq
.LBB45_205:                             # %CFerrorHandler.extended_in_check.loopexit
	jmp	.LBB45_207
.LBB45_206:                             # %CFerrorHandler.extended_in_check.loopexit1
	jmp	.LBB45_207
.LBB45_207:                             # %CFerrorHandler.extended_in_check
	callq	FAULT_DETECTED_CFC
.Lfunc_end45:
	.size	extended_in_check, .Lfunc_end45-extended_in_check
	.cfi_endproc
                                        # -- End function
	.globl	make                    # -- Begin function make
	.p2align	4, 0x90
	.type	make,@function
make:                                   # @make
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.1:                                # %make.split673
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.2:                                # %make.split671
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.3:                                # %make.split669
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.4:                                # %make.split667
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.5:                                # %make.split665
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.6:                                # %make.split663
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.7:                                # %make.split661
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.8:                                # %make.split659
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.9:                                # %make.split657
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.10:                               # %make.split655
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.11:                               # %make.split653
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.12:                               # %make.split651
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.13:                               # %make.split649
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.14:                               # %make.split647
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.15:                               # %make.split645
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.16:                               # %make.split643
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.17:                               # %make.split641
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.18:                               # %make.split639
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.19:                               # %make.split637
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.20:                               # %make.split635
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.21:                               # %make.split633
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.22:                               # %make.split631
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.23:                               # %make.split629
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.24:                               # %make.split627
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.25:                               # %make.split625
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.26:                               # %make.split623
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.27:                               # %make.split621
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.28:                               # %make.split619
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.29:                               # %make.split617
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.30:                               # %make.split615
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.31:                               # %make.split613
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.32:                               # %make.split611
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.33:                               # %make.split609
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.34:                               # %make.split607
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.35:                               # %make.split605
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.36:                               # %make.split603
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.37:                               # %make.split601
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.38:                               # %make.split599
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.39:                               # %make.split597
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.40:                               # %make.split595
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.41:                               # %make.split593
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.42:                               # %make.split591
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.43:                               # %make.split589
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.44:                               # %make.split587
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.45:                               # %make.split585
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.46:                               # %make.split583
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.47:                               # %make.split581
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.48:                               # %make.split579
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.49:                               # %make.split577
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.50:                               # %make.split575
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4570, %ax             # imm = 0xEE26
	xorw	%cx, %ax
	cmpw	$25750, %ax             # imm = 0x6496
	jne	.LBB46_171
# %bb.51:                               # %make.split573
	movabsq	$path_x, %r9
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rdi, (%rdx)
	movl	%esi, (%rbx)
	movq	(%rdx), %rsi
	movslq	(%rbx), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	20(%rsi), %esi
	movl	%esi, (%r14)
	movq	(%rdx), %rsi
	movslq	(%rbx), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	(%rsi), %esi
	movl	%esi, (%r15)
	movq	(%rdx), %rsi
	movslq	(%rbx), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	4(%rsi), %esi
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	movl	%esi, (%rcx)
	movq	(%rdx), %rsi
	movslq	(%rbx), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	8(%rsi), %esi
	movl	%esi, (%rax)
	movq	(%rdx), %rax
	movslq	(%rbx), %rsi
	imulq	$24, %rsi, %rsi
	addq	%rsi, %rax
	movl	12(%rax), %eax
	movl	%eax, (%r12)
	movq	(%rdx), %rax
	movslq	(%rbx), %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	16(%rax), %eax
	movl	%eax, (%r13)
	movl	ep_square, %eax
	movslq	ply, %rdx
	shlq	$4, %rdx
	movq	%r9, %rsi
	addq	%rdx, %rsi
	movl	%eax, 8(%rsi)
	movl	$0, ep_square
	movl	fifty, %eax
	movslq	ply, %rdx
	shlq	$4, %rdx
	addq	%rdx, %r9
	movl	%eax, 12(%r9)
	movslq	(%r15), %rax
	movl	board(,%rax,4), %eax
	movw	$25750, BasicBlockSignatureTracker # imm = 0x6496
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB46_58
# %bb.52:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$25751, %ax             # imm = 0x6497
	jne	.LBB46_171
# %bb.53:                               # %make.split463
	movslq	(%r15), %rax
	movl	board(,%rax,4), %eax
	movw	$25751, BasicBlockSignatureTracker # imm = 0x6497
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB46_58
# %bb.54:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21161, %ax             # imm = 0x52A9
	cmpw	$13886, %ax             # imm = 0x363E
	jne	.LBB46_171
# %bb.55:                               # %make.split465
	movw	$13886, BasicBlockSignatureTracker # imm = 0x363E
	movw	$21161, RunTimeSignatureAdjuster # imm = 0x52A9
# %bb.56:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$25752, %ax             # imm = 0x6498
	jne	.LBB46_171
# %bb.57:                               # %make.split675
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	board(,%rax,4), %eax
	movw	$25752, BasicBlockSignatureTracker # imm = 0x6498
	movw	$14, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB46_60
.LBB46_58:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$25753, %ax             # imm = 0x6499
	jne	.LBB46_171
# %bb.59:                               # %make.split
	movl	$0, fifty
	movw	$25753, BasicBlockSignatureTracker # imm = 0x6499
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB46_64
.LBB46_60:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22106, %ax            # imm = 0xA9A6
	cmpw	$-12994, %ax            # imm = 0xCD3E
	jne	.LBB46_171
# %bb.61:                               # %make.split467
	movw	$-12994, BasicBlockSignatureTracker # imm = 0xCD3E
	movw	$-22106, RunTimeSignatureAdjuster # imm = 0xA9A6
# %bb.62:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$25756, %ax             # imm = 0x649C
	jne	.LBB46_171
# %bb.63:                               # %make.split677
	movl	fifty, %eax
	addl	$1, %eax
	movl	%eax, fifty
	movw	$25756, BasicBlockSignatureTracker # imm = 0x649C
	movw	$5, RunTimeSignatureAdjuster
.LBB46_64:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$25759, %ax             # imm = 0x649F
	jne	.LBB46_171
# %bb.65:                               # %make.split469
	movl	(%r15), %eax
	movw	$25759, BasicBlockSignatureTracker # imm = 0x649F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB46_76
# %bb.66:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$25763, %ax             # imm = 0x64A3
	jne	.LBB46_171
# %bb.67:                               # %make.split471
	movl	piece_count, %eax
	addl	$1, %eax
	movl	%eax, piece_count
	movl	$1, (%r8)
	movw	$25763, BasicBlockSignatureTracker # imm = 0x64A3
	movw	$0, RunTimeSignatureAdjuster
.LBB46_68:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$25765, %ax             # imm = 0x64A5
	jne	.LBB46_170
# %bb.69:                               # %make.split475
                                        #   in Loop: Header=BB46_68 Depth=1
	movslq	(%r8), %rax
	movl	pieces(,%rax,4), %eax
	movw	$25765, BasicBlockSignatureTracker # imm = 0x64A5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB46_74
# %bb.70:                               #   in Loop: Header=BB46_68 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$25767, %ax             # imm = 0x64A7
	jne	.LBB46_170
# %bb.71:                               # %make.split477
                                        #   in Loop: Header=BB46_68 Depth=1
	movw	$25767, BasicBlockSignatureTracker # imm = 0x64A7
	movw	$0, RunTimeSignatureAdjuster
# %bb.72:                               #   in Loop: Header=BB46_68 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$25769, %ax             # imm = 0x64A9
	jne	.LBB46_170
# %bb.73:                               # %make.split481
                                        #   in Loop: Header=BB46_68 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$25769, BasicBlockSignatureTracker # imm = 0x64A9
	movw	$10, RunTimeSignatureAdjuster
	jmp	.LBB46_68
.LBB46_74:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$25774, %ax             # imm = 0x64AE
	jne	.LBB46_171
# %bb.75:                               # %make.split479
	movl	$1, %esi
	xorl	%eax, %eax
	movabsq	$path_x, %rcx
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %edx
	movslq	(%r8), %rdi
	movl	%edx, pieces(,%rdi,4)
	movslq	(%r8), %rdx
	movl	is_promoted(,%rdx,4), %edx
	movslq	ply, %rdi
	shlq	$4, %rdi
	addq	%rdi, %rcx
	movl	%edx, 4(%rcx)
	movslq	(%r8), %rcx
	movl	$0, is_promoted(,%rcx,4)
	movl	(%r8), %ecx
	movslq	(%rbx), %rdx
	movl	%ecx, squares(,%rdx,4)
	movl	(%r12), %edi
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %esi
	movw	$25774, BasicBlockSignatureTracker # imm = 0x64AE
	movw	$0, RunTimeSignatureAdjuster
	callq	DropremoveHolding
	movabsq	$zobrist, %rax
	movw	$25774, BasicBlockSignatureTracker # imm = 0x64AE
	movw	$0, RunTimeSignatureAdjuster
	movslq	(%r12), %rcx
	movl	material(,%rcx,4), %ecx
	addl	Material, %ecx
	movl	%ecx, Material
	movl	(%r12), %ecx
	movslq	(%rbx), %rdx
	movl	%ecx, board(,%rdx,4)
	movslq	(%r12), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	(%rbx), %rcx
	movl	(%rax,%rcx,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$25774, BasicBlockSignatureTracker # imm = 0x64AE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB46_168
.LBB46_76:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$25778, %ax             # imm = 0x64B2
	jne	.LBB46_171
# %bb.77:                               # %make.split473
	movabsq	$path_x, %rax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movslq	(%rdi), %rcx
	movslq	squares(,%rcx,4), %rcx
	movl	is_promoted(,%rcx,4), %ecx
	movslq	ply, %rdx
	shlq	$4, %rdx
	movq	%rax, %rsi
	addq	%rdx, %rsi
	movl	%ecx, 4(%rsi)
	movslq	(%rdi), %rcx
	movl	squares(,%rcx,4), %ecx
	movslq	ply, %rdx
	shlq	$4, %rdx
	addq	%rdx, %rax
	movl	%ecx, (%rax)
	movslq	(%rdi), %rax
	movslq	squares(,%rax,4), %rax
	movl	$0, pieces(,%rax,4)
	movl	(%rdi), %eax
	movslq	(%r15), %rcx
	movslq	squares(,%rcx,4), %rcx
	movl	%eax, pieces(,%rcx,4)
	movslq	(%r15), %rax
	movl	squares(,%rax,4), %eax
	movslq	(%rdi), %rcx
	movl	%eax, squares(,%rcx,4)
	movslq	(%r15), %rax
	movl	$0, squares(,%rax,4)
	movl	(%r14), %eax
	movw	$25778, BasicBlockSignatureTracker # imm = 0x64B2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB46_100
# %bb.78:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$25785, %ax             # imm = 0x64B9
	jne	.LBB46_171
# %bb.79:                               # %make.split487
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	board(,%rax,4), %eax
	movw	$25785, BasicBlockSignatureTracker(%rip) # imm = 0x64B9
	movw	$0, RunTimeSignatureAdjuster(%rip)
	subl	$13, %eax
	jne	.LBB46_82
	jmp	.LBB46_80
.LBB46_80:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$25789, %ax             # imm = 0x64BD
	jne	.LBB46_171
# %bb.81:                               # %make.split491
	movw	$25789, BasicBlockSignatureTracker # imm = 0x64BD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB46_98
.LBB46_82:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$109, %ax
	cmpw	$25812, %ax             # imm = 0x64D4
	jne	.LBB46_171
# %bb.83:                               # %make.split489
	movl	Variant, %eax
	movw	$25812, BasicBlockSignatureTracker # imm = 0x64D4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB46_86
# %bb.84:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$25814, %ax             # imm = 0x64D6
	jne	.LBB46_171
# %bb.85:                               # %make.split497
	movl	Variant, %eax
	movw	$25814, BasicBlockSignatureTracker # imm = 0x64D6
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB46_94
.LBB46_86:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$25821, %ax             # imm = 0x64DD
	jne	.LBB46_171
# %bb.87:                               # %make.split495
	movabsq	$path_x, %rax
	movslq	ply, %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movl	4(%rax), %eax
	movw	$25821, BasicBlockSignatureTracker # imm = 0x64DD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB46_90
# %bb.88:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$25837, %ax             # imm = 0x64ED
	jne	.LBB46_171
# %bb.89:                               # %make.split501
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	board(,%rax,4), %edi
	movw	$25837, BasicBlockSignatureTracker # imm = 0x64ED
	movw	$0, RunTimeSignatureAdjuster
	callq	SwitchPromoted
	movl	$1, %esi
	xorl	%ecx, %ecx
	movw	$25837, BasicBlockSignatureTracker # imm = 0x64ED
	movw	$0, RunTimeSignatureAdjuster
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %esi
	movw	$25837, BasicBlockSignatureTracker # imm = 0x64ED
	movw	$0, RunTimeSignatureAdjuster
	movl	%eax, %edi
	callq	addHolding
	movw	$25837, BasicBlockSignatureTracker # imm = 0x64ED
	movw	$0, RunTimeSignatureAdjuster
	movw	$25837, BasicBlockSignatureTracker # imm = 0x64ED
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB46_92
.LBB46_90:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$474, %ax               # imm = 0x1DA
	cmpw	$25863, %ax             # imm = 0x6507
	jne	.LBB46_171
# %bb.91:                               # %make.split503
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	board(,%rax,4), %edi
	movw	$25863, BasicBlockSignatureTracker # imm = 0x6507
	movw	$0, RunTimeSignatureAdjuster
	callq	SwitchColor
	movl	$1, %esi
	xorl	%ecx, %ecx
	movw	$25863, BasicBlockSignatureTracker # imm = 0x6507
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %esi
	movw	$25863, BasicBlockSignatureTracker # imm = 0x6507
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	movl	%eax, %edi
	callq	addHolding
	movw	$25863, BasicBlockSignatureTracker # imm = 0x6507
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	movw	$25863, BasicBlockSignatureTracker # imm = 0x6507
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
.LBB46_92:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$484, %ax               # imm = 0x1E4
	xorw	%cx, %ax
	cmpw	$25865, %ax             # imm = 0x6509
	jne	.LBB46_171
# %bb.93:                               # %make.split505
	movw	$25865, BasicBlockSignatureTracker # imm = 0x6509
	movw	$479, RunTimeSignatureAdjuster # imm = 0x1DF
	jmp	.LBB46_96
.LBB46_94:                              # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27538, %ax             # imm = 0x6B92
	cmpw	$3908, %ax              # imm = 0xF44
	jne	.LBB46_171
# %bb.95:                               # %make.split499
	movw	$3908, BasicBlockSignatureTracker # imm = 0xF44
	movw	$27538, RunTimeSignatureAdjuster # imm = 0x6B92
.LBB46_96:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$472, %ax               # imm = 0x1D8
	xorw	%cx, %ax
	cmpw	$25870, %ax             # imm = 0x650E
	jne	.LBB46_171
# %bb.97:                               # %make.split507
	movabsq	$zobrist, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	movslq	board(,%rcx,4), %rcx
	movl	material(,%rcx,4), %ecx
	movl	Material, %edx
	subl	%ecx, %edx
	movl	%edx, Material
	movslq	(%rsi), %rcx
	movslq	board(,%rcx,4), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	(%rsi), %rcx
	movl	(%rax,%rcx,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	piece_count, %eax
	addl	$-1, %eax
	movl	%eax, piece_count
	movw	$25870, BasicBlockSignatureTracker # imm = 0x650E
	movw	$435, RunTimeSignatureAdjuster # imm = 0x1B3
.LBB46_98:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$400, %ax               # imm = 0x190
	xorw	%cx, %ax
	cmpw	$25901, %ax             # imm = 0x652D
	jne	.LBB46_171
# %bb.99:                               # %make.split493
	movw	$25901, BasicBlockSignatureTracker # imm = 0x652D
	movw	$415, RunTimeSignatureAdjuster # imm = 0x19F
.LBB46_100:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$413, %ax               # imm = 0x19D
	xorw	%cx, %ax
	cmpw	$25903, %ax             # imm = 0x652F
	jne	.LBB46_171
# %bb.101:                              # %make.split485
	movslq	(%r15), %rax
	movl	board(,%rax,4), %eax
	movw	$25903, BasicBlockSignatureTracker # imm = 0x652F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB46_116
# %bb.102:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$25908, %ax             # imm = 0x6534
	jne	.LBB46_171
# %bb.103:                              # %make.split509
	movl	(%r12), %eax
	movw	$25908, BasicBlockSignatureTracker # imm = 0x6534
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB46_106
# %bb.104:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$122, %ax
	cmpw	$25934, %ax             # imm = 0x654E
	jne	.LBB46_171
# %bb.105:                              # %make.split513
	movabsq	$zobrist, %rax
	movl	(%r12), %ecx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rdx
	movl	%ecx, board(,%rdx,4)
	movslq	(%r15), %rcx
	movl	$13, board(,%rcx,4)
	movslq	(%rsi), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, moved(,%rcx,4)
	movslq	(%r15), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	white_to_move, %ecx
	xorl	$1, %ecx
	movl	%ecx, white_to_move
	movslq	(%rsi), %rcx
	movslq	squares(,%rcx,4), %rcx
	movl	$1, is_promoted(,%rcx,4)
	movslq	(%r15), %rcx
	movl	zobrist+576(,%rcx,4), %ecx
	xorl	hash, %ecx
	movl	%ecx, hash
	movslq	(%r12), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	(%rsi), %rcx
	movl	(%rax,%rcx,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	material+4, %eax
	movl	Material, %ecx
	subl	%eax, %ecx
	movl	%ecx, Material
	movslq	(%r12), %rax
	movl	material(,%rax,4), %eax
	addl	Material, %eax
	movl	%eax, Material
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$25934, BasicBlockSignatureTracker # imm = 0x654E
	movw	$480, RunTimeSignatureAdjuster # imm = 0x1E0
	jmp	.LBB46_168
.LBB46_106:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$110, %ax
	cmpw	$25946, %ax             # imm = 0x655A
	jne	.LBB46_171
# %bb.107:                              # %make.split515
	movl	(%r14), %eax
	movw	$25946, BasicBlockSignatureTracker # imm = 0x655A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB46_110
# %bb.108:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$25947, %ax             # imm = 0x655B
	jne	.LBB46_171
# %bb.109:                              # %make.split517
	movslq	(%r15), %rax
	movl	zobrist+576(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %eax
	subl	$12, %eax
	cltq
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%rbx), %rax
	movl	zobrist+576(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	material+8, %eax
	movl	Material, %ecx
	subl	%eax, %ecx
	movl	%ecx, Material
	movslq	(%rbx), %rax
	movl	$1, board(,%rax,4)
	movslq	(%r15), %rax
	movl	$13, board(,%rax,4)
	movw	$25947, BasicBlockSignatureTracker # imm = 0x655B
	movw	$438, RunTimeSignatureAdjuster # imm = 0x1B6
	movl	$1, %edi
	xorl	%esi, %esi
	callq	addHolding
	movabsq	$path_x, %rax
	movw	$25947, BasicBlockSignatureTracker # imm = 0x655B
	movw	$438, RunTimeSignatureAdjuster # imm = 0x1B6
	movl	piece_count, %ecx
	addl	$-1, %ecx
	movl	%ecx, piece_count
	movl	(%rbx), %ecx
	subl	$12, %ecx
	movslq	%ecx, %rcx
	movl	$13, board(,%rcx,4)
	movslq	(%rbx), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, moved(,%rcx,4)
	movslq	(%r15), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	(%rbx), %ecx
	subl	$12, %ecx
	movslq	%ecx, %rcx
	movl	moved(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	white_to_move, %ecx
	xorl	$1, %ecx
	movl	%ecx, white_to_move
	movl	(%rbx), %ecx
	subl	$12, %ecx
	movslq	%ecx, %rcx
	movl	squares(,%rcx,4), %ecx
	movslq	ply, %rdx
	shlq	$4, %rdx
	addq	%rdx, %rax
	movl	%ecx, (%rax)
	movl	(%rbx), %eax
	subl	$12, %eax
	cltq
	movslq	squares(,%rax,4), %rax
	movl	$0, pieces(,%rax,4)
	movl	(%rbx), %eax
	subl	$12, %eax
	cltq
	movl	$0, squares(,%rax,4)
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$25947, BasicBlockSignatureTracker # imm = 0x655B
	movw	$501, RunTimeSignatureAdjuster # imm = 0x1F5
	jmp	.LBB46_168
.LBB46_110:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$25953, %ax             # imm = 0x6561
	jne	.LBB46_171
# %bb.111:                              # %make.split519
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r15), %ecx
	addl	$24, %ecx
	movw	$25953, BasicBlockSignatureTracker # imm = 0x6561
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB46_114
# %bb.112:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$25972, %ax             # imm = 0x6574
	jne	.LBB46_171
# %bb.113:                              # %make.split521
	movl	(%r15), %eax
	addl	$12, %eax
	movl	%eax, ep_square
	movw	$25972, BasicBlockSignatureTracker # imm = 0x6574
	movw	$21, RunTimeSignatureAdjuster
.LBB46_114:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$25973, %ax             # imm = 0x6575
	jne	.LBB46_171
# %bb.115:                              # %make.split523
	movslq	(%r15), %rax
	movl	zobrist+576(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	zobrist+576(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%rcx), %rax
	movl	$1, board(,%rax,4)
	movslq	(%r15), %rax
	movl	$13, board(,%rax,4)
	movslq	(%rcx), %rax
	movl	moved(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, moved(,%rax,4)
	movslq	(%r15), %rax
	movl	moved(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, moved(,%rax,4)
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$25973, BasicBlockSignatureTracker # imm = 0x6575
	movw	$475, RunTimeSignatureAdjuster # imm = 0x1DB
	jmp	.LBB46_168
.LBB46_116:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$83, %ax
	cmpw	$25980, %ax             # imm = 0x657C
	jne	.LBB46_171
# %bb.117:                              # %make.split511
	movslq	(%r15), %rax
	movl	board(,%rax,4), %eax
	movw	$25980, BasicBlockSignatureTracker # imm = 0x657C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB46_132
# %bb.118:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$25982, %ax             # imm = 0x657E
	jne	.LBB46_171
# %bb.119:                              # %make.split525
	movl	(%r12), %eax
	movw	$25982, BasicBlockSignatureTracker # imm = 0x657E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB46_122
# %bb.120:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$25983, %ax             # imm = 0x657F
	jne	.LBB46_171
# %bb.121:                              # %make.split529
	movabsq	$zobrist, %rax
	movl	(%r12), %ecx
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rdx
	movl	%ecx, board(,%rdx,4)
	movslq	(%r15), %rcx
	movl	$13, board(,%rcx,4)
	movslq	(%rsi), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, moved(,%rcx,4)
	movslq	(%r15), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	white_to_move, %ecx
	xorl	$1, %ecx
	movl	%ecx, white_to_move
	movslq	(%rsi), %rcx
	movslq	squares(,%rcx,4), %rcx
	movl	$1, is_promoted(,%rcx,4)
	movslq	(%r15), %rcx
	movl	zobrist+1152(,%rcx,4), %ecx
	xorl	hash, %ecx
	movl	%ecx, hash
	movslq	(%r12), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	(%rsi), %rcx
	movl	(%rax,%rcx,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	material+8, %eax
	movl	Material, %ecx
	subl	%eax, %ecx
	movl	%ecx, Material
	movslq	(%r12), %rax
	movl	material(,%rax,4), %eax
	addl	Material, %eax
	movl	%eax, Material
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$25983, BasicBlockSignatureTracker # imm = 0x657F
	movw	$465, RunTimeSignatureAdjuster # imm = 0x1D1
	jmp	.LBB46_168
.LBB46_122:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$251, %ax
	cmpw	$25989, %ax             # imm = 0x6585
	jne	.LBB46_171
# %bb.123:                              # %make.split531
	movl	(%r14), %eax
	movw	$25989, BasicBlockSignatureTracker # imm = 0x6585
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB46_126
# %bb.124:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$25991, %ax             # imm = 0x6587
	jne	.LBB46_171
# %bb.125:                              # %make.split533
	movslq	(%r15), %rax
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %eax
	addl	$12, %eax
	cltq
	movl	zobrist+576(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%rbx), %rax
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	material+4, %eax
	movl	Material, %ecx
	subl	%eax, %ecx
	movl	%ecx, Material
	movslq	(%rbx), %rax
	movl	$2, board(,%rax,4)
	movslq	(%r15), %rax
	movl	$13, board(,%rax,4)
	movw	$25991, BasicBlockSignatureTracker # imm = 0x6587
	movw	$362, RunTimeSignatureAdjuster # imm = 0x16A
	movl	$2, %edi
	movl	$1, %esi
	callq	addHolding
	movabsq	$path_x, %rax
	movw	$25991, BasicBlockSignatureTracker # imm = 0x6587
	movw	$362, RunTimeSignatureAdjuster # imm = 0x16A
	movl	piece_count, %ecx
	addl	$-1, %ecx
	movl	%ecx, piece_count
	movl	(%rbx), %ecx
	addl	$12, %ecx
	movslq	%ecx, %rcx
	movl	$13, board(,%rcx,4)
	movslq	(%rbx), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, moved(,%rcx,4)
	movslq	(%r15), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	(%rbx), %ecx
	addl	$12, %ecx
	movslq	%ecx, %rcx
	movl	moved(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	white_to_move, %ecx
	xorl	$1, %ecx
	movl	%ecx, white_to_move
	movl	(%rbx), %ecx
	addl	$12, %ecx
	movslq	%ecx, %rcx
	movl	squares(,%rcx,4), %ecx
	movslq	ply, %rdx
	shlq	$4, %rdx
	addq	%rdx, %rax
	movl	%ecx, (%rax)
	movl	(%rbx), %eax
	addl	$12, %eax
	cltq
	movslq	squares(,%rax,4), %rax
	movl	$0, pieces(,%rax,4)
	movl	(%rbx), %eax
	addl	$12, %eax
	cltq
	movl	$0, squares(,%rax,4)
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$25991, BasicBlockSignatureTracker # imm = 0x6587
	movw	$297, RunTimeSignatureAdjuster # imm = 0x129
	jmp	.LBB46_168
.LBB46_126:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$36, %ax
	cmpw	$26017, %ax             # imm = 0x65A1
	jne	.LBB46_171
# %bb.127:                              # %make.split535
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r15), %ecx
	subl	$24, %ecx
	movw	$26017, BasicBlockSignatureTracker # imm = 0x65A1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB46_130
# %bb.128:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$26025, %ax             # imm = 0x65A9
	jne	.LBB46_171
# %bb.129:                              # %make.split537
	movl	(%r15), %eax
	subl	$12, %eax
	movl	%eax, ep_square
	movw	$26025, BasicBlockSignatureTracker # imm = 0x65A9
	movw	$8, RunTimeSignatureAdjuster
.LBB46_130:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$26036, %ax             # imm = 0x65B4
	jne	.LBB46_171
# %bb.131:                              # %make.split539
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movl	$2, board(,%rax,4)
	movslq	(%r15), %rax
	movl	$13, board(,%rax,4)
	movslq	(%rdx), %rax
	movl	moved(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, moved(,%rax,4)
	movslq	(%r15), %rax
	movl	moved(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, moved(,%rax,4)
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movslq	(%r15), %rax
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%rdx), %rax
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$26036, BasicBlockSignatureTracker # imm = 0x65B4
	movw	$282, RunTimeSignatureAdjuster # imm = 0x11A
	jmp	.LBB46_168
.LBB46_132:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$193, %ax
	cmpw	$26045, %ax             # imm = 0x65BD
	jne	.LBB46_171
# %bb.133:                              # %make.split527
	movslq	(%r15), %rax
	movl	board(,%rax,4), %eax
	movw	$26045, BasicBlockSignatureTracker # imm = 0x65BD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB46_140
# %bb.134:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$26057, %ax             # imm = 0x65C9
	jne	.LBB46_171
# %bb.135:                              # %make.split541
	movslq	(%r15), %rax
	movl	board(,%rax,4), %eax
	movw	$26057, BasicBlockSignatureTracker # imm = 0x65C9
	movw	$116, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	je	.LBB46_140
# %bb.136:                              # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1577, %ax              # imm = 0x629
	cmpw	$25568, %ax             # imm = 0x63E0
	jne	.LBB46_171
# %bb.137:                              # %make.split545
	movw	$25568, BasicBlockSignatureTracker # imm = 0x63E0
	movw	$1577, RunTimeSignatureAdjuster # imm = 0x629
# %bb.138:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$26060, %ax             # imm = 0x65CC
	jne	.LBB46_171
# %bb.139:                              # %make.split679
	movabsq	$zobrist, %rax
	movslq	(%r15), %rcx
	movslq	board(,%rcx,4), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movslq	(%r15), %rcx
	movl	(%rdx,%rcx,4), %ecx
	xorl	hash, %ecx
	movl	%ecx, hash
	movslq	(%r15), %rcx
	movslq	board(,%rcx,4), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rcx
	movl	(%rax,%rcx,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r15), %rax
	movl	board(,%rax,4), %eax
	movslq	(%rdx), %rcx
	movl	%eax, board(,%rcx,4)
	movslq	(%r15), %rax
	movl	$13, board(,%rax,4)
	movslq	(%rdx), %rax
	movl	moved(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, moved(,%rax,4)
	movslq	(%r15), %rax
	movl	moved(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, moved(,%rax,4)
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$26060, BasicBlockSignatureTracker # imm = 0x65CC
	movw	$354, RunTimeSignatureAdjuster # imm = 0x162
	jmp	.LBB46_168
.LBB46_140:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$99, %ax
	xorw	%cx, %ax
	cmpw	$26078, %ax             # imm = 0x65DE
	jne	.LBB46_171
# %bb.141:                              # %make.split543
	movslq	(%r15), %rax
	movl	board(,%rax,4), %eax
	movw	$26078, BasicBlockSignatureTracker # imm = 0x65DE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB46_154
# %bb.142:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$26082, %ax             # imm = 0x65E2
	jne	.LBB46_171
# %bb.143:                              # %make.split547
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %eax
	movl	%eax, wking_loc
	movslq	(%rdx), %rax
	movl	$5, board(,%rax,4)
	movslq	(%r15), %rax
	movl	$13, board(,%rax,4)
	movslq	(%rdx), %rax
	movl	moved(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, moved(,%rax,4)
	movslq	(%r15), %rax
	movl	moved(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, moved(,%rax,4)
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movslq	(%r15), %rax
	movl	zobrist+2880(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%rdx), %rax
	movl	zobrist+2880(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	(%r13), %eax
	movw	$26082, BasicBlockSignatureTracker # imm = 0x65E2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB46_146
# %bb.144:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$26088, %ax             # imm = 0x65E8
	jne	.LBB46_171
# %bb.145:                              # %make.split551
	movl	$13, board+132
	movl	$7, board+124
	movl	moved+132, %eax
	addl	$1, %eax
	movl	%eax, moved+132
	movl	moved+124, %eax
	addl	$1, %eax
	movl	%eax, moved+124
	movl	$1, white_castled
	movslq	squares+132, %rax
	movl	$31, pieces(,%rax,4)
	movl	squares+132, %eax
	movl	%eax, squares+124
	movl	$0, squares+132
	movl	zobrist+4164, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	zobrist+4156, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$26088, BasicBlockSignatureTracker # imm = 0x65E8
	movw	$326, RunTimeSignatureAdjuster # imm = 0x146
	jmp	.LBB46_168
.LBB46_146:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$26091, %ax             # imm = 0x65EB
	jne	.LBB46_171
# %bb.147:                              # %make.split553
	movl	(%r13), %eax
	movw	$26091, BasicBlockSignatureTracker # imm = 0x65EB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB46_150
# %bb.148:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1002, %ax              # imm = 0x3EA
	cmpw	$26113, %ax             # imm = 0x6601
	jne	.LBB46_171
# %bb.149:                              # %make.split555
	movl	$13, board+104
	movl	$7, board+116
	movl	moved+104, %eax
	addl	$1, %eax
	movl	%eax, moved+104
	movl	moved+116, %eax
	addl	$1, %eax
	movl	%eax, moved+116
	movl	$2, white_castled
	movslq	squares+104, %rax
	movl	$29, pieces(,%rax,4)
	movl	squares+104, %eax
	movl	%eax, squares+116
	movl	$0, squares+104
	movl	zobrist+4136, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	zobrist+4148, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$26113, BasicBlockSignatureTracker # imm = 0x6601
	movw	$687, RunTimeSignatureAdjuster # imm = 0x2AF
	jmp	.LBB46_168
.LBB46_150:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1006, %ax              # imm = 0x3EE
	cmpw	$26117, %ax             # imm = 0x6605
	jne	.LBB46_171
# %bb.151:                              # %make.split557
	movw	$26117, BasicBlockSignatureTracker # imm = 0x6605
	movw	$0, RunTimeSignatureAdjuster
# %bb.152:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$26127, %ax             # imm = 0x660F
	jne	.LBB46_171
# %bb.153:                              # %make.split559
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$26127, BasicBlockSignatureTracker # imm = 0x660F
	movw	$673, RunTimeSignatureAdjuster # imm = 0x2A1
	jmp	.LBB46_168
.LBB46_154:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$973, %ax               # imm = 0x3CD
	cmpw	$26131, %ax             # imm = 0x6613
	jne	.LBB46_171
# %bb.155:                              # %make.split549
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %eax
	movl	%eax, bking_loc
	movslq	(%rdx), %rax
	movl	$6, board(,%rax,4)
	movslq	(%r15), %rax
	movl	$13, board(,%rax,4)
	movslq	(%rdx), %rax
	movl	moved(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, moved(,%rax,4)
	movslq	(%r15), %rax
	movl	moved(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, moved(,%rax,4)
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movslq	(%r15), %rax
	movl	zobrist+3456(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%rdx), %rax
	movl	zobrist+3456(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	(%r13), %eax
	movw	$26131, BasicBlockSignatureTracker # imm = 0x6613
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB46_158
# %bb.156:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$26139, %ax             # imm = 0x661B
	jne	.LBB46_171
# %bb.157:                              # %make.split561
	movl	$13, board+468
	movl	$8, board+460
	movl	moved+468, %eax
	addl	$1, %eax
	movl	%eax, moved+468
	movl	moved+460, %eax
	addl	$1, %eax
	movl	%eax, moved+460
	movl	$3, black_castled
	movslq	squares+468, %rax
	movl	$115, pieces(,%rax,4)
	movl	squares+468, %eax
	movl	%eax, squares+460
	movl	$0, squares+468
	movl	zobrist+5076, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	zobrist+5068, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$26139, BasicBlockSignatureTracker # imm = 0x661B
	movw	$693, RunTimeSignatureAdjuster # imm = 0x2B5
	jmp	.LBB46_168
.LBB46_158:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$26145, %ax             # imm = 0x6621
	jne	.LBB46_171
# %bb.159:                              # %make.split563
	movl	(%r13), %eax
	movw	$26145, BasicBlockSignatureTracker # imm = 0x6621
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB46_162
# %bb.160:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$26166, %ax             # imm = 0x6636
	jne	.LBB46_171
# %bb.161:                              # %make.split565
	movl	$13, board+440
	movl	$8, board+452
	movl	moved+440, %eax
	addl	$1, %eax
	movl	%eax, moved+440
	movl	moved+452, %eax
	addl	$1, %eax
	movl	%eax, moved+452
	movl	$4, black_castled
	movslq	squares+440, %rax
	movl	$113, pieces(,%rax,4)
	movl	squares+440, %eax
	movl	%eax, squares+452
	movl	$0, squares+440
	movl	zobrist+5048, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	zobrist+5060, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$26166, BasicBlockSignatureTracker # imm = 0x6636
	movw	$664, RunTimeSignatureAdjuster # imm = 0x298
	jmp	.LBB46_168
.LBB46_162:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$26168, %ax             # imm = 0x6638
	jne	.LBB46_171
# %bb.163:                              # %make.split567
	movw	$26168, BasicBlockSignatureTracker # imm = 0x6638
	movw	$0, RunTimeSignatureAdjuster
# %bb.164:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$26179, %ax             # imm = 0x6643
	jne	.LBB46_171
# %bb.165:                              # %make.split569
	movw	$26179, BasicBlockSignatureTracker # imm = 0x6643
	movw	$0, RunTimeSignatureAdjuster
# %bb.166:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$26188, %ax             # imm = 0x664C
	jne	.LBB46_171
# %bb.167:                              # %make.split571
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movw	$26188, BasicBlockSignatureTracker # imm = 0x664C
	movw	$738, RunTimeSignatureAdjuster # imm = 0x2E2
.LBB46_168:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$717, %ax               # imm = 0x2CD
	xorw	%cx, %ax
	cmpw	$26211, %ax             # imm = 0x6663
	jne	.LBB46_171
# %bb.169:                              # %make.split483
	movw	$26211, BasicBlockSignatureTracker # imm = 0x6663
	movw	$-4920, RunTimeSignatureAdjuster # imm = 0xECC8
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB46_170:                             # %CFerrorHandler.make.loopexit
	jmp	.LBB46_171
.LBB46_171:                             # %CFerrorHandler.make
	callq	FAULT_DETECTED_CFC
.Lfunc_end46:
	.size	make, .Lfunc_end46-make
	.cfi_endproc
                                        # -- End function
	.globl	unmake                  # -- Begin function unmake
	.p2align	4, 0x90
	.type	unmake,@function
unmake:                                 # @unmake
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.1:                                # %unmake.split665
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.2:                                # %unmake.split663
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.3:                                # %unmake.split661
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.4:                                # %unmake.split659
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.5:                                # %unmake.split657
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.6:                                # %unmake.split655
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.7:                                # %unmake.split653
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.8:                                # %unmake.split651
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.9:                                # %unmake.split649
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.10:                               # %unmake.split647
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.11:                               # %unmake.split645
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.12:                               # %unmake.split643
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.13:                               # %unmake.split641
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.14:                               # %unmake.split639
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.15:                               # %unmake.split637
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.16:                               # %unmake.split635
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.17:                               # %unmake.split633
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.18:                               # %unmake.split631
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.19:                               # %unmake.split629
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.20:                               # %unmake.split627
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.21:                               # %unmake.split625
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.22:                               # %unmake.split623
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.23:                               # %unmake.split621
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.24:                               # %unmake.split619
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.25:                               # %unmake.split617
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.26:                               # %unmake.split615
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.27:                               # %unmake.split613
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.28:                               # %unmake.split611
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.29:                               # %unmake.split609
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.30:                               # %unmake.split607
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.31:                               # %unmake.split605
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.32:                               # %unmake.split603
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.33:                               # %unmake.split601
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.34:                               # %unmake.split599
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.35:                               # %unmake.split597
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.36:                               # %unmake.split595
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.37:                               # %unmake.split593
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.38:                               # %unmake.split591
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.39:                               # %unmake.split589
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.40:                               # %unmake.split587
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.41:                               # %unmake.split585
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.42:                               # %unmake.split583
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.43:                               # %unmake.split581
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.44:                               # %unmake.split579
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.45:                               # %unmake.split577
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.46:                               # %unmake.split575
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.47:                               # %unmake.split573
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.48:                               # %unmake.split571
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.49:                               # %unmake.split569
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.50:                               # %unmake.split567
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.51:                               # %unmake.split565
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.52:                               # %unmake.split563
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.53:                               # %unmake.split561
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.54:                               # %unmake.split559
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.55:                               # %unmake.split557
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.56:                               # %unmake.split555
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.57:                               # %unmake.split553
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.58:                               # %unmake.split551
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.59:                               # %unmake.split549
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5017, %ax             # imm = 0xEC67
	xorw	%cx, %ax
	cmpw	$26240, %ax             # imm = 0x6680
	jne	.LBB47_155
# %bb.60:                               # %unmake.split547
	movabsq	$path_x, %r8
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rdi, (%rcx)
	movl	%esi, (%rdx)
	movq	(%rcx), %rsi
	movslq	(%rdx), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	20(%rsi), %esi
	movl	%esi, (%r15)
	movq	(%rcx), %rsi
	movslq	(%rdx), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	(%rsi), %esi
	movl	%esi, (%r14)
	movq	(%rcx), %rsi
	movslq	(%rdx), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	4(%rsi), %esi
	movl	%esi, (%r13)
	movq	(%rcx), %rsi
	movslq	(%rdx), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	8(%rsi), %esi
	movq	%rbx, -48(%rbp)         # 8-byte Spill
	movl	%esi, (%rbx)
	movq	(%rcx), %rsi
	movslq	(%rdx), %rdi
	imulq	$24, %rdi, %rdi
	addq	%rdi, %rsi
	movl	12(%rsi), %esi
	movl	%esi, (%r12)
	movq	(%rcx), %rcx
	movslq	(%rdx), %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movl	16(%rcx), %ecx
	movq	%rax, %rbx
	movl	%ecx, (%rax)
	movl	ply, %ecx
	addl	$-1, %ecx
	movl	%ecx, ply
	movslq	ply, %rcx
	shlq	$4, %rcx
	movq	%r8, %rdx
	addq	%rcx, %rdx
	movl	8(%rdx), %ecx
	movl	%ecx, ep_square
	movslq	ply, %rcx
	shlq	$4, %rcx
	addq	%rcx, %r8
	movl	12(%r8), %eax
	movl	%eax, fifty
	movl	(%r14), %eax
	movw	$26240, BasicBlockSignatureTracker # imm = 0x6680
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB47_63
# %bb.61:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$26252, %ax             # imm = 0x668C
	jne	.LBB47_155
# %bb.62:                               # %unmake.split
	xorl	%esi, %esi
	movl	$1, %eax
	movabsq	$path_x, %rcx
	movslq	(%r13), %rdx
	movslq	squares(,%rdx,4), %rdx
	movl	$0, pieces(,%rdx,4)
	movslq	ply, %rdx
	shlq	$4, %rdx
	addq	%rdx, %rcx
	movl	4(%rcx), %ecx
	movslq	(%r13), %rdx
	movslq	squares(,%rdx,4), %rdx
	movl	%ecx, is_promoted(,%rdx,4)
	movslq	(%r13), %rcx
	movl	$0, squares(,%rcx,4)
	movl	piece_count, %ecx
	addl	$-1, %ecx
	movl	%ecx, piece_count
	movl	(%r12), %edi
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %esi
	movw	$26252, BasicBlockSignatureTracker # imm = 0x668C
	movw	$0, RunTimeSignatureAdjuster
	callq	DropaddHolding
	movabsq	$zobrist, %rax
	movw	$26252, BasicBlockSignatureTracker # imm = 0x668C
	movw	$0, RunTimeSignatureAdjuster
	movslq	(%r12), %rcx
	movl	material(,%rcx,4), %ecx
	movl	Material, %edx
	subl	%ecx, %edx
	movl	%edx, Material
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	(%r13), %rdx
	movl	%ecx, board(,%rdx,4)
	movslq	(%r12), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	(%r13), %rcx
	movl	(%rax,%rcx,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movw	$26252, BasicBlockSignatureTracker # imm = 0x668C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB47_153
.LBB47_63:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$26256, %ax             # imm = 0x6690
	jne	.LBB47_155
# %bb.64:                               # %unmake.split459
	movabsq	$path_x, %rax
	movslq	(%r13), %rcx
	movl	squares(,%rcx,4), %ecx
	movslq	(%r14), %rdx
	movl	%ecx, squares(,%rdx,4)
	movslq	ply, %rcx
	shlq	$4, %rcx
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movl	(%rdx), %ecx
	movslq	(%r13), %rdx
	movl	%ecx, squares(,%rdx,4)
	movl	(%r13), %ecx
	movslq	(%r13), %rdx
	movslq	squares(,%rdx,4), %rdx
	movl	%ecx, pieces(,%rdx,4)
	movl	(%r14), %ecx
	movslq	(%r14), %rdx
	movslq	squares(,%rdx,4), %rdx
	movl	%ecx, pieces(,%rdx,4)
	movslq	ply, %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movl	4(%rax), %eax
	movslq	(%r13), %rcx
	movslq	squares(,%rcx,4), %rcx
	movl	%eax, is_promoted(,%rcx,4)
	movl	(%r15), %eax
	movw	$26256, BasicBlockSignatureTracker # imm = 0x6690
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB47_87
# %bb.65:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$52, %ax
	cmpw	$26276, %ax             # imm = 0x66A4
	jne	.LBB47_155
# %bb.66:                               # %unmake.split465
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$26276, BasicBlockSignatureTracker(%rip) # imm = 0x66A4
	movw	$0, RunTimeSignatureAdjuster(%rip)
	subl	$13, %eax
	jne	.LBB47_69
	jmp	.LBB47_67
.LBB47_67:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$26282, %ax             # imm = 0x66AA
	jne	.LBB47_155
# %bb.68:                               # %unmake.split469
	movw	$26282, BasicBlockSignatureTracker # imm = 0x66AA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB47_85
.LBB47_69:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$26289, %ax             # imm = 0x66B1
	jne	.LBB47_155
# %bb.70:                               # %unmake.split467
	movl	Variant, %eax
	movw	$26289, BasicBlockSignatureTracker # imm = 0x66B1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB47_73
# %bb.71:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$26292, %ax             # imm = 0x66B4
	jne	.LBB47_155
# %bb.72:                               # %unmake.split475
	movl	Variant, %eax
	movw	$26292, BasicBlockSignatureTracker # imm = 0x66B4
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB47_81
.LBB47_73:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$26296, %ax             # imm = 0x66B8
	jne	.LBB47_155
# %bb.74:                               # %unmake.split473
	movslq	(%r13), %rax
	movslq	squares(,%rax,4), %rax
	movl	is_promoted(,%rax,4), %eax
	movw	$26296, BasicBlockSignatureTracker # imm = 0x66B8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB47_77
# %bb.75:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$26297, %ax             # imm = 0x66B9
	jne	.LBB47_155
# %bb.76:                               # %unmake.split479
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edi
	movw	$26297, BasicBlockSignatureTracker # imm = 0x66B9
	movw	$596, RunTimeSignatureAdjuster # imm = 0x254
	callq	SwitchPromoted
	xorl	%esi, %esi
	movl	$1, %ecx
	movw	$26297, BasicBlockSignatureTracker # imm = 0x66B9
	movw	$596, RunTimeSignatureAdjuster # imm = 0x254
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %esi
	movw	$26297, BasicBlockSignatureTracker # imm = 0x66B9
	movw	$0, RunTimeSignatureAdjuster
	movl	%eax, %edi
	callq	removeHolding
	movw	$26297, BasicBlockSignatureTracker # imm = 0x66B9
	movw	$596, RunTimeSignatureAdjuster # imm = 0x254
	movw	$26297, BasicBlockSignatureTracker # imm = 0x66B9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB47_79
.LBB47_77:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$26317, %ax             # imm = 0x66CD
	jne	.LBB47_155
# %bb.78:                               # %unmake.split481
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edi
	movw	$26317, BasicBlockSignatureTracker # imm = 0x66CD
	movw	$970, RunTimeSignatureAdjuster # imm = 0x3CA
	callq	SwitchColor
	xorl	%esi, %esi
	movl	$1, %ecx
	movw	$26317, BasicBlockSignatureTracker # imm = 0x66CD
	movw	$970, RunTimeSignatureAdjuster # imm = 0x3CA
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %esi
	movw	$26317, BasicBlockSignatureTracker # imm = 0x66CD
	movw	$116, RunTimeSignatureAdjuster
	movl	%eax, %edi
	callq	removeHolding
	movw	$26317, BasicBlockSignatureTracker # imm = 0x66CD
	movw	$116, RunTimeSignatureAdjuster
	movw	$26317, BasicBlockSignatureTracker # imm = 0x66CD
	movw	$116, RunTimeSignatureAdjuster
.LBB47_79:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$90, %ax
	xorw	%cx, %ax
	cmpw	$26339, %ax             # imm = 0x66E3
	jne	.LBB47_155
# %bb.80:                               # %unmake.split483
	movw	$26339, BasicBlockSignatureTracker # imm = 0x66E3
	movw	$87, RunTimeSignatureAdjuster
	jmp	.LBB47_83
.LBB47_81:                              # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-26891, %ax            # imm = 0x96F5
	cmpw	$-4031, %ax             # imm = 0xF041
	jne	.LBB47_155
# %bb.82:                               # %unmake.split477
	movw	$-4031, BasicBlockSignatureTracker # imm = 0xF041
	movw	$-26891, RunTimeSignatureAdjuster # imm = 0x96F5
.LBB47_83:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$74, %ax
	xorw	%cx, %ax
	cmpw	$26366, %ax             # imm = 0x66FE
	jne	.LBB47_155
# %bb.84:                               # %unmake.split485
	movabsq	$zobrist, %rax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	(%r13), %rcx
	movl	(%rax,%rcx,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%rdx), %rax
	movl	material(,%rax,4), %eax
	addl	Material, %eax
	movl	%eax, Material
	movl	piece_count, %eax
	addl	$1, %eax
	movl	%eax, piece_count
	movw	$26366, BasicBlockSignatureTracker # imm = 0x66FE
	movw	$84, RunTimeSignatureAdjuster
.LBB47_85:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$432, %ax               # imm = 0x1B0
	xorw	%cx, %ax
	cmpw	$26394, %ax             # imm = 0x671A
	jne	.LBB47_155
# %bb.86:                               # %unmake.split471
	movw	$26394, BasicBlockSignatureTracker # imm = 0x671A
	movw	$394, RunTimeSignatureAdjuster # imm = 0x18A
.LBB47_87:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$416, %ax               # imm = 0x1A0
	xorw	%cx, %ax
	cmpw	$26416, %ax             # imm = 0x6730
	jne	.LBB47_155
# %bb.88:                               # %unmake.split463
	movslq	(%r13), %rax
	movl	board(,%rax,4), %eax
	movw	$26416, BasicBlockSignatureTracker # imm = 0x6730
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB47_95
# %bb.89:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$26440, %ax             # imm = 0x6748
	jne	.LBB47_155
# %bb.90:                               # %unmake.split487
	movl	(%r15), %eax
	movw	$26440, BasicBlockSignatureTracker # imm = 0x6748
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB47_93
# %bb.91:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$26441, %ax             # imm = 0x6749
	jne	.LBB47_155
# %bb.92:                               # %unmake.split491
	movslq	(%r13), %rax
	movl	zobrist+576(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r14), %rax
	movl	zobrist+576(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	(%r13), %eax
	subl	$12, %eax
	cltq
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r13), %rax
	movl	$13, board(,%rax,4)
	movslq	(%r14), %rax
	movl	$1, board(,%rax,4)
	movl	material+8, %eax
	addl	Material, %eax
	movl	%eax, Material
	movw	$26441, BasicBlockSignatureTracker # imm = 0x6749
	movw	$496, RunTimeSignatureAdjuster # imm = 0x1F0
	movl	$1, %edi
	xorl	%esi, %esi
	callq	removeHolding
	movabsq	$path_x, %rax
	movw	$26441, BasicBlockSignatureTracker # imm = 0x6749
	movw	$496, RunTimeSignatureAdjuster # imm = 0x1F0
	movl	piece_count, %ecx
	addl	$1, %ecx
	movl	%ecx, piece_count
	movl	(%r13), %ecx
	subl	$12, %ecx
	movslq	%ecx, %rcx
	movl	$2, board(,%rcx,4)
	movslq	(%r13), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movslq	(%r14), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	(%r13), %ecx
	subl	$12, %ecx
	movslq	%ecx, %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	white_to_move, %ecx
	xorl	$1, %ecx
	movl	%ecx, white_to_move
	movslq	ply, %rcx
	shlq	$4, %rcx
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movl	(%rdx), %ecx
	movl	(%r13), %edx
	subl	$12, %edx
	movslq	%edx, %rdx
	movl	%ecx, squares(,%rdx,4)
	movl	(%r13), %ecx
	subl	$12, %ecx
	movslq	ply, %rdx
	shlq	$4, %rdx
	addq	%rdx, %rax
	movslq	(%rax), %rax
	movl	%ecx, pieces(,%rax,4)
	movslq	(%r13), %rax
	movl	$0, squares(,%rax,4)
	movw	$26441, BasicBlockSignatureTracker # imm = 0x6749
	movw	$453, RunTimeSignatureAdjuster # imm = 0x1C5
	jmp	.LBB47_153
.LBB47_93:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$26446, %ax             # imm = 0x674E
	jne	.LBB47_155
# %bb.94:                               # %unmake.split493
	movslq	(%r14), %rax
	movl	zobrist+576(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r13), %rax
	movl	zobrist+576(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	(%r13), %rcx
	movl	%eax, board(,%rcx,4)
	movslq	(%r14), %rax
	movl	$1, board(,%rax,4)
	movslq	(%r13), %rax
	movl	moved(,%rax,4), %ecx
	addl	$-1, %ecx
	movl	%ecx, moved(,%rax,4)
	movslq	(%r14), %rax
	movl	moved(,%rax,4), %ecx
	addl	$-1, %ecx
	movl	%ecx, moved(,%rax,4)
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movw	$26446, BasicBlockSignatureTracker # imm = 0x674E
	movw	$450, RunTimeSignatureAdjuster # imm = 0x1C2
	jmp	.LBB47_153
.LBB47_95:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$127, %ax
	cmpw	$26447, %ax             # imm = 0x674F
	jne	.LBB47_155
# %bb.96:                               # %unmake.split489
	movslq	(%r13), %rax
	movl	board(,%rax,4), %eax
	movw	$26447, BasicBlockSignatureTracker # imm = 0x674F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB47_103
# %bb.97:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$26456, %ax             # imm = 0x6758
	jne	.LBB47_155
# %bb.98:                               # %unmake.split495
	movl	(%r15), %eax
	movw	$26456, BasicBlockSignatureTracker # imm = 0x6758
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB47_101
# %bb.99:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$26470, %ax             # imm = 0x6766
	jne	.LBB47_155
# %bb.100:                              # %unmake.split499
	movslq	(%r13), %rax
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r14), %rax
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	(%r13), %eax
	addl	$12, %eax
	cltq
	movl	zobrist+576(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r13), %rax
	movl	$13, board(,%rax,4)
	movslq	(%r14), %rax
	movl	$2, board(,%rax,4)
	movl	material+4, %eax
	addl	Material, %eax
	movl	%eax, Material
	movw	$26470, BasicBlockSignatureTracker # imm = 0x6766
	movw	$479, RunTimeSignatureAdjuster # imm = 0x1DF
	movl	$2, %edi
	movl	$1, %esi
	callq	removeHolding
	movabsq	$path_x, %rax
	movw	$26470, BasicBlockSignatureTracker # imm = 0x6766
	movw	$479, RunTimeSignatureAdjuster # imm = 0x1DF
	movl	piece_count, %ecx
	addl	$1, %ecx
	movl	%ecx, piece_count
	movl	(%r13), %ecx
	addl	$12, %ecx
	movslq	%ecx, %rcx
	movl	$1, board(,%rcx,4)
	movslq	(%r13), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movslq	(%r14), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	(%r13), %ecx
	addl	$12, %ecx
	movslq	%ecx, %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	white_to_move, %ecx
	xorl	$1, %ecx
	movl	%ecx, white_to_move
	movslq	ply, %rcx
	shlq	$4, %rcx
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movl	(%rdx), %ecx
	movl	(%r13), %edx
	addl	$12, %edx
	movslq	%edx, %rdx
	movl	%ecx, squares(,%rdx,4)
	movl	(%r13), %ecx
	addl	$12, %ecx
	movslq	ply, %rdx
	shlq	$4, %rdx
	addq	%rdx, %rax
	movslq	(%rax), %rax
	movl	%ecx, pieces(,%rax,4)
	movslq	(%r13), %rax
	movl	$0, squares(,%rax,4)
	movw	$26470, BasicBlockSignatureTracker # imm = 0x6766
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	jmp	.LBB47_153
.LBB47_101:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$40, %ax
	cmpw	$26480, %ax             # imm = 0x6770
	jne	.LBB47_155
# %bb.102:                              # %unmake.split501
	movslq	(%r14), %rax
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r13), %rax
	movl	zobrist+1152(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	(%r13), %rcx
	movl	%eax, board(,%rcx,4)
	movslq	(%r14), %rax
	movl	$2, board(,%rax,4)
	movslq	(%r13), %rax
	movl	moved(,%rax,4), %ecx
	addl	$-1, %ecx
	movl	%ecx, moved(,%rax,4)
	movslq	(%r14), %rax
	movl	moved(,%rax,4), %ecx
	addl	$-1, %ecx
	movl	%ecx, moved(,%rax,4)
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movw	$26480, BasicBlockSignatureTracker # imm = 0x6770
	movw	$508, RunTimeSignatureAdjuster # imm = 0x1FC
	jmp	.LBB47_153
.LBB47_103:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$208, %ax
	cmpw	$26527, %ax             # imm = 0x679F
	jne	.LBB47_155
# %bb.104:                              # %unmake.split497
	movslq	(%r13), %rax
	movl	board(,%rax,4), %eax
	movw	$26527, BasicBlockSignatureTracker # imm = 0x679F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB47_115
# %bb.105:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$26533, %ax             # imm = 0x67A5
	jne	.LBB47_155
# %bb.106:                              # %unmake.split503
	movslq	(%r13), %rax
	movl	board(,%rax,4), %eax
	movw	$26533, BasicBlockSignatureTracker # imm = 0x67A5
	movw	$58, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	je	.LBB47_115
# %bb.107:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$843, %ax               # imm = 0x34B
	cmpw	$25838, %ax             # imm = 0x64EE
	jne	.LBB47_155
# %bb.108:                              # %unmake.split507
	movw	$25838, BasicBlockSignatureTracker # imm = 0x64EE
	movw	$843, RunTimeSignatureAdjuster # imm = 0x34B
# %bb.109:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$26537, %ax             # imm = 0x67A9
	jne	.LBB47_155
# %bb.110:                              # %unmake.split667
	movl	(%r12), %eax
	movw	$26537, BasicBlockSignatureTracker # imm = 0x67A9
	movw	$54, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB47_115
# %bb.111:                              # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8944, %ax              # imm = 0x22F0
	cmpw	$17753, %ax             # imm = 0x4559
	jne	.LBB47_155
# %bb.112:                              # %unmake.split509
	movw	$17753, BasicBlockSignatureTracker # imm = 0x4559
	movw	$8944, RunTimeSignatureAdjuster # imm = 0x22F0
# %bb.113:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$26541, %ax             # imm = 0x67AD
	jne	.LBB47_155
# %bb.114:                              # %unmake.split669
	movabsq	$zobrist, %rax
	movslq	(%r13), %rcx
	movl	board(,%rcx,4), %ecx
	movslq	(%r14), %rdx
	movl	%ecx, board(,%rdx,4)
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	(%r13), %rdx
	movl	%ecx, board(,%rdx,4)
	movslq	(%r13), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movslq	(%r14), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	white_to_move, %ecx
	xorl	$1, %ecx
	movl	%ecx, white_to_move
	movslq	(%r14), %rcx
	movslq	board(,%rcx,4), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movslq	(%r13), %rcx
	movl	(%rdx,%rcx,4), %ecx
	xorl	hash, %ecx
	movl	%ecx, hash
	movslq	(%r14), %rcx
	movslq	board(,%rcx,4), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	(%r14), %rcx
	movl	(%rax,%rcx,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movw	$26541, BasicBlockSignatureTracker # imm = 0x67AD
	movw	$289, RunTimeSignatureAdjuster # imm = 0x121
	jmp	.LBB47_153
.LBB47_115:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$90, %ax
	xorw	%cx, %ax
	cmpw	$26565, %ax             # imm = 0x67C5
	jne	.LBB47_155
# %bb.116:                              # %unmake.split505
	movl	(%r12), %eax
	movw	$26565, BasicBlockSignatureTracker # imm = 0x67C5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB47_123
# %bb.117:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$26567, %ax             # imm = 0x67C7
	jne	.LBB47_155
# %bb.118:                              # %unmake.split511
	movl	$2, %ecx
	movslq	(%r13), %rax
	movl	board(,%rax,4), %eax
	cltd
	idivl	%ecx
	movw	$26567, BasicBlockSignatureTracker # imm = 0x67C7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB47_121
# %bb.119:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$26578, %ax             # imm = 0x67D2
	jne	.LBB47_155
# %bb.120:                              # %unmake.split515
	movabsq	$zobrist, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	(%r13), %rdx
	movl	%ecx, board(,%rdx,4)
	movslq	(%r14), %rcx
	movl	$1, board(,%rcx,4)
	movslq	(%r13), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movslq	(%r14), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	white_to_move, %ecx
	xorl	$1, %ecx
	movl	%ecx, white_to_move
	movslq	(%r14), %rcx
	movl	zobrist+576(,%rcx,4), %ecx
	xorl	hash, %ecx
	movl	%ecx, hash
	movslq	(%r12), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	(%r13), %rcx
	movl	(%rax,%rcx,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r12), %rax
	movl	material(,%rax,4), %eax
	movl	Material, %ecx
	subl	%eax, %ecx
	movl	%ecx, Material
	movl	material+4, %eax
	addl	Material, %eax
	movl	%eax, Material
	movw	$26578, BasicBlockSignatureTracker # imm = 0x67D2
	movw	$350, RunTimeSignatureAdjuster # imm = 0x15E
	jmp	.LBB47_153
.LBB47_121:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$26579, %ax             # imm = 0x67D3
	jne	.LBB47_155
# %bb.122:                              # %unmake.split517
	movabsq	$zobrist, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	(%r13), %rdx
	movl	%ecx, board(,%rdx,4)
	movslq	(%r14), %rcx
	movl	$2, board(,%rcx,4)
	movslq	(%r13), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movslq	(%r14), %rcx
	movl	moved(,%rcx,4), %edx
	addl	$-1, %edx
	movl	%edx, moved(,%rcx,4)
	movl	white_to_move, %ecx
	xorl	$1, %ecx
	movl	%ecx, white_to_move
	movslq	(%r14), %rcx
	movl	zobrist+1152(,%rcx,4), %ecx
	xorl	hash, %ecx
	movl	%ecx, hash
	movslq	(%r12), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	(%r13), %rcx
	movl	(%rax,%rcx,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r12), %rax
	movl	material(,%rax,4), %eax
	movl	Material, %ecx
	subl	%eax, %ecx
	movl	%ecx, Material
	movl	material+8, %eax
	addl	Material, %eax
	movl	%eax, Material
	movw	$26579, BasicBlockSignatureTracker # imm = 0x67D3
	movw	$351, RunTimeSignatureAdjuster # imm = 0x15F
	jmp	.LBB47_153
.LBB47_123:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$26583, %ax             # imm = 0x67D7
	jne	.LBB47_155
# %bb.124:                              # %unmake.split513
	movslq	(%r13), %rax
	movl	board(,%rax,4), %eax
	movw	$26583, BasicBlockSignatureTracker # imm = 0x67D7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB47_137
# %bb.125:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$26593, %ax             # imm = 0x67E1
	jne	.LBB47_155
# %bb.126:                              # %unmake.split519
	movl	(%r14), %eax
	movl	%eax, wking_loc
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	(%r13), %rcx
	movl	%eax, board(,%rcx,4)
	movslq	(%r14), %rax
	movl	$5, board(,%rax,4)
	movslq	(%r13), %rax
	movl	moved(,%rax,4), %ecx
	addl	$-1, %ecx
	movl	%ecx, moved(,%rax,4)
	movslq	(%r14), %rax
	movl	moved(,%rax,4), %ecx
	addl	$-1, %ecx
	movl	%ecx, moved(,%rax,4)
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movslq	(%r14), %rax
	movl	zobrist+2880(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r13), %rax
	movl	zobrist+2880(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	(%rbx), %eax
	movw	$26593, BasicBlockSignatureTracker # imm = 0x67E1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB47_129
# %bb.127:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$26598, %ax             # imm = 0x67E6
	jne	.LBB47_155
# %bb.128:                              # %unmake.split523
	movl	$7, board+132
	movl	$13, board+124
	movl	moved+132, %eax
	addl	$-1, %eax
	movl	%eax, moved+132
	movl	moved+124, %eax
	addl	$-1, %eax
	movl	%eax, moved+124
	movl	$0, white_castled
	movl	squares+124, %eax
	movl	%eax, squares+132
	movl	$0, squares+124
	movslq	squares+132, %rax
	movl	$33, pieces(,%rax,4)
	movl	zobrist+4164, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	zobrist+4156, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movw	$26598, BasicBlockSignatureTracker # imm = 0x67E6
	movw	$362, RunTimeSignatureAdjuster # imm = 0x16A
	jmp	.LBB47_153
.LBB47_129:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$26601, %ax             # imm = 0x67E9
	jne	.LBB47_155
# %bb.130:                              # %unmake.split525
	movl	(%rbx), %eax
	movw	$26601, BasicBlockSignatureTracker # imm = 0x67E9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB47_133
# %bb.131:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$26608, %ax             # imm = 0x67F0
	jne	.LBB47_155
# %bb.132:                              # %unmake.split527
	movl	$7, board+104
	movl	$13, board+116
	movl	moved+104, %eax
	addl	$-1, %eax
	movl	%eax, moved+104
	movl	moved+116, %eax
	addl	$-1, %eax
	movl	%eax, moved+116
	movl	$0, white_castled
	movl	squares+116, %eax
	movl	%eax, squares+104
	movl	$0, squares+116
	movslq	squares+104, %rax
	movl	$26, pieces(,%rax,4)
	movl	zobrist+4148, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	zobrist+4136, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movw	$26608, BasicBlockSignatureTracker # imm = 0x67F0
	movw	$380, RunTimeSignatureAdjuster # imm = 0x17C
	jmp	.LBB47_153
.LBB47_133:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4072, %ax              # imm = 0xFE8
	cmpw	$26625, %ax             # imm = 0x6801
	jne	.LBB47_155
# %bb.134:                              # %unmake.split529
	movw	$26625, BasicBlockSignatureTracker # imm = 0x6801
	movw	$0, RunTimeSignatureAdjuster
# %bb.135:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$26635, %ax             # imm = 0x680B
	jne	.LBB47_155
# %bb.136:                              # %unmake.split531
	movw	$26635, BasicBlockSignatureTracker # imm = 0x680B
	movw	$3719, RunTimeSignatureAdjuster # imm = 0xE87
	jmp	.LBB47_153
.LBB47_137:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4037, %ax              # imm = 0xFC5
	cmpw	$26642, %ax             # imm = 0x6812
	jne	.LBB47_155
# %bb.138:                              # %unmake.split521
	movl	(%r14), %eax
	movl	%eax, bking_loc
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	(%r13), %rcx
	movl	%eax, board(,%rcx,4)
	movslq	(%r14), %rax
	movl	$6, board(,%rax,4)
	movslq	(%r13), %rax
	movl	moved(,%rax,4), %ecx
	addl	$-1, %ecx
	movl	%ecx, moved(,%rax,4)
	movslq	(%r14), %rax
	movl	moved(,%rax,4), %ecx
	addl	$-1, %ecx
	movl	%ecx, moved(,%rax,4)
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movslq	(%r14), %rax
	movl	zobrist+3456(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movslq	(%r13), %rax
	movl	zobrist+3456(,%rax,4), %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	(%rbx), %eax
	movw	$26642, BasicBlockSignatureTracker # imm = 0x6812
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB47_141
# %bb.139:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$35, %ax
	cmpw	$26673, %ax             # imm = 0x6831
	jne	.LBB47_155
# %bb.140:                              # %unmake.split533
	movl	$8, board+468
	movl	$13, board+460
	movl	moved+468, %eax
	addl	$-1, %eax
	movl	%eax, moved+468
	movl	moved+460, %eax
	addl	$-1, %eax
	movl	%eax, moved+460
	movl	$0, black_castled
	movl	squares+460, %eax
	movl	%eax, squares+468
	movl	$0, squares+460
	movslq	squares+468, %rax
	movl	$117, pieces(,%rax,4)
	movl	zobrist+5076, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	zobrist+5068, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movw	$26673, BasicBlockSignatureTracker # imm = 0x6831
	movw	$3773, RunTimeSignatureAdjuster # imm = 0xEBD
	jmp	.LBB47_153
.LBB47_141:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$26686, %ax             # imm = 0x683E
	jne	.LBB47_155
# %bb.142:                              # %unmake.split535
	movl	(%rbx), %eax
	movw	$26686, BasicBlockSignatureTracker # imm = 0x683E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB47_145
# %bb.143:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$113, %ax
	cmpw	$26703, %ax             # imm = 0x684F
	jne	.LBB47_155
# %bb.144:                              # %unmake.split537
	movl	$8, board+440
	movl	$13, board+452
	movl	moved+440, %eax
	addl	$-1, %eax
	movl	%eax, moved+440
	movl	moved+452, %eax
	addl	$-1, %eax
	movl	%eax, moved+452
	movl	$0, black_castled
	movl	squares+452, %eax
	movl	%eax, squares+440
	movl	$0, squares+452
	movslq	squares+440, %rax
	movl	$110, pieces(,%rax,4)
	movl	zobrist+5048, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movl	zobrist+5060, %eax
	xorl	hash, %eax
	movl	%eax, hash
	movw	$26703, BasicBlockSignatureTracker # imm = 0x684F
	movw	$3779, RunTimeSignatureAdjuster # imm = 0xEC3
	jmp	.LBB47_153
.LBB47_145:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$100, %ax
	cmpw	$26714, %ax             # imm = 0x685A
	jne	.LBB47_155
# %bb.146:                              # %unmake.split539
	movw	$26714, BasicBlockSignatureTracker # imm = 0x685A
	movw	$0, RunTimeSignatureAdjuster
# %bb.147:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$26715, %ax             # imm = 0x685B
	jne	.LBB47_155
# %bb.148:                              # %unmake.split541
	movw	$26715, BasicBlockSignatureTracker # imm = 0x685B
	movw	$0, RunTimeSignatureAdjuster
# %bb.149:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$26727, %ax             # imm = 0x6867
	jne	.LBB47_155
# %bb.150:                              # %unmake.split543
	movw	$26727, BasicBlockSignatureTracker # imm = 0x6867
	movw	$0, RunTimeSignatureAdjuster
# %bb.151:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$26743, %ax             # imm = 0x6877
	jne	.LBB47_155
# %bb.152:                              # %unmake.split545
	movw	$26743, BasicBlockSignatureTracker # imm = 0x6877
	movw	$3835, RunTimeSignatureAdjuster # imm = 0xEFB
.LBB47_153:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3826, %ax              # imm = 0xEF2
	xorw	%cx, %ax
	cmpw	$26750, %ax             # imm = 0x687E
	jne	.LBB47_155
# %bb.154:                              # %unmake.split461
	movw	$26750, BasicBlockSignatureTracker # imm = 0x687E
	movw	$-7521, RunTimeSignatureAdjuster # imm = 0xE29F
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB47_155:                             # %CFerrorHandler.unmake
	callq	FAULT_DETECTED_CFC
.Lfunc_end47:
	.size	unmake, .Lfunc_end47-unmake
	.cfi_endproc
                                        # -- End function
	.globl	check_phase             # -- Begin function check_phase
	.p2align	4, 0x90
	.type	check_phase,@function
check_phase:                            # @check_phase
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-21855, %ax            # imm = 0xAAA1
	xorw	%cx, %ax
	cmpw	$26775, %ax             # imm = 0x6897
	jne	.LBB48_58
# %bb.1:                                # %check_phase.split163
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-21855, %ax            # imm = 0xAAA1
	xorw	%cx, %ax
	cmpw	$26775, %ax             # imm = 0x6897
	jne	.LBB48_58
# %bb.2:                                # %check_phase.split161
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movl	$0, (%r8)
	movl	$1, (%rcx)
	movl	$1, (%rdx)
	movw	$26775, BasicBlockSignatureTracker # imm = 0x6897
	movw	$0, RunTimeSignatureAdjuster
.LBB48_3:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %di
	movw	RunTimeSignatureAdjuster, %ax
	xorw	$8, %di
	xorw	%ax, %di
	cmpw	$26783, %di             # imm = 0x689F
	jne	.LBB48_57
# %bb.4:                                # %check_phase.split
                                        #   in Loop: Header=BB48_3 Depth=1
	movl	(%rdx), %eax
	movl	piece_count, %edi
	movw	$26783, BasicBlockSignatureTracker # imm = 0x689F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edi, %eax
	jg	.LBB48_31
# %bb.5:                                #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$91, %ax
	cmpw	$26820, %ax             # imm = 0x68C4
	jne	.LBB48_57
# %bb.6:                                # %check_phase.split115
                                        #   in Loop: Header=BB48_3 Depth=1
	movslq	(%rcx), %rax
	movl	pieces(,%rax,4), %eax
	movl	%eax, (%rsi)
	movl	(%rsi), %eax
	movw	$26820, BasicBlockSignatureTracker # imm = 0x68C4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB48_9
# %bb.7:                                #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$26828, %ax             # imm = 0x68CC
	jne	.LBB48_57
# %bb.8:                                # %check_phase.split121
                                        #   in Loop: Header=BB48_3 Depth=1
	movw	$26828, BasicBlockSignatureTracker # imm = 0x68CC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB48_29
.LBB48_9:                               #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$26833, %ax             # imm = 0x68D1
	jne	.LBB48_57
# %bb.10:                               # %check_phase.split119
                                        #   in Loop: Header=BB48_3 Depth=1
	movl	(%rdx), %eax
	addl	$1, %eax
	movl	%eax, (%rdx)
	movw	$26833, BasicBlockSignatureTracker # imm = 0x68D1
	movw	$0, RunTimeSignatureAdjuster
# %bb.11:                               #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$26840, %ax             # imm = 0x68D8
	jne	.LBB48_57
# %bb.12:                               # %check_phase.split125
                                        #   in Loop: Header=BB48_3 Depth=1
	movslq	(%rsi), %rax
	movl	board(,%rax,4), %eax
	movw	$26840, BasicBlockSignatureTracker # imm = 0x68D8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB48_27
# %bb.13:                               #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$26853, %ax             # imm = 0x68E5
	jne	.LBB48_57
# %bb.14:                               # %check_phase.split127
                                        #   in Loop: Header=BB48_3 Depth=1
	movslq	(%rsi), %rax
	movl	board(,%rax,4), %eax
	movw	$26853, BasicBlockSignatureTracker # imm = 0x68E5
	movw	$61, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB48_27
# %bb.15:                               # %Buffer__
                                        #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14059, %ax            # imm = 0xC915
	cmpw	$-24080, %ax            # imm = 0xA1F0
	jne	.LBB48_57
# %bb.16:                               # %check_phase.split131
                                        #   in Loop: Header=BB48_3 Depth=1
	movw	$-24080, BasicBlockSignatureTracker # imm = 0xA1F0
	movw	$-14059, RunTimeSignatureAdjuster # imm = 0xC915
# %bb.17:                               #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %di
	xorw	$20, %ax
	xorw	%di, %ax
	cmpw	$26865, %ax             # imm = 0x68F1
	jne	.LBB48_57
# %bb.18:                               # %check_phase.split165
                                        #   in Loop: Header=BB48_3 Depth=1
	movslq	(%rsi), %rax
	movl	board(,%rax,4), %eax
	movw	$26865, BasicBlockSignatureTracker # imm = 0x68F1
	movw	$41, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB48_27
# %bb.19:                               # %Buffer__1
                                        #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3714, %ax             # imm = 0xF17E
	cmpw	$-26225, %ax            # imm = 0x998F
	jne	.LBB48_57
# %bb.20:                               # %check_phase.split133
                                        #   in Loop: Header=BB48_3 Depth=1
	movw	$-26225, BasicBlockSignatureTracker # imm = 0x998F
	movw	$-3714, RunTimeSignatureAdjuster # imm = 0xF17E
# %bb.21:                               #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %di
	xorw	$507, %ax               # imm = 0x1FB
	xorw	%di, %ax
	cmpw	$26890, %ax             # imm = 0x690A
	jne	.LBB48_57
# %bb.22:                               # %check_phase.split167
                                        #   in Loop: Header=BB48_3 Depth=1
	movslq	(%rsi), %rax
	movl	board(,%rax,4), %eax
	movw	$26890, BasicBlockSignatureTracker # imm = 0x690A
	movw	$466, RunTimeSignatureAdjuster # imm = 0x1D2
	cmpl	$0, %eax
	je	.LBB48_27
# %bb.23:                               # %Buffer__2
                                        #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13358, %ax             # imm = 0x342E
	cmpw	$23844, %ax             # imm = 0x5D24
	jne	.LBB48_57
# %bb.24:                               # %check_phase.split135
                                        #   in Loop: Header=BB48_3 Depth=1
	movw	$23844, BasicBlockSignatureTracker # imm = 0x5D24
	movw	$13358, RunTimeSignatureAdjuster # imm = 0x342E
# %bb.25:                               #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %di
	xorw	$7, %ax
	xorw	%di, %ax
	cmpw	$26893, %ax             # imm = 0x690D
	jne	.LBB48_57
# %bb.26:                               # %check_phase.split169
                                        #   in Loop: Header=BB48_3 Depth=1
	movl	(%r8), %eax
	addl	$1, %eax
	movl	%eax, (%r8)
	movw	$26893, BasicBlockSignatureTracker # imm = 0x690D
	movw	$469, RunTimeSignatureAdjuster # imm = 0x1D5
.LBB48_27:                              #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %di
	xorw	$462, %ax               # imm = 0x1CE
	xorw	%di, %ax
	cmpw	$26902, %ax             # imm = 0x6916
	jne	.LBB48_57
# %bb.28:                               # %check_phase.split129
                                        #   in Loop: Header=BB48_3 Depth=1
	movw	$26902, BasicBlockSignatureTracker # imm = 0x6916
	movw	$474, RunTimeSignatureAdjuster # imm = 0x1DA
.LBB48_29:                              #   in Loop: Header=BB48_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %di
	xorw	$469, %ax               # imm = 0x1D5
	xorw	%di, %ax
	cmpw	$26905, %ax             # imm = 0x6919
	jne	.LBB48_57
# %bb.30:                               # %check_phase.split123
                                        #   in Loop: Header=BB48_3 Depth=1
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$26905, BasicBlockSignatureTracker # imm = 0x6919
	movw	$398, RunTimeSignatureAdjuster # imm = 0x18E
	jmp	.LBB48_3
.LBB48_31:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$419, %ax               # imm = 0x1A3
	cmpw	$26940, %ax             # imm = 0x693C
	jne	.LBB48_58
# %bb.32:                               # %check_phase.split117
	movl	(%r8), %eax
	movw	$26940, BasicBlockSignatureTracker # imm = 0x693C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	jl	.LBB48_47
# %bb.33:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$77, %ax
	cmpw	$26993, %ax             # imm = 0x6971
	jne	.LBB48_58
# %bb.34:                               # %check_phase.split137
	movl	white_castled, %eax
	movw	$26993, BasicBlockSignatureTracker # imm = 0x6971
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB48_37
# %bb.35:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$27007, %ax             # imm = 0x697F
	jne	.LBB48_58
# %bb.36:                               # %check_phase.split141
	movl	black_castled, %eax
	movw	$27007, BasicBlockSignatureTracker # imm = 0x697F
	movw	$14, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB48_45
.LBB48_37:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$251, %ax
	xorw	%cx, %ax
	cmpw	$27018, %ax             # imm = 0x698A
	jne	.LBB48_58
# %bb.38:                               # %check_phase.split143
	movl	board+120, %eax
	movw	$27018, BasicBlockSignatureTracker # imm = 0x698A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB48_43
# %bb.39:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$27019, %ax             # imm = 0x698B
	jne	.LBB48_58
# %bb.40:                               # %check_phase.split149
	movl	board+456, %eax
	movw	$27019, BasicBlockSignatureTracker # imm = 0x698B
	movw	$183, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jne	.LBB48_47
# %bb.41:                               # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$208, %ax
	cmpw	$26971, %ax             # imm = 0x695B
	jne	.LBB48_58
# %bb.42:                               # %check_phase.split151
	movw	$26971, BasicBlockSignatureTracker # imm = 0x695B
	movw	$209, RunTimeSignatureAdjuster
.LBB48_43:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$27029, %ax             # imm = 0x6995
	jne	.LBB48_58
# %bb.44:                               # %check_phase.split147
	movl	$0, phase
	movw	$27029, BasicBlockSignatureTracker # imm = 0x6995
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB48_55
.LBB48_45:                              # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21945, %ax             # imm = 0x55B9
	cmpw	$15558, %ax             # imm = 0x3CC6
	jne	.LBB48_58
# %bb.46:                               # %check_phase.split145
	movw	$15558, BasicBlockSignatureTracker # imm = 0x3CC6
	movw	$22010, RunTimeSignatureAdjuster # imm = 0x55FA
.LBB48_47:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$162, %ax
	xorw	%cx, %ax
	cmpw	$27038, %ax             # imm = 0x699E
	jne	.LBB48_58
# %bb.48:                               # %check_phase.split139
	movl	(%r8), %eax
	movw	$27038, BasicBlockSignatureTracker # imm = 0x699E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jg	.LBB48_51
# %bb.49:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$27040, %ax             # imm = 0x69A0
	jne	.LBB48_58
# %bb.50:                               # %check_phase.split155
	movl	$2, phase
	movw	$27040, BasicBlockSignatureTracker # imm = 0x69A0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB48_53
.LBB48_51:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$27052, %ax             # imm = 0x69AC
	jne	.LBB48_58
# %bb.52:                               # %check_phase.split157
	movl	$1, phase
	movw	$27052, BasicBlockSignatureTracker # imm = 0x69AC
	movw	$12, RunTimeSignatureAdjuster
.LBB48_53:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$77, %ax
	xorw	%cx, %ax
	cmpw	$27117, %ax             # imm = 0x69ED
	jne	.LBB48_58
# %bb.54:                               # %check_phase.split159
	movw	$27117, BasicBlockSignatureTracker # imm = 0x69ED
	movw	$120, RunTimeSignatureAdjuster
.LBB48_55:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$122, %ax
	xorw	%cx, %ax
	cmpw	$27119, %ax             # imm = 0x69EF
	jne	.LBB48_58
# %bb.56:                               # %check_phase.split153
	movw	$27119, BasicBlockSignatureTracker # imm = 0x69EF
	movw	$-21528, RunTimeSignatureAdjuster # imm = 0xABE8
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB48_57:                              # %CFerrorHandler.check_phase.loopexit
	jmp	.LBB48_58
.LBB48_58:                              # %CFerrorHandler.check_phase
	callq	FAULT_DETECTED_CFC
.Lfunc_end48:
	.size	check_phase, .Lfunc_end48-check_phase
	.cfi_endproc
                                        # -- End function
	.globl	King                    # -- Begin function King
	.p2align	4, 0x90
	.type	King,@function
King:                                   # @King
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movl	%edi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movl	$0, -4(%rbp)
	movslq	-8(%rbp), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$27136, BasicBlockSignatureTracker # imm = 0x6A00
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jl	.LBB49_11
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$27162, %ax             # imm = 0x6A1A
	jne	.LBB49_29
# %bb.2:                                # %King.split
	movl	-8(%rbp), %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	sarl	$1, %eax
	movw	$27162, BasicBlockSignatureTracker # imm = 0x6A1A
	movw	$26, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB49_11
# %bb.3:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-13784, %ax            # imm = 0xCA28
	cmpw	$-24526, %ax            # imm = 0xA032
	jne	.LBB49_29
# %bb.4:                                # %King.split59
	movw	$-24526, BasicBlockSignatureTracker # imm = 0xA032
	movw	$-13784, RunTimeSignatureAdjuster # imm = 0xCA28
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$87, %ax
	xorw	%cx, %ax
	cmpw	$27213, %ax             # imm = 0x6A4D
	jne	.LBB49_29
# %bb.6:                                # %King.split75
	movl	-8(%rbp), %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	andl	$1, %eax
	movl	-12(%rbp), %ecx
	movw	$27213, BasicBlockSignatureTracker # imm = 0x6A4D
	movw	$77, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB49_11
# %bb.7:                                # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9230, %ax              # imm = 0x240E
	cmpw	$20035, %ax             # imm = 0x4E43
	jne	.LBB49_29
# %bb.8:                                # %King.split61
	movw	$20035, BasicBlockSignatureTracker # imm = 0x4E43
	movw	$9230, RunTimeSignatureAdjuster # imm = 0x240E
# %bb.9:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$27221, %ax             # imm = 0x6A55
	jne	.LBB49_29
# %bb.10:                               # %King.split77
	movl	-4(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -4(%rbp)
	movw	$27221, BasicBlockSignatureTracker # imm = 0x6A55
	movw	$85, RunTimeSignatureAdjuster
.LBB49_11:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$87, %ax
	xorw	%cx, %ax
	cmpw	$27223, %ax             # imm = 0x6A57
	jne	.LBB49_29
# %bb.12:                               # %King.split57
	movslq	-8(%rbp), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$27223, BasicBlockSignatureTracker # imm = 0x6A57
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jl	.LBB49_23
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$27257, %ax             # imm = 0x6A79
	jne	.LBB49_29
# %bb.14:                               # %King.split63
	movl	-8(%rbp), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	sarl	$1, %eax
	movw	$27257, BasicBlockSignatureTracker # imm = 0x6A79
	movw	$46, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB49_23
# %bb.15:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19375, %ax             # imm = 0x4BAF
	cmpw	$8662, %ax              # imm = 0x21D6
	jne	.LBB49_29
# %bb.16:                               # %King.split67
	movw	$8662, BasicBlockSignatureTracker # imm = 0x21D6
	movw	$19375, RunTimeSignatureAdjuster # imm = 0x4BAF
# %bb.17:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$252, %ax
	xorw	%cx, %ax
	cmpw	$27269, %ax             # imm = 0x6A85
	jne	.LBB49_29
# %bb.18:                               # %King.split79
	movl	-8(%rbp), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	andl	$1, %eax
	movl	-12(%rbp), %ecx
	movw	$27269, BasicBlockSignatureTracker # imm = 0x6A85
	movw	$210, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB49_23
# %bb.19:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-464, %ax              # imm = 0xFE30
	cmpw	$-27467, %ax            # imm = 0x94B5
	jne	.LBB49_29
# %bb.20:                               # %King.split69
	movw	$-27467, BasicBlockSignatureTracker # imm = 0x94B5
	movw	$-464, RunTimeSignatureAdjuster # imm = 0xFE30
# %bb.21:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$27272, %ax             # imm = 0x6A88
	jne	.LBB49_29
# %bb.22:                               # %King.split81
	movl	-4(%rbp), %eax
	addl	$2, %eax
	movl	%eax, -4(%rbp)
	movw	$27272, BasicBlockSignatureTracker # imm = 0x6A88
	movw	$223, RunTimeSignatureAdjuster
.LBB49_23:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$218, %ax
	xorw	%cx, %ax
	cmpw	$27277, %ax             # imm = 0x6A8D
	jne	.LBB49_29
# %bb.24:                               # %King.split65
	movl	-12(%rbp), %eax
	movw	$27277, BasicBlockSignatureTracker # imm = 0x6A8D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB49_27
# %bb.25:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$27288, %ax             # imm = 0x6A98
	jne	.LBB49_29
# %bb.26:                               # %King.split71
	xorl	%eax, %eax
	subl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movw	$27288, BasicBlockSignatureTracker # imm = 0x6A98
	movw	$21, RunTimeSignatureAdjuster
.LBB49_27:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$27291, %ax             # imm = 0x6A9B
	jne	.LBB49_29
# %bb.28:                               # %King.split73
	movl	-4(%rbp), %eax
	movw	$27291, BasicBlockSignatureTracker # imm = 0x6A9B
	movw	$0, RunTimeSignatureAdjuster
	addq	$16, %rsp
	popq	%rbp
	retq
.LBB49_29:                              # %CFerrorHandler.King
	callq	FAULT_DETECTED_CFC
.Lfunc_end49:
	.size	King, .Lfunc_end49-King
	.cfi_endproc
                                        # -- End function
	.globl	Queen                   # -- Begin function Queen
	.p2align	4, 0x90
	.type	Queen,@function
Queen:                                  # @Queen
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movabsq	$distance, %rax
	movl	%edi, -12(%rbp)
	movl	%esi, -16(%rbp)
	movl	$0, -8(%rbp)
	movl	-16(%rbp), %ecx
	xorl	$1, %ecx
	movl	%ecx, -20(%rbp)
	movl	-8(%rbp), %ecx
	addl	$900, %ecx              # imm = 0x384
	movl	%ecx, -8(%rbp)
	movslq	-12(%rbp), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	-20(%rbp), %rcx
	movslq	king_locs(,%rcx,4), %rcx
	movslq	(%rax,%rcx,4), %rax
	movl	std_q_tropism(,%rax,4), %eax
	addl	-8(%rbp), %eax
	movl	%eax, -8(%rbp)
	movl	-12(%rbp), %edi
	movw	$27309, BasicBlockSignatureTracker # imm = 0x6AAD
	movw	$0, RunTimeSignatureAdjuster
	callq	rook_mobility
	movw	$27309, BasicBlockSignatureTracker # imm = 0x6AAD
	movw	$0, RunTimeSignatureAdjuster
	shll	$1, %eax
	movl	%eax, -4(%rbp)
	movl	-12(%rbp), %edi
	movw	$27309, BasicBlockSignatureTracker # imm = 0x6AAD
	movw	$0, RunTimeSignatureAdjuster
	callq	bishop_mobility
	movw	$27309, BasicBlockSignatureTracker # imm = 0x6AAD
	movw	$0, RunTimeSignatureAdjuster
	shll	$1, %eax
	addl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movl	-4(%rbp), %eax
	movw	$27309, BasicBlockSignatureTracker # imm = 0x6AAD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jg	.LBB50_15
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$64, %ax
	cmpw	$27373, %ax             # imm = 0x6AED
	jne	.LBB50_21
# %bb.2:                                # %Queen.split
	movl	-4(%rbp), %eax
	movw	$27373, BasicBlockSignatureTracker # imm = 0x6AED
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB50_5
# %bb.3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$481, %ax               # imm = 0x1E1
	cmpw	$27404, %ax             # imm = 0x6B0C
	jne	.LBB50_21
# %bb.4:                                # %Queen.split38
	movl	-4(%rbp), %eax
	subl	$15, %eax
	movl	%eax, -4(%rbp)
	movw	$27404, BasicBlockSignatureTracker # imm = 0x6B0C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB50_13
.LBB50_5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$462, %ax               # imm = 0x1CE
	cmpw	$27427, %ax             # imm = 0x6B23
	jne	.LBB50_21
# %bb.6:                                # %Queen.split40
	movl	-4(%rbp), %eax
	movw	$27427, BasicBlockSignatureTracker # imm = 0x6B23
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB50_9
# %bb.7:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$103, %ax
	cmpw	$27460, %ax             # imm = 0x6B44
	jne	.LBB50_21
# %bb.8:                                # %Queen.split44
	movl	-4(%rbp), %eax
	subl	$10, %eax
	movl	%eax, -4(%rbp)
	movw	$27460, BasicBlockSignatureTracker # imm = 0x6B44
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB50_11
.LBB50_9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$100, %ax
	cmpw	$27463, %ax             # imm = 0x6B47
	jne	.LBB50_21
# %bb.10:                               # %Queen.split46
	movl	-4(%rbp), %eax
	subl	$5, %eax
	movl	%eax, -4(%rbp)
	movw	$27463, BasicBlockSignatureTracker # imm = 0x6B47
	movw	$3, RunTimeSignatureAdjuster
.LBB50_11:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$27464, %ax             # imm = 0x6B48
	jne	.LBB50_21
# %bb.12:                               # %Queen.split48
	movw	$27464, BasicBlockSignatureTracker # imm = 0x6B48
	movw	$68, RunTimeSignatureAdjuster
.LBB50_13:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$67, %ax
	xorw	%cx, %ax
	cmpw	$27471, %ax             # imm = 0x6B4F
	jne	.LBB50_21
# %bb.14:                               # %Queen.split42
	movw	$27471, BasicBlockSignatureTracker # imm = 0x6B4F
	movw	$482, RunTimeSignatureAdjuster # imm = 0x1E2
.LBB50_15:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$511, %ax               # imm = 0x1FF
	xorw	%cx, %ax
	cmpw	$27474, %ax             # imm = 0x6B52
	jne	.LBB50_21
# %bb.16:                               # %Queen.split36
	movl	-4(%rbp), %eax
	addl	-8(%rbp), %eax
	movl	%eax, -8(%rbp)
	movl	-16(%rbp), %eax
	movw	$27474, BasicBlockSignatureTracker # imm = 0x6B52
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB50_19
# %bb.17:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$27475, %ax             # imm = 0x6B53
	jne	.LBB50_21
# %bb.18:                               # %Queen.split50
	xorl	%eax, %eax
	subl	-8(%rbp), %eax
	movl	%eax, -8(%rbp)
	movw	$27475, BasicBlockSignatureTracker # imm = 0x6B53
	movw	$1, RunTimeSignatureAdjuster
.LBB50_19:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$27484, %ax             # imm = 0x6B5C
	jne	.LBB50_21
# %bb.20:                               # %Queen.split52
	movl	-8(%rbp), %eax
	movw	$27484, BasicBlockSignatureTracker # imm = 0x6B5C
	movw	$0, RunTimeSignatureAdjuster
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB50_21:                              # %CFerrorHandler.Queen
	callq	FAULT_DETECTED_CFC
.Lfunc_end50:
	.size	Queen, .Lfunc_end50-Queen
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function rook_mobility
	.type	rook_mobility,@function
rook_mobility:                          # @rook_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$291, %ax               # imm = 0x123
	xorw	%cx, %ax
	cmpw	$27534, %ax             # imm = 0x6B8E
	jne	.LBB51_21
# %bb.1:                                # %rook_mobility.split52
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$291, %ax               # imm = 0x123
	xorw	%cx, %ax
	cmpw	$27534, %ax             # imm = 0x6B8E
	jne	.LBB51_21
# %bb.2:                                # %rook_mobility.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movl	%edi, (%rax)
	movl	$0, (%rcx)
	movl	$0, (%rsi)
	movw	$27534, BasicBlockSignatureTracker # imm = 0x6B8E
	movw	$0, RunTimeSignatureAdjuster
.LBB51_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB51_7 Depth 2
	movw	BasicBlockSignatureTracker, %di
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$47, %di
	xorw	%dx, %di
	cmpw	$27553, %di             # imm = 0x6BA1
	jne	.LBB51_20
# %bb.4:                                # %rook_mobility.split36
                                        #   in Loop: Header=BB51_3 Depth=1
	movl	(%rsi), %edx
	movw	$27553, BasicBlockSignatureTracker # imm = 0x6BA1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jge	.LBB51_17
# %bb.5:                                #   in Loop: Header=BB51_3 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$18, %dx
	cmpw	$27571, %dx             # imm = 0x6BB3
	jne	.LBB51_20
# %bb.6:                                # %rook_mobility.split38
                                        #   in Loop: Header=BB51_3 Depth=1
	movl	(%rax), %edx
	movslq	(%rsi), %rdi
	addl	rook_mobility.dir(,%rdi,4), %edx
	movl	%edx, (%r8)
	movw	$27571, BasicBlockSignatureTracker # imm = 0x6BB3
	movw	$0, RunTimeSignatureAdjuster
.LBB51_7:                               #   Parent Loop BB51_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %di
	xorw	$12, %dx
	xorw	%di, %dx
	cmpw	$27583, %dx             # imm = 0x6BBF
	jne	.LBB51_19
# %bb.8:                                # %rook_mobility.split42
                                        #   in Loop: Header=BB51_7 Depth=2
	movslq	(%r8), %rdx
	movl	board(,%rdx,4), %edx
	movw	$27583, BasicBlockSignatureTracker # imm = 0x6BBF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	jne	.LBB51_13
# %bb.9:                                #   in Loop: Header=BB51_7 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$119, %dx
	cmpw	$27592, %dx             # imm = 0x6BC8
	jne	.LBB51_19
# %bb.10:                               # %rook_mobility.split44
                                        #   in Loop: Header=BB51_7 Depth=2
	movl	(%rcx), %edx
	addl	$1, %edx
	movl	%edx, (%rcx)
	movw	$27592, BasicBlockSignatureTracker # imm = 0x6BC8
	movw	$0, RunTimeSignatureAdjuster
# %bb.11:                               #   in Loop: Header=BB51_7 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$31, %dx
	cmpw	$27607, %dx             # imm = 0x6BD7
	jne	.LBB51_19
# %bb.12:                               # %rook_mobility.split48
                                        #   in Loop: Header=BB51_7 Depth=2
	movslq	(%rsi), %rdx
	movl	rook_mobility.dir(,%rdx,4), %edx
	addl	(%r8), %edx
	movl	%edx, (%r8)
	movw	$27607, BasicBlockSignatureTracker # imm = 0x6BD7
	movw	$100, RunTimeSignatureAdjuster
	jmp	.LBB51_7
.LBB51_13:                              #   in Loop: Header=BB51_3 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$100, %dx
	cmpw	$27611, %dx             # imm = 0x6BDB
	jne	.LBB51_20
# %bb.14:                               # %rook_mobility.split46
                                        #   in Loop: Header=BB51_3 Depth=1
	movw	$27611, BasicBlockSignatureTracker # imm = 0x6BDB
	movw	$0, RunTimeSignatureAdjuster
# %bb.15:                               #   in Loop: Header=BB51_3 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$6, %dx
	cmpw	$27613, %dx             # imm = 0x6BDD
	jne	.LBB51_20
# %bb.16:                               # %rook_mobility.split50
                                        #   in Loop: Header=BB51_3 Depth=1
	movl	(%rsi), %edx
	addl	$1, %edx
	movl	%edx, (%rsi)
	movw	$27613, BasicBlockSignatureTracker # imm = 0x6BDD
	movw	$83, RunTimeSignatureAdjuster
	jmp	.LBB51_3
.LBB51_17:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$27615, %ax             # imm = 0x6BDF
	jne	.LBB51_21
# %bb.18:                               # %rook_mobility.split40
	movl	(%rcx), %eax
	movw	$27615, BasicBlockSignatureTracker # imm = 0x6BDF
	movw	$0, RunTimeSignatureAdjuster
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB51_19:                              # %CFerrorHandler.rook_mobility.loopexit
	jmp	.LBB51_21
.LBB51_20:                              # %CFerrorHandler.rook_mobility.loopexit1
	jmp	.LBB51_21
.LBB51_21:                              # %CFerrorHandler.rook_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end51:
	.size	rook_mobility, .Lfunc_end51-rook_mobility
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function bishop_mobility
	.type	bishop_mobility,@function
bishop_mobility:                        # @bishop_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$349, %ax               # imm = 0x15D
	xorw	%cx, %ax
	cmpw	$27632, %ax             # imm = 0x6BF0
	jne	.LBB52_21
# %bb.1:                                # %bishop_mobility.split52
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$349, %ax               # imm = 0x15D
	xorw	%cx, %ax
	cmpw	$27632, %ax             # imm = 0x6BF0
	jne	.LBB52_21
# %bb.2:                                # %bishop_mobility.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movl	%edi, (%rax)
	movl	$0, (%rcx)
	movl	$0, (%rsi)
	movw	$27632, BasicBlockSignatureTracker # imm = 0x6BF0
	movw	$0, RunTimeSignatureAdjuster
.LBB52_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB52_7 Depth 2
	movw	BasicBlockSignatureTracker, %di
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$5, %di
	xorw	%dx, %di
	cmpw	$27637, %di             # imm = 0x6BF5
	jne	.LBB52_20
# %bb.4:                                # %bishop_mobility.split36
                                        #   in Loop: Header=BB52_3 Depth=1
	movl	(%rsi), %edx
	movw	$27637, BasicBlockSignatureTracker # imm = 0x6BF5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jge	.LBB52_17
# %bb.5:                                #   in Loop: Header=BB52_3 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$10, %dx
	cmpw	$27647, %dx             # imm = 0x6BFF
	jne	.LBB52_20
# %bb.6:                                # %bishop_mobility.split38
                                        #   in Loop: Header=BB52_3 Depth=1
	movl	(%rax), %edx
	movslq	(%rsi), %rdi
	addl	bishop_mobility.dir(,%rdi,4), %edx
	movl	%edx, (%r8)
	movw	$27647, BasicBlockSignatureTracker # imm = 0x6BFF
	movw	$0, RunTimeSignatureAdjuster
.LBB52_7:                               #   Parent Loop BB52_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %di
	xorw	$2036, %dx              # imm = 0x7F4
	xorw	%di, %dx
	cmpw	$27659, %dx             # imm = 0x6C0B
	jne	.LBB52_19
# %bb.8:                                # %bishop_mobility.split42
                                        #   in Loop: Header=BB52_7 Depth=2
	movslq	(%r8), %rdx
	movl	board(,%rdx,4), %edx
	movw	$27659, BasicBlockSignatureTracker # imm = 0x6C0B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	jne	.LBB52_13
# %bb.9:                                #   in Loop: Header=BB52_7 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$31, %dx
	cmpw	$27668, %dx             # imm = 0x6C14
	jne	.LBB52_19
# %bb.10:                               # %bishop_mobility.split44
                                        #   in Loop: Header=BB52_7 Depth=2
	movl	(%rcx), %edx
	addl	$1, %edx
	movl	%edx, (%rcx)
	movw	$27668, BasicBlockSignatureTracker # imm = 0x6C14
	movw	$0, RunTimeSignatureAdjuster
# %bb.11:                               #   in Loop: Header=BB52_7 Depth=2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$14, %dx
	cmpw	$27674, %dx             # imm = 0x6C1A
	jne	.LBB52_19
# %bb.12:                               # %bishop_mobility.split48
                                        #   in Loop: Header=BB52_7 Depth=2
	movslq	(%rsi), %rdx
	movl	bishop_mobility.dir(,%rdx,4), %edx
	addl	(%r8), %edx
	movl	%edx, (%r8)
	movw	$27674, BasicBlockSignatureTracker # imm = 0x6C1A
	movw	$2021, RunTimeSignatureAdjuster # imm = 0x7E5
	jmp	.LBB52_7
.LBB52_13:                              #   in Loop: Header=BB52_3 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$22, %dx
	cmpw	$27677, %dx             # imm = 0x6C1D
	jne	.LBB52_20
# %bb.14:                               # %bishop_mobility.split46
                                        #   in Loop: Header=BB52_3 Depth=1
	movw	$27677, BasicBlockSignatureTracker # imm = 0x6C1D
	movw	$0, RunTimeSignatureAdjuster
# %bb.15:                               #   in Loop: Header=BB52_3 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$39, %dx
	cmpw	$27706, %dx             # imm = 0x6C3A
	jne	.LBB52_20
# %bb.16:                               # %bishop_mobility.split50
                                        #   in Loop: Header=BB52_3 Depth=1
	movl	(%rsi), %edx
	addl	$1, %edx
	movl	%edx, (%rsi)
	movw	$27706, BasicBlockSignatureTracker # imm = 0x6C3A
	movw	$1994, RunTimeSignatureAdjuster # imm = 0x7CA
	jmp	.LBB52_3
.LBB52_17:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1994, %ax              # imm = 0x7CA
	cmpw	$27711, %ax             # imm = 0x6C3F
	jne	.LBB52_21
# %bb.18:                               # %bishop_mobility.split40
	movl	(%rcx), %eax
	movw	$27711, BasicBlockSignatureTracker # imm = 0x6C3F
	movw	$2016, RunTimeSignatureAdjuster # imm = 0x7E0
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB52_19:                              # %CFerrorHandler.bishop_mobility.loopexit
	jmp	.LBB52_21
.LBB52_20:                              # %CFerrorHandler.bishop_mobility.loopexit1
	jmp	.LBB52_21
.LBB52_21:                              # %CFerrorHandler.bishop_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end52:
	.size	bishop_mobility, .Lfunc_end52-bishop_mobility
	.cfi_endproc
                                        # -- End function
	.globl	Rook                    # -- Begin function Rook
	.p2align	4, 0x90
	.type	Rook,@function
Rook:                                   # @Rook
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movabsq	$rookdistance, %rax
	movl	%edi, -12(%rbp)
	movl	%esi, -8(%rbp)
	movl	$0, -4(%rbp)
	movl	-8(%rbp), %ecx
	xorl	$1, %ecx
	movl	%ecx, -20(%rbp)
	movl	-4(%rbp), %ecx
	addl	$500, %ecx              # imm = 0x1F4
	movl	%ecx, -4(%rbp)
	movslq	-12(%rbp), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	-20(%rbp), %rcx
	movslq	king_locs(,%rcx,4), %rcx
	movslq	(%rax,%rcx,4), %rax
	movl	std_r_tropism(,%rax,4), %eax
	addl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movl	-12(%rbp), %edi
	movw	$27731, BasicBlockSignatureTracker # imm = 0x6C53
	movw	$1790, RunTimeSignatureAdjuster # imm = 0x6FE
	callq	rook_mobility
	movw	$27731, BasicBlockSignatureTracker # imm = 0x6C53
	movw	$1790, RunTimeSignatureAdjuster # imm = 0x6FE
	shll	$1, %eax
	movl	%eax, -16(%rbp)
	movl	-16(%rbp), %eax
	movw	$27731, BasicBlockSignatureTracker # imm = 0x6C53
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jg	.LBB53_3
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$27734, %ax             # imm = 0x6C56
	jne	.LBB53_41
# %bb.2:                                # %Rook.split
	movl	-16(%rbp), %eax
	subl	$5, %eax
	movl	%eax, -16(%rbp)
	movw	$27734, BasicBlockSignatureTracker # imm = 0x6C56
	movw	$5, RunTimeSignatureAdjuster
.LBB53_3:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$27746, %ax             # imm = 0x6C62
	jne	.LBB53_41
# %bb.4:                                # %Rook.split80
	movl	-16(%rbp), %eax
	addl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movl	-12(%rbp), %eax
	subl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$27746, BasicBlockSignatureTracker # imm = 0x6C62
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB53_11
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$27757, %ax             # imm = 0x6C6D
	jne	.LBB53_41
# %bb.6:                                # %Rook.split82
	movl	-12(%rbp), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$27757, BasicBlockSignatureTracker # imm = 0x6C6D
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB53_11
# %bb.7:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29312, %ax            # imm = 0x8D80
	cmpw	$-7699, %ax             # imm = 0xE1ED
	jne	.LBB53_41
# %bb.8:                                # %Rook.split86
	movw	$-7699, BasicBlockSignatureTracker # imm = 0xE1ED
	movw	$-29312, RunTimeSignatureAdjuster # imm = 0x8D80
# %bb.9:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$27772, %ax             # imm = 0x6C7C
	jne	.LBB53_41
# %bb.10:                               # %Rook.split114
	movl	-4(%rbp), %eax
	subl	$5, %eax
	movl	%eax, -4(%rbp)
	movw	$27772, BasicBlockSignatureTracker # imm = 0x6C7C
	movw	$30, RunTimeSignatureAdjuster
.LBB53_11:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$229, %ax
	xorw	%cx, %ax
	cmpw	$27783, %ax             # imm = 0x6C87
	jne	.LBB53_41
# %bb.12:                               # %Rook.split84
	movl	wmat, %eax
	movw	$27783, BasicBlockSignatureTracker # imm = 0x6C87
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1300, %eax             # imm = 0x514
	jne	.LBB53_15
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$27787, %ax             # imm = 0x6C8B
	jne	.LBB53_41
# %bb.14:                               # %Rook.split90
	movl	bmat, %eax
	movw	$27787, BasicBlockSignatureTracker # imm = 0x6C8B
	movw	$12, RunTimeSignatureAdjuster
	cmpl	$1300, %eax             # imm = 0x514
	je	.LBB53_33
.LBB53_15:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$27804, %ax             # imm = 0x6C9C
	jne	.LBB53_41
# %bb.16:                               # %Rook.split88
	movl	-12(%rbp), %eax
	movslq	-8(%rbp), %rcx
	movl	Rook.square_d1(,%rcx,4), %ecx
	movw	$27804, BasicBlockSignatureTracker # imm = 0x6C9C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB53_27
# %bb.17:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$76, %ax
	cmpw	$27856, %ax             # imm = 0x6CD0
	jne	.LBB53_41
# %bb.18:                               # %Rook.split94
	movl	-4(%rbp), %eax
	addl	$10, %eax
	movl	%eax, -4(%rbp)
	movslq	-8(%rbp), %rax
	movl	Rook.square_d1(,%rax,4), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	sarl	$1, %eax
	movw	$27856, BasicBlockSignatureTracker # imm = 0x6CD0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB53_25
# %bb.19:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$485, %ax               # imm = 0x1E5
	cmpw	$27957, %ax             # imm = 0x6D35
	jne	.LBB53_41
# %bb.20:                               # %Rook.split98
	movslq	-8(%rbp), %rax
	movl	Rook.square_d1(,%rax,4), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	andl	$1, %eax
	movl	-8(%rbp), %ecx
	movw	$27957, BasicBlockSignatureTracker # imm = 0x6D35
	movw	$485, RunTimeSignatureAdjuster # imm = 0x1E5
	cmpl	%ecx, %eax
	jne	.LBB53_25
# %bb.21:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6143, %ax              # imm = 0x17FF
	cmpw	$31434, %ax             # imm = 0x7ACA
	jne	.LBB53_41
# %bb.22:                               # %Rook.split102
	movw	$31434, BasicBlockSignatureTracker # imm = 0x7ACA
	movw	$6143, RunTimeSignatureAdjuster # imm = 0x17FF
# %bb.23:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$96, %ax
	xorw	%cx, %ax
	cmpw	$27989, %ax             # imm = 0x6D55
	jne	.LBB53_41
# %bb.24:                               # %Rook.split116
	movl	-4(%rbp), %eax
	addl	$5, %eax
	movl	%eax, -4(%rbp)
	movw	$27989, BasicBlockSignatureTracker # imm = 0x6D55
	movw	$389, RunTimeSignatureAdjuster # imm = 0x185
.LBB53_25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$393, %ax               # imm = 0x189
	xorw	%cx, %ax
	cmpw	$27993, %ax             # imm = 0x6D59
	jne	.LBB53_41
# %bb.26:                               # %Rook.split100
	movw	$27993, BasicBlockSignatureTracker # imm = 0x6D59
	movw	$453, RunTimeSignatureAdjuster # imm = 0x1C5
.LBB53_27:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$504, %ax               # imm = 0x1F8
	xorw	%cx, %ax
	cmpw	$28004, %ax             # imm = 0x6D64
	jne	.LBB53_41
# %bb.28:                               # %Rook.split96
	movl	-12(%rbp), %eax
	movslq	-8(%rbp), %rcx
	movl	Rook.square_d1(,%rcx,4), %ecx
	addl	$1, %ecx
	movw	$28004, BasicBlockSignatureTracker # imm = 0x6D64
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB53_31
# %bb.29:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$28008, %ax             # imm = 0x6D68
	jne	.LBB53_41
# %bb.30:                               # %Rook.split104
	movl	-4(%rbp), %eax
	addl	$10, %eax
	movl	%eax, -4(%rbp)
	movw	$28008, BasicBlockSignatureTracker # imm = 0x6D68
	movw	$12, RunTimeSignatureAdjuster
.LBB53_31:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$28014, %ax             # imm = 0x6D6E
	jne	.LBB53_41
# %bb.32:                               # %Rook.split106
	movw	$28014, BasicBlockSignatureTracker # imm = 0x6D6E
	movw	$485, RunTimeSignatureAdjuster # imm = 0x1E5
	jmp	.LBB53_35
.LBB53_33:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-23523, %ax            # imm = 0xA41D
	cmpw	$-14186, %ax            # imm = 0xC896
	jne	.LBB53_41
# %bb.34:                               # %Rook.split92
	movw	$-14186, BasicBlockSignatureTracker # imm = 0xC896
	movw	$-23523, RunTimeSignatureAdjuster # imm = 0xA41D
.LBB53_35:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$505, %ax               # imm = 0x1F9
	xorw	%cx, %ax
	cmpw	$28018, %ax             # imm = 0x6D72
	jne	.LBB53_41
# %bb.36:                               # %Rook.split108
	movl	-8(%rbp), %eax
	movw	$28018, BasicBlockSignatureTracker # imm = 0x6D72
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB53_39
# %bb.37:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$28019, %ax             # imm = 0x6D73
	jne	.LBB53_41
# %bb.38:                               # %Rook.split110
	xorl	%eax, %eax
	subl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movw	$28019, BasicBlockSignatureTracker # imm = 0x6D73
	movw	$1, RunTimeSignatureAdjuster
.LBB53_39:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$28021, %ax             # imm = 0x6D75
	jne	.LBB53_41
# %bb.40:                               # %Rook.split112
	movl	-4(%rbp), %eax
	movw	$28021, BasicBlockSignatureTracker # imm = 0x6D75
	movw	$0, RunTimeSignatureAdjuster
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB53_41:                              # %CFerrorHandler.Rook
	callq	FAULT_DETECTED_CFC
.Lfunc_end53:
	.size	Rook, .Lfunc_end53-Rook
	.cfi_endproc
                                        # -- End function
	.globl	Bishop                  # -- Begin function Bishop
	.p2align	4, 0x90
	.type	Bishop,@function
Bishop:                                 # @Bishop
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movabsq	$distance, %rax
	movl	%edi, -8(%rbp)
	movl	%esi, -16(%rbp)
	movl	$0, -4(%rbp)
	movl	-16(%rbp), %ecx
	xorl	$1, %ecx
	movl	%ecx, -20(%rbp)
	movl	-4(%rbp), %ecx
	addl	$325, %ecx              # imm = 0x145
	movl	%ecx, -4(%rbp)
	movslq	-8(%rbp), %rcx
	movl	sbishop(,%rcx,4), %ecx
	addl	-4(%rbp), %ecx
	movl	%ecx, -4(%rbp)
	movslq	-8(%rbp), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	-20(%rbp), %rcx
	movslq	king_locs(,%rcx,4), %rcx
	movslq	(%rax,%rcx,4), %rax
	movl	std_b_tropism(,%rax,4), %eax
	addl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movl	-8(%rbp), %edi
	movw	$28026, BasicBlockSignatureTracker # imm = 0x6D7A
	movw	$2007, RunTimeSignatureAdjuster # imm = 0x7D7
	callq	bishop_mobility
	movw	$28026, BasicBlockSignatureTracker # imm = 0x6D7A
	movw	$2007, RunTimeSignatureAdjuster # imm = 0x7D7
	shll	$1, %eax
	movl	%eax, -12(%rbp)
	movl	-12(%rbp), %eax
	movw	$28026, BasicBlockSignatureTracker # imm = 0x6D7A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jg	.LBB54_3
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$240, %ax
	cmpw	$28042, %ax             # imm = 0x6D8A
	jne	.LBB54_31
# %bb.2:                                # %Bishop.split
	movl	-12(%rbp), %eax
	subl	$5, %eax
	movl	%eax, -12(%rbp)
	movw	$28042, BasicBlockSignatureTracker # imm = 0x6D8A
	movw	$240, RunTimeSignatureAdjuster
.LBB54_3:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$241, %ax
	xorw	%cx, %ax
	cmpw	$28043, %ax             # imm = 0x6D8B
	jne	.LBB54_31
# %bb.4:                                # %Bishop.split60
	movl	-12(%rbp), %eax
	addl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movl	-16(%rbp), %eax
	movw	$28043, BasicBlockSignatureTracker # imm = 0x6D8B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB54_11
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$28057, %ax             # imm = 0x6D99
	jne	.LBB54_31
# %bb.6:                                # %Bishop.split62
	movl	-8(%rbp), %eax
	movw	$28057, BasicBlockSignatureTracker # imm = 0x6D99
	movw	$18, RunTimeSignatureAdjuster
	cmpl	$39, %eax
	jne	.LBB54_11
# %bb.7:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22612, %ax            # imm = 0xA7AC
	cmpw	$-13771, %ax            # imm = 0xCA35
	jne	.LBB54_31
# %bb.8:                                # %Bishop.split66
	movw	$-13771, BasicBlockSignatureTracker # imm = 0xCA35
	movw	$-22612, RunTimeSignatureAdjuster # imm = 0xA7AC
# %bb.9:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$28058, %ax             # imm = 0x6D9A
	jne	.LBB54_31
# %bb.10:                               # %Bishop.split82
	movl	board+208, %eax
	movw	$28058, BasicBlockSignatureTracker # imm = 0x6D9A
	movw	$17, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB54_19
.LBB54_11:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$28072, %ax             # imm = 0x6DA8
	jne	.LBB54_31
# %bb.12:                               # %Bishop.split64
	movl	-16(%rbp), %eax
	movw	$28072, BasicBlockSignatureTracker # imm = 0x6DA8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB54_25
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$28075, %ax             # imm = 0x6DAB
	jne	.LBB54_31
# %bb.14:                               # %Bishop.split70
	movl	-8(%rbp), %eax
	movw	$28075, BasicBlockSignatureTracker # imm = 0x6DAB
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$99, %eax
	jne	.LBB54_25
# %bb.15:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25151, %ax            # imm = 0x9DC1
	cmpw	$-3990, %ax             # imm = 0xF06A
	jne	.LBB54_31
# %bb.16:                               # %Bishop.split74
	movw	$-3990, BasicBlockSignatureTracker # imm = 0xF06A
	movw	$-25151, RunTimeSignatureAdjuster # imm = 0x9DC1
# %bb.17:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$28079, %ax             # imm = 0x6DAF
	jne	.LBB54_31
# %bb.18:                               # %Bishop.split86
	movl	board+352, %eax
	movw	$28079, BasicBlockSignatureTracker # imm = 0x6DAF
	movw	$7, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB54_21
	jmp	.LBB54_25
.LBB54_19:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15897, %ax             # imm = 0x3E19
	cmpw	$21379, %ax             # imm = 0x5383
	jne	.LBB54_31
# %bb.20:                               # %Bishop.split68
	movw	$21379, BasicBlockSignatureTracker # imm = 0x5383
	movw	$15897, RunTimeSignatureAdjuster # imm = 0x3E19
	jmp	.LBB54_23
.LBB54_21:                              # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-24262, %ax            # imm = 0xA13A
	cmpw	$-13163, %ax            # imm = 0xCC95
	jne	.LBB54_31
# %bb.22:                               # %Bishop.split76
	movw	$-13163, BasicBlockSignatureTracker # imm = 0xCC95
	movw	$-24305, RunTimeSignatureAdjuster # imm = 0xA10F
.LBB54_23:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$28089, %ax             # imm = 0x6DB9
	jne	.LBB54_31
# %bb.24:                               # %Bishop.split84
	movl	-4(%rbp), %eax
	subl	$5, %eax
	movl	%eax, -4(%rbp)
	movw	$28089, BasicBlockSignatureTracker # imm = 0x6DB9
	movw	$17, RunTimeSignatureAdjuster
.LBB54_25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$28094, %ax             # imm = 0x6DBE
	jne	.LBB54_31
# %bb.26:                               # %Bishop.split72
	movl	-16(%rbp), %eax
	movw	$28094, BasicBlockSignatureTracker # imm = 0x6DBE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB54_29
# %bb.27:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$28108, %ax             # imm = 0x6DCC
	jne	.LBB54_31
# %bb.28:                               # %Bishop.split78
	xorl	%eax, %eax
	subl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movw	$28108, BasicBlockSignatureTracker # imm = 0x6DCC
	movw	$114, RunTimeSignatureAdjuster
.LBB54_29:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$101, %ax
	xorw	%cx, %ax
	cmpw	$28123, %ax             # imm = 0x6DDB
	jne	.LBB54_31
# %bb.30:                               # %Bishop.split80
	movl	-4(%rbp), %eax
	movw	$28123, BasicBlockSignatureTracker # imm = 0x6DDB
	movw	$0, RunTimeSignatureAdjuster
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB54_31:                              # %CFerrorHandler.Bishop
	callq	FAULT_DETECTED_CFC
.Lfunc_end54:
	.size	Bishop, .Lfunc_end54-Bishop
	.cfi_endproc
                                        # -- End function
	.globl	Knight                  # -- Begin function Knight
	.p2align	4, 0x90
	.type	Knight,@function
Knight:                                 # @Knight
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movabsq	$distance, %rax
	movl	%edi, -12(%rbp)
	movl	%esi, -8(%rbp)
	movl	$0, -4(%rbp)
	movl	-8(%rbp), %ecx
	xorl	$1, %ecx
	movl	%ecx, -16(%rbp)
	movl	-4(%rbp), %ecx
	addl	$310, %ecx              # imm = 0x136
	movl	%ecx, -4(%rbp)
	movslq	-12(%rbp), %rcx
	movl	sknight(,%rcx,4), %ecx
	addl	-4(%rbp), %ecx
	movl	%ecx, -4(%rbp)
	movslq	-12(%rbp), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	-16(%rbp), %rcx
	movslq	king_locs(,%rcx,4), %rcx
	movslq	(%rax,%rcx,4), %rax
	movl	std_n_tropism(,%rax,4), %eax
	addl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movl	-8(%rbp), %eax
	movw	$28138, BasicBlockSignatureTracker # imm = 0x6DEA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB55_3
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$28146, %ax             # imm = 0x6DF2
	jne	.LBB55_5
# %bb.2:                                # %Knight.split
	xorl	%eax, %eax
	subl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movw	$28146, BasicBlockSignatureTracker # imm = 0x6DF2
	movw	$24, RunTimeSignatureAdjuster
.LBB55_3:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$28150, %ax             # imm = 0x6DF6
	jne	.LBB55_5
# %bb.4:                                # %Knight.split6
	movl	-4(%rbp), %eax
	movw	$28150, BasicBlockSignatureTracker # imm = 0x6DF6
	movw	$0, RunTimeSignatureAdjuster
	addq	$16, %rsp
	popq	%rbp
	retq
.LBB55_5:                               # %CFerrorHandler.Knight
	callq	FAULT_DETECTED_CFC
.Lfunc_end55:
	.size	Knight, .Lfunc_end55-Knight
	.cfi_endproc
                                        # -- End function
	.globl	Pawn                    # -- Begin function Pawn
	.p2align	4, 0x90
	.type	Pawn,@function
Pawn:                                   # @Pawn
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movabsq	$distance, %rax
	movl	%edi, -8(%rbp)
	movl	%esi, -12(%rbp)
	movl	$0, -4(%rbp)
	movl	-12(%rbp), %ecx
	xorl	$1, %ecx
	movl	%ecx, -16(%rbp)
	movl	-4(%rbp), %ecx
	addl	$100, %ecx
	movl	%ecx, -4(%rbp)
	movslq	-8(%rbp), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movslq	-16(%rbp), %rcx
	movslq	king_locs(,%rcx,4), %rcx
	movslq	(%rdx,%rcx,4), %rcx
	movl	std_p_tropism(,%rcx,4), %ecx
	addl	-4(%rbp), %ecx
	movl	%ecx, -4(%rbp)
	movslq	-8(%rbp), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	-12(%rbp), %rcx
	movslq	king_locs(,%rcx,4), %rcx
	movslq	(%rax,%rcx,4), %rax
	movl	std_own_p_tropism(,%rax,4), %eax
	addl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movl	-8(%rbp), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	sarl	$1, %eax
	movw	$28157, BasicBlockSignatureTracker # imm = 0x6DFD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB56_7
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1006, %ax              # imm = 0x3EE
	cmpw	$28179, %ax             # imm = 0x6E13
	jne	.LBB56_31
# %bb.2:                                # %Pawn.split
	movl	-8(%rbp), %eax
	addl	$1, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	andl	$1, %eax
	movl	-12(%rbp), %ecx
	movw	$28179, BasicBlockSignatureTracker # imm = 0x6E13
	movw	$1006, RunTimeSignatureAdjuster # imm = 0x3EE
	cmpl	%ecx, %eax
	jne	.LBB56_7
# %bb.3:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22260, %ax            # imm = 0xA90C
	cmpw	$-14561, %ax            # imm = 0xC71F
	jne	.LBB56_31
# %bb.4:                                # %Pawn.split63
	movw	$-14561, BasicBlockSignatureTracker # imm = 0xC71F
	movw	$-22260, RunTimeSignatureAdjuster # imm = 0xA90C
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$50, %ax
	xorw	%cx, %ax
	cmpw	$28193, %ax             # imm = 0x6E21
	jne	.LBB56_31
# %bb.6:                                # %Pawn.split83
	movl	-4(%rbp), %eax
	addl	$5, %eax
	movl	%eax, -4(%rbp)
	movw	$28193, BasicBlockSignatureTracker # imm = 0x6E21
	movw	$988, RunTimeSignatureAdjuster # imm = 0x3DC
.LBB56_7:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$981, %ax               # imm = 0x3D5
	xorw	%cx, %ax
	cmpw	$28200, %ax             # imm = 0x6E28
	jne	.LBB56_31
# %bb.8:                                # %Pawn.split61
	movl	-8(%rbp), %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	sarl	$1, %eax
	movw	$28200, BasicBlockSignatureTracker # imm = 0x6E28
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB56_15
# %bb.9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$28203, %ax             # imm = 0x6E2B
	jne	.LBB56_31
# %bb.10:                               # %Pawn.split65
	movl	-8(%rbp), %eax
	addl	$11, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	andl	$1, %eax
	movl	-12(%rbp), %ecx
	movw	$28203, BasicBlockSignatureTracker # imm = 0x6E2B
	movw	$3, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB56_15
# %bb.11:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-24850, %ax            # imm = 0x9EEE
	cmpw	$-3899, %ax             # imm = 0xF0C5
	jne	.LBB56_31
# %bb.12:                               # %Pawn.split69
	movw	$-3899, BasicBlockSignatureTracker # imm = 0xF0C5
	movw	$-24850, RunTimeSignatureAdjuster # imm = 0x9EEE
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$28215, %ax             # imm = 0x6E37
	jne	.LBB56_31
# %bb.14:                               # %Pawn.split85
	movl	-4(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -4(%rbp)
	movw	$28215, BasicBlockSignatureTracker # imm = 0x6E37
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB56_25
.LBB56_15:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$111, %ax
	xorw	%cx, %ax
	cmpw	$28231, %ax             # imm = 0x6E47
	jne	.LBB56_31
# %bb.16:                               # %Pawn.split67
	movl	-8(%rbp), %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	sarl	$1, %eax
	movw	$28231, BasicBlockSignatureTracker # imm = 0x6E47
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB56_23
# %bb.17:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$28237, %ax             # imm = 0x6E4D
	jne	.LBB56_31
# %bb.18:                               # %Pawn.split73
	movl	-8(%rbp), %eax
	addl	$13, %eax
	cltq
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	andl	$1, %eax
	movl	-12(%rbp), %ecx
	movw	$28237, BasicBlockSignatureTracker # imm = 0x6E4D
	movw	$10, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB56_23
# %bb.19:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-28796, %ax            # imm = 0x8F84
	cmpw	$-7735, %ax             # imm = 0xE1C9
	jne	.LBB56_31
# %bb.20:                               # %Pawn.split77
	movw	$-7735, BasicBlockSignatureTracker # imm = 0xE1C9
	movw	$-28796, RunTimeSignatureAdjuster # imm = 0x8F84
# %bb.21:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$28255, %ax             # imm = 0x6E5F
	jne	.LBB56_31
# %bb.22:                               # %Pawn.split87
	movl	-4(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -4(%rbp)
	movw	$28255, BasicBlockSignatureTracker # imm = 0x6E5F
	movw	$24, RunTimeSignatureAdjuster
.LBB56_23:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$28266, %ax             # imm = 0x6E6A
	jne	.LBB56_31
# %bb.24:                               # %Pawn.split75
	movw	$28266, BasicBlockSignatureTracker # imm = 0x6E6A
	movw	$93, RunTimeSignatureAdjuster
.LBB56_25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$79, %ax
	xorw	%cx, %ax
	cmpw	$28280, %ax             # imm = 0x6E78
	jne	.LBB56_31
# %bb.26:                               # %Pawn.split71
	movl	-12(%rbp), %eax
	movw	$28280, BasicBlockSignatureTracker # imm = 0x6E78
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB56_29
# %bb.27:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$228, %ax
	cmpw	$28316, %ax             # imm = 0x6E9C
	jne	.LBB56_31
# %bb.28:                               # %Pawn.split79
	xorl	%eax, %eax
	subl	-4(%rbp), %eax
	movl	%eax, -4(%rbp)
	movw	$28316, BasicBlockSignatureTracker # imm = 0x6E9C
	movw	$228, RunTimeSignatureAdjuster
.LBB56_29:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$214, %ax
	xorw	%cx, %ax
	cmpw	$28334, %ax             # imm = 0x6EAE
	jne	.LBB56_31
# %bb.30:                               # %Pawn.split81
	movl	-4(%rbp), %eax
	movw	$28334, BasicBlockSignatureTracker # imm = 0x6EAE
	movw	$0, RunTimeSignatureAdjuster
	addq	$16, %rsp
	popq	%rbp
	retq
.LBB56_31:                              # %CFerrorHandler.Pawn
	callq	FAULT_DETECTED_CFC
.Lfunc_end56:
	.size	Pawn, .Lfunc_end56-Pawn
	.cfi_endproc
                                        # -- End function
	.globl	ErrorIt                 # -- Begin function ErrorIt
	.p2align	4, 0x90
	.type	ErrorIt,@function
ErrorIt:                                # @ErrorIt
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movabsq	$.L.str.22, %rax
	movl	%edi, -8(%rbp)
	movl	%esi, -4(%rbp)
	movl	-8(%rbp), %esi
	movl	-4(%rbp), %edx
	movq	%rax, %rdi
	movb	$0, %al
	callq	printf
	movw	$28350, BasicBlockSignatureTracker # imm = 0x6EBE
	movw	$0, RunTimeSignatureAdjuster
	xorl	%eax, %eax
	addq	$16, %rsp
	popq	%rbp
	retq
.Lfunc_end57:
	.size	ErrorIt, .Lfunc_end57-ErrorIt
	.cfi_endproc
                                        # -- End function
	.globl	std_eval                # -- Begin function std_eval
	.p2align	4, 0x90
	.type	std_eval,@function
std_eval:                               # @std_eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$248, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31221, %ax             # imm = 0x79F5
	xorw	%cx, %ax
	cmpw	$28378, %ax             # imm = 0x6EDA
	jne	.LBB58_950
# %bb.1:                                # %std_eval.split
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -208(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-96, %rdx
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-48, %rdx
	movq	%rdx, -96(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-48, %rdx
	movq	%rdx, -88(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -80(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -224(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -216(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -200(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -168(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -176(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -272(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -280(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -128(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -144(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -152(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -136(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -160(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -264(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -256(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -240(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -232(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -184(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -192(%rbp)        # 8-byte Spill
	movq	%rdx, %rsp
	movl	%edi, (%rax)
	movl	%esi, (%rcx)
	movl	$0, (%r10)
	movl	white_to_move, %edx
	movw	$28378, BasicBlockSignatureTracker # imm = 0x6EDA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB58_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$6, %dx
	cmpw	$28380, %dx             # imm = 0x6EDC
	jne	.LBB58_950
# %bb.3:                                # %std_eval.split1913
	movl	Material, %edx
	movw	$28380, BasicBlockSignatureTracker # imm = 0x6EDC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_6
.LBB58_4:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$59, %dx
	cmpw	$28385, %dx             # imm = 0x6EE1
	jne	.LBB58_950
# %bb.5:                                # %std_eval.split1915
	xorl	%edx, %edx
	subl	Material, %edx
	movw	$28385, BasicBlockSignatureTracker # imm = 0x6EE1
	movw	$61, RunTimeSignatureAdjuster
.LBB58_6:
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$54, %si
	xorw	%di, %si
	cmpw	$28394, %si             # imm = 0x6EEA
	jne	.LBB58_950
# %bb.7:                                # %std_eval.split1917
	subl	maxposdiff, %edx
	movl	(%rcx), %ecx
	movw	$28394, BasicBlockSignatureTracker # imm = 0x6EEA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %edx
	jl	.LBB58_16
# %bb.8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$28410, %ax             # imm = 0x6EFA
	jne	.LBB58_950
# %bb.9:                                # %std_eval.split1919
	movl	white_to_move, %eax
	movw	$28410, BasicBlockSignatureTracker # imm = 0x6EFA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_12
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$487, %ax               # imm = 0x1E7
	cmpw	$28445, %ax             # imm = 0x6F1D
	jne	.LBB58_950
# %bb.11:                               # %std_eval.split1923
	movl	Material, %eax
	movw	$28445, BasicBlockSignatureTracker # imm = 0x6F1D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_14
.LBB58_12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$485, %ax               # imm = 0x1E5
	cmpw	$28447, %ax             # imm = 0x6F1F
	jne	.LBB58_950
# %bb.13:                               # %std_eval.split1925
	xorl	%eax, %eax
	subl	Material, %eax
	movw	$28447, BasicBlockSignatureTracker # imm = 0x6F1F
	movw	$2, RunTimeSignatureAdjuster
.LBB58_14:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$59, %cx
	xorw	%dx, %cx
	cmpw	$28454, %cx             # imm = 0x6F26
	jne	.LBB58_950
# %bb.15:                               # %std_eval.split1927
	subl	maxposdiff, %eax
	movl	%eax, (%r8)
	movw	$28454, BasicBlockSignatureTracker # imm = 0x6F26
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_945
.LBB58_16:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$455, %cx               # imm = 0x1C7
	cmpw	$28461, %cx             # imm = 0x6F2D
	jne	.LBB58_950
# %bb.17:                               # %std_eval.split1921
	movl	white_to_move, %ecx
	movw	$28461, BasicBlockSignatureTracker # imm = 0x6F2D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB58_20
# %bb.18:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$97, %cx
	cmpw	$28492, %cx             # imm = 0x6F4C
	jne	.LBB58_950
# %bb.19:                               # %std_eval.split1931
	movl	Material, %ecx
	movw	$28492, BasicBlockSignatureTracker # imm = 0x6F4C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_22
.LBB58_20:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$120, %cx
	cmpw	$28501, %cx             # imm = 0x6F55
	jne	.LBB58_950
# %bb.21:                               # %std_eval.split1933
	xorl	%ecx, %ecx
	subl	Material, %ecx
	movw	$28501, BasicBlockSignatureTracker # imm = 0x6F55
	movw	$25, RunTimeSignatureAdjuster
.LBB58_22:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$27, %dx
	xorw	%si, %dx
	cmpw	$28503, %dx             # imm = 0x6F57
	jne	.LBB58_950
# %bb.23:                               # %std_eval.split1935
	addl	maxposdiff, %ecx
	movl	(%rax), %eax
	movw	$28503, BasicBlockSignatureTracker # imm = 0x6F57
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jg	.LBB58_32
# %bb.24:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$28505, %ax             # imm = 0x6F59
	jne	.LBB58_950
# %bb.25:                               # %std_eval.split1937
	movl	white_to_move, %eax
	movw	$28505, BasicBlockSignatureTracker # imm = 0x6F59
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_28
# %bb.26:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$28512, %ax             # imm = 0x6F60
	jne	.LBB58_950
# %bb.27:                               # %std_eval.split1941
	movl	Material, %eax
	movw	$28512, BasicBlockSignatureTracker # imm = 0x6F60
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_30
.LBB58_28:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$28516, %ax             # imm = 0x6F64
	jne	.LBB58_950
# %bb.29:                               # %std_eval.split1943
	xorl	%eax, %eax
	subl	Material, %eax
	movw	$28516, BasicBlockSignatureTracker # imm = 0x6F64
	movw	$4, RunTimeSignatureAdjuster
.LBB58_30:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$10, %cx
	xorw	%dx, %cx
	cmpw	$28522, %cx             # imm = 0x6F6A
	jne	.LBB58_950
# %bb.31:                               # %std_eval.split1945
	addl	maxposdiff, %eax
	movl	%eax, (%r8)
	movw	$28522, BasicBlockSignatureTracker # imm = 0x6F6A
	movw	$76, RunTimeSignatureAdjuster
	jmp	.LBB58_945
.LBB58_32:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$28526, %ax             # imm = 0x6F6E
	jne	.LBB58_950
# %bb.33:                               # %std_eval.split1939
	movq	%r11, -104(%rbp)        # 8-byte Spill
	movq	%rbx, -112(%rbp)        # 8-byte Spill
	movq	%r9, -120(%rbp)         # 8-byte Spill
	movq	%r8, -248(%rbp)         # 8-byte Spill
	movl	$0, (%r13)
	movw	$28526, BasicBlockSignatureTracker # imm = 0x6F6E
	movw	$30727, RunTimeSignatureAdjuster # imm = 0x7807
	movq	%r10, -48(%rbp)         # 8-byte Spill
	movq	%r10, %rdi
	movq	%r13, %rsi
	callq	checkECache
	movw	$28526, BasicBlockSignatureTracker # imm = 0x6F6E
	movw	$30727, RunTimeSignatureAdjuster # imm = 0x7807
	movl	(%r13), %eax
	movw	$28526, BasicBlockSignatureTracker # imm = 0x6F6E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_40
# %bb.34:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$28542, %ax             # imm = 0x6F7E
	movq	-248(%rbp), %r8         # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.35:                               # %std_eval.split1947
	movl	white_to_move, %eax
	movw	$28542, BasicBlockSignatureTracker # imm = 0x6F7E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_38
# %bb.36:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$238, %ax
	cmpw	$28560, %ax             # imm = 0x6F90
	jne	.LBB58_950
# %bb.37:                               # %std_eval.split1951
	movl	(%rcx), %eax
	movl	%eax, (%r8)
	movw	$28560, BasicBlockSignatureTracker # imm = 0x6F90
	movw	$182, RunTimeSignatureAdjuster
	jmp	.LBB58_945
.LBB58_38:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$219, %ax
	cmpw	$28581, %ax             # imm = 0x6FA5
	jne	.LBB58_950
# %bb.39:                               # %std_eval.split1953
	xorl	%eax, %eax
	subl	(%rcx), %eax
	movl	%eax, (%r8)
	movw	$28581, BasicBlockSignatureTracker # imm = 0x6FA5
	movw	$131, RunTimeSignatureAdjuster
	jmp	.LBB58_945
.LBB58_40:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$223, %ax
	cmpw	$28593, %ax             # imm = 0x6FB1
	jne	.LBB58_950
# %bb.41:                               # %std_eval.split1949
	movq	-64(%rbp), %rdi         # 8-byte Reload
	xorl	%esi, %esi
	movl	$88, %edx
	callq	memset
	movq	-72(%rbp), %rdx         # 8-byte Reload
	movl	$0, (%rdx)
	movw	$28593, BasicBlockSignatureTracker # imm = 0x6FB1
	movw	$0, RunTimeSignatureAdjuster
.LBB58_42:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$28594, %ax             # imm = 0x6FB2
	jne	.LBB58_949
# %bb.43:                               # %std_eval.split1955
                                        #   in Loop: Header=BB58_42 Depth=1
	movl	(%rdx), %eax
	movw	$28594, BasicBlockSignatureTracker # imm = 0x6FB2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	jge	.LBB58_48
# %bb.44:                               #   in Loop: Header=BB58_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$28595, %ax             # imm = 0x6FB3
	jne	.LBB58_949
# %bb.45:                               # %std_eval.split1957
                                        #   in Loop: Header=BB58_42 Depth=1
	movslq	(%rdx), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	$7, (%rcx,%rax,4)
	movslq	(%rdx), %rax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	$2, (%rcx,%rax,4)
	movw	$28595, BasicBlockSignatureTracker # imm = 0x6FB3
	movw	$0, RunTimeSignatureAdjuster
# %bb.46:                               #   in Loop: Header=BB58_42 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$115, %ax
	cmpw	$28608, %ax             # imm = 0x6FC0
	jne	.LBB58_949
# %bb.47:                               # %std_eval.split1961
                                        #   in Loop: Header=BB58_42 Depth=1
	movl	(%rdx), %eax
	addl	$1, %eax
	movl	%eax, (%rdx)
	movw	$28608, BasicBlockSignatureTracker # imm = 0x6FC0
	movw	$113, RunTimeSignatureAdjuster
	jmp	.LBB58_42
.LBB58_48:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$28618, %ax             # imm = 0x6FCA
	jne	.LBB58_950
# %bb.49:                               # %std_eval.split1959
	movl	$0, wmat
	movl	$0, bmat
	movl	wking_loc, %eax
	movl	%eax, king_locs
	movl	bking_loc, %eax
	movl	%eax, king_locs+4
	movq	-200(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$28618, BasicBlockSignatureTracker # imm = 0x6FCA
	movw	$0, RunTimeSignatureAdjuster
.LBB58_50:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$28619, %ax             # imm = 0x6FCB
	jne	.LBB58_948
# %bb.51:                               # %std_eval.split1963
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	piece_count, %ecx
	movw	$28619, BasicBlockSignatureTracker # imm = 0x6FCB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB58_94
# %bb.52:                               #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$28634, %ax             # imm = 0x6FDA
	jne	.LBB58_948
# %bb.53:                               # %std_eval.split1965
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-200(%rbp), %rax        # 8-byte Reload
	movslq	(%rax), %rax
	movl	pieces(,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$28634, BasicBlockSignatureTracker # imm = 0x6FDA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_56
# %bb.54:                               #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$28642, %ax             # imm = 0x6FE2
	jne	.LBB58_948
# %bb.55:                               # %std_eval.split1971
                                        #   in Loop: Header=BB58_50 Depth=1
	movw	$28642, BasicBlockSignatureTracker # imm = 0x6FE2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_92
.LBB58_56:                              #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$28645, %ax             # imm = 0x6FE5
	jne	.LBB58_948
# %bb.57:                               # %std_eval.split1969
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-208(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$28645, BasicBlockSignatureTracker # imm = 0x6FE5
	movw	$0, RunTimeSignatureAdjuster
# %bb.58:                               #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8160, %ax              # imm = 0x1FE0
	cmpw	$28677, %ax             # imm = 0x7005
	jne	.LBB58_948
# %bb.59:                               # %std_eval.split1975
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	sarl	$1, %eax
	movw	$28677, BasicBlockSignatureTracker # imm = 0x7005
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB58_72
# %bb.60:                               #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$28682, %ax             # imm = 0x700A
	jne	.LBB58_948
# %bb.61:                               # %std_eval.split1977
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	sarl	$1, %eax
	movw	$28682, BasicBlockSignatureTracker # imm = 0x700A
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB58_72
# %bb.62:                               # %Buffer__
                                        #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18780, %ax             # imm = 0x495C
	cmpw	$14678, %ax             # imm = 0x3956
	jne	.LBB58_948
# %bb.63:                               # %std_eval.split1981
                                        #   in Loop: Header=BB58_50 Depth=1
	movw	$14678, BasicBlockSignatureTracker # imm = 0x3956
	movw	$18780, RunTimeSignatureAdjuster # imm = 0x495C
# %bb.64:                               #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$28683, %ax             # imm = 0x700B
	jne	.LBB58_948
# %bb.65:                               # %std_eval.split2747
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	andl	$1, %eax
	movw	$28683, BasicBlockSignatureTracker # imm = 0x700B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_68
# %bb.66:                               #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$28692, %ax             # imm = 0x7014
	jne	.LBB58_948
# %bb.67:                               # %std_eval.split1983
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %eax
	addl	wmat, %eax
	movl	%eax, wmat
	movw	$28692, BasicBlockSignatureTracker # imm = 0x7014
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_70
.LBB58_68:                              #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$28705, %ax             # imm = 0x7021
	jne	.LBB58_948
# %bb.69:                               # %std_eval.split1985
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	addl	bmat, %eax
	movl	%eax, bmat
	movw	$28705, BasicBlockSignatureTracker # imm = 0x7021
	movw	$53, RunTimeSignatureAdjuster
.LBB58_70:                              #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$28713, %ax             # imm = 0x7029
	jne	.LBB58_948
# %bb.71:                               # %std_eval.split1987
                                        #   in Loop: Header=BB58_50 Depth=1
	movw	$28713, BasicBlockSignatureTracker # imm = 0x7029
	movw	$44, RunTimeSignatureAdjuster
.LBB58_72:                              #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$62, %ax
	xorw	%cx, %ax
	cmpw	$28731, %ax             # imm = 0x703B
	jne	.LBB58_948
# %bb.73:                               # %std_eval.split1979
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	sarl	$1, %eax
	movw	$28731, BasicBlockSignatureTracker # imm = 0x703B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_90
# %bb.74:                               #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$127, %ax
	cmpw	$28740, %ax             # imm = 0x7044
	jne	.LBB58_948
# %bb.75:                               # %std_eval.split1989
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	Xfile(,%rax,4), %eax
	addl	$1, %eax
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movl	%eax, (%rdx)
	movslq	(%rcx), %rax
	movl	Xrank(,%rax,4), %eax
	movq	-80(%rbp), %rdx         # 8-byte Reload
	movl	%eax, (%rdx)
	movslq	(%rcx), %rax
	movl	board(,%rax,4), %eax
	addl	$1, %eax
	andl	$1, %eax
	movw	$28740, BasicBlockSignatureTracker # imm = 0x7044
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_82
# %bb.76:                               #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$28749, %ax             # imm = 0x704D
	jne	.LBB58_948
# %bb.77:                               # %std_eval.split1993
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rax
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movl	44(%rdx,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, 44(%rdx,%rax,4)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	(%rsi), %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$28749, BasicBlockSignatureTracker # imm = 0x704D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB58_80
# %bb.78:                               #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$28754, %ax             # imm = 0x7052
	jne	.LBB58_948
# %bb.79:                               # %std_eval.split1997
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	%eax, (%rdx,%rcx,4)
	movw	$28754, BasicBlockSignatureTracker # imm = 0x7052
	movw	$31, RunTimeSignatureAdjuster
.LBB58_80:                              #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$28763, %ax             # imm = 0x705B
	jne	.LBB58_948
# %bb.81:                               # %std_eval.split1999
                                        #   in Loop: Header=BB58_50 Depth=1
	movw	$28763, BasicBlockSignatureTracker # imm = 0x705B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_88
.LBB58_82:                              #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$28765, %ax             # imm = 0x705D
	jne	.LBB58_948
# %bb.83:                               # %std_eval.split1995
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rax
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rdx,%rax,4)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	(%rsi), %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$28765, BasicBlockSignatureTracker # imm = 0x705D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_86
# %bb.84:                               #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$28770, %ax             # imm = 0x7062
	jne	.LBB58_948
# %bb.85:                               # %std_eval.split2003
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	%eax, (%rdx,%rcx,4)
	movw	$28770, BasicBlockSignatureTracker # imm = 0x7062
	movw	$63, RunTimeSignatureAdjuster
.LBB58_86:                              #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$28782, %ax             # imm = 0x706E
	jne	.LBB58_948
# %bb.87:                               # %std_eval.split2005
                                        #   in Loop: Header=BB58_50 Depth=1
	movw	$28782, BasicBlockSignatureTracker # imm = 0x706E
	movw	$53, RunTimeSignatureAdjuster
.LBB58_88:                              #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$210, %ax
	xorw	%cx, %ax
	cmpw	$28809, %ax             # imm = 0x7089
	jne	.LBB58_948
# %bb.89:                               # %std_eval.split2001
                                        #   in Loop: Header=BB58_50 Depth=1
	movw	$28809, BasicBlockSignatureTracker # imm = 0x7089
	movw	$178, RunTimeSignatureAdjuster
.LBB58_90:                              #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$165, %ax
	xorw	%cx, %ax
	cmpw	$28830, %ax             # imm = 0x709E
	jne	.LBB58_948
# %bb.91:                               # %std_eval.split1991
                                        #   in Loop: Header=BB58_50 Depth=1
	movw	$28830, BasicBlockSignatureTracker # imm = 0x709E
	movw	$8060, RunTimeSignatureAdjuster # imm = 0x1F7C
.LBB58_92:                              #   in Loop: Header=BB58_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8010, %ax              # imm = 0x1F4A
	xorw	%cx, %ax
	cmpw	$28840, %ax             # imm = 0x70A8
	jne	.LBB58_948
# %bb.93:                               # %std_eval.split1973
                                        #   in Loop: Header=BB58_50 Depth=1
	movq	-200(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$28840, BasicBlockSignatureTracker # imm = 0x70A8
	movw	$8034, RunTimeSignatureAdjuster # imm = 0x1F62
	jmp	.LBB58_50
.LBB58_94:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8050, %ax              # imm = 0x1F72
	cmpw	$28857, %ax             # imm = 0x70B9
	movq	-120(%rbp), %rax        # 8-byte Reload
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	-104(%rbp), %rdx        # 8-byte Reload
	jne	.LBB58_950
# %bb.95:                               # %std_eval.split1967
	movq	-240(%rbp), %rsi        # 8-byte Reload
	movl	$0, (%rsi)
	movq	-232(%rbp), %rsi        # 8-byte Reload
	movl	$0, (%rsi)
	movq	-184(%rbp), %rsi        # 8-byte Reload
	movl	$0, (%rsi)
	movq	-192(%rbp), %rsi        # 8-byte Reload
	movl	$0, (%rsi)
	movq	-264(%rbp), %rsi        # 8-byte Reload
	movl	$0, (%rsi)
	movq	-256(%rbp), %rsi        # 8-byte Reload
	movl	$0, (%rsi)
	movl	$0, (%r12)
	movl	$0, (%r14)
	movq	-272(%rbp), %rsi        # 8-byte Reload
	movl	$0, (%rsi)
	movq	-280(%rbp), %rsi        # 8-byte Reload
	movl	$0, (%rsi)
	movq	-128(%rbp), %rsi        # 8-byte Reload
	movl	$0, (%rsi)
	movl	$0, (%rcx)
	movl	$0, (%rdx)
	movl	$0, (%rax)
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-200(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$28857, BasicBlockSignatureTracker # imm = 0x70B9
	movw	$0, RunTimeSignatureAdjuster
.LBB58_96:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$28859, %ax             # imm = 0x70BB
	jne	.LBB58_947
# %bb.97:                               # %std_eval.split2007
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	piece_count, %ecx
	movw	$28859, BasicBlockSignatureTracker # imm = 0x70BB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB58_583
# %bb.98:                               #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$118, %ax
	cmpw	$28877, %ax             # imm = 0x70CD
	jne	.LBB58_947
# %bb.99:                               # %std_eval.split2009
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-200(%rbp), %rax        # 8-byte Reload
	movslq	(%rax), %rax
	movl	pieces(,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$28877, BasicBlockSignatureTracker # imm = 0x70CD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_102
# %bb.100:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$28896, %ax             # imm = 0x70E0
	jne	.LBB58_947
# %bb.101:                              # %std_eval.split2015
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$28896, BasicBlockSignatureTracker # imm = 0x70E0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_581
.LBB58_102:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$37, %ax
	cmpw	$28904, %ax             # imm = 0x70E8
	jne	.LBB58_947
# %bb.103:                              # %std_eval.split2013
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-208(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$28904, BasicBlockSignatureTracker # imm = 0x70E8
	movw	$0, RunTimeSignatureAdjuster
# %bb.104:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$489, %ax               # imm = 0x1E9
	cmpw	$28929, %ax             # imm = 0x7101
	jne	.LBB58_947
# %bb.105:                              # %std_eval.split2019
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rbx         # 8-byte Reload
	movslq	(%rbx), %rdi
	movl	board(,%rdi,4), %esi
	addl	$1, %esi
	movl	%esi, %eax
	sarl	%eax
	cltq
	movq	evalRoutines(,%rax,8), %rax
	andl	$1, %esi
                                        # kill: def %edi killed %edi killed %rdi
	callq	*%rax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	addl	%eax, %ecx
	movl	%ecx, (%rdx)
	movslq	(%rbx), %rax
	movl	Xfile(,%rax,4), %eax
	addl	$1, %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	(%rbx), %rax
	movl	Xrank(,%rax,4), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	(%rbx), %rax
	movl	board(,%rax,4), %eax
	movw	$28929, BasicBlockSignatureTracker(%rip) # imm = 0x7101
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-1, %eax
	movl	%eax, %ecx
	subl	$11, %ecx
	ja	.LBB58_579
# %bb.106:                              # %std_eval.split2019
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	.LJTI58_0(,%rax,8), %rax
	jmpq	*%rax
.LBB58_107:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$28946, %ax             # imm = 0x7112
	jne	.LBB58_947
# %bb.108:                              # %std_eval.split2023
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	swhite_pawn(,%rax,4), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movq	-272(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$28946, BasicBlockSignatureTracker # imm = 0x7112
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_123
# %bb.109:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$28959, %ax             # imm = 0x711F
	jne	.LBB58_947
# %bb.110:                              # %std_eval.split2047
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$28959, BasicBlockSignatureTracker # imm = 0x711F
	movw	$13, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_123
# %bb.111:                              # %Buffer__1
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-10185, %ax            # imm = 0xD837
	cmpw	$-22232, %ax            # imm = 0xA928
	jne	.LBB58_947
# %bb.112:                              # %std_eval.split2051
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-22232, BasicBlockSignatureTracker # imm = 0xA928
	movw	$-10185, RunTimeSignatureAdjuster # imm = 0xD837
# %bb.113:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$83, %ax
	xorw	%cx, %ax
	cmpw	$29004, %ax             # imm = 0x714C
	jne	.LBB58_947
# %bb.114:                              # %std_eval.split2749
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$8, %eax
	movl	%eax, (%rcx)
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$29004, BasicBlockSignatureTracker # imm = 0x714C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_121
# %bb.115:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$29025, %ax             # imm = 0x7161
	jne	.LBB58_947
# %bb.116:                              # %std_eval.split2055
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$29025, BasicBlockSignatureTracker # imm = 0x7161
	movw	$45, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_121
# %bb.117:                              # %Buffer__2
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21347, %ax             # imm = 0x5363
	cmpw	$8706, %ax              # imm = 0x2202
	jne	.LBB58_947
# %bb.118:                              # %std_eval.split2057
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$8706, BasicBlockSignatureTracker # imm = 0x2202
	movw	$21347, RunTimeSignatureAdjuster # imm = 0x5363
# %bb.119:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$29030, %ax             # imm = 0x7166
	jne	.LBB58_947
# %bb.120:                              # %std_eval.split2751
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$5, %eax
	movl	%eax, (%rcx)
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$29030, BasicBlockSignatureTracker # imm = 0x7166
	movw	$42, RunTimeSignatureAdjuster
.LBB58_121:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$37, %ax
	xorw	%cx, %ax
	cmpw	$29033, %ax             # imm = 0x7169
	jne	.LBB58_947
# %bb.122:                              # %std_eval.split2053
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29033, BasicBlockSignatureTracker # imm = 0x7169
	movw	$123, RunTimeSignatureAdjuster
.LBB58_123:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$111, %ax
	xorw	%cx, %ax
	cmpw	$29053, %ax             # imm = 0x717D
	jne	.LBB58_947
# %bb.124:                              # %std_eval.split2049
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$29053, BasicBlockSignatureTracker # imm = 0x717D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_135
# %bb.125:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$29054, %ax             # imm = 0x717E
	jne	.LBB58_947
# %bb.126:                              # %std_eval.split2061
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$29054, BasicBlockSignatureTracker # imm = 0x717E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_129
# %bb.127:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$255, %ax
	cmpw	$29057, %ax             # imm = 0x7181
	jne	.LBB58_947
# %bb.128:                              # %std_eval.split2063
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$3, %eax
	movl	%eax, (%rcx)
	movw	$29057, BasicBlockSignatureTracker # imm = 0x7181
	movw	$255, RunTimeSignatureAdjuster
.LBB58_129:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$246, %ax
	xorw	%cx, %ax
	cmpw	$29064, %ax             # imm = 0x7188
	jne	.LBB58_947
# %bb.130:                              # %std_eval.split2065
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$29064, BasicBlockSignatureTracker # imm = 0x7188
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_133
# %bb.131:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$29080, %ax             # imm = 0x7198
	jne	.LBB58_947
# %bb.132:                              # %std_eval.split2067
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$5, %eax
	movl	%eax, (%rcx)
	movw	$29080, BasicBlockSignatureTracker # imm = 0x7198
	movw	$16, RunTimeSignatureAdjuster
.LBB58_133:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$29084, %ax             # imm = 0x719C
	jne	.LBB58_947
# %bb.134:                              # %std_eval.split2069
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29084, BasicBlockSignatureTracker # imm = 0x719C
	movw	$225, RunTimeSignatureAdjuster
.LBB58_135:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$226, %ax
	xorw	%cx, %ax
	cmpw	$29087, %ax             # imm = 0x719F
	jne	.LBB58_947
# %bb.136:                              # %std_eval.split2059
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$29087, BasicBlockSignatureTracker # imm = 0x719F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB58_139
# %bb.137:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$29093, %ax             # imm = 0x71A5
	jne	.LBB58_947
# %bb.138:                              # %std_eval.split2071
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	subl	$1, %eax
	imull	$3, %eax, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movw	$29093, BasicBlockSignatureTracker # imm = 0x71A5
	movw	$58, RunTimeSignatureAdjuster
.LBB58_139:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$29094, %ax             # imm = 0x71A6
	jne	.LBB58_947
# %bb.140:                              # %std_eval.split2073
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$29094, BasicBlockSignatureTracker # imm = 0x71A6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_229
# %bb.141:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$29102, %ax             # imm = 0x71AE
	jne	.LBB58_947
# %bb.142:                              # %std_eval.split2077
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$29102, BasicBlockSignatureTracker # imm = 0x71AE
	movw	$8, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB58_229
# %bb.143:                              # %Buffer__3
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-6303, %ax             # imm = 0xE761
	cmpw	$-26929, %ax            # imm = 0x96CF
	jne	.LBB58_947
# %bb.144:                              # %std_eval.split2079
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-26929, BasicBlockSignatureTracker # imm = 0x96CF
	movw	$-6303, RunTimeSignatureAdjuster # imm = 0xE761
# %bb.145:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$29109, %ax             # imm = 0x71B5
	jne	.LBB58_947
# %bb.146:                              # %std_eval.split2753
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$29109, BasicBlockSignatureTracker # imm = 0x71B5
	movw	$19, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB58_229
# %bb.147:                              # %Buffer__4
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10741, %ax             # imm = 0x29F5
	cmpw	$22592, %ax             # imm = 0x5840
	jne	.LBB58_947
# %bb.148:                              # %std_eval.split2081
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$22592, BasicBlockSignatureTracker # imm = 0x5840
	movw	$10741, RunTimeSignatureAdjuster # imm = 0x29F5
# %bb.149:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$29115, %ax             # imm = 0x71BB
	jne	.LBB58_947
# %bb.150:                              # %std_eval.split2755
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imull	$3, swhite_pawn(,%rax,4), %eax
	addl	$30, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	white_to_move, %eax
	movw	$29115, BasicBlockSignatureTracker # imm = 0x71BB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_163
# %bb.151:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$944, %ax               # imm = 0x3B0
	cmpw	$29195, %ax             # imm = 0x720B
	jne	.LBB58_947
# %bb.152:                              # %std_eval.split2083
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	addl	$110, %eax
	subl	$1, %eax
	movl	%eax, (%r15)
	movslq	bking_loc, %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movslq	bking_loc, %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$29195, BasicBlockSignatureTracker # imm = 0x720B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jle	.LBB58_155
# %bb.153:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$29210, %ax             # imm = 0x721A
	jne	.LBB58_947
# %bb.154:                              # %std_eval.split2087
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	bking_loc, %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movw	$29210, BasicBlockSignatureTracker # imm = 0x721A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_157
.LBB58_155:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$29213, %ax             # imm = 0x721D
	jne	.LBB58_947
# %bb.156:                              # %std_eval.split2089
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	bking_loc, %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movw	$29213, BasicBlockSignatureTracker # imm = 0x721D
	movw	$7, RunTimeSignatureAdjuster
.LBB58_157:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$62, %ax
	xorw	%cx, %ax
	cmpw	$29220, %ax             # imm = 0x7224
	jne	.LBB58_947
# %bb.158:                              # %std_eval.split2091
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	(%r15), %rax
	movl	Xrank(,%rax,4), %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$29220, BasicBlockSignatureTracker # imm = 0x7224
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jle	.LBB58_161
# %bb.159:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$29221, %ax             # imm = 0x7225
	jne	.LBB58_947
# %bb.160:                              # %std_eval.split2093
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-240(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$800, %eax              # imm = 0x320
	movl	%eax, (%rcx)
	movw	$29221, BasicBlockSignatureTracker # imm = 0x7225
	movw	$1, RunTimeSignatureAdjuster
.LBB58_161:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$29223, %ax             # imm = 0x7227
	jne	.LBB58_947
# %bb.162:                              # %std_eval.split2095
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29223, BasicBlockSignatureTracker # imm = 0x7227
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_175
.LBB58_163:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$915, %ax               # imm = 0x393
	cmpw	$29224, %ax             # imm = 0x7228
	jne	.LBB58_947
# %bb.164:                              # %std_eval.split2085
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	addl	$110, %eax
	subl	$1, %eax
	movl	%eax, (%r15)
	movslq	bking_loc, %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movslq	bking_loc, %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$29224, BasicBlockSignatureTracker # imm = 0x7228
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jle	.LBB58_167
# %bb.165:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$29246, %ax             # imm = 0x723E
	jne	.LBB58_947
# %bb.166:                              # %std_eval.split2099
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	bking_loc, %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movw	$29246, BasicBlockSignatureTracker # imm = 0x723E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_169
.LBB58_167:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$107, %ax
	cmpw	$29251, %ax             # imm = 0x7243
	jne	.LBB58_947
# %bb.168:                              # %std_eval.split2101
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	bking_loc, %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movw	$29251, BasicBlockSignatureTracker # imm = 0x7243
	movw	$125, RunTimeSignatureAdjuster
.LBB58_169:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$100, %ax
	xorw	%cx, %ax
	cmpw	$29274, %ax             # imm = 0x725A
	jne	.LBB58_947
# %bb.170:                              # %std_eval.split2103
                                        #   in Loop: Header=BB58_96 Depth=1
	subl	$1, %ebx
	movslq	(%r15), %rax
	movl	Xrank(,%rax,4), %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$29274, BasicBlockSignatureTracker # imm = 0x725A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jle	.LBB58_173
# %bb.171:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$29283, %ax             # imm = 0x7263
	jne	.LBB58_947
# %bb.172:                              # %std_eval.split2105
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-240(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$800, %eax              # imm = 0x320
	movl	%eax, (%rcx)
	movw	$29283, BasicBlockSignatureTracker # imm = 0x7263
	movw	$57, RunTimeSignatureAdjuster
.LBB58_173:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$29302, %ax             # imm = 0x7276
	jne	.LBB58_947
# %bb.174:                              # %std_eval.split2107
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29302, BasicBlockSignatureTracker # imm = 0x7276
	movw	$81, RunTimeSignatureAdjuster
.LBB58_175:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$168, %ax
	xorw	%cx, %ax
	cmpw	$29327, %ax             # imm = 0x728F
	jne	.LBB58_947
# %bb.176:                              # %std_eval.split2097
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$29327, BasicBlockSignatureTracker # imm = 0x728F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB58_179
# %bb.177:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$29333, %ax             # imm = 0x7295
	jne	.LBB58_947
# %bb.178:                              # %std_eval.split2111
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$29333, BasicBlockSignatureTracker # imm = 0x7295
	movw	$26, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jne	.LBB58_181
.LBB58_179:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$29348, %ax             # imm = 0x72A4
	jne	.LBB58_947
# %bb.180:                              # %std_eval.split2109
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	swhite_pawn(,%rax,4), %eax
	shll	$1, %eax
	addl	$12, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$29348, BasicBlockSignatureTracker # imm = 0x72A4
	movw	$49, RunTimeSignatureAdjuster
	jmp	.LBB58_183
.LBB58_181:                             # %Buffer__5
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25014, %ax             # imm = 0x61B6
	cmpw	$4899, %ax              # imm = 0x1323
	jne	.LBB58_947
# %bb.182:                              # %std_eval.split2113
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$4899, BasicBlockSignatureTracker # imm = 0x1323
	movw	$25014, RunTimeSignatureAdjuster # imm = 0x61B6
.LBB58_183:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$56, %ax
	xorw	%cx, %ax
	cmpw	$29357, %ax             # imm = 0x72AD
	jne	.LBB58_947
# %bb.184:                              # %std_eval.split2115
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$29357, BasicBlockSignatureTracker # imm = 0x72AD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_227
# %bb.185:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$29358, %ax             # imm = 0x72AE
	jne	.LBB58_947
# %bb.186:                              # %std_eval.split2119
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$12, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$29358, BasicBlockSignatureTracker # imm = 0x72AE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_205
# %bb.187:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$29362, %ax             # imm = 0x72B2
	jne	.LBB58_947
# %bb.188:                              # %std_eval.split2121
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$29362, BasicBlockSignatureTracker # imm = 0x72B2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_203
# %bb.189:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$29368, %ax             # imm = 0x72B8
	jne	.LBB58_947
# %bb.190:                              # %std_eval.split2127
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %eax
	addl	$1, %eax
	cltq
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movl	(%rdx), %ecx
	addl	$2, %ecx
	movslq	%ecx, %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$29368, BasicBlockSignatureTracker # imm = 0x72B8
	movw	$10, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB58_203
# %bb.191:                              # %Buffer__6
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-11093, %ax            # imm = 0xD4AB
	cmpw	$-23021, %ax            # imm = 0xA613
	jne	.LBB58_947
# %bb.192:                              # %std_eval.split2129
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-23021, BasicBlockSignatureTracker # imm = 0xA613
	movw	$-11093, RunTimeSignatureAdjuster # imm = 0xD4AB
# %bb.193:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$29371, %ax             # imm = 0x72BB
	jne	.LBB58_947
# %bb.194:                              # %std_eval.split2757
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	imull	$7, Xrank(,%rax,4), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movslq	(%rdx), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$29371, BasicBlockSignatureTracker # imm = 0x72BB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB58_201
# %bb.195:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$107, %ax
	cmpw	$29392, %ax             # imm = 0x72D0
	jne	.LBB58_947
# %bb.196:                              # %std_eval.split2131
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$29392, BasicBlockSignatureTracker # imm = 0x72D0
	movw	$107, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jl	.LBB58_201
# %bb.197:                              # %Buffer__7
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12559, %ax            # imm = 0xCEF1
	cmpw	$-17375, %ax            # imm = 0xBC21
	jne	.LBB58_947
# %bb.198:                              # %std_eval.split2135
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-17375, BasicBlockSignatureTracker # imm = 0xBC21
	movw	$-12559, RunTimeSignatureAdjuster # imm = 0xCEF1
# %bb.199:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$29403, %ax             # imm = 0x72DB
	jne	.LBB58_947
# %bb.200:                              # %std_eval.split2759
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$50, %eax
	movl	%eax, (%rcx)
	movw	$29403, BasicBlockSignatureTracker # imm = 0x72DB
	movw	$96, RunTimeSignatureAdjuster
.LBB58_201:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$89, %ax
	xorw	%cx, %ax
	cmpw	$29410, %ax             # imm = 0x72E2
	jne	.LBB58_947
# %bb.202:                              # %std_eval.split2133
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29410, BasicBlockSignatureTracker # imm = 0x72E2
	movw	$80, RunTimeSignatureAdjuster
.LBB58_203:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$87, %ax
	xorw	%cx, %ax
	cmpw	$29413, %ax             # imm = 0x72E5
	jne	.LBB58_947
# %bb.204:                              # %std_eval.split2125
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29413, BasicBlockSignatureTracker # imm = 0x72E5
	movw	$75, RunTimeSignatureAdjuster
.LBB58_205:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$416, %ax               # imm = 0x1A0
	xorw	%cx, %ax
	cmpw	$29454, %ax             # imm = 0x730E
	jne	.LBB58_947
# %bb.206:                              # %std_eval.split2123
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$29454, BasicBlockSignatureTracker # imm = 0x730E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_225
# %bb.207:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$29467, %ax             # imm = 0x731B
	jne	.LBB58_947
# %bb.208:                              # %std_eval.split2137
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$29467, BasicBlockSignatureTracker # imm = 0x731B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_223
# %bb.209:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$29473, %ax             # imm = 0x7321
	jne	.LBB58_947
# %bb.210:                              # %std_eval.split2143
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %eax
	addl	$1, %eax
	cltq
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movl	(%rdx), %ecx
	subl	$2, %ecx
	movslq	%ecx, %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$29473, BasicBlockSignatureTracker # imm = 0x7321
	movw	$58, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB58_223
# %bb.211:                              # %Buffer__8
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29275, %ax             # imm = 0x725B
	cmpw	$378, %ax               # imm = 0x17A
	jne	.LBB58_947
# %bb.212:                              # %std_eval.split2145
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$378, BasicBlockSignatureTracker # imm = 0x17A
	movw	$29275, RunTimeSignatureAdjuster # imm = 0x725B
# %bb.213:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$29479, %ax             # imm = 0x7327
	jne	.LBB58_947
# %bb.214:                              # %std_eval.split2761
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	imull	$7, Xrank(,%rax,4), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movslq	(%rdx), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$29479, BasicBlockSignatureTracker # imm = 0x7327
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB58_221
# %bb.215:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$29480, %ax             # imm = 0x7328
	jne	.LBB58_947
# %bb.216:                              # %std_eval.split2147
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$29480, BasicBlockSignatureTracker # imm = 0x7328
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jl	.LBB58_221
# %bb.217:                              # %Buffer__9
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-10628, %ax            # imm = 0xD67C
	cmpw	$-23212, %ax            # imm = 0xA554
	jne	.LBB58_947
# %bb.218:                              # %std_eval.split2151
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-23212, BasicBlockSignatureTracker # imm = 0xA554
	movw	$-10628, RunTimeSignatureAdjuster # imm = 0xD67C
# %bb.219:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$29495, %ax             # imm = 0x7337
	jne	.LBB58_947
# %bb.220:                              # %std_eval.split2763
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$50, %eax
	movl	%eax, (%rcx)
	movw	$29495, BasicBlockSignatureTracker # imm = 0x7337
	movw	$16, RunTimeSignatureAdjuster
.LBB58_221:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$29529, %ax             # imm = 0x7359
	jne	.LBB58_947
# %bb.222:                              # %std_eval.split2149
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29529, BasicBlockSignatureTracker # imm = 0x7359
	movw	$66, RunTimeSignatureAdjuster
.LBB58_223:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$118, %ax
	xorw	%cx, %ax
	cmpw	$29549, %ax             # imm = 0x736D
	jne	.LBB58_947
# %bb.224:                              # %std_eval.split2141
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29549, BasicBlockSignatureTracker # imm = 0x736D
	movw	$99, RunTimeSignatureAdjuster
.LBB58_225:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$154, %ax
	xorw	%cx, %ax
	cmpw	$29588, %ax             # imm = 0x7394
	jne	.LBB58_947
# %bb.226:                              # %std_eval.split2139
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29588, BasicBlockSignatureTracker # imm = 0x7394
	movw	$313, RunTimeSignatureAdjuster # imm = 0x139
.LBB58_227:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$306, %ax               # imm = 0x132
	xorw	%cx, %ax
	cmpw	$29599, %ax             # imm = 0x739F
	jne	.LBB58_947
# %bb.228:                              # %std_eval.split2117
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29599, BasicBlockSignatureTracker # imm = 0x739F
	movw	$569, RunTimeSignatureAdjuster # imm = 0x239
.LBB58_229:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$523, %ax               # imm = 0x20B
	xorw	%cx, %ax
	cmpw	$29613, %ax             # imm = 0x73AD
	jne	.LBB58_947
# %bb.230:                              # %std_eval.split2075
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$29613, BasicBlockSignatureTracker # imm = 0x73AD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_233
# %bb.231:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$29629, %ax             # imm = 0x73BD
	jne	.LBB58_947
# %bb.232:                              # %std_eval.split2155
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$7, %eax
	movl	%eax, (%rcx)
	movw	$29629, BasicBlockSignatureTracker # imm = 0x73BD
	movw	$16, RunTimeSignatureAdjuster
.LBB58_233:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$118, %ax
	xorw	%cx, %ax
	cmpw	$29659, %ax             # imm = 0x73DB
	jne	.LBB58_947
# %bb.234:                              # %std_eval.split2153
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29659, BasicBlockSignatureTracker # imm = 0x73DB
	movw	$730, RunTimeSignatureAdjuster # imm = 0x2DA
	jmp	.LBB58_579
.LBB58_235:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1283, %ax              # imm = 0x503
	cmpw	$29698, %ax             # imm = 0x7402
	jne	.LBB58_947
# %bb.236:                              # %std_eval.split2025
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	sblack_pawn(,%rax,4), %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movq	-280(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$29698, BasicBlockSignatureTracker # imm = 0x7402
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB58_251
# %bb.237:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$29702, %ax             # imm = 0x7406
	jne	.LBB58_947
# %bb.238:                              # %std_eval.split2157
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$29702, BasicBlockSignatureTracker # imm = 0x7406
	movw	$4, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB58_251
# %bb.239:                              # %Buffer__10
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12138, %ax            # imm = 0xD096
	cmpw	$-23408, %ax            # imm = 0xA490
	jne	.LBB58_947
# %bb.240:                              # %std_eval.split2161
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-23408, BasicBlockSignatureTracker # imm = 0xA490
	movw	$-12138, RunTimeSignatureAdjuster # imm = 0xD096
# %bb.241:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$29710, %ax             # imm = 0x740E
	jne	.LBB58_947
# %bb.242:                              # %std_eval.split2765
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$8, %eax
	movl	%eax, (%rcx)
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$29710, BasicBlockSignatureTracker # imm = 0x740E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_249
# %bb.243:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$29718, %ax             # imm = 0x7416
	jne	.LBB58_947
# %bb.244:                              # %std_eval.split2165
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$29718, BasicBlockSignatureTracker # imm = 0x7416
	movw	$24, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_249
# %bb.245:                              # %Buffer__11
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10888, %ax             # imm = 0x2A88
	cmpw	$24222, %ax             # imm = 0x5E9E
	jne	.LBB58_947
# %bb.246:                              # %std_eval.split2167
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$24222, BasicBlockSignatureTracker # imm = 0x5E9E
	movw	$10888, RunTimeSignatureAdjuster # imm = 0x2A88
# %bb.247:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$47, %ax
	xorw	%cx, %ax
	cmpw	$29753, %ax             # imm = 0x7439
	jne	.LBB58_947
# %bb.248:                              # %std_eval.split2767
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$5, %eax
	movl	%eax, (%rcx)
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$29753, BasicBlockSignatureTracker # imm = 0x7439
	movw	$55, RunTimeSignatureAdjuster
.LBB58_249:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$29755, %ax             # imm = 0x743B
	jne	.LBB58_947
# %bb.250:                              # %std_eval.split2163
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29755, BasicBlockSignatureTracker # imm = 0x743B
	movw	$57, RunTimeSignatureAdjuster
.LBB58_251:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$62, %ax
	xorw	%cx, %ax
	cmpw	$29756, %ax             # imm = 0x743C
	jne	.LBB58_947
# %bb.252:                              # %std_eval.split2159
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$29756, BasicBlockSignatureTracker # imm = 0x743C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_263
# %bb.253:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$106, %ax
	cmpw	$29782, %ax             # imm = 0x7456
	jne	.LBB58_947
# %bb.254:                              # %std_eval.split2171
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$29782, BasicBlockSignatureTracker # imm = 0x7456
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_257
# %bb.255:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$29791, %ax             # imm = 0x745F
	jne	.LBB58_947
# %bb.256:                              # %std_eval.split2173
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$3, %eax
	movl	%eax, (%rcx)
	movw	$29791, BasicBlockSignatureTracker # imm = 0x745F
	movw	$9, RunTimeSignatureAdjuster
.LBB58_257:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$29807, %ax             # imm = 0x746F
	jne	.LBB58_947
# %bb.258:                              # %std_eval.split2175
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$29807, BasicBlockSignatureTracker # imm = 0x746F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_261
# %bb.259:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$29811, %ax             # imm = 0x7473
	jne	.LBB58_947
# %bb.260:                              # %std_eval.split2177
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$5, %eax
	movl	%eax, (%rcx)
	movw	$29811, BasicBlockSignatureTracker # imm = 0x7473
	movw	$28, RunTimeSignatureAdjuster
.LBB58_261:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$29818, %ax             # imm = 0x747A
	jne	.LBB58_947
# %bb.262:                              # %std_eval.split2179
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29818, BasicBlockSignatureTracker # imm = 0x747A
	movw	$70, RunTimeSignatureAdjuster
.LBB58_263:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$181, %ax
	xorw	%cx, %ax
	cmpw	$29833, %ax             # imm = 0x7489
	jne	.LBB58_947
# %bb.264:                              # %std_eval.split2169
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$29833, BasicBlockSignatureTracker # imm = 0x7489
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB58_267
# %bb.265:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$29837, %ax             # imm = 0x748D
	jne	.LBB58_947
# %bb.266:                              # %std_eval.split2181
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	subl	$1, %eax
	imull	$3, %eax, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$29837, BasicBlockSignatureTracker # imm = 0x748D
	movw	$4, RunTimeSignatureAdjuster
.LBB58_267:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$29848, %ax             # imm = 0x7498
	jne	.LBB58_947
# %bb.268:                              # %std_eval.split2183
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$29848, BasicBlockSignatureTracker # imm = 0x7498
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_357
# %bb.269:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$29850, %ax             # imm = 0x749A
	jne	.LBB58_947
# %bb.270:                              # %std_eval.split2187
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$29850, BasicBlockSignatureTracker # imm = 0x749A
	movw	$2, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB58_357
# %bb.271:                              # %Buffer__12
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-27008, %ax            # imm = 0x9680
	cmpw	$-7654, %ax             # imm = 0xE21A
	jne	.LBB58_947
# %bb.272:                              # %std_eval.split2189
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-7654, BasicBlockSignatureTracker # imm = 0xE21A
	movw	$-27008, RunTimeSignatureAdjuster # imm = 0x9680
# %bb.273:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$29875, %ax             # imm = 0x74B3
	jne	.LBB58_947
# %bb.274:                              # %std_eval.split2769
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$29875, BasicBlockSignatureTracker # imm = 0x74B3
	movw	$43, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB58_357
# %bb.275:                              # %Buffer__13
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31064, %ax             # imm = 0x7958
	cmpw	$3563, %ax              # imm = 0xDEB
	jne	.LBB58_947
# %bb.276:                              # %std_eval.split2191
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$3563, BasicBlockSignatureTracker # imm = 0xDEB
	movw	$31064, RunTimeSignatureAdjuster # imm = 0x7958
# %bb.277:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$113, %ax
	xorw	%cx, %ax
	cmpw	$29890, %ax             # imm = 0x74C2
	jne	.LBB58_947
# %bb.278:                              # %std_eval.split2771
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imull	$3, sblack_pawn(,%rax,4), %eax
	addl	$30, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movl	white_to_move, %eax
	movw	$29890, BasicBlockSignatureTracker # imm = 0x74C2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_291
# %bb.279:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$29894, %ax             # imm = 0x74C6
	jne	.LBB58_947
# %bb.280:                              # %std_eval.split2195
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	addl	$26, %eax
	subl	$1, %eax
	movl	%eax, (%r15)
	movslq	wking_loc, %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movslq	wking_loc, %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$29894, BasicBlockSignatureTracker # imm = 0x74C6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jle	.LBB58_283
# %bb.281:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$29895, %ax             # imm = 0x74C7
	jne	.LBB58_947
# %bb.282:                              # %std_eval.split2197
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	wking_loc, %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movw	$29895, BasicBlockSignatureTracker # imm = 0x74C7
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_285
.LBB58_283:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$29903, %ax             # imm = 0x74CF
	jne	.LBB58_947
# %bb.284:                              # %std_eval.split2199
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	wking_loc, %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movw	$29903, BasicBlockSignatureTracker # imm = 0x74CF
	movw	$8, RunTimeSignatureAdjuster
.LBB58_285:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$29917, %ax             # imm = 0x74DD
	jne	.LBB58_947
# %bb.286:                              # %std_eval.split2201
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	(%r15), %rax
	movl	Xrank(,%rax,4), %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$29917, BasicBlockSignatureTracker # imm = 0x74DD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jle	.LBB58_289
# %bb.287:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$29928, %ax             # imm = 0x74E8
	jne	.LBB58_947
# %bb.288:                              # %std_eval.split2203
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-232(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	subl	$800, %eax              # imm = 0x320
	movl	%eax, (%rcx)
	movw	$29928, BasicBlockSignatureTracker # imm = 0x74E8
	movw	$53, RunTimeSignatureAdjuster
.LBB58_289:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$472, %ax               # imm = 0x1D8
	xorw	%cx, %ax
	cmpw	$29957, %ax             # imm = 0x7505
	jne	.LBB58_947
# %bb.290:                              # %std_eval.split2205
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$29957, BasicBlockSignatureTracker # imm = 0x7505
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_303
.LBB58_291:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$464, %ax               # imm = 0x1D0
	cmpw	$29970, %ax             # imm = 0x7512
	jne	.LBB58_947
# %bb.292:                              # %std_eval.split2193
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	addl	$26, %eax
	subl	$1, %eax
	movl	%eax, (%r15)
	movslq	wking_loc, %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movslq	wking_loc, %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$29970, BasicBlockSignatureTracker # imm = 0x7512
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jle	.LBB58_295
# %bb.293:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$29974, %ax             # imm = 0x7516
	jne	.LBB58_947
# %bb.294:                              # %std_eval.split2209
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	wking_loc, %rax
	movl	Xfile(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xfile(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movw	$29974, BasicBlockSignatureTracker # imm = 0x7516
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_297
.LBB58_295:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32, %ax
	cmpw	$30002, %ax             # imm = 0x7532
	jne	.LBB58_947
# %bb.296:                              # %std_eval.split2211
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	wking_loc, %rax
	movl	Xrank(,%rax,4), %edi
	movslq	(%r15), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movw	$30002, BasicBlockSignatureTracker # imm = 0x7532
	movw	$36, RunTimeSignatureAdjuster
.LBB58_297:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$30011, %ax             # imm = 0x753B
	jne	.LBB58_947
# %bb.298:                              # %std_eval.split2213
                                        #   in Loop: Header=BB58_96 Depth=1
	subl	$1, %ebx
	movslq	(%r15), %rax
	movl	Xrank(,%rax,4), %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	subl	Xrank(,%rax,4), %edi
	callq	abs
	movw	$30011, BasicBlockSignatureTracker # imm = 0x753B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jle	.LBB58_301
# %bb.299:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$125, %ax
	cmpw	$30022, %ax             # imm = 0x7546
	jne	.LBB58_947
# %bb.300:                              # %std_eval.split2215
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-232(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	subl	$800, %eax              # imm = 0x320
	movl	%eax, (%rcx)
	movw	$30022, BasicBlockSignatureTracker # imm = 0x7546
	movw	$125, RunTimeSignatureAdjuster
.LBB58_301:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$109, %ax
	xorw	%cx, %ax
	cmpw	$30038, %ax             # imm = 0x7556
	jne	.LBB58_947
# %bb.302:                              # %std_eval.split2217
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30038, BasicBlockSignatureTracker # imm = 0x7556
	movw	$83, RunTimeSignatureAdjuster
.LBB58_303:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$88, %ax
	xorw	%cx, %ax
	cmpw	$30045, %ax             # imm = 0x755D
	jne	.LBB58_947
# %bb.304:                              # %std_eval.split2207
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$30045, BasicBlockSignatureTracker # imm = 0x755D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB58_307
# %bb.305:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$30053, %ax             # imm = 0x7565
	jne	.LBB58_947
# %bb.306:                              # %std_eval.split2221
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$30053, BasicBlockSignatureTracker # imm = 0x7565
	movw	$56, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jne	.LBB58_309
.LBB58_307:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$30056, %ax             # imm = 0x7568
	jne	.LBB58_947
# %bb.308:                              # %std_eval.split2219
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	sblack_pawn(,%rax,4), %eax
	shll	$1, %eax
	addl	$12, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movw	$30056, BasicBlockSignatureTracker # imm = 0x7568
	movw	$13, RunTimeSignatureAdjuster
	jmp	.LBB58_311
.LBB58_309:                             # %Buffer__14
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29771, %ax            # imm = 0x8BB5
	cmpw	$-304, %ax              # imm = 0xFED0
	jne	.LBB58_947
# %bb.310:                              # %std_eval.split2223
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-304, BasicBlockSignatureTracker # imm = 0xFED0
	movw	$-29771, RunTimeSignatureAdjuster # imm = 0x8BB5
.LBB58_311:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$30058, %ax             # imm = 0x756A
	jne	.LBB58_947
# %bb.312:                              # %std_eval.split2225
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$30058, BasicBlockSignatureTracker # imm = 0x756A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_355
# %bb.313:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$30062, %ax             # imm = 0x756E
	jne	.LBB58_947
# %bb.314:                              # %std_eval.split2229
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$12, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$30062, BasicBlockSignatureTracker # imm = 0x756E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_333
# %bb.315:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$30078, %ax             # imm = 0x757E
	jne	.LBB58_947
# %bb.316:                              # %std_eval.split2231
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$30078, BasicBlockSignatureTracker # imm = 0x757E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_331
# %bb.317:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$30079, %ax             # imm = 0x757F
	jne	.LBB58_947
# %bb.318:                              # %std_eval.split2237
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %eax
	addl	$1, %eax
	cltq
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movl	(%rdx), %ecx
	addl	$2, %ecx
	movslq	%ecx, %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$30079, BasicBlockSignatureTracker # imm = 0x757F
	movw	$1, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB58_331
# %bb.319:                              # %Buffer__15
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17698, %ax             # imm = 0x4522
	cmpw	$12381, %ax             # imm = 0x305D
	jne	.LBB58_947
# %bb.320:                              # %std_eval.split2239
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$12381, BasicBlockSignatureTracker # imm = 0x305D
	movw	$17698, RunTimeSignatureAdjuster # imm = 0x4522
# %bb.321:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$239, %ax
	xorw	%cx, %ax
	cmpw	$30096, %ax             # imm = 0x7590
	jne	.LBB58_947
# %bb.322:                              # %std_eval.split2773
                                        #   in Loop: Header=BB58_96 Depth=1
	movl	$9, %eax
	movq	-72(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	subl	Xrank(,%rcx,4), %eax
	imull	$7, %eax, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movslq	(%rsi), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$30096, BasicBlockSignatureTracker # imm = 0x7590
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_329
# %bb.323:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$30104, %ax             # imm = 0x7598
	jne	.LBB58_947
# %bb.324:                              # %std_eval.split2241
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$30104, BasicBlockSignatureTracker # imm = 0x7598
	movw	$8, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jg	.LBB58_329
# %bb.325:                              # %Buffer__16
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23129, %ax             # imm = 0x5A59
	cmpw	$12225, %ax             # imm = 0x2FC1
	jne	.LBB58_947
# %bb.326:                              # %std_eval.split2245
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$12225, BasicBlockSignatureTracker # imm = 0x2FC1
	movw	$23129, RunTimeSignatureAdjuster # imm = 0x5A59
# %bb.327:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$30132, %ax             # imm = 0x75B4
	jne	.LBB58_947
# %bb.328:                              # %std_eval.split2775
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$50, %eax
	movl	%eax, (%rcx)
	movw	$30132, BasicBlockSignatureTracker # imm = 0x75B4
	movw	$36, RunTimeSignatureAdjuster
.LBB58_329:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$37, %ax
	xorw	%cx, %ax
	cmpw	$30133, %ax             # imm = 0x75B5
	jne	.LBB58_947
# %bb.330:                              # %std_eval.split2243
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30133, BasicBlockSignatureTracker # imm = 0x75B5
	movw	$203, RunTimeSignatureAdjuster
.LBB58_331:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$187, %ax
	xorw	%cx, %ax
	cmpw	$30149, %ax             # imm = 0x75C5
	jne	.LBB58_947
# %bb.332:                              # %std_eval.split2235
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30149, BasicBlockSignatureTracker # imm = 0x75C5
	movw	$171, RunTimeSignatureAdjuster
.LBB58_333:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$188, %ax
	xorw	%cx, %ax
	cmpw	$30162, %ax             # imm = 0x75D2
	jne	.LBB58_947
# %bb.334:                              # %std_eval.split2233
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$30162, BasicBlockSignatureTracker # imm = 0x75D2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_353
# %bb.335:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$30206, %ax             # imm = 0x75FE
	jne	.LBB58_947
# %bb.336:                              # %std_eval.split2247
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$30206, BasicBlockSignatureTracker # imm = 0x75FE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_351
# %bb.337:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1014, %ax              # imm = 0x3F6
	cmpw	$30216, %ax             # imm = 0x7608
	jne	.LBB58_947
# %bb.338:                              # %std_eval.split2253
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %eax
	subl	$1, %eax
	cltq
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movl	(%rdx), %ecx
	subl	$2, %ecx
	movslq	%ecx, %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$30216, BasicBlockSignatureTracker # imm = 0x7608
	movw	$1014, RunTimeSignatureAdjuster # imm = 0x3F6
	cmpl	%ecx, %eax
	jg	.LBB58_351
# %bb.339:                              # %Buffer__17
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-6771, %ax             # imm = 0xE58D
	cmpw	$-27771, %ax            # imm = 0x9385
	jne	.LBB58_947
# %bb.340:                              # %std_eval.split2255
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-27771, BasicBlockSignatureTracker # imm = 0x9385
	movw	$-6771, RunTimeSignatureAdjuster # imm = 0xE58D
# %bb.341:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$30243, %ax             # imm = 0x7623
	jne	.LBB58_947
# %bb.342:                              # %std_eval.split2777
                                        #   in Loop: Header=BB58_96 Depth=1
	movl	$9, %eax
	movq	-72(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	subl	Xrank(,%rcx,4), %eax
	imull	$7, %eax, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movslq	(%rsi), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$30243, BasicBlockSignatureTracker # imm = 0x7623
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_349
# %bb.343:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$30251, %ax             # imm = 0x762B
	jne	.LBB58_947
# %bb.344:                              # %std_eval.split2257
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$30251, BasicBlockSignatureTracker # imm = 0x762B
	movw	$8, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jg	.LBB58_349
# %bb.345:                              # %Buffer__18
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25697, %ax             # imm = 0x6461
	cmpw	$4682, %ax              # imm = 0x124A
	jne	.LBB58_947
# %bb.346:                              # %std_eval.split2261
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$4682, BasicBlockSignatureTracker # imm = 0x124A
	movw	$25697, RunTimeSignatureAdjuster # imm = 0x6461
# %bb.347:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$30262, %ax             # imm = 0x7636
	jne	.LBB58_947
# %bb.348:                              # %std_eval.split2779
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$50, %eax
	movl	%eax, (%rcx)
	movw	$30262, BasicBlockSignatureTracker # imm = 0x7636
	movw	$21, RunTimeSignatureAdjuster
.LBB58_349:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$30301, %ax             # imm = 0x765D
	jne	.LBB58_947
# %bb.350:                              # %std_eval.split2259
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30301, BasicBlockSignatureTracker # imm = 0x765D
	movw	$931, RunTimeSignatureAdjuster # imm = 0x3A3
.LBB58_351:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$925, %ax               # imm = 0x39D
	xorw	%cx, %ax
	cmpw	$30307, %ax             # imm = 0x7663
	jne	.LBB58_947
# %bb.352:                              # %std_eval.split2251
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30307, BasicBlockSignatureTracker # imm = 0x7663
	movw	$945, RunTimeSignatureAdjuster # imm = 0x3B1
.LBB58_353:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$951, %ax               # imm = 0x3B7
	xorw	%cx, %ax
	cmpw	$30309, %ax             # imm = 0x7665
	jne	.LBB58_947
# %bb.354:                              # %std_eval.split2249
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30309, BasicBlockSignatureTracker # imm = 0x7665
	movw	$783, RunTimeSignatureAdjuster # imm = 0x30F
.LBB58_355:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$775, %ax               # imm = 0x307
	xorw	%cx, %ax
	cmpw	$30317, %ax             # imm = 0x766D
	jne	.LBB58_947
# %bb.356:                              # %std_eval.split2227
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30317, BasicBlockSignatureTracker # imm = 0x766D
	movw	$757, RunTimeSignatureAdjuster # imm = 0x2F5
.LBB58_357:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$744, %ax               # imm = 0x2E8
	xorw	%cx, %ax
	cmpw	$30320, %ax             # imm = 0x7670
	jne	.LBB58_947
# %bb.358:                              # %std_eval.split2185
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$30320, BasicBlockSignatureTracker # imm = 0x7670
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_361
# %bb.359:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$30321, %ax             # imm = 0x7671
	jne	.LBB58_947
# %bb.360:                              # %std_eval.split2265
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$7, %eax
	movl	%eax, (%rcx)
	movw	$30321, BasicBlockSignatureTracker # imm = 0x7671
	movw	$1, RunTimeSignatureAdjuster
.LBB58_361:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$244, %ax
	xorw	%cx, %ax
	cmpw	$30340, %ax             # imm = 0x7684
	jne	.LBB58_947
# %bb.362:                              # %std_eval.split2263
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30340, BasicBlockSignatureTracker # imm = 0x7684
	movw	$1925, RunTimeSignatureAdjuster # imm = 0x785
	jmp	.LBB58_579
.LBB58_363:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1935, %ax              # imm = 0x78F
	cmpw	$30350, %ax             # imm = 0x768E
	jne	.LBB58_947
# %bb.364:                              # %std_eval.split2027
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-136(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$30350, BasicBlockSignatureTracker # imm = 0x768E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_367
# %bb.365:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$30363, %ax             # imm = 0x769B
	jne	.LBB58_947
# %bb.366:                              # %std_eval.split2267
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	Xfile(,%rax,4), %eax
	movl	%eax, (%r14)
	movslq	(%rcx), %rax
	movl	Xrank(,%rax,4), %eax
	movl	%eax, (%r12)
	movw	$30363, BasicBlockSignatureTracker # imm = 0x769B
	movw	$21, RunTimeSignatureAdjuster
.LBB58_367:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$47, %ax
	xorw	%cx, %ax
	cmpw	$30369, %ax             # imm = 0x76A1
	jne	.LBB58_947
# %bb.368:                              # %std_eval.split2269
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$30369, BasicBlockSignatureTracker # imm = 0x76A1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB58_379
# %bb.369:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$30373, %ax             # imm = 0x76A5
	jne	.LBB58_947
# %bb.370:                              # %std_eval.split2271
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$25, %eax
	movl	%eax, (%rcx)
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$30373, BasicBlockSignatureTracker # imm = 0x76A5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_377
# %bb.371:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$30375, %ax             # imm = 0x76A7
	jne	.LBB58_947
# %bb.372:                              # %std_eval.split2275
                                        #   in Loop: Header=BB58_96 Depth=1
	movl	(%r12), %eax
	movw	$30375, BasicBlockSignatureTracker # imm = 0x76A7
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	jne	.LBB58_377
# %bb.373:                              # %Buffer__19
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-28944, %ax            # imm = 0x8EF0
	cmpw	$-1961, %ax             # imm = 0xF857
	jne	.LBB58_947
# %bb.374:                              # %std_eval.split2279
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-1961, BasicBlockSignatureTracker # imm = 0xF857
	movw	$-28944, RunTimeSignatureAdjuster # imm = 0x8EF0
# %bb.375:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$30379, %ax             # imm = 0x76AB
	jne	.LBB58_947
# %bb.376:                              # %std_eval.split2781
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$10, %eax
	movl	%eax, (%rcx)
	movw	$30379, BasicBlockSignatureTracker # imm = 0x76AB
	movw	$14, RunTimeSignatureAdjuster
.LBB58_377:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$30385, %ax             # imm = 0x76B1
	jne	.LBB58_947
# %bb.378:                              # %std_eval.split2277
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30385, BasicBlockSignatureTracker # imm = 0x76B1
	movw	$16, RunTimeSignatureAdjuster
.LBB58_379:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$30387, %ax             # imm = 0x76B3
	jne	.LBB58_947
# %bb.380:                              # %std_eval.split2273
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$30387, BasicBlockSignatureTracker # imm = 0x76B3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_395
# %bb.381:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$30391, %ax             # imm = 0x76B7
	jne	.LBB58_947
# %bb.382:                              # %std_eval.split2283
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$5, %eax
	movl	%eax, (%rcx)
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$30391, BasicBlockSignatureTracker # imm = 0x76B7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_389
# %bb.383:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$30400, %ax             # imm = 0x76C0
	jne	.LBB58_947
# %bb.384:                              # %std_eval.split2285
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movl	(%r14), %ecx
	movw	$30400, BasicBlockSignatureTracker # imm = 0x76C0
	movw	$119, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB58_389
# %bb.385:                              # %Buffer__20
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30864, %ax             # imm = 0x7890
	cmpw	$3664, %ax              # imm = 0xE50
	jne	.LBB58_947
# %bb.386:                              # %std_eval.split2289
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$3664, BasicBlockSignatureTracker # imm = 0xE50
	movw	$30864, RunTimeSignatureAdjuster # imm = 0x7890
# %bb.387:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$30414, %ax             # imm = 0x76CE
	jne	.LBB58_947
# %bb.388:                              # %std_eval.split2783
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$12, %eax
	movl	%eax, (%rcx)
	movw	$30414, BasicBlockSignatureTracker # imm = 0x76CE
	movw	$121, RunTimeSignatureAdjuster
.LBB58_389:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$103, %ax
	xorw	%cx, %ax
	cmpw	$30416, %ax             # imm = 0x76D0
	jne	.LBB58_947
# %bb.390:                              # %std_eval.split2287
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$30416, BasicBlockSignatureTracker # imm = 0x76D0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_393
# %bb.391:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$30432, %ax             # imm = 0x76E0
	jne	.LBB58_947
# %bb.392:                              # %std_eval.split2293
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$3, %eax
	movl	%eax, (%rcx)
	movw	$30432, BasicBlockSignatureTracker # imm = 0x76E0
	movw	$48, RunTimeSignatureAdjuster
.LBB58_393:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$30437, %ax             # imm = 0x76E5
	jne	.LBB58_947
# %bb.394:                              # %std_eval.split2291
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30437, BasicBlockSignatureTracker # imm = 0x76E5
	movw	$86, RunTimeSignatureAdjuster
.LBB58_395:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$95, %ax
	xorw	%cx, %ax
	cmpw	$30444, %ax             # imm = 0x76EC
	jne	.LBB58_947
# %bb.396:                              # %std_eval.split2281
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30444, BasicBlockSignatureTracker # imm = 0x76EC
	movw	$2029, RunTimeSignatureAdjuster # imm = 0x7ED
	jmp	.LBB58_579
.LBB58_397:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2031, %ax              # imm = 0x7EF
	cmpw	$30446, %ax             # imm = 0x76EE
	jne	.LBB58_947
# %bb.398:                              # %std_eval.split2029
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$30446, BasicBlockSignatureTracker # imm = 0x76EE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_401
# %bb.399:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$30449, %ax             # imm = 0x76F1
	jne	.LBB58_947
# %bb.400:                              # %std_eval.split2295
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	Xfile(,%rax,4), %eax
	movq	-256(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movslq	(%rcx), %rax
	movl	Xrank(,%rax,4), %eax
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$30449, BasicBlockSignatureTracker # imm = 0x76F1
	movw	$31, RunTimeSignatureAdjuster
.LBB58_401:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$30457, %ax             # imm = 0x76F9
	jne	.LBB58_947
# %bb.402:                              # %std_eval.split2297
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$30457, BasicBlockSignatureTracker # imm = 0x76F9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_413
# %bb.403:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$503, %ax               # imm = 0x1F7
	cmpw	$30478, %ax             # imm = 0x770E
	jne	.LBB58_947
# %bb.404:                              # %std_eval.split2299
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$25, %eax
	movl	%eax, (%rcx)
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$30478, BasicBlockSignatureTracker # imm = 0x770E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_411
# %bb.405:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$30483, %ax             # imm = 0x7713
	jne	.LBB58_947
# %bb.406:                              # %std_eval.split2303
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-264(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$30483, BasicBlockSignatureTracker # imm = 0x7713
	movw	$29, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_411
# %bb.407:                              # %Buffer__21
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-21613, %ax            # imm = 0xAB93
	cmpw	$-9088, %ax             # imm = 0xDC80
	jne	.LBB58_947
# %bb.408:                              # %std_eval.split2307
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-9088, BasicBlockSignatureTracker # imm = 0xDC80
	movw	$-21613, RunTimeSignatureAdjuster # imm = 0xAB93
# %bb.409:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$30495, %ax             # imm = 0x771F
	jne	.LBB58_947
# %bb.410:                              # %std_eval.split2785
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$10, %eax
	movl	%eax, (%rcx)
	movw	$30495, BasicBlockSignatureTracker # imm = 0x771F
	movw	$17, RunTimeSignatureAdjuster
.LBB58_411:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$30498, %ax             # imm = 0x7722
	jne	.LBB58_947
# %bb.412:                              # %std_eval.split2305
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30498, BasicBlockSignatureTracker # imm = 0x7722
	movw	$475, RunTimeSignatureAdjuster # imm = 0x1DB
.LBB58_413:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$451, %ax               # imm = 0x1C3
	xorw	%cx, %ax
	cmpw	$30522, %ax             # imm = 0x773A
	jne	.LBB58_947
# %bb.414:                              # %std_eval.split2301
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$30522, BasicBlockSignatureTracker # imm = 0x773A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_429
# %bb.415:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$30523, %ax             # imm = 0x773B
	jne	.LBB58_947
# %bb.416:                              # %std_eval.split2311
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$5, %eax
	movl	%eax, (%rcx)
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$30523, BasicBlockSignatureTracker # imm = 0x773B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_423
# %bb.417:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$94, %ax
	cmpw	$30565, %ax             # imm = 0x7765
	jne	.LBB58_947
# %bb.418:                              # %std_eval.split2313
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movq	-256(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$30565, BasicBlockSignatureTracker # imm = 0x7765
	movw	$94, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB58_423
# %bb.419:                              # %Buffer__22
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15551, %ax             # imm = 0x3CBF
	cmpw	$19418, %ax             # imm = 0x4BDA
	jne	.LBB58_947
# %bb.420:                              # %std_eval.split2317
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$19418, BasicBlockSignatureTracker # imm = 0x4BDA
	movw	$15551, RunTimeSignatureAdjuster # imm = 0x3CBF
# %bb.421:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$30568, %ax             # imm = 0x7768
	jne	.LBB58_947
# %bb.422:                              # %std_eval.split2787
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$12, %eax
	movl	%eax, (%rcx)
	movw	$30568, BasicBlockSignatureTracker # imm = 0x7768
	movw	$83, RunTimeSignatureAdjuster
.LBB58_423:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$82, %ax
	xorw	%cx, %ax
	cmpw	$30569, %ax             # imm = 0x7769
	jne	.LBB58_947
# %bb.424:                              # %std_eval.split2315
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$30569, BasicBlockSignatureTracker # imm = 0x7769
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_427
# %bb.425:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$30579, %ax             # imm = 0x7773
	jne	.LBB58_947
# %bb.426:                              # %std_eval.split2321
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$3, %eax
	movl	%eax, (%rcx)
	movw	$30579, BasicBlockSignatureTracker # imm = 0x7773
	movw	$26, RunTimeSignatureAdjuster
.LBB58_427:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$228, %ax
	xorw	%cx, %ax
	cmpw	$30605, %ax             # imm = 0x778D
	jne	.LBB58_947
# %bb.428:                              # %std_eval.split2319
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30605, BasicBlockSignatureTracker # imm = 0x778D
	movw	$183, RunTimeSignatureAdjuster
.LBB58_429:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$172, %ax
	xorw	%cx, %ax
	cmpw	$30614, %ax             # imm = 0x7796
	jne	.LBB58_947
# %bb.430:                              # %std_eval.split2309
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30614, BasicBlockSignatureTracker # imm = 0x7796
	movw	$1687, RunTimeSignatureAdjuster # imm = 0x697
	jmp	.LBB58_579
.LBB58_431:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1716, %ax              # imm = 0x6B4
	cmpw	$30645, %ax             # imm = 0x77B5
	jne	.LBB58_947
# %bb.432:                              # %std_eval.split2031
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$30645, BasicBlockSignatureTracker # imm = 0x77B5
	movw	$1716, RunTimeSignatureAdjuster # imm = 0x6B4
	jmp	.LBB58_579
.LBB58_433:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1719, %ax              # imm = 0x6B7
	cmpw	$30646, %ax             # imm = 0x77B6
	jne	.LBB58_947
# %bb.434:                              # %std_eval.split2033
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$30646, BasicBlockSignatureTracker # imm = 0x77B6
	movw	$1719, RunTimeSignatureAdjuster # imm = 0x6B7
	jmp	.LBB58_579
.LBB58_435:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1727, %ax              # imm = 0x6BF
	cmpw	$30654, %ax             # imm = 0x77BE
	jne	.LBB58_947
# %bb.436:                              # %std_eval.split2035
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$30654, BasicBlockSignatureTracker # imm = 0x77BE
	movw	$1727, RunTimeSignatureAdjuster # imm = 0x6BF
	jmp	.LBB58_579
.LBB58_437:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1729, %ax              # imm = 0x6C1
	cmpw	$30656, %ax             # imm = 0x77C0
	jne	.LBB58_947
# %bb.438:                              # %std_eval.split2037
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$30656, BasicBlockSignatureTracker # imm = 0x77C0
	movw	$1729, RunTimeSignatureAdjuster # imm = 0x6C1
	jmp	.LBB58_579
.LBB58_439:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1744, %ax              # imm = 0x6D0
	cmpw	$30673, %ax             # imm = 0x77D1
	jne	.LBB58_947
# %bb.440:                              # %std_eval.split2039
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$30673, BasicBlockSignatureTracker # imm = 0x77D1
	movw	$1744, RunTimeSignatureAdjuster # imm = 0x6D0
	jmp	.LBB58_579
.LBB58_441:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1769, %ax              # imm = 0x6E9
	cmpw	$30696, %ax             # imm = 0x77E8
	jne	.LBB58_947
# %bb.442:                              # %std_eval.split2041
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$30696, BasicBlockSignatureTracker # imm = 0x77E8
	movw	$1769, RunTimeSignatureAdjuster # imm = 0x6E9
	jmp	.LBB58_579
.LBB58_443:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1772, %ax              # imm = 0x6EC
	cmpw	$30701, %ax             # imm = 0x77ED
	jne	.LBB58_947
# %bb.444:                              # %std_eval.split2043
                                        #   in Loop: Header=BB58_96 Depth=1
	movl	wmat, %eax
	movw	$30701, BasicBlockSignatureTracker # imm = 0x77ED
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1300, %eax             # imm = 0x514
	jle	.LBB58_507
# %bb.445:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4074, %ax              # imm = 0xFEA
	cmpw	$30727, %ax             # imm = 0x7807
	jne	.LBB58_947
# %bb.446:                              # %std_eval.split2323
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	swhite_king(,%rax,4), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	white_castled, %eax
	movw	$30727, BasicBlockSignatureTracker # imm = 0x7807
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_449
# %bb.447:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$30732, %ax             # imm = 0x780C
	jne	.LBB58_947
# %bb.448:                              # %std_eval.split2327
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$15, %eax
	movl	%eax, (%rcx)
	movw	$30732, BasicBlockSignatureTracker # imm = 0x780C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_465
.LBB58_449:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$30735, %ax             # imm = 0x780F
	jne	.LBB58_947
# %bb.450:                              # %std_eval.split2329
                                        #   in Loop: Header=BB58_96 Depth=1
	movl	white_castled, %eax
	movw	$30735, BasicBlockSignatureTracker # imm = 0x780F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_453
# %bb.451:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$30736, %ax             # imm = 0x7810
	jne	.LBB58_947
# %bb.452:                              # %std_eval.split2333
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$25, %eax
	movl	%eax, (%rcx)
	movw	$30736, BasicBlockSignatureTracker # imm = 0x7810
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_463
.LBB58_453:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$30744, %ax             # imm = 0x7818
	jne	.LBB58_947
# %bb.454:                              # %std_eval.split2335
                                        #   in Loop: Header=BB58_96 Depth=1
	movl	moved+120, %eax
	movw	$30744, BasicBlockSignatureTracker # imm = 0x7818
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_461
# %bb.455:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$30755, %ax             # imm = 0x7823
	jne	.LBB58_947
# %bb.456:                              # %std_eval.split2339
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$10, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$30755, BasicBlockSignatureTracker # imm = 0x7823
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_459
# %bb.457:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$30767, %ax             # imm = 0x782F
	jne	.LBB58_947
# %bb.458:                              # %std_eval.split2345
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$15, %eax
	movl	%eax, (%rcx)
	movw	$30767, BasicBlockSignatureTracker # imm = 0x782F
	movw	$12, RunTimeSignatureAdjuster
.LBB58_459:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$30769, %ax             # imm = 0x7831
	jne	.LBB58_947
# %bb.460:                              # %std_eval.split2343
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30769, BasicBlockSignatureTracker # imm = 0x7831
	movw	$41, RunTimeSignatureAdjuster
.LBB58_461:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$39, %ax
	xorw	%cx, %ax
	cmpw	$30783, %ax             # imm = 0x783F
	jne	.LBB58_947
# %bb.462:                              # %std_eval.split2341
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30783, BasicBlockSignatureTracker # imm = 0x783F
	movw	$47, RunTimeSignatureAdjuster
.LBB58_463:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$83, %ax
	xorw	%cx, %ax
	cmpw	$30787, %ax             # imm = 0x7843
	jne	.LBB58_947
# %bb.464:                              # %std_eval.split2337
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30787, BasicBlockSignatureTracker # imm = 0x7843
	movw	$79, RunTimeSignatureAdjuster
.LBB58_465:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$72, %ax
	xorw	%cx, %ax
	cmpw	$30788, %ax             # imm = 0x7844
	jne	.LBB58_947
# %bb.466:                              # %std_eval.split2331
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	wking_loc, %rax
	movl	Xfile(,%rax,4), %eax
	movw	$30788, BasicBlockSignatureTracker # imm = 0x7844
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB58_503
# %bb.467:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$30800, %ax             # imm = 0x7850
	jne	.LBB58_947
# %bb.468:                              # %std_eval.split2347
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	wking_loc, %rax
	movl	Xfile(,%rax,4), %eax
	movw	$30800, BasicBlockSignatureTracker # imm = 0x7850
	movw	$20, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB58_503
# %bb.469:                              # %Buffer__23
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30998, %ax            # imm = 0x86EA
	cmpw	$-326, %ax              # imm = 0xFEBA
	jne	.LBB58_947
# %bb.470:                              # %std_eval.split2351
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-326, BasicBlockSignatureTracker # imm = 0xFEBA
	movw	$-30998, RunTimeSignatureAdjuster # imm = 0x86EA
# %bb.471:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$30804, %ax             # imm = 0x7854
	jne	.LBB58_947
# %bb.472:                              # %std_eval.split2789
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$30804, BasicBlockSignatureTracker # imm = 0x7854
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB58_479
# %bb.473:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$30805, %ax             # imm = 0x7855
	jne	.LBB58_947
# %bb.474:                              # %std_eval.split2353
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$30805, BasicBlockSignatureTracker # imm = 0x7855
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_479
# %bb.475:                              # %Buffer__24
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-11968, %ax            # imm = 0xD140
	cmpw	$-22251, %ax            # imm = 0xA915
	jne	.LBB58_947
# %bb.476:                              # %std_eval.split2357
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-22251, BasicBlockSignatureTracker # imm = 0xA915
	movw	$-11968, RunTimeSignatureAdjuster # imm = 0xD140
# %bb.477:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$30807, %ax             # imm = 0x7857
	jne	.LBB58_947
# %bb.478:                              # %std_eval.split2791
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	subl	(%rcx), %eax
	subl	$1, %eax
	imull	$9, %eax, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movw	$30807, BasicBlockSignatureTracker # imm = 0x7857
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_481
.LBB58_479:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$30830, %ax             # imm = 0x786E
	jne	.LBB58_947
# %bb.480:                              # %std_eval.split2355
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$22, %eax
	movl	%eax, (%rcx)
	movw	$30830, BasicBlockSignatureTracker # imm = 0x786E
	movw	$57, RunTimeSignatureAdjuster
.LBB58_481:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$39, %ax
	xorw	%cx, %ax
	cmpw	$30832, %ax             # imm = 0x7870
	jne	.LBB58_947
# %bb.482:                              # %std_eval.split2359
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$30832, BasicBlockSignatureTracker # imm = 0x7870
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB58_489
# %bb.483:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$226, %ax
	cmpw	$30866, %ax             # imm = 0x7892
	jne	.LBB58_947
# %bb.484:                              # %std_eval.split2361
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$30866, BasicBlockSignatureTracker # imm = 0x7892
	movw	$226, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_489
# %bb.485:                              # %Buffer__25
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27240, %ax             # imm = 0x6A68
	cmpw	$4858, %ax              # imm = 0x12FA
	jne	.LBB58_947
# %bb.486:                              # %std_eval.split2365
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$4858, BasicBlockSignatureTracker # imm = 0x12FA
	movw	$27240, RunTimeSignatureAdjuster # imm = 0x6A68
# %bb.487:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$30869, %ax             # imm = 0x7895
	jne	.LBB58_947
# %bb.488:                              # %std_eval.split2793
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	subl	(%rcx), %eax
	subl	$1, %eax
	shll	$3, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movw	$30869, BasicBlockSignatureTracker # imm = 0x7895
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_491
.LBB58_489:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$210, %ax
	xorw	%cx, %ax
	cmpw	$30882, %ax             # imm = 0x78A2
	jne	.LBB58_947
# %bb.490:                              # %std_eval.split2363
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$16, %eax
	movl	%eax, (%rcx)
	movw	$30882, BasicBlockSignatureTracker # imm = 0x78A2
	movw	$55, RunTimeSignatureAdjuster
.LBB58_491:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$30884, %ax             # imm = 0x78A4
	jne	.LBB58_947
# %bb.492:                              # %std_eval.split2367
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$30884, BasicBlockSignatureTracker # imm = 0x78A4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB58_499
# %bb.493:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$30896, %ax             # imm = 0x78B0
	jne	.LBB58_947
# %bb.494:                              # %std_eval.split2369
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$30896, BasicBlockSignatureTracker # imm = 0x78B0
	movw	$20, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_499
# %bb.495:                              # %Buffer__26
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-26673, %ax            # imm = 0x97CF
	cmpw	$-4225, %ax             # imm = 0xEF7F
	jne	.LBB58_947
# %bb.496:                              # %std_eval.split2373
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-4225, BasicBlockSignatureTracker # imm = 0xEF7F
	movw	$-26673, RunTimeSignatureAdjuster # imm = 0x97CF
# %bb.497:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$30901, %ax             # imm = 0x78B5
	jne	.LBB58_947
# %bb.498:                              # %std_eval.split2795
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	subl	(%rcx), %eax
	subl	$1, %eax
	shll	$3, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movw	$30901, BasicBlockSignatureTracker # imm = 0x78B5
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_501
.LBB58_499:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$30907, %ax             # imm = 0x78BB
	jne	.LBB58_947
# %bb.500:                              # %std_eval.split2371
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$16, %eax
	movl	%eax, (%rcx)
	movw	$30907, BasicBlockSignatureTracker # imm = 0x78BB
	movw	$14, RunTimeSignatureAdjuster
.LBB58_501:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$30910, %ax             # imm = 0x78BE
	jne	.LBB58_947
# %bb.502:                              # %std_eval.split2375
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30910, BasicBlockSignatureTracker # imm = 0x78BE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_505
.LBB58_503:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$135, %ax
	xorw	%cx, %ax
	cmpw	$30915, %ax             # imm = 0x78C3
	jne	.LBB58_947
# %bb.504:                              # %std_eval.split2349
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$10, %eax
	movl	%eax, (%rcx)
	movw	$30915, BasicBlockSignatureTracker # imm = 0x78C3
	movw	$125, RunTimeSignatureAdjuster
.LBB58_505:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$64, %ax
	xorw	%cx, %ax
	cmpw	$30974, %ax             # imm = 0x78FE
	jne	.LBB58_947
# %bb.506:                              # %std_eval.split2377
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$30974, BasicBlockSignatureTracker # imm = 0x78FE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_509
.LBB58_507:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3776, %ax              # imm = 0xEC0
	cmpw	$31021, %ax             # imm = 0x792D
	jne	.LBB58_947
# %bb.508:                              # %std_eval.split2325
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	send_king(,%rax,4), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$31021, BasicBlockSignatureTracker # imm = 0x792D
	movw	$467, RunTimeSignatureAdjuster # imm = 0x1D3
.LBB58_509:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$465, %ax               # imm = 0x1D1
	xorw	%cx, %ax
	cmpw	$31023, %ax             # imm = 0x792F
	jne	.LBB58_947
# %bb.510:                              # %std_eval.split2379
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$31023, BasicBlockSignatureTracker # imm = 0x792F
	movw	$2094, RunTimeSignatureAdjuster # imm = 0x82E
	jmp	.LBB58_579
.LBB58_511:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2113, %ax              # imm = 0x841
	cmpw	$31040, %ax             # imm = 0x7940
	jne	.LBB58_947
# %bb.512:                              # %std_eval.split2045
                                        #   in Loop: Header=BB58_96 Depth=1
	movl	bmat, %eax
	movw	$31040, BasicBlockSignatureTracker # imm = 0x7940
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1300, %eax             # imm = 0x514
	jle	.LBB58_575
# %bb.513:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$31044, %ax             # imm = 0x7944
	jne	.LBB58_947
# %bb.514:                              # %std_eval.split2381
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	sblack_king(,%rax,4), %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movl	black_castled, %eax
	movw	$31044, BasicBlockSignatureTracker # imm = 0x7944
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB58_517
# %bb.515:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$31048, %ax             # imm = 0x7948
	jne	.LBB58_947
# %bb.516:                              # %std_eval.split2385
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$15, %eax
	movl	%eax, (%rcx)
	movw	$31048, BasicBlockSignatureTracker # imm = 0x7948
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_533
.LBB58_517:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$31051, %ax             # imm = 0x794B
	jne	.LBB58_947
# %bb.518:                              # %std_eval.split2387
                                        #   in Loop: Header=BB58_96 Depth=1
	movl	black_castled, %eax
	movw	$31051, BasicBlockSignatureTracker # imm = 0x794B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB58_521
# %bb.519:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$31063, %ax             # imm = 0x7957
	jne	.LBB58_947
# %bb.520:                              # %std_eval.split2391
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	subl	$25, %eax
	movl	%eax, (%rcx)
	movw	$31063, BasicBlockSignatureTracker # imm = 0x7957
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_531
.LBB58_521:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$39, %ax
	cmpw	$31084, %ax             # imm = 0x796C
	jne	.LBB58_947
# %bb.522:                              # %std_eval.split2393
                                        #   in Loop: Header=BB58_96 Depth=1
	movl	moved+456, %eax
	movw	$31084, BasicBlockSignatureTracker # imm = 0x796C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_529
# %bb.523:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$31086, %ax             # imm = 0x796E
	jne	.LBB58_947
# %bb.524:                              # %std_eval.split2397
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$10, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$31086, BasicBlockSignatureTracker # imm = 0x796E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_527
# %bb.525:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$31092, %ax             # imm = 0x7974
	jne	.LBB58_947
# %bb.526:                              # %std_eval.split2403
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$15, %eax
	movl	%eax, (%rcx)
	movw	$31092, BasicBlockSignatureTracker # imm = 0x7974
	movw	$26, RunTimeSignatureAdjuster
.LBB58_527:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$31094, %ax             # imm = 0x7976
	jne	.LBB58_947
# %bb.528:                              # %std_eval.split2401
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$31094, BasicBlockSignatureTracker # imm = 0x7976
	movw	$26, RunTimeSignatureAdjuster
.LBB58_529:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$31100, %ax             # imm = 0x797C
	jne	.LBB58_947
# %bb.530:                              # %std_eval.split2399
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$31100, BasicBlockSignatureTracker # imm = 0x797C
	movw	$43, RunTimeSignatureAdjuster
.LBB58_531:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$205, %ax
	xorw	%cx, %ax
	cmpw	$31130, %ax             # imm = 0x799A
	jne	.LBB58_947
# %bb.532:                              # %std_eval.split2395
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$31130, BasicBlockSignatureTracker # imm = 0x799A
	movw	$210, RunTimeSignatureAdjuster
.LBB58_533:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$211, %ax
	xorw	%cx, %ax
	cmpw	$31131, %ax             # imm = 0x799B
	jne	.LBB58_947
# %bb.534:                              # %std_eval.split2389
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	bking_loc, %rax
	movl	Xfile(,%rax,4), %eax
	movw	$31131, BasicBlockSignatureTracker # imm = 0x799B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB58_571
# %bb.535:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$31138, %ax             # imm = 0x79A2
	jne	.LBB58_947
# %bb.536:                              # %std_eval.split2405
                                        #   in Loop: Header=BB58_96 Depth=1
	movslq	bking_loc, %rax
	movl	Xfile(,%rax,4), %eax
	movw	$31138, BasicBlockSignatureTracker # imm = 0x79A2
	movw	$57, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB58_571
# %bb.537:                              # %Buffer__27
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3204, %ax             # imm = 0xF37C
	cmpw	$-29986, %ax            # imm = 0x8ADE
	jne	.LBB58_947
# %bb.538:                              # %std_eval.split2409
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-29986, BasicBlockSignatureTracker # imm = 0x8ADE
	movw	$-3204, RunTimeSignatureAdjuster # imm = 0xF37C
# %bb.539:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$31143, %ax             # imm = 0x79A7
	jne	.LBB58_947
# %bb.540:                              # %std_eval.split2797
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$31143, BasicBlockSignatureTracker # imm = 0x79A7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_547
# %bb.541:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$31145, %ax             # imm = 0x79A9
	jne	.LBB58_947
# %bb.542:                              # %std_eval.split2411
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$31145, BasicBlockSignatureTracker # imm = 0x79A9
	movw	$14, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_547
# %bb.543:                              # %Buffer__28
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13817, %ax             # imm = 0x35F9
	cmpw	$19536, %ax             # imm = 0x4C50
	jne	.LBB58_947
# %bb.544:                              # %std_eval.split2415
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$19536, BasicBlockSignatureTracker # imm = 0x4C50
	movw	$13817, RunTimeSignatureAdjuster # imm = 0x35F9
# %bb.545:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$31162, %ax             # imm = 0x79BA
	jne	.LBB58_947
# %bb.546:                              # %std_eval.split2799
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	subl	(%rdx,%rcx,4), %eax
	subl	$1, %eax
	cltq
	imull	$9, srev_rank(,%rax,4), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$31162, BasicBlockSignatureTracker # imm = 0x79BA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_549
.LBB58_547:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$31180, %ax             # imm = 0x79CC
	jne	.LBB58_947
# %bb.548:                              # %std_eval.split2413
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$22, %eax
	movl	%eax, (%rcx)
	movw	$31180, BasicBlockSignatureTracker # imm = 0x79CC
	movw	$118, RunTimeSignatureAdjuster
.LBB58_549:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$98, %ax
	xorw	%cx, %ax
	cmpw	$31192, %ax             # imm = 0x79D8
	jne	.LBB58_947
# %bb.550:                              # %std_eval.split2417
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$31192, BasicBlockSignatureTracker # imm = 0x79D8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_557
# %bb.551:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$31194, %ax             # imm = 0x79DA
	jne	.LBB58_947
# %bb.552:                              # %std_eval.split2419
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$31194, BasicBlockSignatureTracker # imm = 0x79DA
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_557
# %bb.553:                              # %Buffer__29
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-7811, %ax             # imm = 0xE17D
	cmpw	$-26457, %ax            # imm = 0x98A7
	jne	.LBB58_947
# %bb.554:                              # %std_eval.split2423
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-26457, BasicBlockSignatureTracker # imm = 0x98A7
	movw	$-7811, RunTimeSignatureAdjuster # imm = 0xE17D
# %bb.555:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$31207, %ax             # imm = 0x79E7
	jne	.LBB58_947
# %bb.556:                              # %std_eval.split2801
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	subl	(%rdx,%rcx,4), %eax
	subl	$1, %eax
	cltq
	movl	srev_rank(,%rax,4), %eax
	shll	$3, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$31207, BasicBlockSignatureTracker # imm = 0x79E7
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_559
.LBB58_557:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$52, %ax
	xorw	%cx, %ax
	cmpw	$31212, %ax             # imm = 0x79EC
	jne	.LBB58_947
# %bb.558:                              # %std_eval.split2421
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$16, %eax
	movl	%eax, (%rcx)
	movw	$31212, BasicBlockSignatureTracker # imm = 0x79EC
	movw	$11, RunTimeSignatureAdjuster
.LBB58_559:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1013, %ax              # imm = 0x3F5
	xorw	%cx, %ax
	cmpw	$31250, %ax             # imm = 0x7A12
	jne	.LBB58_947
# %bb.560:                              # %std_eval.split2425
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$31250, BasicBlockSignatureTracker # imm = 0x7A12
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_567
# %bb.561:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$31251, %ax             # imm = 0x7A13
	jne	.LBB58_947
# %bb.562:                              # %std_eval.split2427
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$31251, BasicBlockSignatureTracker # imm = 0x7A13
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_567
# %bb.563:                              # %Buffer__30
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-10509, %ax            # imm = 0xD6F3
	cmpw	$-21280, %ax            # imm = 0xACE0
	jne	.LBB58_947
# %bb.564:                              # %std_eval.split2431
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$-21280, BasicBlockSignatureTracker # imm = 0xACE0
	movw	$-10509, RunTimeSignatureAdjuster # imm = 0xD6F3
# %bb.565:                              #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$31252, %ax             # imm = 0x7A14
	jne	.LBB58_947
# %bb.566:                              # %std_eval.split2803
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	subl	(%rdx,%rcx,4), %eax
	subl	$1, %eax
	cltq
	movl	srev_rank(,%rax,4), %eax
	shll	$3, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$31252, BasicBlockSignatureTracker # imm = 0x7A14
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_569
.LBB58_567:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$31294, %ax             # imm = 0x7A3E
	jne	.LBB58_947
# %bb.568:                              # %std_eval.split2429
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$16, %eax
	movl	%eax, (%rcx)
	movw	$31294, BasicBlockSignatureTracker # imm = 0x7A3E
	movw	$42, RunTimeSignatureAdjuster
.LBB58_569:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$67, %ax
	xorw	%cx, %ax
	cmpw	$31319, %ax             # imm = 0x7A57
	jne	.LBB58_947
# %bb.570:                              # %std_eval.split2433
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$31319, BasicBlockSignatureTracker # imm = 0x7A57
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_573
.LBB58_571:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$965, %ax               # imm = 0x3C5
	xorw	%cx, %ax
	cmpw	$31326, %ax             # imm = 0x7A5E
	jne	.LBB58_947
# %bb.572:                              # %std_eval.split2407
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$10, %eax
	movl	%eax, (%rcx)
	movw	$31326, BasicBlockSignatureTracker # imm = 0x7A5E
	movw	$9, RunTimeSignatureAdjuster
.LBB58_573:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$47, %ax
	xorw	%cx, %ax
	cmpw	$31352, %ax             # imm = 0x7A78
	jne	.LBB58_947
# %bb.574:                              # %std_eval.split2435
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$31352, BasicBlockSignatureTracker # imm = 0x7A78
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_577
.LBB58_575:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$976, %ax               # imm = 0x3D0
	cmpw	$31376, %ax             # imm = 0x7A90
	jne	.LBB58_947
# %bb.576:                              # %std_eval.split2383
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	send_king(,%rax,4), %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movw	$31376, BasicBlockSignatureTracker # imm = 0x7A90
	movw	$232, RunTimeSignatureAdjuster
.LBB58_577:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$224, %ax
	xorw	%cx, %ax
	cmpw	$31384, %ax             # imm = 0x7A98
	jne	.LBB58_947
# %bb.578:                              # %std_eval.split2437
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$31384, BasicBlockSignatureTracker # imm = 0x7A98
	movw	$2969, RunTimeSignatureAdjuster # imm = 0xB99
.LBB58_579:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2977, %ax              # imm = 0xBA1
	xorw	%cx, %ax
	cmpw	$31392, %ax             # imm = 0x7AA0
	jne	.LBB58_947
# %bb.580:                              # %std_eval.split2021
                                        #   in Loop: Header=BB58_96 Depth=1
	movw	$31392, BasicBlockSignatureTracker # imm = 0x7AA0
	movw	$2624, RunTimeSignatureAdjuster # imm = 0xA40
.LBB58_581:                             #   in Loop: Header=BB58_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2630, %ax              # imm = 0xA46
	xorw	%cx, %ax
	cmpw	$31398, %ax             # imm = 0x7AA6
	jne	.LBB58_947
# %bb.582:                              # %std_eval.split2017
                                        #   in Loop: Header=BB58_96 Depth=1
	movq	-200(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$31398, BasicBlockSignatureTracker # imm = 0x7AA6
	movw	$2591, RunTimeSignatureAdjuster # imm = 0xA1F
	jmp	.LBB58_96
.LBB58_583:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2571, %ax              # imm = 0xA0B
	cmpw	$31408, %ax             # imm = 0x7AB0
	jne	.LBB58_950
# %bb.584:                              # %std_eval.split2011
	movl	wmat, %eax
	movw	$31408, BasicBlockSignatureTracker # imm = 0x7AB0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2200, %eax             # imm = 0x898
	jg	.LBB58_587
# %bb.585:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$86, %ax
	cmpw	$31462, %ax             # imm = 0x7AE6
	jne	.LBB58_950
# %bb.586:                              # %std_eval.split2441
	movl	bmat, %eax
	movw	$31462, BasicBlockSignatureTracker # imm = 0x7AE6
	movw	$86, RunTimeSignatureAdjuster
	cmpl	$2200, %eax             # imm = 0x898
	jle	.LBB58_621
.LBB58_587:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$78, %ax
	xorw	%cx, %ax
	cmpw	$31486, %ax             # imm = 0x7AFE
	jne	.LBB58_950
# %bb.588:                              # %std_eval.split2439
	movl	moved+164, %eax
	movw	$31486, BasicBlockSignatureTracker # imm = 0x7AFE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_595
# %bb.589:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$490, %ax               # imm = 0x1EA
	cmpw	$31508, %ax             # imm = 0x7B14
	jne	.LBB58_950
# %bb.590:                              # %std_eval.split2447
	movl	board+212, %eax
	movw	$31508, BasicBlockSignatureTracker # imm = 0x7B14
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	cmpl	$13, %eax
	je	.LBB58_595
# %bb.591:                              # %Buffer__32
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32309, %ax             # imm = 0x7E35
	cmpw	$1313, %ax              # imm = 0x521
	jne	.LBB58_950
# %bb.592:                              # %std_eval.split2449
	movw	$1313, BasicBlockSignatureTracker # imm = 0x521
	movw	$32309, RunTimeSignatureAdjuster # imm = 0x7E35
# %bb.593:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$31511, %ax             # imm = 0x7B17
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.594:                              # %std_eval.split2805
	movl	(%rcx), %eax
	subl	$5, %eax
	movl	%eax, (%rcx)
	movw	$31511, BasicBlockSignatureTracker # imm = 0x7B17
	movw	$489, RunTimeSignatureAdjuster # imm = 0x1E9
.LBB58_595:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$478, %ax               # imm = 0x1DE
	xorw	%cx, %ax
	cmpw	$31520, %ax             # imm = 0x7B20
	jne	.LBB58_950
# %bb.596:                              # %std_eval.split2445
	movl	moved+168, %eax
	movw	$31520, BasicBlockSignatureTracker # imm = 0x7B20
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_603
# %bb.597:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$31530, %ax             # imm = 0x7B2A
	jne	.LBB58_950
# %bb.598:                              # %std_eval.split2453
	movl	board+216, %eax
	movw	$31530, BasicBlockSignatureTracker # imm = 0x7B2A
	movw	$10, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB58_603
# %bb.599:                              # %Buffer__33
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20829, %ax            # imm = 0xAEA3
	cmpw	$-10871, %ax            # imm = 0xD589
	jne	.LBB58_950
# %bb.600:                              # %std_eval.split2455
	movw	$-10871, BasicBlockSignatureTracker # imm = 0xD589
	movw	$-20829, RunTimeSignatureAdjuster # imm = 0xAEA3
# %bb.601:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$31531, %ax             # imm = 0x7B2B
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.602:                              # %std_eval.split2807
	movl	(%rcx), %eax
	subl	$5, %eax
	movl	%eax, (%rcx)
	movw	$31531, BasicBlockSignatureTracker # imm = 0x7B2B
	movw	$11, RunTimeSignatureAdjuster
.LBB58_603:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$31537, %ax             # imm = 0x7B31
	jne	.LBB58_950
# %bb.604:                              # %std_eval.split2451
	movl	moved+404, %eax
	movw	$31537, BasicBlockSignatureTracker # imm = 0x7B31
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_611
# %bb.605:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$31567, %ax             # imm = 0x7B4F
	jne	.LBB58_950
# %bb.606:                              # %std_eval.split2459
	movl	board+356, %eax
	movw	$31567, BasicBlockSignatureTracker # imm = 0x7B4F
	movw	$126, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB58_611
# %bb.607:                              # %Buffer__34
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-17907, %ax            # imm = 0xBA0D
	cmpw	$-16062, %ax            # imm = 0xC142
	jne	.LBB58_950
# %bb.608:                              # %std_eval.split2461
	movw	$-16062, BasicBlockSignatureTracker # imm = 0xC142
	movw	$-17907, RunTimeSignatureAdjuster # imm = 0xBA0D
# %bb.609:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$31575, %ax             # imm = 0x7B57
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.610:                              # %std_eval.split2809
	movl	(%rcx), %eax
	addl	$5, %eax
	movl	%eax, (%rcx)
	movw	$31575, BasicBlockSignatureTracker # imm = 0x7B57
	movw	$102, RunTimeSignatureAdjuster
.LBB58_611:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$81, %ax
	xorw	%cx, %ax
	cmpw	$31584, %ax             # imm = 0x7B60
	jne	.LBB58_950
# %bb.612:                              # %std_eval.split2457
	movl	moved+408, %eax
	movw	$31584, BasicBlockSignatureTracker # imm = 0x7B60
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_619
# %bb.613:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$31591, %ax             # imm = 0x7B67
	jne	.LBB58_950
# %bb.614:                              # %std_eval.split2465
	movl	board+360, %eax
	movw	$31591, BasicBlockSignatureTracker # imm = 0x7B67
	movw	$7, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB58_619
# %bb.615:                              # %Buffer__35
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-11300, %ax            # imm = 0xD3DC
	cmpw	$-22341, %ax            # imm = 0xA8BB
	jne	.LBB58_950
# %bb.616:                              # %std_eval.split2467
	movw	$-22341, BasicBlockSignatureTracker # imm = 0xA8BB
	movw	$-11300, RunTimeSignatureAdjuster # imm = 0xD3DC
# %bb.617:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$31594, %ax             # imm = 0x7B6A
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.618:                              # %std_eval.split2811
	movl	(%rcx), %eax
	addl	$5, %eax
	movl	%eax, (%rcx)
	movw	$31594, BasicBlockSignatureTracker # imm = 0x7B6A
	movw	$10, RunTimeSignatureAdjuster
.LBB58_619:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$31600, %ax             # imm = 0x7B70
	jne	.LBB58_950
# %bb.620:                              # %std_eval.split2463
	movw	$31600, BasicBlockSignatureTracker # imm = 0x7B70
	movw	$406, RunTimeSignatureAdjuster # imm = 0x196
	jmp	.LBB58_623
.LBB58_621:                             # %Buffer__31
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21904, %ax             # imm = 0x5590
	cmpw	$12150, %ax             # imm = 0x2F76
	jne	.LBB58_950
# %bb.622:                              # %std_eval.split2443
	movw	$12150, BasicBlockSignatureTracker # imm = 0x2F76
	movw	$21904, RunTimeSignatureAdjuster # imm = 0x5590
.LBB58_623:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$405, %ax               # imm = 0x195
	xorw	%cx, %ax
	cmpw	$31603, %ax             # imm = 0x7B73
	jne	.LBB58_950
# %bb.624:                              # %std_eval.split2469
	movl	wmat, %eax
	movw	$31603, BasicBlockSignatureTracker # imm = 0x7B73
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1300, %eax             # imm = 0x514
	jg	.LBB58_627
# %bb.625:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$31612, %ax             # imm = 0x7B7C
	jne	.LBB58_950
# %bb.626:                              # %std_eval.split2473
	movl	bmat, %eax
	movw	$31612, BasicBlockSignatureTracker # imm = 0x7B7C
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$1300, %eax             # imm = 0x514
	jle	.LBB58_657
.LBB58_627:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$249, %ax
	xorw	%cx, %ax
	cmpw	$31626, %ax             # imm = 0x7B8A
	jne	.LBB58_950
# %bb.628:                              # %std_eval.split2471
	movslq	wking_loc, %rax
	movl	Xfile(,%rax,4), %eax
	addl	$1, %eax
	movq	-224(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movslq	bking_loc, %rax
	movl	Xfile(,%rax,4), %eax
	addl	$1, %eax
	movq	-216(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rdx), %edi
	subl	(%rcx), %edi
	callq	abs
	movw	$31626, BasicBlockSignatureTracker # imm = 0x7B8A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jle	.LBB58_655
# %bb.629:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$31634, %ax             # imm = 0x7B92
	jne	.LBB58_950
# %bb.630:                              # %std_eval.split2477
	movq	-224(%rbp), %rsi        # 8-byte Reload
	movslq	(%rsi), %rax
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx,%rax,4), %rax
	movl	srev_rank(,%rax,4), %eax
	subl	$2, %eax
	imull	$3, %eax, %eax
	movq	-184(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	(%rsi), %eax
	addl	$1, %eax
	cltq
	movslq	(%rdx,%rax,4), %rax
	movl	srev_rank(,%rax,4), %eax
	subl	$2, %eax
	imull	$3, %eax, %eax
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	(%rsi), %eax
	subl	$1, %eax
	cltq
	movslq	(%rdx,%rax,4), %rax
	movl	srev_rank(,%rax,4), %eax
	subl	$2, %eax
	imull	$3, %eax, %eax
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movq	-216(%rbp), %rdx        # 8-byte Reload
	movslq	(%rdx), %rax
	movq	-96(%rbp), %rdi         # 8-byte Reload
	movl	(%rdi,%rax,4), %eax
	subl	$2, %eax
	imull	$3, %eax, %eax
	movq	-192(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	(%rdx), %eax
	addl	$1, %eax
	cltq
	movl	(%rdi,%rax,4), %eax
	subl	$2, %eax
	imull	$3, %eax, %eax
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movl	(%rdx), %eax
	subl	$1, %eax
	cltq
	movl	(%rdi,%rax,4), %eax
	subl	$2, %eax
	imull	$3, %eax, %eax
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movslq	(%rsi), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$31634, BasicBlockSignatureTracker # imm = 0x7B92
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_633
# %bb.631:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$31635, %ax             # imm = 0x7B93
	jne	.LBB58_950
# %bb.632:                              # %std_eval.split2483
	movq	-184(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$8, %eax
	movl	%eax, (%rcx)
	movw	$31635, BasicBlockSignatureTracker # imm = 0x7B93
	movw	$1, RunTimeSignatureAdjuster
.LBB58_633:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$31657, %ax             # imm = 0x7BA9
	jne	.LBB58_950
# %bb.634:                              # %std_eval.split2481
	movq	-224(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$31657, BasicBlockSignatureTracker # imm = 0x7BA9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_637
# %bb.635:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$74, %ax
	cmpw	$31715, %ax             # imm = 0x7BE3
	jne	.LBB58_950
# %bb.636:                              # %std_eval.split2487
	movq	-184(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$6, %eax
	movl	%eax, (%rcx)
	movw	$31715, BasicBlockSignatureTracker # imm = 0x7BE3
	movw	$74, RunTimeSignatureAdjuster
.LBB58_637:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$67, %ax
	xorw	%cx, %ax
	cmpw	$31722, %ax             # imm = 0x7BEA
	jne	.LBB58_950
# %bb.638:                              # %std_eval.split2485
	movq	-224(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$31722, BasicBlockSignatureTracker # imm = 0x7BEA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_641
# %bb.639:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$31729, %ax             # imm = 0x7BF1
	jne	.LBB58_950
# %bb.640:                              # %std_eval.split2491
	movq	-184(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$6, %eax
	movl	%eax, (%rcx)
	movw	$31729, BasicBlockSignatureTracker # imm = 0x7BF1
	movw	$27, RunTimeSignatureAdjuster
.LBB58_641:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2024, %ax              # imm = 0x7E8
	xorw	%cx, %ax
	cmpw	$31746, %ax             # imm = 0x7C02
	jne	.LBB58_950
# %bb.642:                              # %std_eval.split2489
	movq	-216(%rbp), %rax        # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$31746, BasicBlockSignatureTracker # imm = 0x7C02
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_645
# %bb.643:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$31747, %ax             # imm = 0x7C03
	jne	.LBB58_950
# %bb.644:                              # %std_eval.split2495
	movq	-192(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$8, %eax
	movl	%eax, (%rcx)
	movw	$31747, BasicBlockSignatureTracker # imm = 0x7C03
	movw	$1, RunTimeSignatureAdjuster
.LBB58_645:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$31790, %ax             # imm = 0x7C2E
	jne	.LBB58_950
# %bb.646:                              # %std_eval.split2493
	movq	-216(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$31790, BasicBlockSignatureTracker # imm = 0x7C2E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_649
# %bb.647:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$31792, %ax             # imm = 0x7C30
	jne	.LBB58_950
# %bb.648:                              # %std_eval.split2499
	movq	-192(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$6, %eax
	movl	%eax, (%rcx)
	movw	$31792, BasicBlockSignatureTracker # imm = 0x7C30
	movw	$30, RunTimeSignatureAdjuster
.LBB58_649:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$31805, %ax             # imm = 0x7C3D
	jne	.LBB58_950
# %bb.650:                              # %std_eval.split2497
	movq	-216(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$31805, BasicBlockSignatureTracker # imm = 0x7C3D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_653
# %bb.651:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$31823, %ax             # imm = 0x7C4F
	jne	.LBB58_950
# %bb.652:                              # %std_eval.split2503
	movq	-192(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$6, %eax
	movl	%eax, (%rcx)
	movw	$31823, BasicBlockSignatureTracker # imm = 0x7C4F
	movw	$114, RunTimeSignatureAdjuster
.LBB58_653:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$101, %ax
	xorw	%cx, %ax
	cmpw	$31832, %ax             # imm = 0x7C58
	jne	.LBB58_950
# %bb.654:                              # %std_eval.split2501
	movw	$31832, BasicBlockSignatureTracker # imm = 0x7C58
	movw	$2002, RunTimeSignatureAdjuster # imm = 0x7D2
.LBB58_655:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2005, %ax              # imm = 0x7D5
	xorw	%cx, %ax
	cmpw	$31839, %ax             # imm = 0x7C5F
	jne	.LBB58_950
# %bb.656:                              # %std_eval.split2479
	movw	$31839, BasicBlockSignatureTracker # imm = 0x7C5F
	movw	$1827, RunTimeSignatureAdjuster # imm = 0x723
	jmp	.LBB58_659
.LBB58_657:                             # %Buffer__36
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25610, %ax            # imm = 0x9BF6
	cmpw	$-8054, %ax             # imm = 0xE08A
	jne	.LBB58_950
# %bb.658:                              # %std_eval.split2475
	movw	$-8054, BasicBlockSignatureTracker # imm = 0xE08A
	movw	$-25610, RunTimeSignatureAdjuster # imm = 0x9BF6
.LBB58_659:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1813, %ax              # imm = 0x715
	xorw	%cx, %ax
	cmpw	$31849, %ax             # imm = 0x7C69
	jne	.LBB58_950
# %bb.660:                              # %std_eval.split2505
	movl	bmat, %eax
	movw	$31849, BasicBlockSignatureTracker # imm = 0x7C69
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1300, %eax             # imm = 0x514
	jle	.LBB58_667
# %bb.661:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$31853, %ax             # imm = 0x7C6D
	jne	.LBB58_950
# %bb.662:                              # %std_eval.split2507
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$31853, BasicBlockSignatureTracker # imm = 0x7C6D
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_667
# %bb.663:                              # %Buffer__37
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-16687, %ax            # imm = 0xBED1
	cmpw	$-15684, %ax            # imm = 0xC2BC
	jne	.LBB58_950
# %bb.664:                              # %std_eval.split2511
	movw	$-15684, BasicBlockSignatureTracker # imm = 0xC2BC
	movw	$-16687, RunTimeSignatureAdjuster # imm = 0xBED1
# %bb.665:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$31866, %ax             # imm = 0x7C7A
	movq	-48(%rbp), %rdx         # 8-byte Reload
	jne	.LBB58_950
# %bb.666:                              # %std_eval.split2813
	movq	-184(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	(%rdx), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%rdx)
	movw	$31866, BasicBlockSignatureTracker # imm = 0x7C7A
	movw	$19, RunTimeSignatureAdjuster
.LBB58_667:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$231, %ax
	xorw	%cx, %ax
	cmpw	$31886, %ax             # imm = 0x7C8E
	jne	.LBB58_950
# %bb.668:                              # %std_eval.split2509
	movl	wmat, %eax
	movw	$31886, BasicBlockSignatureTracker # imm = 0x7C8E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1300, %eax             # imm = 0x514
	jle	.LBB58_675
# %bb.669:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$31888, %ax             # imm = 0x7C90
	jne	.LBB58_950
# %bb.670:                              # %std_eval.split2513
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$31888, BasicBlockSignatureTracker # imm = 0x7C90
	movw	$30, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_675
# %bb.671:                              # %Buffer__38
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12959, %ax             # imm = 0x329F
	cmpw	$19983, %ax             # imm = 0x4E0F
	jne	.LBB58_950
# %bb.672:                              # %std_eval.split2517
	movw	$19983, BasicBlockSignatureTracker # imm = 0x4E0F
	movw	$12959, RunTimeSignatureAdjuster # imm = 0x329F
# %bb.673:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$31897, %ax             # imm = 0x7C99
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.674:                              # %std_eval.split2815
	movq	-192(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$31897, BasicBlockSignatureTracker # imm = 0x7C99
	movw	$23, RunTimeSignatureAdjuster
.LBB58_675:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$37, %ax
	xorw	%cx, %ax
	cmpw	$31915, %ax             # imm = 0x7CAB
	jne	.LBB58_950
# %bb.676:                              # %std_eval.split2515
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$31915, BasicBlockSignatureTracker # imm = 0x7CAB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_691
# %bb.677:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$31920, %ax             # imm = 0x7CB0
	jne	.LBB58_950
# %bb.678:                              # %std_eval.split2521
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$31920, BasicBlockSignatureTracker # imm = 0x7CB0
	movw	$27, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_691
# %bb.679:                              # %Buffer__39
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1621, %ax             # imm = 0xF9AB
	cmpw	$-31461, %ax            # imm = 0x851B
	jne	.LBB58_950
# %bb.680:                              # %std_eval.split2523
	movw	$-31461, BasicBlockSignatureTracker # imm = 0x851B
	movw	$-1621, RunTimeSignatureAdjuster # imm = 0xF9AB
# %bb.681:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$31932, %ax             # imm = 0x7CBC
	jne	.LBB58_950
# %bb.682:                              # %std_eval.split2817
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$31932, BasicBlockSignatureTracker # imm = 0x7CBC
	movw	$23, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_691
# %bb.683:                              # %Buffer__40
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24038, %ax             # imm = 0x5DE6
	cmpw	$8538, %ax              # imm = 0x215A
	jne	.LBB58_950
# %bb.684:                              # %std_eval.split2525
	movw	$8538, BasicBlockSignatureTracker # imm = 0x215A
	movw	$24038, RunTimeSignatureAdjuster # imm = 0x5DE6
# %bb.685:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$113, %ax
	xorw	%cx, %ax
	cmpw	$31949, %ax             # imm = 0x7CCD
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.686:                              # %std_eval.split2819
	movl	(%rax), %eax
	movw	$31949, BasicBlockSignatureTracker # imm = 0x7CCD
	movw	$102, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_691
# %bb.687:                              # %Buffer__41
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19687, %ax             # imm = 0x4CE7
	cmpw	$12330, %ax             # imm = 0x302A
	jne	.LBB58_950
# %bb.688:                              # %std_eval.split2527
	movw	$12330, BasicBlockSignatureTracker # imm = 0x302A
	movw	$19687, RunTimeSignatureAdjuster # imm = 0x4CE7
# %bb.689:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$31960, %ax             # imm = 0x7CD8
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.690:                              # %std_eval.split2821
	movq	-232(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$31960, BasicBlockSignatureTracker # imm = 0x7CD8
	movw	$115, RunTimeSignatureAdjuster
.LBB58_691:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$118, %ax
	xorw	%cx, %ax
	cmpw	$31965, %ax             # imm = 0x7CDD
	jne	.LBB58_950
# %bb.692:                              # %std_eval.split2519
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$31965, BasicBlockSignatureTracker # imm = 0x7CDD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_707
# %bb.693:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$31975, %ax             # imm = 0x7CE7
	jne	.LBB58_950
# %bb.694:                              # %std_eval.split2531
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$31975, BasicBlockSignatureTracker # imm = 0x7CE7
	movw	$58, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_707
# %bb.695:                              # %Buffer__42
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23757, %ax             # imm = 0x5CCD
	cmpw	$8234, %ax              # imm = 0x202A
	jne	.LBB58_950
# %bb.696:                              # %std_eval.split2533
	movw	$8234, BasicBlockSignatureTracker # imm = 0x202A
	movw	$23757, RunTimeSignatureAdjuster # imm = 0x5CCD
# %bb.697:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$31981, %ax             # imm = 0x7CED
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.698:                              # %std_eval.split2823
	movl	(%rax), %eax
	movw	$31981, BasicBlockSignatureTracker # imm = 0x7CED
	movw	$48, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_707
# %bb.699:                              # %Buffer__43
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7274, %ax              # imm = 0x1C6A
	cmpw	$24711, %ax             # imm = 0x6087
	jne	.LBB58_950
# %bb.700:                              # %std_eval.split2535
	movw	$24711, BasicBlockSignatureTracker # imm = 0x6087
	movw	$7274, RunTimeSignatureAdjuster # imm = 0x1C6A
# %bb.701:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$31983, %ax             # imm = 0x7CEF
	movq	-120(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.702:                              # %std_eval.split2825
	movl	(%rax), %eax
	movw	$31983, BasicBlockSignatureTracker # imm = 0x7CEF
	movw	$50, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_707
# %bb.703:                              # %Buffer__44
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-16857, %ax            # imm = 0xBE27
	cmpw	$-15672, %ax            # imm = 0xC2C8
	jne	.LBB58_950
# %bb.704:                              # %std_eval.split2537
	movw	$-15672, BasicBlockSignatureTracker # imm = 0xC2C8
	movw	$-16857, RunTimeSignatureAdjuster # imm = 0xBE27
# %bb.705:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$31997, %ax             # imm = 0x7CFD
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.706:                              # %std_eval.split2827
	movq	-240(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$31997, BasicBlockSignatureTracker # imm = 0x7CFD
	movw	$32, RunTimeSignatureAdjuster
.LBB58_707:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$469, %ax               # imm = 0x1D5
	xorw	%cx, %ax
	cmpw	$32008, %ax             # imm = 0x7D08
	jne	.LBB58_950
# %bb.708:                              # %std_eval.split2529
	movq	-272(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32008, BasicBlockSignatureTracker # imm = 0x7D08
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_857
# %bb.709:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$32029, %ax             # imm = 0x7D1D
	jne	.LBB58_950
# %bb.710:                              # %std_eval.split2541
	movq	-280(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32029, BasicBlockSignatureTracker # imm = 0x7D1D
	movw	$21, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_857
# %bb.711:                              # %Buffer__45
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12622, %ax            # imm = 0xCEB2
	cmpw	$-19537, %ax            # imm = 0xB3AF
	jne	.LBB58_950
# %bb.712:                              # %std_eval.split2543
	movw	$-19537, BasicBlockSignatureTracker # imm = 0xB3AF
	movw	$-12622, RunTimeSignatureAdjuster # imm = 0xCEB2
# %bb.713:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$32039, %ax             # imm = 0x7D27
	jne	.LBB58_950
# %bb.714:                              # %std_eval.split2829
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32039, BasicBlockSignatureTracker # imm = 0x7D27
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_789
# %bb.715:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$32040, %ax             # imm = 0x7D28
	jne	.LBB58_950
# %bb.716:                              # %std_eval.split2547
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32040, BasicBlockSignatureTracker # imm = 0x7D28
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_789
# %bb.717:                              # %Buffer__46
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4090, %ax              # imm = 0xFFA
	cmpw	$29394, %ax             # imm = 0x72D2
	jne	.LBB58_950
# %bb.718:                              # %std_eval.split2549
	movw	$29394, BasicBlockSignatureTracker # imm = 0x72D2
	movw	$4090, RunTimeSignatureAdjuster # imm = 0xFFA
# %bb.719:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$32045, %ax             # imm = 0x7D2D
	jne	.LBB58_950
# %bb.720:                              # %std_eval.split2831
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32045, BasicBlockSignatureTracker # imm = 0x7D2D
	movw	$10, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_789
# %bb.721:                              # %Buffer__47
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14798, %ax            # imm = 0xC632
	cmpw	$-17633, %ax            # imm = 0xBB1F
	jne	.LBB58_950
# %bb.722:                              # %std_eval.split2551
	movw	$-17633, BasicBlockSignatureTracker # imm = 0xBB1F
	movw	$-14798, RunTimeSignatureAdjuster # imm = 0xC632
# %bb.723:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$32049, %ax             # imm = 0x7D31
	jne	.LBB58_950
# %bb.724:                              # %std_eval.split2833
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32049, BasicBlockSignatureTracker # imm = 0x7D31
	movw	$22, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_789
# %bb.725:                              # %Buffer__48
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12899, %ax             # imm = 0x3263
	cmpw	$20306, %ax             # imm = 0x4F52
	jne	.LBB58_950
# %bb.726:                              # %std_eval.split2553
	movw	$20306, BasicBlockSignatureTracker # imm = 0x4F52
	movw	$12899, RunTimeSignatureAdjuster # imm = 0x3263
# %bb.727:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$32053, %ax             # imm = 0x7D35
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.728:                              # %std_eval.split2835
	movl	(%rax), %eax
	movw	$32053, BasicBlockSignatureTracker # imm = 0x7D35
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_743
# %bb.729:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$32061, %ax             # imm = 0x7D3D
	jne	.LBB58_950
# %bb.730:                              # %std_eval.split2557
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32061, BasicBlockSignatureTracker # imm = 0x7D3D
	movw	$8, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_743
# %bb.731:                              # %Buffer__49
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31687, %ax             # imm = 0x7BC7
	cmpw	$1786, %ax              # imm = 0x6FA
	jne	.LBB58_950
# %bb.732:                              # %std_eval.split2559
	movw	$1786, BasicBlockSignatureTracker # imm = 0x6FA
	movw	$31687, RunTimeSignatureAdjuster # imm = 0x7BC7
# %bb.733:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$32065, %ax             # imm = 0x7D41
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.734:                              # %std_eval.split2837
	movl	(%rax), %eax
	movw	$32065, BasicBlockSignatureTracker # imm = 0x7D41
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jge	.LBB58_741
# %bb.735:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$32068, %ax             # imm = 0x7D44
	movq	-120(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.736:                              # %std_eval.split2561
	movl	(%rax), %eax
	movw	$32068, BasicBlockSignatureTracker # imm = 0x7D44
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jge	.LBB58_741
# %bb.737:                              # %Buffer__50
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-16899, %ax            # imm = 0xBDFD
	cmpw	$-16199, %ax            # imm = 0xC0B9
	jne	.LBB58_950
# %bb.738:                              # %std_eval.split2565
	movw	$-16199, BasicBlockSignatureTracker # imm = 0xC0B9
	movw	$-16899, RunTimeSignatureAdjuster # imm = 0xBDFD
# %bb.739:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$32071, %ax             # imm = 0x7D47
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB58_950
# %bb.740:                              # %std_eval.split2839
	movl	$0, (%rax)
	movw	$32071, BasicBlockSignatureTracker # imm = 0x7D47
	movw	$6, RunTimeSignatureAdjuster
.LBB58_741:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$32074, %ax             # imm = 0x7D4A
	jne	.LBB58_950
# %bb.742:                              # %std_eval.split2563
	movw	$32074, BasicBlockSignatureTracker # imm = 0x7D4A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_787
.LBB58_743:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$92, %ax
	xorw	%cx, %ax
	cmpw	$32105, %ax             # imm = 0x7D69
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.744:                              # %std_eval.split2555
	movl	(%rax), %eax
	movw	$32105, BasicBlockSignatureTracker # imm = 0x7D69
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_755
# %bb.745:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$32112, %ax             # imm = 0x7D70
	movq	-120(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.746:                              # %std_eval.split2571
	movl	(%rax), %eax
	movw	$32112, BasicBlockSignatureTracker # imm = 0x7D70
	movw	$25, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_755
# %bb.747:                              # %Buffer__51
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-31465, %ax            # imm = 0x8517
	cmpw	$-1945, %ax             # imm = 0xF867
	jne	.LBB58_950
# %bb.748:                              # %std_eval.split2573
	movw	$-1945, BasicBlockSignatureTracker # imm = 0xF867
	movw	$-31465, RunTimeSignatureAdjuster # imm = 0x8517
# %bb.749:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$32121, %ax             # imm = 0x7D79
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.750:                              # %std_eval.split2841
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %edi
	subl	(%rax), %edi
	callq	abs
	movw	$32121, BasicBlockSignatureTracker # imm = 0x7D79
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jge	.LBB58_753
# %bb.751:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$32123, %ax             # imm = 0x7D7B
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB58_950
# %bb.752:                              # %std_eval.split2575
	movl	$0, (%rax)
	movw	$32123, BasicBlockSignatureTracker # imm = 0x7D7B
	movw	$2, RunTimeSignatureAdjuster
.LBB58_753:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$32126, %ax             # imm = 0x7D7E
	jne	.LBB58_950
# %bb.754:                              # %std_eval.split2577
	movw	$32126, BasicBlockSignatureTracker # imm = 0x7D7E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_785
.LBB58_755:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$239, %ax
	xorw	%cx, %ax
	cmpw	$32134, %ax             # imm = 0x7D86
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.756:                              # %std_eval.split2569
	movl	(%rax), %eax
	movw	$32134, BasicBlockSignatureTracker # imm = 0x7D86
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jge	.LBB58_759
# %bb.757:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$32140, %ax             # imm = 0x7D8C
	jne	.LBB58_950
# %bb.758:                              # %std_eval.split2581
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32140, BasicBlockSignatureTracker # imm = 0x7D8C
	movw	$10, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_763
.LBB58_759:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$32147, %ax             # imm = 0x7D93
	jne	.LBB58_950
# %bb.760:                              # %std_eval.split2583
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32147, BasicBlockSignatureTracker # imm = 0x7D93
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_783
# %bb.761:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$32159, %ax             # imm = 0x7D9F
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.762:                              # %std_eval.split2587
	movl	(%rax), %eax
	movw	$32159, BasicBlockSignatureTracker # imm = 0x7D9F
	movw	$19, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_781
	jmp	.LBB58_765
.LBB58_763:                             # %Buffer__52
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25720, %ax             # imm = 0x6478
	cmpw	$6644, %ax              # imm = 0x19F4
	jne	.LBB58_950
# %bb.764:                              # %std_eval.split2585
	movw	$6644, BasicBlockSignatureTracker # imm = 0x19F4
	movw	$25720, RunTimeSignatureAdjuster # imm = 0x6478
.LBB58_765:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$32170, %ax             # imm = 0x7DAA
	movq	-120(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.766:                              # %std_eval.split2591
	movl	(%rax), %eax
	movw	$32170, BasicBlockSignatureTracker # imm = 0x7DAA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jge	.LBB58_769
# %bb.767:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$32184, %ax             # imm = 0x7DB8
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.768:                              # %std_eval.split2595
	movl	(%rax), %eax
	movw	$32184, BasicBlockSignatureTracker # imm = 0x7DB8
	movw	$18, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_773
.LBB58_769:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$32188, %ax             # imm = 0x7DBC
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.770:                              # %std_eval.split2597
	movl	(%rax), %eax
	movw	$32188, BasicBlockSignatureTracker # imm = 0x7DBC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_779
# %bb.771:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$122, %ax
	cmpw	$32198, %ax             # imm = 0x7DC6
	movq	-120(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.772:                              # %std_eval.split2601
	movl	(%rax), %eax
	movw	$32198, BasicBlockSignatureTracker # imm = 0x7DC6
	movw	$126, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_777
	jmp	.LBB58_775
.LBB58_773:                             # %Buffer__54
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-259, %ax              # imm = 0xFEFD
	cmpw	$-31931, %ax            # imm = 0x8345
	jne	.LBB58_950
# %bb.774:                              # %std_eval.split2599
	movw	$-31931, BasicBlockSignatureTracker # imm = 0x8345
	movw	$-259, RunTimeSignatureAdjuster # imm = 0xFEFD
.LBB58_775:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$97, %ax
	xorw	%cx, %ax
	cmpw	$32217, %ax             # imm = 0x7DD9
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB58_950
# %bb.776:                              # %std_eval.split2605
	movl	$0, (%rax)
	movw	$32217, BasicBlockSignatureTracker # imm = 0x7DD9
	movw	$101, RunTimeSignatureAdjuster
	jmp	.LBB58_779
.LBB58_777:                             # %Buffer__55
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7042, %ax              # imm = 0x1B82
	cmpw	$26180, %ax             # imm = 0x6644
	jne	.LBB58_950
# %bb.778:                              # %std_eval.split2607
	movw	$26180, BasicBlockSignatureTracker # imm = 0x6644
	movw	$7160, RunTimeSignatureAdjuster # imm = 0x1BF8
.LBB58_779:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$92, %ax
	xorw	%cx, %ax
	cmpw	$32224, %ax             # imm = 0x7DE0
	jne	.LBB58_950
# %bb.780:                              # %std_eval.split2603
	movw	$32224, BasicBlockSignatureTracker # imm = 0x7DE0
	movw	$115, RunTimeSignatureAdjuster
	jmp	.LBB58_783
.LBB58_781:                             # %Buffer__53
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12890, %ax            # imm = 0xCDA6
	cmpw	$-20423, %ax            # imm = 0xB039
	jne	.LBB58_950
# %bb.782:                              # %std_eval.split2593
	movw	$-20423, BasicBlockSignatureTracker # imm = 0xB039
	movw	$-12886, RunTimeSignatureAdjuster # imm = 0xCDAA
.LBB58_783:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$96, %ax
	xorw	%cx, %ax
	cmpw	$32243, %ax             # imm = 0x7DF3
	jne	.LBB58_950
# %bb.784:                              # %std_eval.split2589
	movw	$32243, BasicBlockSignatureTracker # imm = 0x7DF3
	movw	$141, RunTimeSignatureAdjuster
.LBB58_785:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$129, %ax
	xorw	%cx, %ax
	cmpw	$32255, %ax             # imm = 0x7DFF
	jne	.LBB58_950
# %bb.786:                              # %std_eval.split2579
	movw	$32255, BasicBlockSignatureTracker # imm = 0x7DFF
	movw	$181, RunTimeSignatureAdjuster
.LBB58_787:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$843, %ax               # imm = 0x34B
	xorw	%cx, %ax
	cmpw	$32257, %ax             # imm = 0x7E01
	jne	.LBB58_950
# %bb.788:                              # %std_eval.split2567
	movw	$32257, BasicBlockSignatureTracker # imm = 0x7E01
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_855
.LBB58_789:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$805, %ax               # imm = 0x325
	xorw	%cx, %ax
	cmpw	$32258, %ax             # imm = 0x7E02
	jne	.LBB58_950
# %bb.790:                              # %std_eval.split2545
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32258, BasicBlockSignatureTracker # imm = 0x7E02
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_853
# %bb.791:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$32259, %ax             # imm = 0x7E03
	jne	.LBB58_950
# %bb.792:                              # %std_eval.split2613
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32259, BasicBlockSignatureTracker # imm = 0x7E03
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_853
# %bb.793:                              # %Buffer__56
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20005, %ax             # imm = 0x4E25
	cmpw	$12326, %ax             # imm = 0x3026
	jne	.LBB58_950
# %bb.794:                              # %std_eval.split2615
	movw	$12326, BasicBlockSignatureTracker # imm = 0x3026
	movw	$20005, RunTimeSignatureAdjuster # imm = 0x4E25
# %bb.795:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$32261, %ax             # imm = 0x7E05
	jne	.LBB58_950
# %bb.796:                              # %std_eval.split2843
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32261, BasicBlockSignatureTracker # imm = 0x7E05
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_811
# %bb.797:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$32270, %ax             # imm = 0x7E0E
	jne	.LBB58_950
# %bb.798:                              # %std_eval.split2617
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32270, BasicBlockSignatureTracker # imm = 0x7E0E
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_811
# %bb.799:                              # %Buffer__57
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-31114, %ax            # imm = 0x8676
	cmpw	$-1928, %ax             # imm = 0xF878
	jne	.LBB58_950
# %bb.800:                              # %std_eval.split2621
	movw	$-1928, BasicBlockSignatureTracker # imm = 0xF878
	movw	$-31114, RunTimeSignatureAdjuster # imm = 0x8676
# %bb.801:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$32276, %ax             # imm = 0x7E14
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.802:                              # %std_eval.split2845
	movl	(%rax), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	movw	$32276, BasicBlockSignatureTracker # imm = 0x7E14
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jge	.LBB58_809
# %bb.803:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$32287, %ax             # imm = 0x7E1F
	movq	-120(%rbp), %rax        # 8-byte Reload
	movq	-112(%rbp), %rcx        # 8-byte Reload
	jne	.LBB58_950
# %bb.804:                              # %std_eval.split2623
	movl	(%rax), %eax
	addl	(%rcx), %eax
	movw	$32287, BasicBlockSignatureTracker # imm = 0x7E1F
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jge	.LBB58_809
# %bb.805:                              # %Buffer__58
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19288, %ax             # imm = 0x4B58
	cmpw	$13639, %ax             # imm = 0x3547
	jne	.LBB58_950
# %bb.806:                              # %std_eval.split2627
	movw	$13639, BasicBlockSignatureTracker # imm = 0x3547
	movw	$19288, RunTimeSignatureAdjuster # imm = 0x4B58
# %bb.807:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$32291, %ax             # imm = 0x7E23
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB58_950
# %bb.808:                              # %std_eval.split2847
	movl	$0, (%rax)
	movw	$32291, BasicBlockSignatureTracker # imm = 0x7E23
	movw	$55, RunTimeSignatureAdjuster
.LBB58_809:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$32297, %ax             # imm = 0x7E29
	jne	.LBB58_950
# %bb.810:                              # %std_eval.split2625
	movw	$32297, BasicBlockSignatureTracker # imm = 0x7E29
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_851
.LBB58_811:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$54, %ax
	xorw	%cx, %ax
	cmpw	$32307, %ax             # imm = 0x7E33
	jne	.LBB58_950
# %bb.812:                              # %std_eval.split2619
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32307, BasicBlockSignatureTracker # imm = 0x7E33
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_829
# %bb.813:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$32321, %ax             # imm = 0x7E41
	jne	.LBB58_950
# %bb.814:                              # %std_eval.split2631
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32321, BasicBlockSignatureTracker # imm = 0x7E41
	movw	$114, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_829
# %bb.815:                              # %Buffer__59
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-7279, %ax             # imm = 0xE391
	cmpw	$-25136, %ax            # imm = 0x9DD0
	jne	.LBB58_950
# %bb.816:                              # %std_eval.split2635
	movw	$-25136, BasicBlockSignatureTracker # imm = 0x9DD0
	movw	$-7279, RunTimeSignatureAdjuster # imm = 0xE391
# %bb.817:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$32341, %ax             # imm = 0x7E55
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.818:                              # %std_eval.split2849
	movl	(%rax), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	movw	$32341, BasicBlockSignatureTracker # imm = 0x7E55
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_827
# %bb.819:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$32346, %ax             # imm = 0x7E5A
	movq	-120(%rbp), %rax        # 8-byte Reload
	movq	-112(%rbp), %rcx        # 8-byte Reload
	jne	.LBB58_950
# %bb.820:                              # %std_eval.split2637
	movl	(%rax), %eax
	addl	(%rcx), %eax
	movw	$32346, BasicBlockSignatureTracker # imm = 0x7E5A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB58_825
# %bb.821:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$32354, %ax             # imm = 0x7E62
	movq	-120(%rbp), %rax        # 8-byte Reload
	movq	-112(%rbp), %rcx        # 8-byte Reload
	jne	.LBB58_950
# %bb.822:                              # %std_eval.split2643
	movl	(%rax), %eax
	addl	(%rcx), %eax
	movw	$32354, BasicBlockSignatureTracker # imm = 0x7E62
	movw	$55, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_827
# %bb.823:                              # %Buffer__60
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13186, %ax             # imm = 0x3382
	cmpw	$19936, %ax             # imm = 0x4DE0
	jne	.LBB58_950
# %bb.824:                              # %std_eval.split2645
	movw	$19936, BasicBlockSignatureTracker # imm = 0x4DE0
	movw	$13242, RunTimeSignatureAdjuster # imm = 0x33BA
.LBB58_825:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$32355, %ax             # imm = 0x7E63
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB58_950
# %bb.826:                              # %std_eval.split2641
	movl	$0, (%rax)
	movw	$32355, BasicBlockSignatureTracker # imm = 0x7E63
	movw	$54, RunTimeSignatureAdjuster
.LBB58_827:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$32356, %ax             # imm = 0x7E64
	jne	.LBB58_950
# %bb.828:                              # %std_eval.split2639
	movw	$32356, BasicBlockSignatureTracker # imm = 0x7E64
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_849
.LBB58_829:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$89, %ax
	xorw	%cx, %ax
	cmpw	$32362, %ax             # imm = 0x7E6A
	jne	.LBB58_950
# %bb.830:                              # %std_eval.split2633
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32362, BasicBlockSignatureTracker # imm = 0x7E6A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_847
# %bb.831:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$32372, %ax             # imm = 0x7E74
	jne	.LBB58_950
# %bb.832:                              # %std_eval.split2649
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32372, BasicBlockSignatureTracker # imm = 0x7E74
	movw	$30, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_847
# %bb.833:                              # %Buffer__61
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30467, %ax            # imm = 0x88FD
	cmpw	$-2423, %ax             # imm = 0xF689
	jne	.LBB58_950
# %bb.834:                              # %std_eval.split2653
	movw	$-2423, BasicBlockSignatureTracker # imm = 0xF689
	movw	$-30467, RunTimeSignatureAdjuster # imm = 0x88FD
# %bb.835:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$32374, %ax             # imm = 0x7E76
	movq	-120(%rbp), %rax        # 8-byte Reload
	movq	-112(%rbp), %rcx        # 8-byte Reload
	jne	.LBB58_950
# %bb.836:                              # %std_eval.split2851
	movl	(%rax), %eax
	addl	(%rcx), %eax
	movw	$32374, BasicBlockSignatureTracker # imm = 0x7E76
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_845
# %bb.837:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$32375, %ax             # imm = 0x7E77
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.838:                              # %std_eval.split2655
	movl	(%rax), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	movw	$32375, BasicBlockSignatureTracker # imm = 0x7E77
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB58_843
# %bb.839:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$247, %ax
	cmpw	$32384, %ax             # imm = 0x7E80
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.840:                              # %std_eval.split2661
	movl	(%rax), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	movw	$32384, BasicBlockSignatureTracker # imm = 0x7E80
	movw	$246, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_845
# %bb.841:                              # %Buffer__62
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14347, %ax             # imm = 0x380B
	cmpw	$18059, %ax             # imm = 0x468B
	jne	.LBB58_950
# %bb.842:                              # %std_eval.split2663
	movw	$18059, BasicBlockSignatureTracker # imm = 0x468B
	movw	$14588, RunTimeSignatureAdjuster # imm = 0x38FC
.LBB58_843:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$242, %ax
	xorw	%cx, %ax
	cmpw	$32389, %ax             # imm = 0x7E85
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB58_950
# %bb.844:                              # %std_eval.split2659
	movl	$0, (%rax)
	movw	$32389, BasicBlockSignatureTracker # imm = 0x7E85
	movw	$243, RunTimeSignatureAdjuster
.LBB58_845:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$240, %ax
	xorw	%cx, %ax
	cmpw	$32390, %ax             # imm = 0x7E86
	jne	.LBB58_950
# %bb.846:                              # %std_eval.split2657
	movw	$32390, BasicBlockSignatureTracker # imm = 0x7E86
	movw	$236, RunTimeSignatureAdjuster
.LBB58_847:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$202, %ax
	xorw	%cx, %ax
	cmpw	$32416, %ax             # imm = 0x7EA0
	jne	.LBB58_950
# %bb.848:                              # %std_eval.split2651
	movw	$32416, BasicBlockSignatureTracker # imm = 0x7EA0
	movw	$196, RunTimeSignatureAdjuster
.LBB58_849:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$198, %ax
	xorw	%cx, %ax
	cmpw	$32418, %ax             # imm = 0x7EA2
	jne	.LBB58_950
# %bb.850:                              # %std_eval.split2647
	movw	$32418, BasicBlockSignatureTracker # imm = 0x7EA2
	movw	$139, RunTimeSignatureAdjuster
.LBB58_851:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$133, %ax
	xorw	%cx, %ax
	cmpw	$32428, %ax             # imm = 0x7EAC
	jne	.LBB58_950
# %bb.852:                              # %std_eval.split2629
	movw	$32428, BasicBlockSignatureTracker # imm = 0x7EAC
	movw	$174, RunTimeSignatureAdjuster
.LBB58_853:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$191, %ax
	xorw	%cx, %ax
	cmpw	$32445, %ax             # imm = 0x7EBD
	jne	.LBB58_950
# %bb.854:                              # %std_eval.split2611
	movw	$32445, BasicBlockSignatureTracker # imm = 0x7EBD
	movw	$188, RunTimeSignatureAdjuster
.LBB58_855:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$193, %ax
	xorw	%cx, %ax
	cmpw	$32448, %ax             # imm = 0x7EC0
	jne	.LBB58_950
# %bb.856:                              # %std_eval.split2609
	movw	$32448, BasicBlockSignatureTracker # imm = 0x7EC0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_929
.LBB58_857:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$988, %ax               # imm = 0x3DC
	xorw	%cx, %ax
	cmpw	$32468, %ax             # imm = 0x7ED4
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movq	-112(%rbp), %rdx        # 8-byte Reload
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.858:                              # %std_eval.split2539
	movl	(%rax), %eax
	movq	-128(%rbp), %rsi        # 8-byte Reload
	addl	(%rsi), %eax
	movl	(%rcx), %ecx
	addl	(%rdx), %ecx
	movw	$32468, BasicBlockSignatureTracker # imm = 0x7ED4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB58_903
# %bb.859:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$32478, %ax             # imm = 0x7EDE
	jne	.LBB58_950
# %bb.860:                              # %std_eval.split2667
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movq	-136(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movq	-160(%rbp), %rdx        # 8-byte Reload
	addl	(%rdx), %ecx
	movw	$32478, BasicBlockSignatureTracker # imm = 0x7EDE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB58_869
# %bb.861:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$32503, %ax             # imm = 0x7EF7
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movq	-112(%rbp), %rdx        # 8-byte Reload
	movq	-104(%rbp), %rax        # 8-byte Reload
	jne	.LBB58_950
# %bb.862:                              # %std_eval.split2671
	movl	(%rax), %eax
	movq	-128(%rbp), %rsi        # 8-byte Reload
	addl	(%rsi), %eax
	movl	(%rcx), %ecx
	addl	(%rdx), %ecx
	movw	$32503, BasicBlockSignatureTracker # imm = 0x7EF7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_865
# %bb.863:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$32506, %ax             # imm = 0x7EFA
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.864:                              # %std_eval.split2675
	movl	(%rcx), %eax
	addl	$120, %eax
	movl	%eax, (%rcx)
	movw	$32506, BasicBlockSignatureTracker # imm = 0x7EFA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_867
.LBB58_865:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$511, %ax               # imm = 0x1FF
	cmpw	$32520, %ax             # imm = 0x7F08
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.866:                              # %std_eval.split2677
	movl	(%rcx), %eax
	subl	$120, %eax
	movl	%eax, (%rcx)
	movw	$32520, BasicBlockSignatureTracker # imm = 0x7F08
	movw	$498, RunTimeSignatureAdjuster # imm = 0x1F2
.LBB58_867:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$488, %ax               # imm = 0x1E8
	xorw	%cx, %ax
	cmpw	$32530, %ax             # imm = 0x7F12
	jne	.LBB58_950
# %bb.868:                              # %std_eval.split2679
	movw	$32530, BasicBlockSignatureTracker # imm = 0x7F12
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_901
.LBB58_869:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$455, %ax               # imm = 0x1C7
	cmpw	$32537, %ax             # imm = 0x7F19
	jne	.LBB58_950
# %bb.870:                              # %std_eval.split2673
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edi
	movq	-144(%rbp), %rax        # 8-byte Reload
	addl	(%rax), %edi
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movq	-152(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	subl	%eax, %edi
	callq	abs
	movw	$32537, BasicBlockSignatureTracker # imm = 0x7F19
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_883
# %bb.871:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$52, %ax
	cmpw	$32557, %ax             # imm = 0x7F2D
	movq	-120(%rbp), %rdx        # 8-byte Reload
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	-104(%rbp), %rsi        # 8-byte Reload
	jne	.LBB58_950
# %bb.872:                              # %std_eval.split2683
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	addl	(%rsi), %eax
	movl	(%rcx), %ecx
	addl	(%rdx), %ecx
	addl	$1, %ecx
	movw	$32557, BasicBlockSignatureTracker # imm = 0x7F2D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_875
# %bb.873:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$105, %ax
	cmpw	$32580, %ax             # imm = 0x7F44
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.874:                              # %std_eval.split2687
	movl	(%rcx), %eax
	addl	$120, %eax
	movl	%eax, (%rcx)
	movw	$32580, BasicBlockSignatureTracker # imm = 0x7F44
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_881
.LBB58_875:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$97, %ax
	cmpw	$32588, %ax             # imm = 0x7F4C
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-104(%rbp), %rdx        # 8-byte Reload
	jne	.LBB58_950
# %bb.876:                              # %std_eval.split2689
	movl	(%rax), %eax
	addl	(%rcx), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	addl	(%rdx), %ecx
	addl	$1, %ecx
	movw	$32588, BasicBlockSignatureTracker # imm = 0x7F4C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_879
# %bb.877:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$32589, %ax             # imm = 0x7F4D
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.878:                              # %std_eval.split2693
	movl	(%rcx), %eax
	subl	$120, %eax
	movl	%eax, (%rcx)
	movw	$32589, BasicBlockSignatureTracker # imm = 0x7F4D
	movw	$1, RunTimeSignatureAdjuster
.LBB58_879:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$32595, %ax             # imm = 0x7F53
	jne	.LBB58_950
# %bb.880:                              # %std_eval.split2695
	movw	$32595, BasicBlockSignatureTracker # imm = 0x7F53
	movw	$23, RunTimeSignatureAdjuster
.LBB58_881:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$47, %ax
	xorw	%cx, %ax
	cmpw	$32619, %ax             # imm = 0x7F6B
	jne	.LBB58_950
# %bb.882:                              # %std_eval.split2691
	movw	$32619, BasicBlockSignatureTracker # imm = 0x7F6B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_899
.LBB58_883:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$148, %ax
	cmpw	$32653, %ax             # imm = 0x7F8D
	jne	.LBB58_950
# %bb.884:                              # %std_eval.split2685
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edi
	movq	-144(%rbp), %rax        # 8-byte Reload
	addl	(%rax), %edi
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movq	-152(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	subl	%eax, %edi
	callq	abs
	movw	$32653, BasicBlockSignatureTracker # imm = 0x7F8D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB58_897
# %bb.885:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$40, %ax
	cmpw	$32677, %ax             # imm = 0x7FA5
	movq	-120(%rbp), %rdx        # 8-byte Reload
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movq	-104(%rbp), %rsi        # 8-byte Reload
	jne	.LBB58_950
# %bb.886:                              # %std_eval.split2699
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	addl	(%rsi), %eax
	movl	(%rcx), %ecx
	addl	(%rdx), %ecx
	addl	$2, %ecx
	movw	$32677, BasicBlockSignatureTracker # imm = 0x7FA5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_889
# %bb.887:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$32678, %ax             # imm = 0x7FA6
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.888:                              # %std_eval.split2703
	movl	(%rcx), %eax
	addl	$120, %eax
	movl	%eax, (%rcx)
	movw	$32678, BasicBlockSignatureTracker # imm = 0x7FA6
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_895
.LBB58_889:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$32679, %ax             # imm = 0x7FA7
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movq	-112(%rbp), %rax        # 8-byte Reload
	movq	-104(%rbp), %rdx        # 8-byte Reload
	jne	.LBB58_950
# %bb.890:                              # %std_eval.split2705
	movl	(%rax), %eax
	addl	(%rcx), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	addl	(%rdx), %ecx
	addl	$2, %ecx
	movw	$32679, BasicBlockSignatureTracker # imm = 0x7FA7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_893
# %bb.891:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$32694, %ax             # imm = 0x7FB6
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.892:                              # %std_eval.split2709
	movl	(%rcx), %eax
	subl	$120, %eax
	movl	%eax, (%rcx)
	movw	$32694, BasicBlockSignatureTracker # imm = 0x7FB6
	movw	$17, RunTimeSignatureAdjuster
.LBB58_893:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$119, %ax
	xorw	%cx, %ax
	cmpw	$32720, %ax             # imm = 0x7FD0
	jne	.LBB58_950
# %bb.894:                              # %std_eval.split2711
	movw	$32720, BasicBlockSignatureTracker # imm = 0x7FD0
	movw	$118, RunTimeSignatureAdjuster
.LBB58_895:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$112, %ax
	xorw	%cx, %ax
	cmpw	$32726, %ax             # imm = 0x7FD6
	jne	.LBB58_950
# %bb.896:                              # %std_eval.split2707
	movw	$32726, BasicBlockSignatureTracker # imm = 0x7FD6
	movw	$91, RunTimeSignatureAdjuster
.LBB58_897:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$90, %ax
	xorw	%cx, %ax
	cmpw	$32727, %ax             # imm = 0x7FD7
	jne	.LBB58_950
# %bb.898:                              # %std_eval.split2701
	movw	$32727, BasicBlockSignatureTracker # imm = 0x7FD7
	movw	$188, RunTimeSignatureAdjuster
.LBB58_899:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$176, %ax
	xorw	%cx, %ax
	cmpw	$32731, %ax             # imm = 0x7FDB
	jne	.LBB58_950
# %bb.900:                              # %std_eval.split2697
	movw	$32731, BasicBlockSignatureTracker # imm = 0x7FDB
	movw	$201, RunTimeSignatureAdjuster
.LBB58_901:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$207, %ax
	xorw	%cx, %ax
	cmpw	$32733, %ax             # imm = 0x7FDD
	jne	.LBB58_950
# %bb.902:                              # %std_eval.split2681
	movw	$32733, BasicBlockSignatureTracker # imm = 0x7FDD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_927
.LBB58_903:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$304, %ax               # imm = 0x130
	cmpw	$32740, %ax             # imm = 0x7FE4
	jne	.LBB58_950
# %bb.904:                              # %std_eval.split2669
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movq	-136(%rbp), %rcx        # 8-byte Reload
	addl	(%rcx), %eax
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movq	-160(%rbp), %rdx        # 8-byte Reload
	addl	(%rdx), %ecx
	movw	$32740, BasicBlockSignatureTracker # imm = 0x7FE4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB58_925
# %bb.905:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$32749, %ax             # imm = 0x7FED
	jne	.LBB58_950
# %bb.906:                              # %std_eval.split2715
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$32749, BasicBlockSignatureTracker # imm = 0x7FED
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_913
# %bb.907:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-2, %ax
	cmpw	$-32749, %ax            # imm = 0x8013
	jne	.LBB58_950
# %bb.908:                              # %std_eval.split2719
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-32749, BasicBlockSignatureTracker # imm = 0x8013
	movw	$-2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_913
# %bb.909:                              # %Buffer__63
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20872, %ax            # imm = 0xAE78
	cmpw	$11883, %ax             # imm = 0x2E6B
	jne	.LBB58_950
# %bb.910:                              # %std_eval.split2723
	movw	$11883, BasicBlockSignatureTracker # imm = 0x2E6B
	movw	$-20872, RunTimeSignatureAdjuster # imm = 0xAE78
# %bb.911:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$-32726, %ax            # imm = 0x802A
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.912:                              # %std_eval.split2853
	movl	(%rcx), %eax
	addl	$120, %eax
	movl	%eax, (%rcx)
	movw	$-32726, BasicBlockSignatureTracker # imm = 0x802A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_923
.LBB58_913:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-83, %ax
	xorw	%cx, %ax
	cmpw	$-32704, %ax            # imm = 0x8040
	jne	.LBB58_950
# %bb.914:                              # %std_eval.split2721
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-32704, BasicBlockSignatureTracker # imm = 0x8040
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB58_921
# %bb.915:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-32702, %ax            # imm = 0x8042
	jne	.LBB58_950
# %bb.916:                              # %std_eval.split2729
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-32702, BasicBlockSignatureTracker # imm = 0x8042
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB58_921
# %bb.917:                              # %Buffer__64
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14599, %ax             # imm = 0x3907
	cmpw	$-18107, %ax            # imm = 0xB945
	jne	.LBB58_950
# %bb.918:                              # %std_eval.split2731
	movw	$-18107, BasicBlockSignatureTracker # imm = 0xB945
	movw	$14599, RunTimeSignatureAdjuster # imm = 0x3907
# %bb.919:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-32689, %ax            # imm = 0x804F
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.920:                              # %std_eval.split2855
	movl	(%rcx), %eax
	subl	$120, %eax
	movl	%eax, (%rcx)
	movw	$-32689, BasicBlockSignatureTracker # imm = 0x804F
	movw	$15, RunTimeSignatureAdjuster
.LBB58_921:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-32684, %ax            # imm = 0x8054
	jne	.LBB58_950
# %bb.922:                              # %std_eval.split2727
	movw	$-32684, BasicBlockSignatureTracker # imm = 0x8054
	movw	$126, RunTimeSignatureAdjuster
.LBB58_923:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$112, %ax
	xorw	%cx, %ax
	cmpw	$-32678, %ax            # imm = 0x805A
	jne	.LBB58_950
# %bb.924:                              # %std_eval.split2725
	movw	$-32678, BasicBlockSignatureTracker # imm = 0x805A
	movw	$-66, RunTimeSignatureAdjuster
.LBB58_925:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-69, %ax
	xorw	%cx, %ax
	cmpw	$-32673, %ax            # imm = 0x805F
	jne	.LBB58_950
# %bb.926:                              # %std_eval.split2717
	movw	$-32673, BasicBlockSignatureTracker # imm = 0x805F
	movw	$-126, RunTimeSignatureAdjuster
.LBB58_927:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-66, %ax
	xorw	%cx, %ax
	cmpw	$-32669, %ax            # imm = 0x8063
	jne	.LBB58_950
# %bb.928:                              # %std_eval.split2713
	movw	$-32669, BasicBlockSignatureTracker # imm = 0x8063
	movw	$-349, RunTimeSignatureAdjuster # imm = 0xFEA3
.LBB58_929:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-344, %ax              # imm = 0xFEA8
	xorw	%cx, %ax
	cmpw	$-32664, %ax            # imm = 0x8068
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB58_950
# %bb.930:                              # %std_eval.split2665
	movl	(%rax), %edi
	movw	$-32664, BasicBlockSignatureTracker # imm = 0x8068
	movw	$-23185, RunTimeSignatureAdjuster # imm = 0xA56F
	movq	%rax, %rbx
	callq	storeECache
	movw	$-32664, BasicBlockSignatureTracker # imm = 0x8068
	movw	$-23185, RunTimeSignatureAdjuster # imm = 0xA56F
	movl	Material, %edi
	subl	(%rbx), %edi
	callq	abs
	movl	maxposdiff, %ecx
	movw	$-32664, BasicBlockSignatureTracker # imm = 0x8068
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB58_939
# %bb.931:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-32660, %ax            # imm = 0x806C
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB58_950
# %bb.932:                              # %std_eval.split2733
	movl	Material, %edi
	subl	(%rax), %edi
	callq	abs
	movl	$1000, %ecx             # imm = 0x3E8
	movw	$-32660, BasicBlockSignatureTracker # imm = 0x806C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jge	.LBB58_935
# %bb.933:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-32650, %ax            # imm = 0x8076
	jne	.LBB58_950
# %bb.934:                              # %std_eval.split2737
	movl	$1000, %eax             # imm = 0x3E8
	movw	$-32650, BasicBlockSignatureTracker # imm = 0x8076
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB58_937
.LBB58_935:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-32641, %ax            # imm = 0x807F
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB58_950
# %bb.936:                              # %std_eval.split2739
	movl	Material, %edi
	subl	(%rax), %edi
	callq	abs
	movw	$-32641, BasicBlockSignatureTracker # imm = 0x807F
	movw	$9, RunTimeSignatureAdjuster
.LBB58_937:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$246, %cx
	xorw	%dx, %cx
	cmpw	$-32640, %cx            # imm = 0x8080
	jne	.LBB58_950
# %bb.938:                              # %std_eval.split2741
	movl	%eax, maxposdiff
	movw	$-32640, BasicBlockSignatureTracker # imm = 0x8080
	movw	$232, RunTimeSignatureAdjuster
.LBB58_939:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$237, %ax
	xorw	%cx, %ax
	cmpw	$-32635, %ax            # imm = 0x8085
	jne	.LBB58_950
# %bb.940:                              # %std_eval.split2735
	movl	white_to_move, %eax
	movw	$-32635, BasicBlockSignatureTracker # imm = 0x8085
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB58_943
# %bb.941:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-32634, %ax            # imm = 0x8086
	movq	-248(%rbp), %r8         # 8-byte Reload
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB58_950
# %bb.942:                              # %std_eval.split2743
	movl	(%rax), %eax
	movl	%eax, (%r8)
	movw	$-32634, BasicBlockSignatureTracker # imm = 0x8086
	movw	$-4192, RunTimeSignatureAdjuster # imm = 0xEFA0
	jmp	.LBB58_945
.LBB58_943:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-32631, %ax            # imm = 0x8089
	movq	-248(%rbp), %r8         # 8-byte Reload
	movq	-48(%rbp), %rcx         # 8-byte Reload
	jne	.LBB58_950
# %bb.944:                              # %std_eval.split2745
	xorl	%eax, %eax
	subl	(%rcx), %eax
	movl	%eax, (%r8)
	movw	$-32631, BasicBlockSignatureTracker # imm = 0x8089
	movw	$-4177, RunTimeSignatureAdjuster # imm = 0xEFAF
.LBB58_945:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4180, %ax             # imm = 0xEFAC
	xorw	%cx, %ax
	cmpw	$-32630, %ax            # imm = 0x808A
	jne	.LBB58_950
# %bb.946:                              # %std_eval.split1929
	movl	(%r8), %eax
	movw	$-32630, BasicBlockSignatureTracker # imm = 0x808A
	movw	$-26713, RunTimeSignatureAdjuster # imm = 0x97A7
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB58_947:                             # %CFerrorHandler.std_eval.loopexit
	jmp	.LBB58_950
.LBB58_948:                             # %CFerrorHandler.std_eval.loopexit1
	jmp	.LBB58_950
.LBB58_949:                             # %CFerrorHandler.std_eval.loopexit2
	jmp	.LBB58_950
.LBB58_950:                             # %CFerrorHandler.std_eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end58:
	.size	std_eval, .Lfunc_end58-std_eval
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI58_0:
	.quad	.LBB58_107
	.quad	.LBB58_235
	.quad	.LBB58_435
	.quad	.LBB58_437
	.quad	.LBB58_443
	.quad	.LBB58_511
	.quad	.LBB58_363
	.quad	.LBB58_397
	.quad	.LBB58_439
	.quad	.LBB58_441
	.quad	.LBB58_431
	.quad	.LBB58_433
                                        # -- End function
	.text
	.globl	ResetHandValue          # -- Begin function ResetHandValue
	.p2align	4, 0x90
	.type	ResetHandValue,@function
ResetHandValue:                         # @ResetHandValue
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2271, %ax              # imm = 0x8DF
	xorw	%cx, %ax
	cmpw	$-32602, %ax            # imm = 0x80A6
	jne	.LBB59_3
# %bb.1:                                # %ResetHandValue.split8
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2271, %ax              # imm = 0x8DF
	xorw	%cx, %ax
	cmpw	$-32602, %ax            # imm = 0x80A6
	jne	.LBB59_3
# %bb.2:                                # %ResetHandValue.split
	movabsq	$hand_value, %rdi
	movabsq	$std_hand_value, %rsi
	movl	$52, %edx
	callq	memcpy
	movw	$-32602, BasicBlockSignatureTracker # imm = 0x80A6
	movw	$2260, RunTimeSignatureAdjuster # imm = 0x8D4
	popq	%rbp
	retq
.LBB59_3:                               # %CFerrorHandler.ResetHandValue
	callq	FAULT_DETECTED_CFC
.Lfunc_end59:
	.size	ResetHandValue, .Lfunc_end59-ResetHandValue
	.cfi_endproc
                                        # -- End function
	.globl	BegForPartner           # -- Begin function BegForPartner
	.p2align	4, 0x90
	.type	BegForPartner,@function
BegForPartner:                          # @BegForPartner
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$480, %ax               # imm = 0x1E0
	xorw	%cx, %ax
	cmpw	$-32552, %ax            # imm = 0x80D8
	jne	.LBB60_7
# %bb.1:                                # %BegForPartner.split20
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$480, %ax               # imm = 0x1E0
	xorw	%cx, %ax
	cmpw	$-32552, %ax            # imm = 0x80D8
	jne	.LBB60_7
# %bb.2:                                # %BegForPartner.split18
	movl	xb_mode, %eax
	movw	$-32552, BasicBlockSignatureTracker # imm = 0x80D8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB60_5
# %bb.3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-32537, %ax            # imm = 0x80E7
	jne	.LBB60_7
# %bb.4:                                # %BegForPartner.split
	movw	$-32537, BasicBlockSignatureTracker # imm = 0x80E7
	movw	$63, RunTimeSignatureAdjuster
.LBB60_5:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$-32527, %ax            # imm = 0x80F1
	jne	.LBB60_7
# %bb.6:                                # %BegForPartner.split16
	movw	$-32527, BasicBlockSignatureTracker # imm = 0x80F1
	movw	$485, RunTimeSignatureAdjuster # imm = 0x1E5
	popq	%rbp
	retq
.LBB60_7:                               # %CFerrorHandler.BegForPartner
	callq	FAULT_DETECTED_CFC
.Lfunc_end60:
	.size	BegForPartner, .Lfunc_end60-BegForPartner
	.cfi_endproc
                                        # -- End function
	.globl	GreetPartner            # -- Begin function GreetPartner
	.p2align	4, 0x90
	.type	GreetPartner,@function
GreetPartner:                           # @GreetPartner
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$46, %ax
	xorw	%cx, %ax
	cmpw	$-32504, %ax            # imm = 0x8108
	jne	.LBB61_2
# %bb.1:                                # %GreetPartner.split
	movabsq	$.L.str.27, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.1.28, %rdi
	movb	$0, %al
	callq	printf
	movw	$-32504, BasicBlockSignatureTracker # imm = 0x8108
	movw	$20, RunTimeSignatureAdjuster
	popq	%rbp
	retq
.LBB61_2:                               # %CFerrorHandler.GreetPartner
	callq	FAULT_DETECTED_CFC
.Lfunc_end61:
	.size	GreetPartner, .Lfunc_end61-GreetPartner
	.cfi_endproc
                                        # -- End function
	.globl	HandlePartner           # -- Begin function HandlePartner
	.p2align	4, 0x90
	.type	HandlePartner,@function
HandlePartner:                          # @HandlePartner
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25232, %ax             # imm = 0x6290
	xorw	%cx, %ax
	cmpw	$-32492, %ax            # imm = 0x8114
	jne	.LBB62_13
# %bb.1:                                # %HandlePartner.split37
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25232, %ax             # imm = 0x6290
	xorw	%cx, %ax
	cmpw	$-32492, %ax            # imm = 0x8114
	jne	.LBB62_13
# %bb.2:                                # %HandlePartner.split35
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rdi, (%rax)
	movq	(%rax), %rcx
	movsbl	(%rcx), %ecx
	movw	$-32492, BasicBlockSignatureTracker # imm = 0x8114
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$32, %ecx
	jne	.LBB62_9
# %bb.3:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$8, %cx
	cmpw	$-32484, %cx            # imm = 0x811C
	jne	.LBB62_13
# %bb.4:                                # %HandlePartner.split
	movl	have_partner, %ecx
	movw	$-32484, BasicBlockSignatureTracker # imm = 0x811C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	jne	.LBB62_7
# %bb.5:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$58, %cx
	cmpw	$-32474, %cx            # imm = 0x8126
	jne	.LBB62_13
# %bb.6:                                # %HandlePartner.split31
	movabsq	$.L.str.2.29, %rsi
	movabsq	$my_partner, %rdx
	movq	(%rax), %rdi
	addq	$1, %rdi
	movb	$0, %al
	callq	__isoc99_sscanf
	movl	$1, have_partner
	movw	$-32474, BasicBlockSignatureTracker # imm = 0x8126
	movw	$0, RunTimeSignatureAdjuster
	callq	GreetPartner
	movabsq	$.L.str.3.30, %rdi
	movw	$-32474, BasicBlockSignatureTracker # imm = 0x8126
	movw	$58, RunTimeSignatureAdjuster
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.4.31, %rdi
	movb	$0, %al
	callq	printf
	movw	$-32474, BasicBlockSignatureTracker # imm = 0x8126
	movw	$58, RunTimeSignatureAdjuster
.LBB62_7:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$48, %ax
	xorw	%cx, %ax
	cmpw	$-32468, %ax            # imm = 0x812C
	jne	.LBB62_13
# %bb.8:                                # %HandlePartner.split29
	movw	$-32468, BasicBlockSignatureTracker # imm = 0x812C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB62_11
.LBB62_9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$-32456, %ax            # imm = 0x8138
	jne	.LBB62_13
# %bb.10:                               # %HandlePartner.split27
	movabsq	$my_partner, %rdi
	xorl	%esi, %esi
	movl	$256, %edx              # imm = 0x100
	callq	memset
	movl	$0, have_partner
	movw	$-32456, BasicBlockSignatureTracker # imm = 0x8138
	movw	$0, RunTimeSignatureAdjuster
	callq	BegForPartner
	movabsq	$.L.str.5.32, %rdi
	movw	$-32456, BasicBlockSignatureTracker # imm = 0x8138
	movw	$20, RunTimeSignatureAdjuster
	movb	$0, %al
	callq	printf
	movw	$-32456, BasicBlockSignatureTracker # imm = 0x8138
	movw	$20, RunTimeSignatureAdjuster
.LBB62_11:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-32453, %ax            # imm = 0x813B
	jne	.LBB62_13
# %bb.12:                               # %HandlePartner.split33
	movw	$-32453, BasicBlockSignatureTracker # imm = 0x813B
	movw	$25166, RunTimeSignatureAdjuster # imm = 0x624E
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB62_13:                              # %CFerrorHandler.HandlePartner
	callq	FAULT_DETECTED_CFC
.Lfunc_end62:
	.size	HandlePartner, .Lfunc_end62-HandlePartner
	.cfi_endproc
                                        # -- End function
	.globl	HandlePtell             # -- Begin function HandlePtell
	.p2align	4, 0x90
	.type	HandlePtell,@function
HandlePtell:                            # @HandlePtell
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25292, %ax             # imm = 0x62CC
	xorw	%cx, %ax
	cmpw	$-32429, %ax            # imm = 0x8153
	jne	.LBB63_428
# %bb.1:                                # %HandlePtell.split1226
	movabsq	$.L.str.6.33, %rbx
	movabsq	$.LHandlePtell.howmuch, %rsi
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r14
	addq	$-80, %r14
	movq	%r14, %rsp
	movq	%rdi, (%r15)
	movl	$0, (%r12)
	movq	%r14, %rdi
	movl	$80, %edx
	callq	memcpy
	movq	(%r15), %rdi
	addq	$6, %rdi
	movq	%rbx, %rsi
	movl	$4, %edx
	callq	strncmp
	movw	$-32429, BasicBlockSignatureTracker # imm = 0x8153
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-32422, %ax            # imm = 0x815A
	jne	.LBB63_428
# %bb.3:                                # %HandlePtell.split836
	movabsq	$.L.str.7.34, %rdi
	movb	$0, %al
	callq	printf
	movw	$-32422, BasicBlockSignatureTracker # imm = 0x815A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_426
.LBB63_4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-32408, %ax            # imm = 0x8168
	jne	.LBB63_428
# %bb.5:                                # %HandlePtell.split
	movl	Variant, %eax
	movw	$-32408, BasicBlockSignatureTracker # imm = 0x8168
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB63_12
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-32404, %ax            # imm = 0x816C
	jne	.LBB63_428
# %bb.7:                                # %HandlePtell.split840
	movabsq	$.L.str.8.35, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-32404, BasicBlockSignatureTracker # imm = 0x816C
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB63_12
# %bb.8:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5623, %ax              # imm = 0x15F7
	cmpw	$-27493, %ax            # imm = 0x949B
	jne	.LBB63_428
# %bb.9:                                # %HandlePtell.split844
	movw	$-27493, BasicBlockSignatureTracker # imm = 0x949B
	movw	$5623, RunTimeSignatureAdjuster # imm = 0x15F7
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$233, %ax
	xorw	%cx, %ax
	cmpw	$-32379, %ax            # imm = 0x8185
	jne	.LBB63_428
# %bb.11:                               # %HandlePtell.split1228
	movabsq	$.L.str.9.36, %rdi
	movb	$0, %al
	callq	printf
	movw	$-32379, BasicBlockSignatureTracker # imm = 0x8185
	movw	$223, RunTimeSignatureAdjuster
	jmp	.LBB63_426
.LBB63_12:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$250, %ax
	xorw	%cx, %ax
	cmpw	$-32366, %ax            # imm = 0x8192
	jne	.LBB63_428
# %bb.13:                               # %HandlePtell.split842
	movabsq	$.L.str.10.37, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$3, %edx
	callq	strncmp
	movw	$-32366, BasicBlockSignatureTracker # imm = 0x8192
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_16
# %bb.14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-32353, %ax            # imm = 0x819F
	jne	.LBB63_428
# %bb.15:                               # %HandlePtell.split848
	movabsq	$.L.str.11.38, %rdi
	movb	$0, %al
	callq	printf
	movl	$1, must_sit
	movl	$0, must_go
	movw	$-32353, BasicBlockSignatureTracker # imm = 0x819F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_424
.LBB63_16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$-32348, %ax            # imm = 0x81A4
	jne	.LBB63_428
# %bb.17:                               # %HandlePtell.split846
	movabsq	$.L.str.12.39, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$2, %edx
	callq	strncmp
	movw	$-32348, BasicBlockSignatureTracker # imm = 0x81A4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB63_20
# %bb.18:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-32322, %ax            # imm = 0x81BE
	jne	.LBB63_428
# %bb.19:                               # %HandlePtell.split852
	movabsq	$.L.str.13.40, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-32322, BasicBlockSignatureTracker # imm = 0x81BE
	movw	$26, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_22
.LBB63_20:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-32321, %ax            # imm = 0x81BF
	jne	.LBB63_428
# %bb.21:                               # %HandlePtell.split854
	movabsq	$.L.str.14.41, %rdi
	movb	$0, %al
	callq	printf
	movl	$0, must_sit
	movl	$4, must_go
	movw	$-32321, BasicBlockSignatureTracker # imm = 0x81BF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_422
.LBB63_22:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12856, %ax             # imm = 0x3238
	cmpw	$-19578, %ax            # imm = 0xB386
	jne	.LBB63_428
# %bb.23:                               # %HandlePtell.split856
	movw	$-19578, BasicBlockSignatureTracker # imm = 0xB386
	movw	$12856, RunTimeSignatureAdjuster # imm = 0x3238
# %bb.24:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$-32299, %ax            # imm = 0x81D5
	jne	.LBB63_428
# %bb.25:                               # %HandlePtell.split1230
	movabsq	$.L.str.15.42, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-32299, BasicBlockSignatureTracker # imm = 0x81D5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB63_28
# %bb.26:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-32294, %ax            # imm = 0x81DA
	jne	.LBB63_428
# %bb.27:                               # %HandlePtell.split860
	movabsq	$.L.str.16.43, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-32294, BasicBlockSignatureTracker # imm = 0x81DA
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_30
.LBB63_28:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-32293, %ax            # imm = 0x81DB
	jne	.LBB63_428
# %bb.29:                               # %HandlePtell.split862
	movabsq	$.L.str.17.44, %rdi
	movb	$0, %al
	callq	printf
	movl	$1, go_fast
	movl	$0, must_sit
	movw	$-32293, BasicBlockSignatureTracker # imm = 0x81DB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_420
.LBB63_30:                              # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23365, %ax             # imm = 0x5B45
	cmpw	$-9569, %ax             # imm = 0xDA9F
	jne	.LBB63_428
# %bb.31:                               # %HandlePtell.split864
	movw	$-9569, BasicBlockSignatureTracker # imm = 0xDA9F
	movw	$23365, RunTimeSignatureAdjuster # imm = 0x5B45
# %bb.32:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-32289, %ax            # imm = 0x81DF
	jne	.LBB63_428
# %bb.33:                               # %HandlePtell.split1232
	movabsq	$.L.str.18.45, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-32289, BasicBlockSignatureTracker # imm = 0x81DF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_36
# %bb.34:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-32280, %ax            # imm = 0x81E8
	jne	.LBB63_428
# %bb.35:                               # %HandlePtell.split870
	movabsq	$.L.str.19, %rdi
	movb	$0, %al
	callq	printf
	movl	$0, go_fast
	movl	$0, must_sit
	movw	$-32280, BasicBlockSignatureTracker # imm = 0x81E8
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_418
.LBB63_36:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$-32271, %ax            # imm = 0x81F1
	jne	.LBB63_428
# %bb.37:                               # %HandlePtell.split868
	movabsq	$.L.str.20, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-32271, BasicBlockSignatureTracker # imm = 0x81F1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_40
# %bb.38:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-32260, %ax            # imm = 0x81FC
	jne	.LBB63_428
# %bb.39:                               # %HandlePtell.split876
	movabsq	$.L.str.21, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.22.46, %rdi
	movb	$0, %al
	callq	printf
	movw	$-32260, BasicBlockSignatureTracker # imm = 0x81FC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_416
.LBB63_40:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1023, %ax              # imm = 0x3FF
	cmpw	$-32242, %ax            # imm = 0x820E
	jne	.LBB63_428
# %bb.41:                               # %HandlePtell.split874
	movabsq	$.L.str.23, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-32242, BasicBlockSignatureTracker # imm = 0x820E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_44
# %bb.42:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-32241, %ax            # imm = 0x820F
	jne	.LBB63_428
# %bb.43:                               # %HandlePtell.split882
	movabsq	$.L.str.24, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.25, %rdi
	movb	$0, %al
	callq	printf
	movw	$-32241, BasicBlockSignatureTracker # imm = 0x820F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_414
.LBB63_44:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-32238, %ax            # imm = 0x8212
	jne	.LBB63_428
# %bb.45:                               # %HandlePtell.split880
	movabsq	$.L.str.26, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$1, %edx
	callq	strncmp
	movw	$-32238, BasicBlockSignatureTracker # imm = 0x8212
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_192
# %bb.46:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-32229, %ax            # imm = 0x821B
	jne	.LBB63_428
# %bb.47:                               # %HandlePtell.split888
	movabsq	$.L.str.27.47, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32229, BasicBlockSignatureTracker # imm = 0x821B
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_74
# %bb.48:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-32217, %ax            # imm = 0x8227
	jne	.LBB63_428
# %bb.49:                               # %HandlePtell.split892
	movabsq	$.L.str.28, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32217, BasicBlockSignatureTracker # imm = 0x8227
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_82
# %bb.50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-32215, %ax            # imm = 0x8229
	jne	.LBB63_428
# %bb.51:                               # %HandlePtell.split894
	movabsq	$.L.str.29, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32215, BasicBlockSignatureTracker # imm = 0x8229
	movw	$14, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_82
# %bb.52:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18156, %ax             # imm = 0x46EC
	cmpw	$-15163, %ax            # imm = 0xC4C5
	jne	.LBB63_428
# %bb.53:                               # %HandlePtell.split898
	movw	$-15163, BasicBlockSignatureTracker # imm = 0xC4C5
	movw	$18156, RunTimeSignatureAdjuster # imm = 0x46EC
# %bb.54:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-32209, %ax            # imm = 0x822F
	jne	.LBB63_428
# %bb.55:                               # %HandlePtell.split1234
	movabsq	$.L.str.30, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32209, BasicBlockSignatureTracker # imm = 0x822F
	movw	$8, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_82
# %bb.56:                               # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-15197, %ax            # imm = 0xC4A3
	cmpw	$18060, %ax             # imm = 0x468C
	jne	.LBB63_428
# %bb.57:                               # %HandlePtell.split900
	movw	$18060, BasicBlockSignatureTracker # imm = 0x468C
	movw	$-15197, RunTimeSignatureAdjuster # imm = 0xC4A3
# %bb.58:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$-32198, %ax            # imm = 0x823A
	jne	.LBB63_428
# %bb.59:                               # %HandlePtell.split1236
	movabsq	$.L.str.31, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32198, BasicBlockSignatureTracker # imm = 0x823A
	movw	$29, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_82
# %bb.60:                               # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30963, %ax             # imm = 0x78F3
	cmpw	$-1335, %ax             # imm = 0xFAC9
	jne	.LBB63_428
# %bb.61:                               # %HandlePtell.split902
	movw	$-1335, BasicBlockSignatureTracker # imm = 0xFAC9
	movw	$30963, RunTimeSignatureAdjuster # imm = 0x78F3
# %bb.62:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-32194, %ax            # imm = 0x823E
	jne	.LBB63_428
# %bb.63:                               # %HandlePtell.split1238
	movabsq	$.L.str.32, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32194, BasicBlockSignatureTracker # imm = 0x823E
	movw	$25, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_82
# %bb.64:                               # %Buffer__6
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22670, %ax            # imm = 0xA772
	cmpw	$9548, %ax              # imm = 0x254C
	jne	.LBB63_428
# %bb.65:                               # %HandlePtell.split904
	movw	$9548, BasicBlockSignatureTracker # imm = 0x254C
	movw	$-22670, RunTimeSignatureAdjuster # imm = 0xA772
# %bb.66:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$90, %ax
	xorw	%cx, %ax
	cmpw	$-32156, %ax            # imm = 0x8264
	jne	.LBB63_428
# %bb.67:                               # %HandlePtell.split1240
	movabsq	$.L.str.33, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32156, BasicBlockSignatureTracker # imm = 0x8264
	movw	$67, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_82
# %bb.68:                               # %Buffer__7
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29904, %ax            # imm = 0x8B30
	cmpw	$2388, %ax              # imm = 0x954
	jne	.LBB63_428
# %bb.69:                               # %HandlePtell.split906
	movw	$2388, BasicBlockSignatureTracker # imm = 0x954
	movw	$-29904, RunTimeSignatureAdjuster # imm = 0x8B30
# %bb.70:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-32154, %ax            # imm = 0x8266
	jne	.LBB63_428
# %bb.71:                               # %HandlePtell.split1242
	movabsq	$.L.str.34, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32154, BasicBlockSignatureTracker # imm = 0x8266
	movw	$65, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_82
# %bb.72:                               # %Buffer__8
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11294, %ax             # imm = 0x2C1E
	cmpw	$-20872, %ax            # imm = 0xAE78
	jne	.LBB63_428
# %bb.73:                               # %HandlePtell.split908
	movw	$-20872, BasicBlockSignatureTracker # imm = 0xAE78
	movw	$11363, RunTimeSignatureAdjuster # imm = 0x2C63
.LBB63_74:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$114, %ax
	xorw	%cx, %ax
	cmpw	$-32151, %ax            # imm = 0x8269
	jne	.LBB63_428
# %bb.75:                               # %HandlePtell.split890
	movl	comp_color, %eax
	movw	$-32151, BasicBlockSignatureTracker # imm = 0x8269
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_78
# %bb.76:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-32143, %ax            # imm = 0x8271
	jne	.LBB63_428
# %bb.77:                               # %HandlePtell.split910
	movl	hand_value+4, %eax
	addl	$25, %eax
	movl	%eax, hand_value+4
	movl	hand_value+12, %eax
	addl	$50, %eax
	movl	%eax, hand_value+12
	movl	hand_value+44, %eax
	addl	$50, %eax
	movl	%eax, hand_value+44
	movl	hand_value+28, %eax
	addl	$50, %eax
	movl	%eax, hand_value+28
	movl	hand_value+36, %eax
	addl	$100, %eax
	movl	%eax, hand_value+36
	movw	$-32143, BasicBlockSignatureTracker # imm = 0x8271
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_80
.LBB63_78:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-32137, %ax            # imm = 0x8277
	jne	.LBB63_428
# %bb.79:                               # %HandlePtell.split912
	movl	hand_value+8, %eax
	subl	$25, %eax
	movl	%eax, hand_value+8
	movl	hand_value+16, %eax
	subl	$50, %eax
	movl	%eax, hand_value+16
	movl	hand_value+48, %eax
	subl	$50, %eax
	movl	%eax, hand_value+48
	movl	hand_value+32, %eax
	subl	$50, %eax
	movl	%eax, hand_value+32
	movl	hand_value+40, %eax
	subl	$100, %eax
	movl	%eax, hand_value+40
	movw	$-32137, BasicBlockSignatureTracker # imm = 0x8277
	movw	$6, RunTimeSignatureAdjuster
.LBB63_80:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-32132, %ax            # imm = 0x827C
	jne	.LBB63_428
# %bb.81:                               # %HandlePtell.split914
	movabsq	$.L.str.35, %rdi
	movb	$0, %al
	callq	printf
	movw	$-32132, BasicBlockSignatureTracker # imm = 0x827C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_102
.LBB63_82:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$171, %ax
	xorw	%cx, %ax
	cmpw	$-32116, %ax            # imm = 0x828C
	jne	.LBB63_428
# %bb.83:                               # %HandlePtell.split896
	movabsq	$.L.str.36, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32116, BasicBlockSignatureTracker # imm = 0x828C
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_86
# %bb.84:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-32111, %ax            # imm = 0x8291
	jne	.LBB63_428
# %bb.85:                               # %HandlePtell.split918
	movl	$50000, (%r12)          # imm = 0xC350
	movq	%r14, %rdi
	movl	$.L.str.37, %esi
	callq	strcpy
	movw	$-32111, BasicBlockSignatureTracker # imm = 0x8291
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_100
.LBB63_86:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-32098, %ax            # imm = 0x829E
	jne	.LBB63_428
# %bb.87:                               # %HandlePtell.split920
	movabsq	$.L.str.38, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32098, BasicBlockSignatureTracker # imm = 0x829E
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_90
# %bb.88:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$52, %ax
	cmpw	$-32086, %ax            # imm = 0x82AA
	jne	.LBB63_428
# %bb.89:                               # %HandlePtell.split924
	movl	$1000, (%r12)           # imm = 0x3E8
	movq	%r14, %rdi
	movl	$.L.str.39, %esi
	callq	strcpy
	movw	$-32086, BasicBlockSignatureTracker # imm = 0x82AA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_98
.LBB63_90:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$33, %ax
	cmpw	$-32065, %ax            # imm = 0x82BF
	jne	.LBB63_428
# %bb.91:                               # %HandlePtell.split926
	movabsq	$.L.str.26, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-32065, BasicBlockSignatureTracker # imm = 0x82BF
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_94
# %bb.92:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$122, %ax
	cmpw	$-32059, %ax            # imm = 0x82C5
	jne	.LBB63_428
# %bb.93:                               # %HandlePtell.split930
	movl	$150, (%r12)
	movq	%r14, %rdi
	movl	$.L.str.40, %esi
	callq	strcpy
	movw	$-32059, BasicBlockSignatureTracker # imm = 0x82C5
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_96
.LBB63_94:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$-32051, %ax            # imm = 0x82CD
	jne	.LBB63_428
# %bb.95:                               # %HandlePtell.split932
	xorl	%eax, %eax
	movl	$0, (%rax)
	movw	$-32051, BasicBlockSignatureTracker # imm = 0x82CD
	movw	$8, RunTimeSignatureAdjuster
.LBB63_96:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-32033, %ax            # imm = 0x82DF
	jne	.LBB63_428
# %bb.97:                               # %HandlePtell.split934
	movw	$-32033, BasicBlockSignatureTracker # imm = 0x82DF
	movw	$117, RunTimeSignatureAdjuster
.LBB63_98:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$83, %ax
	xorw	%cx, %ax
	cmpw	$-32007, %ax            # imm = 0x82F9
	jne	.LBB63_428
# %bb.99:                               # %HandlePtell.split928
	movw	$-32007, BasicBlockSignatureTracker # imm = 0x82F9
	movw	$104, RunTimeSignatureAdjuster
.LBB63_100:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$400, %ax               # imm = 0x190
	xorw	%cx, %ax
	cmpw	$-31999, %ax            # imm = 0x8301
	jne	.LBB63_428
# %bb.101:                              # %HandlePtell.split922
	movw	$-31999, BasicBlockSignatureTracker # imm = 0x8301
	movw	$381, RunTimeSignatureAdjuster # imm = 0x17D
.LBB63_102:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$382, %ax               # imm = 0x17E
	xorw	%cx, %ax
	cmpw	$-31998, %ax            # imm = 0x8302
	jne	.LBB63_428
# %bb.103:                              # %HandlePtell.split916
	movabsq	$.L.str.28, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31998, BasicBlockSignatureTracker # imm = 0x8302
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_112
# %bb.104:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-31984, %ax            # imm = 0x8310
	jne	.LBB63_428
# %bb.105:                              # %HandlePtell.split936
	movl	comp_color, %eax
	movw	$-31984, BasicBlockSignatureTracker # imm = 0x8310
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_108
# %bb.106:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-31980, %ax            # imm = 0x8314
	jne	.LBB63_428
# %bb.107:                              # %HandlePtell.split940
	movl	std_hand_value+12, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+12
	movw	$-31980, BasicBlockSignatureTracker # imm = 0x8314
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_110
.LBB63_108:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-31976, %ax            # imm = 0x8318
	jne	.LBB63_428
# %bb.109:                              # %HandlePtell.split942
	movl	std_hand_value+16, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+16
	movw	$-31976, BasicBlockSignatureTracker # imm = 0x8318
	movw	$12, RunTimeSignatureAdjuster
.LBB63_110:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-31974, %ax            # imm = 0x831A
	jne	.LBB63_428
# %bb.111:                              # %HandlePtell.split944
	movabsq	$.L.str.41, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-31974, BasicBlockSignatureTracker # imm = 0x831A
	movw	$24, RunTimeSignatureAdjuster
.LBB63_112:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$37, %ax
	xorw	%cx, %ax
	cmpw	$-31961, %ax            # imm = 0x8327
	jne	.LBB63_428
# %bb.113:                              # %HandlePtell.split938
	movabsq	$.L.str.29, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31961, BasicBlockSignatureTracker # imm = 0x8327
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_128
# %bb.114:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-31953, %ax            # imm = 0x832F
	jne	.LBB63_428
# %bb.115:                              # %HandlePtell.split946
	movl	comp_color, %eax
	movw	$-31953, BasicBlockSignatureTracker # imm = 0x832F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_118
# %bb.116:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-31948, %ax            # imm = 0x8334
	jne	.LBB63_428
# %bb.117:                              # %HandlePtell.split950
	movl	std_hand_value+44, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+44
	movw	$-31948, BasicBlockSignatureTracker # imm = 0x8334
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_120
.LBB63_118:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-31943, %ax            # imm = 0x8339
	jne	.LBB63_428
# %bb.119:                              # %HandlePtell.split952
	movl	std_hand_value+48, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+48
	movw	$-31943, BasicBlockSignatureTracker # imm = 0x8339
	movw	$13, RunTimeSignatureAdjuster
.LBB63_120:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$-31926, %ax            # imm = 0x834A
	jne	.LBB63_428
# %bb.121:                              # %HandlePtell.split954
	movl	comp_color, %eax
	movw	$-31926, BasicBlockSignatureTracker # imm = 0x834A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_124
# %bb.122:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-31921, %ax            # imm = 0x834F
	jne	.LBB63_428
# %bb.123:                              # %HandlePtell.split956
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movw	$-31921, BasicBlockSignatureTracker # imm = 0x834F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_126
.LBB63_124:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-31918, %ax            # imm = 0x8352
	jne	.LBB63_428
# %bb.125:                              # %HandlePtell.split958
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movw	$-31918, BasicBlockSignatureTracker # imm = 0x8352
	movw	$29, RunTimeSignatureAdjuster
.LBB63_126:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$-31901, %ax            # imm = 0x8363
	jne	.LBB63_428
# %bb.127:                              # %HandlePtell.split960
	movabsq	$.L.str.42, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-31901, BasicBlockSignatureTracker # imm = 0x8363
	movw	$68, RunTimeSignatureAdjuster
.LBB63_128:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$84, %ax
	xorw	%cx, %ax
	cmpw	$-31885, %ax            # imm = 0x8373
	jne	.LBB63_428
# %bb.129:                              # %HandlePtell.split948
	movabsq	$.L.str.31, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31885, BasicBlockSignatureTracker # imm = 0x8373
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_144
# %bb.130:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-31880, %ax            # imm = 0x8378
	jne	.LBB63_428
# %bb.131:                              # %HandlePtell.split962
	movl	comp_color, %eax
	movw	$-31880, BasicBlockSignatureTracker # imm = 0x8378
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_134
# %bb.132:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$255, %ax
	cmpw	$-31865, %ax            # imm = 0x8387
	jne	.LBB63_428
# %bb.133:                              # %HandlePtell.split966
	movl	std_hand_value+28, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+28
	movw	$-31865, BasicBlockSignatureTracker # imm = 0x8387
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_136
.LBB63_134:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$243, %ax
	cmpw	$-31861, %ax            # imm = 0x838B
	jne	.LBB63_428
# %bb.135:                              # %HandlePtell.split968
	movl	std_hand_value+32, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+32
	movw	$-31861, BasicBlockSignatureTracker # imm = 0x838B
	movw	$12, RunTimeSignatureAdjuster
.LBB63_136:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-31847, %ax            # imm = 0x8399
	jne	.LBB63_428
# %bb.137:                              # %HandlePtell.split970
	movl	comp_color, %eax
	movw	$-31847, BasicBlockSignatureTracker # imm = 0x8399
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_140
# %bb.138:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$-31839, %ax            # imm = 0x83A1
	jne	.LBB63_428
# %bb.139:                              # %HandlePtell.split972
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movw	$-31839, BasicBlockSignatureTracker # imm = 0x83A1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_142
.LBB63_140:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-31832, %ax            # imm = 0x83A8
	jne	.LBB63_428
# %bb.141:                              # %HandlePtell.split974
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movw	$-31832, BasicBlockSignatureTracker # imm = 0x83A8
	movw	$9, RunTimeSignatureAdjuster
.LBB63_142:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-31830, %ax            # imm = 0x83AA
	jne	.LBB63_428
# %bb.143:                              # %HandlePtell.split976
	movabsq	$.L.str.43, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-31830, BasicBlockSignatureTracker # imm = 0x83AA
	movw	$217, RunTimeSignatureAdjuster
.LBB63_144:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$216, %ax
	xorw	%cx, %ax
	cmpw	$-31829, %ax            # imm = 0x83AB
	jne	.LBB63_428
# %bb.145:                              # %HandlePtell.split964
	movabsq	$.L.str.32, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31829, BasicBlockSignatureTracker # imm = 0x83AB
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_154
# %bb.146:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-31821, %ax            # imm = 0x83B3
	jne	.LBB63_428
# %bb.147:                              # %HandlePtell.split978
	movl	comp_color, %eax
	movw	$-31821, BasicBlockSignatureTracker # imm = 0x83B3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_150
# %bb.148:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$92, %ax
	cmpw	$-31761, %ax            # imm = 0x83EF
	jne	.LBB63_428
# %bb.149:                              # %HandlePtell.split982
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movw	$-31761, BasicBlockSignatureTracker # imm = 0x83EF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_152
.LBB63_150:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$65, %ax
	cmpw	$-31758, %ax            # imm = 0x83F2
	jne	.LBB63_428
# %bb.151:                              # %HandlePtell.split984
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movw	$-31758, BasicBlockSignatureTracker # imm = 0x83F2
	movw	$29, RunTimeSignatureAdjuster
.LBB63_152:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-31756, %ax            # imm = 0x83F4
	jne	.LBB63_428
# %bb.153:                              # %HandlePtell.split986
	movabsq	$.L.str.44, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-31756, BasicBlockSignatureTracker # imm = 0x83F4
	movw	$95, RunTimeSignatureAdjuster
.LBB63_154:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$93, %ax
	xorw	%cx, %ax
	cmpw	$-31754, %ax            # imm = 0x83F6
	jne	.LBB63_428
# %bb.155:                              # %HandlePtell.split980
	movabsq	$.L.str.30, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31754, BasicBlockSignatureTracker # imm = 0x83F6
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_170
# %bb.156:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2039, %ax              # imm = 0x7F7
	cmpw	$-31743, %ax            # imm = 0x8401
	jne	.LBB63_428
# %bb.157:                              # %HandlePtell.split988
	movl	comp_color, %eax
	movw	$-31743, BasicBlockSignatureTracker # imm = 0x8401
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_160
# %bb.158:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-31735, %ax            # imm = 0x8409
	jne	.LBB63_428
# %bb.159:                              # %HandlePtell.split992
	movl	std_hand_value+4, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+4
	movw	$-31735, BasicBlockSignatureTracker # imm = 0x8409
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_162
.LBB63_160:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-31726, %ax            # imm = 0x8412
	jne	.LBB63_428
# %bb.161:                              # %HandlePtell.split994
	movl	std_hand_value+8, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+8
	movw	$-31726, BasicBlockSignatureTracker # imm = 0x8412
	movw	$27, RunTimeSignatureAdjuster
.LBB63_162:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-31719, %ax            # imm = 0x8419
	jne	.LBB63_428
# %bb.163:                              # %HandlePtell.split996
	movl	comp_color, %eax
	movw	$-31719, BasicBlockSignatureTracker # imm = 0x8419
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_166
# %bb.164:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-31710, %ax            # imm = 0x8422
	jne	.LBB63_428
# %bb.165:                              # %HandlePtell.split998
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movl	std_hand_value+44, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+44
	movw	$-31710, BasicBlockSignatureTracker # imm = 0x8422
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_168
.LBB63_166:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$39, %ax
	cmpw	$-31682, %ax            # imm = 0x843E
	jne	.LBB63_428
# %bb.167:                              # %HandlePtell.split1000
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movl	std_hand_value+48, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+48
	movw	$-31682, BasicBlockSignatureTracker # imm = 0x843E
	movw	$28, RunTimeSignatureAdjuster
.LBB63_168:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$98, %ax
	xorw	%cx, %ax
	cmpw	$-31680, %ax            # imm = 0x8440
	jne	.LBB63_428
# %bb.169:                              # %HandlePtell.split1002
	movabsq	$.L.str.45, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-31680, BasicBlockSignatureTracker # imm = 0x8440
	movw	$1974, RunTimeSignatureAdjuster # imm = 0x7B6
.LBB63_170:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1972, %ax              # imm = 0x7B4
	xorw	%cx, %ax
	cmpw	$-31678, %ax            # imm = 0x8442
	jne	.LBB63_428
# %bb.171:                              # %HandlePtell.split990
	movabsq	$.L.str.33, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31678, BasicBlockSignatureTracker # imm = 0x8442
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_180
# %bb.172:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-31660, %ax            # imm = 0x8454
	jne	.LBB63_428
# %bb.173:                              # %HandlePtell.split1004
	movl	comp_color, %eax
	movw	$-31660, BasicBlockSignatureTracker # imm = 0x8454
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_176
# %bb.174:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-31650, %ax            # imm = 0x845E
	jne	.LBB63_428
# %bb.175:                              # %HandlePtell.split1008
	movl	std_hand_value+4, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+4
	movl	std_hand_value+44, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+44
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movw	$-31650, BasicBlockSignatureTracker # imm = 0x845E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_178
.LBB63_176:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32, %ax
	cmpw	$-31628, %ax            # imm = 0x8474
	jne	.LBB63_428
# %bb.177:                              # %HandlePtell.split1010
	movl	std_hand_value+8, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+8
	movl	std_hand_value+48, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+48
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movw	$-31628, BasicBlockSignatureTracker # imm = 0x8474
	movw	$42, RunTimeSignatureAdjuster
.LBB63_178:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$232, %ax
	xorw	%cx, %ax
	cmpw	$-31562, %ax            # imm = 0x84B6
	jne	.LBB63_428
# %bb.179:                              # %HandlePtell.split1012
	movabsq	$.L.str.46, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-31562, BasicBlockSignatureTracker # imm = 0x84B6
	movw	$244, RunTimeSignatureAdjuster
.LBB63_180:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$151, %ax
	xorw	%cx, %ax
	cmpw	$-31531, %ax            # imm = 0x84D5
	jne	.LBB63_428
# %bb.181:                              # %HandlePtell.split1006
	movabsq	$.L.str.34, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31531, BasicBlockSignatureTracker # imm = 0x84D5
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_190
# %bb.182:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-31511, %ax            # imm = 0x84E9
	jne	.LBB63_428
# %bb.183:                              # %HandlePtell.split1014
	movl	comp_color, %eax
	movw	$-31511, BasicBlockSignatureTracker # imm = 0x84E9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_186
# %bb.184:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-31509, %ax            # imm = 0x84EB
	jne	.LBB63_428
# %bb.185:                              # %HandlePtell.split1018
	movl	std_hand_value+28, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+28
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movw	$-31509, BasicBlockSignatureTracker # imm = 0x84EB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_188
.LBB63_186:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$481, %ax               # imm = 0x1E1
	cmpw	$-31480, %ax            # imm = 0x8508
	jne	.LBB63_428
# %bb.187:                              # %HandlePtell.split1020
	movl	std_hand_value+32, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+32
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movw	$-31480, BasicBlockSignatureTracker # imm = 0x8508
	movw	$483, RunTimeSignatureAdjuster # imm = 0x1E3
.LBB63_188:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$454, %ax               # imm = 0x1C6
	xorw	%cx, %ax
	cmpw	$-31443, %ax            # imm = 0x852D
	jne	.LBB63_428
# %bb.189:                              # %HandlePtell.split1022
	movabsq	$.L.str.47, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-31443, BasicBlockSignatureTracker # imm = 0x852D
	movw	$504, RunTimeSignatureAdjuster # imm = 0x1F8
.LBB63_190:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$506, %ax               # imm = 0x1FA
	xorw	%cx, %ax
	cmpw	$-31441, %ax            # imm = 0x852F
	jne	.LBB63_428
# %bb.191:                              # %HandlePtell.split1016
	movw	$-31441, BasicBlockSignatureTracker # imm = 0x852F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_412
.LBB63_192:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1830, %ax              # imm = 0x726
	cmpw	$-31436, %ax            # imm = 0x8534
	jne	.LBB63_428
# %bb.193:                              # %HandlePtell.split886
	movabsq	$.L.str.48, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$1, %edx
	callq	strncmp
	movw	$-31436, BasicBlockSignatureTracker # imm = 0x8534
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_340
# %bb.194:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$-31421, %ax            # imm = 0x8543
	jne	.LBB63_428
# %bb.195:                              # %HandlePtell.split1028
	movabsq	$.L.str.27.47, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31421, BasicBlockSignatureTracker # imm = 0x8543
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_222
# %bb.196:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-31420, %ax            # imm = 0x8544
	jne	.LBB63_428
# %bb.197:                              # %HandlePtell.split1032
	movabsq	$.L.str.28, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31420, BasicBlockSignatureTracker # imm = 0x8544
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_230
# %bb.198:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-31412, %ax            # imm = 0x854C
	jne	.LBB63_428
# %bb.199:                              # %HandlePtell.split1034
	movabsq	$.L.str.29, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31412, BasicBlockSignatureTracker # imm = 0x854C
	movw	$8, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_230
# %bb.200:                              # %Buffer__9
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7506, %ax              # imm = 0x1D52
	cmpw	$-26594, %ax            # imm = 0x981E
	jne	.LBB63_428
# %bb.201:                              # %HandlePtell.split1038
	movw	$-26594, BasicBlockSignatureTracker # imm = 0x981E
	movw	$7506, RunTimeSignatureAdjuster # imm = 0x1D52
# %bb.202:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$-31380, %ax            # imm = 0x856C
	jne	.LBB63_428
# %bb.203:                              # %HandlePtell.split1244
	movabsq	$.L.str.30, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31380, BasicBlockSignatureTracker # imm = 0x856C
	movw	$40, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_230
# %bb.204:                              # %Buffer__10
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16664, %ax             # imm = 0x4118
	cmpw	$-15244, %ax            # imm = 0xC474
	jne	.LBB63_428
# %bb.205:                              # %HandlePtell.split1040
	movw	$-15244, BasicBlockSignatureTracker # imm = 0xC474
	movw	$16664, RunTimeSignatureAdjuster # imm = 0x4118
# %bb.206:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$-31375, %ax            # imm = 0x8571
	jne	.LBB63_428
# %bb.207:                              # %HandlePtell.split1246
	movabsq	$.L.str.31, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31375, BasicBlockSignatureTracker # imm = 0x8571
	movw	$53, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_230
# %bb.208:                              # %Buffer__11
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-2807, %ax             # imm = 0xF509
	cmpw	$28792, %ax             # imm = 0x7078
	jne	.LBB63_428
# %bb.209:                              # %HandlePtell.split1042
	movw	$28792, BasicBlockSignatureTracker # imm = 0x7078
	movw	$-2807, RunTimeSignatureAdjuster # imm = 0xF509
# %bb.210:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-31374, %ax            # imm = 0x8572
	jne	.LBB63_428
# %bb.211:                              # %HandlePtell.split1248
	movabsq	$.L.str.32, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31374, BasicBlockSignatureTracker # imm = 0x8572
	movw	$54, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_230
# %bb.212:                              # %Buffer__12
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25090, %ax             # imm = 0x6202
	cmpw	$-6288, %ax             # imm = 0xE770
	jne	.LBB63_428
# %bb.213:                              # %HandlePtell.split1044
	movw	$-6288, BasicBlockSignatureTracker # imm = 0xE770
	movw	$25090, RunTimeSignatureAdjuster # imm = 0x6202
# %bb.214:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-31372, %ax            # imm = 0x8574
	jne	.LBB63_428
# %bb.215:                              # %HandlePtell.split1250
	movabsq	$.L.str.33, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31372, BasicBlockSignatureTracker # imm = 0x8574
	movw	$48, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_230
# %bb.216:                              # %Buffer__13
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19994, %ax             # imm = 0x4E1A
	cmpw	$-13458, %ax            # imm = 0xCB6E
	jne	.LBB63_428
# %bb.217:                              # %HandlePtell.split1046
	movw	$-13458, BasicBlockSignatureTracker # imm = 0xCB6E
	movw	$19994, RunTimeSignatureAdjuster # imm = 0x4E1A
# %bb.218:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-31369, %ax            # imm = 0x8577
	jne	.LBB63_428
# %bb.219:                              # %HandlePtell.split1252
	movabsq	$.L.str.34, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31369, BasicBlockSignatureTracker # imm = 0x8577
	movw	$51, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_230
# %bb.220:                              # %Buffer__14
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23200, %ax             # imm = 0x5AA0
	cmpw	$-8233, %ax             # imm = 0xDFD7
	jne	.LBB63_428
# %bb.221:                              # %HandlePtell.split1048
	movw	$-8233, BasicBlockSignatureTracker # imm = 0xDFD7
	movw	$23188, RunTimeSignatureAdjuster # imm = 0x5A94
.LBB63_222:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$201, %ax
	xorw	%cx, %ax
	cmpw	$-31350, %ax            # imm = 0x858A
	jne	.LBB63_428
# %bb.223:                              # %HandlePtell.split1030
	movl	comp_color, %eax
	movw	$-31350, BasicBlockSignatureTracker # imm = 0x858A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_226
# %bb.224:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$-31327, %ax            # imm = 0x85A1
	jne	.LBB63_428
# %bb.225:                              # %HandlePtell.split1050
	movl	hand_value+8, %eax
	subl	$20, %eax
	movl	%eax, hand_value+8
	movl	hand_value+16, %eax
	subl	$50, %eax
	movl	%eax, hand_value+16
	movl	hand_value+48, %eax
	subl	$50, %eax
	movl	%eax, hand_value+48
	movl	hand_value+32, %eax
	subl	$50, %eax
	movl	%eax, hand_value+32
	movl	hand_value+40, %eax
	subl	$100, %eax
	movl	%eax, hand_value+40
	movw	$-31327, BasicBlockSignatureTracker # imm = 0x85A1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_228
.LBB63_226:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$-31324, %ax            # imm = 0x85A4
	jne	.LBB63_428
# %bb.227:                              # %HandlePtell.split1052
	movl	hand_value+4, %eax
	addl	$20, %eax
	movl	%eax, hand_value+4
	movl	hand_value+12, %eax
	addl	$50, %eax
	movl	%eax, hand_value+12
	movl	hand_value+44, %eax
	addl	$50, %eax
	movl	%eax, hand_value+44
	movl	hand_value+28, %eax
	addl	$50, %eax
	movl	%eax, hand_value+28
	movl	hand_value+36, %eax
	addl	$100, %eax
	movl	%eax, hand_value+36
	movw	$-31324, BasicBlockSignatureTracker # imm = 0x85A4
	movw	$5, RunTimeSignatureAdjuster
.LBB63_228:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-31318, %ax            # imm = 0x85AA
	jne	.LBB63_428
# %bb.229:                              # %HandlePtell.split1054
	movabsq	$.L.str.49, %rdi
	movb	$0, %al
	callq	printf
	movw	$-31318, BasicBlockSignatureTracker # imm = 0x85AA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_250
.LBB63_230:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$239, %ax
	xorw	%cx, %ax
	cmpw	$-31317, %ax            # imm = 0x85AB
	jne	.LBB63_428
# %bb.231:                              # %HandlePtell.split1036
	movabsq	$.L.str.50, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31317, BasicBlockSignatureTracker # imm = 0x85AB
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_234
# %bb.232:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-31312, %ax            # imm = 0x85B0
	jne	.LBB63_428
# %bb.233:                              # %HandlePtell.split1058
	movl	$50000, (%r12)          # imm = 0xC350
	movq	%r14, %rdi
	movl	$.L.str.51, %esi
	callq	strcpy
	movw	$-31312, BasicBlockSignatureTracker # imm = 0x85B0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_248
.LBB63_234:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-31297, %ax            # imm = 0x85BF
	jne	.LBB63_428
# %bb.235:                              # %HandlePtell.split1060
	movabsq	$.L.str.52, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31297, BasicBlockSignatureTracker # imm = 0x85BF
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_238
# %bb.236:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$118, %ax
	cmpw	$-31287, %ax            # imm = 0x85C9
	jne	.LBB63_428
# %bb.237:                              # %HandlePtell.split1064
	movl	$1000, (%r12)           # imm = 0x3E8
	movq	%r14, %rdi
	movl	$.L.str.53, %esi
	callq	strcpy
	movw	$-31287, BasicBlockSignatureTracker # imm = 0x85C9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_246
.LBB63_238:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$115, %ax
	cmpw	$-31284, %ax            # imm = 0x85CC
	jne	.LBB63_428
# %bb.239:                              # %HandlePtell.split1066
	movabsq	$.L.str.48, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31284, BasicBlockSignatureTracker # imm = 0x85CC
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_242
# %bb.240:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-31283, %ax            # imm = 0x85CD
	jne	.LBB63_428
# %bb.241:                              # %HandlePtell.split1070
	movl	$150, (%r12)
	movq	%r14, %rdi
	movl	$.L.str.54, %esi
	callq	strcpy
	movw	$-31283, BasicBlockSignatureTracker # imm = 0x85CD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_244
.LBB63_242:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-31237, %ax            # imm = 0x85FB
	jne	.LBB63_428
# %bb.243:                              # %HandlePtell.split1072
	xorl	%eax, %eax
	movl	$0, (%rax)
	movw	$-31237, BasicBlockSignatureTracker # imm = 0x85FB
	movw	$54, RunTimeSignatureAdjuster
.LBB63_244:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$967, %ax               # imm = 0x3C7
	xorw	%cx, %ax
	cmpw	$-31222, %ax            # imm = 0x860A
	jne	.LBB63_428
# %bb.245:                              # %HandlePtell.split1074
	movw	$-31222, BasicBlockSignatureTracker # imm = 0x860A
	movw	$963, RunTimeSignatureAdjuster # imm = 0x3C3
.LBB63_246:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$984, %ax               # imm = 0x3D8
	xorw	%cx, %ax
	cmpw	$-31215, %ax            # imm = 0x8611
	jne	.LBB63_428
# %bb.247:                              # %HandlePtell.split1068
	movw	$-31215, BasicBlockSignatureTracker # imm = 0x8611
	movw	$929, RunTimeSignatureAdjuster # imm = 0x3A1
.LBB63_248:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$902, %ax               # imm = 0x386
	xorw	%cx, %ax
	cmpw	$-31178, %ax            # imm = 0x8636
	jne	.LBB63_428
# %bb.249:                              # %HandlePtell.split1062
	movw	$-31178, BasicBlockSignatureTracker # imm = 0x8636
	movw	$924, RunTimeSignatureAdjuster # imm = 0x39C
.LBB63_250:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$915, %ax               # imm = 0x393
	xorw	%cx, %ax
	cmpw	$-31175, %ax            # imm = 0x8639
	jne	.LBB63_428
# %bb.251:                              # %HandlePtell.split1056
	movabsq	$.L.str.28, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31175, BasicBlockSignatureTracker # imm = 0x8639
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_260
# %bb.252:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$-31167, %ax            # imm = 0x8641
	jne	.LBB63_428
# %bb.253:                              # %HandlePtell.split1076
	movl	comp_color, %eax
	movw	$-31167, BasicBlockSignatureTracker # imm = 0x8641
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_256
# %bb.254:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-31155, %ax            # imm = 0x864D
	jne	.LBB63_428
# %bb.255:                              # %HandlePtell.split1080
	movl	std_hand_value+16, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+16
	movw	$-31155, BasicBlockSignatureTracker # imm = 0x864D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_258
.LBB63_256:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-31142, %ax            # imm = 0x865A
	jne	.LBB63_428
# %bb.257:                              # %HandlePtell.split1082
	movl	std_hand_value+12, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+12
	movw	$-31142, BasicBlockSignatureTracker # imm = 0x865A
	movw	$23, RunTimeSignatureAdjuster
.LBB63_258:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$-31132, %ax            # imm = 0x8664
	jne	.LBB63_428
# %bb.259:                              # %HandlePtell.split1084
	movabsq	$.L.str.41, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-31132, BasicBlockSignatureTracker # imm = 0x8664
	movw	$93, RunTimeSignatureAdjuster
.LBB63_260:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$185, %ax
	xorw	%cx, %ax
	cmpw	$-31104, %ax            # imm = 0x8680
	jne	.LBB63_428
# %bb.261:                              # %HandlePtell.split1078
	movabsq	$.L.str.29, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31104, BasicBlockSignatureTracker # imm = 0x8680
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_276
# %bb.262:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-31097, %ax            # imm = 0x8687
	jne	.LBB63_428
# %bb.263:                              # %HandlePtell.split1086
	movl	comp_color, %eax
	movw	$-31097, BasicBlockSignatureTracker # imm = 0x8687
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_266
# %bb.264:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-31090, %ax            # imm = 0x868E
	jne	.LBB63_428
# %bb.265:                              # %HandlePtell.split1090
	movl	std_hand_value+48, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+48
	movw	$-31090, BasicBlockSignatureTracker # imm = 0x868E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_268
.LBB63_266:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-31089, %ax            # imm = 0x868F
	jne	.LBB63_428
# %bb.267:                              # %HandlePtell.split1092
	movl	std_hand_value+44, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+44
	movw	$-31089, BasicBlockSignatureTracker # imm = 0x868F
	movw	$1, RunTimeSignatureAdjuster
.LBB63_268:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-31083, %ax            # imm = 0x8695
	jne	.LBB63_428
# %bb.269:                              # %HandlePtell.split1094
	movl	comp_color, %eax
	movw	$-31083, BasicBlockSignatureTracker # imm = 0x8695
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_272
# %bb.270:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-31068, %ax            # imm = 0x86A4
	jne	.LBB63_428
# %bb.271:                              # %HandlePtell.split1096
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movw	$-31068, BasicBlockSignatureTracker # imm = 0x86A4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_274
.LBB63_272:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$38, %ax
	cmpw	$-31053, %ax            # imm = 0x86B3
	jne	.LBB63_428
# %bb.273:                              # %HandlePtell.split1098
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movw	$-31053, BasicBlockSignatureTracker # imm = 0x86B3
	movw	$23, RunTimeSignatureAdjuster
.LBB63_274:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$-31049, %ax            # imm = 0x86B7
	jne	.LBB63_428
# %bb.275:                              # %HandlePtell.split1100
	movabsq	$.L.str.42, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-31049, BasicBlockSignatureTracker # imm = 0x86B7
	movw	$55, RunTimeSignatureAdjuster
.LBB63_276:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$73, %ax
	xorw	%cx, %ax
	cmpw	$-31031, %ax            # imm = 0x86C9
	jne	.LBB63_428
# %bb.277:                              # %HandlePtell.split1088
	movabsq	$.L.str.31, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-31031, BasicBlockSignatureTracker # imm = 0x86C9
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_292
# %bb.278:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-31026, %ax            # imm = 0x86CE
	jne	.LBB63_428
# %bb.279:                              # %HandlePtell.split1102
	movl	comp_color, %eax
	movw	$-31026, BasicBlockSignatureTracker # imm = 0x86CE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_282
# %bb.280:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$-31023, %ax            # imm = 0x86D1
	jne	.LBB63_428
# %bb.281:                              # %HandlePtell.split1106
	movl	std_hand_value+32, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+32
	movw	$-31023, BasicBlockSignatureTracker # imm = 0x86D1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_284
.LBB63_282:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-31022, %ax            # imm = 0x86D2
	jne	.LBB63_428
# %bb.283:                              # %HandlePtell.split1108
	movl	std_hand_value+28, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+28
	movw	$-31022, BasicBlockSignatureTracker # imm = 0x86D2
	movw	$3, RunTimeSignatureAdjuster
.LBB63_284:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$-31006, %ax            # imm = 0x86E2
	jne	.LBB63_428
# %bb.285:                              # %HandlePtell.split1110
	movl	comp_color, %eax
	movw	$-31006, BasicBlockSignatureTracker # imm = 0x86E2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_288
# %bb.286:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-30993, %ax            # imm = 0x86EF
	jne	.LBB63_428
# %bb.287:                              # %HandlePtell.split1112
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movw	$-30993, BasicBlockSignatureTracker # imm = 0x86EF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_290
.LBB63_288:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$-30979, %ax            # imm = 0x86FD
	jne	.LBB63_428
# %bb.289:                              # %HandlePtell.split1114
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movw	$-30979, BasicBlockSignatureTracker # imm = 0x86FD
	movw	$18, RunTimeSignatureAdjuster
.LBB63_290:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$491, %ax               # imm = 0x1EB
	xorw	%cx, %ax
	cmpw	$-30972, %ax            # imm = 0x8704
	jne	.LBB63_428
# %bb.291:                              # %HandlePtell.split1116
	movabsq	$.L.str.43, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-30972, BasicBlockSignatureTracker # imm = 0x8704
	movw	$461, RunTimeSignatureAdjuster # imm = 0x1CD
.LBB63_292:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$488, %ax               # imm = 0x1E8
	xorw	%cx, %ax
	cmpw	$-30943, %ax            # imm = 0x8721
	jne	.LBB63_428
# %bb.293:                              # %HandlePtell.split1104
	movabsq	$.L.str.32, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-30943, BasicBlockSignatureTracker # imm = 0x8721
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_302
# %bb.294:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-30931, %ax            # imm = 0x872D
	jne	.LBB63_428
# %bb.295:                              # %HandlePtell.split1118
	movl	comp_color, %eax
	movw	$-30931, BasicBlockSignatureTracker # imm = 0x872D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_298
# %bb.296:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-30930, %ax            # imm = 0x872E
	jne	.LBB63_428
# %bb.297:                              # %HandlePtell.split1122
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movw	$-30930, BasicBlockSignatureTracker # imm = 0x872E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_300
.LBB63_298:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$108, %ax
	cmpw	$-30911, %ax            # imm = 0x8741
	jne	.LBB63_428
# %bb.299:                              # %HandlePtell.split1124
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movw	$-30911, BasicBlockSignatureTracker # imm = 0x8741
	movw	$111, RunTimeSignatureAdjuster
.LBB63_300:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$-30907, %ax            # imm = 0x8745
	jne	.LBB63_428
# %bb.301:                              # %HandlePtell.split1126
	movabsq	$.L.str.44, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-30907, BasicBlockSignatureTracker # imm = 0x8745
	movw	$100, RunTimeSignatureAdjuster
.LBB63_302:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$111, %ax
	xorw	%cx, %ax
	cmpw	$-30898, %ax            # imm = 0x874E
	jne	.LBB63_428
# %bb.303:                              # %HandlePtell.split1120
	movabsq	$.L.str.30, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-30898, BasicBlockSignatureTracker # imm = 0x874E
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_318
# %bb.304:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-30897, %ax            # imm = 0x874F
	jne	.LBB63_428
# %bb.305:                              # %HandlePtell.split1128
	movl	comp_color, %eax
	movw	$-30897, BasicBlockSignatureTracker # imm = 0x874F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_308
# %bb.306:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-30894, %ax            # imm = 0x8752
	jne	.LBB63_428
# %bb.307:                              # %HandlePtell.split1132
	movl	std_hand_value+8, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+8
	movw	$-30894, BasicBlockSignatureTracker # imm = 0x8752
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_310
.LBB63_308:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-30887, %ax            # imm = 0x8759
	jne	.LBB63_428
# %bb.309:                              # %HandlePtell.split1134
	movl	std_hand_value+4, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+4
	movw	$-30887, BasicBlockSignatureTracker # imm = 0x8759
	movw	$11, RunTimeSignatureAdjuster
.LBB63_310:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-30882, %ax            # imm = 0x875E
	jne	.LBB63_428
# %bb.311:                              # %HandlePtell.split1136
	movl	comp_color, %eax
	movw	$-30882, BasicBlockSignatureTracker # imm = 0x875E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_314
# %bb.312:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$39, %ax
	cmpw	$-30855, %ax            # imm = 0x8779
	jne	.LBB63_428
# %bb.313:                              # %HandlePtell.split1138
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movl	std_hand_value+48, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+48
	movw	$-30855, BasicBlockSignatureTracker # imm = 0x8779
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_316
.LBB63_314:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$254, %ax
	cmpw	$-30816, %ax            # imm = 0x87A0
	jne	.LBB63_428
# %bb.315:                              # %HandlePtell.split1140
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movl	std_hand_value+44, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+44
	movw	$-30816, BasicBlockSignatureTracker # imm = 0x87A0
	movw	$217, RunTimeSignatureAdjuster
.LBB63_316:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$192, %ax
	xorw	%cx, %ax
	cmpw	$-30791, %ax            # imm = 0x87B9
	jne	.LBB63_428
# %bb.317:                              # %HandlePtell.split1142
	movabsq	$.L.str.45, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-30791, BasicBlockSignatureTracker # imm = 0x87B9
	movw	$247, RunTimeSignatureAdjuster
.LBB63_318:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$136, %ax
	xorw	%cx, %ax
	cmpw	$-30778, %ax            # imm = 0x87C6
	jne	.LBB63_428
# %bb.319:                              # %HandlePtell.split1130
	movabsq	$.L.str.33, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-30778, BasicBlockSignatureTracker # imm = 0x87C6
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_328
# %bb.320:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$36, %ax
	cmpw	$-30750, %ax            # imm = 0x87E2
	jne	.LBB63_428
# %bb.321:                              # %HandlePtell.split1144
	movl	comp_color, %eax
	movw	$-30750, BasicBlockSignatureTracker # imm = 0x87E2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_324
# %bb.322:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-30744, %ax            # imm = 0x87E8
	jne	.LBB63_428
# %bb.323:                              # %HandlePtell.split1148
	movl	std_hand_value+8, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+8
	movl	std_hand_value+48, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+48
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movw	$-30744, BasicBlockSignatureTracker # imm = 0x87E8
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_326
.LBB63_324:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-30743, %ax            # imm = 0x87E9
	jne	.LBB63_428
# %bb.325:                              # %HandlePtell.split1150
	movl	std_hand_value+4, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+4
	movl	std_hand_value+44, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+44
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movw	$-30743, BasicBlockSignatureTracker # imm = 0x87E9
	movw	$1, RunTimeSignatureAdjuster
.LBB63_326:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-30726, %ax            # imm = 0x87FA
	jne	.LBB63_428
# %bb.327:                              # %HandlePtell.split1152
	movabsq	$.L.str.46, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-30726, BasicBlockSignatureTracker # imm = 0x87FA
	movw	$60, RunTimeSignatureAdjuster
.LBB63_328:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4046, %ax              # imm = 0xFCE
	xorw	%cx, %ax
	cmpw	$-30712, %ax            # imm = 0x8808
	jne	.LBB63_428
# %bb.329:                              # %HandlePtell.split1146
	movabsq	$.L.str.34, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-30712, BasicBlockSignatureTracker # imm = 0x8808
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_338
# %bb.330:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-30696, %ax            # imm = 0x8818
	jne	.LBB63_428
# %bb.331:                              # %HandlePtell.split1154
	movl	comp_color, %eax
	movw	$-30696, BasicBlockSignatureTracker # imm = 0x8818
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB63_334
# %bb.332:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-30679, %ax            # imm = 0x8829
	jne	.LBB63_428
# %bb.333:                              # %HandlePtell.split1158
	movl	std_hand_value+32, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+32
	movl	std_hand_value+40, %eax
	subl	(%r12), %eax
	movl	%eax, hand_value+40
	movw	$-30679, BasicBlockSignatureTracker # imm = 0x8829
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_336
.LBB63_334:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$80, %ax
	cmpw	$-30648, %ax            # imm = 0x8848
	jne	.LBB63_428
# %bb.335:                              # %HandlePtell.split1160
	movl	std_hand_value+28, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+28
	movl	std_hand_value+36, %eax
	addl	(%r12), %eax
	movl	%eax, hand_value+36
	movw	$-30648, BasicBlockSignatureTracker # imm = 0x8848
	movw	$97, RunTimeSignatureAdjuster
.LBB63_336:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$100, %ax
	xorw	%cx, %ax
	cmpw	$-30643, %ax            # imm = 0x884D
	jne	.LBB63_428
# %bb.337:                              # %HandlePtell.split1162
	movabsq	$.L.str.47, %rdi
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movw	$-30643, BasicBlockSignatureTracker # imm = 0x884D
	movw	$69, RunTimeSignatureAdjuster
.LBB63_338:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$89, %ax
	xorw	%cx, %ax
	cmpw	$-30639, %ax            # imm = 0x8851
	jne	.LBB63_428
# %bb.339:                              # %HandlePtell.split1156
	movw	$-30639, BasicBlockSignatureTracker # imm = 0x8851
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_410
.LBB63_340:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3439, %ax              # imm = 0xD6F
	cmpw	$-30629, %ax            # imm = 0x885B
	jne	.LBB63_428
# %bb.341:                              # %HandlePtell.split1026
	movabsq	$.L.str.55, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$1, %edx
	callq	strncmp
	movw	$-30629, BasicBlockSignatureTracker # imm = 0x885B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB63_354
# %bb.342:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-30623, %ax            # imm = 0x8861
	jne	.LBB63_428
# %bb.343:                              # %HandlePtell.split1166
	movabsq	$.L.str.56, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-30623, BasicBlockSignatureTracker # imm = 0x8861
	movw	$58, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_354
# %bb.344:                              # %Buffer__15
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26891, %ax             # imm = 0x690B
	cmpw	$-7830, %ax             # imm = 0xE16A
	jne	.LBB63_428
# %bb.345:                              # %HandlePtell.split1170
	movw	$-7830, BasicBlockSignatureTracker # imm = 0xE16A
	movw	$26891, RunTimeSignatureAdjuster # imm = 0x690B
# %bb.346:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-30622, %ax            # imm = 0x8862
	jne	.LBB63_428
# %bb.347:                              # %HandlePtell.split1254
	movabsq	$.L.str.57, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-30622, BasicBlockSignatureTracker # imm = 0x8862
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_350
# %bb.348:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-30617, %ax            # imm = 0x8867
	jne	.LBB63_428
# %bb.349:                              # %HandlePtell.split1172
	movabsq	$.L.str.58, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-30617, BasicBlockSignatureTracker # imm = 0x8867
	movw	$5, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_352
.LBB63_350:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-30612, %ax            # imm = 0x886C
	jne	.LBB63_428
# %bb.351:                              # %HandlePtell.split1174
	movabsq	$.L.str.59, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$1, %edx
	callq	strncmp
	movw	$-30612, BasicBlockSignatureTracker # imm = 0x886C
	movw	$55, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_360
	jmp	.LBB63_354
.LBB63_352:                             # %Buffer__16
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-5254, %ax             # imm = 0xEB7A
	cmpw	$25373, %ax             # imm = 0x631D
	jne	.LBB63_428
# %bb.353:                              # %HandlePtell.split1176
	movw	$25373, BasicBlockSignatureTracker # imm = 0x631D
	movw	$-5306, RunTimeSignatureAdjuster # imm = 0xEB46
.LBB63_354:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$-30606, %ax            # imm = 0x8872
	jne	.LBB63_428
# %bb.355:                              # %HandlePtell.split1168
	movabsq	$.L.str.60, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-30606, BasicBlockSignatureTracker # imm = 0x8872
	movw	$30, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB63_362
# %bb.356:                              # %Buffer__18
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6961, %ax              # imm = 0x1B31
	cmpw	$-27837, %ax            # imm = 0x9343
	jne	.LBB63_428
# %bb.357:                              # %HandlePtell.split1182
	movw	$-27837, BasicBlockSignatureTracker # imm = 0x9343
	movw	$6961, RunTimeSignatureAdjuster # imm = 0x1B31
# %bb.358:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-30599, %ax            # imm = 0x8879
	jne	.LBB63_428
# %bb.359:                              # %HandlePtell.split1256
	movabsq	$.L.str.61, %rdi
	movb	$0, %al
	callq	printf
	movw	$-30599, BasicBlockSignatureTracker # imm = 0x8879
	movw	$0, RunTimeSignatureAdjuster
	callq	ResetHandValue
	movw	$-30599, BasicBlockSignatureTracker # imm = 0x8879
	movw	$0, RunTimeSignatureAdjuster
	movl	$0, must_sit
	movl	$0, partnerdead
	movl	$0, piecedead
	movw	$-30599, BasicBlockSignatureTracker # imm = 0x8879
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_408
.LBB63_360:                             # %Buffer__17
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-24025, %ax            # imm = 0xA227
	cmpw	$10827, %ax             # imm = 0x2A4B
	jne	.LBB63_428
# %bb.361:                              # %HandlePtell.split1178
	movw	$10827, BasicBlockSignatureTracker # imm = 0x2A4B
	movw	$-24025, RunTimeSignatureAdjuster # imm = 0xA227
.LBB63_362:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$254, %ax
	xorw	%cx, %ax
	cmpw	$-30574, %ax            # imm = 0x8892
	jne	.LBB63_428
# %bb.363:                              # %HandlePtell.split1180
	movabsq	$.L.str.62, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$25, %edx
	callq	strncmp
	movw	$-30574, BasicBlockSignatureTracker # imm = 0x8892
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB63_366
# %bb.364:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-30571, %ax            # imm = 0x8895
	jne	.LBB63_428
# %bb.365:                              # %HandlePtell.split1186
	movabsq	$.L.str.63, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-30571, BasicBlockSignatureTracker # imm = 0x8895
	movw	$7, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_368
.LBB63_366:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$33, %ax
	xorw	%cx, %ax
	cmpw	$-30541, %ax            # imm = 0x88B3
	jne	.LBB63_428
# %bb.367:                              # %HandlePtell.split1188
	movl	$1, go_fast
	movl	$0, must_sit
	movl	$1, partnerdead
	movw	$-30541, BasicBlockSignatureTracker # imm = 0x88B3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_406
.LBB63_368:                             # %Buffer__19
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10807, %ax             # imm = 0x2A37
	cmpw	$-23902, %ax            # imm = 0xA2A2
	jne	.LBB63_428
# %bb.369:                              # %HandlePtell.split1190
	movw	$-23902, BasicBlockSignatureTracker # imm = 0xA2A2
	movw	$10807, RunTimeSignatureAdjuster # imm = 0x2A37
# %bb.370:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$-30538, %ax            # imm = 0x88B6
	jne	.LBB63_428
# %bb.371:                              # %HandlePtell.split1258
	movabsq	$.L.str.64, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$26, %edx
	callq	strncmp
	movw	$-30538, BasicBlockSignatureTracker # imm = 0x88B6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_374
# %bb.372:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$-30526, %ax            # imm = 0x88C2
	jne	.LBB63_428
# %bb.373:                              # %HandlePtell.split1196
	movl	$1, go_fast
	movl	$0, must_sit
	movl	$1, piecedead
	movw	$-30526, BasicBlockSignatureTracker # imm = 0x88C2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_404
.LBB63_374:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$-30515, %ax            # imm = 0x88CD
	jne	.LBB63_428
# %bb.375:                              # %HandlePtell.split1194
	movabsq	$.L.str.8.35, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-30515, BasicBlockSignatureTracker # imm = 0x88CD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_378
# %bb.376:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-30507, %ax            # imm = 0x88D5
	jne	.LBB63_428
# %bb.377:                              # %HandlePtell.split1202
	movw	$-30507, BasicBlockSignatureTracker # imm = 0x88D5
	movw	$2447, RunTimeSignatureAdjuster # imm = 0x98F
	jmp	.LBB63_426
.LBB63_378:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$33, %ax
	cmpw	$-30484, %ax            # imm = 0x88EC
	jne	.LBB63_428
# %bb.379:                              # %HandlePtell.split1200
	movabsq	$.L.str.65, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$2, %edx
	callq	strncmp
	movw	$-30484, BasicBlockSignatureTracker # imm = 0x88EC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_382
# %bb.380:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$486, %ax               # imm = 0x1E6
	cmpw	$-30454, %ax            # imm = 0x890A
	jne	.LBB63_428
# %bb.381:                              # %HandlePtell.split1206
	movw	$-30454, BasicBlockSignatureTracker # imm = 0x890A
	movw	$2128, RunTimeSignatureAdjuster # imm = 0x850
	jmp	.LBB63_426
.LBB63_382:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$510, %ax               # imm = 0x1FE
	cmpw	$-30446, %ax            # imm = 0x8912
	jne	.LBB63_428
# %bb.383:                              # %HandlePtell.split1204
	movabsq	$.L.str.66, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$2, %edx
	callq	strncmp
	movw	$-30446, BasicBlockSignatureTracker # imm = 0x8912
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB63_386
# %bb.384:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-30444, %ax            # imm = 0x8914
	jne	.LBB63_428
# %bb.385:                              # %HandlePtell.split1208
	movabsq	$.L.str.67, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-30444, BasicBlockSignatureTracker # imm = 0x8914
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB63_388
.LBB63_386:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$52, %ax
	xorw	%cx, %ax
	cmpw	$-30426, %ax            # imm = 0x8926
	jne	.LBB63_428
# %bb.387:                              # %HandlePtell.split1210
	movabsq	$.L.str.68, %rdi
	movb	$0, %al
	callq	printf
	movw	$-30426, BasicBlockSignatureTracker # imm = 0x8926
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_398
.LBB63_388:                             # %Buffer__20
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16798, %ax             # imm = 0x419E
	cmpw	$-14198, %ax            # imm = 0xC88A
	jne	.LBB63_428
# %bb.389:                              # %HandlePtell.split1212
	movw	$-14198, BasicBlockSignatureTracker # imm = 0xC88A
	movw	$16798, RunTimeSignatureAdjuster # imm = 0x419E
# %bb.390:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$-30423, %ax            # imm = 0x8929
	jne	.LBB63_428
# %bb.391:                              # %HandlePtell.split1260
	movabsq	$.L.str.69, %rsi
	movq	(%r15), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-30423, BasicBlockSignatureTracker # imm = 0x8929
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB63_394
# %bb.392:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-30405, %ax            # imm = 0x893B
	jne	.LBB63_428
# %bb.393:                              # %HandlePtell.split1216
	movabsq	$.L.str.70, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.3.30, %rdi
	movb	$0, %al
	callq	printf
	movw	$-30405, BasicBlockSignatureTracker # imm = 0x893B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB63_396
.LBB63_394:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-30403, %ax            # imm = 0x893D
	jne	.LBB63_428
# %bb.395:                              # %HandlePtell.split1218
	movabsq	$.L.str.71, %rdi
	movb	$0, %al
	callq	printf
	movw	$-30403, BasicBlockSignatureTracker # imm = 0x893D
	movw	$6, RunTimeSignatureAdjuster
.LBB63_396:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$119, %ax
	xorw	%cx, %ax
	cmpw	$-30388, %ax            # imm = 0x894C
	jne	.LBB63_428
# %bb.397:                              # %HandlePtell.split1220
	movw	$-30388, BasicBlockSignatureTracker # imm = 0x894C
	movw	$106, RunTimeSignatureAdjuster
.LBB63_398:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$123, %ax
	xorw	%cx, %ax
	cmpw	$-30371, %ax            # imm = 0x895D
	jne	.LBB63_428
# %bb.399:                              # %HandlePtell.split1214
	movw	$-30371, BasicBlockSignatureTracker # imm = 0x895D
	movw	$0, RunTimeSignatureAdjuster
# %bb.400:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$-30354, %ax            # imm = 0x896E
	jne	.LBB63_428
# %bb.401:                              # %HandlePtell.split1222
	movw	$-30354, BasicBlockSignatureTracker # imm = 0x896E
	movw	$0, RunTimeSignatureAdjuster
# %bb.402:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$227, %ax
	cmpw	$-30323, %ax            # imm = 0x898D
	jne	.LBB63_428
# %bb.403:                              # %HandlePtell.split1224
	movw	$-30323, BasicBlockSignatureTracker # imm = 0x898D
	movw	$335, RunTimeSignatureAdjuster # imm = 0x14F
.LBB63_404:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$342, %ax               # imm = 0x156
	xorw	%cx, %ax
	cmpw	$-30316, %ax            # imm = 0x8994
	jne	.LBB63_428
# %bb.405:                              # %HandlePtell.split1198
	movw	$-30316, BasicBlockSignatureTracker # imm = 0x8994
	movw	$295, RunTimeSignatureAdjuster # imm = 0x127
.LBB63_406:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$292, %ax               # imm = 0x124
	xorw	%cx, %ax
	cmpw	$-30313, %ax            # imm = 0x8997
	jne	.LBB63_428
# %bb.407:                              # %HandlePtell.split1192
	movw	$-30313, BasicBlockSignatureTracker # imm = 0x8997
	movw	$494, RunTimeSignatureAdjuster # imm = 0x1EE
.LBB63_408:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$482, %ax               # imm = 0x1E2
	xorw	%cx, %ax
	cmpw	$-30309, %ax            # imm = 0x899B
	jne	.LBB63_428
# %bb.409:                              # %HandlePtell.split1184
	movw	$-30309, BasicBlockSignatureTracker # imm = 0x899B
	movw	$458, RunTimeSignatureAdjuster # imm = 0x1CA
.LBB63_410:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$487, %ax               # imm = 0x1E7
	xorw	%cx, %ax
	cmpw	$-30282, %ax            # imm = 0x89B6
	jne	.LBB63_428
# %bb.411:                              # %HandlePtell.split1164
	movw	$-30282, BasicBlockSignatureTracker # imm = 0x89B6
	movw	$3225, RunTimeSignatureAdjuster # imm = 0xC99
.LBB63_412:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3267, %ax              # imm = 0xCC3
	xorw	%cx, %ax
	cmpw	$-30228, %ax            # imm = 0x89EC
	jne	.LBB63_428
# %bb.413:                              # %HandlePtell.split1024
	movw	$-30228, BasicBlockSignatureTracker # imm = 0x89EC
	movw	$3043, RunTimeSignatureAdjuster # imm = 0xBE3
.LBB63_414:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3069, %ax              # imm = 0xBFD
	xorw	%cx, %ax
	cmpw	$-30222, %ax            # imm = 0x89F2
	jne	.LBB63_428
# %bb.415:                              # %HandlePtell.split884
	movw	$-30222, BasicBlockSignatureTracker # imm = 0x89F2
	movw	$2062, RunTimeSignatureAdjuster # imm = 0x80E
.LBB63_416:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3060, %ax              # imm = 0xBF4
	xorw	%cx, %ax
	cmpw	$-30200, %ax            # imm = 0x8A08
	jne	.LBB63_428
# %bb.417:                              # %HandlePtell.split878
	movw	$-30200, BasicBlockSignatureTracker # imm = 0x8A08
	movw	$3040, RunTimeSignatureAdjuster # imm = 0xBE0
.LBB63_418:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3045, %ax              # imm = 0xBE5
	xorw	%cx, %ax
	cmpw	$-30195, %ax            # imm = 0x8A0D
	jne	.LBB63_428
# %bb.419:                              # %HandlePtell.split872
	movw	$-30195, BasicBlockSignatureTracker # imm = 0x8A0D
	movw	$3030, RunTimeSignatureAdjuster # imm = 0xBD6
.LBB63_420:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3067, %ax              # imm = 0xBFB
	xorw	%cx, %ax
	cmpw	$-30176, %ax            # imm = 0x8A20
	jne	.LBB63_428
# %bb.421:                              # %HandlePtell.split866
	movw	$-30176, BasicBlockSignatureTracker # imm = 0x8A20
	movw	$2975, RunTimeSignatureAdjuster # imm = 0xB9F
.LBB63_422:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2974, %ax              # imm = 0xB9E
	xorw	%cx, %ax
	cmpw	$-30175, %ax            # imm = 0x8A21
	jne	.LBB63_428
# %bb.423:                              # %HandlePtell.split858
	movw	$-30175, BasicBlockSignatureTracker # imm = 0x8A21
	movw	$3006, RunTimeSignatureAdjuster # imm = 0xBBE
.LBB63_424:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3002, %ax              # imm = 0xBBA
	xorw	%cx, %ax
	cmpw	$-30171, %ax            # imm = 0x8A25
	jne	.LBB63_428
# %bb.425:                              # %HandlePtell.split850
	movw	$-30171, BasicBlockSignatureTracker # imm = 0x8A25
	movw	$2943, RunTimeSignatureAdjuster # imm = 0xB7F
.LBB63_426:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2935, %ax              # imm = 0xB77
	xorw	%cx, %ax
	cmpw	$-30163, %ax            # imm = 0x8A2D
	jne	.LBB63_428
# %bb.427:                              # %HandlePtell.split838
	movw	$-30163, BasicBlockSignatureTracker # imm = 0x8A2D
	movw	$27069, RunTimeSignatureAdjuster # imm = 0x69BD
	leaq	-32(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB63_428:                             # %CFerrorHandler.HandlePtell
	callq	FAULT_DETECTED_CFC
.Lfunc_end63:
	.size	HandlePtell, .Lfunc_end63-HandlePtell
	.cfi_endproc
                                        # -- End function
	.globl	CheckBadFlow            # -- Begin function CheckBadFlow
	.p2align	4, 0x90
	.type	CheckBadFlow,@function
CheckBadFlow:                           # @CheckBadFlow
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$152, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20522, %ax             # imm = 0x502A
	xorw	%cx, %ax
	cmpw	$-30133, %ax            # imm = 0x8A4B
	jne	.LBB64_347
# %bb.1:                                # %CheckBadFlow.split972
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20522, %ax             # imm = 0x502A
	xorw	%cx, %ax
	cmpw	$-30133, %ax            # imm = 0x8A4B
	jne	.LBB64_347
# %bb.2:                                # %CheckBadFlow.split970
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-12288, %rcx           # imm = 0xD000
	movq	%rcx, -72(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rcx
	addq	$-12288, %rcx           # imm = 0xD000
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -104(%rbp)        # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -96(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -88(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movl	%edi, (%rax)
	movl	$0, (%r9)
	movl	$0, (%r8)
	movl	$0, (%r11)
	movl	$0, (%r10)
	movl	$0, (%rsi)
	movl	$0, (%rdx)
	movq	%r15, -184(%rbp)        # 8-byte Spill
	movl	$0, (%r15)
	movq	%r13, -176(%rbp)        # 8-byte Spill
	movl	$0, (%r13)
	movq	%r14, -168(%rbp)        # 8-byte Spill
	movl	$0, (%r14)
	movl	$0, (%rcx)
	movl	$0, (%rbx)
	movl	(%rax), %eax
	movw	$-30133, BasicBlockSignatureTracker # imm = 0x8A4B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_5
# %bb.3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-30086, %ax            # imm = 0x8A7A
	jne	.LBB64_347
# %bb.4:                                # %CheckBadFlow.split
	movl	$0, CheckBadFlow.pawnmated
	movl	$0, CheckBadFlow.knightmated
	movl	$0, CheckBadFlow.bishopmated
	movl	$0, CheckBadFlow.rookmated
	movl	$0, CheckBadFlow.queenmated
	movw	$-30086, BasicBlockSignatureTracker # imm = 0x8A7A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_335
.LBB64_5:
	movq	%rsi, -128(%rbp)        # 8-byte Spill
	movq	%rdx, -120(%rbp)        # 8-byte Spill
	movq	%r11, -136(%rbp)        # 8-byte Spill
	movw	BasicBlockSignatureTracker, %ax
	xorw	$196, %ax
	cmpw	$-30065, %ax            # imm = 0x8A8F
	jne	.LBB64_347
# %bb.6:                                # %CheckBadFlow.split650
	movq	%rcx, -160(%rbp)        # 8-byte Spill
	movq	%rbx, -152(%rbp)        # 8-byte Spill
	movq	%r9, -144(%rbp)         # 8-byte Spill
	movq	%r8, -80(%rbp)          # 8-byte Spill
	movq	%r10, -112(%rbp)        # 8-byte Spill
	movw	$-30065, BasicBlockSignatureTracker # imm = 0x8A8F
	movw	$0, RunTimeSignatureAdjuster
	callq	in_check
	movl	$2, %ecx
	movl	$1, %edx
	movabsq	$holding, %rsi
	movw	$-30065, BasicBlockSignatureTracker # imm = 0x8A8F
	movw	$0, RunTimeSignatureAdjuster
	movl	%eax, (%r12)
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %eax
	cltq
	shlq	$6, %rax
	addq	%rax, %rsi
	movl	white_to_move, %eax
	cmpl	$0, %eax
	cmovnel	%edx, %ecx
	movslq	%ecx, %rax
	movl	(%rsi,%rax,4), %eax
	movw	$-30065, BasicBlockSignatureTracker # imm = 0x8A8F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_41
# %bb.7:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$-30064, %ax            # imm = 0x8A90
	jne	.LBB64_347
# %bb.8:                                # %CheckBadFlow.split656
	movl	$2, %edi
	movl	$1, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %esi
	movw	$-30064, BasicBlockSignatureTracker # imm = 0x8A90
	movw	$-5092, RunTimeSignatureAdjuster # imm = 0xEC1C
	callq	DropaddHolding
	movw	$-30064, BasicBlockSignatureTracker # imm = 0x8A90
	movw	$-5092, RunTimeSignatureAdjuster # imm = 0xEC1C
	movw	$-30064, BasicBlockSignatureTracker # imm = 0x8A90
	movw	$0, RunTimeSignatureAdjuster
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movq	-80(%rbp), %rsi         # 8-byte Reload
	movw	$-30064, BasicBlockSignatureTracker # imm = 0x8A90
	movw	$-5092, RunTimeSignatureAdjuster # imm = 0xEC1C
	movl	numb_moves, %eax
	movq	-104(%rbp), %r15        # 8-byte Reload
	movl	%eax, (%r15)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movl	$0, (%rbx)
	movw	$-30064, BasicBlockSignatureTracker # imm = 0x8A90
	movw	$0, RunTimeSignatureAdjuster
.LBB64_9:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB64_19 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-30057, %ax            # imm = 0x8A97
	jne	.LBB64_346
# %bb.10:                               # %CheckBadFlow.split658
                                        #   in Loop: Header=BB64_9 Depth=1
	xorl	%eax, %eax
	movl	(%rbx), %ecx
	movl	(%r15), %edx
	movw	$-30057, BasicBlockSignatureTracker # imm = 0x8A97
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB64_13
# %bb.11:                               #   in Loop: Header=BB64_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$-30041, %ax            # imm = 0x8AA7
	jne	.LBB64_346
# %bb.12:                               # %CheckBadFlow.split660
                                        #   in Loop: Header=BB64_9 Depth=1
	cmpl	$0, (%rsi)
	sete	%al
	movw	$-30041, BasicBlockSignatureTracker # imm = 0x8AA7
	movw	$48, RunTimeSignatureAdjuster
.LBB64_13:                              #   in Loop: Header=BB64_9 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$60, %cx
	xorw	%dx, %cx
	cmpw	$-30037, %cx            # imm = 0x8AAB
	jne	.LBB64_346
# %bb.14:                               # %CheckBadFlow.split662
                                        #   in Loop: Header=BB64_9 Depth=1
	movw	$-30037, BasicBlockSignatureTracker # imm = 0x8AAB
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB64_15
	jmp	.LBB64_39
.LBB64_15:                              #   in Loop: Header=BB64_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-30032, %ax            # imm = 0x8AB0
	jne	.LBB64_346
# %bb.16:                               # %CheckBadFlow.split664
                                        #   in Loop: Header=BB64_9 Depth=1
	movl	(%rbx), %esi
	movw	$-30032, BasicBlockSignatureTracker # imm = 0x8AB0
	movw	$0, RunTimeSignatureAdjuster
	movq	-72(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-30032, BasicBlockSignatureTracker # imm = 0x8AB0
	movw	$0, RunTimeSignatureAdjuster
	movl	(%rbx), %esi
	movl	(%r12), %edx
	movw	$-30032, BasicBlockSignatureTracker # imm = 0x8AB0
	movw	$0, RunTimeSignatureAdjuster
	movq	%r14, %rdi
	callq	check_legal
	movw	$-30032, BasicBlockSignatureTracker # imm = 0x8AB0
	movw	$0, RunTimeSignatureAdjuster
	movw	$-30032, BasicBlockSignatureTracker # imm = 0x8AB0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_35
# %bb.17:                               #   in Loop: Header=BB64_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-30030, %ax            # imm = 0x8AB2
	movq	-80(%rbp), %rax         # 8-byte Reload
	jne	.LBB64_346
# %bb.18:                               # %CheckBadFlow.split668
                                        #   in Loop: Header=BB64_9 Depth=1
	movl	$3, (%rax)
	movw	$-30030, BasicBlockSignatureTracker # imm = 0x8AB2
	movw	$61, RunTimeSignatureAdjuster
	callq	in_check
	movw	$-30030, BasicBlockSignatureTracker # imm = 0x8AB2
	movw	$61, RunTimeSignatureAdjuster
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-30030, BasicBlockSignatureTracker # imm = 0x8AB2
	movw	$34, RunTimeSignatureAdjuster
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-30030, BasicBlockSignatureTracker # imm = 0x8AB2
	movw	$34, RunTimeSignatureAdjuster
	movl	numb_moves, %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-30030, BasicBlockSignatureTracker # imm = 0x8AB2
	movw	$0, RunTimeSignatureAdjuster
.LBB64_19:                              #   Parent Loop BB64_9 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-30025, %ax            # imm = 0x8AB7
	jne	.LBB64_345
# %bb.20:                               # %CheckBadFlow.split672
                                        #   in Loop: Header=BB64_19 Depth=2
	xorl	%eax, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %edx
	movw	$-30025, BasicBlockSignatureTracker # imm = 0x8AB7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB64_23
# %bb.21:                               #   in Loop: Header=BB64_19 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$-30014, %ax            # imm = 0x8AC2
	jne	.LBB64_345
# %bb.22:                               # %CheckBadFlow.split674
                                        #   in Loop: Header=BB64_19 Depth=2
	movq	-80(%rbp), %rax         # 8-byte Reload
	cmpl	$0, (%rax)
	setne	%al
	movw	$-30014, BasicBlockSignatureTracker # imm = 0x8AC2
	movw	$117, RunTimeSignatureAdjuster
.LBB64_23:                              #   in Loop: Header=BB64_19 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$120, %cx
	xorw	%dx, %cx
	cmpw	$-30001, %cx            # imm = 0x8ACF
	jne	.LBB64_345
# %bb.24:                               # %CheckBadFlow.split676
                                        #   in Loop: Header=BB64_19 Depth=2
	movw	$-30001, BasicBlockSignatureTracker # imm = 0x8ACF
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB64_25
	jmp	.LBB64_33
.LBB64_25:                              #   in Loop: Header=BB64_19 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$-29983, %ax            # imm = 0x8AE1
	jne	.LBB64_345
# %bb.26:                               # %CheckBadFlow.split678
                                        #   in Loop: Header=BB64_19 Depth=2
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %esi
	movw	$-29983, BasicBlockSignatureTracker # imm = 0x8AE1
	movw	$81, RunTimeSignatureAdjuster
	movq	-64(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-29983, BasicBlockSignatureTracker # imm = 0x8AE1
	movw	$81, RunTimeSignatureAdjuster
	movl	(%rbx), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-29983, BasicBlockSignatureTracker # imm = 0x8AE1
	movw	$81, RunTimeSignatureAdjuster
	movq	%r14, %rdi
	callq	check_legal
	movw	$-29983, BasicBlockSignatureTracker # imm = 0x8AE1
	movw	$81, RunTimeSignatureAdjuster
	movw	$-29983, BasicBlockSignatureTracker # imm = 0x8AE1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_29
# %bb.27:                               #   in Loop: Header=BB64_19 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-29982, %ax            # imm = 0x8AE2
	jne	.LBB64_345
# %bb.28:                               # %CheckBadFlow.split682
                                        #   in Loop: Header=BB64_19 Depth=2
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-29982, BasicBlockSignatureTracker # imm = 0x8AE2
	movw	$3, RunTimeSignatureAdjuster
.LBB64_29:                              #   in Loop: Header=BB64_19 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-29977, %ax            # imm = 0x8AE7
	jne	.LBB64_345
# %bb.30:                               # %CheckBadFlow.split684
                                        #   in Loop: Header=BB64_19 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-29977, BasicBlockSignatureTracker # imm = 0x8AE7
	movw	$0, RunTimeSignatureAdjuster
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-29977, BasicBlockSignatureTracker # imm = 0x8AE7
	movw	$0, RunTimeSignatureAdjuster
	movw	$-29977, BasicBlockSignatureTracker # imm = 0x8AE7
	movw	$0, RunTimeSignatureAdjuster
# %bb.31:                               #   in Loop: Header=BB64_19 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-29971, %ax            # imm = 0x8AED
	jne	.LBB64_345
# %bb.32:                               # %CheckBadFlow.split686
                                        #   in Loop: Header=BB64_19 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-29971, BasicBlockSignatureTracker # imm = 0x8AED
	movw	$95, RunTimeSignatureAdjuster
	jmp	.LBB64_19
.LBB64_33:                              #   in Loop: Header=BB64_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-29962, %ax            # imm = 0x8AF6
	movq	-104(%rbp), %r15        # 8-byte Reload
	movq	-56(%rbp), %rbx         # 8-byte Reload
	jne	.LBB64_346
# %bb.34:                               # %CheckBadFlow.split680
                                        #   in Loop: Header=BB64_9 Depth=1
	movw	$-29962, BasicBlockSignatureTracker # imm = 0x8AF6
	movw	$70, RunTimeSignatureAdjuster
.LBB64_35:                              #   in Loop: Header=BB64_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$74, %ax
	xorw	%cx, %ax
	cmpw	$-29958, %ax            # imm = 0x8AFA
	jne	.LBB64_346
# %bb.36:                               # %CheckBadFlow.split670
                                        #   in Loop: Header=BB64_9 Depth=1
	movl	(%rbx), %esi
	movw	$-29958, BasicBlockSignatureTracker # imm = 0x8AFA
	movw	$29, RunTimeSignatureAdjuster
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-29958, BasicBlockSignatureTracker # imm = 0x8AFA
	movw	$29, RunTimeSignatureAdjuster
	movw	$-29958, BasicBlockSignatureTracker # imm = 0x8AFA
	movw	$0, RunTimeSignatureAdjuster
# %bb.37:                               #   in Loop: Header=BB64_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-29956, %ax            # imm = 0x8AFC
	movq	-80(%rbp), %rsi         # 8-byte Reload
	jne	.LBB64_346
# %bb.38:                               # %CheckBadFlow.split688
                                        #   in Loop: Header=BB64_9 Depth=1
	movl	(%rbx), %eax
	addl	$1, %eax
	movl	%eax, (%rbx)
	movw	$-29956, BasicBlockSignatureTracker # imm = 0x8AFC
	movw	$108, RunTimeSignatureAdjuster
	jmp	.LBB64_9
.LBB64_39:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$419, %ax               # imm = 0x1A3
	cmpw	$-29944, %ax            # imm = 0x8B08
	jne	.LBB64_347
# %bb.40:                               # %CheckBadFlow.split666
	movl	$2, %edi
	movl	$1, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %esi
	movw	$-29944, BasicBlockSignatureTracker # imm = 0x8B08
	movw	$-4186, RunTimeSignatureAdjuster # imm = 0xEFA6
	callq	DropremoveHolding
	movw	$-29944, BasicBlockSignatureTracker # imm = 0x8B08
	movw	$-4186, RunTimeSignatureAdjuster # imm = 0xEFA6
	movw	$-29944, BasicBlockSignatureTracker # imm = 0x8B08
	movw	$391, RunTimeSignatureAdjuster # imm = 0x187
.LBB64_41:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$384, %ax               # imm = 0x180
	xorw	%cx, %ax
	cmpw	$-29937, %ax            # imm = 0x8B0F
	movq	-80(%rbp), %rdi         # 8-byte Reload
	jne	.LBB64_347
# %bb.42:                               # %CheckBadFlow.split654
	movl	$4, %eax
	movl	$3, %esi
	movabsq	$holding, %rdx
	cmpl	$0, white_to_move
	setne	%cl
	xorb	$-1, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movslq	%ecx, %rcx
	shlq	$6, %rcx
	addq	%rcx, %rdx
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%esi, %eax
	cltq
	movl	(%rdx,%rax,4), %eax
	movw	$-29937, BasicBlockSignatureTracker # imm = 0x8B0F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_77
# %bb.43:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-29922, %ax            # imm = 0x8B1E
	jne	.LBB64_347
# %bb.44:                               # %CheckBadFlow.split692
	movl	$4, %edi
	movl	$3, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %esi
	movw	$-29922, BasicBlockSignatureTracker # imm = 0x8B1E
	movw	$-4718, RunTimeSignatureAdjuster # imm = 0xED92
	callq	DropaddHolding
	movw	$-29922, BasicBlockSignatureTracker # imm = 0x8B1E
	movw	$-4718, RunTimeSignatureAdjuster # imm = 0xED92
	movw	$-29922, BasicBlockSignatureTracker # imm = 0x8B1E
	movw	$398, RunTimeSignatureAdjuster # imm = 0x18E
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-29922, BasicBlockSignatureTracker # imm = 0x8B1E
	movw	$398, RunTimeSignatureAdjuster # imm = 0x18E
	movl	numb_moves, %eax
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movl	$0, (%rbx)
	movw	$-29922, BasicBlockSignatureTracker # imm = 0x8B1E
	movw	$0, RunTimeSignatureAdjuster
.LBB64_45:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB64_55 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$-29915, %ax            # imm = 0x8B25
	jne	.LBB64_344
# %bb.46:                               # %CheckBadFlow.split694
                                        #   in Loop: Header=BB64_45 Depth=1
	xorl	%eax, %eax
	movl	(%rbx), %ecx
	movl	(%rdx), %edx
	movw	$-29915, BasicBlockSignatureTracker # imm = 0x8B25
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB64_49
# %bb.47:                               #   in Loop: Header=BB64_45 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-29913, %ax            # imm = 0x8B27
	jne	.LBB64_344
# %bb.48:                               # %CheckBadFlow.split696
                                        #   in Loop: Header=BB64_45 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	cmpl	$0, (%rax)
	sete	%al
	movw	$-29913, BasicBlockSignatureTracker # imm = 0x8B27
	movw	$2, RunTimeSignatureAdjuster
.LBB64_49:                              #   in Loop: Header=BB64_45 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$11, %cx
	xorw	%dx, %cx
	cmpw	$-29906, %cx            # imm = 0x8B2E
	jne	.LBB64_344
# %bb.50:                               # %CheckBadFlow.split698
                                        #   in Loop: Header=BB64_45 Depth=1
	movw	$-29906, BasicBlockSignatureTracker # imm = 0x8B2E
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB64_51
	jmp	.LBB64_75
.LBB64_51:                              #   in Loop: Header=BB64_45 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-29905, %ax            # imm = 0x8B2F
	jne	.LBB64_344
# %bb.52:                               # %CheckBadFlow.split700
                                        #   in Loop: Header=BB64_45 Depth=1
	movl	(%rbx), %esi
	movw	$-29905, BasicBlockSignatureTracker # imm = 0x8B2F
	movw	$415, RunTimeSignatureAdjuster # imm = 0x19F
	movq	-72(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-29905, BasicBlockSignatureTracker # imm = 0x8B2F
	movw	$415, RunTimeSignatureAdjuster # imm = 0x19F
	movl	(%rbx), %esi
	movl	(%r12), %edx
	movw	$-29905, BasicBlockSignatureTracker # imm = 0x8B2F
	movw	$415, RunTimeSignatureAdjuster # imm = 0x19F
	movq	%r14, %rdi
	callq	check_legal
	movw	$-29905, BasicBlockSignatureTracker # imm = 0x8B2F
	movw	$415, RunTimeSignatureAdjuster # imm = 0x19F
	movw	$-29905, BasicBlockSignatureTracker # imm = 0x8B2F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_71
# %bb.53:                               #   in Loop: Header=BB64_45 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-29892, %ax            # imm = 0x8B3C
	jne	.LBB64_344
# %bb.54:                               # %CheckBadFlow.split704
                                        #   in Loop: Header=BB64_45 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	$3, (%rax)
	movw	$-29892, BasicBlockSignatureTracker # imm = 0x8B3C
	movw	$435, RunTimeSignatureAdjuster # imm = 0x1B3
	callq	in_check
	movw	$-29892, BasicBlockSignatureTracker # imm = 0x8B3C
	movw	$435, RunTimeSignatureAdjuster # imm = 0x1B3
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-29892, BasicBlockSignatureTracker # imm = 0x8B3C
	movw	$428, RunTimeSignatureAdjuster # imm = 0x1AC
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-29892, BasicBlockSignatureTracker # imm = 0x8B3C
	movw	$428, RunTimeSignatureAdjuster # imm = 0x1AC
	movl	numb_moves, %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-29892, BasicBlockSignatureTracker # imm = 0x8B3C
	movw	$0, RunTimeSignatureAdjuster
.LBB64_55:                              #   Parent Loop BB64_45 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-29890, %ax            # imm = 0x8B3E
	jne	.LBB64_343
# %bb.56:                               # %CheckBadFlow.split708
                                        #   in Loop: Header=BB64_55 Depth=2
	xorl	%eax, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %edx
	movw	$-29890, BasicBlockSignatureTracker # imm = 0x8B3E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB64_59
# %bb.57:                               #   in Loop: Header=BB64_55 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$111, %ax
	cmpw	$-29871, %ax            # imm = 0x8B51
	jne	.LBB64_343
# %bb.58:                               # %CheckBadFlow.split710
                                        #   in Loop: Header=BB64_55 Depth=2
	movq	-136(%rbp), %rax        # 8-byte Reload
	cmpl	$0, (%rax)
	setne	%al
	movw	$-29871, BasicBlockSignatureTracker # imm = 0x8B51
	movw	$111, RunTimeSignatureAdjuster
.LBB64_59:                              #   in Loop: Header=BB64_55 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$109, %cx
	xorw	%dx, %cx
	cmpw	$-29869, %cx            # imm = 0x8B53
	jne	.LBB64_343
# %bb.60:                               # %CheckBadFlow.split712
                                        #   in Loop: Header=BB64_55 Depth=2
	movw	$-29869, BasicBlockSignatureTracker # imm = 0x8B53
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB64_61
	jmp	.LBB64_69
.LBB64_61:                              #   in Loop: Header=BB64_55 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-29862, %ax            # imm = 0x8B5A
	jne	.LBB64_343
# %bb.62:                               # %CheckBadFlow.split714
                                        #   in Loop: Header=BB64_55 Depth=2
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %esi
	movw	$-29862, BasicBlockSignatureTracker # imm = 0x8B5A
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	movq	-64(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-29862, BasicBlockSignatureTracker # imm = 0x8B5A
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	movl	(%rbx), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-29862, BasicBlockSignatureTracker # imm = 0x8B5A
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	movq	%r14, %rdi
	callq	check_legal
	movw	$-29862, BasicBlockSignatureTracker # imm = 0x8B5A
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	movw	$-29862, BasicBlockSignatureTracker # imm = 0x8B5A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_65
# %bb.63:                               #   in Loop: Header=BB64_55 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$33, %ax
	cmpw	$-29829, %ax            # imm = 0x8B7B
	jne	.LBB64_343
# %bb.64:                               # %CheckBadFlow.split718
                                        #   in Loop: Header=BB64_55 Depth=2
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-29829, BasicBlockSignatureTracker # imm = 0x8B7B
	movw	$33, RunTimeSignatureAdjuster
.LBB64_65:                              #   in Loop: Header=BB64_55 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$194, %ax
	xorw	%cx, %ax
	cmpw	$-29800, %ax            # imm = 0x8B98
	jne	.LBB64_343
# %bb.66:                               # %CheckBadFlow.split720
                                        #   in Loop: Header=BB64_55 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-29800, BasicBlockSignatureTracker # imm = 0x8B98
	movw	$383, RunTimeSignatureAdjuster # imm = 0x17F
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-29800, BasicBlockSignatureTracker # imm = 0x8B98
	movw	$383, RunTimeSignatureAdjuster # imm = 0x17F
	movw	$-29800, BasicBlockSignatureTracker # imm = 0x8B98
	movw	$0, RunTimeSignatureAdjuster
# %bb.67:                               #   in Loop: Header=BB64_55 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$-29792, %ax            # imm = 0x8BA0
	jne	.LBB64_343
# %bb.68:                               # %CheckBadFlow.split722
                                        #   in Loop: Header=BB64_55 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-29792, BasicBlockSignatureTracker # imm = 0x8BA0
	movw	$156, RunTimeSignatureAdjuster
	jmp	.LBB64_55
.LBB64_69:                              #   in Loop: Header=BB64_45 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$251, %ax
	cmpw	$-29784, %ax            # imm = 0x8BA8
	movq	-56(%rbp), %rbx         # 8-byte Reload
	jne	.LBB64_344
# %bb.70:                               # %CheckBadFlow.split716
                                        #   in Loop: Header=BB64_45 Depth=1
	movw	$-29784, BasicBlockSignatureTracker # imm = 0x8BA8
	movw	$135, RunTimeSignatureAdjuster
.LBB64_71:                              #   in Loop: Header=BB64_45 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$129, %ax
	xorw	%cx, %ax
	cmpw	$-29778, %ax            # imm = 0x8BAE
	jne	.LBB64_344
# %bb.72:                               # %CheckBadFlow.split706
                                        #   in Loop: Header=BB64_45 Depth=1
	movl	(%rbx), %esi
	movw	$-29778, BasicBlockSignatureTracker # imm = 0x8BAE
	movw	$329, RunTimeSignatureAdjuster # imm = 0x149
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-29778, BasicBlockSignatureTracker # imm = 0x8BAE
	movw	$329, RunTimeSignatureAdjuster # imm = 0x149
	movw	$-29778, BasicBlockSignatureTracker # imm = 0x8BAE
	movw	$0, RunTimeSignatureAdjuster
# %bb.73:                               #   in Loop: Header=BB64_45 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-29762, %ax            # imm = 0x8BBE
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movq	-56(%rbp), %rbx         # 8-byte Reload
	jne	.LBB64_344
# %bb.74:                               # %CheckBadFlow.split724
                                        #   in Loop: Header=BB64_45 Depth=1
	movl	(%rbx), %eax
	addl	$1, %eax
	movl	%eax, (%rbx)
	movw	$-29762, BasicBlockSignatureTracker # imm = 0x8BBE
	movw	$160, RunTimeSignatureAdjuster
	jmp	.LBB64_45
.LBB64_75:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$225, %ax
	cmpw	$-29745, %ax            # imm = 0x8BCF
	jne	.LBB64_347
# %bb.76:                               # %CheckBadFlow.split702
	movl	$4, %edi
	movl	$3, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %esi
	movw	$-29745, BasicBlockSignatureTracker # imm = 0x8BCF
	movw	$-4255, RunTimeSignatureAdjuster # imm = 0xEF61
	callq	DropremoveHolding
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movw	$-29745, BasicBlockSignatureTracker # imm = 0x8BCF
	movw	$-4255, RunTimeSignatureAdjuster # imm = 0xEF61
	movw	$-29745, BasicBlockSignatureTracker # imm = 0x8BCF
	movw	$192, RunTimeSignatureAdjuster
.LBB64_77:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$212, %ax
	xorw	%cx, %ax
	cmpw	$-29733, %ax            # imm = 0x8BDB
	jne	.LBB64_347
# %bb.78:                               # %CheckBadFlow.split690
	movl	$12, %eax
	movl	$11, %esi
	movabsq	$holding, %rdx
	cmpl	$0, white_to_move
	setne	%cl
	xorb	$-1, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movslq	%ecx, %rcx
	shlq	$6, %rcx
	addq	%rcx, %rdx
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%esi, %eax
	cltq
	movl	(%rdx,%rax,4), %eax
	movw	$-29733, BasicBlockSignatureTracker # imm = 0x8BDB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_113
# %bb.79:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$-29714, %ax            # imm = 0x8BEE
	jne	.LBB64_347
# %bb.80:                               # %CheckBadFlow.split728
	movl	$12, %edi
	movl	$11, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %esi
	movw	$-29714, BasicBlockSignatureTracker # imm = 0x8BEE
	movw	$-4766, RunTimeSignatureAdjuster # imm = 0xED62
	callq	DropaddHolding
	movw	$-29714, BasicBlockSignatureTracker # imm = 0x8BEE
	movw	$-4766, RunTimeSignatureAdjuster # imm = 0xED62
	movw	$-29714, BasicBlockSignatureTracker # imm = 0x8BEE
	movw	$382, RunTimeSignatureAdjuster # imm = 0x17E
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-29714, BasicBlockSignatureTracker # imm = 0x8BEE
	movw	$382, RunTimeSignatureAdjuster # imm = 0x17E
	movl	numb_moves, %eax
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movl	$0, (%rbx)
	movw	$-29714, BasicBlockSignatureTracker # imm = 0x8BEE
	movw	$0, RunTimeSignatureAdjuster
.LBB64_81:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB64_91 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2022, %ax              # imm = 0x7E6
	xorw	%cx, %ax
	cmpw	$-29688, %ax            # imm = 0x8C08
	movq	-112(%rbp), %rsi        # 8-byte Reload
	jne	.LBB64_342
# %bb.82:                               # %CheckBadFlow.split730
                                        #   in Loop: Header=BB64_81 Depth=1
	xorl	%eax, %eax
	movl	(%rbx), %ecx
	movl	(%rdx), %edx
	movw	$-29688, BasicBlockSignatureTracker # imm = 0x8C08
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB64_85
# %bb.83:                               #   in Loop: Header=BB64_81 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-29686, %ax            # imm = 0x8C0A
	jne	.LBB64_342
# %bb.84:                               # %CheckBadFlow.split732
                                        #   in Loop: Header=BB64_81 Depth=1
	cmpl	$0, (%rsi)
	sete	%al
	movw	$-29686, BasicBlockSignatureTracker # imm = 0x8C0A
	movw	$2, RunTimeSignatureAdjuster
.LBB64_85:                              #   in Loop: Header=BB64_81 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$7, %cx
	xorw	%dx, %cx
	cmpw	$-29681, %cx            # imm = 0x8C0F
	jne	.LBB64_342
# %bb.86:                               # %CheckBadFlow.split734
                                        #   in Loop: Header=BB64_81 Depth=1
	movw	$-29681, BasicBlockSignatureTracker # imm = 0x8C0F
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB64_87
	jmp	.LBB64_111
.LBB64_87:                              #   in Loop: Header=BB64_81 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-29668, %ax            # imm = 0x8C1C
	jne	.LBB64_342
# %bb.88:                               # %CheckBadFlow.split736
                                        #   in Loop: Header=BB64_81 Depth=1
	movl	(%rbx), %esi
	movw	$-29668, BasicBlockSignatureTracker # imm = 0x8C1C
	movw	$1708, RunTimeSignatureAdjuster # imm = 0x6AC
	movq	-72(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-29668, BasicBlockSignatureTracker # imm = 0x8C1C
	movw	$1708, RunTimeSignatureAdjuster # imm = 0x6AC
	movl	(%rbx), %esi
	movl	(%r12), %edx
	movw	$-29668, BasicBlockSignatureTracker # imm = 0x8C1C
	movw	$1708, RunTimeSignatureAdjuster # imm = 0x6AC
	movq	%r14, %rdi
	callq	check_legal
	movw	$-29668, BasicBlockSignatureTracker # imm = 0x8C1C
	movw	$1708, RunTimeSignatureAdjuster # imm = 0x6AC
	movw	$-29668, BasicBlockSignatureTracker # imm = 0x8C1C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_107
# %bb.89:                               #   in Loop: Header=BB64_81 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$39, %ax
	cmpw	$-29637, %ax            # imm = 0x8C3B
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_342
# %bb.90:                               # %CheckBadFlow.split740
                                        #   in Loop: Header=BB64_81 Depth=1
	movl	$3, (%rax)
	movw	$-29637, BasicBlockSignatureTracker # imm = 0x8C3B
	movw	$1716, RunTimeSignatureAdjuster # imm = 0x6B4
	callq	in_check
	movw	$-29637, BasicBlockSignatureTracker # imm = 0x8C3B
	movw	$1716, RunTimeSignatureAdjuster # imm = 0x6B4
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-29637, BasicBlockSignatureTracker # imm = 0x8C3B
	movw	$1707, RunTimeSignatureAdjuster # imm = 0x6AB
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-29637, BasicBlockSignatureTracker # imm = 0x8C3B
	movw	$1707, RunTimeSignatureAdjuster # imm = 0x6AB
	movl	numb_moves, %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-29637, BasicBlockSignatureTracker # imm = 0x8C3B
	movw	$0, RunTimeSignatureAdjuster
.LBB64_91:                              #   Parent Loop BB64_81 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$113, %ax
	xorw	%cx, %ax
	cmpw	$-29622, %ax            # imm = 0x8C4A
	jne	.LBB64_341
# %bb.92:                               # %CheckBadFlow.split744
                                        #   in Loop: Header=BB64_91 Depth=2
	xorl	%eax, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %edx
	movw	$-29622, BasicBlockSignatureTracker # imm = 0x8C4A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB64_95
# %bb.93:                               #   in Loop: Header=BB64_91 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-29618, %ax            # imm = 0x8C4E
	jne	.LBB64_341
# %bb.94:                               # %CheckBadFlow.split746
                                        #   in Loop: Header=BB64_91 Depth=2
	movq	-112(%rbp), %rax        # 8-byte Reload
	cmpl	$0, (%rax)
	setne	%al
	movw	$-29618, BasicBlockSignatureTracker # imm = 0x8C4E
	movw	$4, RunTimeSignatureAdjuster
.LBB64_95:                              #   in Loop: Header=BB64_91 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$43, %cx
	xorw	%dx, %cx
	cmpw	$-29599, %cx            # imm = 0x8C61
	jne	.LBB64_341
# %bb.96:                               # %CheckBadFlow.split748
                                        #   in Loop: Header=BB64_91 Depth=2
	movw	$-29599, BasicBlockSignatureTracker # imm = 0x8C61
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB64_97
	jmp	.LBB64_105
.LBB64_97:                              #   in Loop: Header=BB64_91 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-29594, %ax            # imm = 0x8C66
	jne	.LBB64_341
# %bb.98:                               # %CheckBadFlow.split750
                                        #   in Loop: Header=BB64_91 Depth=2
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %esi
	movw	$-29594, BasicBlockSignatureTracker # imm = 0x8C66
	movw	$1750, RunTimeSignatureAdjuster # imm = 0x6D6
	movq	-64(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-29594, BasicBlockSignatureTracker # imm = 0x8C66
	movw	$1750, RunTimeSignatureAdjuster # imm = 0x6D6
	movl	(%rbx), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-29594, BasicBlockSignatureTracker # imm = 0x8C66
	movw	$1750, RunTimeSignatureAdjuster # imm = 0x6D6
	movq	%r14, %rdi
	callq	check_legal
	movw	$-29594, BasicBlockSignatureTracker # imm = 0x8C66
	movw	$1750, RunTimeSignatureAdjuster # imm = 0x6D6
	movw	$-29594, BasicBlockSignatureTracker # imm = 0x8C66
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_101
# %bb.99:                               #   in Loop: Header=BB64_91 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-29586, %ax            # imm = 0x8C6E
	jne	.LBB64_341
# %bb.100:                              # %CheckBadFlow.split754
                                        #   in Loop: Header=BB64_91 Depth=2
	movq	-112(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-29586, BasicBlockSignatureTracker # imm = 0x8C6E
	movw	$8, RunTimeSignatureAdjuster
.LBB64_101:                             #   in Loop: Header=BB64_91 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-29583, %ax            # imm = 0x8C71
	jne	.LBB64_341
# %bb.102:                              # %CheckBadFlow.split756
                                        #   in Loop: Header=BB64_91 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-29583, BasicBlockSignatureTracker # imm = 0x8C71
	movw	$1686, RunTimeSignatureAdjuster # imm = 0x696
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-29583, BasicBlockSignatureTracker # imm = 0x8C71
	movw	$1686, RunTimeSignatureAdjuster # imm = 0x696
	movw	$-29583, BasicBlockSignatureTracker # imm = 0x8C71
	movw	$0, RunTimeSignatureAdjuster
# %bb.103:                              #   in Loop: Header=BB64_91 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-29577, %ax            # imm = 0x8C77
	jne	.LBB64_341
# %bb.104:                              # %CheckBadFlow.split758
                                        #   in Loop: Header=BB64_91 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-29577, BasicBlockSignatureTracker # imm = 0x8C77
	movw	$76, RunTimeSignatureAdjuster
	jmp	.LBB64_91
.LBB64_105:                             #   in Loop: Header=BB64_81 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-29569, %ax            # imm = 0x8C7F
	jne	.LBB64_342
# %bb.106:                              # %CheckBadFlow.split752
                                        #   in Loop: Header=BB64_81 Depth=1
	movw	$-29569, BasicBlockSignatureTracker # imm = 0x8C7F
	movw	$99, RunTimeSignatureAdjuster
.LBB64_107:                             #   in Loop: Header=BB64_81 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$157, %ax
	xorw	%cx, %ax
	cmpw	$-29567, %ax            # imm = 0x8C81
	movq	-56(%rbp), %rax         # 8-byte Reload
	jne	.LBB64_342
# %bb.108:                              # %CheckBadFlow.split742
                                        #   in Loop: Header=BB64_81 Depth=1
	movl	(%rax), %esi
	movw	$-29567, BasicBlockSignatureTracker # imm = 0x8C81
	movw	$1638, RunTimeSignatureAdjuster # imm = 0x666
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-29567, BasicBlockSignatureTracker # imm = 0x8C81
	movw	$1638, RunTimeSignatureAdjuster # imm = 0x666
	movw	$-29567, BasicBlockSignatureTracker # imm = 0x8C81
	movw	$0, RunTimeSignatureAdjuster
# %bb.109:                              #   in Loop: Header=BB64_81 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-29566, %ax            # imm = 0x8C82
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movq	-56(%rbp), %rbx         # 8-byte Reload
	jne	.LBB64_342
# %bb.110:                              # %CheckBadFlow.split760
                                        #   in Loop: Header=BB64_81 Depth=1
	movl	(%rbx), %eax
	addl	$1, %eax
	movl	%eax, (%rbx)
	movw	$-29566, BasicBlockSignatureTracker # imm = 0x8C82
	movw	$1900, RunTimeSignatureAdjuster # imm = 0x76C
	jmp	.LBB64_81
.LBB64_111:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$134, %ax
	cmpw	$-29559, %ax            # imm = 0x8C89
	jne	.LBB64_347
# %bb.112:                              # %CheckBadFlow.split738
	movl	$12, %edi
	movl	$11, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %esi
	movw	$-29559, BasicBlockSignatureTracker # imm = 0x8C89
	movw	$-6105, RunTimeSignatureAdjuster # imm = 0xE827
	callq	DropremoveHolding
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movw	$-29559, BasicBlockSignatureTracker # imm = 0x8C89
	movw	$-6105, RunTimeSignatureAdjuster # imm = 0xE827
	movw	$-29559, BasicBlockSignatureTracker # imm = 0x8C89
	movw	$1874, RunTimeSignatureAdjuster # imm = 0x752
.LBB64_113:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1897, %ax              # imm = 0x769
	xorw	%cx, %ax
	cmpw	$-29518, %ax            # imm = 0x8CB2
	jne	.LBB64_347
# %bb.114:                              # %CheckBadFlow.split726
	movl	$8, %eax
	movl	$7, %esi
	movabsq	$holding, %rdx
	cmpl	$0, white_to_move
	setne	%cl
	xorb	$-1, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movslq	%ecx, %rcx
	shlq	$6, %rcx
	addq	%rcx, %rdx
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%esi, %eax
	cltq
	movl	(%rdx,%rax,4), %eax
	movw	$-29518, BasicBlockSignatureTracker # imm = 0x8CB2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_149
# %bb.115:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-29507, %ax            # imm = 0x8CBD
	jne	.LBB64_347
# %bb.116:                              # %CheckBadFlow.split764
	movl	$8, %edi
	movl	$7, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %esi
	movw	$-29507, BasicBlockSignatureTracker # imm = 0x8CBD
	movw	$-5583, RunTimeSignatureAdjuster # imm = 0xEA31
	callq	DropaddHolding
	movw	$-29507, BasicBlockSignatureTracker # imm = 0x8CBD
	movw	$-5583, RunTimeSignatureAdjuster # imm = 0xEA31
	movw	$-29507, BasicBlockSignatureTracker # imm = 0x8CBD
	movw	$1581, RunTimeSignatureAdjuster # imm = 0x62D
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-29507, BasicBlockSignatureTracker # imm = 0x8CBD
	movw	$1581, RunTimeSignatureAdjuster # imm = 0x62D
	movl	numb_moves, %eax
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movl	$0, (%rsi)
	movw	$-29507, BasicBlockSignatureTracker # imm = 0x8CBD
	movw	$0, RunTimeSignatureAdjuster
.LBB64_117:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB64_127 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$109, %ax
	xorw	%cx, %ax
	cmpw	$-29488, %ax            # imm = 0x8CD0
	jne	.LBB64_340
# %bb.118:                              # %CheckBadFlow.split766
                                        #   in Loop: Header=BB64_117 Depth=1
	xorl	%eax, %eax
	movl	(%rsi), %ecx
	movl	(%rdx), %edx
	movw	$-29488, BasicBlockSignatureTracker # imm = 0x8CD0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB64_121
# %bb.119:                              #   in Loop: Header=BB64_117 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$-29445, %ax            # imm = 0x8CFB
	jne	.LBB64_340
# %bb.120:                              # %CheckBadFlow.split768
                                        #   in Loop: Header=BB64_117 Depth=1
	movq	-128(%rbp), %rax        # 8-byte Reload
	cmpl	$0, (%rax)
	sete	%al
	movw	$-29445, BasicBlockSignatureTracker # imm = 0x8CFB
	movw	$43, RunTimeSignatureAdjuster
.LBB64_121:                             #   in Loop: Header=BB64_117 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$466, %cx               # imm = 0x1D2
	xorw	%dx, %cx
	cmpw	$-29438, %cx            # imm = 0x8D02
	jne	.LBB64_340
# %bb.122:                              # %CheckBadFlow.split770
                                        #   in Loop: Header=BB64_117 Depth=1
	movw	$-29438, BasicBlockSignatureTracker # imm = 0x8D02
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB64_123
	jmp	.LBB64_147
.LBB64_123:                             #   in Loop: Header=BB64_117 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-29427, %ax            # imm = 0x8D0D
	movq	-56(%rbp), %rbx         # 8-byte Reload
	jne	.LBB64_340
# %bb.124:                              # %CheckBadFlow.split772
                                        #   in Loop: Header=BB64_117 Depth=1
	movl	(%rbx), %esi
	movw	$-29427, BasicBlockSignatureTracker # imm = 0x8D0D
	movw	$1981, RunTimeSignatureAdjuster # imm = 0x7BD
	movq	-72(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-29427, BasicBlockSignatureTracker # imm = 0x8D0D
	movw	$1981, RunTimeSignatureAdjuster # imm = 0x7BD
	movl	(%rbx), %esi
	movl	(%r12), %edx
	movw	$-29427, BasicBlockSignatureTracker # imm = 0x8D0D
	movw	$1981, RunTimeSignatureAdjuster # imm = 0x7BD
	movq	%r14, %rdi
	callq	check_legal
	movw	$-29427, BasicBlockSignatureTracker # imm = 0x8D0D
	movw	$1981, RunTimeSignatureAdjuster # imm = 0x7BD
	movw	$-29427, BasicBlockSignatureTracker # imm = 0x8D0D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_143
# %bb.125:                              #   in Loop: Header=BB64_117 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-29423, %ax            # imm = 0x8D11
	jne	.LBB64_340
# %bb.126:                              # %CheckBadFlow.split776
                                        #   in Loop: Header=BB64_117 Depth=1
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	$3, (%rax)
	movw	$-29423, BasicBlockSignatureTracker # imm = 0x8D11
	movw	$1950, RunTimeSignatureAdjuster # imm = 0x79E
	callq	in_check
	movw	$-29423, BasicBlockSignatureTracker # imm = 0x8D11
	movw	$1950, RunTimeSignatureAdjuster # imm = 0x79E
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-29423, BasicBlockSignatureTracker # imm = 0x8D11
	movw	$1921, RunTimeSignatureAdjuster # imm = 0x781
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-29423, BasicBlockSignatureTracker # imm = 0x8D11
	movw	$1921, RunTimeSignatureAdjuster # imm = 0x781
	movl	numb_moves, %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-29423, BasicBlockSignatureTracker # imm = 0x8D11
	movw	$0, RunTimeSignatureAdjuster
.LBB64_127:                             #   Parent Loop BB64_117 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-29419, %ax            # imm = 0x8D15
	jne	.LBB64_339
# %bb.128:                              # %CheckBadFlow.split780
                                        #   in Loop: Header=BB64_127 Depth=2
	xorl	%eax, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %edx
	movw	$-29419, BasicBlockSignatureTracker # imm = 0x8D15
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB64_131
# %bb.129:                              #   in Loop: Header=BB64_127 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-29411, %ax            # imm = 0x8D1D
	jne	.LBB64_339
# %bb.130:                              # %CheckBadFlow.split782
                                        #   in Loop: Header=BB64_127 Depth=2
	movq	-128(%rbp), %rax        # 8-byte Reload
	cmpl	$0, (%rax)
	setne	%al
	movw	$-29411, BasicBlockSignatureTracker # imm = 0x8D1D
	movw	$8, RunTimeSignatureAdjuster
.LBB64_131:                             #   in Loop: Header=BB64_127 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$11, %cx
	xorw	%dx, %cx
	cmpw	$-29410, %cx            # imm = 0x8D1E
	jne	.LBB64_339
# %bb.132:                              # %CheckBadFlow.split784
                                        #   in Loop: Header=BB64_127 Depth=2
	movw	$-29410, BasicBlockSignatureTracker # imm = 0x8D1E
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB64_133
	jmp	.LBB64_141
.LBB64_133:                             #   in Loop: Header=BB64_127 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$-29392, %ax            # imm = 0x8D30
	jne	.LBB64_339
# %bb.134:                              # %CheckBadFlow.split786
                                        #   in Loop: Header=BB64_127 Depth=2
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %esi
	movw	$-29392, BasicBlockSignatureTracker # imm = 0x8D30
	movw	$1920, RunTimeSignatureAdjuster # imm = 0x780
	movq	-64(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-29392, BasicBlockSignatureTracker # imm = 0x8D30
	movw	$1920, RunTimeSignatureAdjuster # imm = 0x780
	movl	(%rbx), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-29392, BasicBlockSignatureTracker # imm = 0x8D30
	movw	$1920, RunTimeSignatureAdjuster # imm = 0x780
	movq	%r14, %rdi
	callq	check_legal
	movw	$-29392, BasicBlockSignatureTracker # imm = 0x8D30
	movw	$1920, RunTimeSignatureAdjuster # imm = 0x780
	movw	$-29392, BasicBlockSignatureTracker # imm = 0x8D30
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_137
# %bb.135:                              #   in Loop: Header=BB64_127 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-29390, %ax            # imm = 0x8D32
	jne	.LBB64_339
# %bb.136:                              # %CheckBadFlow.split790
                                        #   in Loop: Header=BB64_127 Depth=2
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-29390, BasicBlockSignatureTracker # imm = 0x8D32
	movw	$2, RunTimeSignatureAdjuster
.LBB64_137:                             #   in Loop: Header=BB64_127 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-29380, %ax            # imm = 0x8D3C
	jne	.LBB64_339
# %bb.138:                              # %CheckBadFlow.split792
                                        #   in Loop: Header=BB64_127 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-29380, BasicBlockSignatureTracker # imm = 0x8D3C
	movw	$2011, RunTimeSignatureAdjuster # imm = 0x7DB
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-29380, BasicBlockSignatureTracker # imm = 0x8D3C
	movw	$2011, RunTimeSignatureAdjuster # imm = 0x7DB
	movw	$-29380, BasicBlockSignatureTracker # imm = 0x8D3C
	movw	$0, RunTimeSignatureAdjuster
# %bb.139:                              #   in Loop: Header=BB64_127 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$89, %ax
	cmpw	$-29339, %ax            # imm = 0x8D65
	jne	.LBB64_339
# %bb.140:                              # %CheckBadFlow.split794
                                        #   in Loop: Header=BB64_127 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-29339, BasicBlockSignatureTracker # imm = 0x8D65
	movw	$116, RunTimeSignatureAdjuster
	jmp	.LBB64_127
.LBB64_141:                             #   in Loop: Header=BB64_117 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$-29335, %ax            # imm = 0x8D69
	jne	.LBB64_340
# %bb.142:                              # %CheckBadFlow.split788
                                        #   in Loop: Header=BB64_117 Depth=1
	movw	$-29335, BasicBlockSignatureTracker # imm = 0x8D69
	movw	$100, RunTimeSignatureAdjuster
.LBB64_143:                             #   in Loop: Header=BB64_117 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$137, %ax
	xorw	%cx, %ax
	cmpw	$-29308, %ax            # imm = 0x8D84
	movq	-56(%rbp), %rax         # 8-byte Reload
	jne	.LBB64_340
# %bb.144:                              # %CheckBadFlow.split778
                                        #   in Loop: Header=BB64_117 Depth=1
	movl	(%rax), %esi
	movw	$-29308, BasicBlockSignatureTracker # imm = 0x8D84
	movw	$1891, RunTimeSignatureAdjuster # imm = 0x763
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-29308, BasicBlockSignatureTracker # imm = 0x8D84
	movw	$1891, RunTimeSignatureAdjuster # imm = 0x763
	movw	$-29308, BasicBlockSignatureTracker # imm = 0x8D84
	movw	$0, RunTimeSignatureAdjuster
# %bb.145:                              #   in Loop: Header=BB64_117 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-29307, %ax            # imm = 0x8D85
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movq	-56(%rbp), %rsi         # 8-byte Reload
	jne	.LBB64_340
# %bb.146:                              # %CheckBadFlow.split796
                                        #   in Loop: Header=BB64_117 Depth=1
	movl	(%rsi), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	movw	$-29307, BasicBlockSignatureTracker # imm = 0x8D85
	movw	$312, RunTimeSignatureAdjuster # imm = 0x138
	jmp	.LBB64_117
.LBB64_147:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$147, %ax
	cmpw	$-29295, %ax            # imm = 0x8D91
	jne	.LBB64_347
# %bb.148:                              # %CheckBadFlow.split774
	movl	$8, %edi
	movl	$7, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %esi
	movw	$-29295, BasicBlockSignatureTracker # imm = 0x8D91
	movw	$-5825, RunTimeSignatureAdjuster # imm = 0xE93F
	callq	DropremoveHolding
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movw	$-29295, BasicBlockSignatureTracker # imm = 0x8D91
	movw	$-5825, RunTimeSignatureAdjuster # imm = 0xE93F
	movw	$-29295, BasicBlockSignatureTracker # imm = 0x8D91
	movw	$291, RunTimeSignatureAdjuster # imm = 0x123
.LBB64_149:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$294, %ax               # imm = 0x126
	xorw	%cx, %ax
	cmpw	$-29292, %ax            # imm = 0x8D94
	jne	.LBB64_347
# %bb.150:                              # %CheckBadFlow.split762
	movl	$10, %eax
	movl	$9, %esi
	movabsq	$holding, %rdx
	cmpl	$0, white_to_move
	setne	%cl
	xorb	$-1, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movslq	%ecx, %rcx
	shlq	$6, %rcx
	addq	%rcx, %rdx
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%esi, %eax
	cltq
	movl	(%rdx,%rax,4), %eax
	movw	$-29292, BasicBlockSignatureTracker # imm = 0x8D94
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_185
# %bb.151:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-29283, %ax            # imm = 0x8D9D
	jne	.LBB64_347
# %bb.152:                              # %CheckBadFlow.split800
	movl	$10, %edi
	movl	$9, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %esi
	movw	$-29283, BasicBlockSignatureTracker # imm = 0x8D9D
	movw	$-5359, RunTimeSignatureAdjuster # imm = 0xEB11
	callq	DropaddHolding
	movw	$-29283, BasicBlockSignatureTracker # imm = 0x8D9D
	movw	$-5359, RunTimeSignatureAdjuster # imm = 0xEB11
	movw	$-29283, BasicBlockSignatureTracker # imm = 0x8D9D
	movw	$1805, RunTimeSignatureAdjuster # imm = 0x70D
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-29283, BasicBlockSignatureTracker # imm = 0x8D9D
	movw	$1805, RunTimeSignatureAdjuster # imm = 0x70D
	movl	numb_moves, %eax
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-29283, BasicBlockSignatureTracker # imm = 0x8D9D
	movw	$0, RunTimeSignatureAdjuster
.LBB64_153:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB64_163 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$-29250, %ax            # imm = 0x8DBE
	jne	.LBB64_338
# %bb.154:                              # %CheckBadFlow.split802
                                        #   in Loop: Header=BB64_153 Depth=1
	xorl	%eax, %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movl	(%rdx), %edx
	movw	$-29250, BasicBlockSignatureTracker # imm = 0x8DBE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB64_157
# %bb.155:                              #   in Loop: Header=BB64_153 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$122, %ax
	cmpw	$-29244, %ax            # imm = 0x8DC4
	jne	.LBB64_338
# %bb.156:                              # %CheckBadFlow.split804
                                        #   in Loop: Header=BB64_153 Depth=1
	movq	-120(%rbp), %rax        # 8-byte Reload
	cmpl	$0, (%rax)
	sete	%al
	movw	$-29244, BasicBlockSignatureTracker # imm = 0x8DC4
	movw	$122, RunTimeSignatureAdjuster
.LBB64_157:                             #   in Loop: Header=BB64_153 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$117, %cx
	xorw	%dx, %cx
	cmpw	$-29237, %cx            # imm = 0x8DCB
	jne	.LBB64_338
# %bb.158:                              # %CheckBadFlow.split806
                                        #   in Loop: Header=BB64_153 Depth=1
	movw	$-29237, BasicBlockSignatureTracker # imm = 0x8DCB
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB64_159
	jmp	.LBB64_183
.LBB64_159:                             #   in Loop: Header=BB64_153 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-29226, %ax            # imm = 0x8DD6
	jne	.LBB64_338
# %bb.160:                              # %CheckBadFlow.split808
                                        #   in Loop: Header=BB64_153 Depth=1
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %esi
	movw	$-29226, BasicBlockSignatureTracker # imm = 0x8DD6
	movw	$1894, RunTimeSignatureAdjuster # imm = 0x766
	movq	-72(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-29226, BasicBlockSignatureTracker # imm = 0x8DD6
	movw	$1894, RunTimeSignatureAdjuster # imm = 0x766
	movl	(%rbx), %esi
	movl	(%r12), %edx
	movw	$-29226, BasicBlockSignatureTracker # imm = 0x8DD6
	movw	$1894, RunTimeSignatureAdjuster # imm = 0x766
	movq	%r14, %rdi
	callq	check_legal
	movw	$-29226, BasicBlockSignatureTracker # imm = 0x8DD6
	movw	$1894, RunTimeSignatureAdjuster # imm = 0x766
	movw	$-29226, BasicBlockSignatureTracker # imm = 0x8DD6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_179
# %bb.161:                              #   in Loop: Header=BB64_153 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-29220, %ax            # imm = 0x8DDC
	jne	.LBB64_338
# %bb.162:                              # %CheckBadFlow.split812
                                        #   in Loop: Header=BB64_153 Depth=1
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	$3, (%rax)
	movw	$-29220, BasicBlockSignatureTracker # imm = 0x8DDC
	movw	$1875, RunTimeSignatureAdjuster # imm = 0x753
	callq	in_check
	movw	$-29220, BasicBlockSignatureTracker # imm = 0x8DDC
	movw	$1875, RunTimeSignatureAdjuster # imm = 0x753
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-29220, BasicBlockSignatureTracker # imm = 0x8DDC
	movw	$1868, RunTimeSignatureAdjuster # imm = 0x74C
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-29220, BasicBlockSignatureTracker # imm = 0x8DDC
	movw	$1868, RunTimeSignatureAdjuster # imm = 0x74C
	movl	numb_moves, %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-29220, BasicBlockSignatureTracker # imm = 0x8DDC
	movw	$0, RunTimeSignatureAdjuster
.LBB64_163:                             #   Parent Loop BB64_153 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-29218, %ax            # imm = 0x8DDE
	jne	.LBB64_337
# %bb.164:                              # %CheckBadFlow.split816
                                        #   in Loop: Header=BB64_163 Depth=2
	xorl	%eax, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %edx
	movw	$-29218, BasicBlockSignatureTracker # imm = 0x8DDE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB64_167
# %bb.165:                              #   in Loop: Header=BB64_163 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-29207, %ax            # imm = 0x8DE9
	jne	.LBB64_337
# %bb.166:                              # %CheckBadFlow.split818
                                        #   in Loop: Header=BB64_163 Depth=2
	movq	-120(%rbp), %rax        # 8-byte Reload
	cmpl	$0, (%rax)
	setne	%al
	movw	$-29207, BasicBlockSignatureTracker # imm = 0x8DE9
	movw	$55, RunTimeSignatureAdjuster
.LBB64_167:                             #   in Loop: Header=BB64_163 Depth=2
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$43, %cx
	xorw	%dx, %cx
	cmpw	$-29195, %cx            # imm = 0x8DF5
	jne	.LBB64_337
# %bb.168:                              # %CheckBadFlow.split820
                                        #   in Loop: Header=BB64_163 Depth=2
	movw	$-29195, BasicBlockSignatureTracker # imm = 0x8DF5
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB64_169
	jmp	.LBB64_177
.LBB64_169:                             #   in Loop: Header=BB64_163 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1021, %ax              # imm = 0x3FD
	cmpw	$-29176, %ax            # imm = 0x8E08
	jne	.LBB64_337
# %bb.170:                              # %CheckBadFlow.split822
                                        #   in Loop: Header=BB64_163 Depth=2
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %esi
	movw	$-29176, BasicBlockSignatureTracker # imm = 0x8E08
	movw	$1208, RunTimeSignatureAdjuster # imm = 0x4B8
	movq	-64(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-29176, BasicBlockSignatureTracker # imm = 0x8E08
	movw	$1208, RunTimeSignatureAdjuster # imm = 0x4B8
	movl	(%rbx), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-29176, BasicBlockSignatureTracker # imm = 0x8E08
	movw	$1208, RunTimeSignatureAdjuster # imm = 0x4B8
	movq	%r14, %rdi
	callq	check_legal
	movw	$-29176, BasicBlockSignatureTracker # imm = 0x8E08
	movw	$1208, RunTimeSignatureAdjuster # imm = 0x4B8
	movw	$-29176, BasicBlockSignatureTracker # imm = 0x8E08
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_173
# %bb.171:                              #   in Loop: Header=BB64_163 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-29155, %ax            # imm = 0x8E1D
	jne	.LBB64_337
# %bb.172:                              # %CheckBadFlow.split826
                                        #   in Loop: Header=BB64_163 Depth=2
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-29155, BasicBlockSignatureTracker # imm = 0x8E1D
	movw	$21, RunTimeSignatureAdjuster
.LBB64_173:                             #   in Loop: Header=BB64_163 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$47, %ax
	xorw	%cx, %ax
	cmpw	$-29145, %ax            # imm = 0x8E27
	jne	.LBB64_337
# %bb.174:                              # %CheckBadFlow.split828
                                        #   in Loop: Header=BB64_163 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-29145, BasicBlockSignatureTracker # imm = 0x8E27
	movw	$1216, RunTimeSignatureAdjuster # imm = 0x4C0
	movq	-64(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-29145, BasicBlockSignatureTracker # imm = 0x8E27
	movw	$1216, RunTimeSignatureAdjuster # imm = 0x4C0
	movw	$-29145, BasicBlockSignatureTracker # imm = 0x8E27
	movw	$0, RunTimeSignatureAdjuster
# %bb.175:                              #   in Loop: Header=BB64_163 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-29132, %ax            # imm = 0x8E34
	jne	.LBB64_337
# %bb.176:                              # %CheckBadFlow.split830
                                        #   in Loop: Header=BB64_163 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-29132, BasicBlockSignatureTracker # imm = 0x8E34
	movw	$1000, RunTimeSignatureAdjuster # imm = 0x3E8
	jmp	.LBB64_163
.LBB64_177:                             #   in Loop: Header=BB64_153 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$971, %ax               # imm = 0x3CB
	cmpw	$-29122, %ax            # imm = 0x8E3E
	jne	.LBB64_338
# %bb.178:                              # %CheckBadFlow.split824
                                        #   in Loop: Header=BB64_153 Depth=1
	movw	$-29122, BasicBlockSignatureTracker # imm = 0x8E3E
	movw	$1000, RunTimeSignatureAdjuster # imm = 0x3E8
.LBB64_179:                             #   in Loop: Header=BB64_153 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$838, %ax               # imm = 0x346
	xorw	%cx, %ax
	cmpw	$-29040, %ax            # imm = 0x8E90
	jne	.LBB64_338
# %bb.180:                              # %CheckBadFlow.split814
                                        #   in Loop: Header=BB64_153 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-29040, BasicBlockSignatureTracker # imm = 0x8E90
	movw	$1143, RunTimeSignatureAdjuster # imm = 0x477
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-29040, BasicBlockSignatureTracker # imm = 0x8E90
	movw	$1143, RunTimeSignatureAdjuster # imm = 0x477
	movw	$-29040, BasicBlockSignatureTracker # imm = 0x8E90
	movw	$0, RunTimeSignatureAdjuster
# %bb.181:                              #   in Loop: Header=BB64_153 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-29029, %ax            # imm = 0x8E9B
	jne	.LBB64_338
# %bb.182:                              # %CheckBadFlow.split832
                                        #   in Loop: Header=BB64_153 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-29029, BasicBlockSignatureTracker # imm = 0x8E9B
	movw	$774, RunTimeSignatureAdjuster # imm = 0x306
	jmp	.LBB64_153
.LBB64_183:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$879, %ax               # imm = 0x36F
	cmpw	$-29020, %ax            # imm = 0x8EA4
	jne	.LBB64_347
# %bb.184:                              # %CheckBadFlow.split810
	movl	$10, %edi
	movl	$9, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	cmpl	$0, white_to_move
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %esi
	movw	$-29020, BasicBlockSignatureTracker # imm = 0x8EA4
	movw	$-5622, RunTimeSignatureAdjuster # imm = 0xEA0A
	callq	DropremoveHolding
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movw	$-29020, BasicBlockSignatureTracker # imm = 0x8EA4
	movw	$-5622, RunTimeSignatureAdjuster # imm = 0xEA0A
	movw	$-29020, BasicBlockSignatureTracker # imm = 0x8EA4
	movw	$816, RunTimeSignatureAdjuster # imm = 0x330
.LBB64_185:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$818, %ax               # imm = 0x332
	xorw	%cx, %ax
	cmpw	$-29018, %ax            # imm = 0x8EA6
	jne	.LBB64_347
# %bb.186:                              # %CheckBadFlow.split798
	movl	(%rdi), %eax
	movl	CheckBadFlow.pawnmated, %ecx
	movw	$-29018, BasicBlockSignatureTracker # imm = 0x8EA6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB64_203
# %bb.187:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-29001, %ax            # imm = 0x8EB7
	jne	.LBB64_347
# %bb.188:                              # %CheckBadFlow.split834
	movl	(%rdi), %eax
	movw	$-29001, BasicBlockSignatureTracker # imm = 0x8EB7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB64_191
# %bb.189:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$-28989, %ax            # imm = 0x8EC3
	jne	.LBB64_347
# %bb.190:                              # %CheckBadFlow.split838
	movq	-184(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$-28989, BasicBlockSignatureTracker # imm = 0x8EC3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_201
.LBB64_191:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$113, %ax
	cmpw	$-28986, %ax            # imm = 0x8EC6
	movq	-80(%rbp), %rax         # 8-byte Reload
	jne	.LBB64_347
# %bb.192:                              # %CheckBadFlow.split840
	movl	(%rax), %eax
	movw	$-28986, BasicBlockSignatureTracker # imm = 0x8EC6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_199
# %bb.193:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-28982, %ax            # imm = 0x8ECA
	jne	.LBB64_347
# %bb.194:                              # %CheckBadFlow.split844
	movl	CheckBadFlow.pawnmated, %eax
	movw	$-28982, BasicBlockSignatureTracker # imm = 0x8ECA
	movw	$12, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_199
# %bb.195:                              # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28452, %ax             # imm = 0x6F24
	cmpw	$-7698, %ax             # imm = 0xE1EE
	jne	.LBB64_347
# %bb.196:                              # %CheckBadFlow.split848
	movw	$-7698, BasicBlockSignatureTracker # imm = 0xE1EE
	movw	$28452, RunTimeSignatureAdjuster # imm = 0x6F24
# %bb.197:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-28977, %ax            # imm = 0x8ECF
	movq	-144(%rbp), %rcx        # 8-byte Reload
	jne	.LBB64_347
# %bb.198:                              # %CheckBadFlow.split974
	movabsq	$.L.str.72, %rdi
	movb	$0, %al
	movq	%rcx, %rbx
	callq	printf
	movl	$1, (%rbx)
	movw	$-28977, BasicBlockSignatureTracker # imm = 0x8ECF
	movw	$9, RunTimeSignatureAdjuster
.LBB64_199:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$-28969, %ax            # imm = 0x8ED7
	jne	.LBB64_347
# %bb.200:                              # %CheckBadFlow.split846
	movw	$-28969, BasicBlockSignatureTracker # imm = 0x8ED7
	movw	$20, RunTimeSignatureAdjuster
.LBB64_201:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$-28946, %ax            # imm = 0x8EEE
	jne	.LBB64_347
# %bb.202:                              # %CheckBadFlow.split842
	movw	$-28946, BasicBlockSignatureTracker # imm = 0x8EEE
	movw	$72, RunTimeSignatureAdjuster
.LBB64_203:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$73, %ax
	xorw	%cx, %ax
	cmpw	$-28945, %ax            # imm = 0x8EEF
	jne	.LBB64_347
# %bb.204:                              # %CheckBadFlow.split836
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	CheckBadFlow.knightmated, %ecx
	movw	$-28945, BasicBlockSignatureTracker # imm = 0x8EEF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB64_221
# %bb.205:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-28940, %ax            # imm = 0x8EF4
	jne	.LBB64_347
# %bb.206:                              # %CheckBadFlow.split850
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28940, BasicBlockSignatureTracker # imm = 0x8EF4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB64_209
# %bb.207:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-28930, %ax            # imm = 0x8EFE
	jne	.LBB64_347
# %bb.208:                              # %CheckBadFlow.split854
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$-28930, BasicBlockSignatureTracker # imm = 0x8EFE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_219
.LBB64_209:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$489, %ax               # imm = 0x1E9
	cmpw	$-28899, %ax            # imm = 0x8F1D
	jne	.LBB64_347
# %bb.210:                              # %CheckBadFlow.split856
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28899, BasicBlockSignatureTracker # imm = 0x8F1D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_217
# %bb.211:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-28892, %ax            # imm = 0x8F24
	jne	.LBB64_347
# %bb.212:                              # %CheckBadFlow.split860
	movl	CheckBadFlow.knightmated, %eax
	movw	$-28892, BasicBlockSignatureTracker # imm = 0x8F24
	movw	$57, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_217
# %bb.213:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32678, %ax             # imm = 0x7FA6
	cmpw	$-3966, %ax             # imm = 0xF082
	jne	.LBB64_347
# %bb.214:                              # %CheckBadFlow.split864
	movw	$-3966, BasicBlockSignatureTracker # imm = 0xF082
	movw	$32678, RunTimeSignatureAdjuster # imm = 0x7FA6
# %bb.215:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$105, %ax
	xorw	%cx, %ax
	cmpw	$-28851, %ax            # imm = 0x8F4D
	movq	-144(%rbp), %rcx        # 8-byte Reload
	jne	.LBB64_347
# %bb.216:                              # %CheckBadFlow.split976
	movabsq	$.L.str.73, %rdi
	movb	$0, %al
	movq	%rcx, %rbx
	callq	printf
	movl	$1, (%rbx)
	movw	$-28851, BasicBlockSignatureTracker # imm = 0x8F4D
	movw	$80, RunTimeSignatureAdjuster
.LBB64_217:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$73, %ax
	xorw	%cx, %ax
	cmpw	$-28844, %ax            # imm = 0x8F54
	jne	.LBB64_347
# %bb.218:                              # %CheckBadFlow.split862
	movw	$-28844, BasicBlockSignatureTracker # imm = 0x8F54
	movw	$426, RunTimeSignatureAdjuster # imm = 0x1AA
.LBB64_219:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$421, %ax               # imm = 0x1A5
	xorw	%cx, %ax
	cmpw	$-28837, %ax            # imm = 0x8F5B
	jne	.LBB64_347
# %bb.220:                              # %CheckBadFlow.split858
	movw	$-28837, BasicBlockSignatureTracker # imm = 0x8F5B
	movw	$436, RunTimeSignatureAdjuster # imm = 0x1B4
.LBB64_221:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$399, %ax               # imm = 0x18F
	xorw	%cx, %ax
	cmpw	$-28832, %ax            # imm = 0x8F60
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_347
# %bb.222:                              # %CheckBadFlow.split852
	movl	(%rax), %eax
	movl	CheckBadFlow.bishopmated, %ecx
	movw	$-28832, BasicBlockSignatureTracker # imm = 0x8F60
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB64_239
# %bb.223:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-28831, %ax            # imm = 0x8F61
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_347
# %bb.224:                              # %CheckBadFlow.split866
	movl	(%rax), %eax
	movw	$-28831, BasicBlockSignatureTracker # imm = 0x8F61
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB64_227
# %bb.225:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-28816, %ax            # imm = 0x8F70
	jne	.LBB64_347
# %bb.226:                              # %CheckBadFlow.split870
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$-28816, BasicBlockSignatureTracker # imm = 0x8F70
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_237
.LBB64_227:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-28814, %ax            # imm = 0x8F72
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_347
# %bb.228:                              # %CheckBadFlow.split872
	movl	(%rax), %eax
	movw	$-28814, BasicBlockSignatureTracker # imm = 0x8F72
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_235
# %bb.229:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-28801, %ax            # imm = 0x8F7F
	jne	.LBB64_347
# %bb.230:                              # %CheckBadFlow.split876
	movl	CheckBadFlow.bishopmated, %eax
	movw	$-28801, BasicBlockSignatureTracker # imm = 0x8F7F
	movw	$13, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_235
# %bb.231:                              # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12396, %ax             # imm = 0x306C
	cmpw	$-16621, %ax            # imm = 0xBF13
	jne	.LBB64_347
# %bb.232:                              # %CheckBadFlow.split880
	movw	$-16621, BasicBlockSignatureTracker # imm = 0xBF13
	movw	$12396, RunTimeSignatureAdjuster # imm = 0x306C
# %bb.233:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$245, %ax
	xorw	%cx, %ax
	cmpw	$-28790, %ax            # imm = 0x8F8A
	movq	-144(%rbp), %rcx        # 8-byte Reload
	jne	.LBB64_347
# %bb.234:                              # %CheckBadFlow.split978
	movabsq	$.L.str.74, %rdi
	movb	$0, %al
	movq	%rcx, %rbx
	callq	printf
	movl	$1, (%rbx)
	movw	$-28790, BasicBlockSignatureTracker # imm = 0x8F8A
	movw	$248, RunTimeSignatureAdjuster
.LBB64_235:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$225, %ax
	xorw	%cx, %ax
	cmpw	$-28781, %ax            # imm = 0x8F93
	jne	.LBB64_347
# %bb.236:                              # %CheckBadFlow.split878
	movw	$-28781, BasicBlockSignatureTracker # imm = 0x8F93
	movw	$227, RunTimeSignatureAdjuster
.LBB64_237:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$232, %ax
	xorw	%cx, %ax
	cmpw	$-28776, %ax            # imm = 0x8F98
	jne	.LBB64_347
# %bb.238:                              # %CheckBadFlow.split874
	movw	$-28776, BasicBlockSignatureTracker # imm = 0x8F98
	movw	$248, RunTimeSignatureAdjuster
.LBB64_239:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$200, %ax
	xorw	%cx, %ax
	cmpw	$-28760, %ax            # imm = 0x8FA8
	jne	.LBB64_347
# %bb.240:                              # %CheckBadFlow.split868
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	CheckBadFlow.rookmated, %ecx
	movw	$-28760, BasicBlockSignatureTracker # imm = 0x8FA8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB64_257
# %bb.241:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-28754, %ax            # imm = 0x8FAE
	jne	.LBB64_347
# %bb.242:                              # %CheckBadFlow.split882
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28754, BasicBlockSignatureTracker # imm = 0x8FAE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB64_245
# %bb.243:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-28741, %ax            # imm = 0x8FBB
	movq	-160(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_347
# %bb.244:                              # %CheckBadFlow.split886
	movl	$1, (%rax)
	movw	$-28741, BasicBlockSignatureTracker # imm = 0x8FBB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_255
.LBB64_245:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$102, %ax
	cmpw	$-28728, %ax            # imm = 0x8FC8
	jne	.LBB64_347
# %bb.246:                              # %CheckBadFlow.split888
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28728, BasicBlockSignatureTracker # imm = 0x8FC8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_253
# %bb.247:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-28726, %ax            # imm = 0x8FCA
	jne	.LBB64_347
# %bb.248:                              # %CheckBadFlow.split892
	movl	CheckBadFlow.rookmated, %eax
	movw	$-28726, BasicBlockSignatureTracker # imm = 0x8FCA
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_253
# %bb.249:                              # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22608, %ax            # imm = 0xA7B0
	cmpw	$10362, %ax             # imm = 0x287A
	jne	.LBB64_347
# %bb.250:                              # %CheckBadFlow.split896
	movw	$10362, BasicBlockSignatureTracker # imm = 0x287A
	movw	$-22608, RunTimeSignatureAdjuster # imm = 0xA7B0
# %bb.251:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-28723, %ax            # imm = 0x8FCD
	movq	-144(%rbp), %rcx        # 8-byte Reload
	jne	.LBB64_347
# %bb.252:                              # %CheckBadFlow.split980
	movabsq	$.L.str.75, %rdi
	movb	$0, %al
	movq	%rcx, %rbx
	callq	printf
	movl	$1, (%rbx)
	movw	$-28723, BasicBlockSignatureTracker # imm = 0x8FCD
	movw	$5, RunTimeSignatureAdjuster
.LBB64_253:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-28718, %ax            # imm = 0x8FD2
	jne	.LBB64_347
# %bb.254:                              # %CheckBadFlow.split894
	movw	$-28718, BasicBlockSignatureTracker # imm = 0x8FD2
	movw	$105, RunTimeSignatureAdjuster
.LBB64_255:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$99, %ax
	xorw	%cx, %ax
	cmpw	$-28712, %ax            # imm = 0x8FD8
	jne	.LBB64_347
# %bb.256:                              # %CheckBadFlow.split890
	movw	$-28712, BasicBlockSignatureTracker # imm = 0x8FD8
	movw	$112, RunTimeSignatureAdjuster
.LBB64_257:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$114, %ax
	xorw	%cx, %ax
	cmpw	$-28710, %ax            # imm = 0x8FDA
	jne	.LBB64_347
# %bb.258:                              # %CheckBadFlow.split884
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	CheckBadFlow.queenmated, %ecx
	movw	$-28710, BasicBlockSignatureTracker # imm = 0x8FDA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB64_275
# %bb.259:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$-28685, %ax            # imm = 0x8FF3
	jne	.LBB64_347
# %bb.260:                              # %CheckBadFlow.split898
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28685, BasicBlockSignatureTracker # imm = 0x8FF3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB64_263
# %bb.261:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-28677, %ax            # imm = 0x8FFB
	movq	-152(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_347
# %bb.262:                              # %CheckBadFlow.split902
	movl	$1, (%rax)
	movw	$-28677, BasicBlockSignatureTracker # imm = 0x8FFB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_273
.LBB64_263:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8185, %ax              # imm = 0x1FF9
	cmpw	$-28662, %ax            # imm = 0x900A
	jne	.LBB64_347
# %bb.264:                              # %CheckBadFlow.split904
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28662, BasicBlockSignatureTracker # imm = 0x900A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_271
# %bb.265:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-28653, %ax            # imm = 0x9013
	jne	.LBB64_347
# %bb.266:                              # %CheckBadFlow.split908
	movl	CheckBadFlow.queenmated, %eax
	movw	$-28653, BasicBlockSignatureTracker # imm = 0x9013
	movw	$25, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB64_271
# %bb.267:                              # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-28930, %ax            # imm = 0x8EFE
	cmpw	$7917, %ax              # imm = 0x1EED
	jne	.LBB64_347
# %bb.268:                              # %CheckBadFlow.split912
	movw	$7917, BasicBlockSignatureTracker # imm = 0x1EED
	movw	$-28930, RunTimeSignatureAdjuster # imm = 0x8EFE
# %bb.269:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$-28630, %ax            # imm = 0x902A
	movq	-144(%rbp), %rcx        # 8-byte Reload
	jne	.LBB64_347
# %bb.270:                              # %CheckBadFlow.split982
	movabsq	$.L.str.76, %rdi
	movb	$0, %al
	movq	%rcx, %rbx
	callq	printf
	movl	$1, (%rbx)
	movw	$-28630, BasicBlockSignatureTracker # imm = 0x902A
	movw	$32, RunTimeSignatureAdjuster
.LBB64_271:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$33, %ax
	xorw	%cx, %ax
	cmpw	$-28629, %ax            # imm = 0x902B
	jne	.LBB64_347
# %bb.272:                              # %CheckBadFlow.split910
	movw	$-28629, BasicBlockSignatureTracker # imm = 0x902B
	movw	$8144, RunTimeSignatureAdjuster # imm = 0x1FD0
.LBB64_273:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8129, %ax              # imm = 0x1FC1
	xorw	%cx, %ax
	cmpw	$-28614, %ax            # imm = 0x903A
	jne	.LBB64_347
# %bb.274:                              # %CheckBadFlow.split906
	movw	$-28614, BasicBlockSignatureTracker # imm = 0x903A
	movw	$8160, RunTimeSignatureAdjuster # imm = 0x1FE0
.LBB64_275:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8167, %ax              # imm = 0x1FE7
	xorw	%cx, %ax
	cmpw	$-28611, %ax            # imm = 0x903D
	jne	.LBB64_347
# %bb.276:                              # %CheckBadFlow.split900
	movq	-184(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28611, BasicBlockSignatureTracker # imm = 0x903D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_279
# %bb.277:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$-28600, %ax            # imm = 0x9048
	jne	.LBB64_347
# %bb.278:                              # %CheckBadFlow.split914
	movabsq	$.L.str.77, %rdi
	movb	$0, %al
	callq	printf
	movw	$-28600, BasicBlockSignatureTracker # imm = 0x9048
	movw	$117, RunTimeSignatureAdjuster
.LBB64_279:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$110, %ax
	xorw	%cx, %ax
	cmpw	$-28589, %ax            # imm = 0x9053
	jne	.LBB64_347
# %bb.280:                              # %CheckBadFlow.split916
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28589, BasicBlockSignatureTracker # imm = 0x9053
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_283
# %bb.281:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-28566, %ax            # imm = 0x906A
	jne	.LBB64_347
# %bb.282:                              # %CheckBadFlow.split918
	movabsq	$.L.str.78, %rdi
	movb	$0, %al
	callq	printf
	movw	$-28566, BasicBlockSignatureTracker # imm = 0x906A
	movw	$57, RunTimeSignatureAdjuster
.LBB64_283:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$33, %ax
	xorw	%cx, %ax
	cmpw	$-28558, %ax            # imm = 0x9072
	jne	.LBB64_347
# %bb.284:                              # %CheckBadFlow.split920
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28558, BasicBlockSignatureTracker # imm = 0x9072
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_287
# %bb.285:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$248, %ax
	cmpw	$-28534, %ax            # imm = 0x908A
	jne	.LBB64_347
# %bb.286:                              # %CheckBadFlow.split922
	movabsq	$.L.str.79, %rdi
	movb	$0, %al
	callq	printf
	movw	$-28534, BasicBlockSignatureTracker # imm = 0x908A
	movw	$248, RunTimeSignatureAdjuster
.LBB64_287:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$202, %ax
	xorw	%cx, %ax
	cmpw	$-28488, %ax            # imm = 0x90B8
	movq	-160(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_347
# %bb.288:                              # %CheckBadFlow.split924
	movl	(%rax), %eax
	movw	$-28488, BasicBlockSignatureTracker # imm = 0x90B8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_291
# %bb.289:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-28486, %ax            # imm = 0x90BA
	jne	.LBB64_347
# %bb.290:                              # %CheckBadFlow.split926
	movabsq	$.L.str.80, %rdi
	movb	$0, %al
	callq	printf
	movw	$-28486, BasicBlockSignatureTracker # imm = 0x90BA
	movw	$2, RunTimeSignatureAdjuster
.LBB64_291:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$119, %ax
	xorw	%cx, %ax
	cmpw	$-28465, %ax            # imm = 0x90CF
	movq	-152(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_347
# %bb.292:                              # %CheckBadFlow.split928
	movl	(%rax), %eax
	movw	$-28465, BasicBlockSignatureTracker # imm = 0x90CF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_295
# %bb.293:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-28430, %ax            # imm = 0x90F2
	jne	.LBB64_347
# %bb.294:                              # %CheckBadFlow.split930
	movabsq	$.L.str.81, %rdi
	movb	$0, %al
	callq	printf
	movw	$-28430, BasicBlockSignatureTracker # imm = 0x90F2
	movw	$61, RunTimeSignatureAdjuster
.LBB64_295:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$-28420, %ax            # imm = 0x90FC
	jne	.LBB64_347
# %bb.296:                              # %CheckBadFlow.split932
	movl	piecedead, %eax
	movw	$-28420, BasicBlockSignatureTracker # imm = 0x90FC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_303
# %bb.297:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-28419, %ax            # imm = 0x90FD
	movq	-144(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_347
# %bb.298:                              # %CheckBadFlow.split934
	movl	(%rax), %eax
	movw	$-28419, BasicBlockSignatureTracker # imm = 0x90FD
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_303
# %bb.299:                              # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-5979, %ax             # imm = 0xE8A5
	cmpw	$30808, %ax             # imm = 0x7858
	jne	.LBB64_347
# %bb.300:                              # %CheckBadFlow.split938
	movw	$30808, BasicBlockSignatureTracker # imm = 0x7858
	movw	$-5979, RunTimeSignatureAdjuster # imm = 0xE8A5
# %bb.301:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$508, %ax               # imm = 0x1FC
	xorw	%cx, %ax
	cmpw	$-28415, %ax            # imm = 0x9101
	jne	.LBB64_347
# %bb.302:                              # %CheckBadFlow.split984
	movabsq	$.L.str.82, %rdi
	movl	$0, piecedead
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.83, %rdi
	movb	$0, %al
	callq	printf
	movl	$0, go_fast
	movw	$-28415, BasicBlockSignatureTracker # imm = 0x9101
	movw	$509, RunTimeSignatureAdjuster # imm = 0x1FD
.LBB64_303:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$511, %ax               # imm = 0x1FF
	xorw	%cx, %ax
	cmpw	$-28413, %ax            # imm = 0x9103
	movq	-80(%rbp), %rax         # 8-byte Reload
	jne	.LBB64_347
# %bb.304:                              # %CheckBadFlow.split936
	movl	(%rax), %eax
	movw	$-28413, BasicBlockSignatureTracker # imm = 0x9103
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_307
# %bb.305:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-28409, %ax            # imm = 0x9107
	movq	-80(%rbp), %rax         # 8-byte Reload
	jne	.LBB64_347
# %bb.306:                              # %CheckBadFlow.split940
	movl	(%rax), %eax
	movl	%eax, CheckBadFlow.pawnmated
	movw	$-28409, BasicBlockSignatureTracker # imm = 0x9107
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_309
.LBB64_307:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-28400, %ax            # imm = 0x9110
	jne	.LBB64_347
# %bb.308:                              # %CheckBadFlow.split942
	movl	CheckBadFlow.pawnmated, %eax
	addl	$-1, %eax
	movl	%eax, CheckBadFlow.pawnmated
	movw	$-28400, BasicBlockSignatureTracker # imm = 0x9110
	movw	$23, RunTimeSignatureAdjuster
.LBB64_309:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$-28399, %ax            # imm = 0x9111
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_347
# %bb.310:                              # %CheckBadFlow.split944
	movl	(%rax), %eax
	movw	$-28399, BasicBlockSignatureTracker # imm = 0x9111
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_313
# %bb.311:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-28394, %ax            # imm = 0x9116
	movq	-112(%rbp), %rax        # 8-byte Reload
	jne	.LBB64_347
# %bb.312:                              # %CheckBadFlow.split946
	movl	(%rax), %eax
	movl	%eax, CheckBadFlow.bishopmated
	movw	$-28394, BasicBlockSignatureTracker # imm = 0x9116
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_315
.LBB64_313:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$92, %ax
	cmpw	$-28339, %ax            # imm = 0x914D
	jne	.LBB64_347
# %bb.314:                              # %CheckBadFlow.split948
	movl	CheckBadFlow.bishopmated, %eax
	addl	$-1, %eax
	movl	%eax, CheckBadFlow.bishopmated
	movw	$-28339, BasicBlockSignatureTracker # imm = 0x914D
	movw	$91, RunTimeSignatureAdjuster
.LBB64_315:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$88, %ax
	xorw	%cx, %ax
	cmpw	$-28338, %ax            # imm = 0x914E
	jne	.LBB64_347
# %bb.316:                              # %CheckBadFlow.split950
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28338, BasicBlockSignatureTracker # imm = 0x914E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_319
# %bb.317:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-28332, %ax            # imm = 0x9154
	jne	.LBB64_347
# %bb.318:                              # %CheckBadFlow.split952
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	%eax, CheckBadFlow.rookmated
	movw	$-28332, BasicBlockSignatureTracker # imm = 0x9154
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_321
.LBB64_319:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$-28317, %ax            # imm = 0x9163
	jne	.LBB64_347
# %bb.320:                              # %CheckBadFlow.split954
	movl	CheckBadFlow.rookmated, %eax
	addl	$-1, %eax
	movl	%eax, CheckBadFlow.rookmated
	movw	$-28317, BasicBlockSignatureTracker # imm = 0x9163
	movw	$55, RunTimeSignatureAdjuster
.LBB64_321:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$-28312, %ax            # imm = 0x9168
	jne	.LBB64_347
# %bb.322:                              # %CheckBadFlow.split956
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28312, BasicBlockSignatureTracker # imm = 0x9168
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_325
# %bb.323:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$239, %ax
	cmpw	$-28281, %ax            # imm = 0x9187
	jne	.LBB64_347
# %bb.324:                              # %CheckBadFlow.split958
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	%eax, CheckBadFlow.queenmated
	movw	$-28281, BasicBlockSignatureTracker # imm = 0x9187
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_327
.LBB64_325:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$254, %ax
	cmpw	$-28266, %ax            # imm = 0x9196
	jne	.LBB64_347
# %bb.326:                              # %CheckBadFlow.split960
	movl	CheckBadFlow.queenmated, %eax
	addl	$-1, %eax
	movl	%eax, CheckBadFlow.queenmated
	movw	$-28266, BasicBlockSignatureTracker # imm = 0x9196
	movw	$17, RunTimeSignatureAdjuster
.LBB64_327:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$-28257, %ax            # imm = 0x919F
	jne	.LBB64_347
# %bb.328:                              # %CheckBadFlow.split962
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-28257, BasicBlockSignatureTracker # imm = 0x919F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB64_331
# %bb.329:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$-28246, %ax            # imm = 0x91AA
	jne	.LBB64_347
# %bb.330:                              # %CheckBadFlow.split964
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	%eax, CheckBadFlow.knightmated
	movw	$-28246, BasicBlockSignatureTracker # imm = 0x91AA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB64_333
.LBB64_331:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$52, %ax
	cmpw	$-28245, %ax            # imm = 0x91AB
	jne	.LBB64_347
# %bb.332:                              # %CheckBadFlow.split966
	movl	CheckBadFlow.knightmated, %eax
	addl	$-1, %eax
	movl	%eax, CheckBadFlow.knightmated
	movw	$-28245, BasicBlockSignatureTracker # imm = 0x91AB
	movw	$1, RunTimeSignatureAdjuster
.LBB64_333:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-28232, %ax            # imm = 0x91B8
	jne	.LBB64_347
# %bb.334:                              # %CheckBadFlow.split968
	movw	$-28232, BasicBlockSignatureTracker # imm = 0x91B8
	movw	$7106, RunTimeSignatureAdjuster # imm = 0x1BC2
.LBB64_335:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7102, %ax              # imm = 0x1BBE
	xorw	%cx, %ax
	cmpw	$-28220, %ax            # imm = 0x91C4
	jne	.LBB64_347
# %bb.336:                              # %CheckBadFlow.split652
	movw	$-28220, BasicBlockSignatureTracker # imm = 0x91C4
	movw	$19354, RunTimeSignatureAdjuster # imm = 0x4B9A
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB64_337:                             # %CFerrorHandler.CheckBadFlow.loopexit
	jmp	.LBB64_347
.LBB64_338:                             # %CFerrorHandler.CheckBadFlow.loopexit1
	jmp	.LBB64_347
.LBB64_339:                             # %CFerrorHandler.CheckBadFlow.loopexit2
	jmp	.LBB64_347
.LBB64_340:                             # %CFerrorHandler.CheckBadFlow.loopexit3
	jmp	.LBB64_347
.LBB64_341:                             # %CFerrorHandler.CheckBadFlow.loopexit4
	jmp	.LBB64_347
.LBB64_342:                             # %CFerrorHandler.CheckBadFlow.loopexit5
	jmp	.LBB64_347
.LBB64_343:                             # %CFerrorHandler.CheckBadFlow.loopexit6
	jmp	.LBB64_347
.LBB64_344:                             # %CFerrorHandler.CheckBadFlow.loopexit7
	jmp	.LBB64_347
.LBB64_345:                             # %CFerrorHandler.CheckBadFlow.loopexit8
	jmp	.LBB64_347
.LBB64_346:                             # %CFerrorHandler.CheckBadFlow.loopexit9
	jmp	.LBB64_347
.LBB64_347:                             # %CFerrorHandler.CheckBadFlow
	callq	FAULT_DETECTED_CFC
.Lfunc_end64:
	.size	CheckBadFlow, .Lfunc_end64-CheckBadFlow
	.cfi_endproc
                                        # -- End function
	.globl	Xmalloc                 # -- Begin function Xmalloc
	.p2align	4, 0x90
	.type	Xmalloc,@function
Xmalloc:                                # @Xmalloc
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3189, %ax              # imm = 0xC75
	xorw	%cx, %ax
	cmpw	$-28205, %ax            # imm = 0x91D3
	jne	.LBB65_3
# %bb.1:                                # %Xmalloc.split8
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3189, %ax              # imm = 0xC75
	xorw	%cx, %ax
	cmpw	$-28205, %ax            # imm = 0x91D3
	jne	.LBB65_3
# %bb.2:                                # %Xmalloc.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movl	%edi, (%rax)
	movl	bufftop, %edx
	movl	%edx, (%rcx)
	movl	(%rax), %eax
	addl	bufftop, %eax
	movl	%eax, bufftop
	movq	membuff, %rax
	movslq	(%rcx), %rcx
	addq	%rcx, %rax
	movw	$-28205, BasicBlockSignatureTracker # imm = 0x91D3
	movw	$3290, RunTimeSignatureAdjuster # imm = 0xCDA
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB65_3:                               # %CFerrorHandler.Xmalloc
	callq	FAULT_DETECTED_CFC
.Lfunc_end65:
	.size	Xmalloc, .Lfunc_end65-Xmalloc
	.cfi_endproc
                                        # -- End function
	.globl	Xfree                   # -- Begin function Xfree
	.p2align	4, 0x90
	.type	Xfree,@function
Xfree:                                  # @Xfree
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3836, %ax              # imm = 0xEFC
	xorw	%cx, %ax
	cmpw	$-28176, %ax            # imm = 0x91F0
	jne	.LBB66_7
# %bb.1:                                # %Xfree.split36
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3836, %ax              # imm = 0xEFC
	xorw	%cx, %ax
	cmpw	$-28176, %ax            # imm = 0x91F0
	jne	.LBB66_7
# %bb.2:                                # %Xfree.split34
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3836, %ax              # imm = 0xEFC
	xorw	%cx, %ax
	cmpw	$-28176, %ax            # imm = 0x91F0
	jne	.LBB66_7
# %bb.3:                                # %Xfree.split32
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3836, %ax              # imm = 0xEFC
	xorw	%cx, %ax
	cmpw	$-28176, %ax            # imm = 0x91F0
	jne	.LBB66_7
# %bb.4:                                # %Xfree.split30
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3836, %ax              # imm = 0xEFC
	xorw	%cx, %ax
	cmpw	$-28176, %ax            # imm = 0x91F0
	jne	.LBB66_7
# %bb.5:                                # %Xfree.split28
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3836, %ax              # imm = 0xEFC
	xorw	%cx, %ax
	cmpw	$-28176, %ax            # imm = 0x91F0
	jne	.LBB66_7
# %bb.6:                                # %Xfree.split
	movl	$0, bufftop
	movw	$-28176, BasicBlockSignatureTracker # imm = 0x91F0
	movw	$3829, RunTimeSignatureAdjuster # imm = 0xEF5
	popq	%rbp
	retq
.LBB66_7:                               # %CFerrorHandler.Xfree
	callq	FAULT_DETECTED_CFC
.Lfunc_end66:
	.size	Xfree, .Lfunc_end66-Xfree
	.cfi_endproc
                                        # -- End function
	.globl	freenodes               # -- Begin function freenodes
	.p2align	4, 0x90
	.type	freenodes,@function
freenodes:                              # @freenodes
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$-28144, %ax            # imm = 0x9210
	jne	.LBB67_29
# %bb.1:                                # %freenodes.split74
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rdi, (%rbx)
	movq	(%rbx), %rax
	movw	$-28144, BasicBlockSignatureTracker # imm = 0x9210
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB67_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-28138, %ax            # imm = 0x9216
	jne	.LBB67_29
# %bb.3:                                # %freenodes.split52
	movw	$-28138, BasicBlockSignatureTracker # imm = 0x9216
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB67_26
.LBB67_4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-28137, %ax            # imm = 0x9217
	jne	.LBB67_29
# %bb.5:                                # %freenodes.split
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movw	$-28137, BasicBlockSignatureTracker # imm = 0x9217
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB67_24
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-28120, %ax            # imm = 0x9228
	jne	.LBB67_29
# %bb.7:                                # %freenodes.split56
	movq	(%rbx), %rax
	movzbl	1(%rax), %eax
	movw	$-28120, BasicBlockSignatureTracker # imm = 0x9228
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB67_22
# %bb.8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-28119, %ax            # imm = 0x9229
	jne	.LBB67_29
# %bb.9:                                # %freenodes.split60
	movl	$0, (%r14)
	movw	$-28119, BasicBlockSignatureTracker # imm = 0x9229
	movw	$0, RunTimeSignatureAdjuster
.LBB67_10:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$-28108, %ax            # imm = 0x9234
	jne	.LBB67_28
# %bb.11:                               # %freenodes.split64
                                        #   in Loop: Header=BB67_10 Depth=1
	movl	(%r14), %eax
	movq	(%rbx), %rcx
	movzbl	1(%rcx), %ecx
	movw	$-28108, BasicBlockSignatureTracker # imm = 0x9234
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB67_20
# %bb.12:                               #   in Loop: Header=BB67_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-28105, %ax            # imm = 0x9237
	jne	.LBB67_28
# %bb.13:                               # %freenodes.split66
                                        #   in Loop: Header=BB67_10 Depth=1
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movslq	(%r14), %rcx
	movq	(%rax,%rcx,8), %rax
	movw	$-28105, BasicBlockSignatureTracker # imm = 0x9237
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB67_16
# %bb.14:                               #   in Loop: Header=BB67_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-28101, %ax            # imm = 0x923B
	jne	.LBB67_28
# %bb.15:                               # %freenodes.split70
                                        #   in Loop: Header=BB67_10 Depth=1
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movslq	(%r14), %rcx
	movq	(%rax,%rcx,8), %rdi
	movw	$-28101, BasicBlockSignatureTracker # imm = 0x923B
	movw	$0, RunTimeSignatureAdjuster
	callq	freenodes
	movw	$-28101, BasicBlockSignatureTracker # imm = 0x923B
	movw	$12, RunTimeSignatureAdjuster
	movw	$-28101, BasicBlockSignatureTracker # imm = 0x923B
	movw	$12, RunTimeSignatureAdjuster
.LBB67_16:                              #   in Loop: Header=BB67_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$118, %ax
	xorw	%cx, %ax
	cmpw	$-28095, %ax            # imm = 0x9241
	jne	.LBB67_28
# %bb.17:                               # %freenodes.split72
                                        #   in Loop: Header=BB67_10 Depth=1
	movw	$-28095, BasicBlockSignatureTracker # imm = 0x9241
	movw	$0, RunTimeSignatureAdjuster
# %bb.18:                               #   in Loop: Header=BB67_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-28090, %ax            # imm = 0x9246
	jne	.LBB67_28
# %bb.19:                               # %freenodes.split76
                                        #   in Loop: Header=BB67_10 Depth=1
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movw	$-28090, BasicBlockSignatureTracker # imm = 0x9246
	movw	$111, RunTimeSignatureAdjuster
	jmp	.LBB67_10
.LBB67_20:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$-28086, %ax            # imm = 0x924A
	jne	.LBB67_29
# %bb.21:                               # %freenodes.split68
	movq	(%rbx), %rax
	movq	16(%rax), %rdi
	callq	free
	movw	$-28086, BasicBlockSignatureTracker # imm = 0x924A
	movw	$98, RunTimeSignatureAdjuster
.LBB67_22:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$127, %ax
	xorw	%cx, %ax
	cmpw	$-28073, %ax            # imm = 0x9257
	jne	.LBB67_29
# %bb.23:                               # %freenodes.split62
	movw	$-28073, BasicBlockSignatureTracker # imm = 0x9257
	movw	$64, RunTimeSignatureAdjuster
.LBB67_24:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$115, %ax
	xorw	%cx, %ax
	cmpw	$-28060, %ax            # imm = 0x9264
	jne	.LBB67_29
# %bb.25:                               # %freenodes.split58
	movq	(%rbx), %rdi
	callq	free
	movw	$-28060, BasicBlockSignatureTracker # imm = 0x9264
	movw	$114, RunTimeSignatureAdjuster
.LBB67_26:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$108, %ax
	xorw	%cx, %ax
	cmpw	$-28038, %ax            # imm = 0x927A
	jne	.LBB67_29
# %bb.27:                               # %freenodes.split54
	movw	$-28038, BasicBlockSignatureTracker # imm = 0x927A
	movw	$77, RunTimeSignatureAdjuster
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB67_28:                              # %CFerrorHandler.freenodes.loopexit
	jmp	.LBB67_29
.LBB67_29:                              # %CFerrorHandler.freenodes
	callq	FAULT_DETECTED_CFC
.Lfunc_end67:
	.size	freenodes, .Lfunc_end67-freenodes
	.cfi_endproc
                                        # -- End function
	.globl	pn_eval                 # -- Begin function pn_eval
	.p2align	4, 0x90
	.type	pn_eval,@function
pn_eval:                                # @pn_eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3872, %ax              # imm = 0xF20
	xorw	%cx, %ax
	cmpw	$-28017, %ax            # imm = 0x928F
	jne	.LBB68_18
# %bb.1:                                # %pn_eval.split63
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3872, %ax              # imm = 0xF20
	xorw	%cx, %ax
	cmpw	$-28017, %ax            # imm = 0x928F
	jne	.LBB68_18
# %bb.2:                                # %pn_eval.split61
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3872, %ax              # imm = 0xF20
	xorw	%cx, %ax
	cmpw	$-28017, %ax            # imm = 0x928F
	jne	.LBB68_18
# %bb.3:                                # %pn_eval.split59
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3872, %ax              # imm = 0xF20
	xorw	%cx, %ax
	cmpw	$-28017, %ax            # imm = 0x928F
	jne	.LBB68_18
# %bb.4:                                # %pn_eval.split57
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3872, %ax              # imm = 0xF20
	xorw	%cx, %ax
	cmpw	$-28017, %ax            # imm = 0x928F
	jne	.LBB68_18
# %bb.5:                                # %pn_eval.split55
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rdi, (%rax)
	movl	Variant, %ecx
	movw	$-28017, BasicBlockSignatureTracker # imm = 0x928F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %ecx
	jne	.LBB68_8
# %bb.6:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$20, %cx
	cmpw	$-28005, %cx            # imm = 0x929B
	jne	.LBB68_18
# %bb.7:                                # %pn_eval.split
	movq	(%rax), %rdi
	movw	$-28005, BasicBlockSignatureTracker # imm = 0x929B
	movw	$0, RunTimeSignatureAdjuster
	callq	suicide_pn_eval
	movw	$-28005, BasicBlockSignatureTracker # imm = 0x929B
	movw	$0, RunTimeSignatureAdjuster
	movw	$-28005, BasicBlockSignatureTracker # imm = 0x929B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB68_16
.LBB68_8:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$16, %cx
	cmpw	$-28001, %cx            # imm = 0x929F
	jne	.LBB68_18
# %bb.9:                                # %pn_eval.split45
	movl	Variant, %ecx
	movw	$-28001, BasicBlockSignatureTracker # imm = 0x929F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %ecx
	jne	.LBB68_12
# %bb.10:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$59, %cx
	cmpw	$-27996, %cx            # imm = 0x92A4
	jne	.LBB68_18
# %bb.11:                               # %pn_eval.split49
	movq	(%rax), %rdi
	movw	$-27996, BasicBlockSignatureTracker # imm = 0x92A4
	movw	$0, RunTimeSignatureAdjuster
	callq	losers_pn_eval
	movw	$-27996, BasicBlockSignatureTracker # imm = 0x92A4
	movw	$0, RunTimeSignatureAdjuster
	movw	$-27996, BasicBlockSignatureTracker # imm = 0x92A4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB68_14
.LBB68_12:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$50, %cx
	cmpw	$-27987, %cx            # imm = 0x92AD
	jne	.LBB68_18
# %bb.13:                               # %pn_eval.split51
	movq	(%rax), %rdi
	movw	$-27987, BasicBlockSignatureTracker # imm = 0x92AD
	movw	$0, RunTimeSignatureAdjuster
	callq	std_pn_eval
	movw	$-27987, BasicBlockSignatureTracker # imm = 0x92AD
	movw	$9, RunTimeSignatureAdjuster
	movw	$-27987, BasicBlockSignatureTracker # imm = 0x92AD
	movw	$9, RunTimeSignatureAdjuster
.LBB68_14:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-27974, %ax            # imm = 0x92BA
	jne	.LBB68_18
# %bb.15:                               # %pn_eval.split53
	movw	$-27974, BasicBlockSignatureTracker # imm = 0x92BA
	movw	$33, RunTimeSignatureAdjuster
.LBB68_16:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$-27973, %ax            # imm = 0x92BB
	jne	.LBB68_18
# %bb.17:                               # %pn_eval.split47
	movw	$-27973, BasicBlockSignatureTracker # imm = 0x92BB
	movw	$3857, RunTimeSignatureAdjuster # imm = 0xF11
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB68_18:                              # %CFerrorHandler.pn_eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end68:
	.size	pn_eval, .Lfunc_end68-pn_eval
	.cfi_endproc
                                        # -- End function
	.globl	suicide_pn_eval         # -- Begin function suicide_pn_eval
	.p2align	4, 0x90
	.type	suicide_pn_eval,@function
suicide_pn_eval:                        # @suicide_pn_eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$72, %ax
	xorw	%cx, %ax
	cmpw	$-27949, %ax            # imm = 0x92D3
	jne	.LBB69_67
# %bb.1:                                # %suicide_pn_eval.split
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rdi, (%r8)
	movl	$0, (%rdx)
	movl	$0, (%r10)
	movq	(%r8), %rdi
	movb	$1, 3(%rdi)
	movl	$1, (%rsi)
	movl	$1, (%rax)
	movw	$-27949, BasicBlockSignatureTracker # imm = 0x92D3
	movw	$0, RunTimeSignatureAdjuster
.LBB69_2:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %di
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %di
	xorw	%cx, %di
	cmpw	$-27948, %di            # imm = 0x92D4
	jne	.LBB69_66
# %bb.3:                                # %suicide_pn_eval.split105
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	(%rax), %ecx
	movl	piece_count, %edi
	movw	$-27948, BasicBlockSignatureTracker # imm = 0x92D4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edi, %ecx
	jg	.LBB69_39
# %bb.4:                                #   in Loop: Header=BB69_2 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	xorw	$62, %cx
	cmpw	$-27926, %cx            # imm = 0x92EA
	jne	.LBB69_66
# %bb.5:                                # %suicide_pn_eval.split107
                                        #   in Loop: Header=BB69_2 Depth=1
	movslq	(%rsi), %rcx
	movl	pieces(,%rcx,4), %ecx
	movl	%ecx, (%r9)
	movl	(%r9), %ecx
	movw	$-27926, BasicBlockSignatureTracker # imm = 0x92EA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	jne	.LBB69_8
# %bb.6:                                #   in Loop: Header=BB69_2 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	xorw	$24, %cx
	cmpw	$-27918, %cx            # imm = 0x92F2
	jne	.LBB69_66
# %bb.7:                                # %suicide_pn_eval.split113
                                        #   in Loop: Header=BB69_2 Depth=1
	movw	$-27918, BasicBlockSignatureTracker # imm = 0x92F2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB69_37
.LBB69_8:                               #   in Loop: Header=BB69_2 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	xorw	$18, %cx
	cmpw	$-27912, %cx            # imm = 0x92F8
	jne	.LBB69_66
# %bb.9:                                # %suicide_pn_eval.split111
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	(%rax), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rax)
	movw	$-27912, BasicBlockSignatureTracker # imm = 0x92F8
	movw	$0, RunTimeSignatureAdjuster
# %bb.10:                               #   in Loop: Header=BB69_2 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	xorw	$2, %cx
	cmpw	$-27910, %cx            # imm = 0x92FA
	jne	.LBB69_66
# %bb.11:                               # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movslq	(%r9), %rcx
	movl	board(,%rcx,4), %edi
	movw	$-27910, BasicBlockSignatureTracker(%rip) # imm = 0x92FA
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movl	%edi, %ecx
	subl	$1, %ecx
	je	.LBB69_23
	jmp	.LBB69_12
.LBB69_12:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	%edi, %ecx
	subl	$2, %ecx
	je	.LBB69_25
	jmp	.LBB69_13
.LBB69_13:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	%edi, %ecx
	subl	$3, %ecx
	je	.LBB69_23
	jmp	.LBB69_14
.LBB69_14:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	%edi, %ecx
	subl	$4, %ecx
	je	.LBB69_25
	jmp	.LBB69_15
.LBB69_15:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	%edi, %ecx
	subl	$5, %ecx
	je	.LBB69_23
	jmp	.LBB69_16
.LBB69_16:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	%edi, %ecx
	subl	$6, %ecx
	je	.LBB69_25
	jmp	.LBB69_17
.LBB69_17:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	%edi, %ecx
	subl	$7, %ecx
	je	.LBB69_23
	jmp	.LBB69_18
.LBB69_18:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	%edi, %ecx
	subl	$8, %ecx
	je	.LBB69_25
	jmp	.LBB69_19
.LBB69_19:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	%edi, %ecx
	subl	$9, %ecx
	je	.LBB69_23
	jmp	.LBB69_20
.LBB69_20:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	%edi, %ecx
	subl	$10, %ecx
	je	.LBB69_25
	jmp	.LBB69_21
.LBB69_21:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	%edi, %ecx
	subl	$11, %ecx
	je	.LBB69_23
	jmp	.LBB69_22
.LBB69_22:                              # %suicide_pn_eval.split117
                                        #   in Loop: Header=BB69_2 Depth=1
	subl	$12, %edi
	je	.LBB69_25
	jmp	.LBB69_27
.LBB69_23:                              #   in Loop: Header=BB69_2 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %di
	xorw	$5, %cx
	xorw	%di, %cx
	cmpw	$-27905, %cx            # imm = 0x92FF
	jne	.LBB69_66
# %bb.24:                               # %suicide_pn_eval.split121
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	(%rdx), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rdx)
	movw	$-27905, BasicBlockSignatureTracker # imm = 0x92FF
	movw	$5, RunTimeSignatureAdjuster
	jmp	.LBB69_27
.LBB69_25:                              #   in Loop: Header=BB69_2 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %di
	xorw	$508, %cx               # imm = 0x1FC
	xorw	%di, %cx
	cmpw	$-27898, %cx            # imm = 0x9306
	jne	.LBB69_66
# %bb.26:                               # %suicide_pn_eval.split123
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	(%r10), %ecx
	addl	$1, %ecx
	movl	%ecx, (%r10)
	movw	$-27898, BasicBlockSignatureTracker # imm = 0x9306
	movw	$508, RunTimeSignatureAdjuster # imm = 0x1FC
.LBB69_27:                              #   in Loop: Header=BB69_2 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %di
	xorw	$474, %cx               # imm = 0x1DA
	xorw	%di, %cx
	cmpw	$-27872, %cx            # imm = 0x9320
	jne	.LBB69_66
# %bb.28:                               # %suicide_pn_eval.split119
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	(%rdx), %ecx
	movw	$-27872, BasicBlockSignatureTracker # imm = 0x9320
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB69_35
# %bb.29:                               #   in Loop: Header=BB69_2 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	xorw	$17, %cx
	cmpw	$-27855, %cx            # imm = 0x9331
	jne	.LBB69_66
# %bb.30:                               # %suicide_pn_eval.split125
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	(%r10), %ecx
	movw	$-27855, BasicBlockSignatureTracker # imm = 0x9331
	movw	$17, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB69_35
# %bb.31:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11812, %ax             # imm = 0x2E24
	cmpw	$-17131, %ax            # imm = 0xBD15
	jne	.LBB69_67
# %bb.32:                               # %suicide_pn_eval.split129
	movw	$-17131, BasicBlockSignatureTracker # imm = 0xBD15
	movw	$11812, RunTimeSignatureAdjuster # imm = 0x2E24
# %bb.33:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-27849, %ax            # imm = 0x9337
	jne	.LBB69_67
# %bb.34:                               # %suicide_pn_eval.split155
	movw	$-27849, BasicBlockSignatureTracker # imm = 0x9337
	movw	$483, RunTimeSignatureAdjuster # imm = 0x1E3
	jmp	.LBB69_40
.LBB69_35:                              #   in Loop: Header=BB69_2 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %di
	xorw	$102, %cx
	xorw	%di, %cx
	cmpw	$-27834, %cx            # imm = 0x9346
	jne	.LBB69_66
# %bb.36:                               # %suicide_pn_eval.split127
                                        #   in Loop: Header=BB69_2 Depth=1
	movw	$-27834, BasicBlockSignatureTracker # imm = 0x9346
	movw	$436, RunTimeSignatureAdjuster # imm = 0x1B4
.LBB69_37:                              #   in Loop: Header=BB69_2 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %di
	xorw	$425, %cx               # imm = 0x1A9
	xorw	%di, %cx
	cmpw	$-27813, %cx            # imm = 0x935B
	jne	.LBB69_66
# %bb.38:                               # %suicide_pn_eval.split115
                                        #   in Loop: Header=BB69_2 Depth=1
	movl	(%rsi), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rsi)
	movw	$-27813, BasicBlockSignatureTracker # imm = 0x935B
	movw	$392, RunTimeSignatureAdjuster # imm = 0x188
	jmp	.LBB69_2
.LBB69_39:                              # %.loopexit
	jmp	.LBB69_40
.LBB69_40:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$446, %ax               # imm = 0x1BE
	xorw	%cx, %ax
	cmpw	$-27798, %ax            # imm = 0x936A
	jne	.LBB69_67
# %bb.41:                               # %suicide_pn_eval.split109
	movl	(%rdx), %eax
	movw	$-27798, BasicBlockSignatureTracker # imm = 0x936A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB69_50
# %bb.42:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-27784, %ax            # imm = 0x9378
	jne	.LBB69_67
# %bb.43:                               # %suicide_pn_eval.split133
	movl	root_to_move, %eax
	movw	$-27784, BasicBlockSignatureTracker # imm = 0x9378
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB69_46
# %bb.44:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$255, %ax
	cmpw	$-27769, %ax            # imm = 0x9387
	jne	.LBB69_67
# %bb.45:                               # %suicide_pn_eval.split137
	movq	(%r8), %rax
	movb	$1, (%rax)
	movw	$-27769, BasicBlockSignatureTracker # imm = 0x9387
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB69_48
.LBB69_46:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$245, %ax
	cmpw	$-27763, %ax            # imm = 0x938D
	jne	.LBB69_67
# %bb.47:                               # %suicide_pn_eval.split135
	movq	(%r8), %rax
	movb	$0, (%rax)
	movw	$-27763, BasicBlockSignatureTracker # imm = 0x938D
	movw	$10, RunTimeSignatureAdjuster
.LBB69_48:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$-27732, %ax            # imm = 0x93AC
	jne	.LBB69_67
# %bb.49:                               # %suicide_pn_eval.split139
	movw	$-27732, BasicBlockSignatureTracker # imm = 0x93AC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB69_64
.LBB69_50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$168, %ax
	cmpw	$-27710, %ax            # imm = 0x93C2
	jne	.LBB69_67
# %bb.51:                               # %suicide_pn_eval.split131
	movl	(%r10), %eax
	movw	$-27710, BasicBlockSignatureTracker # imm = 0x93C2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB69_60
# %bb.52:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-27695, %ax            # imm = 0x93D1
	jne	.LBB69_67
# %bb.53:                               # %suicide_pn_eval.split145
	movl	root_to_move, %eax
	movw	$-27695, BasicBlockSignatureTracker # imm = 0x93D1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB69_56
# %bb.54:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-27666, %ax            # imm = 0x93EE
	jne	.LBB69_67
# %bb.55:                               # %suicide_pn_eval.split149
	movq	(%r8), %rax
	movb	$0, (%rax)
	movw	$-27666, BasicBlockSignatureTracker # imm = 0x93EE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB69_58
.LBB69_56:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32, %ax
	cmpw	$-27663, %ax            # imm = 0x93F1
	jne	.LBB69_67
# %bb.57:                               # %suicide_pn_eval.split147
	movq	(%r8), %rax
	movb	$1, (%rax)
	movw	$-27663, BasicBlockSignatureTracker # imm = 0x93F1
	movw	$31, RunTimeSignatureAdjuster
.LBB69_58:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$-27661, %ax            # imm = 0x93F3
	jne	.LBB69_67
# %bb.59:                               # %suicide_pn_eval.split151
	movw	$-27661, BasicBlockSignatureTracker # imm = 0x93F3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB69_62
.LBB69_60:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-27649, %ax            # imm = 0x93FF
	jne	.LBB69_67
# %bb.61:                               # %suicide_pn_eval.split143
	movq	(%r8), %rax
	movb	$2, (%rax)
	movw	$-27649, BasicBlockSignatureTracker # imm = 0x93FF
	movw	$12, RunTimeSignatureAdjuster
.LBB69_62:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2034, %ax              # imm = 0x7F2
	xorw	%cx, %ax
	cmpw	$-27647, %ax            # imm = 0x9401
	jne	.LBB69_67
# %bb.63:                               # %suicide_pn_eval.split153
	movw	$-27647, BasicBlockSignatureTracker # imm = 0x9401
	movw	$1965, RunTimeSignatureAdjuster # imm = 0x7AD
.LBB69_64:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1978, %ax              # imm = 0x7BA
	xorw	%cx, %ax
	cmpw	$-27626, %ax            # imm = 0x9416
	jne	.LBB69_67
# %bb.65:                               # %suicide_pn_eval.split141
	movw	$-27626, BasicBlockSignatureTracker # imm = 0x9416
	movw	$1689, RunTimeSignatureAdjuster # imm = 0x699
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB69_66:                              # %CFerrorHandler.suicide_pn_eval.loopexit
	jmp	.LBB69_67
.LBB69_67:                              # %CFerrorHandler.suicide_pn_eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end69:
	.size	suicide_pn_eval, .Lfunc_end69-suicide_pn_eval
	.cfi_endproc
                                        # -- End function
	.globl	losers_pn_eval          # -- Begin function losers_pn_eval
	.p2align	4, 0x90
	.type	losers_pn_eval,@function
losers_pn_eval:                         # @losers_pn_eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1694, %ax              # imm = 0x69E
	xorw	%cx, %ax
	cmpw	$-27590, %ax            # imm = 0x943A
	jne	.LBB70_123
# %bb.1:                                # %losers_pn_eval.split
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r14
	addq	$-12288, %r14           # imm = 0xD000
	movq	%r14, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rdi, (%r15)
	movl	$0, (%rcx)
	movl	$0, (%rax)
	movq	(%r15), %rdi
	movb	$1, 3(%rdi)
	movl	$1, (%rdx)
	movl	$1, (%rsi)
	movw	$-27590, BasicBlockSignatureTracker # imm = 0x943A
	movw	$0, RunTimeSignatureAdjuster
.LBB70_2:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %di
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$7, %di
	xorw	%bx, %di
	cmpw	$-27587, %di            # imm = 0x943D
	jne	.LBB70_122
# %bb.3:                                # %losers_pn_eval.split206
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	(%rsi), %edi
	movl	piece_count, %ebx
	movw	$-27587, BasicBlockSignatureTracker # imm = 0x943D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ebx, %edi
	jg	.LBB70_37
# %bb.4:                                #   in Loop: Header=BB70_2 Depth=1
	movw	BasicBlockSignatureTracker, %di
	xorw	$3, %di
	cmpw	$-27586, %di            # imm = 0x943E
	jne	.LBB70_122
# %bb.5:                                # %losers_pn_eval.split208
                                        #   in Loop: Header=BB70_2 Depth=1
	movslq	(%rdx), %rdi
	movl	pieces(,%rdi,4), %edi
	movl	%edi, (%r13)
	movl	(%r13), %edi
	movw	$-27586, BasicBlockSignatureTracker # imm = 0x943E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edi
	jne	.LBB70_8
# %bb.6:                                #   in Loop: Header=BB70_2 Depth=1
	movw	BasicBlockSignatureTracker, %di
	xorw	$116, %di
	cmpw	$-27574, %di            # imm = 0x944A
	jne	.LBB70_122
# %bb.7:                                # %losers_pn_eval.split214
                                        #   in Loop: Header=BB70_2 Depth=1
	movw	$-27574, BasicBlockSignatureTracker # imm = 0x944A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB70_35
.LBB70_8:                               #   in Loop: Header=BB70_2 Depth=1
	movw	BasicBlockSignatureTracker, %di
	xorw	$108, %di
	cmpw	$-27566, %di            # imm = 0x9452
	jne	.LBB70_122
# %bb.9:                                # %losers_pn_eval.split212
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	(%rsi), %edi
	addl	$1, %edi
	movl	%edi, (%rsi)
	movw	$-27566, BasicBlockSignatureTracker # imm = 0x9452
	movw	$0, RunTimeSignatureAdjuster
# %bb.10:                               #   in Loop: Header=BB70_2 Depth=1
	movw	BasicBlockSignatureTracker, %di
	xorw	$1, %di
	cmpw	$-27565, %di            # imm = 0x9453
	jne	.LBB70_122
# %bb.11:                               # %losers_pn_eval.split218
                                        #   in Loop: Header=BB70_2 Depth=1
	movslq	(%r13), %rdi
	movl	board(,%rdi,4), %ebx
	movw	$-27565, BasicBlockSignatureTracker(%rip) # imm = 0x9453
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movl	%ebx, %edi
	subl	$1, %edi
	je	.LBB70_21
	jmp	.LBB70_12
.LBB70_12:                              # %losers_pn_eval.split218
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	%ebx, %edi
	subl	$2, %edi
	je	.LBB70_23
	jmp	.LBB70_13
.LBB70_13:                              # %losers_pn_eval.split218
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	%ebx, %edi
	subl	$3, %edi
	je	.LBB70_21
	jmp	.LBB70_14
.LBB70_14:                              # %losers_pn_eval.split218
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	%ebx, %edi
	subl	$4, %edi
	je	.LBB70_23
	jmp	.LBB70_15
.LBB70_15:                              # %losers_pn_eval.split218
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	%ebx, %edi
	subl	$7, %edi
	je	.LBB70_21
	jmp	.LBB70_16
.LBB70_16:                              # %losers_pn_eval.split218
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	%ebx, %edi
	subl	$8, %edi
	je	.LBB70_23
	jmp	.LBB70_17
.LBB70_17:                              # %losers_pn_eval.split218
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	%ebx, %edi
	subl	$9, %edi
	je	.LBB70_21
	jmp	.LBB70_18
.LBB70_18:                              # %losers_pn_eval.split218
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	%ebx, %edi
	subl	$10, %edi
	je	.LBB70_23
	jmp	.LBB70_19
.LBB70_19:                              # %losers_pn_eval.split218
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	%ebx, %edi
	subl	$11, %edi
	je	.LBB70_21
	jmp	.LBB70_20
.LBB70_20:                              # %losers_pn_eval.split218
                                        #   in Loop: Header=BB70_2 Depth=1
	subl	$12, %ebx
	je	.LBB70_23
	jmp	.LBB70_25
.LBB70_21:                              #   in Loop: Header=BB70_2 Depth=1
	movw	BasicBlockSignatureTracker, %di
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$13, %di
	xorw	%bx, %di
	cmpw	$-27554, %di            # imm = 0x945E
	jne	.LBB70_122
# %bb.22:                               # %losers_pn_eval.split222
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	(%rcx), %edi
	addl	$1, %edi
	movl	%edi, (%rcx)
	movw	$-27554, BasicBlockSignatureTracker # imm = 0x945E
	movw	$13, RunTimeSignatureAdjuster
	jmp	.LBB70_25
.LBB70_23:                              #   in Loop: Header=BB70_2 Depth=1
	movw	BasicBlockSignatureTracker, %di
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$55, %di
	xorw	%bx, %di
	cmpw	$-27548, %di            # imm = 0x9464
	jne	.LBB70_122
# %bb.24:                               # %losers_pn_eval.split224
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	(%rax), %edi
	addl	$1, %edi
	movl	%edi, (%rax)
	movw	$-27548, BasicBlockSignatureTracker # imm = 0x9464
	movw	$55, RunTimeSignatureAdjuster
.LBB70_25:                              #   in Loop: Header=BB70_2 Depth=1
	movw	BasicBlockSignatureTracker, %di
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$60, %di
	xorw	%bx, %di
	cmpw	$-27537, %di            # imm = 0x946F
	jne	.LBB70_122
# %bb.26:                               # %losers_pn_eval.split220
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	(%rcx), %edi
	movw	$-27537, BasicBlockSignatureTracker # imm = 0x946F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edi
	je	.LBB70_33
# %bb.27:                               #   in Loop: Header=BB70_2 Depth=1
	movw	BasicBlockSignatureTracker, %di
	xorw	$31, %di
	cmpw	$-27536, %di            # imm = 0x9470
	jne	.LBB70_122
# %bb.28:                               # %losers_pn_eval.split226
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	(%rax), %edi
	movw	$-27536, BasicBlockSignatureTracker # imm = 0x9470
	movw	$31, RunTimeSignatureAdjuster
	cmpl	$0, %edi
	je	.LBB70_33
# %bb.29:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %dx
	xorw	$-14713, %dx            # imm = 0xC687
	cmpw	$21239, %dx             # imm = 0x52F7
	jne	.LBB70_123
# %bb.30:                               # %losers_pn_eval.split230
	movw	$21239, BasicBlockSignatureTracker # imm = 0x52F7
	movw	$-14713, RunTimeSignatureAdjuster # imm = 0xC687
# %bb.31:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$4, %dx
	xorw	%si, %dx
	cmpw	$-27532, %dx            # imm = 0x9474
	jne	.LBB70_123
# %bb.32:                               # %losers_pn_eval.split308
	movw	$-27532, BasicBlockSignatureTracker # imm = 0x9474
	movw	$73, RunTimeSignatureAdjuster
	jmp	.LBB70_38
.LBB70_33:                              #   in Loop: Header=BB70_2 Depth=1
	movw	BasicBlockSignatureTracker, %di
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$19, %di
	xorw	%bx, %di
	cmpw	$-27524, %di            # imm = 0x947C
	jne	.LBB70_122
# %bb.34:                               # %losers_pn_eval.split228
                                        #   in Loop: Header=BB70_2 Depth=1
	movw	$-27524, BasicBlockSignatureTracker # imm = 0x947C
	movw	$54, RunTimeSignatureAdjuster
.LBB70_35:                              #   in Loop: Header=BB70_2 Depth=1
	movw	BasicBlockSignatureTracker, %di
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$202, %di
	xorw	%bx, %di
	cmpw	$-27520, %di            # imm = 0x9480
	jne	.LBB70_122
# %bb.36:                               # %losers_pn_eval.split216
                                        #   in Loop: Header=BB70_2 Depth=1
	movl	(%rdx), %edi
	addl	$1, %edi
	movl	%edi, (%rdx)
	movw	$-27520, BasicBlockSignatureTracker # imm = 0x9480
	movw	$186, RunTimeSignatureAdjuster
	jmp	.LBB70_2
.LBB70_37:                              # %.loopexit4
	jmp	.LBB70_38
.LBB70_38:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$183, %dx
	xorw	%si, %dx
	cmpw	$-27510, %dx            # imm = 0x948A
	jne	.LBB70_123
# %bb.39:                               # %losers_pn_eval.split210
	movl	(%rcx), %ecx
	movw	$-27510, BasicBlockSignatureTracker # imm = 0x948A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	jne	.LBB70_48
# %bb.40:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-27506, %ax            # imm = 0x948E
	jne	.LBB70_123
# %bb.41:                               # %losers_pn_eval.split234
	movl	root_to_move, %eax
	movw	$-27506, BasicBlockSignatureTracker # imm = 0x948E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB70_44
# %bb.42:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$-27476, %ax            # imm = 0x94AC
	jne	.LBB70_123
# %bb.43:                               # %losers_pn_eval.split238
	movq	(%r15), %rax
	movb	$1, (%rax)
	movw	$-27476, BasicBlockSignatureTracker # imm = 0x94AC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB70_46
.LBB70_44:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-27472, %ax            # imm = 0x94B0
	jne	.LBB70_123
# %bb.45:                               # %losers_pn_eval.split236
	movq	(%r15), %rax
	movb	$0, (%rax)
	movw	$-27472, BasicBlockSignatureTracker # imm = 0x94B0
	movw	$28, RunTimeSignatureAdjuster
.LBB70_46:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-27469, %ax            # imm = 0x94B3
	jne	.LBB70_123
# %bb.47:                               # %losers_pn_eval.split240
	movw	$-27469, BasicBlockSignatureTracker # imm = 0x94B3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB70_118
.LBB70_48:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$77, %cx
	cmpw	$-27449, %cx            # imm = 0x94C7
	jne	.LBB70_123
# %bb.49:                               # %losers_pn_eval.split232
	movl	(%rax), %eax
	movw	$-27449, BasicBlockSignatureTracker # imm = 0x94C7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB70_58
# %bb.50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-27442, %ax            # imm = 0x94CE
	jne	.LBB70_123
# %bb.51:                               # %losers_pn_eval.split246
	movl	root_to_move, %eax
	movw	$-27442, BasicBlockSignatureTracker # imm = 0x94CE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB70_54
# %bb.52:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-27435, %ax            # imm = 0x94D5
	jne	.LBB70_123
# %bb.53:                               # %losers_pn_eval.split248
	movq	(%r15), %rax
	movb	$1, (%rax)
	movw	$-27435, BasicBlockSignatureTracker # imm = 0x94D5
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB70_56
.LBB70_54:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-27427, %ax            # imm = 0x94DD
	jne	.LBB70_123
# %bb.55:                               # %losers_pn_eval.split250
	movq	(%r15), %rax
	movb	$0, (%rax)
	movw	$-27427, BasicBlockSignatureTracker # imm = 0x94DD
	movw	$8, RunTimeSignatureAdjuster
.LBB70_56:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-27426, %ax            # imm = 0x94DE
	jne	.LBB70_123
# %bb.57:                               # %losers_pn_eval.split252
	movw	$-27426, BasicBlockSignatureTracker # imm = 0x94DE
	movw	$109, RunTimeSignatureAdjuster
	jmp	.LBB70_118
.LBB70_58:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$-27407, %ax            # imm = 0x94F1
	jne	.LBB70_123
# %bb.59:                               # %losers_pn_eval.split244
	movw	$-27407, BasicBlockSignatureTracker # imm = 0x94F1
	movw	$0, RunTimeSignatureAdjuster
# %bb.60:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-27395, %ax            # imm = 0x94FD
	jne	.LBB70_123
# %bb.61:                               # %losers_pn_eval.split254
	movl	white_to_move, %eax
	movw	$-27395, BasicBlockSignatureTracker # imm = 0x94FD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB70_64
# %bb.62:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$493, %ax               # imm = 0x1ED
	cmpw	$-27376, %ax            # imm = 0x9510
	jne	.LBB70_123
# %bb.63:                               # %losers_pn_eval.split256
	movl	wking_loc, %edi
	movw	$-27376, BasicBlockSignatureTracker # imm = 0x9510
	movw	$-30523, RunTimeSignatureAdjuster # imm = 0x88C5
	xorl	%esi, %esi
	movq	%r8, %rbx
	callq	is_attacked
	movq	%rbx, %r8
	movw	$-27376, BasicBlockSignatureTracker # imm = 0x9510
	movw	$-30523, RunTimeSignatureAdjuster # imm = 0x88C5
	movw	$-27376, BasicBlockSignatureTracker # imm = 0x9510
	movw	$493, RunTimeSignatureAdjuster # imm = 0x1ED
	cmpl	$0, %eax
	jne	.LBB70_68
.LBB70_64:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$488, %ax               # imm = 0x1E8
	xorw	%cx, %ax
	cmpw	$-27371, %ax            # imm = 0x9515
	jne	.LBB70_123
# %bb.65:                               # %losers_pn_eval.split258
	movl	white_to_move, %eax
	movw	$-27371, BasicBlockSignatureTracker # imm = 0x9515
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB70_116
# %bb.66:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$38, %ax
	cmpw	$-27341, %ax            # imm = 0x9533
	jne	.LBB70_123
# %bb.67:                               # %losers_pn_eval.split264
	movl	bking_loc, %edi
	movw	$-27341, BasicBlockSignatureTracker # imm = 0x9533
	movw	$-30490, RunTimeSignatureAdjuster # imm = 0x88E6
	movl	$1, %esi
	movq	%r8, %rbx
	callq	is_attacked
	movq	%rbx, %r8
	movw	$-27341, BasicBlockSignatureTracker # imm = 0x9533
	movw	$-30490, RunTimeSignatureAdjuster # imm = 0x88E6
	movw	$-27341, BasicBlockSignatureTracker # imm = 0x9533
	movw	$38, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB70_70
	jmp	.LBB70_116
.LBB70_68:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29680, %ax            # imm = 0x8C10
	cmpw	$6400, %ax              # imm = 0x1900
	jne	.LBB70_123
# %bb.69:                               # %losers_pn_eval.split260
	movw	$6400, BasicBlockSignatureTracker # imm = 0x1900
	movw	$-29680, RunTimeSignatureAdjuster # imm = 0x8C10
	jmp	.LBB70_72
.LBB70_70:                              # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9997, %ax             # imm = 0xD8F3
	cmpw	$19904, %ax             # imm = 0x4DC0
	jne	.LBB70_123
# %bb.71:                               # %losers_pn_eval.split266
	movw	$19904, BasicBlockSignatureTracker # imm = 0x4DC0
	movw	$-10032, RunTimeSignatureAdjuster # imm = 0xD8D0
.LBB70_72:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-27334, %ax            # imm = 0x953A
	jne	.LBB70_123
# %bb.73:                               # %losers_pn_eval.split310
	movl	$1, captures
	movl	$0, (%r12)
	movw	$-27334, BasicBlockSignatureTracker # imm = 0x953A
	movw	$8106, RunTimeSignatureAdjuster # imm = 0x1FAA
	movq	%r14, %rdi
	movq	%r8, %rbx
	callq	gen
	movw	$-27334, BasicBlockSignatureTracker # imm = 0x953A
	movw	$8106, RunTimeSignatureAdjuster # imm = 0x1FAA
	movl	numb_moves, %eax
	movl	%eax, (%r12)
	movl	$0, captures
	movq	%rbx, -48(%rbp)         # 8-byte Spill
	movl	$1, (%rbx)
	movl	$0, (%r13)
	movw	$-27334, BasicBlockSignatureTracker # imm = 0x953A
	movw	$0, RunTimeSignatureAdjuster
.LBB70_74:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-27331, %ax            # imm = 0x953D
	jne	.LBB70_121
# %bb.75:                               # %losers_pn_eval.split268
                                        #   in Loop: Header=BB70_74 Depth=1
	movl	(%r13), %eax
	movl	(%r12), %ecx
	movw	$-27331, BasicBlockSignatureTracker # imm = 0x953D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB70_84
# %bb.76:                               #   in Loop: Header=BB70_74 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$100, %ax
	cmpw	$-27303, %ax            # imm = 0x9559
	jne	.LBB70_121
# %bb.77:                               # %losers_pn_eval.split270
                                        #   in Loop: Header=BB70_74 Depth=1
	movl	(%r13), %esi
	movw	$-27303, BasicBlockSignatureTracker # imm = 0x9559
	movw	$8169, RunTimeSignatureAdjuster # imm = 0x1FE9
	movq	%r14, %rdi
	callq	make
	movw	$-27303, BasicBlockSignatureTracker # imm = 0x9559
	movw	$8169, RunTimeSignatureAdjuster # imm = 0x1FE9
	movl	(%r13), %esi
	movw	$-27303, BasicBlockSignatureTracker # imm = 0x9559
	movw	$8169, RunTimeSignatureAdjuster # imm = 0x1FE9
	movq	%r14, %rdi
	movl	$1, %edx
	callq	check_legal
	movw	$-27303, BasicBlockSignatureTracker # imm = 0x9559
	movw	$8169, RunTimeSignatureAdjuster # imm = 0x1FE9
	movw	$-27303, BasicBlockSignatureTracker # imm = 0x9559
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB70_80
# %bb.78:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-27302, %ax            # imm = 0x955A
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB70_123
# %bb.79:                               # %losers_pn_eval.split274
	movl	$0, (%rax)
	movl	(%r13), %esi
	movw	$-27302, BasicBlockSignatureTracker # imm = 0x955A
	movw	$8125, RunTimeSignatureAdjuster # imm = 0x1FBD
	movq	%r14, %rdi
	callq	unmake
	movw	$-27302, BasicBlockSignatureTracker # imm = 0x955A
	movw	$8125, RunTimeSignatureAdjuster # imm = 0x1FBD
	movw	$-27302, BasicBlockSignatureTracker # imm = 0x955A
	movw	$103, RunTimeSignatureAdjuster
	jmp	.LBB70_85
.LBB70_80:                              #   in Loop: Header=BB70_74 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-27292, %ax            # imm = 0x9564
	jne	.LBB70_121
# %bb.81:                               # %losers_pn_eval.split276
                                        #   in Loop: Header=BB70_74 Depth=1
	movl	(%r13), %esi
	movw	$-27292, BasicBlockSignatureTracker # imm = 0x9564
	movw	$8067, RunTimeSignatureAdjuster # imm = 0x1F83
	movq	%r14, %rdi
	callq	unmake
	movw	$-27292, BasicBlockSignatureTracker # imm = 0x9564
	movw	$8067, RunTimeSignatureAdjuster # imm = 0x1F83
	movw	$-27292, BasicBlockSignatureTracker # imm = 0x9564
	movw	$0, RunTimeSignatureAdjuster
# %bb.82:                               #   in Loop: Header=BB70_74 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-27284, %ax            # imm = 0x956C
	jne	.LBB70_121
# %bb.83:                               # %losers_pn_eval.split278
                                        #   in Loop: Header=BB70_74 Depth=1
	movl	(%r13), %eax
	addl	$1, %eax
	movl	%eax, (%r13)
	movw	$-27284, BasicBlockSignatureTracker # imm = 0x956C
	movw	$86, RunTimeSignatureAdjuster
	jmp	.LBB70_74
.LBB70_84:                              # %.loopexit2
	jmp	.LBB70_85
.LBB70_85:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$80, %ax
	xorw	%cx, %ax
	cmpw	$-27283, %ax            # imm = 0x956D
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB70_123
# %bb.86:                               # %losers_pn_eval.split272
	movl	(%rax), %eax
	movw	$-27283, BasicBlockSignatureTracker # imm = 0x956D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB70_102
# %bb.87:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$253, %ax
	cmpw	$-27248, %ax            # imm = 0x9590
	jne	.LBB70_123
# %bb.88:                               # %losers_pn_eval.split280
	movl	$0, captures
	movl	$0, (%r12)
	movw	$-27248, BasicBlockSignatureTracker # imm = 0x9590
	movw	$7936, RunTimeSignatureAdjuster # imm = 0x1F00
	movq	%r14, %rdi
	callq	gen
	movw	$-27248, BasicBlockSignatureTracker # imm = 0x9590
	movw	$7936, RunTimeSignatureAdjuster # imm = 0x1F00
	movl	numb_moves, %eax
	movl	%eax, (%r12)
	movl	$0, (%r13)
	movw	$-27248, BasicBlockSignatureTracker # imm = 0x9590
	movw	$0, RunTimeSignatureAdjuster
.LBB70_89:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-27239, %ax            # imm = 0x9599
	jne	.LBB70_120
# %bb.90:                               # %losers_pn_eval.split284
                                        #   in Loop: Header=BB70_89 Depth=1
	movl	(%r13), %eax
	movl	(%r12), %ecx
	movw	$-27239, BasicBlockSignatureTracker # imm = 0x9599
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB70_99
# %bb.91:                               #   in Loop: Header=BB70_89 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-27230, %ax            # imm = 0x95A2
	jne	.LBB70_120
# %bb.92:                               # %losers_pn_eval.split286
                                        #   in Loop: Header=BB70_89 Depth=1
	movl	(%r13), %esi
	movw	$-27230, BasicBlockSignatureTracker # imm = 0x95A2
	movw	$7954, RunTimeSignatureAdjuster # imm = 0x1F12
	movq	%r14, %rdi
	callq	make
	movw	$-27230, BasicBlockSignatureTracker # imm = 0x95A2
	movw	$7954, RunTimeSignatureAdjuster # imm = 0x1F12
	movl	(%r13), %esi
	movw	$-27230, BasicBlockSignatureTracker # imm = 0x95A2
	movw	$7954, RunTimeSignatureAdjuster # imm = 0x1F12
	movq	%r14, %rdi
	movl	$1, %edx
	callq	check_legal
	movw	$-27230, BasicBlockSignatureTracker # imm = 0x95A2
	movw	$7954, RunTimeSignatureAdjuster # imm = 0x1F12
	movw	$-27230, BasicBlockSignatureTracker # imm = 0x95A2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB70_95
# %bb.93:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-27215, %ax            # imm = 0x95B1
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB70_123
# %bb.94:                               # %losers_pn_eval.split290
	movl	$0, (%rax)
	movl	(%r13), %esi
	movw	$-27215, BasicBlockSignatureTracker # imm = 0x95B1
	movw	$8022, RunTimeSignatureAdjuster # imm = 0x1F56
	movq	%r14, %rdi
	callq	unmake
	movw	$-27215, BasicBlockSignatureTracker # imm = 0x95B1
	movw	$8022, RunTimeSignatureAdjuster # imm = 0x1F56
	movw	$-27215, BasicBlockSignatureTracker # imm = 0x95B1
	movw	$40, RunTimeSignatureAdjuster
	jmp	.LBB70_100
.LBB70_95:                              #   in Loop: Header=BB70_89 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$96, %ax
	cmpw	$-27198, %ax            # imm = 0x95C2
	jne	.LBB70_120
# %bb.96:                               # %losers_pn_eval.split292
                                        #   in Loop: Header=BB70_89 Depth=1
	movl	(%r13), %esi
	movw	$-27198, BasicBlockSignatureTracker # imm = 0x95C2
	movw	$7973, RunTimeSignatureAdjuster # imm = 0x1F25
	movq	%r14, %rdi
	callq	unmake
	movw	$-27198, BasicBlockSignatureTracker # imm = 0x95C2
	movw	$7973, RunTimeSignatureAdjuster # imm = 0x1F25
	movw	$-27198, BasicBlockSignatureTracker # imm = 0x95C2
	movw	$0, RunTimeSignatureAdjuster
# %bb.97:                               #   in Loop: Header=BB70_89 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-27190, %ax            # imm = 0x95CA
	jne	.LBB70_120
# %bb.98:                               # %losers_pn_eval.split294
                                        #   in Loop: Header=BB70_89 Depth=1
	movl	(%r13), %eax
	addl	$1, %eax
	movl	%eax, (%r13)
	movw	$-27190, BasicBlockSignatureTracker # imm = 0x95CA
	movw	$90, RunTimeSignatureAdjuster
	jmp	.LBB70_89
.LBB70_99:                              # %.loopexit
	jmp	.LBB70_100
.LBB70_100:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$73, %ax
	xorw	%cx, %ax
	cmpw	$-27184, %ax            # imm = 0x95D0
	jne	.LBB70_123
# %bb.101:                              # %losers_pn_eval.split288
	movw	$-27184, BasicBlockSignatureTracker # imm = 0x95D0
	movw	$189, RunTimeSignatureAdjuster
.LBB70_102:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$183, %ax
	xorw	%cx, %ax
	cmpw	$-27174, %ax            # imm = 0x95DA
	movq	-48(%rbp), %rbx         # 8-byte Reload
	jne	.LBB70_123
# %bb.103:                              # %losers_pn_eval.split282
	movl	(%rbx), %eax
	movw	$-27174, BasicBlockSignatureTracker # imm = 0x95DA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB70_112
# %bb.104:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-27170, %ax            # imm = 0x95DE
	jne	.LBB70_123
# %bb.105:                              # %losers_pn_eval.split296
	movl	$1, %eax
	xorl	%ecx, %ecx
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	root_to_move, %ecx
	movw	$-27170, BasicBlockSignatureTracker # imm = 0x95DE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB70_108
# %bb.106:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-27163, %ax            # imm = 0x95E5
	jne	.LBB70_123
# %bb.107:                              # %losers_pn_eval.split300
	movq	(%r15), %rax
	movb	$1, (%rax)
	movw	$-27163, BasicBlockSignatureTracker # imm = 0x95E5
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB70_110
.LBB70_108:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$-27150, %ax            # imm = 0x95F2
	jne	.LBB70_123
# %bb.109:                              # %losers_pn_eval.split302
	movq	(%r15), %rax
	movb	$0, (%rax)
	movw	$-27150, BasicBlockSignatureTracker # imm = 0x95F2
	movw	$23, RunTimeSignatureAdjuster
.LBB70_110:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$997, %ax               # imm = 0x3E5
	xorw	%cx, %ax
	cmpw	$-27136, %ax            # imm = 0x9600
	jne	.LBB70_123
# %bb.111:                              # %losers_pn_eval.split304
	movw	$-27136, BasicBlockSignatureTracker # imm = 0x9600
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB70_114
.LBB70_112:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$985, %ax               # imm = 0x3D9
	cmpw	$-27133, %ax            # imm = 0x9603
	jne	.LBB70_123
# %bb.113:                              # %losers_pn_eval.split298
	movq	(%r15), %rax
	movb	$2, (%rax)
	movw	$-27133, BasicBlockSignatureTracker # imm = 0x9603
	movw	$3, RunTimeSignatureAdjuster
.LBB70_114:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-27122, %ax            # imm = 0x960E
	jne	.LBB70_123
# %bb.115:                              # %losers_pn_eval.split306
	movw	$-27122, BasicBlockSignatureTracker # imm = 0x960E
	movw	$701, RunTimeSignatureAdjuster # imm = 0x2BD
	jmp	.LBB70_118
.LBB70_116:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$771, %ax               # imm = 0x303
	xorw	%cx, %ax
	cmpw	$-27114, %ax            # imm = 0x9616
	jne	.LBB70_123
# %bb.117:                              # %losers_pn_eval.split262
	movq	(%r15), %rax
	movb	$2, (%rax)
	movw	$-27114, BasicBlockSignatureTracker # imm = 0x9616
	movw	$677, RunTimeSignatureAdjuster # imm = 0x2A5
.LBB70_118:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$681, %ax               # imm = 0x2A9
	xorw	%cx, %ax
	cmpw	$-27110, %ax            # imm = 0x961A
	jne	.LBB70_123
# %bb.119:                              # %losers_pn_eval.split242
	movw	$-27110, BasicBlockSignatureTracker # imm = 0x961A
	movw	$1157, RunTimeSignatureAdjuster # imm = 0x485
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB70_120:                             # %CFerrorHandler.losers_pn_eval.loopexit
	jmp	.LBB70_123
.LBB70_121:                             # %CFerrorHandler.losers_pn_eval.loopexit1
	jmp	.LBB70_123
.LBB70_122:                             # %CFerrorHandler.losers_pn_eval.loopexit3
	jmp	.LBB70_123
.LBB70_123:                             # %CFerrorHandler.losers_pn_eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end70:
	.size	losers_pn_eval, .Lfunc_end70-losers_pn_eval
	.cfi_endproc
                                        # -- End function
	.globl	std_pn_eval             # -- Begin function std_pn_eval
	.p2align	4, 0x90
	.type	std_pn_eval,@function
std_pn_eval:                            # @std_pn_eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1159, %ax              # imm = 0x487
	xorw	%cx, %ax
	cmpw	$-27094, %ax            # imm = 0x962A
	jne	.LBB71_44
# %bb.1:                                # %std_pn_eval.split
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r14
	addq	$-12288, %r14           # imm = 0xD000
	movq	%r14, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rdi, (%rbx)
	movq	(%rbx), %rax
	movb	$1, 3(%rax)
	movl	white_to_move, %eax
	movw	$-27094, BasicBlockSignatureTracker # imm = 0x962A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB71_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-27082, %ax            # imm = 0x9636
	jne	.LBB71_44
# %bb.3:                                # %std_pn_eval.split80
	movl	wking_loc, %edi
	movw	$-27082, BasicBlockSignatureTracker # imm = 0x9636
	movw	$-29725, RunTimeSignatureAdjuster # imm = 0x8BE3
	xorl	%esi, %esi
	callq	is_attacked
	movw	$-27082, BasicBlockSignatureTracker # imm = 0x9636
	movw	$-29725, RunTimeSignatureAdjuster # imm = 0x8BE3
	movw	$-27082, BasicBlockSignatureTracker # imm = 0x9636
	movw	$28, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB71_8
.LBB71_4:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-27075, %ax            # imm = 0x963D
	jne	.LBB71_44
# %bb.5:                                # %std_pn_eval.split82
	movl	white_to_move, %eax
	movw	$-27075, BasicBlockSignatureTracker # imm = 0x963D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB71_39
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$127, %ax
	cmpw	$-27070, %ax            # imm = 0x9642
	jne	.LBB71_44
# %bb.7:                                # %std_pn_eval.split88
	movl	bking_loc, %edi
	movw	$-27070, BasicBlockSignatureTracker # imm = 0x9642
	movw	$-29801, RunTimeSignatureAdjuster # imm = 0x8B97
	movl	$1, %esi
	callq	is_attacked
	movw	$-27070, BasicBlockSignatureTracker # imm = 0x9642
	movw	$-29801, RunTimeSignatureAdjuster # imm = 0x8B97
	movw	$-27070, BasicBlockSignatureTracker # imm = 0x9642
	movw	$127, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB71_10
	jmp	.LBB71_39
.LBB71_8:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12560, %ax             # imm = 0x3110
	cmpw	$-22746, %ax            # imm = 0xA726
	jne	.LBB71_44
# %bb.9:                                # %std_pn_eval.split84
	movw	$-22746, BasicBlockSignatureTracker # imm = 0xA726
	movw	$12560, RunTimeSignatureAdjuster # imm = 0x3110
	jmp	.LBB71_12
.LBB71_10:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-19434, %ax            # imm = 0xB416
	cmpw	$8788, %ax              # imm = 0x2254
	jne	.LBB71_44
# %bb.11:                               # %std_pn_eval.split90
	movw	$8788, BasicBlockSignatureTracker # imm = 0x2254
	movw	$-19358, RunTimeSignatureAdjuster # imm = 0xB462
.LBB71_12:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$110, %ax
	xorw	%cx, %ax
	cmpw	$-27048, %ax            # imm = 0x9658
	jne	.LBB71_44
# %bb.13:                               # %std_pn_eval.split118
	movl	$0, (%r12)
	movw	$-27048, BasicBlockSignatureTracker # imm = 0x9658
	movw	$7368, RunTimeSignatureAdjuster # imm = 0x1CC8
	movq	%r14, %rdi
	callq	gen
	movw	$-27048, BasicBlockSignatureTracker # imm = 0x9658
	movw	$7368, RunTimeSignatureAdjuster # imm = 0x1CC8
	movl	numb_moves, %eax
	movl	%eax, (%r12)
	movl	$1, (%r15)
	movl	$0, (%r13)
	movw	$-27048, BasicBlockSignatureTracker # imm = 0x9658
	movw	$0, RunTimeSignatureAdjuster
.LBB71_14:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-27044, %ax            # imm = 0x965C
	jne	.LBB71_43
# %bb.15:                               # %std_pn_eval.split92
                                        #   in Loop: Header=BB71_14 Depth=1
	movl	(%r13), %eax
	movl	(%r12), %ecx
	movw	$-27044, BasicBlockSignatureTracker # imm = 0x965C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB71_24
# %bb.16:                               #   in Loop: Header=BB71_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-27043, %ax            # imm = 0x965D
	jne	.LBB71_43
# %bb.17:                               # %std_pn_eval.split94
                                        #   in Loop: Header=BB71_14 Depth=1
	movl	(%r13), %esi
	movw	$-27043, BasicBlockSignatureTracker # imm = 0x965D
	movw	$7405, RunTimeSignatureAdjuster # imm = 0x1CED
	movq	%r14, %rdi
	callq	make
	movw	$-27043, BasicBlockSignatureTracker # imm = 0x965D
	movw	$7405, RunTimeSignatureAdjuster # imm = 0x1CED
	movl	(%r13), %esi
	movw	$-27043, BasicBlockSignatureTracker # imm = 0x965D
	movw	$7405, RunTimeSignatureAdjuster # imm = 0x1CED
	movq	%r14, %rdi
	movl	$1, %edx
	callq	check_legal
	movw	$-27043, BasicBlockSignatureTracker # imm = 0x965D
	movw	$7405, RunTimeSignatureAdjuster # imm = 0x1CED
	movw	$-27043, BasicBlockSignatureTracker # imm = 0x965D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB71_20
# %bb.18:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$-27024, %ax            # imm = 0x9670
	jne	.LBB71_44
# %bb.19:                               # %std_pn_eval.split98
	movl	$0, (%r15)
	movl	(%r13), %esi
	movw	$-27024, BasicBlockSignatureTracker # imm = 0x9670
	movw	$7319, RunTimeSignatureAdjuster # imm = 0x1C97
	movq	%r14, %rdi
	callq	unmake
	movw	$-27024, BasicBlockSignatureTracker # imm = 0x9670
	movw	$7319, RunTimeSignatureAdjuster # imm = 0x1C97
	movw	$-27024, BasicBlockSignatureTracker # imm = 0x9670
	movw	$44, RunTimeSignatureAdjuster
	jmp	.LBB71_25
.LBB71_20:                              #   in Loop: Header=BB71_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$-27020, %ax            # imm = 0x9674
	jne	.LBB71_43
# %bb.21:                               # %std_pn_eval.split100
                                        #   in Loop: Header=BB71_14 Depth=1
	movl	(%r13), %esi
	movw	$-27020, BasicBlockSignatureTracker # imm = 0x9674
	movw	$7315, RunTimeSignatureAdjuster # imm = 0x1C93
	movq	%r14, %rdi
	callq	unmake
	movw	$-27020, BasicBlockSignatureTracker # imm = 0x9674
	movw	$7315, RunTimeSignatureAdjuster # imm = 0x1C93
	movw	$-27020, BasicBlockSignatureTracker # imm = 0x9674
	movw	$0, RunTimeSignatureAdjuster
# %bb.22:                               #   in Loop: Header=BB71_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$240, %ax
	cmpw	$-27004, %ax            # imm = 0x9684
	jne	.LBB71_43
# %bb.23:                               # %std_pn_eval.split102
                                        #   in Loop: Header=BB71_14 Depth=1
	movl	(%r13), %eax
	addl	$1, %eax
	movl	%eax, (%r13)
	movw	$-27004, BasicBlockSignatureTracker # imm = 0x9684
	movw	$220, RunTimeSignatureAdjuster
	jmp	.LBB71_14
.LBB71_24:                              # %.loopexit
	jmp	.LBB71_25
.LBB71_25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$196, %ax
	xorw	%cx, %ax
	cmpw	$-26984, %ax            # imm = 0x9698
	jne	.LBB71_44
# %bb.26:                               # %std_pn_eval.split96
	movl	(%r15), %eax
	movw	$-26984, BasicBlockSignatureTracker # imm = 0x9698
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB71_35
# %bb.27:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$37, %ax
	cmpw	$-26947, %ax            # imm = 0x96BD
	jne	.LBB71_44
# %bb.28:                               # %std_pn_eval.split104
	movl	$1, %eax
	xorl	%ecx, %ecx
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	root_to_move, %ecx
	movw	$-26947, BasicBlockSignatureTracker # imm = 0x96BD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB71_31
# %bb.29:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$-26934, %ax            # imm = 0x96CA
	jne	.LBB71_44
# %bb.30:                               # %std_pn_eval.split108
	movq	(%rbx), %rax
	movb	$0, (%rax)
	movw	$-26934, BasicBlockSignatureTracker # imm = 0x96CA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB71_33
.LBB71_31:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$100, %ax
	cmpw	$-26919, %ax            # imm = 0x96D9
	jne	.LBB71_44
# %bb.32:                               # %std_pn_eval.split110
	movq	(%rbx), %rax
	movb	$1, (%rax)
	movw	$-26919, BasicBlockSignatureTracker # imm = 0x96D9
	movw	$19, RunTimeSignatureAdjuster
.LBB71_33:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-26915, %ax            # imm = 0x96DD
	jne	.LBB71_44
# %bb.34:                               # %std_pn_eval.split112
	movw	$-26915, BasicBlockSignatureTracker # imm = 0x96DD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB71_37
.LBB71_35:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$71, %ax
	cmpw	$-26913, %ax            # imm = 0x96DF
	jne	.LBB71_44
# %bb.36:                               # %std_pn_eval.split106
	movq	(%rbx), %rax
	movb	$2, (%rax)
	movw	$-26913, BasicBlockSignatureTracker # imm = 0x96DF
	movw	$2, RunTimeSignatureAdjuster
.LBB71_37:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$62, %ax
	xorw	%cx, %ax
	cmpw	$-26909, %ax            # imm = 0x96E3
	jne	.LBB71_44
# %bb.38:                               # %std_pn_eval.split114
	movw	$-26909, BasicBlockSignatureTracker # imm = 0x96E3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB71_41
.LBB71_39:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$212, %ax
	xorw	%cx, %ax
	cmpw	$-26903, %ax            # imm = 0x96E9
	jne	.LBB71_44
# %bb.40:                               # %std_pn_eval.split86
	movq	(%rbx), %rax
	movb	$2, (%rax)
	movw	$-26903, BasicBlockSignatureTracker # imm = 0x96E9
	movw	$10, RunTimeSignatureAdjuster
.LBB71_41:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-26898, %ax            # imm = 0x96EE
	jne	.LBB71_44
# %bb.42:                               # %std_pn_eval.split116
	movw	$-26898, BasicBlockSignatureTracker # imm = 0x96EE
	movw	$1137, RunTimeSignatureAdjuster # imm = 0x471
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB71_43:                              # %CFerrorHandler.std_pn_eval.loopexit
	jmp	.LBB71_44
.LBB71_44:                              # %CFerrorHandler.std_pn_eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end71:
	.size	std_pn_eval, .Lfunc_end71-std_pn_eval
	.cfi_endproc
                                        # -- End function
	.globl	select_most_proving     # -- Begin function select_most_proving
	.p2align	4, 0x90
	.type	select_most_proving,@function
select_most_proving:                    # @select_most_proving
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2475, %ax              # imm = 0x9AB
	xorw	%cx, %ax
	cmpw	$-26876, %ax            # imm = 0x9704
	jne	.LBB72_37
# %bb.1:                                # %select_most_proving.split109
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2475, %ax              # imm = 0x9AB
	xorw	%cx, %ax
	cmpw	$-26876, %ax            # imm = 0x9704
	jne	.LBB72_37
# %bb.2:                                # %select_most_proving.split107
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2475, %ax              # imm = 0x9AB
	xorw	%cx, %ax
	cmpw	$-26876, %ax            # imm = 0x9704
	jne	.LBB72_37
# %bb.3:                                # %select_most_proving.split105
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2475, %ax              # imm = 0x9AB
	xorw	%cx, %ax
	cmpw	$-26876, %ax            # imm = 0x9704
	jne	.LBB72_37
# %bb.4:                                # %select_most_proving.split103
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2475, %ax              # imm = 0x9AB
	xorw	%cx, %ax
	cmpw	$-26876, %ax            # imm = 0x9704
	jne	.LBB72_37
# %bb.5:                                # %select_most_proving.split101
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rdi, (%rax)
	movq	(%rax), %rax
	movq	%rax, (%rbx)
	movw	$-26876, BasicBlockSignatureTracker # imm = 0x9704
	movw	$0, RunTimeSignatureAdjuster
.LBB72_6:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB72_12 Depth 2
                                        #     Child Loop BB72_20 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$-26863, %ax            # imm = 0x9711
	jne	.LBB72_36
# %bb.7:                                # %select_most_proving.split
                                        #   in Loop: Header=BB72_6 Depth=1
	movq	(%rbx), %rax
	movb	2(%rax), %al
	movw	$-26863, BasicBlockSignatureTracker # imm = 0x9711
	movw	$0, RunTimeSignatureAdjuster
	cmpb	$0, %al
	je	.LBB72_32
# %bb.8:                                #   in Loop: Header=BB72_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-26857, %ax            # imm = 0x9717
	jne	.LBB72_36
# %bb.9:                                # %select_most_proving.split75
                                        #   in Loop: Header=BB72_6 Depth=1
	movl	$1, %eax
	xorl	%ecx, %ecx
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	root_to_move, %ecx
	movw	$-26857, BasicBlockSignatureTracker # imm = 0x9717
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB72_18
# %bb.10:                               #   in Loop: Header=BB72_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-26853, %ax            # imm = 0x971B
	jne	.LBB72_36
# %bb.11:                               # %select_most_proving.split79
                                        #   in Loop: Header=BB72_6 Depth=1
	movl	$0, (%r14)
	movw	$-26853, BasicBlockSignatureTracker # imm = 0x971B
	movw	$0, RunTimeSignatureAdjuster
.LBB72_12:                              #   Parent Loop BB72_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-26851, %ax            # imm = 0x971D
	jne	.LBB72_34
# %bb.13:                               # %select_most_proving.split83
                                        #   in Loop: Header=BB72_12 Depth=2
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movslq	(%r14), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	movq	(%rbx), %rcx
	movl	4(%rcx), %ecx
	movw	$-26851, BasicBlockSignatureTracker # imm = 0x971D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB72_16
# %bb.14:                               #   in Loop: Header=BB72_12 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-26850, %ax            # imm = 0x971E
	jne	.LBB72_34
# %bb.15:                               # %select_most_proving.split85
                                        #   in Loop: Header=BB72_12 Depth=2
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movw	$-26850, BasicBlockSignatureTracker # imm = 0x971E
	movw	$5, RunTimeSignatureAdjuster
	jmp	.LBB72_12
.LBB72_16:                              #   in Loop: Header=BB72_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-26841, %ax            # imm = 0x9727
	jne	.LBB72_36
# %bb.17:                               # %select_most_proving.split87
                                        #   in Loop: Header=BB72_6 Depth=1
	movw	$-26841, BasicBlockSignatureTracker # imm = 0x9727
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB72_26
.LBB72_18:                              #   in Loop: Header=BB72_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$37, %ax
	cmpw	$-26830, %ax            # imm = 0x9732
	jne	.LBB72_36
# %bb.19:                               # %select_most_proving.split81
                                        #   in Loop: Header=BB72_6 Depth=1
	movl	$0, (%r14)
	movw	$-26830, BasicBlockSignatureTracker # imm = 0x9732
	movw	$0, RunTimeSignatureAdjuster
.LBB72_20:                              #   Parent Loop BB72_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-26825, %ax            # imm = 0x9737
	jne	.LBB72_35
# %bb.21:                               # %select_most_proving.split91
                                        #   in Loop: Header=BB72_20 Depth=2
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movslq	(%r14), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	movq	(%rbx), %rcx
	movl	8(%rcx), %ecx
	movw	$-26825, BasicBlockSignatureTracker # imm = 0x9737
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB72_24
# %bb.22:                               #   in Loop: Header=BB72_20 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$127, %ax
	cmpw	$-26808, %ax            # imm = 0x9748
	jne	.LBB72_35
# %bb.23:                               # %select_most_proving.split93
                                        #   in Loop: Header=BB72_20 Depth=2
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movw	$-26808, BasicBlockSignatureTracker # imm = 0x9748
	movw	$122, RunTimeSignatureAdjuster
	jmp	.LBB72_20
.LBB72_24:                              #   in Loop: Header=BB72_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$97, %ax
	cmpw	$-26794, %ax            # imm = 0x9756
	jne	.LBB72_36
# %bb.25:                               # %select_most_proving.split95
                                        #   in Loop: Header=BB72_6 Depth=1
	movw	$-26794, BasicBlockSignatureTracker # imm = 0x9756
	movw	$113, RunTimeSignatureAdjuster
.LBB72_26:                              #   in Loop: Header=BB72_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$123, %ax
	xorw	%cx, %ax
	cmpw	$-26788, %ax            # imm = 0x975C
	jne	.LBB72_36
# %bb.27:                               # %select_most_proving.split89
                                        #   in Loop: Header=BB72_6 Depth=1
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movslq	(%r14), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	%rax, (%rbx)
	movl	hash, %eax
	movl	move_number, %ecx
	addl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movl	%eax, hash_history(,%rcx,4)
	movq	(%rbx), %rdi
	addq	$32, %rdi
	movw	$-26788, BasicBlockSignatureTracker # imm = 0x975C
	movw	$7660, RunTimeSignatureAdjuster # imm = 0x1DEC
	xorl	%esi, %esi
	callq	make
	movw	$-26788, BasicBlockSignatureTracker # imm = 0x975C
	movw	$7660, RunTimeSignatureAdjuster # imm = 0x1DEC
	movl	ply, %eax
	movl	maxply, %ecx
	movw	$-26788, BasicBlockSignatureTracker # imm = 0x975C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB72_30
# %bb.28:                               #   in Loop: Header=BB72_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-26786, %ax            # imm = 0x975E
	jne	.LBB72_36
# %bb.29:                               # %select_most_proving.split97
                                        #   in Loop: Header=BB72_6 Depth=1
	movl	ply, %eax
	movl	%eax, maxply
	movw	$-26786, BasicBlockSignatureTracker # imm = 0x975E
	movw	$2, RunTimeSignatureAdjuster
.LBB72_30:                              #   in Loop: Header=BB72_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$56, %ax
	xorw	%cx, %ax
	cmpw	$-26780, %ax            # imm = 0x9764
	jne	.LBB72_36
# %bb.31:                               # %select_most_proving.split99
                                        #   in Loop: Header=BB72_6 Depth=1
	movw	$-26780, BasicBlockSignatureTracker # imm = 0x9764
	movw	$96, RunTimeSignatureAdjuster
	jmp	.LBB72_6
.LBB72_32:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$102, %ax
	cmpw	$-26761, %ax            # imm = 0x9777
	jne	.LBB72_37
# %bb.33:                               # %select_most_proving.split77
	movq	(%rbx), %rax
	movw	$-26761, BasicBlockSignatureTracker # imm = 0x9777
	movw	$2526, RunTimeSignatureAdjuster # imm = 0x9DE
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB72_34:                              # %CFerrorHandler.select_most_proving.loopexit
	jmp	.LBB72_37
.LBB72_35:                              # %CFerrorHandler.select_most_proving.loopexit1
	jmp	.LBB72_37
.LBB72_36:                              # %CFerrorHandler.select_most_proving.loopexit2
	jmp	.LBB72_37
.LBB72_37:                              # %CFerrorHandler.select_most_proving
	callq	FAULT_DETECTED_CFC
.Lfunc_end72:
	.size	select_most_proving, .Lfunc_end72-select_most_proving
	.cfi_endproc
                                        # -- End function
	.globl	set_proof_and_disproof_numbers # -- Begin function set_proof_and_disproof_numbers
	.p2align	4, 0x90
	.type	set_proof_and_disproof_numbers,@function
set_proof_and_disproof_numbers:         # @set_proof_and_disproof_numbers
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2601, %ax              # imm = 0xA29
	xorw	%cx, %ax
	cmpw	$-26746, %ax            # imm = 0x9786
	jne	.LBB73_240
# %bb.1:                                # %set_proof_and_disproof_numbers.split696
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2601, %ax              # imm = 0xA29
	xorw	%cx, %ax
	cmpw	$-26746, %ax            # imm = 0x9786
	jne	.LBB73_240
# %bb.2:                                # %set_proof_and_disproof_numbers.split694
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2601, %ax              # imm = 0xA29
	xorw	%cx, %ax
	cmpw	$-26746, %ax            # imm = 0x9786
	jne	.LBB73_240
# %bb.3:                                # %set_proof_and_disproof_numbers.split692
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2601, %ax              # imm = 0xA29
	xorw	%cx, %ax
	cmpw	$-26746, %ax            # imm = 0x9786
	jne	.LBB73_240
# %bb.4:                                # %set_proof_and_disproof_numbers.split690
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2601, %ax              # imm = 0xA29
	xorw	%cx, %ax
	cmpw	$-26746, %ax            # imm = 0x9786
	jne	.LBB73_240
# %bb.5:                                # %set_proof_and_disproof_numbers.split688
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2601, %ax              # imm = 0xA29
	xorw	%cx, %ax
	cmpw	$-26746, %ax            # imm = 0x9786
	jne	.LBB73_240
# %bb.6:                                # %set_proof_and_disproof_numbers.split686
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rbx
	addq	$-12288, %rbx           # imm = 0xD000
	movq	%rbx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rdi, (%rax)
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	(%rax), %rax
	movb	2(%rax), %al
	movw	$-26746, BasicBlockSignatureTracker # imm = 0x9786
	movw	$0, RunTimeSignatureAdjuster
	cmpb	$0, %al
	je	.LBB73_83
# %bb.7:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-26726, %ax            # imm = 0x979A
	jne	.LBB73_240
# %bb.8:                                # %set_proof_and_disproof_numbers.split
	movl	$1, %eax
	xorl	%ecx, %ecx
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	root_to_move, %ecx
	movw	$-26726, BasicBlockSignatureTracker # imm = 0x979A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB73_45
# %bb.9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-26715, %ax            # imm = 0x97A5
	jne	.LBB73_240
# %bb.10:                               # %set_proof_and_disproof_numbers.split472
	movl	$0, (%r13)
	movl	$100000000, (%r14)      # imm = 0x5F5E100
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movl	$0, (%rdx)
	movw	$-26715, BasicBlockSignatureTracker # imm = 0x97A5
	movw	$0, RunTimeSignatureAdjuster
.LBB73_11:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-26714, %ax            # imm = 0x97A6
	jne	.LBB73_235
# %bb.12:                               # %set_proof_and_disproof_numbers.split476
                                        #   in Loop: Header=BB73_11 Depth=1
	movl	(%rdx), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movzbl	1(%rcx), %ecx
	movw	$-26714, BasicBlockSignatureTracker # imm = 0x97A6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB73_25
# %bb.13:                               #   in Loop: Header=BB73_11 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-26707, %ax            # imm = 0x97AD
	jne	.LBB73_235
# %bb.14:                               # %set_proof_and_disproof_numbers.split478
                                        #   in Loop: Header=BB73_11 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movslq	(%rdx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	addl	(%r13), %eax
	movl	%eax, (%r13)
	movl	(%r13), %eax
	movw	$-26707, BasicBlockSignatureTracker # imm = 0x97AD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jle	.LBB73_17
# %bb.15:                               #   in Loop: Header=BB73_11 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$109, %ax
	cmpw	$-26688, %ax            # imm = 0x97C0
	jne	.LBB73_235
# %bb.16:                               # %set_proof_and_disproof_numbers.split482
                                        #   in Loop: Header=BB73_11 Depth=1
	movl	$100000000, (%r13)      # imm = 0x5F5E100
	movw	$-26688, BasicBlockSignatureTracker # imm = 0x97C0
	movw	$109, RunTimeSignatureAdjuster
.LBB73_17:                              #   in Loop: Header=BB73_11 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$99, %ax
	xorw	%cx, %ax
	cmpw	$-26674, %ax            # imm = 0x97CE
	jne	.LBB73_235
# %bb.18:                               # %set_proof_and_disproof_numbers.split484
                                        #   in Loop: Header=BB73_11 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movslq	(%rdx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	movl	(%r14), %ecx
	movw	$-26674, BasicBlockSignatureTracker # imm = 0x97CE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB73_21
# %bb.19:                               #   in Loop: Header=BB73_11 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-26663, %ax            # imm = 0x97D9
	movq	-56(%rbp), %rcx         # 8-byte Reload
	jne	.LBB73_235
# %bb.20:                               # %set_proof_and_disproof_numbers.split486
                                        #   in Loop: Header=BB73_11 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	movl	%eax, (%r14)
	movw	$-26663, BasicBlockSignatureTracker # imm = 0x97D9
	movw	$23, RunTimeSignatureAdjuster
.LBB73_21:                              #   in Loop: Header=BB73_11 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$-26653, %ax            # imm = 0x97E3
	jne	.LBB73_235
# %bb.22:                               # %set_proof_and_disproof_numbers.split488
                                        #   in Loop: Header=BB73_11 Depth=1
	movw	$-26653, BasicBlockSignatureTracker # imm = 0x97E3
	movw	$0, RunTimeSignatureAdjuster
# %bb.23:                               #   in Loop: Header=BB73_11 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-26640, %ax            # imm = 0x97F0
	movq	-56(%rbp), %rdx         # 8-byte Reload
	jne	.LBB73_235
# %bb.24:                               # %set_proof_and_disproof_numbers.split490
                                        #   in Loop: Header=BB73_11 Depth=1
	movl	(%rdx), %eax
	addl	$1, %eax
	movl	%eax, (%rdx)
	movw	$-26640, BasicBlockSignatureTracker # imm = 0x97F0
	movw	$85, RunTimeSignatureAdjuster
	jmp	.LBB73_11
.LBB73_25:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$84, %ax
	cmpw	$-26638, %ax            # imm = 0x97F2
	jne	.LBB73_240
# %bb.26:                               # %set_proof_and_disproof_numbers.split480
	movl	(%r13), %eax
	movw	$-26638, BasicBlockSignatureTracker # imm = 0x97F2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB73_29
# %bb.27:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4087, %ax              # imm = 0xFF7
	cmpw	$-26619, %ax            # imm = 0x9805
	jne	.LBB73_240
# %bb.28:                               # %set_proof_and_disproof_numbers.split494
	movl	(%r14), %eax
	movw	$-26619, BasicBlockSignatureTracker # imm = 0x9805
	movw	$4087, RunTimeSignatureAdjuster # imm = 0xFF7
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jne	.LBB73_31
.LBB73_29:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4084, %ax              # imm = 0xFF4
	xorw	%cx, %ax
	cmpw	$-26618, %ax            # imm = 0x9806
	jne	.LBB73_240
# %bb.30:                               # %set_proof_and_disproof_numbers.split492
	movl	forwards, %eax
	addl	$1, %eax
	movl	%eax, forwards
	movw	$-26618, BasicBlockSignatureTracker # imm = 0x9806
	movw	$0, RunTimeSignatureAdjuster
	movl	$999500, %edi           # imm = 0xF404C
	movl	$1000000, %esi          # imm = 0xF4240
	movl	$4293967296, %edx       # imm = 0xFFF0BDC0
	movl	$4294967295, %ecx       # imm = 0xFFFFFFFF
	xorl	%r8d, %r8d
	movl	$200, %r9d
	callq	StoreTT
	movw	$-26618, BasicBlockSignatureTracker # imm = 0x9806
	movw	$0, RunTimeSignatureAdjuster
	movw	$-26618, BasicBlockSignatureTracker # imm = 0x9806
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_43
.LBB73_31:                              # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25661, %ax             # imm = 0x643D
	cmpw	$-968, %ax              # imm = 0xFC38
	jne	.LBB73_240
# %bb.32:                               # %set_proof_and_disproof_numbers.split496
	movw	$-968, BasicBlockSignatureTracker # imm = 0xFC38
	movw	$25661, RunTimeSignatureAdjuster # imm = 0x643D
# %bb.33:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$-26602, %ax            # imm = 0x9816
	jne	.LBB73_240
# %bb.34:                               # %set_proof_and_disproof_numbers.split698
	movl	(%r14), %eax
	movw	$-26602, BasicBlockSignatureTracker # imm = 0x9816
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB73_37
# %bb.35:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-26598, %ax            # imm = 0x981A
	jne	.LBB73_240
# %bb.36:                               # %set_proof_and_disproof_numbers.split502
	movl	(%r13), %eax
	movw	$-26598, BasicBlockSignatureTracker # imm = 0x981A
	movw	$12, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jne	.LBB73_39
.LBB73_37:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-26595, %ax            # imm = 0x981D
	jne	.LBB73_240
# %bb.38:                               # %set_proof_and_disproof_numbers.split500
	movl	forwards, %eax
	addl	$1, %eax
	movl	%eax, forwards
	movw	$-26595, BasicBlockSignatureTracker # imm = 0x981D
	movw	$27, RunTimeSignatureAdjuster
	movl	$4293967796, %edi       # imm = 0xFFF0BFB4
	movl	$1000000, %esi          # imm = 0xF4240
	movl	$4293967296, %edx       # imm = 0xFFF0BDC0
	movl	$4294967295, %ecx       # imm = 0xFFFFFFFF
	xorl	%r8d, %r8d
	movl	$200, %r9d
	callq	StoreTT
	movw	$-26595, BasicBlockSignatureTracker # imm = 0x981D
	movw	$27, RunTimeSignatureAdjuster
	movw	$-26595, BasicBlockSignatureTracker # imm = 0x981D
	movw	$7, RunTimeSignatureAdjuster
	jmp	.LBB73_41
.LBB73_39:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22689, %ax            # imm = 0xA75F
	cmpw	$16197, %ax             # imm = 0x3F45
	jne	.LBB73_240
# %bb.40:                               # %set_proof_and_disproof_numbers.split504
	movw	$16197, BasicBlockSignatureTracker # imm = 0x3F45
	movw	$-22689, RunTimeSignatureAdjuster # imm = 0xA75F
.LBB73_41:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$-26591, %ax            # imm = 0x9821
	jne	.LBB73_240
# %bb.42:                               # %set_proof_and_disproof_numbers.split506
	movw	$-26591, BasicBlockSignatureTracker # imm = 0x9821
	movw	$39, RunTimeSignatureAdjuster
.LBB73_43:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$-26577, %ax            # imm = 0x982F
	jne	.LBB73_240
# %bb.44:                               # %set_proof_and_disproof_numbers.split498
	movw	$-26577, BasicBlockSignatureTracker # imm = 0x982F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_81
.LBB73_45:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4000, %ax              # imm = 0xFA0
	cmpw	$-26566, %ax            # imm = 0x983A
	jne	.LBB73_240
# %bb.46:                               # %set_proof_and_disproof_numbers.split474
	movl	$0, (%r14)
	movl	$100000000, (%r13)      # imm = 0x5F5E100
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movl	$0, (%rdx)
	movw	$-26566, BasicBlockSignatureTracker # imm = 0x983A
	movw	$0, RunTimeSignatureAdjuster
.LBB73_47:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$112, %ax
	xorw	%cx, %ax
	cmpw	$-26550, %ax            # imm = 0x984A
	jne	.LBB73_236
# %bb.48:                               # %set_proof_and_disproof_numbers.split510
                                        #   in Loop: Header=BB73_47 Depth=1
	movl	(%rdx), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movzbl	1(%rcx), %ecx
	movw	$-26550, BasicBlockSignatureTracker # imm = 0x984A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB73_61
# %bb.49:                               #   in Loop: Header=BB73_47 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-26549, %ax            # imm = 0x984B
	jne	.LBB73_236
# %bb.50:                               # %set_proof_and_disproof_numbers.split512
                                        #   in Loop: Header=BB73_47 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movslq	(%rdx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	addl	(%r14), %eax
	movl	%eax, (%r14)
	movl	(%r14), %eax
	movw	$-26549, BasicBlockSignatureTracker # imm = 0x984B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jle	.LBB73_53
# %bb.51:                               #   in Loop: Header=BB73_47 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$-26527, %ax            # imm = 0x9861
	jne	.LBB73_236
# %bb.52:                               # %set_proof_and_disproof_numbers.split516
                                        #   in Loop: Header=BB73_47 Depth=1
	movl	$100000000, (%r14)      # imm = 0x5F5E100
	movw	$-26527, BasicBlockSignatureTracker # imm = 0x9861
	movw	$42, RunTimeSignatureAdjuster
.LBB73_53:                              #   in Loop: Header=BB73_47 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$34, %ax
	xorw	%cx, %ax
	cmpw	$-26519, %ax            # imm = 0x9869
	jne	.LBB73_236
# %bb.54:                               # %set_proof_and_disproof_numbers.split518
                                        #   in Loop: Header=BB73_47 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movslq	(%rdx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	movl	(%r13), %ecx
	movw	$-26519, BasicBlockSignatureTracker # imm = 0x9869
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB73_57
# %bb.55:                               #   in Loop: Header=BB73_47 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-26513, %ax            # imm = 0x986F
	movq	-56(%rbp), %rcx         # 8-byte Reload
	jne	.LBB73_236
# %bb.56:                               # %set_proof_and_disproof_numbers.split520
                                        #   in Loop: Header=BB73_47 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	movl	%eax, (%r13)
	movw	$-26513, BasicBlockSignatureTracker # imm = 0x986F
	movw	$6, RunTimeSignatureAdjuster
.LBB73_57:                              #   in Loop: Header=BB73_47 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$202, %ax
	xorw	%cx, %ax
	cmpw	$-26461, %ax            # imm = 0x98A3
	jne	.LBB73_236
# %bb.58:                               # %set_proof_and_disproof_numbers.split522
                                        #   in Loop: Header=BB73_47 Depth=1
	movw	$-26461, BasicBlockSignatureTracker # imm = 0x98A3
	movw	$0, RunTimeSignatureAdjuster
# %bb.59:                               #   in Loop: Header=BB73_47 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-26441, %ax            # imm = 0x98B7
	movq	-56(%rbp), %rdx         # 8-byte Reload
	jne	.LBB73_236
# %bb.60:                               # %set_proof_and_disproof_numbers.split524
                                        #   in Loop: Header=BB73_47 Depth=1
	movl	(%rdx), %eax
	addl	$1, %eax
	movl	%eax, (%rdx)
	movw	$-26441, BasicBlockSignatureTracker # imm = 0x98B7
	movw	$141, RunTimeSignatureAdjuster
	jmp	.LBB73_47
.LBB73_61:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$241, %ax
	cmpw	$-26437, %ax            # imm = 0x98BB
	jne	.LBB73_240
# %bb.62:                               # %set_proof_and_disproof_numbers.split514
	movl	(%r13), %eax
	movw	$-26437, BasicBlockSignatureTracker # imm = 0x98BB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB73_65
# %bb.63:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$121, %ax
	cmpw	$-26430, %ax            # imm = 0x98C2
	jne	.LBB73_240
# %bb.64:                               # %set_proof_and_disproof_numbers.split528
	movl	(%r14), %eax
	movw	$-26430, BasicBlockSignatureTracker # imm = 0x98C2
	movw	$121, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jne	.LBB73_67
.LBB73_65:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$118, %ax
	xorw	%cx, %ax
	cmpw	$-26419, %ax            # imm = 0x98CD
	jne	.LBB73_240
# %bb.66:                               # %set_proof_and_disproof_numbers.split526
	movl	forwards, %eax
	addl	$1, %eax
	movl	%eax, forwards
	movw	$-26419, BasicBlockSignatureTracker # imm = 0x98CD
	movw	$203, RunTimeSignatureAdjuster
	movl	$999500, %edi           # imm = 0xF404C
	movl	$1000000, %esi          # imm = 0xF4240
	movl	$4293967296, %edx       # imm = 0xFFF0BDC0
	movl	$4294967295, %ecx       # imm = 0xFFFFFFFF
	xorl	%r8d, %r8d
	movl	$200, %r9d
	callq	StoreTT
	movw	$-26419, BasicBlockSignatureTracker # imm = 0x98CD
	movw	$203, RunTimeSignatureAdjuster
	movw	$-26419, BasicBlockSignatureTracker # imm = 0x98CD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_79
.LBB73_67:                              # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32266, %ax             # imm = 0x7E0A
	cmpw	$-6456, %ax             # imm = 0xE6C8
	jne	.LBB73_240
# %bb.68:                               # %set_proof_and_disproof_numbers.split530
	movw	$-6456, BasicBlockSignatureTracker # imm = 0xE6C8
	movw	$32266, RunTimeSignatureAdjuster # imm = 0x7E0A
# %bb.69:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$-26401, %ax            # imm = 0x98DF
	jne	.LBB73_240
# %bb.70:                               # %set_proof_and_disproof_numbers.split700
	movl	(%r14), %eax
	movw	$-26401, BasicBlockSignatureTracker # imm = 0x98DF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB73_73
# %bb.71:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$469, %ax               # imm = 0x1D5
	cmpw	$-26358, %ax            # imm = 0x990A
	jne	.LBB73_240
# %bb.72:                               # %set_proof_and_disproof_numbers.split536
	movl	(%r13), %eax
	movw	$-26358, BasicBlockSignatureTracker # imm = 0x990A
	movw	$469, RunTimeSignatureAdjuster # imm = 0x1D5
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jne	.LBB73_75
.LBB73_73:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$459, %ax               # imm = 0x1CB
	xorw	%cx, %ax
	cmpw	$-26348, %ax            # imm = 0x9914
	jne	.LBB73_240
# %bb.74:                               # %set_proof_and_disproof_numbers.split534
	movl	forwards, %eax
	addl	$1, %eax
	movl	%eax, forwards
	movw	$-26348, BasicBlockSignatureTracker # imm = 0x9914
	movw	$274, RunTimeSignatureAdjuster # imm = 0x112
	movl	$4293967796, %edi       # imm = 0xFFF0BFB4
	movl	$1000000, %esi          # imm = 0xF4240
	movl	$4293967296, %edx       # imm = 0xFFF0BDC0
	movl	$4294967295, %ecx       # imm = 0xFFFFFFFF
	xorl	%r8d, %r8d
	movl	$200, %r9d
	callq	StoreTT
	movw	$-26348, BasicBlockSignatureTracker # imm = 0x9914
	movw	$274, RunTimeSignatureAdjuster # imm = 0x112
	movw	$-26348, BasicBlockSignatureTracker # imm = 0x9914
	movw	$30, RunTimeSignatureAdjuster
	jmp	.LBB73_77
.LBB73_75:                              # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-2630, %ax             # imm = 0xF5BA
	cmpw	$27824, %ax             # imm = 0x6CB0
	jne	.LBB73_240
# %bb.76:                               # %set_proof_and_disproof_numbers.split538
	movw	$27824, BasicBlockSignatureTracker # imm = 0x6CB0
	movw	$-2630, RunTimeSignatureAdjuster # imm = 0xF5BA
.LBB73_77:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$-26340, %ax            # imm = 0x991C
	jne	.LBB73_240
# %bb.78:                               # %set_proof_and_disproof_numbers.split540
	movw	$-26340, BasicBlockSignatureTracker # imm = 0x991C
	movw	$465, RunTimeSignatureAdjuster # imm = 0x1D1
.LBB73_79:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$491, %ax               # imm = 0x1EB
	xorw	%cx, %ax
	cmpw	$-26330, %ax            # imm = 0x9926
	jne	.LBB73_240
# %bb.80:                               # %set_proof_and_disproof_numbers.split532
	movw	$-26330, BasicBlockSignatureTracker # imm = 0x9926
	movw	$265, RunTimeSignatureAdjuster # imm = 0x109
.LBB73_81:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$279, %ax               # imm = 0x117
	xorw	%cx, %ax
	cmpw	$-26312, %ax            # imm = 0x9938
	jne	.LBB73_240
# %bb.82:                               # %set_proof_and_disproof_numbers.split508
	movl	hash, %eax
	movl	move_number, %ecx
	addl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movl	%eax, hash_history(,%rcx,4)
	movl	(%r13), %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rcx
	movl	%eax, 4(%rcx)
	movl	(%r14), %eax
	movq	(%rdx), %rcx
	movl	%eax, 8(%rcx)
	movw	$-26312, BasicBlockSignatureTracker # imm = 0x9938
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_233
.LBB73_83:
	movq	%rcx, %r14
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3781, %ax              # imm = 0xEC5
	cmpw	$-26301, %ax            # imm = 0x9943
	jne	.LBB73_240
# %bb.84:                               # %set_proof_and_disproof_numbers.split470
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movb	3(%rax), %al
	movw	$-26301, BasicBlockSignatureTracker # imm = 0x9943
	movw	$0, RunTimeSignatureAdjuster
	cmpb	$0, %al
	je	.LBB73_229
# %bb.85:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-26278, %ax            # imm = 0x995A
	jne	.LBB73_240
# %bb.86:                               # %set_proof_and_disproof_numbers.split544
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movzbl	(%rax), %eax
	movw	$-26278, BasicBlockSignatureTracker # imm = 0x995A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB73_209
# %bb.87:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$-26270, %ax            # imm = 0x9962
	jne	.LBB73_240
# %bb.88:                               # %set_proof_and_disproof_numbers.split548
	movl	hash, %eax
	movl	move_number, %ecx
	addl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movl	%eax, hash_history(,%rcx,4)
	movw	$-26270, BasicBlockSignatureTracker # imm = 0x9962
	movw	$0, RunTimeSignatureAdjuster
	callq	is_draw
	movw	$-26270, BasicBlockSignatureTracker # imm = 0x9962
	movw	$0, RunTimeSignatureAdjuster
	movw	$-26270, BasicBlockSignatureTracker # imm = 0x9962
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB73_91
# %bb.89:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-26258, %ax            # imm = 0x996E
	jne	.LBB73_240
# %bb.90:                               # %set_proof_and_disproof_numbers.split554
	movl	ply, %eax
	movw	$-26258, BasicBlockSignatureTracker # imm = 0x996E
	movw	$12, RunTimeSignatureAdjuster
	cmpl	$200, %eax
	jle	.LBB73_93
.LBB73_91:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$225, %ax
	xorw	%cx, %ax
	cmpw	$-26237, %ax            # imm = 0x9983
	jne	.LBB73_240
# %bb.92:                               # %set_proof_and_disproof_numbers.split552
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movl	$50000, 4(%rax)         # imm = 0xC350
	movq	(%rcx), %rax
	movl	$50000, 8(%rax)         # imm = 0xC350
	movw	$-26237, BasicBlockSignatureTracker # imm = 0x9983
	movw	$187, RunTimeSignatureAdjuster
	jmp	.LBB73_233
.LBB73_93:                              # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11096, %ax             # imm = 0x2B58
	cmpw	$-19914, %ax            # imm = 0xB236
	jne	.LBB73_240
# %bb.94:                               # %set_proof_and_disproof_numbers.split556
	movw	$-19914, BasicBlockSignatureTracker # imm = 0xB236
	movw	$11096, RunTimeSignatureAdjuster # imm = 0x2B58
# %bb.95:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$253, %ax
	xorw	%cx, %ax
	cmpw	$-26221, %ax            # imm = 0x9993
	jne	.LBB73_240
# %bb.96:                               # %set_proof_and_disproof_numbers.split702
	movl	Variant, %eax
	movw	$-26221, BasicBlockSignatureTracker # imm = 0x9993
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB73_117
# %bb.97:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-26209, %ax            # imm = 0x999F
	jne	.LBB73_240
# %bb.98:                               # %set_proof_and_disproof_numbers.split558
	movl	$0, (%r15)
	movw	$-26209, BasicBlockSignatureTracker # imm = 0x999F
	movw	$4879, RunTimeSignatureAdjuster # imm = 0x130F
	movq	%rbx, %rdi
	callq	gen
	movw	$-26209, BasicBlockSignatureTracker # imm = 0x999F
	movw	$4879, RunTimeSignatureAdjuster # imm = 0x130F
	movl	numb_moves, %eax
	movl	%eax, (%r15)
	movw	$-26209, BasicBlockSignatureTracker # imm = 0x999F
	movw	$4880, RunTimeSignatureAdjuster # imm = 0x1310
	callq	in_check
	movw	$-26209, BasicBlockSignatureTracker # imm = 0x999F
	movw	$4880, RunTimeSignatureAdjuster # imm = 0x1310
	movl	%eax, (%r12)
	movl	Variant, %eax
	movw	$-26209, BasicBlockSignatureTracker # imm = 0x999F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB73_113
# %bb.99:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-26208, %ax            # imm = 0x99A0
	jne	.LBB73_240
# %bb.100:                              # %set_proof_and_disproof_numbers.split562
	movl	$0, (%r14)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-26208, BasicBlockSignatureTracker # imm = 0x99A0
	movw	$0, RunTimeSignatureAdjuster
.LBB73_101:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-26188, %ax            # imm = 0x99B4
	jne	.LBB73_237
# %bb.102:                              # %set_proof_and_disproof_numbers.split566
                                        #   in Loop: Header=BB73_101 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r15), %ecx
	movw	$-26188, BasicBlockSignatureTracker # imm = 0x99B4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB73_111
# %bb.103:                              #   in Loop: Header=BB73_101 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$-26166, %ax            # imm = 0x99CA
	jne	.LBB73_237
# %bb.104:                              # %set_proof_and_disproof_numbers.split568
                                        #   in Loop: Header=BB73_101 Depth=1
	movq	-56(%rbp), %r13         # 8-byte Reload
	movl	(%r13), %esi
	movw	$-26166, BasicBlockSignatureTracker # imm = 0x99CA
	movw	$4986, RunTimeSignatureAdjuster # imm = 0x137A
	movq	%rbx, %rdi
	callq	make
	movw	$-26166, BasicBlockSignatureTracker # imm = 0x99CA
	movw	$4986, RunTimeSignatureAdjuster # imm = 0x137A
	movl	(%r13), %esi
	movl	(%r12), %edx
	movw	$-26166, BasicBlockSignatureTracker # imm = 0x99CA
	movw	$4986, RunTimeSignatureAdjuster # imm = 0x137A
	movq	%rbx, %rdi
	callq	check_legal
	movw	$-26166, BasicBlockSignatureTracker # imm = 0x99CA
	movw	$4986, RunTimeSignatureAdjuster # imm = 0x137A
	movw	$-26166, BasicBlockSignatureTracker # imm = 0x99CA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB73_107
# %bb.105:                              #   in Loop: Header=BB73_101 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-26159, %ax            # imm = 0x99D1
	jne	.LBB73_237
# %bb.106:                              # %set_proof_and_disproof_numbers.split572
                                        #   in Loop: Header=BB73_101 Depth=1
	movq	%r14, %rcx
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-26159, BasicBlockSignatureTracker # imm = 0x99D1
	movw	$27, RunTimeSignatureAdjuster
.LBB73_107:                             #   in Loop: Header=BB73_101 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-26156, %ax            # imm = 0x99D4
	jne	.LBB73_237
# %bb.108:                              # %set_proof_and_disproof_numbers.split574
                                        #   in Loop: Header=BB73_101 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-26156, BasicBlockSignatureTracker # imm = 0x99D4
	movw	$4915, RunTimeSignatureAdjuster # imm = 0x1333
	movq	%rbx, %rdi
	callq	unmake
	movw	$-26156, BasicBlockSignatureTracker # imm = 0x99D4
	movw	$4915, RunTimeSignatureAdjuster # imm = 0x1333
	movw	$-26156, BasicBlockSignatureTracker # imm = 0x99D4
	movw	$0, RunTimeSignatureAdjuster
# %bb.109:                              #   in Loop: Header=BB73_101 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-26148, %ax            # imm = 0x99DC
	jne	.LBB73_237
# %bb.110:                              # %set_proof_and_disproof_numbers.split576
                                        #   in Loop: Header=BB73_101 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-26148, BasicBlockSignatureTracker # imm = 0x99DC
	movw	$124, RunTimeSignatureAdjuster
	jmp	.LBB73_101
.LBB73_111:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$84, %ax
	cmpw	$-26144, %ax            # imm = 0x99E0
	jne	.LBB73_240
# %bb.112:                              # %set_proof_and_disproof_numbers.split570
	movw	$-26144, BasicBlockSignatureTracker # imm = 0x99E0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_115
.LBB73_113:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$125, %ax
	cmpw	$-26142, %ax            # imm = 0x99E2
	jne	.LBB73_240
# %bb.114:                              # %set_proof_and_disproof_numbers.split564
	movl	numb_moves, %eax
	movl	%eax, (%r14)
	movw	$-26142, BasicBlockSignatureTracker # imm = 0x99E2
	movw	$2, RunTimeSignatureAdjuster
.LBB73_115:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1006, %ax              # imm = 0x3EE
	xorw	%cx, %ax
	cmpw	$-26098, %ax            # imm = 0x9A0E
	jne	.LBB73_240
# %bb.116:                              # %set_proof_and_disproof_numbers.split578
	movw	$-26098, BasicBlockSignatureTracker # imm = 0x9A0E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_151
.LBB73_117:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$924, %ax               # imm = 0x39C
	cmpw	$-26097, %ax            # imm = 0x9A0F
	jne	.LBB73_240
# %bb.118:                              # %set_proof_and_disproof_numbers.split560
	movl	$0, (%r14)
	movl	$1, captures
	movl	$0, (%r15)
	movw	$-26097, BasicBlockSignatureTracker # imm = 0x9A0F
	movw	$4255, RunTimeSignatureAdjuster # imm = 0x109F
	movq	%rbx, %rdi
	callq	gen
	movw	$-26097, BasicBlockSignatureTracker # imm = 0x9A0F
	movw	$4255, RunTimeSignatureAdjuster # imm = 0x109F
	movl	numb_moves, %eax
	movl	%eax, (%r15)
	movl	$0, captures
	movw	$-26097, BasicBlockSignatureTracker # imm = 0x9A0F
	movw	$4224, RunTimeSignatureAdjuster # imm = 0x1080
	callq	in_check
	movw	$-26097, BasicBlockSignatureTracker # imm = 0x9A0F
	movw	$4224, RunTimeSignatureAdjuster # imm = 0x1080
	movl	%eax, (%r12)
	movl	(%r15), %eax
	movw	$-26097, BasicBlockSignatureTracker # imm = 0x9A0F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB73_133
# %bb.119:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$-26077, %ax            # imm = 0x9A23
	jne	.LBB73_240
# %bb.120:                              # %set_proof_and_disproof_numbers.split582
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-26077, BasicBlockSignatureTracker # imm = 0x9A23
	movw	$0, RunTimeSignatureAdjuster
.LBB73_121:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$-26062, %ax            # imm = 0x9A32
	jne	.LBB73_239
# %bb.122:                              # %set_proof_and_disproof_numbers.split586
                                        #   in Loop: Header=BB73_121 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r15), %ecx
	movw	$-26062, BasicBlockSignatureTracker # imm = 0x9A32
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB73_131
# %bb.123:                              #   in Loop: Header=BB73_121 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$-26048, %ax            # imm = 0x9A40
	jne	.LBB73_239
# %bb.124:                              # %set_proof_and_disproof_numbers.split588
                                        #   in Loop: Header=BB73_121 Depth=1
	movq	-56(%rbp), %r13         # 8-byte Reload
	movl	(%r13), %esi
	movw	$-26048, BasicBlockSignatureTracker # imm = 0x9A40
	movw	$4336, RunTimeSignatureAdjuster # imm = 0x10F0
	movq	%rbx, %rdi
	callq	make
	movw	$-26048, BasicBlockSignatureTracker # imm = 0x9A40
	movw	$4336, RunTimeSignatureAdjuster # imm = 0x10F0
	movl	(%r13), %esi
	movl	(%r12), %edx
	movw	$-26048, BasicBlockSignatureTracker # imm = 0x9A40
	movw	$4336, RunTimeSignatureAdjuster # imm = 0x10F0
	movq	%rbx, %rdi
	callq	check_legal
	movw	$-26048, BasicBlockSignatureTracker # imm = 0x9A40
	movw	$4336, RunTimeSignatureAdjuster # imm = 0x10F0
	movw	$-26048, BasicBlockSignatureTracker # imm = 0x9A40
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB73_127
# %bb.125:                              #   in Loop: Header=BB73_121 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-26033, %ax            # imm = 0x9A4F
	jne	.LBB73_239
# %bb.126:                              # %set_proof_and_disproof_numbers.split592
                                        #   in Loop: Header=BB73_121 Depth=1
	movq	%r14, %rcx
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-26033, BasicBlockSignatureTracker # imm = 0x9A4F
	movw	$15, RunTimeSignatureAdjuster
.LBB73_127:                             #   in Loop: Header=BB73_121 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-26021, %ax            # imm = 0x9A5B
	jne	.LBB73_239
# %bb.128:                              # %set_proof_and_disproof_numbers.split594
                                        #   in Loop: Header=BB73_121 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-26021, BasicBlockSignatureTracker # imm = 0x9A5B
	movw	$4284, RunTimeSignatureAdjuster # imm = 0x10BC
	movq	%rbx, %rdi
	callq	unmake
	movw	$-26021, BasicBlockSignatureTracker # imm = 0x9A5B
	movw	$4284, RunTimeSignatureAdjuster # imm = 0x10BC
	movw	$-26021, BasicBlockSignatureTracker # imm = 0x9A5B
	movw	$0, RunTimeSignatureAdjuster
# %bb.129:                              #   in Loop: Header=BB73_121 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$-26007, %ax            # imm = 0x9A69
	jne	.LBB73_239
# %bb.130:                              # %set_proof_and_disproof_numbers.split596
                                        #   in Loop: Header=BB73_121 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-26007, BasicBlockSignatureTracker # imm = 0x9A69
	movw	$74, RunTimeSignatureAdjuster
	jmp	.LBB73_121
.LBB73_131:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$88, %ax
	cmpw	$-26006, %ax            # imm = 0x9A6A
	jne	.LBB73_240
# %bb.132:                              # %set_proof_and_disproof_numbers.split590
	movw	$-26006, BasicBlockSignatureTracker # imm = 0x9A6A
	movw	$101, RunTimeSignatureAdjuster
.LBB73_133:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$-25997, %ax            # imm = 0x9A73
	jne	.LBB73_240
# %bb.134:                              # %set_proof_and_disproof_numbers.split584
	movl	(%r14), %eax
	movw	$-25997, BasicBlockSignatureTracker # imm = 0x9A73
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB73_149
# %bb.135:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$241, %ax
	cmpw	$-25982, %ax            # imm = 0x9A82
	jne	.LBB73_240
# %bb.136:                              # %set_proof_and_disproof_numbers.split600
	movl	$0, captures
	movl	$0, (%r15)
	movw	$-25982, BasicBlockSignatureTracker # imm = 0x9A82
	movw	$4114, RunTimeSignatureAdjuster # imm = 0x1012
	movq	%rbx, %rdi
	callq	gen
	movw	$-25982, BasicBlockSignatureTracker # imm = 0x9A82
	movw	$4114, RunTimeSignatureAdjuster # imm = 0x1012
	movl	numb_moves, %eax
	movl	%eax, (%r15)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-25982, BasicBlockSignatureTracker # imm = 0x9A82
	movw	$0, RunTimeSignatureAdjuster
.LBB73_137:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-25979, %ax            # imm = 0x9A85
	jne	.LBB73_238
# %bb.138:                              # %set_proof_and_disproof_numbers.split602
                                        #   in Loop: Header=BB73_137 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r15), %ecx
	movw	$-25979, BasicBlockSignatureTracker # imm = 0x9A85
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB73_147
# %bb.139:                              #   in Loop: Header=BB73_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-25977, %ax            # imm = 0x9A87
	jne	.LBB73_238
# %bb.140:                              # %set_proof_and_disproof_numbers.split604
                                        #   in Loop: Header=BB73_137 Depth=1
	movq	-56(%rbp), %r13         # 8-byte Reload
	movl	(%r13), %esi
	movw	$-25977, BasicBlockSignatureTracker # imm = 0x9A87
	movw	$4151, RunTimeSignatureAdjuster # imm = 0x1037
	movq	%rbx, %rdi
	callq	make
	movw	$-25977, BasicBlockSignatureTracker # imm = 0x9A87
	movw	$4151, RunTimeSignatureAdjuster # imm = 0x1037
	movl	(%r13), %esi
	movl	(%r12), %edx
	movw	$-25977, BasicBlockSignatureTracker # imm = 0x9A87
	movw	$4151, RunTimeSignatureAdjuster # imm = 0x1037
	movq	%rbx, %rdi
	callq	check_legal
	movw	$-25977, BasicBlockSignatureTracker # imm = 0x9A87
	movw	$4151, RunTimeSignatureAdjuster # imm = 0x1037
	movw	$-25977, BasicBlockSignatureTracker # imm = 0x9A87
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB73_143
# %bb.141:                              #   in Loop: Header=BB73_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-25970, %ax            # imm = 0x9A8E
	jne	.LBB73_238
# %bb.142:                              # %set_proof_and_disproof_numbers.split608
                                        #   in Loop: Header=BB73_137 Depth=1
	movq	%r14, %rcx
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-25970, BasicBlockSignatureTracker # imm = 0x9A8E
	movw	$9, RunTimeSignatureAdjuster
.LBB73_143:                             #   in Loop: Header=BB73_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$-25953, %ax            # imm = 0x9A9F
	jne	.LBB73_238
# %bb.144:                              # %set_proof_and_disproof_numbers.split610
                                        #   in Loop: Header=BB73_137 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-25953, BasicBlockSignatureTracker # imm = 0x9A9F
	movw	$4216, RunTimeSignatureAdjuster # imm = 0x1078
	movq	%rbx, %rdi
	callq	unmake
	movw	$-25953, BasicBlockSignatureTracker # imm = 0x9A9F
	movw	$4216, RunTimeSignatureAdjuster # imm = 0x1078
	movw	$-25953, BasicBlockSignatureTracker # imm = 0x9A9F
	movw	$0, RunTimeSignatureAdjuster
# %bb.145:                              #   in Loop: Header=BB73_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-25946, %ax            # imm = 0x9AA6
	jne	.LBB73_238
# %bb.146:                              # %set_proof_and_disproof_numbers.split612
                                        #   in Loop: Header=BB73_137 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-25946, BasicBlockSignatureTracker # imm = 0x9AA6
	movw	$36, RunTimeSignatureAdjuster
	jmp	.LBB73_137
.LBB73_147:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$40, %ax
	cmpw	$-25939, %ax            # imm = 0x9AAD
	jne	.LBB73_240
# %bb.148:                              # %set_proof_and_disproof_numbers.split606
	movw	$-25939, BasicBlockSignatureTracker # imm = 0x9AAD
	movw	$222, RunTimeSignatureAdjuster
.LBB73_149:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$185, %ax
	xorw	%cx, %ax
	cmpw	$-25910, %ax            # imm = 0x9ACA
	jne	.LBB73_240
# %bb.150:                              # %set_proof_and_disproof_numbers.split598
	movw	$-25910, BasicBlockSignatureTracker # imm = 0x9ACA
	movw	$196, RunTimeSignatureAdjuster
.LBB73_151:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$208, %ax
	xorw	%cx, %ax
	cmpw	$-25890, %ax            # imm = 0x9ADE
	jne	.LBB73_240
# %bb.152:                              # %set_proof_and_disproof_numbers.split580
	movl	(%r14), %eax
	movw	$-25890, BasicBlockSignatureTracker # imm = 0x9ADE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB73_155
# %bb.153:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-25879, %ax            # imm = 0x9AE9
	jne	.LBB73_240
# %bb.154:                              # %set_proof_and_disproof_numbers.split614
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movl	$1, 4(%rax)
	movq	(%rcx), %rax
	movl	$1, 8(%rax)
	movw	$-25879, BasicBlockSignatureTracker # imm = 0x9AE9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_207
.LBB73_155:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$464, %ax               # imm = 0x1D0
	cmpw	$-25842, %ax            # imm = 0x9B0E
	jne	.LBB73_240
# %bb.156:                              # %set_proof_and_disproof_numbers.split616
	movl	$1, %eax
	xorl	%ecx, %ecx
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	root_to_move, %ecx
	movw	$-25842, BasicBlockSignatureTracker # imm = 0x9B0E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB73_181
# %bb.157:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-25827, %ax            # imm = 0x9B1D
	jne	.LBB73_240
# %bb.158:                              # %set_proof_and_disproof_numbers.split620
	movl	Variant, %eax
	movw	$-25827, BasicBlockSignatureTracker # imm = 0x9B1D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB73_165
# %bb.159:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$-25805, %ax            # imm = 0x9B33
	jne	.LBB73_240
# %bb.160:                              # %set_proof_and_disproof_numbers.split624
	movl	Variant, %eax
	movw	$-25805, BasicBlockSignatureTracker # imm = 0x9B33
	movw	$46, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB73_165
# %bb.161:                              # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1745, %ax              # imm = 0x6D1
	cmpw	$-25118, %ax            # imm = 0x9DE2
	jne	.LBB73_240
# %bb.162:                              # %set_proof_and_disproof_numbers.split628
	movw	$-25118, BasicBlockSignatureTracker # imm = 0x9DE2
	movw	$1745, RunTimeSignatureAdjuster # imm = 0x6D1
# %bb.163:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$112, %ax
	xorw	%cx, %ax
	cmpw	$-25789, %ax            # imm = 0x9B43
	jne	.LBB73_240
# %bb.164:                              # %set_proof_and_disproof_numbers.split704
	movl	$50, %ecx
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	$1, %eax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	(%rdi), %rdx
	movl	%eax, 4(%rdx)
	movl	(%r14), %esi
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	%eax, %esi
	movq	(%rdi), %rax
	movl	%esi, 8(%rax)
	movw	$-25789, BasicBlockSignatureTracker # imm = 0x9B43
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_179
.LBB73_165:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$-25759, %ax            # imm = 0x9B61
	jne	.LBB73_240
# %bb.166:                              # %set_proof_and_disproof_numbers.split626
	movl	Variant, %eax
	movw	$-25759, BasicBlockSignatureTracker # imm = 0x9B61
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB73_175
# %bb.167:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-25758, %ax            # imm = 0x9B62
	jne	.LBB73_240
# %bb.168:                              # %set_proof_and_disproof_numbers.split632
	movl	phase, %eax
	movw	$-25758, BasicBlockSignatureTracker # imm = 0x9B62
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB73_171
# %bb.169:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-25749, %ax            # imm = 0x9B6B
	jne	.LBB73_240
# %bb.170:                              # %set_proof_and_disproof_numbers.split636
	movl	$30, %ecx
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	$1, %eax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	(%rdi), %rdx
	movl	%eax, 4(%rdx)
	movl	(%r14), %esi
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	%eax, %esi
	movq	(%rdi), %rax
	movl	%esi, 8(%rax)
	movw	$-25749, BasicBlockSignatureTracker # imm = 0x9B6B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_173
.LBB73_171:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-25741, %ax            # imm = 0x9B73
	jne	.LBB73_240
# %bb.172:                              # %set_proof_and_disproof_numbers.split638
	movl	$80, %ecx
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	$1, %eax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	(%rdi), %rdx
	movl	%eax, 4(%rdx)
	movl	(%r14), %esi
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	%eax, %esi
	movq	(%rdi), %rax
	movl	%esi, 8(%rax)
	movw	$-25741, BasicBlockSignatureTracker # imm = 0x9B73
	movw	$24, RunTimeSignatureAdjuster
.LBB73_173:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$216, %ax
	xorw	%cx, %ax
	cmpw	$-25677, %ax            # imm = 0x9BB3
	jne	.LBB73_240
# %bb.174:                              # %set_proof_and_disproof_numbers.split640
	movw	$-25677, BasicBlockSignatureTracker # imm = 0x9BB3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_177
.LBB73_175:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$215, %ax
	cmpw	$-25674, %ax            # imm = 0x9BB6
	jne	.LBB73_240
# %bb.176:                              # %set_proof_and_disproof_numbers.split634
	movl	$150, %ecx
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	$1, %eax
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	(%rdi), %rdx
	movl	%eax, 4(%rdx)
	movl	(%r14), %esi
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	%eax, %esi
	movq	(%rdi), %rax
	movl	%esi, 8(%rax)
	movw	$-25674, BasicBlockSignatureTracker # imm = 0x9BB6
	movw	$5, RunTimeSignatureAdjuster
.LBB73_177:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-25665, %ax            # imm = 0x9BBF
	jne	.LBB73_240
# %bb.178:                              # %set_proof_and_disproof_numbers.split642
	movw	$-25665, BasicBlockSignatureTracker # imm = 0x9BBF
	movw	$252, RunTimeSignatureAdjuster
.LBB73_179:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$138, %ax
	xorw	%cx, %ax
	cmpw	$-25655, %ax            # imm = 0x9BC9
	jne	.LBB73_240
# %bb.180:                              # %set_proof_and_disproof_numbers.split630
	movw	$-25655, BasicBlockSignatureTracker # imm = 0x9BC9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_205
.LBB73_181:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$193, %ax
	cmpw	$-25649, %ax            # imm = 0x9BCF
	jne	.LBB73_240
# %bb.182:                              # %set_proof_and_disproof_numbers.split622
	movl	Variant, %eax
	movw	$-25649, BasicBlockSignatureTracker # imm = 0x9BCF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB73_189
# %bb.183:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1998, %ax              # imm = 0x7CE
	cmpw	$-25599, %ax            # imm = 0x9C01
	jne	.LBB73_240
# %bb.184:                              # %set_proof_and_disproof_numbers.split646
	movl	Variant, %eax
	movw	$-25599, BasicBlockSignatureTracker # imm = 0x9C01
	movw	$1998, RunTimeSignatureAdjuster # imm = 0x7CE
	cmpl	$4, %eax
	je	.LBB73_189
# %bb.185:                              # %Buffer__6
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25972, %ax            # imm = 0x9A8C
	cmpw	$1677, %ax              # imm = 0x68D
	jne	.LBB73_240
# %bb.186:                              # %set_proof_and_disproof_numbers.split650
	movw	$1677, BasicBlockSignatureTracker # imm = 0x68D
	movw	$-25972, RunTimeSignatureAdjuster # imm = 0x9A8C
# %bb.187:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-25597, %ax            # imm = 0x9C03
	jne	.LBB73_240
# %bb.188:                              # %set_proof_and_disproof_numbers.split706
	movl	$50, %ecx
	movl	(%r14), %esi
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	%eax, %esi
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	(%rdi), %rax
	movl	%esi, 4(%rax)
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	$1, %eax
	movq	(%rdi), %rcx
	movl	%eax, 8(%rcx)
	movw	$-25597, BasicBlockSignatureTracker # imm = 0x9C03
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_203
.LBB73_189:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1990, %ax              # imm = 0x7C6
	xorw	%cx, %ax
	cmpw	$-25591, %ax            # imm = 0x9C09
	jne	.LBB73_240
# %bb.190:                              # %set_proof_and_disproof_numbers.split648
	movl	Variant, %eax
	movw	$-25591, BasicBlockSignatureTracker # imm = 0x9C09
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB73_199
# %bb.191:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-25589, %ax            # imm = 0x9C0B
	jne	.LBB73_240
# %bb.192:                              # %set_proof_and_disproof_numbers.split654
	movl	phase, %eax
	movw	$-25589, BasicBlockSignatureTracker # imm = 0x9C0B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB73_195
# %bb.193:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-25578, %ax            # imm = 0x9C16
	jne	.LBB73_240
# %bb.194:                              # %set_proof_and_disproof_numbers.split658
	movl	$30, %ecx
	movl	(%r14), %esi
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	%eax, %esi
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	(%rdi), %rax
	movl	%esi, 4(%rax)
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	$1, %eax
	movq	(%rdi), %rcx
	movl	%eax, 8(%rcx)
	movw	$-25578, BasicBlockSignatureTracker # imm = 0x9C16
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_197
.LBB73_195:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32, %ax
	cmpw	$-25557, %ax            # imm = 0x9C2B
	jne	.LBB73_240
# %bb.196:                              # %set_proof_and_disproof_numbers.split660
	movl	$80, %ecx
	movl	(%r14), %esi
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	%eax, %esi
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	(%rdi), %rax
	movl	%esi, 4(%rax)
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	$1, %eax
	movq	(%rdi), %rcx
	movl	%eax, 8(%rcx)
	movw	$-25557, BasicBlockSignatureTracker # imm = 0x9C2B
	movw	$61, RunTimeSignatureAdjuster
.LBB73_197:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$-25555, %ax            # imm = 0x9C2D
	jne	.LBB73_240
# %bb.198:                              # %set_proof_and_disproof_numbers.split662
	movw	$-25555, BasicBlockSignatureTracker # imm = 0x9C2D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_201
.LBB73_199:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$-25543, %ax            # imm = 0x9C39
	jne	.LBB73_240
# %bb.200:                              # %set_proof_and_disproof_numbers.split656
	movl	$150, %ecx
	movl	(%r14), %esi
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	%eax, %esi
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	(%rdi), %rax
	movl	%esi, 4(%rax)
	movl	ply, %eax
	cltd
	idivl	%ecx
	addl	$1, %eax
	movq	(%rdi), %rcx
	movl	%eax, 8(%rcx)
	movw	$-25543, BasicBlockSignatureTracker # imm = 0x9C39
	movw	$20, RunTimeSignatureAdjuster
.LBB73_201:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-25537, %ax            # imm = 0x9C3F
	jne	.LBB73_240
# %bb.202:                              # %set_proof_and_disproof_numbers.split664
	movw	$-25537, BasicBlockSignatureTracker # imm = 0x9C3F
	movw	$60, RunTimeSignatureAdjuster
.LBB73_203:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$72, %ax
	xorw	%cx, %ax
	cmpw	$-25525, %ax            # imm = 0x9C4B
	jne	.LBB73_240
# %bb.204:                              # %set_proof_and_disproof_numbers.split652
	movw	$-25525, BasicBlockSignatureTracker # imm = 0x9C4B
	movw	$1922, RunTimeSignatureAdjuster # imm = 0x782
.LBB73_205:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1969, %ax              # imm = 0x7B1
	xorw	%cx, %ax
	cmpw	$-25480, %ax            # imm = 0x9C78
	jne	.LBB73_240
# %bb.206:                              # %set_proof_and_disproof_numbers.split644
	movw	$-25480, BasicBlockSignatureTracker # imm = 0x9C78
	movw	$1681, RunTimeSignatureAdjuster # imm = 0x691
.LBB73_207:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1644, %ax              # imm = 0x66C
	xorw	%cx, %ax
	cmpw	$-25467, %ax            # imm = 0x9C85
	jne	.LBB73_240
# %bb.208:                              # %set_proof_and_disproof_numbers.split618
	movw	$-25467, BasicBlockSignatureTracker # imm = 0x9C85
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_227
.LBB73_209:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1476, %ax              # imm = 0x5C4
	cmpw	$-25442, %ax            # imm = 0x9C9E
	jne	.LBB73_240
# %bb.210:                              # %set_proof_and_disproof_numbers.split550
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movzbl	(%rax), %eax
	movw	$-25442, BasicBlockSignatureTracker # imm = 0x9C9E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB73_213
# %bb.211:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$-25427, %ax            # imm = 0x9CAD
	jne	.LBB73_240
# %bb.212:                              # %set_proof_and_disproof_numbers.split668
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movl	$100000000, 4(%rax)     # imm = 0x5F5E100
	movq	(%rcx), %rax
	movl	$0, 8(%rax)
	movw	$-25427, BasicBlockSignatureTracker # imm = 0x9CAD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_225
.LBB73_213:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$-25426, %ax            # imm = 0x9CAE
	jne	.LBB73_240
# %bb.214:                              # %set_proof_and_disproof_numbers.split670
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movzbl	(%rax), %eax
	movw	$-25426, BasicBlockSignatureTracker # imm = 0x9CAE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB73_217
# %bb.215:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-25415, %ax            # imm = 0x9CB9
	jne	.LBB73_240
# %bb.216:                              # %set_proof_and_disproof_numbers.split674
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movl	$0, 4(%rax)
	movq	(%rcx), %rax
	movl	$100000000, 8(%rax)     # imm = 0x5F5E100
	movw	$-25415, BasicBlockSignatureTracker # imm = 0x9CB9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_223
.LBB73_217:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-25413, %ax            # imm = 0x9CBB
	jne	.LBB73_240
# %bb.218:                              # %set_proof_and_disproof_numbers.split676
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movzbl	(%rax), %eax
	movw	$-25413, BasicBlockSignatureTracker # imm = 0x9CBB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB73_221
# %bb.219:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-25409, %ax            # imm = 0x9CBF
	jne	.LBB73_240
# %bb.220:                              # %set_proof_and_disproof_numbers.split680
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movl	$50000, 4(%rax)         # imm = 0xC350
	movq	(%rcx), %rax
	movl	$50000, 8(%rax)         # imm = 0xC350
	movw	$-25409, BasicBlockSignatureTracker # imm = 0x9CBF
	movw	$4, RunTimeSignatureAdjuster
.LBB73_221:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$123, %ax
	xorw	%cx, %ax
	cmpw	$-25408, %ax            # imm = 0x9CC0
	jne	.LBB73_240
# %bb.222:                              # %set_proof_and_disproof_numbers.split682
	movw	$-25408, BasicBlockSignatureTracker # imm = 0x9CC0
	movw	$121, RunTimeSignatureAdjuster
.LBB73_223:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$122, %ax
	xorw	%cx, %ax
	cmpw	$-25405, %ax            # imm = 0x9CC3
	jne	.LBB73_240
# %bb.224:                              # %set_proof_and_disproof_numbers.split678
	movw	$-25405, BasicBlockSignatureTracker # imm = 0x9CC3
	movw	$110, RunTimeSignatureAdjuster
.LBB73_225:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$106, %ax
	xorw	%cx, %ax
	cmpw	$-25401, %ax            # imm = 0x9CC7
	jne	.LBB73_240
# %bb.226:                              # %set_proof_and_disproof_numbers.split672
	movw	$-25401, BasicBlockSignatureTracker # imm = 0x9CC7
	movw	$66, RunTimeSignatureAdjuster
.LBB73_227:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$73, %ax
	xorw	%cx, %ax
	cmpw	$-25396, %ax            # imm = 0x9CCC
	jne	.LBB73_240
# %bb.228:                              # %set_proof_and_disproof_numbers.split666
	movw	$-25396, BasicBlockSignatureTracker # imm = 0x9CCC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB73_231
.LBB73_229:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1425, %ax              # imm = 0x591
	cmpw	$-25390, %ax            # imm = 0x9CD2
	jne	.LBB73_240
# %bb.230:                              # %set_proof_and_disproof_numbers.split546
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movl	$1, 8(%rax)
	movq	(%rcx), %rax
	movl	$1, 4(%rax)
	movw	$-25390, BasicBlockSignatureTracker # imm = 0x9CD2
	movw	$30, RunTimeSignatureAdjuster
.LBB73_231:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-25387, %ax            # imm = 0x9CD5
	jne	.LBB73_240
# %bb.232:                              # %set_proof_and_disproof_numbers.split684
	movw	$-25387, BasicBlockSignatureTracker # imm = 0x9CD5
	movw	$1517, RunTimeSignatureAdjuster # imm = 0x5ED
.LBB73_233:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1491, %ax              # imm = 0x5D3
	xorw	%cx, %ax
	cmpw	$-25365, %ax            # imm = 0x9CEB
	jne	.LBB73_240
# %bb.234:                              # %set_proof_and_disproof_numbers.split542
	movw	$-25365, BasicBlockSignatureTracker # imm = 0x9CEB
	movw	$321, RunTimeSignatureAdjuster # imm = 0x141
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB73_235:                             # %CFerrorHandler.set_proof_and_disproof_numbers.loopexit
	jmp	.LBB73_240
.LBB73_236:                             # %CFerrorHandler.set_proof_and_disproof_numbers.loopexit1
	jmp	.LBB73_240
.LBB73_237:                             # %CFerrorHandler.set_proof_and_disproof_numbers.loopexit2
	jmp	.LBB73_240
.LBB73_238:                             # %CFerrorHandler.set_proof_and_disproof_numbers.loopexit3
	jmp	.LBB73_240
.LBB73_239:                             # %CFerrorHandler.set_proof_and_disproof_numbers.loopexit4
	jmp	.LBB73_240
.LBB73_240:                             # %CFerrorHandler.set_proof_and_disproof_numbers
	callq	FAULT_DETECTED_CFC
.Lfunc_end73:
	.size	set_proof_and_disproof_numbers, .Lfunc_end73-set_proof_and_disproof_numbers
	.cfi_endproc
                                        # -- End function
	.globl	develop_node            # -- Begin function develop_node
	.p2align	4, 0x90
	.type	develop_node,@function
develop_node:                           # @develop_node
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-12157, %ax            # imm = 0xD083
	xorw	%cx, %ax
	cmpw	$-25347, %ax            # imm = 0x9CFD
	jne	.LBB74_65
# %bb.1:                                # %develop_node.split189
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-12157, %ax            # imm = 0xD083
	xorw	%cx, %ax
	cmpw	$-25347, %ax            # imm = 0x9CFD
	jne	.LBB74_65
# %bb.2:                                # %develop_node.split187
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-12157, %ax            # imm = 0xD083
	xorw	%cx, %ax
	cmpw	$-25347, %ax            # imm = 0x9CFD
	jne	.LBB74_65
# %bb.3:                                # %develop_node.split185
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-12157, %ax            # imm = 0xD083
	xorw	%cx, %ax
	cmpw	$-25347, %ax            # imm = 0x9CFD
	jne	.LBB74_65
# %bb.4:                                # %develop_node.split183
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-12157, %ax            # imm = 0xD083
	xorw	%cx, %ax
	cmpw	$-25347, %ax            # imm = 0x9CFD
	jne	.LBB74_65
# %bb.5:                                # %develop_node.split181
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r13
	addq	$-12288, %r13           # imm = 0xD000
	movq	%r13, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rdi, (%rbx)
	movw	$-25347, BasicBlockSignatureTracker # imm = 0x9CFD
	movw	$5746, RunTimeSignatureAdjuster # imm = 0x1672
	callq	in_check
	movw	$-25347, BasicBlockSignatureTracker # imm = 0x9CFD
	movw	$5746, RunTimeSignatureAdjuster # imm = 0x1672
	movl	%eax, (%r12)
	movl	Variant, %eax
	movw	$-25347, BasicBlockSignatureTracker # imm = 0x9CFD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB74_8
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$500, %ax               # imm = 0x1F4
	cmpw	$-25335, %ax            # imm = 0x9D09
	jne	.LBB74_65
# %bb.7:                                # %develop_node.split
	movq	%rbx, %r14
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	$0, (%rbx)
	movw	$-25335, BasicBlockSignatureTracker # imm = 0x9D09
	movw	$6041, RunTimeSignatureAdjuster # imm = 0x1799
	movq	%r13, %rdi
	callq	gen
	movw	$-25335, BasicBlockSignatureTracker # imm = 0x9D09
	movw	$6041, RunTimeSignatureAdjuster # imm = 0x1799
	movl	numb_moves, %eax
	movl	%eax, (%rbx)
	movq	%r14, %rbx
	movw	$-25335, BasicBlockSignatureTracker # imm = 0x9D09
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB74_27
.LBB74_8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$494, %ax               # imm = 0x1EE
	cmpw	$-25325, %ax            # imm = 0x9D13
	jne	.LBB74_65
# %bb.9:                                # %develop_node.split129
	movq	%rbx, -56(%rbp)         # 8-byte Spill
	movl	$1, captures
	movl	$0, (%r14)
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	$0, (%rbx)
	movw	$-25325, BasicBlockSignatureTracker # imm = 0x9D13
	movw	$6019, RunTimeSignatureAdjuster # imm = 0x1783
	movq	%r13, %rdi
	callq	gen
	movw	$-25325, BasicBlockSignatureTracker # imm = 0x9D13
	movw	$6019, RunTimeSignatureAdjuster # imm = 0x1783
	movl	numb_moves, %eax
	movl	%eax, (%rbx)
	movl	$0, captures
	movl	$0, (%r15)
	movw	$-25325, BasicBlockSignatureTracker # imm = 0x9D13
	movw	$0, RunTimeSignatureAdjuster
.LBB74_10:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-25318, %ax            # imm = 0x9D1A
	jne	.LBB74_64
# %bb.11:                               # %develop_node.split133
                                        #   in Loop: Header=BB74_10 Depth=1
	movl	(%r15), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-25318, BasicBlockSignatureTracker # imm = 0x9D1A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB74_20
# %bb.12:                               #   in Loop: Header=BB74_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-25315, %ax            # imm = 0x9D1D
	jne	.LBB74_64
# %bb.13:                               # %develop_node.split135
                                        #   in Loop: Header=BB74_10 Depth=1
	movl	(%r15), %esi
	movw	$-25315, BasicBlockSignatureTracker # imm = 0x9D1D
	movw	$6061, RunTimeSignatureAdjuster # imm = 0x17AD
	movq	%r13, %rdi
	callq	make
	movw	$-25315, BasicBlockSignatureTracker # imm = 0x9D1D
	movw	$6061, RunTimeSignatureAdjuster # imm = 0x17AD
	movl	(%r15), %esi
	movl	(%r12), %edx
	movw	$-25315, BasicBlockSignatureTracker # imm = 0x9D1D
	movw	$6061, RunTimeSignatureAdjuster # imm = 0x17AD
	movq	%r13, %rdi
	callq	check_legal
	movw	$-25315, BasicBlockSignatureTracker # imm = 0x9D1D
	movw	$6061, RunTimeSignatureAdjuster # imm = 0x17AD
	movw	$-25315, BasicBlockSignatureTracker # imm = 0x9D1D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB74_16
# %bb.14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$-25290, %ax            # imm = 0x9D36
	movq	-56(%rbp), %rbx         # 8-byte Reload
	jne	.LBB74_65
# %bb.15:                               # %develop_node.split139
	movl	$1, (%r14)
	movl	(%r15), %esi
	movw	$-25290, BasicBlockSignatureTracker # imm = 0x9D36
	movw	$6097, RunTimeSignatureAdjuster # imm = 0x17D1
	movq	%r13, %rdi
	callq	unmake
	movw	$-25290, BasicBlockSignatureTracker # imm = 0x9D36
	movw	$6097, RunTimeSignatureAdjuster # imm = 0x17D1
	movw	$-25290, BasicBlockSignatureTracker # imm = 0x9D36
	movw	$44, RunTimeSignatureAdjuster
	jmp	.LBB74_21
.LBB74_16:                              #   in Loop: Header=BB74_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$107, %ax
	cmpw	$-25226, %ax            # imm = 0x9D76
	jne	.LBB74_64
# %bb.17:                               # %develop_node.split141
                                        #   in Loop: Header=BB74_10 Depth=1
	movl	(%r15), %esi
	movw	$-25226, BasicBlockSignatureTracker # imm = 0x9D76
	movw	$6033, RunTimeSignatureAdjuster # imm = 0x1791
	movq	%r13, %rdi
	callq	unmake
	movw	$-25226, BasicBlockSignatureTracker # imm = 0x9D76
	movw	$6033, RunTimeSignatureAdjuster # imm = 0x1791
	movw	$-25226, BasicBlockSignatureTracker # imm = 0x9D76
	movw	$0, RunTimeSignatureAdjuster
# %bb.18:                               #   in Loop: Header=BB74_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-25220, %ax            # imm = 0x9D7C
	jne	.LBB74_64
# %bb.19:                               # %develop_node.split143
                                        #   in Loop: Header=BB74_10 Depth=1
	movl	(%r15), %eax
	addl	$1, %eax
	movl	%eax, (%r15)
	movw	$-25220, BasicBlockSignatureTracker # imm = 0x9D7C
	movw	$111, RunTimeSignatureAdjuster
	jmp	.LBB74_10
.LBB74_20:                              # %.loopexit
	movq	-56(%rbp), %rbx         # 8-byte Reload
	jmp	.LBB74_21
.LBB74_21:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$156, %ax
	xorw	%cx, %ax
	cmpw	$-25210, %ax            # imm = 0x9D86
	jne	.LBB74_65
# %bb.22:                               # %develop_node.split137
	movl	(%r14), %eax
	movw	$-25210, BasicBlockSignatureTracker # imm = 0x9D86
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB74_25
# %bb.23:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-25202, %ax            # imm = 0x9D8E
	jne	.LBB74_65
# %bb.24:                               # %develop_node.split145
	movl	$0, captures
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	$0, (%rbx)
	movw	$-25202, BasicBlockSignatureTracker # imm = 0x9D8E
	movw	$5918, RunTimeSignatureAdjuster # imm = 0x171E
	movq	%r13, %rdi
	callq	gen
	movw	$-25202, BasicBlockSignatureTracker # imm = 0x9D8E
	movw	$5918, RunTimeSignatureAdjuster # imm = 0x171E
	movl	numb_moves, %eax
	movl	%eax, (%rbx)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movw	$-25202, BasicBlockSignatureTracker # imm = 0x9D8E
	movw	$8, RunTimeSignatureAdjuster
.LBB74_25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$37, %ax
	xorw	%cx, %ax
	cmpw	$-25181, %ax            # imm = 0x9DA3
	jne	.LBB74_65
# %bb.26:                               # %develop_node.split147
	movw	$-25181, BasicBlockSignatureTracker # imm = 0x9DA3
	movw	$170, RunTimeSignatureAdjuster
.LBB74_27:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$175, %ax
	xorw	%cx, %ax
	cmpw	$-25178, %ax            # imm = 0x9DA6
	jne	.LBB74_65
# %bb.28:                               # %develop_node.split131
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rdi
	shlq	$3, %rdi
	movw	$-25178, BasicBlockSignatureTracker # imm = 0x9DA6
	movw	$0, RunTimeSignatureAdjuster
                                        # kill: def %edi killed %edi killed %rdi
	callq	Xmalloc
	movw	$-25178, BasicBlockSignatureTracker # imm = 0x9DA6
	movw	$0, RunTimeSignatureAdjuster
	movq	(%rbx), %rcx
	movq	%rax, 16(%rcx)
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movl	$0, (%r15)
	movw	$-25178, BasicBlockSignatureTracker # imm = 0x9DA6
	movw	$0, RunTimeSignatureAdjuster
.LBB74_29:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-25176, %ax            # imm = 0x9DA8
	jne	.LBB74_63
# %bb.30:                               # %develop_node.split149
                                        #   in Loop: Header=BB74_29 Depth=1
	movl	(%r15), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-25176, BasicBlockSignatureTracker # imm = 0x9DA8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB74_41
# %bb.31:                               #   in Loop: Header=BB74_29 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-25174, %ax            # imm = 0x9DAA
	jne	.LBB74_63
# %bb.32:                               # %develop_node.split151
                                        #   in Loop: Header=BB74_29 Depth=1
	movl	hash, %eax
	movl	move_number, %ecx
	addl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movl	%eax, hash_history(,%rcx,4)
	movl	(%r15), %esi
	movw	$-25174, BasicBlockSignatureTracker # imm = 0x9DAA
	movw	$5914, RunTimeSignatureAdjuster # imm = 0x171A
	movq	%r13, %rdi
	callq	make
	movw	$-25174, BasicBlockSignatureTracker # imm = 0x9DAA
	movw	$5914, RunTimeSignatureAdjuster # imm = 0x171A
	movl	(%r15), %esi
	movl	(%r12), %edx
	movw	$-25174, BasicBlockSignatureTracker # imm = 0x9DAA
	movw	$5914, RunTimeSignatureAdjuster # imm = 0x171A
	movq	%r13, %rdi
	callq	check_legal
	movw	$-25174, BasicBlockSignatureTracker # imm = 0x9DAA
	movw	$5914, RunTimeSignatureAdjuster # imm = 0x171A
	movw	$-25174, BasicBlockSignatureTracker # imm = 0x9DAA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB74_35
# %bb.33:                               #   in Loop: Header=BB74_29 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-25169, %ax            # imm = 0x9DAF
	jne	.LBB74_63
# %bb.34:                               # %develop_node.split155
                                        #   in Loop: Header=BB74_29 Depth=1
	movw	$-25169, BasicBlockSignatureTracker # imm = 0x9DAF
	movw	$9, RunTimeSignatureAdjuster
	movl	$56, %edi
	callq	Xmalloc
	movw	$-25169, BasicBlockSignatureTracker # imm = 0x9DAF
	movw	$9, RunTimeSignatureAdjuster
	movq	-72(%rbp), %r14         # 8-byte Reload
	movq	%rax, (%r14)
	movq	(%r14), %rax
	movb	$0, (%rax)
	movq	(%r14), %rax
	movl	$1, 8(%rax)
	movq	(%r14), %rax
	movl	$1, 4(%rax)
	movq	(%r14), %rax
	movb	$0, 1(%rax)
	movq	(%rbx), %rax
	movq	(%r14), %rcx
	movq	%rax, 24(%rcx)
	movq	(%r14), %rax
	movb	$0, 3(%rax)
	movq	(%r14), %rax
	movb	$0, 2(%rax)
	movq	(%r14), %rax
	movslq	(%r15), %rcx
	imulq	$24, %rcx, %rcx
	movq	%r13, %rdx
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, 32(%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 40(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 48(%rax)
	movq	(%r14), %rax
	movq	(%rbx), %rcx
	movq	16(%rcx), %rcx
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rdx
	movq	%rax, (%rcx,%rdx,8)
	movl	(%rsi), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	movq	(%r14), %rdi
	movw	$-25169, BasicBlockSignatureTracker # imm = 0x9DAF
	movw	$0, RunTimeSignatureAdjuster
	callq	pn_eval
	movw	$-25169, BasicBlockSignatureTracker # imm = 0x9DAF
	movw	$9, RunTimeSignatureAdjuster
	movq	(%r14), %rdi
	movw	$-25169, BasicBlockSignatureTracker # imm = 0x9DAF
	movw	$0, RunTimeSignatureAdjuster
	callq	set_proof_and_disproof_numbers
	movw	$-25169, BasicBlockSignatureTracker # imm = 0x9DAF
	movw	$9, RunTimeSignatureAdjuster
	movl	(%r15), %esi
	movw	$-25169, BasicBlockSignatureTracker # imm = 0x9DAF
	movw	$5960, RunTimeSignatureAdjuster # imm = 0x1748
	movq	%r13, %rdi
	callq	unmake
	movw	$-25169, BasicBlockSignatureTracker # imm = 0x9DAF
	movw	$5960, RunTimeSignatureAdjuster # imm = 0x1748
	movw	$-25169, BasicBlockSignatureTracker # imm = 0x9DAF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB74_37
.LBB74_35:                              #   in Loop: Header=BB74_29 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-25167, %ax            # imm = 0x9DB1
	jne	.LBB74_63
# %bb.36:                               # %develop_node.split157
                                        #   in Loop: Header=BB74_29 Depth=1
	movl	(%r15), %esi
	movw	$-25167, BasicBlockSignatureTracker # imm = 0x9DB1
	movw	$5974, RunTimeSignatureAdjuster # imm = 0x1756
	movq	%r13, %rdi
	callq	unmake
	movw	$-25167, BasicBlockSignatureTracker # imm = 0x9DB1
	movw	$5974, RunTimeSignatureAdjuster # imm = 0x1756
	movw	$-25167, BasicBlockSignatureTracker # imm = 0x9DB1
	movw	$30, RunTimeSignatureAdjuster
.LBB74_37:                              #   in Loop: Header=BB74_29 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$-25166, %ax            # imm = 0x9DB2
	jne	.LBB74_63
# %bb.38:                               # %develop_node.split159
                                        #   in Loop: Header=BB74_29 Depth=1
	movw	$-25166, BasicBlockSignatureTracker # imm = 0x9DB2
	movw	$0, RunTimeSignatureAdjuster
# %bb.39:                               #   in Loop: Header=BB74_29 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-25156, %ax            # imm = 0x9DBC
	jne	.LBB74_63
# %bb.40:                               # %develop_node.split161
                                        #   in Loop: Header=BB74_29 Depth=1
	movl	(%r15), %eax
	addl	$1, %eax
	movl	%eax, (%r15)
	movw	$-25156, BasicBlockSignatureTracker # imm = 0x9DBC
	movw	$26, RunTimeSignatureAdjuster
	jmp	.LBB74_29
.LBB74_41:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-25153, %ax            # imm = 0x9DBF
	jne	.LBB74_65
# %bb.42:                               # %develop_node.split153
	movq	(%rbx), %rax
	movb	$1, 2(%rax)
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	(%rbx), %rcx
	movb	%al, 1(%rcx)
	movq	(%rbx), %rax
	movzbl	1(%rax), %eax
	movw	$-25153, BasicBlockSignatureTracker # imm = 0x9DBF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB74_61
# %bb.43:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$-25148, %ax            # imm = 0x9DC4
	jne	.LBB74_65
# %bb.44:                               # %develop_node.split163
	movq	(%rbx), %rax
	movb	$0, 2(%rax)
	movq	(%rbx), %rax
	movb	$1, 3(%rax)
	movl	Variant, %eax
	movw	$-25148, BasicBlockSignatureTracker # imm = 0x9DC4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB74_51
# %bb.45:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-25135, %ax            # imm = 0x9DD1
	jne	.LBB74_65
# %bb.46:                               # %develop_node.split167
	movl	Variant, %eax
	movw	$-25135, BasicBlockSignatureTracker # imm = 0x9DD1
	movw	$21, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB74_51
# %bb.47:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2633, %ax              # imm = 0xA49
	cmpw	$-26728, %ax            # imm = 0x9798
	jne	.LBB74_65
# %bb.48:                               # %develop_node.split171
	movw	$-26728, BasicBlockSignatureTracker # imm = 0x9798
	movw	$2633, RunTimeSignatureAdjuster # imm = 0xA49
# %bb.49:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-25129, %ax            # imm = 0x9DD7
	jne	.LBB74_65
# %bb.50:                               # %develop_node.split191
	movq	(%rbx), %rax
	movb	$3, (%rax)
	movw	$-25129, BasicBlockSignatureTracker # imm = 0x9DD7
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB74_59
.LBB74_51:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$-25105, %ax            # imm = 0x9DEF
	jne	.LBB74_65
# %bb.52:                               # %develop_node.split169
	movl	$1, %eax
	xorl	%ecx, %ecx
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	root_to_move, %ecx
	movw	$-25105, BasicBlockSignatureTracker # imm = 0x9DEF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB74_55
# %bb.53:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-25092, %ax            # imm = 0x9DFC
	jne	.LBB74_65
# %bb.54:                               # %develop_node.split175
	movq	(%rbx), %rax
	movb	$1, (%rax)
	movw	$-25092, BasicBlockSignatureTracker # imm = 0x9DFC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB74_57
.LBB74_55:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$972, %ax               # imm = 0x3CC
	cmpw	$-25053, %ax            # imm = 0x9E23
	jne	.LBB74_65
# %bb.56:                               # %develop_node.split177
	movq	(%rbx), %rax
	movb	$0, (%rax)
	movw	$-25053, BasicBlockSignatureTracker # imm = 0x9E23
	movw	$991, RunTimeSignatureAdjuster # imm = 0x3DF
.LBB74_57:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$984, %ax               # imm = 0x3D8
	xorw	%cx, %ax
	cmpw	$-25052, %ax            # imm = 0x9E24
	jne	.LBB74_65
# %bb.58:                               # %develop_node.split179
	movw	$-25052, BasicBlockSignatureTracker # imm = 0x9E24
	movw	$1011, RunTimeSignatureAdjuster # imm = 0x3F3
.LBB74_59:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1022, %ax              # imm = 0x3FE
	xorw	%cx, %ax
	cmpw	$-25047, %ax            # imm = 0x9E29
	jne	.LBB74_65
# %bb.60:                               # %develop_node.split173
	movw	$-25047, BasicBlockSignatureTracker # imm = 0x9E29
	movw	$918, RunTimeSignatureAdjuster # imm = 0x396
.LBB74_61:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$904, %ax               # imm = 0x388
	xorw	%cx, %ax
	cmpw	$-25033, %ax            # imm = 0x9E37
	jne	.LBB74_65
# %bb.62:                               # %develop_node.split165
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	nodecount, %eax
	movl	%eax, nodecount
	movl	(%rcx), %eax
	addl	frees, %eax
	movl	%eax, frees
	movw	$-25033, BasicBlockSignatureTracker # imm = 0x9E37
	movw	$158, RunTimeSignatureAdjuster
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB74_63:                              # %CFerrorHandler.develop_node.loopexit
	jmp	.LBB74_65
.LBB74_64:                              # %CFerrorHandler.develop_node.loopexit1
	jmp	.LBB74_65
.LBB74_65:                              # %CFerrorHandler.develop_node
	callq	FAULT_DETECTED_CFC
.Lfunc_end74:
	.size	develop_node, .Lfunc_end74-develop_node
	.cfi_endproc
                                        # -- End function
	.globl	update_ancestors        # -- Begin function update_ancestors
	.p2align	4, 0x90
	.type	update_ancestors,@function
update_ancestors:                       # @update_ancestors
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$239, %ax
	xorw	%cx, %ax
	cmpw	$-25024, %ax            # imm = 0x9E40
	jne	.LBB75_21
# %bb.1:                                # %update_ancestors.split70
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$239, %ax
	xorw	%cx, %ax
	cmpw	$-25024, %ax            # imm = 0x9E40
	jne	.LBB75_21
# %bb.2:                                # %update_ancestors.split68
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$239, %ax
	xorw	%cx, %ax
	cmpw	$-25024, %ax            # imm = 0x9E40
	jne	.LBB75_21
# %bb.3:                                # %update_ancestors.split66
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$239, %ax
	xorw	%cx, %ax
	cmpw	$-25024, %ax            # imm = 0x9E40
	jne	.LBB75_21
# %bb.4:                                # %update_ancestors.split64
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$239, %ax
	xorw	%cx, %ax
	cmpw	$-25024, %ax            # imm = 0x9E40
	jne	.LBB75_21
# %bb.5:                                # %update_ancestors.split62
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rdi, (%rax)
	movq	(%rax), %rcx
	movq	%rcx, (%rbx)
	movq	(%rax), %rax
	movq	%rax, (%r14)
	movw	$-25024, BasicBlockSignatureTracker # imm = 0x9E40
	movw	$0, RunTimeSignatureAdjuster
.LBB75_6:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-25019, %ax            # imm = 0x9E45
	jne	.LBB75_20
# %bb.7:                                # %update_ancestors.split
                                        #   in Loop: Header=BB75_6 Depth=1
	movq	(%rbx), %rax
	movw	$-25019, BasicBlockSignatureTracker # imm = 0x9E45
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB75_14
# %bb.8:                                #   in Loop: Header=BB75_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32, %ax
	cmpw	$-24987, %ax            # imm = 0x9E65
	jne	.LBB75_20
# %bb.9:                                # %update_ancestors.split50
                                        #   in Loop: Header=BB75_6 Depth=1
	movq	(%rbx), %rdi
	movw	$-24987, BasicBlockSignatureTracker # imm = 0x9E65
	movw	$970, RunTimeSignatureAdjuster # imm = 0x3CA
	callq	set_proof_and_disproof_numbers
	movw	$-24987, BasicBlockSignatureTracker # imm = 0x9E65
	movw	$970, RunTimeSignatureAdjuster # imm = 0x3CA
	movq	(%rbx), %rax
	movq	%rax, (%r14)
	movq	(%rbx), %rax
	movl	36(%rax), %eax
	movw	$-24987, BasicBlockSignatureTracker # imm = 0x9E65
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB75_12
# %bb.10:                               #   in Loop: Header=BB75_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-24983, %ax            # imm = 0x9E69
	jne	.LBB75_20
# %bb.11:                               # %update_ancestors.split54
                                        #   in Loop: Header=BB75_6 Depth=1
	movq	(%rbx), %rdi
	addq	$32, %rdi
	movw	$-24983, BasicBlockSignatureTracker # imm = 0x9E69
	movw	$5262, RunTimeSignatureAdjuster # imm = 0x148E
	xorl	%esi, %esi
	callq	unmake
	movw	$-24983, BasicBlockSignatureTracker # imm = 0x9E69
	movw	$5262, RunTimeSignatureAdjuster # imm = 0x148E
	movw	$-24983, BasicBlockSignatureTracker # imm = 0x9E69
	movw	$12, RunTimeSignatureAdjuster
.LBB75_12:                              #   in Loop: Header=BB75_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-24980, %ax            # imm = 0x9E6C
	jne	.LBB75_20
# %bb.13:                               # %update_ancestors.split56
                                        #   in Loop: Header=BB75_6 Depth=1
	movq	(%rbx), %rax
	movq	24(%rax), %rax
	movq	%rax, (%rbx)
	movw	$-24980, BasicBlockSignatureTracker # imm = 0x9E6C
	movw	$44, RunTimeSignatureAdjuster
	jmp	.LBB75_6
.LBB75_14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$-24973, %ax            # imm = 0x9E73
	jne	.LBB75_21
# %bb.15:                               # %update_ancestors.split52
	movq	(%r14), %rax
	movl	36(%rax), %eax
	movw	$-24973, BasicBlockSignatureTracker # imm = 0x9E73
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB75_18
# %bb.16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-24968, %ax            # imm = 0x9E78
	jne	.LBB75_21
# %bb.17:                               # %update_ancestors.split58
	movq	(%r14), %rdi
	addq	$32, %rdi
	movw	$-24968, BasicBlockSignatureTracker # imm = 0x9E78
	movw	$5320, RunTimeSignatureAdjuster # imm = 0x14C8
	xorl	%esi, %esi
	callq	make
	movw	$-24968, BasicBlockSignatureTracker # imm = 0x9E78
	movw	$5320, RunTimeSignatureAdjuster # imm = 0x14C8
	movw	$-24968, BasicBlockSignatureTracker # imm = 0x9E78
	movw	$11, RunTimeSignatureAdjuster
.LBB75_18:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-24966, %ax            # imm = 0x9E7A
	jne	.LBB75_21
# %bb.19:                               # %update_ancestors.split60
	movw	$-24966, BasicBlockSignatureTracker # imm = 0x9E7A
	movw	$211, RunTimeSignatureAdjuster
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB75_20:                              # %CFerrorHandler.update_ancestors.loopexit
	jmp	.LBB75_21
.LBB75_21:                              # %CFerrorHandler.update_ancestors
	callq	FAULT_DETECTED_CFC
.Lfunc_end75:
	.size	update_ancestors, .Lfunc_end75-update_ancestors
	.cfi_endproc
                                        # -- End function
	.globl	pn2_eval                # -- Begin function pn2_eval
	.p2align	4, 0x90
	.type	pn2_eval,@function
pn2_eval:                               # @pn2_eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movq	%rdi, -8(%rbp)
	movl	$0, nodecount2
	movl	$1, pn2
	movq	-8(%rbp), %rax
	movq	24(%rax), %rax
	movq	%rax, -24(%rbp)
	movq	-8(%rbp), %rax
	movq	$0, 24(%rax)
	movq	-8(%rbp), %rdi
	movw	$-24948, BasicBlockSignatureTracker # imm = 0x9E8C
	movw	$803, RunTimeSignatureAdjuster # imm = 0x323
	callq	pn_eval
	movw	$-24948, BasicBlockSignatureTracker # imm = 0x9E8C
	movw	$803, RunTimeSignatureAdjuster # imm = 0x323
	movq	-8(%rbp), %rdi
	movw	$-24948, BasicBlockSignatureTracker # imm = 0x9E8C
	movw	$803, RunTimeSignatureAdjuster # imm = 0x323
	callq	set_proof_and_disproof_numbers
	movw	$-24948, BasicBlockSignatureTracker # imm = 0x9E8C
	movw	$803, RunTimeSignatureAdjuster # imm = 0x323
	movq	-8(%rbp), %rax
	movq	%rax, -32(%rbp)
	movw	$-24948, BasicBlockSignatureTracker # imm = 0x9E8C
	movw	$0, RunTimeSignatureAdjuster
.LBB76_1:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-24947, %ax            # imm = 0x9E8D
	jne	.LBB76_15
# %bb.2:                                # %pn2_eval.split
                                        #   in Loop: Header=BB76_1 Depth=1
	xorl	%eax, %eax
	movq	-8(%rbp), %rcx
	movl	4(%rcx), %ecx
	movw	$-24947, BasicBlockSignatureTracker # imm = 0x9E8D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB76_9
# %bb.3:                                #   in Loop: Header=BB76_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-24931, %ax            # imm = 0x9E9D
	jne	.LBB76_15
# %bb.4:                                # %pn2_eval.split25
                                        #   in Loop: Header=BB76_1 Depth=1
	xorl	%eax, %eax
	movq	-8(%rbp), %rcx
	movl	8(%rcx), %ecx
	movw	$-24931, BasicBlockSignatureTracker # imm = 0x9E9D
	movw	$16, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB76_9
# %bb.5:                                # %Buffer__
                                        #   in Loop: Header=BB76_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-2249, %ax             # imm = 0xF737
	cmpw	$27050, %ax             # imm = 0x69AA
	jne	.LBB76_15
# %bb.6:                                # %pn2_eval.split29
                                        #   in Loop: Header=BB76_1 Depth=1
	movw	$27050, BasicBlockSignatureTracker # imm = 0x69AA
	movw	$-2249, RunTimeSignatureAdjuster # imm = 0xF737
# %bb.7:                                #   in Loop: Header=BB76_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$-24920, %ax            # imm = 0x9EA8
	jne	.LBB76_15
# %bb.8:                                # %pn2_eval.split35
                                        #   in Loop: Header=BB76_1 Depth=1
	movl	nodecount2, %eax
	cmpl	nodecount, %eax
	setl	%al
	movw	$-24920, BasicBlockSignatureTracker # imm = 0x9EA8
	movw	$37, RunTimeSignatureAdjuster
.LBB76_9:                               #   in Loop: Header=BB76_1 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$36, %cx
	xorw	%dx, %cx
	cmpw	$-24919, %cx            # imm = 0x9EA9
	jne	.LBB76_15
# %bb.10:                               # %pn2_eval.split27
                                        #   in Loop: Header=BB76_1 Depth=1
	movw	$-24919, BasicBlockSignatureTracker # imm = 0x9EA9
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB76_11
	jmp	.LBB76_13
.LBB76_11:                              #   in Loop: Header=BB76_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-24913, %ax            # imm = 0x9EAF
	jne	.LBB76_15
# %bb.12:                               # %pn2_eval.split31
                                        #   in Loop: Header=BB76_1 Depth=1
	movq	-8(%rbp), %rdi
	movw	$-24913, BasicBlockSignatureTracker # imm = 0x9EAF
	movw	$0, RunTimeSignatureAdjuster
	callq	select_most_proving
	movw	$-24913, BasicBlockSignatureTracker # imm = 0x9EAF
	movw	$35, RunTimeSignatureAdjuster
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rdi
	movw	$-24913, BasicBlockSignatureTracker # imm = 0x9EAF
	movw	$-11567, RunTimeSignatureAdjuster # imm = 0xD2D1
	callq	develop_node
	movw	$-24913, BasicBlockSignatureTracker # imm = 0x9EAF
	movw	$-11567, RunTimeSignatureAdjuster # imm = 0xD2D1
	movq	-16(%rbp), %rdi
	movw	$-24913, BasicBlockSignatureTracker # imm = 0x9EAF
	movw	$0, RunTimeSignatureAdjuster
	callq	update_ancestors
	movw	$-24913, BasicBlockSignatureTracker # imm = 0x9EAF
	movw	$-11567, RunTimeSignatureAdjuster # imm = 0xD2D1
	movw	$-24913, BasicBlockSignatureTracker # imm = 0x9EAF
	movw	$35, RunTimeSignatureAdjuster
	jmp	.LBB76_1
.LBB76_13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-24910, %ax            # imm = 0x9EB2
	jne	.LBB76_16
# %bb.14:                               # %pn2_eval.split33
	movq	-8(%rbp), %rax
	movb	$0, 2(%rax)
	movq	-8(%rbp), %rax
	movb	$0, 1(%rax)
	movq	-24(%rbp), %rax
	movq	-8(%rbp), %rcx
	movq	%rax, 24(%rcx)
	movl	$0, pn2
	movw	$-24910, BasicBlockSignatureTracker # imm = 0x9EB2
	movw	$0, RunTimeSignatureAdjuster
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB76_15:                              # %CFerrorHandler.pn2_eval.loopexit
	jmp	.LBB76_16
.LBB76_16:                              # %CFerrorHandler.pn2_eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end76:
	.size	pn2_eval, .Lfunc_end76-pn2_eval
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function proofnumberscan
.LCPI77_0:
	.long	3212836864              # float -1
.LCPI77_1:
	.long	1287568416              # float 1.0E+8
	.text
	.globl	proofnumberscan
	.p2align	4, 0x90
	.type	proofnumberscan,@function
proofnumberscan:                        # @proofnumberscan
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$168, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26443, %ax             # imm = 0x674B
	xorw	%cx, %ax
	cmpw	$-24900, %ax            # imm = 0x9EBC
	jne	.LBB77_210
# %bb.1:                                # %proofnumberscan.split575
	movq	%rsp, %rax
	addq	$-12288, %rax           # imm = 0xD000
	movq	%rax, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-2048, %rax            # imm = 0xF800
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-2048, %rax            # imm = 0xF800
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -208(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -176(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -168(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -136(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -160(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -152(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -184(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -112(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -192(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	movl	$0, (%rcx)
	movq	%rdx, -128(%rbp)        # 8-byte Spill
	movl	$0, (%rdx)
	movw	$-24900, BasicBlockSignatureTracker # imm = 0x9EBC
	movw	$-29700, RunTimeSignatureAdjuster # imm = 0x8BFC
	callq	rtime
	movw	$-24900, BasicBlockSignatureTracker # imm = 0x9EBC
	movw	$-29700, RunTimeSignatureAdjuster # imm = 0x8BFC
	movq	%r15, -200(%rbp)        # 8-byte Spill
	movq	%rax, (%r15)
	movslq	PBSize, %rdi
	movl	$56, %esi
	callq	calloc
	movq	%rax, membuff
	movl	$1, %edi
	movl	$56, %esi
	callq	calloc
	movq	%rbx, -48(%rbp)         # 8-byte Spill
	movq	%rax, (%rbx)
	movq	-120(%rbp), %rdi        # 8-byte Reload
	movq	%r14, %rbx
	movq	-208(%rbp), %r15        # 8-byte Reload
	movq	%r13, %r14
	movw	$-24900, BasicBlockSignatureTracker # imm = 0x9EBC
	movw	$5164, RunTimeSignatureAdjuster # imm = 0x142C
	movq	%rdi, %r13
	callq	gen
	movabsq	$rootlosers, %rdi
	movw	$-24900, BasicBlockSignatureTracker # imm = 0x9EBC
	movw	$5164, RunTimeSignatureAdjuster # imm = 0x142C
	movl	numb_moves, %eax
	movl	%eax, (%rbx)
	movl	$0, alllosers
	xorl	%esi, %esi
	movl	$1200, %edx             # imm = 0x4B0
	callq	memset
	movq	-88(%rbp), %rdi         # 8-byte Reload
	xorl	%esi, %esi
	movl	$2048, %edx             # imm = 0x800
	callq	memset
	movq	dummy, %rax
	movq	%rax, pn_move
	movq	dummy+8, %rax
	movq	%rax, pn_move+8
	movq	dummy+16, %rax
	movq	%rax, pn_move+16
	movl	$0, (%r14)
	movw	$-24900, BasicBlockSignatureTracker # imm = 0x9EBC
	movw	$5171, RunTimeSignatureAdjuster # imm = 0x1433
	callq	in_check
	movw	$-24900, BasicBlockSignatureTracker # imm = 0x9EBC
	movw	$5171, RunTimeSignatureAdjuster # imm = 0x1433
	movl	%eax, (%r12)
	movl	$0, (%r15)
	movw	$-24900, BasicBlockSignatureTracker # imm = 0x9EBC
	movw	$0, RunTimeSignatureAdjuster
.LBB77_2:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$118, %ax
	xorw	%cx, %ax
	cmpw	$-24886, %ax            # imm = 0x9ECA
	jne	.LBB77_209
# %bb.3:                                # %proofnumberscan.split
                                        #   in Loop: Header=BB77_2 Depth=1
	movl	(%r15), %eax
	movl	(%rbx), %ecx
	movw	$-24886, BasicBlockSignatureTracker # imm = 0x9ECA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB77_14
# %bb.4:                                #   in Loop: Header=BB77_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-24883, %ax            # imm = 0x9ECD
	jne	.LBB77_209
# %bb.5:                                # %proofnumberscan.split403
                                        #   in Loop: Header=BB77_2 Depth=1
	movq	%r14, -96(%rbp)         # 8-byte Spill
	movl	(%r15), %esi
	movw	$-24883, BasicBlockSignatureTracker # imm = 0x9ECD
	movw	$5245, RunTimeSignatureAdjuster # imm = 0x147D
	movq	%r13, %r14
	movq	%r14, %rdi
	callq	make
	movw	$-24883, BasicBlockSignatureTracker # imm = 0x9ECD
	movw	$5245, RunTimeSignatureAdjuster # imm = 0x147D
	movl	(%r15), %esi
	movl	(%r12), %edx
	movw	$-24883, BasicBlockSignatureTracker # imm = 0x9ECD
	movw	$5245, RunTimeSignatureAdjuster # imm = 0x147D
	movq	%r14, %rdi
	callq	check_legal
	movw	$-24883, BasicBlockSignatureTracker # imm = 0x9ECD
	movw	$5245, RunTimeSignatureAdjuster # imm = 0x147D
	movw	$-24883, BasicBlockSignatureTracker # imm = 0x9ECD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB77_8
# %bb.6:                                #   in Loop: Header=BB77_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-24865, %ax            # imm = 0x9EDF
	movq	-96(%rbp), %r14         # 8-byte Reload
	jne	.LBB77_209
# %bb.7:                                # %proofnumberscan.split407
                                        #   in Loop: Header=BB77_2 Depth=1
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movslq	(%r15), %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	$1, (%rcx,%rax,4)
	movw	$-24865, BasicBlockSignatureTracker # imm = 0x9EDF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB77_10
.LBB77_8:                               #   in Loop: Header=BB77_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$-24858, %ax            # imm = 0x9EE6
	movq	-96(%rbp), %r14         # 8-byte Reload
	jne	.LBB77_209
# %bb.9:                                # %proofnumberscan.split409
                                        #   in Loop: Header=BB77_2 Depth=1
	movslq	(%r15), %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	$0, (%rcx,%rax,4)
	movw	$-24858, BasicBlockSignatureTracker # imm = 0x9EE6
	movw	$57, RunTimeSignatureAdjuster
.LBB77_10:                              #   in Loop: Header=BB77_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$-24839, %ax            # imm = 0x9EF9
	jne	.LBB77_209
# %bb.11:                               # %proofnumberscan.split411
                                        #   in Loop: Header=BB77_2 Depth=1
	movl	(%r15), %esi
	movw	$-24839, BasicBlockSignatureTracker # imm = 0x9EF9
	movw	$5150, RunTimeSignatureAdjuster # imm = 0x141E
	movq	%r13, %rdi
	callq	unmake
	movw	$-24839, BasicBlockSignatureTracker # imm = 0x9EF9
	movw	$5150, RunTimeSignatureAdjuster # imm = 0x141E
	movw	$-24839, BasicBlockSignatureTracker # imm = 0x9EF9
	movw	$0, RunTimeSignatureAdjuster
# %bb.12:                               #   in Loop: Header=BB77_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-24833, %ax            # imm = 0x9EFF
	jne	.LBB77_209
# %bb.13:                               # %proofnumberscan.split413
                                        #   in Loop: Header=BB77_2 Depth=1
	movl	(%r15), %eax
	addl	$1, %eax
	movl	%eax, (%r15)
	movw	$-24833, BasicBlockSignatureTracker # imm = 0x9EFF
	movw	$67, RunTimeSignatureAdjuster
	jmp	.LBB77_2
.LBB77_14:
	movq	%rbx, %r12
	movw	BasicBlockSignatureTracker, %ax
	xorw	$463, %ax               # imm = 0x1CF
	cmpw	$-24827, %ax            # imm = 0x9F05
	jne	.LBB77_210
# %bb.15:                               # %proofnumberscan.split405
	movl	(%r14), %eax
	movw	$-24827, BasicBlockSignatureTracker # imm = 0x9F05
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_18
# %bb.16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-24820, %ax            # imm = 0x9F0C
	jne	.LBB77_210
# %bb.17:                               # %proofnumberscan.split415
	movw	$-24820, BasicBlockSignatureTracker # imm = 0x9F0C
	movw	$0, RunTimeSignatureAdjuster
	callq	Xfree
	movw	$-24820, BasicBlockSignatureTracker # imm = 0x9F0C
	movw	$0, RunTimeSignatureAdjuster
	movq	membuff, %rdi
	callq	free
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	callq	free
	movw	$-24820, BasicBlockSignatureTracker # imm = 0x9F0C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB77_202
.LBB77_18:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-24818, %ax            # imm = 0x9F0E
	jne	.LBB77_210
# %bb.19:                               # %proofnumberscan.split417
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	-144(%rbp), %rdx        # 8-byte Reload
	movl	$0, (%rdx)
	movl	$1, nodecount
	movl	$0, iters
	movl	$0, maxply
	movl	$0, forwards
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movl	$0, (%rdx)
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movl	$0, (%rdx)
	movl	hash, %edx
	movl	move_number, %esi
	addl	ply, %esi
	subl	$1, %esi
	movslq	%esi, %rsi
	movl	%edx, hash_history(,%rsi,4)
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	%eax, root_to_move
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movq	(%rbx), %rdi
	movw	$-24818, BasicBlockSignatureTracker # imm = 0x9F0E
	movw	$673, RunTimeSignatureAdjuster # imm = 0x2A1
	callq	pn_eval
	movw	$-24818, BasicBlockSignatureTracker # imm = 0x9F0E
	movw	$673, RunTimeSignatureAdjuster # imm = 0x2A1
	movq	(%rbx), %rax
	movzbl	(%rax), %eax
	movw	$-24818, BasicBlockSignatureTracker # imm = 0x9F0E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB77_22
# %bb.20:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-24783, %ax            # imm = 0x9F31
	jne	.LBB77_210
# %bb.21:                               # %proofnumberscan.split423
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movzbl	(%rax), %eax
	movw	$-24783, BasicBlockSignatureTracker # imm = 0x9F31
	movw	$63, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_24
.LBB77_22:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$54, %ax
	xorw	%cx, %ax
	cmpw	$-24776, %ax            # imm = 0x9F38
	jne	.LBB77_210
# %bb.23:                               # %proofnumberscan.split421
	movw	$-24776, BasicBlockSignatureTracker # imm = 0x9F38
	movw	$52, RunTimeSignatureAdjuster
	callq	Xfree
	movw	$-24776, BasicBlockSignatureTracker # imm = 0x9F38
	movw	$52, RunTimeSignatureAdjuster
	movq	membuff, %rdi
	callq	free
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	callq	free
	movq	dummy, %rax
	movq	%rax, pn_move
	movq	dummy+8, %rax
	movq	%rax, pn_move+8
	movq	dummy+16, %rax
	movq	%rax, pn_move+16
	movw	$-24776, BasicBlockSignatureTracker # imm = 0x9F38
	movw	$52, RunTimeSignatureAdjuster
	jmp	.LBB77_202
.LBB77_24:                              # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31759, %ax             # imm = 0x7C0F
	cmpw	$-7362, %ax             # imm = 0xE33E
	jne	.LBB77_210
# %bb.25:                               # %proofnumberscan.split425
	movw	$-7362, BasicBlockSignatureTracker # imm = 0xE33E
	movw	$31759, RunTimeSignatureAdjuster # imm = 0x7C0F
# %bb.26:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-24775, %ax            # imm = 0x9F39
	jne	.LBB77_210
# %bb.27:                               # %proofnumberscan.split577
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movw	$-24775, BasicBlockSignatureTracker # imm = 0x9F39
	movw	$662, RunTimeSignatureAdjuster # imm = 0x296
	callq	set_proof_and_disproof_numbers
	movw	$-24775, BasicBlockSignatureTracker # imm = 0x9F39
	movw	$662, RunTimeSignatureAdjuster # imm = 0x296
	movw	$-24775, BasicBlockSignatureTracker # imm = 0x9F39
	movw	$0, RunTimeSignatureAdjuster
.LBB77_28:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB77_50 Depth 2
                                        #     Child Loop BB77_80 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$-24761, %ax            # imm = 0x9F47
	jne	.LBB77_208
# %bb.29:                               # %proofnumberscan.split427
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$-24761, BasicBlockSignatureTracker # imm = 0x9F47
	movw	$-30201, RunTimeSignatureAdjuster # imm = 0x8A07
	callq	rtime
	movw	$-24761, BasicBlockSignatureTracker # imm = 0x9F47
	movw	$-30201, RunTimeSignatureAdjuster # imm = 0x8A07
	movq	-200(%rbp), %rcx        # 8-byte Reload
	movq	(%rcx), %rsi
	movw	$-24761, BasicBlockSignatureTracker # imm = 0x9F47
	movw	$0, RunTimeSignatureAdjuster
	movq	%rax, %rdi
	callq	rdifftime
	xorl	%ecx, %ecx
	movw	$-24761, BasicBlockSignatureTracker # imm = 0x9F47
	movw	$-30201, RunTimeSignatureAdjuster # imm = 0x8A07
	movl	pn_time, %edx
	movw	$-24761, BasicBlockSignatureTracker # imm = 0x9F47
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jge	.LBB77_44
# %bb.30:                               #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-24758, %ax            # imm = 0x9F4A
	jne	.LBB77_208
# %bb.31:                               # %proofnumberscan.split429
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$-24758, BasicBlockSignatureTracker # imm = 0x9F4A
	movw	$-29804, RunTimeSignatureAdjuster # imm = 0x8B94
	callq	interrupt
	xorl	%ecx, %ecx
	movw	$-24758, BasicBlockSignatureTracker # imm = 0x9F4A
	movw	$-29804, RunTimeSignatureAdjuster # imm = 0x8B94
	movw	$-24758, BasicBlockSignatureTracker # imm = 0x9F4A
	movw	$13, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_44
# %bb.32:                               # %Buffer__1
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25511, %ax             # imm = 0x63A7
	cmpw	$-787, %ax              # imm = 0xFCED
	jne	.LBB77_208
# %bb.33:                               # %proofnumberscan.split433
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	%r15, %rdi
	movq	%r14, %rsi
	movw	$-787, BasicBlockSignatureTracker # imm = 0xFCED
	movw	$25511, RunTimeSignatureAdjuster # imm = 0x63A7
# %bb.34:                               #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$-24746, %ax            # imm = 0x9F56
	movq	%rsi, %r14
	movq	%rdi, %r15
	jne	.LBB77_208
# %bb.35:                               # %proofnumberscan.split579
                                        #   in Loop: Header=BB77_28 Depth=1
	xorl	%ecx, %ecx
	movl	bufftop, %eax
	movl	PBSize, %edx
	subl	$10000, %edx            # imm = 0x2710
	movslq	%edx, %rdx
	imulq	$56, %rdx, %rdx
	movw	$-24746, BasicBlockSignatureTracker # imm = 0x9F56
	movw	$17, RunTimeSignatureAdjuster
	cmpq	%rdx, %rax
	jae	.LBB77_44
# %bb.36:                               # %Buffer__2
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-18421, %ax            # imm = 0xB80B
	cmpw	$10077, %ax             # imm = 0x275D
	jne	.LBB77_208
# %bb.37:                               # %proofnumberscan.split435
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$10077, BasicBlockSignatureTracker # imm = 0x275D
	movw	$-18421, RunTimeSignatureAdjuster # imm = 0xB80B
# %bb.38:                               #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$62, %ax
	xorw	%cx, %ax
	cmpw	$-24728, %ax            # imm = 0x9F68
	movq	%rsi, %r14
	movq	%rdi, %r15
	jne	.LBB77_208
# %bb.39:                               # %proofnumberscan.split581
                                        #   in Loop: Header=BB77_28 Depth=1
	xorl	%ecx, %ecx
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movl	4(%rax), %eax
	movw	$-24728, BasicBlockSignatureTracker # imm = 0x9F68
	movw	$47, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB77_44
# %bb.40:                               # %Buffer__3
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-11439, %ax            # imm = 0xD351
	cmpw	$19513, %ax             # imm = 0x4C39
	jne	.LBB77_208
# %bb.41:                               # %proofnumberscan.split437
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$19513, BasicBlockSignatureTracker # imm = 0x4C39
	movw	$-11439, RunTimeSignatureAdjuster # imm = 0xD351
# %bb.42:                               #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-24725, %ax            # imm = 0x9F6B
	movq	%rsi, %r14
	movq	%rdi, %r15
	jne	.LBB77_208
# %bb.43:                               # %proofnumberscan.split583
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	cmpl	$0, 8(%rax)
	setne	%cl
	movw	$-24725, BasicBlockSignatureTracker # imm = 0x9F6B
	movw	$44, RunTimeSignatureAdjuster
.LBB77_44:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$53, %ax
	xorw	%dx, %ax
	cmpw	$-24718, %ax            # imm = 0x9F72
	jne	.LBB77_208
# %bb.45:                               # %proofnumberscan.split431
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$-24718, BasicBlockSignatureTracker # imm = 0x9F72
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %cl
	jne	.LBB77_46
	jmp	.LBB77_133
.LBB77_46:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-24708, %ax            # imm = 0x9F7C
	jne	.LBB77_208
# %bb.47:                               # %proofnumberscan.split439
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	%r14, -96(%rbp)         # 8-byte Spill
	movl	$100, %ecx
	movl	iters, %eax
	addl	$1, %eax
	movl	%eax, iters
	movl	nodecount, %eax
	movq	-136(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movl	nodecount, %eax
	cltd
	idivl	%ecx
	movw	$-24708, BasicBlockSignatureTracker # imm = 0x9F7C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$66, %edx
	jge	.LBB77_78
# %bb.48:                               #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$248, %ax
	cmpw	$-24700, %ax            # imm = 0x9F84
	movq	%r15, %rbx
	jne	.LBB77_208
# %bb.49:                               # %proofnumberscan.split443
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	-168(%rbp), %rcx        # 8-byte Reload
	movq	%rax, (%rcx)
	movq	(%rcx), %rdi
	movw	$-24700, BasicBlockSignatureTracker # imm = 0x9F84
	movw	$299, RunTimeSignatureAdjuster # imm = 0x12B
	callq	select_most_proving
	movw	$-24700, BasicBlockSignatureTracker # imm = 0x9F84
	movw	$299, RunTimeSignatureAdjuster # imm = 0x12B
	movq	-176(%rbp), %r13        # 8-byte Reload
	movq	%rax, (%r13)
	movq	(%r13), %rdi
	movw	$-24700, BasicBlockSignatureTracker # imm = 0x9F84
	movw	$-11270, RunTimeSignatureAdjuster # imm = 0xD3FA
	callq	develop_node
	movw	$-24700, BasicBlockSignatureTracker # imm = 0x9F84
	movw	$-11270, RunTimeSignatureAdjuster # imm = 0xD3FA
	movq	(%r13), %rdi
	movw	$-24700, BasicBlockSignatureTracker # imm = 0x9F84
	movw	$299, RunTimeSignatureAdjuster # imm = 0x12B
	callq	update_ancestors
	movw	$-24700, BasicBlockSignatureTracker # imm = 0x9F84
	movw	$299, RunTimeSignatureAdjuster # imm = 0x12B
	movl	$0, (%rbx)
	movw	$-24700, BasicBlockSignatureTracker # imm = 0x9F84
	movw	$0, RunTimeSignatureAdjuster
.LBB77_50:                              #   Parent Loop BB77_28 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-24699, %ax            # imm = 0x9F85
	jne	.LBB77_206
# %bb.51:                               # %proofnumberscan.split447
                                        #   in Loop: Header=BB77_50 Depth=2
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rax
	movq	16(%rax), %rax
	movslq	(%r15), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	movq	(%rdx), %rcx
	movl	4(%rcx), %ecx
	movw	$-24699, BasicBlockSignatureTracker # imm = 0x9F85
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB77_54
# %bb.52:                               #   in Loop: Header=BB77_50 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-24686, %ax            # imm = 0x9F92
	jne	.LBB77_206
# %bb.53:                               # %proofnumberscan.split449
                                        #   in Loop: Header=BB77_50 Depth=2
	movq	%r15, %rcx
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-24686, BasicBlockSignatureTracker # imm = 0x9F92
	movw	$22, RunTimeSignatureAdjuster
	jmp	.LBB77_50
.LBB77_54:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-24679, %ax            # imm = 0x9F99
	movq	%r15, %rcx
	jne	.LBB77_208
# %bb.55:                               # %proofnumberscan.split451
                                        #   in Loop: Header=BB77_28 Depth=1
	movl	nodecount, %eax
	movq	-136(%rbp), %rdx        # 8-byte Reload
	subl	(%rdx), %eax
	movslq	(%rcx), %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	addl	(%rdx,%rcx,4), %eax
	movl	%eax, (%rdx,%rcx,4)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movl	4(%rax), %eax
	movw	$-24679, BasicBlockSignatureTracker # imm = 0x9F99
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_66
# %bb.56:                               #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$-24652, %ax            # imm = 0x9FB4
	jne	.LBB77_208
# %bb.57:                               # %proofnumberscan.split453
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movl	8(%rax), %eax
	movw	$-24652, BasicBlockSignatureTracker # imm = 0x9FB4
	movw	$45, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jne	.LBB77_66
# %bb.58:                               # %Buffer__4
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23235, %ax             # imm = 0x5AC3
	cmpw	$-14985, %ax            # imm = 0xC577
	jne	.LBB77_208
# %bb.59:                               # %proofnumberscan.split457
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$-14985, BasicBlockSignatureTracker # imm = 0xC577
	movw	$23235, RunTimeSignatureAdjuster # imm = 0x5AC3
# %bb.60:                               #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-24648, %ax            # imm = 0x9FB8
	jne	.LBB77_208
# %bb.61:                               # %proofnumberscan.split585
                                        #   in Loop: Header=BB77_28 Depth=1
	movl	$1, forcedwin
	movl	kibitzed, %eax
	movw	$-24648, BasicBlockSignatureTracker # imm = 0x9FB8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_64
# %bb.62:                               #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-24642, %ax            # imm = 0x9FBE
	jne	.LBB77_208
# %bb.63:                               # %proofnumberscan.split461
                                        #   in Loop: Header=BB77_28 Depth=1
	movabsq	$.L.str.84, %rdi
	movl	$1, kibitzed
	movb	$0, %al
	callq	printf
	movw	$-24642, BasicBlockSignatureTracker # imm = 0x9FBE
	movw	$6, RunTimeSignatureAdjuster
.LBB77_64:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$116, %ax
	xorw	%cx, %ax
	cmpw	$-24628, %ax            # imm = 0x9FCC
	movq	%r15, %rcx
	jne	.LBB77_208
# %bb.65:                               # %proofnumberscan.split459
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	32(%rax), %rcx
	movq	%rcx, pn_move
	movq	40(%rax), %rcx
	movq	%rcx, pn_move+8
	movq	48(%rax), %rax
	movq	%rax, pn_move+16
	movw	$-24628, BasicBlockSignatureTracker # imm = 0x9FCC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB77_76
.LBB77_66:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$72, %ax
	xorw	%cx, %ax
	cmpw	$-24623, %ax            # imm = 0x9FD1
	jne	.LBB77_208
# %bb.67:                               # %proofnumberscan.split455
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movl	8(%rax), %eax
	movw	$-24623, BasicBlockSignatureTracker # imm = 0x9FD1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_74
# %bb.68:                               #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$-24582, %ax            # imm = 0x9FFA
	jne	.LBB77_208
# %bb.69:                               # %proofnumberscan.split465
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movl	4(%rax), %eax
	movw	$-24582, BasicBlockSignatureTracker # imm = 0x9FFA
	movw	$43, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jne	.LBB77_74
# %bb.70:                               # %Buffer__5
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-26959, %ax            # imm = 0x96B1
	cmpw	$2379, %ax              # imm = 0x94B
	jne	.LBB77_208
# %bb.71:                               # %proofnumberscan.split469
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$2379, BasicBlockSignatureTracker # imm = 0x94B
	movw	$-26959, RunTimeSignatureAdjuster # imm = 0x96B1
# %bb.72:                               #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16382, %ax             # imm = 0x3FFE
	xorw	%cx, %ax
	cmpw	$-24572, %ax            # imm = 0xA004
	jne	.LBB77_208
# %bb.73:                               # %proofnumberscan.split587
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	dummy, %rax
	movq	%rax, pn_move
	movq	dummy+8, %rax
	movq	%rax, pn_move+8
	movq	dummy+16, %rax
	movq	%rax, pn_move+16
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-24572, BasicBlockSignatureTracker # imm = 0xA004
	movw	$16341, RunTimeSignatureAdjuster # imm = 0x3FD5
.LBB77_74:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16326, %ax             # imm = 0x3FC6
	xorw	%cx, %ax
	cmpw	$-24553, %ax            # imm = 0xA017
	jne	.LBB77_208
# %bb.75:                               # %proofnumberscan.split467
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$-24553, BasicBlockSignatureTracker # imm = 0xA017
	movw	$16347, RunTimeSignatureAdjuster # imm = 0x3FDB
.LBB77_76:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16361, %ax             # imm = 0x3FE9
	xorw	%cx, %ax
	cmpw	$-24539, %ax            # imm = 0xA025
	jne	.LBB77_208
# %bb.77:                               # %proofnumberscan.split463
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$-24539, BasicBlockSignatureTracker # imm = 0xA025
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB77_131
.LBB77_78:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16214, %ax             # imm = 0x3F56
	cmpw	$-24534, %ax            # imm = 0xA02A
	movq	%r15, %rcx
	jne	.LBB77_208
# %bb.79:                               # %proofnumberscan.split445
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movl	(%rdx), %eax
	addl	$1, %eax
	movl	%eax, (%rdx)
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$100000000, (%rax)      # imm = 0x5F5E100
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movl	$0, (%rcx)
	movw	$-24534, BasicBlockSignatureTracker # imm = 0xA02A
	movw	$0, RunTimeSignatureAdjuster
.LBB77_80:                              #   Parent Loop BB77_28 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-24530, %ax            # imm = 0xA02E
	jne	.LBB77_207
# %bb.81:                               # %proofnumberscan.split473
                                        #   in Loop: Header=BB77_80 Depth=2
	movl	(%r15), %eax
	movl	(%r12), %ecx
	movw	$-24530, BasicBlockSignatureTracker # imm = 0xA02E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB77_102
# %bb.82:                               #   in Loop: Header=BB77_80 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-24524, %ax            # imm = 0xA034
	jne	.LBB77_207
# %bb.83:                               # %proofnumberscan.split475
                                        #   in Loop: Header=BB77_80 Depth=2
	movslq	(%r15), %rax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-24524, BasicBlockSignatureTracker # imm = 0xA034
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB77_94
# %bb.84:                               #   in Loop: Header=BB77_80 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-24523, %ax            # imm = 0xA035
	jne	.LBB77_207
# %bb.85:                               # %proofnumberscan.split479
                                        #   in Loop: Header=BB77_80 Depth=2
	movslq	(%r15), %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$-24523, BasicBlockSignatureTracker # imm = 0xA035
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB77_94
# %bb.86:                               # %Buffer__6
                                        #   in Loop: Header=BB77_80 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9407, %ax              # imm = 0x24BF
	cmpw	$-31606, %ax            # imm = 0x848A
	jne	.LBB77_207
# %bb.87:                               # %proofnumberscan.split483
                                        #   in Loop: Header=BB77_80 Depth=2
	movw	$-31606, BasicBlockSignatureTracker # imm = 0x848A
	movw	$9407, RunTimeSignatureAdjuster # imm = 0x24BF
# %bb.88:                               #   in Loop: Header=BB77_80 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$121, %ax
	xorw	%cx, %ax
	cmpw	$-24500, %ax            # imm = 0xA04C
	jne	.LBB77_207
# %bb.89:                               # %proofnumberscan.split589
                                        #   in Loop: Header=BB77_80 Depth=2
	movslq	(%r15), %rax
	movl	rootlosers(,%rax,4), %eax
	movw	$-24500, BasicBlockSignatureTracker # imm = 0xA04C
	movw	$120, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_94
# %bb.90:                               # %Buffer__7
                                        #   in Loop: Header=BB77_80 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-28279, %ax            # imm = 0x9189
	cmpw	$12741, %ax             # imm = 0x31C5
	jne	.LBB77_207
# %bb.91:                               # %proofnumberscan.split485
                                        #   in Loop: Header=BB77_80 Depth=2
	movw	$12741, BasicBlockSignatureTracker # imm = 0x31C5
	movw	$-28279, RunTimeSignatureAdjuster # imm = 0x9189
# %bb.92:                               #   in Loop: Header=BB77_80 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-24488, %ax            # imm = 0xA058
	jne	.LBB77_207
# %bb.93:                               # %proofnumberscan.split591
                                        #   in Loop: Header=BB77_80 Depth=2
	movq	%r15, %rcx
	movslq	(%rcx), %rax
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rax,4), %eax
	movq	-104(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movl	(%rcx), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-24488, BasicBlockSignatureTracker # imm = 0xA058
	movw	$108, RunTimeSignatureAdjuster
.LBB77_94:                              #   in Loop: Header=BB77_80 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$84, %ax
	xorw	%cx, %ax
	cmpw	$-24480, %ax            # imm = 0xA060
	jne	.LBB77_207
# %bb.95:                               # %proofnumberscan.split481
                                        #   in Loop: Header=BB77_80 Depth=2
	movslq	(%r15), %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$-24480, BasicBlockSignatureTracker # imm = 0xA060
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB77_98
# %bb.96:                               #   in Loop: Header=BB77_80 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-24474, %ax            # imm = 0xA066
	jne	.LBB77_207
# %bb.97:                               # %proofnumberscan.split487
                                        #   in Loop: Header=BB77_80 Depth=2
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-24474, BasicBlockSignatureTracker # imm = 0xA066
	movw	$6, RunTimeSignatureAdjuster
.LBB77_98:                              #   in Loop: Header=BB77_80 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-24465, %ax            # imm = 0xA06F
	jne	.LBB77_207
# %bb.99:                               # %proofnumberscan.split489
                                        #   in Loop: Header=BB77_80 Depth=2
	movw	$-24465, BasicBlockSignatureTracker # imm = 0xA06F
	movw	$0, RunTimeSignatureAdjuster
# %bb.100:                              #   in Loop: Header=BB77_80 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-24454, %ax            # imm = 0xA07A
	jne	.LBB77_207
# %bb.101:                              # %proofnumberscan.split491
                                        #   in Loop: Header=BB77_80 Depth=2
	movq	%r15, %rcx
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-24454, BasicBlockSignatureTracker # imm = 0xA07A
	movw	$80, RunTimeSignatureAdjuster
	jmp	.LBB77_80
.LBB77_102:                             #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$85, %ax
	cmpw	$-24453, %ax            # imm = 0xA07B
	jne	.LBB77_208
# %bb.103:                              # %proofnumberscan.split477
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-24453, BasicBlockSignatureTracker # imm = 0xA07B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jne	.LBB77_107
# %bb.104:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-24450, %ax            # imm = 0xA07E
	jne	.LBB77_208
# %bb.105:                              # %proofnumberscan.split493
                                        #   in Loop: Header=BB77_28 Depth=1
	movl	nodecount, %eax
	addl	$30, %eax
	movl	%eax, nodecount
	movw	$-24450, BasicBlockSignatureTracker # imm = 0xA07E
	movw	$16199, RunTimeSignatureAdjuster # imm = 0x3F47
.LBB77_106:                             # %.backedge
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-96(%rbp), %r14         # 8-byte Reload
	jmp	.LBB77_28
.LBB77_107:                             #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$247, %ax
	cmpw	$-24436, %ax            # imm = 0xA08C
	movq	-120(%rbp), %rdi        # 8-byte Reload
	jne	.LBB77_208
# %bb.108:                              # %proofnumberscan.split495
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-128(%rbp), %r14        # 8-byte Reload
	movl	(%r14), %esi
	movw	$-24436, BasicBlockSignatureTracker # imm = 0xA08C
	movw	$10812, RunTimeSignatureAdjuster # imm = 0x2A3C
	callq	make
	movw	$-24436, BasicBlockSignatureTracker # imm = 0xA08C
	movw	$10812, RunTimeSignatureAdjuster # imm = 0x2A3C
	movq	-48(%rbp), %r13         # 8-byte Reload
	movq	(%r13), %rax
	movq	16(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	-168(%rbp), %rcx        # 8-byte Reload
	movq	%rax, (%rcx)
	movq	(%rcx), %rdi
	movw	$-24436, BasicBlockSignatureTracker # imm = 0xA08C
	movw	$15907, RunTimeSignatureAdjuster # imm = 0x3E23
	callq	select_most_proving
	movw	$-24436, BasicBlockSignatureTracker # imm = 0xA08C
	movw	$15907, RunTimeSignatureAdjuster # imm = 0x3E23
	movq	-176(%rbp), %rbx        # 8-byte Reload
	movq	%rax, (%rbx)
	movq	(%rbx), %rdi
	movw	$-24436, BasicBlockSignatureTracker # imm = 0xA08C
	movw	$-4878, RunTimeSignatureAdjuster # imm = 0xECF2
	callq	develop_node
	movw	$-24436, BasicBlockSignatureTracker # imm = 0xA08C
	movw	$-4878, RunTimeSignatureAdjuster # imm = 0xECF2
	movq	(%rbx), %rdi
	movw	$-24436, BasicBlockSignatureTracker # imm = 0xA08C
	movw	$15907, RunTimeSignatureAdjuster # imm = 0x3E23
	callq	update_ancestors
	movw	$-24436, BasicBlockSignatureTracker # imm = 0xA08C
	movw	$15907, RunTimeSignatureAdjuster # imm = 0x3E23
	movl	nodecount, %eax
	movq	-136(%rbp), %rcx        # 8-byte Reload
	subl	(%rcx), %eax
	movslq	(%r14), %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	addl	(%rdx,%rcx,4), %eax
	movl	%eax, (%rdx,%rcx,4)
	movq	(%r13), %rax
	movq	16(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	movw	$-24436, BasicBlockSignatureTracker # imm = 0xA08C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_119
# %bb.109:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-24434, %ax            # imm = 0xA08E
	jne	.LBB77_208
# %bb.110:                              # %proofnumberscan.split497
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	movw	$-24434, BasicBlockSignatureTracker # imm = 0xA08E
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jne	.LBB77_119
# %bb.111:                              # %Buffer__8
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1241, %ax             # imm = 0xFB27
	cmpw	$23465, %ax             # imm = 0x5BA9
	jne	.LBB77_208
# %bb.112:                              # %proofnumberscan.split501
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$23465, BasicBlockSignatureTracker # imm = 0x5BA9
	movw	$-1241, RunTimeSignatureAdjuster # imm = 0xFB27
# %bb.113:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-24425, %ax            # imm = 0xA097
	jne	.LBB77_208
# %bb.114:                              # %proofnumberscan.split593
                                        #   in Loop: Header=BB77_28 Depth=1
	movl	$1, forcedwin
	movl	kibitzed, %eax
	movw	$-24425, BasicBlockSignatureTracker # imm = 0xA097
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_117
# %bb.115:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-24423, %ax            # imm = 0xA099
	jne	.LBB77_208
# %bb.116:                              # %proofnumberscan.split505
                                        #   in Loop: Header=BB77_28 Depth=1
	movabsq	$.L.str.1.85, %rdi
	movl	$1, kibitzed
	movb	$0, %al
	callq	printf
	movw	$-24423, BasicBlockSignatureTracker # imm = 0xA099
	movw	$14, RunTimeSignatureAdjuster
.LBB77_117:                             #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$-24416, %ax            # imm = 0xA0A0
	jne	.LBB77_208
# %bb.118:                              # %proofnumberscan.split503
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	32(%rax), %rcx
	movq	%rcx, pn_move
	movq	40(%rax), %rcx
	movq	%rcx, pn_move+8
	movq	48(%rax), %rax
	movq	%rax, pn_move+16
	movw	$-24416, BasicBlockSignatureTracker # imm = 0xA0A0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB77_129
.LBB77_119:                             #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$-24401, %ax            # imm = 0xA0AF
	jne	.LBB77_208
# %bb.120:                              # %proofnumberscan.split499
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	movw	$-24401, BasicBlockSignatureTracker # imm = 0xA0AF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_127
# %bb.121:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-24399, %ax            # imm = 0xA0B1
	jne	.LBB77_208
# %bb.122:                              # %proofnumberscan.split509
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	movw	$-24399, BasicBlockSignatureTracker # imm = 0xA0B1
	movw	$30, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jne	.LBB77_127
# %bb.123:                              # %Buffer__9
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23635, %ax             # imm = 0x5C53
	cmpw	$-798, %ax              # imm = 0xFCE2
	jne	.LBB77_208
# %bb.124:                              # %proofnumberscan.split513
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$-798, BasicBlockSignatureTracker # imm = 0xFCE2
	movw	$23635, RunTimeSignatureAdjuster # imm = 0x5C53
# %bb.125:                              #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$115, %ax
	xorw	%cx, %ax
	cmpw	$-24382, %ax            # imm = 0xA0C2
	jne	.LBB77_208
# %bb.126:                              # %proofnumberscan.split595
                                        #   in Loop: Header=BB77_28 Depth=1
	movq	-128(%rbp), %rax        # 8-byte Reload
	movslq	(%rax), %rax
	movl	$1, rootlosers(,%rax,4)
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-24382, BasicBlockSignatureTracker # imm = 0xA0C2
	movw	$109, RunTimeSignatureAdjuster
.LBB77_127:                             #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$127, %ax
	xorw	%cx, %ax
	cmpw	$-24368, %ax            # imm = 0xA0D0
	jne	.LBB77_208
# %bb.128:                              # %proofnumberscan.split511
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$-24368, BasicBlockSignatureTracker # imm = 0xA0D0
	movw	$112, RunTimeSignatureAdjuster
.LBB77_129:                             #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$113, %ax
	xorw	%cx, %ax
	cmpw	$-24367, %ax            # imm = 0xA0D1
	jne	.LBB77_208
# %bb.130:                              # %proofnumberscan.split507
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$-24367, BasicBlockSignatureTracker # imm = 0xA0D1
	movw	$244, RunTimeSignatureAdjuster
.LBB77_131:                             #   in Loop: Header=BB77_28 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$241, %ax
	xorw	%cx, %ax
	cmpw	$-24364, %ax            # imm = 0xA0D4
	jne	.LBB77_208
# %bb.132:                              # %proofnumberscan.split471
                                        #   in Loop: Header=BB77_28 Depth=1
	movw	$-24364, BasicBlockSignatureTracker # imm = 0xA0D4
	movw	$16365, RunTimeSignatureAdjuster # imm = 0x3FED
	jmp	.LBB77_106
.LBB77_133:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16287, %ax             # imm = 0x3F9F
	cmpw	$-24339, %ax            # imm = 0xA0ED
	jne	.LBB77_210
# %bb.134:                              # %proofnumberscan.split441
	movq	%r14, %r13
	movss	.LCPI77_0(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movq	-112(%rbp), %rax        # 8-byte Reload
	movss	%xmm0, (%rax)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movb	2(%rax), %al
	movw	$-24339, BasicBlockSignatureTracker # imm = 0xA0ED
	movw	$0, RunTimeSignatureAdjuster
	cmpb	$0, %al
	je	.LBB77_167
# %bb.135:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$487, %ax               # imm = 0x1E7
	cmpw	$-24310, %ax            # imm = 0xA10A
	movq	%r15, %rax
	jne	.LBB77_210
# %bb.136:                              # %proofnumberscan.split515
	movl	$0, (%rax)
	movw	$-24310, BasicBlockSignatureTracker # imm = 0xA10A
	movw	$0, RunTimeSignatureAdjuster
.LBB77_137:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-24308, %ax            # imm = 0xA10C
	jne	.LBB77_205
# %bb.138:                              # %proofnumberscan.split519
                                        #   in Loop: Header=BB77_137 Depth=1
	movl	(%r15), %eax
	movl	(%r12), %ecx
	movw	$-24308, BasicBlockSignatureTracker # imm = 0xA10C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB77_165
# %bb.139:                              #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-24302, %ax            # imm = 0xA112
	jne	.LBB77_205
# %bb.140:                              # %proofnumberscan.split521
                                        #   in Loop: Header=BB77_137 Depth=1
	movslq	(%r15), %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$-24302, BasicBlockSignatureTracker # imm = 0xA112
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB77_161
# %bb.141:                              #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-24299, %ax            # imm = 0xA115
	jne	.LBB77_205
# %bb.142:                              # %proofnumberscan.split525
                                        #   in Loop: Header=BB77_137 Depth=1
	movslq	(%r15), %rax
	imulq	$24, %rax, %rax
	movq	-120(%rbp), %rcx        # 8-byte Reload
	addq	%rax, %rcx
	movw	$-24299, BasicBlockSignatureTracker # imm = 0xA115
	movw	$-19132, RunTimeSignatureAdjuster # imm = 0xB544
	subq	$32, %rsp
	movq	(%rcx), %rax
	movq	%rax, (%rsp)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsp)
	movq	-184(%rbp), %rdi        # 8-byte Reload
	callq	comp_to_san
	addq	$32, %rsp
	movw	$-24299, BasicBlockSignatureTracker # imm = 0xA115
	movw	$-19132, RunTimeSignatureAdjuster # imm = 0xB544
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	movw	$-24299, BasicBlockSignatureTracker # imm = 0xA115
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB77_157
# %bb.143:                              #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-24280, %ax            # imm = 0xA128
	jne	.LBB77_205
# %bb.144:                              # %proofnumberscan.split529
                                        #   in Loop: Header=BB77_137 Depth=1
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rax
	movq	16(%rax), %rax
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	cvtsi2ssl	%eax, %xmm0
	movq	(%rdx), %rax
	movq	16(%rax), %rax
	movslq	(%rsi), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	cvtsi2ssl	%eax, %xmm1
	divss	%xmm1, %xmm0
	movq	-112(%rbp), %rax        # 8-byte Reload
	movss	(%rax), %xmm1           # xmm1 = mem[0],zero,zero,zero
	movw	$-24280, BasicBlockSignatureTracker # imm = 0xA128
	movw	$0, RunTimeSignatureAdjuster
	ucomiss	%xmm1, %xmm0
	jbe	.LBB77_147
# %bb.145:                              #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-24271, %ax            # imm = 0xA131
	jne	.LBB77_205
# %bb.146:                              # %proofnumberscan.split533
                                        #   in Loop: Header=BB77_137 Depth=1
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rax
	movq	16(%rax), %rax
	movq	-56(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	cvtsi2ssl	%eax, %xmm0
	movq	(%rdx), %rax
	movq	16(%rax), %rax
	movslq	(%rsi), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	cvtsi2ssl	%eax, %xmm1
	divss	%xmm1, %xmm0
	movq	-112(%rbp), %rax        # 8-byte Reload
	movss	%xmm0, (%rax)
	movq	(%rdx), %rax
	movq	16(%rax), %rax
	movslq	(%rsi), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	32(%rax), %rcx
	movq	%rcx, pn_move
	movq	40(%rax), %rcx
	movq	%rcx, pn_move+8
	movq	48(%rax), %rax
	movq	%rax, pn_move+16
	movw	$-24271, BasicBlockSignatureTracker # imm = 0xA131
	movw	$25, RunTimeSignatureAdjuster
.LBB77_147:                             #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-24265, %ax            # imm = 0xA137
	jne	.LBB77_205
# %bb.148:                              # %proofnumberscan.split535
                                        #   in Loop: Header=BB77_137 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	movw	$-24265, BasicBlockSignatureTracker # imm = 0xA137
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_155
# %bb.149:                              #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$-24254, %ax            # imm = 0xA142
	jne	.LBB77_205
# %bb.150:                              # %proofnumberscan.split537
                                        #   in Loop: Header=BB77_137 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	movw	$-24254, BasicBlockSignatureTracker # imm = 0xA142
	movw	$117, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jne	.LBB77_155
# %bb.151:                              # %Buffer__10
                                        #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20376, %ax             # imm = 0x4F98
	cmpw	$-4390, %ax             # imm = 0xEEDA
	jne	.LBB77_205
# %bb.152:                              # %proofnumberscan.split541
                                        #   in Loop: Header=BB77_137 Depth=1
	movw	$-4390, BasicBlockSignatureTracker # imm = 0xEEDA
	movw	$20376, RunTimeSignatureAdjuster # imm = 0x4F98
# %bb.153:                              #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-24251, %ax            # imm = 0xA145
	jne	.LBB77_205
# %bb.154:                              # %proofnumberscan.split597
                                        #   in Loop: Header=BB77_137 Depth=1
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-24251, BasicBlockSignatureTracker # imm = 0xA145
	movw	$114, RunTimeSignatureAdjuster
.LBB77_155:                             #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$-24247, %ax            # imm = 0xA149
	jne	.LBB77_205
# %bb.156:                              # %proofnumberscan.split539
                                        #   in Loop: Header=BB77_137 Depth=1
	movw	$-24247, BasicBlockSignatureTracker # imm = 0xA149
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB77_159
.LBB77_157:                             #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$79, %ax
	cmpw	$-24230, %ax            # imm = 0xA15A
	jne	.LBB77_205
# %bb.158:                              # %proofnumberscan.split531
                                        #   in Loop: Header=BB77_137 Depth=1
	movss	.LCPI77_1(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movl	$1, forcedwin
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	16(%rax), %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	32(%rax), %rcx
	movq	%rcx, pn_move
	movq	40(%rax), %rcx
	movq	%rcx, pn_move+8
	movq	48(%rax), %rax
	movq	%rax, pn_move+16
	movq	-112(%rbp), %rax        # 8-byte Reload
	movss	%xmm0, (%rax)
	movw	$-24230, BasicBlockSignatureTracker # imm = 0xA15A
	movw	$19, RunTimeSignatureAdjuster
.LBB77_159:                             #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-24229, %ax            # imm = 0xA15B
	jne	.LBB77_205
# %bb.160:                              # %proofnumberscan.split543
                                        #   in Loop: Header=BB77_137 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-24229, BasicBlockSignatureTracker # imm = 0xA15B
	movw	$73, RunTimeSignatureAdjuster
.LBB77_161:                             #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$99, %ax
	xorw	%cx, %ax
	cmpw	$-24207, %ax            # imm = 0xA171
	jne	.LBB77_205
# %bb.162:                              # %proofnumberscan.split527
                                        #   in Loop: Header=BB77_137 Depth=1
	movw	$-24207, BasicBlockSignatureTracker # imm = 0xA171
	movw	$0, RunTimeSignatureAdjuster
# %bb.163:                              #   in Loop: Header=BB77_137 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-24201, %ax            # imm = 0xA177
	jne	.LBB77_205
# %bb.164:                              # %proofnumberscan.split545
                                        #   in Loop: Header=BB77_137 Depth=1
	movq	%r15, %rcx
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-24201, BasicBlockSignatureTracker # imm = 0xA177
	movw	$125, RunTimeSignatureAdjuster
	jmp	.LBB77_137
.LBB77_165:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$115, %ax
	cmpw	$-24193, %ax            # imm = 0xA17F
	jne	.LBB77_210
# %bb.166:                              # %proofnumberscan.split523
	movw	$-24193, BasicBlockSignatureTracker # imm = 0xA17F
	movw	$402, RunTimeSignatureAdjuster # imm = 0x192
.LBB77_167:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$356, %ax               # imm = 0x164
	xorw	%cx, %ax
	cmpw	$-24183, %ax            # imm = 0xA189
	jne	.LBB77_210
# %bb.168:                              # %proofnumberscan.split517
	movq	pn_move, %rax
	movq	-192(%rbp), %rcx        # 8-byte Reload
	movq	%rax, (%rcx)
	movq	pn_move+8, %rax
	movq	%rax, 8(%rcx)
	movq	pn_move+16, %rax
	movq	%rax, 16(%rcx)
	movw	$-24183, BasicBlockSignatureTracker # imm = 0xA189
	movw	$-18984, RunTimeSignatureAdjuster # imm = 0xB5D8
	subq	$32, %rsp
	movq	(%rcx), %rax
	movq	%rax, (%rsp)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsp)
	movq	-184(%rbp), %rdi        # 8-byte Reload
	callq	comp_to_san
	addq	$32, %rsp
	movw	$-24183, BasicBlockSignatureTracker # imm = 0xA189
	movw	$-18984, RunTimeSignatureAdjuster # imm = 0xB5D8
	movl	xb_mode, %eax
	movw	$-24183, BasicBlockSignatureTracker # imm = 0xA189
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB77_175
# %bb.169:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-24175, %ax            # imm = 0xA191
	jne	.LBB77_210
# %bb.170:                              # %proofnumberscan.split547
	movl	post, %eax
	movw	$-24175, BasicBlockSignatureTracker # imm = 0xA191
	movw	$24, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB77_175
# %bb.171:                              # %Buffer__11
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-28788, %ax            # imm = 0x8F8C
	cmpw	$11805, %ax             # imm = 0x2E1D
	jne	.LBB77_210
# %bb.172:                              # %proofnumberscan.split551
	movw	$11805, BasicBlockSignatureTracker # imm = 0x2E1D
	movw	$-28788, RunTimeSignatureAdjuster # imm = 0x8F8C
# %bb.173:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$-24142, %ax            # imm = 0xA1B2
	jne	.LBB77_210
# %bb.174:                              # %proofnumberscan.split599
	movabsq	$.L.str.2.86, %rdi
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movl	4(%rax), %esi
	movq	(%rcx), %rax
	movl	8(%rax), %edx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %ecx
	movl	maxply, %r8d
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r9d
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	subq	$16, %rsp
	movl	%eax, (%rsp)
	movb	$0, %al
	callq	printf
	addq	$16, %rsp
	movw	$-24142, BasicBlockSignatureTracker # imm = 0xA1B2
	movw	$59, RunTimeSignatureAdjuster
.LBB77_175:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$78, %ax
	xorw	%cx, %ax
	cmpw	$-24121, %ax            # imm = 0xA1C7
	movq	%r13, %rcx
	jne	.LBB77_210
# %bb.176:                              # %proofnumberscan.split549
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%rcx), %ecx
	subl	$1, %ecx
	movw	$-24121, BasicBlockSignatureTracker # imm = 0xA1C7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB77_196
# %bb.177:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-24107, %ax            # imm = 0xA1D5
	movq	%r15, %r14
	jne	.LBB77_210
# %bb.178:                              # %proofnumberscan.split553
	movabsq	$.L.str.3.87, %rdi
	movb	$0, %al
	callq	printf
	movl	$0, (%r14)
	movw	$-24107, BasicBlockSignatureTracker # imm = 0xA1D5
	movw	$0, RunTimeSignatureAdjuster
.LBB77_179:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-24106, %ax            # imm = 0xA1D6
	jne	.LBB77_204
# %bb.180:                              # %proofnumberscan.split557
                                        #   in Loop: Header=BB77_179 Depth=1
	movl	(%r15), %eax
	movl	(%r12), %ecx
	movw	$-24106, BasicBlockSignatureTracker # imm = 0xA1D6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB77_193
# %bb.181:                              #   in Loop: Header=BB77_179 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$-24093, %ax            # imm = 0xA1E3
	jne	.LBB77_204
# %bb.182:                              # %proofnumberscan.split559
                                        #   in Loop: Header=BB77_179 Depth=1
	movslq	(%r15), %rax
	movl	rootlosers(,%rax,4), %eax
	movw	$-24093, BasicBlockSignatureTracker # imm = 0xA1E3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB77_189
# %bb.183:                              #   in Loop: Header=BB77_179 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$-24068, %ax            # imm = 0xA1FC
	jne	.LBB77_204
# %bb.184:                              # %proofnumberscan.split565
                                        #   in Loop: Header=BB77_179 Depth=1
	movslq	(%r15), %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$-24068, BasicBlockSignatureTracker # imm = 0xA1FC
	movw	$31, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB77_189
# %bb.185:                              # %Buffer__12
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-4571, %ax             # imm = 0xEE25
	cmpw	$20441, %ax             # imm = 0x4FD9
	jne	.LBB77_210
# %bb.186:                              # %proofnumberscan.split567
	movw	$20441, BasicBlockSignatureTracker # imm = 0x4FD9
	movw	$-4571, RunTimeSignatureAdjuster # imm = 0xEE25
# %bb.187:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1018, %ax              # imm = 0x3FA
	xorw	%cx, %ax
	cmpw	$-24058, %ax            # imm = 0xA206
	movq	-120(%rbp), %r14        # 8-byte Reload
	jne	.LBB77_210
# %bb.188:                              # %proofnumberscan.split601
	movl	$1, forcedwin
	movslq	(%r15), %rax
	imulq	$24, %rax, %rax
	addq	%rax, %r14
	movq	(%r14), %rax
	movq	%rax, pn_move
	movq	8(%r14), %rax
	movq	%rax, pn_move+8
	movq	16(%r14), %rax
	movq	%rax, pn_move+16
	movw	$-24058, BasicBlockSignatureTracker # imm = 0xA206
	movw	$976, RunTimeSignatureAdjuster # imm = 0x3D0
	jmp	.LBB77_194
.LBB77_189:                             #   in Loop: Header=BB77_179 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1002, %ax              # imm = 0x3EA
	xorw	%cx, %ax
	cmpw	$-24055, %ax            # imm = 0xA209
	jne	.LBB77_204
# %bb.190:                              # %proofnumberscan.split563
                                        #   in Loop: Header=BB77_179 Depth=1
	movw	$-24055, BasicBlockSignatureTracker # imm = 0xA209
	movw	$0, RunTimeSignatureAdjuster
# %bb.191:                              #   in Loop: Header=BB77_179 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$-24042, %ax            # imm = 0xA216
	jne	.LBB77_204
# %bb.192:                              # %proofnumberscan.split569
                                        #   in Loop: Header=BB77_179 Depth=1
	movq	%r15, %rcx
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-24042, BasicBlockSignatureTracker # imm = 0xA216
	movw	$963, RunTimeSignatureAdjuster # imm = 0x3C3
	jmp	.LBB77_179
.LBB77_193:                             # %.loopexit
	jmp	.LBB77_194
.LBB77_194:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1014, %ax              # imm = 0x3F6
	xorw	%cx, %ax
	cmpw	$-24032, %ax            # imm = 0xA220
	jne	.LBB77_210
# %bb.195:                              # %proofnumberscan.split561
	movw	$-24032, BasicBlockSignatureTracker # imm = 0xA220
	movw	$999, RunTimeSignatureAdjuster # imm = 0x3E7
.LBB77_196:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$998, %ax               # imm = 0x3E6
	xorw	%cx, %ax
	cmpw	$-24031, %ax            # imm = 0xA221
	movq	%r13, %rbx
	jne	.LBB77_210
# %bb.197:                              # %proofnumberscan.split555
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%rbx), %ecx
	movw	$-24031, BasicBlockSignatureTracker # imm = 0xA221
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB77_200
# %bb.198:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-24029, %ax            # imm = 0xA223
	jne	.LBB77_210
# %bb.199:                              # %proofnumberscan.split571
	movl	$1, alllosers
	movw	$-24029, BasicBlockSignatureTracker # imm = 0xA223
	movw	$2, RunTimeSignatureAdjuster
.LBB77_200:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-24026, %ax            # imm = 0xA226
	jne	.LBB77_210
# %bb.201:                              # %proofnumberscan.split573
	movw	$-24026, BasicBlockSignatureTracker # imm = 0xA226
	movw	$15658, RunTimeSignatureAdjuster # imm = 0x3D2A
	callq	Xfree
	movw	$-24026, BasicBlockSignatureTracker # imm = 0xA226
	movw	$15658, RunTimeSignatureAdjuster # imm = 0x3D2A
	movq	membuff, %rdi
	callq	free
	movq	-48(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	callq	free
	movw	$-24026, BasicBlockSignatureTracker # imm = 0xA226
	movw	$15658, RunTimeSignatureAdjuster # imm = 0x3D2A
.LBB77_202:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15676, %ax             # imm = 0x3D3C
	xorw	%cx, %ax
	cmpw	$-24016, %ax            # imm = 0xA230
	jne	.LBB77_210
# %bb.203:                              # %proofnumberscan.split419
	movw	$-24016, BasicBlockSignatureTracker # imm = 0xA230
	movw	$24858, RunTimeSignatureAdjuster # imm = 0x611A
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB77_204:                             # %CFerrorHandler.proofnumberscan.loopexit
	jmp	.LBB77_210
.LBB77_205:                             # %CFerrorHandler.proofnumberscan.loopexit1
	jmp	.LBB77_210
.LBB77_206:                             # %CFerrorHandler.proofnumberscan.loopexit2
	jmp	.LBB77_210
.LBB77_207:                             # %CFerrorHandler.proofnumberscan.loopexit3
	jmp	.LBB77_210
.LBB77_208:                             # %CFerrorHandler.proofnumberscan.loopexit4
	jmp	.LBB77_210
.LBB77_209:                             # %CFerrorHandler.proofnumberscan.loopexit5
	jmp	.LBB77_210
.LBB77_210:                             # %CFerrorHandler.proofnumberscan
	callq	FAULT_DETECTED_CFC
.Lfunc_end77:
	.size	proofnumberscan, .Lfunc_end77-proofnumberscan
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function proofnumbersearch
.LCPI78_0:
	.long	1233125376              # float 1048576
.LCPI78_2:
	.long	3212836864              # float -1
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI78_1:
	.quad	4636737291354636288     # double 100
	.text
	.globl	proofnumbersearch
	.p2align	4, 0x90
	.type	proofnumbersearch,@function
proofnumbersearch:                      # @proofnumbersearch
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23464, %ax             # imm = 0x5BA8
	xorw	%cx, %ax
	cmpw	$-23969, %ax            # imm = 0xA25F
	jne	.LBB78_155
# %bb.1:                                # %proofnumbersearch.split409
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r14
	addq	$-8192, %r14            # imm = 0xE000
	movq	%r14, %rsp
	movq	%rsp, %r15
	addq	$-8192, %r15            # imm = 0xE000
	movq	%r15, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -64(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movl	$1, nodecount
	movl	$0, iters
	movl	$0, frees
	movl	$1, ply
	movl	$0, maxply
	movl	$0, forwards
	movl	hash, %edx
	movl	move_number, %esi
	addl	ply, %esi
	subl	$1, %esi
	movslq	%esi, %rsi
	movl	%edx, hash_history(,%rsi,4)
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	%eax, root_to_move
	movw	$-23969, BasicBlockSignatureTracker # imm = 0xA25F
	movw	$-18657, RunTimeSignatureAdjuster # imm = 0xB71F
	callq	rtime
	movw	$-23969, BasicBlockSignatureTracker # imm = 0xA25F
	movw	$-18657, RunTimeSignatureAdjuster # imm = 0xB71F
	movq	%rax, (%r12)
	movl	$1, %edi
	movl	$56, %esi
	callq	calloc
	movq	%rax, (%rbx)
	movslq	PBSize, %rdi
	movl	$56, %esi
	callq	calloc
	movq	%rax, membuff
	movq	(%rbx), %rdi
	movw	$-23969, BasicBlockSignatureTracker # imm = 0xA25F
	movw	$16368, RunTimeSignatureAdjuster # imm = 0x3FF0
	callq	pn_eval
	movw	$-23969, BasicBlockSignatureTracker # imm = 0xA25F
	movw	$16368, RunTimeSignatureAdjuster # imm = 0x3FF0
	movq	(%rbx), %rax
	movzbl	(%rax), %eax
	movw	$-23969, BasicBlockSignatureTracker # imm = 0xA25F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB78_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$-23959, %ax            # imm = 0xA269
	jne	.LBB78_155
# %bb.3:                                # %proofnumbersearch.split
	movq	dummy, %rax
	movq	%rax, pn_move
	movq	dummy+8, %rax
	movq	%rax, pn_move+8
	movq	dummy+16, %rax
	movq	%rax, pn_move+16
	movw	$-23959, BasicBlockSignatureTracker # imm = 0xA269
	movw	$15717, RunTimeSignatureAdjuster # imm = 0x3D65
	callq	Xfree
	movw	$-23959, BasicBlockSignatureTracker # imm = 0xA269
	movw	$15717, RunTimeSignatureAdjuster # imm = 0x3D65
	movq	(%rbx), %rdi
	callq	free
	movq	membuff, %rdi
	callq	free
	movw	$-23959, BasicBlockSignatureTracker # imm = 0xA269
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB78_146
.LBB78_4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$-23958, %ax            # imm = 0xA26A
	jne	.LBB78_155
# %bb.5:                                # %proofnumbersearch.split279
	movq	(%rbx), %rdi
	movw	$-23958, BasicBlockSignatureTracker # imm = 0xA26A
	movw	$16325, RunTimeSignatureAdjuster # imm = 0x3FC5
	callq	set_proof_and_disproof_numbers
	movw	$-23958, BasicBlockSignatureTracker # imm = 0xA26A
	movw	$16325, RunTimeSignatureAdjuster # imm = 0x3FC5
	movq	(%rbx), %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movw	$-23958, BasicBlockSignatureTracker # imm = 0xA26A
	movw	$0, RunTimeSignatureAdjuster
.LBB78_6:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-23942, %ax            # imm = 0xA27A
	jne	.LBB78_154
# %bb.7:                                # %proofnumbersearch.split283
                                        #   in Loop: Header=BB78_6 Depth=1
	xorl	%eax, %eax
	movq	(%rbx), %rcx
	movl	4(%rcx), %ecx
	movw	$-23942, BasicBlockSignatureTracker # imm = 0xA27A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB78_14
# %bb.8:                                #   in Loop: Header=BB78_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$249, %ax
	cmpw	$-23933, %ax            # imm = 0xA283
	jne	.LBB78_154
# %bb.9:                                # %proofnumbersearch.split285
                                        #   in Loop: Header=BB78_6 Depth=1
	xorl	%eax, %eax
	movq	(%rbx), %rcx
	movl	8(%rcx), %ecx
	movw	$-23933, BasicBlockSignatureTracker # imm = 0xA283
	movw	$249, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB78_14
# %bb.10:                               # %Buffer__
                                        #   in Loop: Header=BB78_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-11721, %ax            # imm = 0xD237
	cmpw	$28852, %ax             # imm = 0x70B4
	jne	.LBB78_154
# %bb.11:                               # %proofnumbersearch.split289
                                        #   in Loop: Header=BB78_6 Depth=1
	movw	$28852, BasicBlockSignatureTracker # imm = 0x70B4
	movw	$-11721, RunTimeSignatureAdjuster # imm = 0xD237
# %bb.12:                               #   in Loop: Header=BB78_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-23932, %ax            # imm = 0xA284
	jne	.LBB78_154
# %bb.13:                               # %proofnumbersearch.split411
                                        #   in Loop: Header=BB78_6 Depth=1
	movl	bufftop, %eax
	movl	PBSize, %ecx
	subl	$10000, %ecx            # imm = 0x2710
	movslq	%ecx, %rcx
	imulq	$56, %rcx, %rcx
	cmpq	%rcx, %rax
	setb	%al
	movw	$-23932, BasicBlockSignatureTracker # imm = 0xA284
	movw	$254, RunTimeSignatureAdjuster
.LBB78_14:                              #   in Loop: Header=BB78_6 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$209, %cx
	xorw	%dx, %cx
	cmpw	$-23893, %cx            # imm = 0xA2AB
	jne	.LBB78_154
# %bb.15:                               # %proofnumbersearch.split287
                                        #   in Loop: Header=BB78_6 Depth=1
	movw	$-23893, BasicBlockSignatureTracker # imm = 0xA2AB
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB78_16
	jmp	.LBB78_30
.LBB78_16:                              #   in Loop: Header=BB78_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-23891, %ax            # imm = 0xA2AD
	jne	.LBB78_154
# %bb.17:                               # %proofnumbersearch.split291
                                        #   in Loop: Header=BB78_6 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movw	$-23891, BasicBlockSignatureTracker # imm = 0xA2AD
	movw	$15362, RunTimeSignatureAdjuster # imm = 0x3C02
	callq	select_most_proving
	movw	$-23891, BasicBlockSignatureTracker # imm = 0xA2AD
	movw	$15362, RunTimeSignatureAdjuster # imm = 0x3C02
	movq	%rax, (%r13)
	movq	(%r13), %rdi
	movw	$-23891, BasicBlockSignatureTracker # imm = 0xA2AD
	movw	$-4397, RunTimeSignatureAdjuster # imm = 0xEED3
	callq	develop_node
	movw	$-23891, BasicBlockSignatureTracker # imm = 0xA2AD
	movw	$-4397, RunTimeSignatureAdjuster # imm = 0xEED3
	movq	(%r13), %rdi
	movw	$-23891, BasicBlockSignatureTracker # imm = 0xA2AD
	movw	$15362, RunTimeSignatureAdjuster # imm = 0x3C02
	callq	update_ancestors
	movl	$32, %ecx
	movw	$-23891, BasicBlockSignatureTracker # imm = 0xA2AD
	movw	$15362, RunTimeSignatureAdjuster # imm = 0x3C02
	movl	iters, %eax
	addl	$1, %eax
	movl	%eax, iters
	movl	iters, %eax
	cltd
	idivl	%ecx
	movw	$-23891, BasicBlockSignatureTracker # imm = 0xA2AD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jne	.LBB78_28
# %bb.18:                               #   in Loop: Header=BB78_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-23875, %ax            # imm = 0xA2BD
	jne	.LBB78_154
# %bb.19:                               # %proofnumbersearch.split295
                                        #   in Loop: Header=BB78_6 Depth=1
	movw	$-23875, BasicBlockSignatureTracker # imm = 0xA2BD
	movw	$-18435, RunTimeSignatureAdjuster # imm = 0xB7FD
	callq	rtime
	movw	$-23875, BasicBlockSignatureTracker # imm = 0xA2BD
	movw	$-18435, RunTimeSignatureAdjuster # imm = 0xB7FD
	movq	(%r12), %rsi
	movw	$-23875, BasicBlockSignatureTracker # imm = 0xA2BD
	movw	$15866, RunTimeSignatureAdjuster # imm = 0x3DFA
	movq	%rax, %rdi
	callq	rdifftime
	movw	$-23875, BasicBlockSignatureTracker # imm = 0xA2BD
	movw	$15866, RunTimeSignatureAdjuster # imm = 0x3DFA
	movl	pn_time, %ecx
	movw	$-23875, BasicBlockSignatureTracker # imm = 0xA2BD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB78_26
# %bb.20:                               #   in Loop: Header=BB78_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$122, %ax
	cmpw	$-23865, %ax            # imm = 0xA2C7
	jne	.LBB78_154
# %bb.21:                               # %proofnumbersearch.split299
                                        #   in Loop: Header=BB78_6 Depth=1
	movw	$-23865, BasicBlockSignatureTracker # imm = 0xA2C7
	movw	$-18919, RunTimeSignatureAdjuster # imm = 0xB619
	callq	interrupt
	movw	$-23865, BasicBlockSignatureTracker # imm = 0xA2C7
	movw	$-18919, RunTimeSignatureAdjuster # imm = 0xB619
	movw	$-23865, BasicBlockSignatureTracker # imm = 0xA2C7
	movw	$122, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB78_26
# %bb.22:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-6694, %ax             # imm = 0xE5DA
	cmpw	$18205, %ax             # imm = 0x471D
	jne	.LBB78_155
# %bb.23:                               # %proofnumbersearch.split303
	movw	$18205, BasicBlockSignatureTracker # imm = 0x471D
	movw	$-6694, RunTimeSignatureAdjuster # imm = 0xE5DA
# %bb.24:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-23860, %ax            # imm = 0xA2CC
	jne	.LBB78_155
# %bb.25:                               # %proofnumbersearch.split413
	movw	$-23860, BasicBlockSignatureTracker # imm = 0xA2CC
	movw	$103, RunTimeSignatureAdjuster
	jmp	.LBB78_31
.LBB78_26:                              #   in Loop: Header=BB78_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$106, %ax
	xorw	%cx, %ax
	cmpw	$-23849, %ax            # imm = 0xA2D7
	jne	.LBB78_154
# %bb.27:                               # %proofnumbersearch.split301
                                        #   in Loop: Header=BB78_6 Depth=1
	movw	$-23849, BasicBlockSignatureTracker # imm = 0xA2D7
	movw	$122, RunTimeSignatureAdjuster
.LBB78_28:                              #   in Loop: Header=BB78_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$69, %ax
	xorw	%cx, %ax
	cmpw	$-23832, %ax            # imm = 0xA2E8
	jne	.LBB78_154
# %bb.29:                               # %proofnumbersearch.split297
                                        #   in Loop: Header=BB78_6 Depth=1
	movw	$-23832, BasicBlockSignatureTracker # imm = 0xA2E8
	movw	$130, RunTimeSignatureAdjuster
	jmp	.LBB78_6
.LBB78_30:                              # %.loopexit7
	jmp	.LBB78_31
.LBB78_31:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$89, %ax
	xorw	%cx, %ax
	cmpw	$-23822, %ax            # imm = 0xA2F2
	jne	.LBB78_155
# %bb.32:                               # %proofnumbersearch.split293
	movabsq	$.L.str.4.88, %rdi
	movss	.LCPI78_0(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movq	(%rbx), %rax
	movl	4(%rax), %esi
	movl	8(%rax), %edx
	movslq	nodecount(%rip), %rcx
	movl	frees(%rip), %r8d
	imulq	$56, %rcx, %r9
	cvtsi2ssq	%r9, %xmm2
	movq	%r9, %rax
	shrq	%rax
	cvtsi2ssq	%rax, %xmm1
	addss	%xmm1, %xmm1
	testq	%r9, %r9
	js	.LBB78_34
# %bb.33:                               # %proofnumbersearch.split293
	movaps	%xmm2, %xmm1
.LBB78_34:                              # %proofnumbersearch.split293
	divss	%xmm0, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movl	iters, %r9d
	movl	maxply, %eax
	subq	$16, %rsp
                                        # kill: def %ecx killed %ecx killed %rcx
	movl	%eax, (%rsp)
	movb	$1, %al
	callq	printf
	addq	$16, %rsp
	movl	xb_mode, %eax
	movw	$-23822, BasicBlockSignatureTracker # imm = 0xA2F2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB78_41
# %bb.35:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-23820, %ax            # imm = 0xA2F4
	jne	.LBB78_155
# %bb.36:                               # %proofnumbersearch.split305
	movl	post, %eax
	movw	$-23820, BasicBlockSignatureTracker # imm = 0xA2F4
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB78_41
# %bb.37:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16237, %ax             # imm = 0x3F6D
	cmpw	$-25191, %ax            # imm = 0x9D99
	jne	.LBB78_155
# %bb.38:                               # %proofnumbersearch.split309
	movw	$-25191, BasicBlockSignatureTracker # imm = 0x9D99
	movw	$16237, RunTimeSignatureAdjuster # imm = 0x3F6D
# %bb.39:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-23814, %ax            # imm = 0xA2FA
	jne	.LBB78_155
# %bb.40:                               # %proofnumbersearch.split415
	movabsq	$.L.str.5.89, %rdi
	movq	(%rbx), %rax
	movl	4(%rax), %esi
	movq	(%rbx), %rax
	movl	8(%rax), %edx
	movl	nodecount, %ecx
	movl	forwards, %r8d
	movl	iters, %r9d
	movl	maxply, %eax
	subq	$16, %rsp
	movl	%eax, (%rsp)
	movb	$0, %al
	callq	printf
	addq	$16, %rsp
	movw	$-23814, BasicBlockSignatureTracker # imm = 0xA2FA
	movw	$8, RunTimeSignatureAdjuster
.LBB78_41:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$482, %ax               # imm = 0x1E2
	xorw	%cx, %ax
	cmpw	$-23792, %ax            # imm = 0xA310
	jne	.LBB78_155
# %bb.42:                               # %proofnumbersearch.split307
	movl	xb_mode, %eax
	movw	$-23792, BasicBlockSignatureTracker # imm = 0xA310
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB78_45
# %bb.43:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-23785, %ax            # imm = 0xA317
	jne	.LBB78_155
# %bb.44:                               # %proofnumbersearch.split313
	movw	$-23785, BasicBlockSignatureTracker # imm = 0xA317
	movw	$-18857, RunTimeSignatureAdjuster # imm = 0xB657
	callq	rtime
	movw	$-23785, BasicBlockSignatureTracker # imm = 0xA317
	movw	$-18857, RunTimeSignatureAdjuster # imm = 0xB657
	movq	(%r12), %rsi
	movw	$-23785, BasicBlockSignatureTracker # imm = 0xA317
	movw	$15440, RunTimeSignatureAdjuster # imm = 0x3C50
	movq	%rax, %rdi
	callq	rdifftime
	movabsq	$.L.str.6.90, %rdi
	movsd	.LCPI78_1(%rip), %xmm1  # xmm1 = mem[0],zero
	movw	$-23785, BasicBlockSignatureTracker # imm = 0xA317
	movw	$15440, RunTimeSignatureAdjuster # imm = 0x3C50
	cvtsi2ssl	%eax, %xmm0
	cvtss2sd	%xmm0, %xmm0
	divsd	%xmm1, %xmm0
	movb	$1, %al
	callq	printf
	movw	$-23785, BasicBlockSignatureTracker # imm = 0xA317
	movw	$7, RunTimeSignatureAdjuster
.LBB78_45:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-23780, %ax            # imm = 0xA31C
	jne	.LBB78_155
# %bb.46:                               # %proofnumbersearch.split311
	movw	$-23780, BasicBlockSignatureTracker # imm = 0xA31C
	movw	$0, RunTimeSignatureAdjuster
.LBB78_47:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$-23769, %ax            # imm = 0xA327
	jne	.LBB78_153
# %bb.48:                               # %proofnumbersearch.split315
                                        #   in Loop: Header=BB78_47 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	(%rbx), %rcx
	movw	$-23769, BasicBlockSignatureTracker # imm = 0xA327
	movw	$0, RunTimeSignatureAdjuster
	cmpq	%rcx, %rax
	je	.LBB78_51
# %bb.49:                               #   in Loop: Header=BB78_47 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-23745, %ax            # imm = 0xA33F
	jne	.LBB78_153
# %bb.50:                               # %proofnumbersearch.split317
                                        #   in Loop: Header=BB78_47 Depth=1
	movq	-56(%rbp), %r12         # 8-byte Reload
	movq	(%r12), %rdi
	addq	$32, %rdi
	movw	$-23745, BasicBlockSignatureTracker # imm = 0xA33F
	movw	$10712, RunTimeSignatureAdjuster # imm = 0x29D8
	xorl	%esi, %esi
	callq	unmake
	movw	$-23745, BasicBlockSignatureTracker # imm = 0xA33F
	movw	$10712, RunTimeSignatureAdjuster # imm = 0x29D8
	movq	(%r12), %rax
	movq	24(%rax), %rax
	movq	%rax, (%r12)
	movw	$-23745, BasicBlockSignatureTracker # imm = 0xA33F
	movw	$35, RunTimeSignatureAdjuster
	jmp	.LBB78_47
.LBB78_51:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$98, %ax
	cmpw	$-23739, %ax            # imm = 0xA345
	jne	.LBB78_155
# %bb.52:                               # %proofnumbersearch.split319
	movq	(%rbx), %rax
	movl	4(%rax), %eax
	movw	$-23739, BasicBlockSignatureTracker # imm = 0xA345
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB78_117
# %bb.53:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-23735, %ax            # imm = 0xA349
	jne	.LBB78_155
# %bb.54:                               # %proofnumbersearch.split321
	movabsq	$.L.str.7.91, %rdi
	movq	(%rbx), %rax
	movb	$1, (%rax)
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.8.92, %rdi
	movb	$0, %al
	callq	printf
	movq	%r14, %rdi
	xorl	%esi, %esi
	movl	$8192, %edx             # imm = 0x2000
	callq	memset
	movq	%r15, %rdi
	xorl	%esi, %esi
	movl	$8192, %edx             # imm = 0x2000
	callq	memset
	movl	$1, ply
	movw	$-23735, BasicBlockSignatureTracker # imm = 0xA349
	movw	$0, RunTimeSignatureAdjuster
.LBB78_55:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB78_61 Depth 2
                                        #     Child Loop BB78_69 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-23719, %ax            # imm = 0xA359
	jne	.LBB78_152
# %bb.56:                               # %proofnumbersearch.split325
                                        #   in Loop: Header=BB78_55 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movb	2(%rax), %al
	movw	$-23719, BasicBlockSignatureTracker # imm = 0xA359
	movw	$0, RunTimeSignatureAdjuster
	cmpb	$0, %al
	je	.LBB78_81
# %bb.57:                               #   in Loop: Header=BB78_55 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$-23701, %ax            # imm = 0xA36B
	jne	.LBB78_152
# %bb.58:                               # %proofnumbersearch.split327
                                        #   in Loop: Header=BB78_55 Depth=1
	movl	$1, %eax
	xorl	%ecx, %ecx
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	root_to_move, %ecx
	movw	$-23701, BasicBlockSignatureTracker # imm = 0xA36B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB78_67
# %bb.59:                               #   in Loop: Header=BB78_55 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$217, %ax
	cmpw	$-23630, %ax            # imm = 0xA3B2
	jne	.LBB78_152
# %bb.60:                               # %proofnumbersearch.split331
                                        #   in Loop: Header=BB78_55 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-23630, BasicBlockSignatureTracker # imm = 0xA3B2
	movw	$0, RunTimeSignatureAdjuster
.LBB78_61:                              #   Parent Loop BB78_55 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-23627, %ax            # imm = 0xA3B5
	jne	.LBB78_150
# %bb.62:                               # %proofnumbersearch.split335
                                        #   in Loop: Header=BB78_61 Depth=2
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rax
	movq	16(%rax), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	movq	(%rdx), %rcx
	movl	4(%rcx), %ecx
	movw	$-23627, BasicBlockSignatureTracker # imm = 0xA3B5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB78_65
# %bb.63:                               #   in Loop: Header=BB78_61 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-23618, %ax            # imm = 0xA3BE
	jne	.LBB78_150
# %bb.64:                               # %proofnumbersearch.split337
                                        #   in Loop: Header=BB78_61 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-23618, BasicBlockSignatureTracker # imm = 0xA3BE
	movw	$12, RunTimeSignatureAdjuster
	jmp	.LBB78_61
.LBB78_65:                              #   in Loop: Header=BB78_55 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$100, %ax
	cmpw	$-23599, %ax            # imm = 0xA3D1
	jne	.LBB78_152
# %bb.66:                               # %proofnumbersearch.split339
                                        #   in Loop: Header=BB78_55 Depth=1
	movw	$-23599, BasicBlockSignatureTracker # imm = 0xA3D1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB78_75
.LBB78_67:                              #   in Loop: Header=BB78_55 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$138, %ax
	cmpw	$-23583, %ax            # imm = 0xA3E1
	jne	.LBB78_152
# %bb.68:                               # %proofnumbersearch.split333
                                        #   in Loop: Header=BB78_55 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-23583, BasicBlockSignatureTracker # imm = 0xA3E1
	movw	$0, RunTimeSignatureAdjuster
.LBB78_69:                              #   Parent Loop BB78_55 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-23575, %ax            # imm = 0xA3E9
	jne	.LBB78_151
# %bb.70:                               # %proofnumbersearch.split343
                                        #   in Loop: Header=BB78_69 Depth=2
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rax
	movq	16(%rax), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	movq	(%rdx), %rcx
	movl	8(%rcx), %ecx
	movw	$-23575, BasicBlockSignatureTracker # imm = 0xA3E9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB78_73
# %bb.71:                               #   in Loop: Header=BB78_69 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-23567, %ax            # imm = 0xA3F1
	jne	.LBB78_151
# %bb.72:                               # %proofnumbersearch.split345
                                        #   in Loop: Header=BB78_69 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-23567, BasicBlockSignatureTracker # imm = 0xA3F1
	movw	$16, RunTimeSignatureAdjuster
	jmp	.LBB78_69
.LBB78_73:                              #   in Loop: Header=BB78_55 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-23563, %ax            # imm = 0xA3F5
	jne	.LBB78_152
# %bb.74:                               # %proofnumbersearch.split347
                                        #   in Loop: Header=BB78_55 Depth=1
	movw	$-23563, BasicBlockSignatureTracker # imm = 0xA3F5
	movw	$36, RunTimeSignatureAdjuster
.LBB78_75:                              #   in Loop: Header=BB78_55 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$40, %ax
	xorw	%cx, %ax
	cmpw	$-23559, %ax            # imm = 0xA3F9
	jne	.LBB78_152
# %bb.76:                               # %proofnumbersearch.split341
                                        #   in Loop: Header=BB78_55 Depth=1
	movq	-56(%rbp), %r12         # 8-byte Reload
	movq	(%r12), %rax
	movq	16(%rax), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	%rax, (%r12)
	movq	(%r12), %rax
	addq	$32, %rax
	movw	$-23559, BasicBlockSignatureTracker # imm = 0xA3F9
	movw	$0, RunTimeSignatureAdjuster
	subq	$32, %rsp
	movq	(%rax), %rcx
	movq	%rcx, (%rsp)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rsp)
	movq	16(%rax), %rax
	movq	%rax, 16(%rsp)
	movq	%r14, %rdi
	callq	comp_to_coord
	addq	$32, %rsp
	movabsq	$.L.str.9.93, %rdi
	movw	$-23559, BasicBlockSignatureTracker # imm = 0xA3F9
	movw	$0, RunTimeSignatureAdjuster
	movq	%r14, %rsi
	movb	$0, %al
	callq	printf
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	strcat
	movabsq	$.L.str.10.94, %rsi
	movq	%r15, %rdi
	callq	strcat
	movq	(%r12), %rdi
	addq	$32, %rdi
	movw	$-23559, BasicBlockSignatureTracker # imm = 0xA3F9
	movw	$10569, RunTimeSignatureAdjuster # imm = 0x2949
	xorl	%esi, %esi
	callq	make
	movw	$-23559, BasicBlockSignatureTracker # imm = 0xA3F9
	movw	$10569, RunTimeSignatureAdjuster # imm = 0x2949
	movl	ply, %eax
	movw	$-23559, BasicBlockSignatureTracker # imm = 0xA3F9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB78_79
# %bb.77:                               #   in Loop: Header=BB78_55 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2044, %ax              # imm = 0x7FC
	cmpw	$-23547, %ax            # imm = 0xA405
	jne	.LBB78_152
# %bb.78:                               # %proofnumbersearch.split349
                                        #   in Loop: Header=BB78_55 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	32(%rax), %rcx
	movq	%rcx, pn_move
	movq	40(%rax), %rcx
	movq	%rcx, pn_move+8
	movq	48(%rax), %rax
	movq	%rax, pn_move+16
	movw	$-23547, BasicBlockSignatureTracker # imm = 0xA405
	movw	$2044, RunTimeSignatureAdjuster # imm = 0x7FC
.LBB78_79:                              #   in Loop: Header=BB78_55 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2032, %ax              # imm = 0x7F0
	xorw	%cx, %ax
	cmpw	$-23543, %ax            # imm = 0xA409
	jne	.LBB78_152
# %bb.80:                               # %proofnumbersearch.split351
                                        #   in Loop: Header=BB78_55 Depth=1
	movl	$1, forcedwin
	movw	$-23543, BasicBlockSignatureTracker # imm = 0xA409
	movw	$1856, RunTimeSignatureAdjuster # imm = 0x740
	jmp	.LBB78_55
.LBB78_81:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1864, %ax              # imm = 0x748
	cmpw	$-23535, %ax            # imm = 0xA411
	jne	.LBB78_155
# %bb.82:                               # %proofnumbersearch.split329
	movl	ply, %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-23535, BasicBlockSignatureTracker # imm = 0xA411
	movw	$0, RunTimeSignatureAdjuster
.LBB78_83:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-23533, %ax            # imm = 0xA413
	jne	.LBB78_149
# %bb.84:                               # %proofnumbersearch.split353
                                        #   in Loop: Header=BB78_83 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movq	(%rbx), %rcx
	movw	$-23533, BasicBlockSignatureTracker # imm = 0xA413
	movw	$0, RunTimeSignatureAdjuster
	cmpq	%rcx, %rax
	je	.LBB78_87
# %bb.85:                               #   in Loop: Header=BB78_83 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-23524, %ax            # imm = 0xA41C
	jne	.LBB78_149
# %bb.86:                               # %proofnumbersearch.split355
                                        #   in Loop: Header=BB78_83 Depth=1
	movq	-56(%rbp), %r14         # 8-byte Reload
	movq	(%r14), %rdi
	addq	$32, %rdi
	movw	$-23524, BasicBlockSignatureTracker # imm = 0xA41C
	movw	$12027, RunTimeSignatureAdjuster # imm = 0x2EFB
	xorl	%esi, %esi
	callq	unmake
	movw	$-23524, BasicBlockSignatureTracker # imm = 0xA41C
	movw	$12027, RunTimeSignatureAdjuster # imm = 0x2EFB
	movq	(%r14), %rax
	movq	24(%rax), %rax
	movq	%rax, (%r14)
	movw	$-23524, BasicBlockSignatureTracker # imm = 0xA41C
	movw	$13, RunTimeSignatureAdjuster
	jmp	.LBB78_83
.LBB78_87:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$36, %ax
	cmpw	$-23497, %ax            # imm = 0xA437
	jne	.LBB78_155
# %bb.88:                               # %proofnumbersearch.split357
	movl	kibitzed, %eax
	movw	$-23497, BasicBlockSignatureTracker # imm = 0xA437
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB78_99
# %bb.89:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-23496, %ax            # imm = 0xA438
	jne	.LBB78_155
# %bb.90:                               # %proofnumbersearch.split361
	movl	xb_mode, %eax
	movw	$-23496, BasicBlockSignatureTracker # imm = 0xA438
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB78_99
# %bb.91:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-19485, %ax            # imm = 0xB3E3
	cmpw	$6107, %ax              # imm = 0x17DB
	jne	.LBB78_155
# %bb.92:                               # %proofnumbersearch.split363
	movw	$6107, BasicBlockSignatureTracker # imm = 0x17DB
	movw	$-19485, RunTimeSignatureAdjuster # imm = 0xB3E3
# %bb.93:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$121, %ax
	xorw	%cx, %ax
	cmpw	$-23487, %ax            # imm = 0xA441
	jne	.LBB78_155
# %bb.94:                               # %proofnumbersearch.split417
	movl	post, %eax
	movw	$-23487, BasicBlockSignatureTracker # imm = 0xA441
	movw	$118, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB78_99
# %bb.95:                               # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3231, %ax             # imm = 0xF361
	cmpw	$22304, %ax             # imm = 0x5720
	jne	.LBB78_155
# %bb.96:                               # %proofnumbersearch.split365
	movw	$22304, BasicBlockSignatureTracker # imm = 0x5720
	movw	$-3231, RunTimeSignatureAdjuster # imm = 0xF361
# %bb.97:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-23484, %ax            # imm = 0xA444
	jne	.LBB78_155
# %bb.98:                               # %proofnumbersearch.split419
	movabsq	$.L.str.11.95, %rdi
	movl	$2, %ecx
	movl	$1, kibitzed
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	cltd
	idivl	%ecx
	movl	%eax, %esi
	movb	$0, %al
	callq	printf
	movw	$-23484, BasicBlockSignatureTracker # imm = 0xA444
	movw	$115, RunTimeSignatureAdjuster
.LBB78_99:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$114, %ax
	xorw	%cx, %ax
	cmpw	$-23483, %ax            # imm = 0xA445
	jne	.LBB78_155
# %bb.100:                              # %proofnumbersearch.split359
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-23483, BasicBlockSignatureTracker # imm = 0xA445
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB78_115
# %bb.101:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-23478, %ax            # imm = 0xA44A
	jne	.LBB78_155
# %bb.102:                              # %proofnumbersearch.split367
	movq	(%rbx), %rax
	movl	4(%rax), %eax
	movw	$-23478, BasicBlockSignatureTracker # imm = 0xA44A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB78_107
# %bb.103:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-23460, %ax            # imm = 0xA45C
	jne	.LBB78_155
# %bb.104:                              # %proofnumbersearch.split373
	movq	(%rbx), %rax
	movl	8(%rax), %eax
	movw	$-23460, BasicBlockSignatureTracker # imm = 0xA45C
	movw	$25, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB78_115
# %bb.105:                              # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-2970, %ax             # imm = 0xF466
	cmpw	$20538, %ax             # imm = 0x503A
	jne	.LBB78_155
# %bb.106:                              # %proofnumbersearch.split375
	movw	$20538, BasicBlockSignatureTracker # imm = 0x503A
	movw	$-2960, RunTimeSignatureAdjuster # imm = 0xF470
.LBB78_107:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$-23444, %ax            # imm = 0xA46C
	jne	.LBB78_155
# %bb.108:                              # %proofnumbersearch.split371
	movl	root_to_move, %eax
	movw	$-23444, BasicBlockSignatureTracker # imm = 0xA46C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB78_111
# %bb.109:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-23438, %ax            # imm = 0xA472
	jne	.LBB78_155
# %bb.110:                              # %proofnumbersearch.split377
	movabsq	$.L.str.12.96, %rdi
	movb	$0, %al
	callq	printf
	movl	$3, result
	movw	$-23438, BasicBlockSignatureTracker # imm = 0xA472
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB78_113
.LBB78_111:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$235, %ax
	cmpw	$-23417, %ax            # imm = 0xA487
	jne	.LBB78_155
# %bb.112:                              # %proofnumbersearch.split379
	movabsq	$.L.str.13.97, %rdi
	movb	$0, %al
	callq	printf
	movl	$2, result
	movw	$-23417, BasicBlockSignatureTracker # imm = 0xA487
	movw	$245, RunTimeSignatureAdjuster
.LBB78_113:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$253, %ax
	xorw	%cx, %ax
	cmpw	$-23409, %ax            # imm = 0xA48F
	jne	.LBB78_155
# %bb.114:                              # %proofnumbersearch.split381
	movw	$-23409, BasicBlockSignatureTracker # imm = 0xA48F
	movw	$202, RunTimeSignatureAdjuster
.LBB78_115:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$221, %ax
	xorw	%cx, %ax
	cmpw	$-23400, %ax            # imm = 0xA498
	jne	.LBB78_155
# %bb.116:                              # %proofnumbersearch.split369
	movabsq	$.L.str.14.98, %rdi
	movb	$0, %al
	callq	printf
	movw	$-23400, BasicBlockSignatureTracker # imm = 0xA498
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB78_125
.LBB78_117:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2046, %ax              # imm = 0x7FE
	cmpw	$-23365, %ax            # imm = 0xA4BB
	jne	.LBB78_155
# %bb.118:                              # %proofnumbersearch.split323
	movq	(%rbx), %rax
	movl	8(%rax), %eax
	movw	$-23365, BasicBlockSignatureTracker # imm = 0xA4BB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB78_121
# %bb.119:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$-23360, %ax            # imm = 0xA4C0
	jne	.LBB78_155
# %bb.120:                              # %proofnumbersearch.split385
	movabsq	$.L.str.15.99, %rdi
	movq	(%rbx), %rax
	movb	$0, (%rax)
	movb	$0, %al
	callq	printf
	movq	dummy, %rax
	movq	%rax, pn_move
	movq	dummy+8, %rax
	movq	%rax, pn_move+8
	movq	dummy+16, %rax
	movq	%rax, pn_move+16
	movw	$-23360, BasicBlockSignatureTracker # imm = 0xA4C0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB78_123
.LBB78_121:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$110, %ax
	cmpw	$-23339, %ax            # imm = 0xA4D5
	jne	.LBB78_155
# %bb.122:                              # %proofnumbersearch.split387
	movabsq	$.L.str.16.100, %rdi
	movq	(%rbx), %rax
	movb	$2, (%rax)
	movb	$0, %al
	callq	printf
	movq	dummy, %rax
	movq	%rax, pn_move
	movq	dummy+8, %rax
	movq	%rax, pn_move+8
	movq	dummy+16, %rax
	movq	%rax, pn_move+16
	movw	$-23339, BasicBlockSignatureTracker # imm = 0xA4D5
	movw	$21, RunTimeSignatureAdjuster
.LBB78_123:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$36, %ax
	xorw	%cx, %ax
	cmpw	$-23324, %ax            # imm = 0xA4E4
	jne	.LBB78_155
# %bb.124:                              # %proofnumbersearch.split389
	movw	$-23324, BasicBlockSignatureTracker # imm = 0xA4E4
	movw	$124, RunTimeSignatureAdjuster
.LBB78_125:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$401, %ax               # imm = 0x191
	xorw	%cx, %ax
	cmpw	$-23287, %ax            # imm = 0xA509
	jne	.LBB78_155
# %bb.126:                              # %proofnumbersearch.split383
	movss	.LCPI78_2(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movq	-72(%rbp), %rax         # 8-byte Reload
	movss	%xmm0, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-23287, BasicBlockSignatureTracker # imm = 0xA509
	movw	$0, RunTimeSignatureAdjuster
.LBB78_127:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$-23255, %ax            # imm = 0xA529
	jne	.LBB78_148
# %bb.128:                              # %proofnumbersearch.split391
                                        #   in Loop: Header=BB78_127 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	(%rbx), %rcx
	movzbl	1(%rcx), %ecx
	movw	$-23255, BasicBlockSignatureTracker # imm = 0xA529
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB78_143
# %bb.129:                              #   in Loop: Header=BB78_127 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-23251, %ax            # imm = 0xA52D
	jne	.LBB78_148
# %bb.130:                              # %proofnumbersearch.split393
                                        #   in Loop: Header=BB78_127 Depth=1
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	movw	$-23251, BasicBlockSignatureTracker # imm = 0xA52D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB78_137
# %bb.131:                              #   in Loop: Header=BB78_127 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-23239, %ax            # imm = 0xA539
	jne	.LBB78_148
# %bb.132:                              # %proofnumbersearch.split397
                                        #   in Loop: Header=BB78_127 Depth=1
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	cvtsi2ssl	%eax, %xmm0
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movslq	(%rdx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	cvtsi2ssl	%eax, %xmm1
	divss	%xmm1, %xmm0
	movq	-72(%rbp), %rax         # 8-byte Reload
	movss	(%rax), %xmm1           # xmm1 = mem[0],zero,zero,zero
	movw	$-23239, BasicBlockSignatureTracker # imm = 0xA539
	movw	$0, RunTimeSignatureAdjuster
	ucomiss	%xmm1, %xmm0
	jbe	.LBB78_135
# %bb.133:                              #   in Loop: Header=BB78_127 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$110, %ax
	cmpw	$-23209, %ax            # imm = 0xA557
	jne	.LBB78_148
# %bb.134:                              # %proofnumbersearch.split401
                                        #   in Loop: Header=BB78_127 Depth=1
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	8(%rax), %eax
	cvtsi2ssl	%eax, %xmm0
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movslq	(%rdx), %rcx
	movq	(%rax,%rcx,8), %rax
	movl	4(%rax), %eax
	cvtsi2ssl	%eax, %xmm1
	divss	%xmm1, %xmm0
	movq	-72(%rbp), %rax         # 8-byte Reload
	movss	%xmm0, (%rax)
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movslq	(%rdx), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	32(%rax), %rcx
	movq	%rcx, pn_move
	movq	40(%rax), %rcx
	movq	%rcx, pn_move+8
	movq	48(%rax), %rax
	movq	%rax, pn_move+16
	movw	$-23209, BasicBlockSignatureTracker # imm = 0xA557
	movw	$110, RunTimeSignatureAdjuster
.LBB78_135:                             #   in Loop: Header=BB78_127 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$94, %ax
	xorw	%cx, %ax
	cmpw	$-23193, %ax            # imm = 0xA567
	jne	.LBB78_148
# %bb.136:                              # %proofnumbersearch.split403
                                        #   in Loop: Header=BB78_127 Depth=1
	movw	$-23193, BasicBlockSignatureTracker # imm = 0xA567
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB78_139
.LBB78_137:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$68, %ax
	cmpw	$-23191, %ax            # imm = 0xA569
	jne	.LBB78_155
# %bb.138:                              # %proofnumbersearch.split399
	movq	(%rbx), %rax
	movq	16(%rax), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	(%rax,%rcx,8), %rax
	movq	32(%rax), %rcx
	movq	%rcx, pn_move
	movq	40(%rax), %rcx
	movq	%rcx, pn_move+8
	movq	48(%rax), %rax
	movq	%rax, pn_move+16
	movw	$-23191, BasicBlockSignatureTracker # imm = 0xA569
	movw	$64, RunTimeSignatureAdjuster
	jmp	.LBB78_144
.LBB78_139:                             #   in Loop: Header=BB78_127 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$231, %ax
	cmpw	$-23168, %ax            # imm = 0xA580
	jne	.LBB78_148
# %bb.140:                              # %proofnumbersearch.split405
                                        #   in Loop: Header=BB78_127 Depth=1
	movw	$-23168, BasicBlockSignatureTracker # imm = 0xA580
	movw	$0, RunTimeSignatureAdjuster
# %bb.141:                              #   in Loop: Header=BB78_127 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-23167, %ax            # imm = 0xA581
	jne	.LBB78_148
# %bb.142:                              # %proofnumbersearch.split407
                                        #   in Loop: Header=BB78_127 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-23167, BasicBlockSignatureTracker # imm = 0xA581
	movw	$136, RunTimeSignatureAdjuster
	jmp	.LBB78_127
.LBB78_143:                             # %.loopexit
	jmp	.LBB78_144
.LBB78_144:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$173, %ax
	xorw	%cx, %ax
	cmpw	$-23164, %ax            # imm = 0xA584
	jne	.LBB78_155
# %bb.145:                              # %proofnumbersearch.split395
	movq	pn_move, %rax
	movq	%rax, pn_saver
	movq	pn_move+8, %rax
	movq	%rax, pn_saver+8
	movq	pn_move+16, %rax
	movq	%rax, pn_saver+16
	movq	(%rbx), %rdi
	callq	free
	movw	$-23164, BasicBlockSignatureTracker # imm = 0xA584
	movw	$14984, RunTimeSignatureAdjuster # imm = 0x3A88
	callq	Xfree
	movw	$-23164, BasicBlockSignatureTracker # imm = 0xA584
	movw	$14984, RunTimeSignatureAdjuster # imm = 0x3A88
	movq	membuff, %rdi
	callq	free
	movw	$-23164, BasicBlockSignatureTracker # imm = 0xA584
	movw	$2029, RunTimeSignatureAdjuster # imm = 0x7ED
.LBB78_146:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2037, %ax              # imm = 0x7F5
	xorw	%cx, %ax
	cmpw	$-23140, %ax            # imm = 0xA59C
	jne	.LBB78_155
# %bb.147:                              # %proofnumbersearch.split281
	movw	$-23140, BasicBlockSignatureTracker # imm = 0xA59C
	movw	$16798, RunTimeSignatureAdjuster # imm = 0x419E
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB78_148:                             # %CFerrorHandler.proofnumbersearch.loopexit
	jmp	.LBB78_155
.LBB78_149:                             # %CFerrorHandler.proofnumbersearch.loopexit1
	jmp	.LBB78_155
.LBB78_150:                             # %CFerrorHandler.proofnumbersearch.loopexit2
	jmp	.LBB78_155
.LBB78_151:                             # %CFerrorHandler.proofnumbersearch.loopexit3
	jmp	.LBB78_155
.LBB78_152:                             # %CFerrorHandler.proofnumbersearch.loopexit4
	jmp	.LBB78_155
.LBB78_153:                             # %CFerrorHandler.proofnumbersearch.loopexit5
	jmp	.LBB78_155
.LBB78_154:                             # %CFerrorHandler.proofnumbersearch.loopexit6
	jmp	.LBB78_155
.LBB78_155:                             # %CFerrorHandler.proofnumbersearch
	callq	FAULT_DETECTED_CFC
.Lfunc_end78:
	.size	proofnumbersearch, .Lfunc_end78-proofnumbersearch
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function proofnumbercheck
.LCPI79_0:
	.long	1233125376              # float 1048576
	.text
	.globl	proofnumbercheck
	.p2align	4, 0x90
	.type	proofnumbercheck,@function
proofnumbercheck:                       # @proofnumbercheck
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	leaq	16(%rbp), %rdx
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25448, %ax             # imm = 0x6368
	xorw	%cx, %ax
	cmpw	$-23114, %ax            # imm = 0xA5B6
	jne	.LBB79_57
# %bb.1:                                # %proofnumbercheck.split145
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r12
	addq	$-32, %r12
	movq	%r12, %rsp
	movl	piece_count, %eax
	movw	$-23114, BasicBlockSignatureTracker # imm = 0xA5B6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jg	.LBB79_8
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$-23091, %ax            # imm = 0xA5CD
	jne	.LBB79_57
# %bb.3:                                # %proofnumbercheck.split
	movl	Variant, %eax
	movw	$-23091, BasicBlockSignatureTracker # imm = 0xA5CD
	movw	$123, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB79_8
# %bb.4:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-23729, %ax            # imm = 0xA34F
	cmpw	$1666, %ax              # imm = 0x682
	jne	.LBB79_57
# %bb.5:                                # %proofnumbercheck.split103
	movw	$1666, BasicBlockSignatureTracker # imm = 0x682
	movw	$-23729, RunTimeSignatureAdjuster # imm = 0xA34F
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$-23087, %ax            # imm = 0xA5D1
	jne	.LBB79_57
# %bb.7:                                # %proofnumbercheck.split147
	movq	(%rdx), %rax
	movq	%rax, (%rdi)
	movq	8(%rdx), %rax
	movq	%rax, 8(%rdi)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rdi)
	movw	$-23087, BasicBlockSignatureTracker # imm = 0xA5D1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB79_53
.LBB79_8:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$101, %ax
	xorw	%cx, %ax
	cmpw	$-23085, %ax            # imm = 0xA5D3
	jne	.LBB79_57
# %bb.9:                                # %proofnumbercheck.split101
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movl	$0, nodecount
	movl	$0, iters
	movl	$0, frees
	movl	$1, ply
	movl	$0, maxply
	movw	$-23085, BasicBlockSignatureTracker # imm = 0xA5D3
	movw	$12131, RunTimeSignatureAdjuster # imm = 0x2F63
	movq	%rdx, %rdi
	xorl	%esi, %esi
	callq	make
	movl	$1, %eax
	xorl	%ecx, %ecx
	movw	$-23085, BasicBlockSignatureTracker # imm = 0xA5D3
	movw	$12131, RunTimeSignatureAdjuster # imm = 0x2F63
	movl	hash, %edx
	movl	move_number, %esi
	addl	ply, %esi
	subl	$1, %esi
	movslq	%esi, %rsi
	movl	%edx, hash_history(,%rsi,4)
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movl	%eax, root_to_move
	movw	$-23085, BasicBlockSignatureTracker # imm = 0xA5D3
	movw	$-20333, RunTimeSignatureAdjuster # imm = 0xB093
	callq	rtime
	movw	$-23085, BasicBlockSignatureTracker # imm = 0xA5D3
	movw	$-20333, RunTimeSignatureAdjuster # imm = 0xB093
	movq	%rax, (%r15)
	movl	$1, %edi
	movl	$56, %esi
	callq	calloc
	movq	%rax, (%r13)
	movslq	PBSize, %rdi
	movl	$56, %esi
	callq	calloc
	movq	%rax, membuff
	movq	(%r13), %rdi
	movw	$-23085, BasicBlockSignatureTracker # imm = 0xA5D3
	movw	$14460, RunTimeSignatureAdjuster # imm = 0x387C
	callq	pn_eval
	movw	$-23085, BasicBlockSignatureTracker # imm = 0xA5D3
	movw	$14460, RunTimeSignatureAdjuster # imm = 0x387C
	movq	(%r13), %rdi
	movw	$-23085, BasicBlockSignatureTracker # imm = 0xA5D3
	movw	$14460, RunTimeSignatureAdjuster # imm = 0x387C
	callq	set_proof_and_disproof_numbers
	movw	$-23085, BasicBlockSignatureTracker # imm = 0xA5D3
	movw	$14460, RunTimeSignatureAdjuster # imm = 0x387C
	movq	(%r13), %rax
	movq	%rax, (%rbx)
	movw	$-23085, BasicBlockSignatureTracker # imm = 0xA5D3
	movw	$0, RunTimeSignatureAdjuster
.LBB79_10:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-23073, %ax            # imm = 0xA5DF
	jne	.LBB79_56
# %bb.11:                               # %proofnumbercheck.split107
                                        #   in Loop: Header=BB79_10 Depth=1
	xorl	%eax, %eax
	movq	(%r13), %rcx
	movl	4(%rcx), %ecx
	movw	$-23073, BasicBlockSignatureTracker # imm = 0xA5DF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB79_18
# %bb.12:                               #   in Loop: Header=BB79_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$-23063, %ax            # imm = 0xA5E9
	jne	.LBB79_56
# %bb.13:                               # %proofnumbercheck.split109
                                        #   in Loop: Header=BB79_10 Depth=1
	xorl	%eax, %eax
	movq	(%r13), %rcx
	movl	8(%rcx), %ecx
	movw	$-23063, BasicBlockSignatureTracker # imm = 0xA5E9
	movw	$54, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB79_18
# %bb.14:                               # %Buffer__1
                                        #   in Loop: Header=BB79_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-10180, %ax            # imm = 0xD83C
	cmpw	$32213, %ax             # imm = 0x7DD5
	jne	.LBB79_56
# %bb.15:                               # %proofnumbercheck.split113
                                        #   in Loop: Header=BB79_10 Depth=1
	movw	$32213, BasicBlockSignatureTracker # imm = 0x7DD5
	movw	$-10180, RunTimeSignatureAdjuster # imm = 0xD83C
# %bb.16:                               #   in Loop: Header=BB79_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-23054, %ax            # imm = 0xA5F2
	jne	.LBB79_56
# %bb.17:                               # %proofnumbercheck.split149
                                        #   in Loop: Header=BB79_10 Depth=1
	movl	bufftop, %eax
	movl	PBSize, %ecx
	subl	$10000, %ecx            # imm = 0x2710
	movslq	%ecx, %rcx
	imulq	$56, %rcx, %rcx
	cmpq	%rcx, %rax
	setb	%al
	movw	$-23054, BasicBlockSignatureTracker # imm = 0xA5F2
	movw	$45, RunTimeSignatureAdjuster
.LBB79_18:                              #   in Loop: Header=BB79_10 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$43, %cx
	xorw	%dx, %cx
	cmpw	$-23052, %cx            # imm = 0xA5F4
	jne	.LBB79_56
# %bb.19:                               # %proofnumbercheck.split111
                                        #   in Loop: Header=BB79_10 Depth=1
	movw	$-23052, BasicBlockSignatureTracker # imm = 0xA5F4
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB79_20
	jmp	.LBB79_30
.LBB79_20:                              #   in Loop: Header=BB79_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-23051, %ax            # imm = 0xA5F5
	jne	.LBB79_56
# %bb.21:                               # %proofnumbercheck.split115
                                        #   in Loop: Header=BB79_10 Depth=1
	movq	(%rbx), %rdi
	movw	$-23051, BasicBlockSignatureTracker # imm = 0xA5F5
	movw	$15194, RunTimeSignatureAdjuster # imm = 0x3B5A
	callq	select_most_proving
	movw	$-23051, BasicBlockSignatureTracker # imm = 0xA5F5
	movw	$15194, RunTimeSignatureAdjuster # imm = 0x3B5A
	movq	%rax, (%r14)
	movq	(%r14), %rdi
	movw	$-23051, BasicBlockSignatureTracker # imm = 0xA5F5
	movw	$-5749, RunTimeSignatureAdjuster # imm = 0xE98B
	callq	develop_node
	movw	$-23051, BasicBlockSignatureTracker # imm = 0xA5F5
	movw	$-5749, RunTimeSignatureAdjuster # imm = 0xE98B
	movq	(%r14), %rdi
	movw	$-23051, BasicBlockSignatureTracker # imm = 0xA5F5
	movw	$15194, RunTimeSignatureAdjuster # imm = 0x3B5A
	callq	update_ancestors
	movl	$32, %ecx
	movw	$-23051, BasicBlockSignatureTracker # imm = 0xA5F5
	movw	$15194, RunTimeSignatureAdjuster # imm = 0x3B5A
	movl	iters, %eax
	addl	$1, %eax
	movl	%eax, iters
	movl	iters, %eax
	cltd
	idivl	%ecx
	movw	$-23051, BasicBlockSignatureTracker # imm = 0xA5F5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jne	.LBB79_28
# %bb.22:                               #   in Loop: Header=BB79_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$996, %ax               # imm = 0x3E4
	cmpw	$-23023, %ax            # imm = 0xA611
	jne	.LBB79_56
# %bb.23:                               # %proofnumbercheck.split119
                                        #   in Loop: Header=BB79_10 Depth=1
	movw	$-23023, BasicBlockSignatureTracker # imm = 0xA611
	movw	$-19631, RunTimeSignatureAdjuster # imm = 0xB351
	callq	rtime
	movw	$-23023, BasicBlockSignatureTracker # imm = 0xA611
	movw	$-19631, RunTimeSignatureAdjuster # imm = 0xB351
	movq	(%r15), %rsi
	movw	$-23023, BasicBlockSignatureTracker # imm = 0xA611
	movw	$14678, RunTimeSignatureAdjuster # imm = 0x3956
	movq	%rax, %rdi
	callq	rdifftime
	movw	$-23023, BasicBlockSignatureTracker # imm = 0xA611
	movw	$14678, RunTimeSignatureAdjuster # imm = 0x3956
	movl	pn_time, %ecx
	movw	$-23023, BasicBlockSignatureTracker # imm = 0xA611
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB79_26
# %bb.24:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-23000, %ax            # imm = 0xA628
	jne	.LBB79_57
# %bb.25:                               # %proofnumbercheck.split123
	movw	$-23000, BasicBlockSignatureTracker # imm = 0xA628
	movw	$988, RunTimeSignatureAdjuster # imm = 0x3DC
	jmp	.LBB79_31
.LBB79_26:                              #   in Loop: Header=BB79_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$33, %ax
	cmpw	$-22992, %ax            # imm = 0xA630
	jne	.LBB79_56
# %bb.27:                               # %proofnumbercheck.split125
                                        #   in Loop: Header=BB79_10 Depth=1
	movw	$-22992, BasicBlockSignatureTracker # imm = 0xA630
	movw	$965, RunTimeSignatureAdjuster # imm = 0x3C5
.LBB79_28:                              #   in Loop: Header=BB79_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$967, %ax               # imm = 0x3C7
	xorw	%cx, %ax
	cmpw	$-22990, %ax            # imm = 0xA632
	jne	.LBB79_56
# %bb.29:                               # %proofnumbercheck.split121
                                        #   in Loop: Header=BB79_10 Depth=1
	movw	$-22990, BasicBlockSignatureTracker # imm = 0xA632
	movw	$993, RunTimeSignatureAdjuster # imm = 0x3E1
	jmp	.LBB79_10
.LBB79_30:                              # %.loopexit
	jmp	.LBB79_31
.LBB79_31:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$960, %ax               # imm = 0x3C0
	xorw	%cx, %ax
	cmpw	$-22988, %ax            # imm = 0xA634
	jne	.LBB79_57
# %bb.32:                               # %proofnumbercheck.split117
	movabsq	$.L.str.17.101, %rdi
	movss	.LCPI79_0(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movq	(%r13), %rax
	movl	4(%rax), %esi
	movl	8(%rax), %edx
	movslq	nodecount(%rip), %rcx
	movl	frees(%rip), %r8d
	imulq	$56, %rcx, %r9
	cvtsi2ssq	%r9, %xmm2
	movq	%r9, %rax
	shrq	%rax
	cvtsi2ssq	%rax, %xmm1
	addss	%xmm1, %xmm1
	testq	%r9, %r9
	js	.LBB79_34
# %bb.33:                               # %proofnumbercheck.split117
	movaps	%xmm2, %xmm1
.LBB79_34:                              # %proofnumbercheck.split117
	divss	%xmm0, %xmm1
	cvtss2sd	%xmm1, %xmm0
	movl	iters, %r9d
                                        # kill: def %ecx killed %ecx killed %rcx
	movb	$1, %al
	callq	printf
	movw	$-22988, BasicBlockSignatureTracker # imm = 0xA634
	movw	$0, RunTimeSignatureAdjuster
.LBB79_35:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-22986, %ax            # imm = 0xA636
	leaq	16(%rbp), %rdi
	jne	.LBB79_55
# %bb.36:                               # %proofnumbercheck.split127
                                        #   in Loop: Header=BB79_35 Depth=1
	movq	(%rbx), %rax
	movq	(%r13), %rcx
	movw	$-22986, BasicBlockSignatureTracker # imm = 0xA636
	movw	$0, RunTimeSignatureAdjuster
	cmpq	%rcx, %rax
	je	.LBB79_39
# %bb.37:                               #   in Loop: Header=BB79_35 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-22982, %ax            # imm = 0xA63A
	jne	.LBB79_55
# %bb.38:                               # %proofnumbercheck.split129
                                        #   in Loop: Header=BB79_35 Depth=1
	movq	(%rbx), %rdi
	addq	$32, %rdi
	movw	$-22982, BasicBlockSignatureTracker # imm = 0xA63A
	movw	$11485, RunTimeSignatureAdjuster # imm = 0x2CDD
	xorl	%esi, %esi
	callq	unmake
	movw	$-22982, BasicBlockSignatureTracker # imm = 0xA63A
	movw	$11485, RunTimeSignatureAdjuster # imm = 0x2CDD
	movq	(%rbx), %rax
	movq	24(%rax), %rax
	movq	%rax, (%rbx)
	movw	$-22982, BasicBlockSignatureTracker # imm = 0xA63A
	movw	$14, RunTimeSignatureAdjuster
	jmp	.LBB79_35
.LBB79_39:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$-22974, %ax            # imm = 0xA642
	jne	.LBB79_57
# %bb.40:                               # %proofnumbercheck.split131
	movw	$-22974, BasicBlockSignatureTracker # imm = 0xA642
	movw	$11429, RunTimeSignatureAdjuster # imm = 0x2CA5
	xorl	%esi, %esi
	callq	unmake
	movw	$-22974, BasicBlockSignatureTracker # imm = 0xA642
	movw	$11429, RunTimeSignatureAdjuster # imm = 0x2CA5
	movq	(%r13), %rax
	movl	4(%rax), %eax
	movw	$-22974, BasicBlockSignatureTracker # imm = 0xA642
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB79_43
# %bb.41:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-22960, %ax            # imm = 0xA650
	jne	.LBB79_57
# %bb.42:                               # %proofnumbercheck.split133
	movq	(%r13), %rax
	movb	$1, (%rax)
	movq	pn_move, %rax
	movq	%rax, (%r12)
	movq	pn_move+8, %rax
	movq	%rax, 8(%r12)
	movq	pn_move+16, %rax
	movq	%rax, 16(%r12)
	movl	$1, s_threat
	movw	$-22960, BasicBlockSignatureTracker # imm = 0xA650
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB79_51
.LBB79_43:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-22956, %ax            # imm = 0xA654
	leaq	16(%rbp), %rcx
	jne	.LBB79_57
# %bb.44:                               # %proofnumbercheck.split135
	movq	(%r13), %rax
	movl	8(%rax), %eax
	movw	$-22956, BasicBlockSignatureTracker # imm = 0xA654
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB79_47
# %bb.45:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-22950, %ax            # imm = 0xA65A
	jne	.LBB79_57
# %bb.46:                               # %proofnumbercheck.split139
	movq	(%r13), %rax
	movb	$0, (%rax)
	movq	(%rcx), %rax
	movq	%rax, (%r12)
	movq	8(%rcx), %rax
	movq	%rax, 8(%r12)
	movq	16(%rcx), %rax
	movq	%rax, 16(%r12)
	movw	$-22950, BasicBlockSignatureTracker # imm = 0xA65A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB79_49
.LBB79_47:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-22931, %ax            # imm = 0xA66D
	jne	.LBB79_57
# %bb.48:                               # %proofnumbercheck.split141
	movq	(%r13), %rax
	movb	$2, (%rax)
	movq	(%rcx), %rax
	movq	%rax, (%r12)
	movq	8(%rcx), %rax
	movq	%rax, 8(%r12)
	movq	16(%rcx), %rax
	movq	%rax, 16(%r12)
	movw	$-22931, BasicBlockSignatureTracker # imm = 0xA66D
	movw	$55, RunTimeSignatureAdjuster
.LBB79_49:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$-22916, %ax            # imm = 0xA67C
	jne	.LBB79_57
# %bb.50:                               # %proofnumbercheck.split143
	movw	$-22916, BasicBlockSignatureTracker # imm = 0xA67C
	movw	$44, RunTimeSignatureAdjuster
.LBB79_51:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$-22915, %ax            # imm = 0xA67D
	jne	.LBB79_57
# %bb.52:                               # %proofnumbercheck.split137
	movw	$-22915, BasicBlockSignatureTracker # imm = 0xA67D
	movw	$14705, RunTimeSignatureAdjuster # imm = 0x3971
	callq	Xfree
	movw	$-22915, BasicBlockSignatureTracker # imm = 0xA67D
	movw	$14705, RunTimeSignatureAdjuster # imm = 0x3971
	movq	(%r13), %rdi
	callq	free
	movq	membuff, %rdi
	callq	free
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	(%r12), %rax
	movq	%rax, (%rdi)
	movq	8(%r12), %rax
	movq	%rax, 8(%rdi)
	movq	16(%r12), %rax
	movq	%rax, 16(%rdi)
	movw	$-22915, BasicBlockSignatureTracker # imm = 0xA67D
	movw	$940, RunTimeSignatureAdjuster # imm = 0x3AC
.LBB79_53:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$860, %ax               # imm = 0x35C
	xorw	%cx, %ax
	cmpw	$-22899, %ax            # imm = 0xA68D
	jne	.LBB79_57
# %bb.54:                               # %proofnumbercheck.split105
	movw	$-22899, BasicBlockSignatureTracker # imm = 0xA68D
	movw	$24657, RunTimeSignatureAdjuster # imm = 0x6051
	movq	%rdi, %rax
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB79_55:                              # %CFerrorHandler.proofnumbercheck.loopexit
	jmp	.LBB79_57
.LBB79_56:                              # %CFerrorHandler.proofnumbercheck.loopexit1
	jmp	.LBB79_57
.LBB79_57:                              # %CFerrorHandler.proofnumbercheck
	callq	FAULT_DETECTED_CFC
.Lfunc_end79:
	.size	proofnumbercheck, .Lfunc_end79-proofnumbercheck
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function read_rcfile
.LCPI80_0:
	.long	1065353216              # float 1
	.text
	.globl	read_rcfile
	.p2align	4, 0x90
	.type	read_rcfile,@function
read_rcfile:                            # @read_rcfile
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-20079, %ax            # imm = 0xB191
	xorw	%cx, %ax
	cmpw	$-22882, %ax            # imm = 0xA69E
	jne	.LBB80_2
# %bb.1:                                # %read_rcfile.split
	movabsq	$setcode, %rdi
	movabsq	$.L.str.112, %rsi
	movss	.LCPI80_0(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	$3000000, TTSize        # imm = 0x2DC6C0
	movl	$1000000, ECacheSize    # imm = 0xF4240
	movl	$200000, PBSize         # imm = 0x30D40
	movl	$1, cfg_devscale
	movss	%xmm0, cfg_scalefac
	movl	$1, cfg_razordrop
	movl	$0, cfg_cutdrop
	movl	$1, cfg_futprune
	movl	$1, cfg_smarteval
	movl	$0, cfg_attackeval
	movl	$1, cfg_onerep
	movl	$0, cfg_recap
	movl	$0, havercfile
	movl	havercfile, %ecx
	movl	cfg_devscale, %edx
	shll	$1, %edx
	addl	%edx, %ecx
	addl	$4, %ecx
	movl	cfg_razordrop, %edx
	shll	$3, %edx
	addl	%edx, %ecx
	movl	cfg_cutdrop, %edx
	shll	$4, %edx
	addl	%edx, %ecx
	movl	cfg_futprune, %edx
	shll	$5, %edx
	addl	%edx, %ecx
	movl	cfg_smarteval, %edx
	shll	$6, %edx
	addl	%edx, %ecx
	movl	cfg_attackeval, %edx
	shll	$7, %edx
	addl	%edx, %ecx
	movl	%ecx, (%rax)
	movl	(%rax), %edx
	movb	$0, %al
	callq	sprintf
	movw	$-22882, BasicBlockSignatureTracker # imm = 0xA69E
	movw	$0, RunTimeSignatureAdjuster
	callq	initialize_eval
	movw	$-22882, BasicBlockSignatureTracker # imm = 0xA69E
	movw	$0, RunTimeSignatureAdjuster
	movw	$-22882, BasicBlockSignatureTracker # imm = 0xA69E
	movw	$0, RunTimeSignatureAdjuster
	callq	alloc_hash
	movw	$-22882, BasicBlockSignatureTracker # imm = 0xA69E
	movw	$0, RunTimeSignatureAdjuster
	movw	$-22882, BasicBlockSignatureTracker # imm = 0xA69E
	movw	$0, RunTimeSignatureAdjuster
	callq	alloc_ecache
	movw	$-22882, BasicBlockSignatureTracker # imm = 0xA69E
	movw	$0, RunTimeSignatureAdjuster
	movw	$-22882, BasicBlockSignatureTracker # imm = 0xA69E
	movw	$0, RunTimeSignatureAdjuster
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB80_2:                               # %CFerrorHandler.read_rcfile
	callq	FAULT_DETECTED_CFC
.Lfunc_end80:
	.size	read_rcfile, .Lfunc_end80-read_rcfile
	.cfi_endproc
                                        # -- End function
	.globl	order_moves             # -- Begin function order_moves
	.p2align	4, 0x90
	.type	order_moves,@function
order_moves:                            # @order_moves
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$56, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$2862, %ax              # imm = 0xB2E
	xorw	%bx, %ax
	cmpw	$-22869, %ax            # imm = 0xA6AB
	jne	.LBB81_284
# %bb.1:                                # %order_moves.split815
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$2862, %ax              # imm = 0xB2E
	xorw	%bx, %ax
	cmpw	$-22869, %ax            # imm = 0xA6AB
	jne	.LBB81_284
# %bb.2:                                # %order_moves.split813
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$2862, %ax              # imm = 0xB2E
	xorw	%bx, %ax
	cmpw	$-22869, %ax            # imm = 0xA6AB
	jne	.LBB81_284
# %bb.3:                                # %order_moves.split811
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rdi, (%r14)
	movq	%rsi, (%r9)
	movq	%rdx, (%r11)
	movl	%ecx, (%r13)
	movl	%r8d, (%r15)
	movl	searching_pv, %eax
	movw	$-22869, BasicBlockSignatureTracker # imm = 0xA6AB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB81_164
# %bb.4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-22861, %ax            # imm = 0xA6B3
	jne	.LBB81_284
# %bb.5:                                # %order_moves.split
	movq	%rbx, -64(%rbp)         # 8-byte Spill
	movq	%r10, -96(%rbp)         # 8-byte Spill
	movq	%r11, -80(%rbp)         # 8-byte Spill
	movq	%r9, -56(%rbp)          # 8-byte Spill
	movl	$0, searching_pv
	movl	$0, (%r12)
	movw	$-22861, BasicBlockSignatureTracker # imm = 0xA6B3
	movw	$0, RunTimeSignatureAdjuster
.LBB81_6:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-22859, %ax            # imm = 0xA6B5
	jne	.LBB81_282
# %bb.7:                                # %order_moves.split581
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	(%r12), %eax
	movl	(%r13), %ecx
	movw	$-22859, BasicBlockSignatureTracker # imm = 0xA6B5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB81_162
# %bb.8:                                #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$122, %ax
	cmpw	$-22833, %ax            # imm = 0xA6CF
	jne	.LBB81_282
# %bb.9:                                # %order_moves.split583
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	4(%rax), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	12(%rax), %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	8(%rax), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$-22833, BasicBlockSignatureTracker # imm = 0xA6CF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB81_24
# %bb.10:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-22830, %ax            # imm = 0xA6D2
	jne	.LBB81_282
# %bb.11:                               # %order_moves.split587
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	addl	$15, %ebx
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movw	$-22830, BasicBlockSignatureTracker # imm = 0xA6D2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jl	.LBB81_14
# %bb.12:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-22818, %ax            # imm = 0xA6DE
	jne	.LBB81_282
# %bb.13:                               # %order_moves.split591
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	sarl	$4, %eax
	subl	%eax, %ebx
	movq	-80(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rax
	movslq	(%r12), %rcx
	movl	%ebx, (%rax,%rcx,4)
	movq	(%rdx), %rax
	movslq	(%r12), %rcx
	movl	(%rax,%rcx,4), %eax
	addl	$50000000, %eax         # imm = 0x2FAF080
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-22818, BasicBlockSignatureTracker # imm = 0xA6DE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_22
.LBB81_14:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-22813, %ax            # imm = 0xA6E3
	jne	.LBB81_282
# %bb.15:                               # %order_moves.split593
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	$1, %edi
	xorl	%eax, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-22813, BasicBlockSignatureTracker # imm = 0xA6E3
	movw	$0, RunTimeSignatureAdjuster
	callq	see
	movw	$-22813, BasicBlockSignatureTracker # imm = 0xA6E3
	movw	$0, RunTimeSignatureAdjuster
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$-22813, BasicBlockSignatureTracker # imm = 0xA6E3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-50, %eax
	jl	.LBB81_18
# %bb.16:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$481, %ax               # imm = 0x1E1
	cmpw	$-22782, %ax            # imm = 0xA702
	jne	.LBB81_282
# %bb.17:                               # %order_moves.split597
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$50000000, %eax         # imm = 0x2FAF080
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-22782, BasicBlockSignatureTracker # imm = 0xA702
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_20
.LBB81_18:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$492, %ax               # imm = 0x1EC
	cmpw	$-22769, %ax            # imm = 0xA70F
	jne	.LBB81_282
# %bb.19:                               # %order_moves.split599
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-22769, BasicBlockSignatureTracker # imm = 0xA70F
	movw	$13, RunTimeSignatureAdjuster
.LBB81_20:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$-22761, %ax            # imm = 0xA717
	jne	.LBB81_282
# %bb.21:                               # %order_moves.split601
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-22761, BasicBlockSignatureTracker # imm = 0xA717
	movw	$457, RunTimeSignatureAdjuster # imm = 0x1C9
.LBB81_22:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$500, %ax               # imm = 0x1F4
	xorw	%cx, %ax
	cmpw	$-22742, %ax            # imm = 0xA72A
	jne	.LBB81_282
# %bb.23:                               # %order_moves.split595
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22742, BasicBlockSignatureTracker # imm = 0xA72A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_26
.LBB81_24:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$407, %ax               # imm = 0x197
	cmpw	$-22696, %ax            # imm = 0xA758
	jne	.LBB81_282
# %bb.25:                               # %order_moves.split589
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	$0, (%rax,%rcx,4)
	movw	$-22696, BasicBlockSignatureTracker # imm = 0xA758
	movw	$114, RunTimeSignatureAdjuster
.LBB81_26:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$64, %ax
	xorw	%cx, %ax
	cmpw	$-22678, %ax            # imm = 0xA76A
	jne	.LBB81_282
# %bb.27:                               # %order_moves.split603
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$pv, %rax
	addq	$7200, %rax             # imm = 0x1C20
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-22678, BasicBlockSignatureTracker # imm = 0xA76A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_48
# %bb.28:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-22665, %ax            # imm = 0xA777
	jne	.LBB81_282
# %bb.29:                               # %order_moves.split605
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$pv, %rax
	addq	$7200, %rax             # imm = 0x1C20
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-22665, BasicBlockSignatureTracker # imm = 0xA777
	movw	$29, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_48
# %bb.30:                               # %Buffer__
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-23289, %ax            # imm = 0xA507
	cmpw	$624, %ax               # imm = 0x270
	jne	.LBB81_282
# %bb.31:                               # %order_moves.split609
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$624, BasicBlockSignatureTracker # imm = 0x270
	movw	$-23289, RunTimeSignatureAdjuster # imm = 0xA507
# %bb.32:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$245, %ax
	xorw	%cx, %ax
	cmpw	$-22654, %ax            # imm = 0xA782
	jne	.LBB81_282
# %bb.33:                               # %order_moves.split817
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$pv, %rax
	addq	$7200, %rax             # imm = 0x1C20
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-22654, BasicBlockSignatureTracker # imm = 0xA782
	movw	$232, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_48
# %bb.34:                               # %Buffer__1
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$998, %ax               # imm = 0x3E6
	cmpw	$-23452, %ax            # imm = 0xA464
	jne	.LBB81_282
# %bb.35:                               # %order_moves.split611
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-23452, BasicBlockSignatureTracker # imm = 0xA464
	movw	$998, RunTimeSignatureAdjuster # imm = 0x3E6
# %bb.36:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-22650, %ax            # imm = 0xA786
	jne	.LBB81_282
# %bb.37:                               # %order_moves.split819
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	$1, searching_pv
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	$100000000, (%rax,%rcx,4) # imm = 0x5F5E100
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-22650, BasicBlockSignatureTracker # imm = 0xA786
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB81_46
# %bb.38:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-22640, %ax            # imm = 0xA790
	jne	.LBB81_282
# %bb.39:                               # %order_moves.split613
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	addl	$15, %ebx
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movw	$-22640, BasicBlockSignatureTracker # imm = 0xA790
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jl	.LBB81_42
# %bb.40:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-22639, %ax            # imm = 0xA791
	jne	.LBB81_282
# %bb.41:                               # %order_moves.split617
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	sarl	$4, %eax
	subl	%eax, %ebx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	%ebx, (%rax,%rcx,4)
	movw	$-22639, BasicBlockSignatureTracker # imm = 0xA791
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_44
.LBB81_42:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-22627, %ax            # imm = 0xA79D
	jne	.LBB81_282
# %bb.43:                               # %order_moves.split619
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	$1, %edi
	xorl	%eax, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-22627, BasicBlockSignatureTracker # imm = 0xA79D
	movw	$382, RunTimeSignatureAdjuster # imm = 0x17E
	callq	see
	movw	$-22627, BasicBlockSignatureTracker # imm = 0xA79D
	movw	$382, RunTimeSignatureAdjuster # imm = 0x17E
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-22627, BasicBlockSignatureTracker # imm = 0xA79D
	movw	$12, RunTimeSignatureAdjuster
.LBB81_44:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$-22613, %ax            # imm = 0xA7AB
	jne	.LBB81_282
# %bb.45:                               # %order_moves.split621
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22613, BasicBlockSignatureTracker # imm = 0xA7AB
	movw	$45, RunTimeSignatureAdjuster
.LBB81_46:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-22612, %ax            # imm = 0xA7AC
	jne	.LBB81_282
# %bb.47:                               # %order_moves.split615
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22612, BasicBlockSignatureTracker # imm = 0xA7AC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_158
.LBB81_48:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$221, %ax
	xorw	%cx, %ax
	cmpw	$-22601, %ax            # imm = 0xA7B7
	jne	.LBB81_282
# %bb.49:                               # %order_moves.split607
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	(%r15), %eax
	movw	$-22601, BasicBlockSignatureTracker # imm = 0xA7B7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-1, %eax
	je	.LBB81_70
# %bb.50:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$118, %ax
	cmpw	$-22591, %ax            # imm = 0xA7C1
	jne	.LBB81_282
# %bb.51:                               # %order_moves.split625
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	(%r15), %eax
	movw	$-22591, BasicBlockSignatureTracker # imm = 0xA7C1
	movw	$118, RunTimeSignatureAdjuster
	cmpl	$-2, %eax
	je	.LBB81_70
# %bb.52:                               # %Buffer__2
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9123, %ax              # imm = 0x23A3
	cmpw	$-31646, %ax            # imm = 0x8462
	jne	.LBB81_282
# %bb.53:                               # %order_moves.split629
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-31646, BasicBlockSignatureTracker # imm = 0x8462
	movw	$9123, RunTimeSignatureAdjuster # imm = 0x23A3
# %bb.54:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-22583, %ax            # imm = 0xA7C9
	jne	.LBB81_282
# %bb.55:                               # %order_moves.split821
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	(%r12), %eax
	movl	(%r15), %ecx
	movw	$-22583, BasicBlockSignatureTracker # imm = 0xA7C9
	movw	$126, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB81_70
# %bb.56:                               # %Buffer__3
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15808, %ax             # imm = 0x3DC0
	cmpw	$-26103, %ax            # imm = 0x9A09
	jne	.LBB81_282
# %bb.57:                               # %order_moves.split631
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-26103, BasicBlockSignatureTracker # imm = 0x9A09
	movw	$15808, RunTimeSignatureAdjuster # imm = 0x3DC0
# %bb.58:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-22565, %ax            # imm = 0xA7DB
	jne	.LBB81_282
# %bb.59:                               # %order_moves.split823
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	$100000000, (%rax,%rcx,4) # imm = 0x5F5E100
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-22565, BasicBlockSignatureTracker # imm = 0xA7DB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB81_68
# %bb.60:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$36, %ax
	cmpw	$-22529, %ax            # imm = 0xA7FF
	jne	.LBB81_282
# %bb.61:                               # %order_moves.split633
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	addl	$15, %ebx
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movw	$-22529, BasicBlockSignatureTracker # imm = 0xA7FF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jl	.LBB81_64
# %bb.62:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4095, %ax              # imm = 0xFFF
	cmpw	$-22528, %ax            # imm = 0xA800
	jne	.LBB81_282
# %bb.63:                               # %order_moves.split637
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	sarl	$4, %eax
	subl	%eax, %ebx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	%ebx, (%rax,%rcx,4)
	movw	$-22528, BasicBlockSignatureTracker # imm = 0xA800
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_66
.LBB81_64:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4086, %ax              # imm = 0xFF6
	cmpw	$-22519, %ax            # imm = 0xA809
	jne	.LBB81_282
# %bb.65:                               # %order_moves.split639
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	$1, %edi
	xorl	%eax, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-22519, BasicBlockSignatureTracker # imm = 0xA809
	movw	$3818, RunTimeSignatureAdjuster # imm = 0xEEA
	callq	see
	movw	$-22519, BasicBlockSignatureTracker # imm = 0xA809
	movw	$3818, RunTimeSignatureAdjuster # imm = 0xEEA
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-22519, BasicBlockSignatureTracker # imm = 0xA809
	movw	$9, RunTimeSignatureAdjuster
.LBB81_66:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$36, %ax
	xorw	%cx, %ax
	cmpw	$-22492, %ax            # imm = 0xA824
	jne	.LBB81_282
# %bb.67:                               # %order_moves.split641
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22492, BasicBlockSignatureTracker # imm = 0xA824
	movw	$4095, RunTimeSignatureAdjuster # imm = 0xFFF
.LBB81_68:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4092, %ax              # imm = 0xFFC
	xorw	%cx, %ax
	cmpw	$-22489, %ax            # imm = 0xA827
	jne	.LBB81_282
# %bb.69:                               # %order_moves.split635
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22489, BasicBlockSignatureTracker # imm = 0xA827
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_156
.LBB81_70:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3993, %ax              # imm = 0xF99
	xorw	%cx, %ax
	cmpw	$-22482, %ax            # imm = 0xA82E
	jne	.LBB81_282
# %bb.71:                               # %order_moves.split627
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	(%r15), %eax
	movw	$-22482, BasicBlockSignatureTracker # imm = 0xA82E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-2, %eax
	jne	.LBB81_96
# %bb.72:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-22481, %ax            # imm = 0xA82F
	jne	.LBB81_282
# %bb.73:                               # %order_moves.split645
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$pv, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$7200, %rdx, %rdx       # imm = 0x1C20
	addq	%rdx, %rax
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-22481, BasicBlockSignatureTracker # imm = 0xA82F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_94
# %bb.74:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$-22480, %ax            # imm = 0xA830
	jne	.LBB81_282
# %bb.75:                               # %order_moves.split649
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$pv, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$7200, %rdx, %rdx       # imm = 0x1C20
	addq	%rdx, %rax
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-22480, BasicBlockSignatureTracker # imm = 0xA830
	movw	$31, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_94
# %bb.76:                               # %Buffer__4
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29824, %ax            # imm = 0x8B80
	cmpw	$9136, %ax              # imm = 0x23B0
	jne	.LBB81_282
# %bb.77:                               # %order_moves.split653
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$9136, BasicBlockSignatureTracker # imm = 0x23B0
	movw	$-29824, RunTimeSignatureAdjuster # imm = 0x8B80
# %bb.78:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-22479, %ax            # imm = 0xA831
	jne	.LBB81_282
# %bb.79:                               # %order_moves.split825
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$pv, %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$7200, %rdx, %rdx       # imm = 0x1C20
	addq	%rdx, %rax
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-22479, BasicBlockSignatureTracker # imm = 0xA831
	movw	$30, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_94
# %bb.80:                               # %Buffer__5
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17981, %ax             # imm = 0x463D
	cmpw	$-4596, %ax             # imm = 0xEE0C
	jne	.LBB81_282
# %bb.81:                               # %order_moves.split655
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-4596, BasicBlockSignatureTracker # imm = 0xEE0C
	movw	$17981, RunTimeSignatureAdjuster # imm = 0x463D
# %bb.82:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-22473, %ax            # imm = 0xA837
	jne	.LBB81_282
# %bb.83:                               # %order_moves.split827
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	$100000000, (%rax,%rcx,4) # imm = 0x5F5E100
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-22473, BasicBlockSignatureTracker # imm = 0xA837
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB81_92
# %bb.84:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$125, %ax
	cmpw	$-22454, %ax            # imm = 0xA84A
	jne	.LBB81_282
# %bb.85:                               # %order_moves.split657
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	addl	$15, %ebx
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movw	$-22454, BasicBlockSignatureTracker # imm = 0xA84A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ebx
	jl	.LBB81_88
# %bb.86:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-22440, %ax            # imm = 0xA858
	jne	.LBB81_282
# %bb.87:                               # %order_moves.split661
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, %ebx
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	sarl	$4, %eax
	subl	%eax, %ebx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	%ebx, (%rax,%rcx,4)
	movw	$-22440, BasicBlockSignatureTracker # imm = 0xA858
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_90
.LBB81_88:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-22435, %ax            # imm = 0xA85D
	jne	.LBB81_282
# %bb.89:                               # %order_moves.split663
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	$1, %edi
	xorl	%eax, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-22435, BasicBlockSignatureTracker # imm = 0xA85D
	movw	$3774, RunTimeSignatureAdjuster # imm = 0xEBE
	callq	see
	movw	$-22435, BasicBlockSignatureTracker # imm = 0xA85D
	movw	$3774, RunTimeSignatureAdjuster # imm = 0xEBE
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-22435, BasicBlockSignatureTracker # imm = 0xA85D
	movw	$5, RunTimeSignatureAdjuster
.LBB81_90:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$-22431, %ax            # imm = 0xA861
	jne	.LBB81_282
# %bb.91:                               # %order_moves.split665
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22431, BasicBlockSignatureTracker # imm = 0xA861
	movw	$86, RunTimeSignatureAdjuster
.LBB81_92:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$83, %ax
	xorw	%cx, %ax
	cmpw	$-22428, %ax            # imm = 0xA864
	jne	.LBB81_282
# %bb.93:                               # %order_moves.split659
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22428, BasicBlockSignatureTracker # imm = 0xA864
	movw	$75, RunTimeSignatureAdjuster
.LBB81_94:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$92, %ax
	xorw	%cx, %ax
	cmpw	$-22413, %ax            # imm = 0xA873
	jne	.LBB81_282
# %bb.95:                               # %order_moves.split651
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22413, BasicBlockSignatureTracker # imm = 0xA873
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_154
.LBB81_96:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$90, %ax
	cmpw	$-22412, %ax            # imm = 0xA874
	jne	.LBB81_282
# %bb.97:                               # %order_moves.split647
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	ply, %eax
	movw	$-22412, BasicBlockSignatureTracker # imm = 0xA874
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB81_100
# %bb.98:                               #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-22405, %ax            # imm = 0xA87B
	jne	.LBB81_282
# %bb.99:                               # %order_moves.split671
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	i_depth, %eax
	movw	$-22405, BasicBlockSignatureTracker # imm = 0xA87B
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jge	.LBB81_142
.LBB81_100:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$242, %ax
	xorw	%cx, %ax
	cmpw	$-22394, %ax            # imm = 0xA886
	jne	.LBB81_282
# %bb.101:                              # %order_moves.split669
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$killer1, %rax
	movabsq	$history_h, %rcx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movslq	(%rdi), %rdx
	imulq	$576, %rdx, %rdx        # imm = 0x240
	addq	%rdx, %rcx
	movq	-72(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rdx
	movl	(%rcx,%rdx,4), %ecx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rdx
	movslq	(%r12), %rsi
	addl	(%rdx,%rsi,4), %ecx
	movl	%ecx, (%rdx,%rsi,4)
	movl	(%rdi), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-22394, BasicBlockSignatureTracker # imm = 0xA886
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_112
# %bb.102:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-22377, %ax            # imm = 0xA897
	jne	.LBB81_282
# %bb.103:                              # %order_moves.split675
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$killer1, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-22377, BasicBlockSignatureTracker # imm = 0xA897
	movw	$17, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_112
# %bb.104:                              # %Buffer__7
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17006, %ax             # imm = 0x426E
	cmpw	$-5383, %ax             # imm = 0xEAF9
	jne	.LBB81_282
# %bb.105:                              # %order_moves.split679
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-5383, BasicBlockSignatureTracker # imm = 0xEAF9
	movw	$17006, RunTimeSignatureAdjuster # imm = 0x426E
# %bb.106:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$-22368, %ax            # imm = 0xA8A0
	jne	.LBB81_282
# %bb.107:                              # %order_moves.split831
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$killer1, %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-22368, BasicBlockSignatureTracker # imm = 0xA8A0
	movw	$38, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_112
# %bb.108:                              # %Buffer__8
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3076, %ax              # imm = 0xC04
	cmpw	$-23388, %ax            # imm = 0xA4A4
	jne	.LBB81_282
# %bb.109:                              # %order_moves.split681
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-23388, BasicBlockSignatureTracker # imm = 0xA4A4
	movw	$3076, RunTimeSignatureAdjuster # imm = 0xC04
# %bb.110:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-22353, %ax            # imm = 0xA8AF
	jne	.LBB81_282
# %bb.111:                              # %order_moves.split833
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	(%rax,%rcx,4), %edx
	addl	$25000000, %edx         # imm = 0x17D7840
	movl	%edx, (%rax,%rcx,4)
	movw	$-22353, BasicBlockSignatureTracker # imm = 0xA8AF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_140
.LBB81_112:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$-22351, %ax            # imm = 0xA8B1
	jne	.LBB81_282
# %bb.113:                              # %order_moves.split677
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$killer2, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-22351, BasicBlockSignatureTracker # imm = 0xA8B1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_124
# %bb.114:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-22348, %ax            # imm = 0xA8B4
	jne	.LBB81_282
# %bb.115:                              # %order_moves.split685
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$killer2, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-22348, BasicBlockSignatureTracker # imm = 0xA8B4
	movw	$5, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_124
# %bb.116:                              # %Buffer__9
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20171, %ax            # imm = 0xB135
	cmpw	$6529, %ax              # imm = 0x1981
	jne	.LBB81_282
# %bb.117:                              # %order_moves.split689
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$6529, BasicBlockSignatureTracker # imm = 0x1981
	movw	$-20171, RunTimeSignatureAdjuster # imm = 0xB135
# %bb.118:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-22342, %ax            # imm = 0xA8BA
	jne	.LBB81_282
# %bb.119:                              # %order_moves.split835
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$killer2, %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-22342, BasicBlockSignatureTracker # imm = 0xA8BA
	movw	$11, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_124
# %bb.120:                              # %Buffer__10
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6346, %ax              # imm = 0x18CA
	cmpw	$-20368, %ax            # imm = 0xB070
	jne	.LBB81_282
# %bb.121:                              # %order_moves.split691
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-20368, BasicBlockSignatureTracker # imm = 0xB070
	movw	$6346, RunTimeSignatureAdjuster # imm = 0x18CA
# %bb.122:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$113, %ax
	xorw	%cx, %ax
	cmpw	$-22325, %ax            # imm = 0xA8CB
	jne	.LBB81_282
# %bb.123:                              # %order_moves.split837
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	(%rax,%rcx,4), %edx
	addl	$20000000, %edx         # imm = 0x1312D00
	movl	%edx, (%rax,%rcx,4)
	movw	$-22325, BasicBlockSignatureTracker # imm = 0xA8CB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_138
.LBB81_124:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$101, %ax
	xorw	%cx, %ax
	cmpw	$-22316, %ax            # imm = 0xA8D4
	jne	.LBB81_282
# %bb.125:                              # %order_moves.split687
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$killer3, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-22316, BasicBlockSignatureTracker # imm = 0xA8D4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_136
# %bb.126:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-22299, %ax            # imm = 0xA8E5
	jne	.LBB81_282
# %bb.127:                              # %order_moves.split695
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$killer3, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-22299, BasicBlockSignatureTracker # imm = 0xA8E5
	movw	$49, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_136
# %bb.128:                              # %Buffer__11
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1301, %ax              # imm = 0x515
	cmpw	$-21008, %ax            # imm = 0xADF0
	jne	.LBB81_282
# %bb.129:                              # %order_moves.split699
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-21008, BasicBlockSignatureTracker # imm = 0xADF0
	movw	$1301, RunTimeSignatureAdjuster # imm = 0x515
# %bb.130:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$487, %ax               # imm = 0x1E7
	xorw	%cx, %ax
	cmpw	$-22270, %ax            # imm = 0xA902
	jne	.LBB81_282
# %bb.131:                              # %order_moves.split839
                                        #   in Loop: Header=BB81_6 Depth=1
	movabsq	$killer3, %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-22270, BasicBlockSignatureTracker # imm = 0xA902
	movw	$470, RunTimeSignatureAdjuster # imm = 0x1D6
	cmpl	%eax, %ecx
	jne	.LBB81_136
# %bb.132:                              # %Buffer__12
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-193, %ax
	cmpw	$22077, %ax             # imm = 0x563D
	jne	.LBB81_282
# %bb.133:                              # %order_moves.split701
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$22077, BasicBlockSignatureTracker # imm = 0x563D
	movw	$-193, RunTimeSignatureAdjuster
# %bb.134:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$-22238, %ax            # imm = 0xA922
	jne	.LBB81_282
# %bb.135:                              # %order_moves.split841
                                        #   in Loop: Header=BB81_6 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	(%rax,%rcx,4), %edx
	addl	$15000000, %edx         # imm = 0xE4E1C0
	movl	%edx, (%rax,%rcx,4)
	movw	$-22238, BasicBlockSignatureTracker # imm = 0xA922
	movw	$502, RunTimeSignatureAdjuster # imm = 0x1F6
.LBB81_136:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$498, %ax               # imm = 0x1F2
	xorw	%cx, %ax
	cmpw	$-22234, %ax            # imm = 0xA926
	jne	.LBB81_282
# %bb.137:                              # %order_moves.split697
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22234, BasicBlockSignatureTracker # imm = 0xA926
	movw	$493, RunTimeSignatureAdjuster # imm = 0x1ED
.LBB81_138:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$482, %ax               # imm = 0x1E2
	xorw	%cx, %ax
	cmpw	$-22231, %ax            # imm = 0xA929
	jne	.LBB81_282
# %bb.139:                              # %order_moves.split693
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22231, BasicBlockSignatureTracker # imm = 0xA929
	movw	$390, RunTimeSignatureAdjuster # imm = 0x186
.LBB81_140:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$415, %ax               # imm = 0x19F
	xorw	%cx, %ax
	cmpw	$-22224, %ax            # imm = 0xA930
	jne	.LBB81_282
# %bb.141:                              # %order_moves.split683
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22224, BasicBlockSignatureTracker # imm = 0xA930
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_152
.LBB81_142:                             # %Buffer__6
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25907, %ax             # imm = 0x6533
	cmpw	$-12984, %ax            # imm = 0xCD48
	jne	.LBB81_282
# %bb.143:                              # %order_moves.split673
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-12984, BasicBlockSignatureTracker # imm = 0xCD48
	movw	$25907, RunTimeSignatureAdjuster # imm = 0x6533
# %bb.144:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$314, %ax               # imm = 0x13A
	xorw	%cx, %ax
	cmpw	$-22207, %ax            # imm = 0xA941
	jne	.LBB81_282
# %bb.145:                              # %order_moves.split829
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	$100, %ecx
	movl	nodes, %eax
	cltd
	idivl	%ecx
	movw	$-22207, BasicBlockSignatureTracker # imm = 0xA941
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$100000000, %eax        # imm = 0x5F5E100
	jle	.LBB81_148
# %bb.146:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-22196, %ax            # imm = 0xA94C
	jne	.LBB81_282
# %bb.147:                              # %order_moves.split705
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	$1000, %ecx             # imm = 0x3E8
	movslq	(%r12), %rax
	movl	rootnodecount(,%rax,4), %eax
	xorl	%edx, %edx
	divl	%ecx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-22196, BasicBlockSignatureTracker # imm = 0xA94C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_150
.LBB81_148:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-22193, %ax            # imm = 0xA94F
	jne	.LBB81_282
# %bb.149:                              # %order_moves.split707
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	$100, %ecx
	movslq	(%r12), %rax
	movl	rootnodecount(,%rax,4), %eax
	xorl	%edx, %edx
	divl	%ecx
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-22193, BasicBlockSignatureTracker # imm = 0xA94F
	movw	$3, RunTimeSignatureAdjuster
.LBB81_150:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-22187, %ax            # imm = 0xA955
	jne	.LBB81_282
# %bb.151:                              # %order_moves.split709
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22187, BasicBlockSignatureTracker # imm = 0xA955
	movw	$101, RunTimeSignatureAdjuster
.LBB81_152:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$80, %ax
	xorw	%cx, %ax
	cmpw	$-22176, %ax            # imm = 0xA960
	jne	.LBB81_282
# %bb.153:                              # %order_moves.split703
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22176, BasicBlockSignatureTracker # imm = 0xA960
	movw	$275, RunTimeSignatureAdjuster # imm = 0x113
.LBB81_154:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$277, %ax               # imm = 0x115
	xorw	%cx, %ax
	cmpw	$-22170, %ax            # imm = 0xA966
	jne	.LBB81_282
# %bb.155:                              # %order_moves.split667
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22170, BasicBlockSignatureTracker # imm = 0xA966
	movw	$321, RunTimeSignatureAdjuster # imm = 0x141
.LBB81_156:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$334, %ax               # imm = 0x14E
	xorw	%cx, %ax
	cmpw	$-22167, %ax            # imm = 0xA969
	jne	.LBB81_282
# %bb.157:                              # %order_moves.split643
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22167, BasicBlockSignatureTracker # imm = 0xA969
	movw	$3781, RunTimeSignatureAdjuster # imm = 0xEC5
.LBB81_158:                             #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3777, %ax              # imm = 0xEC1
	xorw	%cx, %ax
	cmpw	$-22163, %ax            # imm = 0xA96D
	jne	.LBB81_282
# %bb.159:                              # %order_moves.split623
                                        #   in Loop: Header=BB81_6 Depth=1
	movw	$-22163, BasicBlockSignatureTracker # imm = 0xA96D
	movw	$0, RunTimeSignatureAdjuster
# %bb.160:                              #   in Loop: Header=BB81_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-22162, %ax            # imm = 0xA96E
	jne	.LBB81_282
# %bb.161:                              # %order_moves.split711
                                        #   in Loop: Header=BB81_6 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$-22162, BasicBlockSignatureTracker # imm = 0xA96E
	movw	$4061, RunTimeSignatureAdjuster # imm = 0xFDD
	jmp	.LBB81_6
.LBB81_162:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4045, %ax              # imm = 0xFCD
	cmpw	$-22152, %ax            # imm = 0xA978
	jne	.LBB81_284
# %bb.163:                              # %order_moves.split585
	movw	$-22152, BasicBlockSignatureTracker # imm = 0xA978
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_280
.LBB81_164:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3884, %ax              # imm = 0xF2C
	cmpw	$-22137, %ax            # imm = 0xA987
	jne	.LBB81_284
# %bb.165:                              # %order_moves.split579
	movq	%rbx, -64(%rbp)         # 8-byte Spill
	movq	%r10, -96(%rbp)         # 8-byte Spill
	movq	%r11, -80(%rbp)         # 8-byte Spill
	movq	%r9, %rbx
	movl	$0, (%r12)
	movw	$-22137, BasicBlockSignatureTracker # imm = 0xA987
	movw	$0, RunTimeSignatureAdjuster
.LBB81_166:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-22125, %ax            # imm = 0xA993
	jne	.LBB81_283
# %bb.167:                              # %order_moves.split715
                                        #   in Loop: Header=BB81_166 Depth=1
	movl	(%r12), %eax
	movl	(%r13), %ecx
	movw	$-22125, BasicBlockSignatureTracker # imm = 0xA993
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB81_278
# %bb.168:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-22121, %ax            # imm = 0xA997
	jne	.LBB81_283
# %bb.169:                              # %order_moves.split717
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	4(%rax), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	12(%rax), %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	8(%rax), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%r15), %eax
	movw	$-22121, BasicBlockSignatureTracker # imm = 0xA997
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-1, %eax
	je	.LBB81_186
# %bb.170:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$-22107, %ax            # imm = 0xA9A5
	jne	.LBB81_283
# %bb.171:                              # %order_moves.split721
                                        #   in Loop: Header=BB81_166 Depth=1
	movl	(%r12), %eax
	movl	(%r15), %ecx
	movw	$-22107, BasicBlockSignatureTracker # imm = 0xA9A5
	movw	$50, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB81_186
# %bb.172:                              # %Buffer__13
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25249, %ax            # imm = 0x9D5F
	cmpw	$13562, %ax             # imm = 0x34FA
	jne	.LBB81_283
# %bb.173:                              # %order_moves.split725
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$13562, BasicBlockSignatureTracker # imm = 0x34FA
	movw	$-25249, RunTimeSignatureAdjuster # imm = 0x9D5F
# %bb.174:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-22086, %ax            # imm = 0xA9BA
	jne	.LBB81_283
# %bb.175:                              # %order_moves.split843
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	(%rbx), %rax
	movslq	(%r12), %rcx
	movl	$100000000, (%rax,%rcx,4) # imm = 0x5F5E100
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-22086, BasicBlockSignatureTracker # imm = 0xA9BA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB81_184
# %bb.176:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$124, %ax
	cmpw	$-22074, %ax            # imm = 0xA9C6
	jne	.LBB81_283
# %bb.177:                              # %order_moves.split727
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	addl	$15, %eax
	movl	%eax, -56(%rbp)         # 4-byte Spill
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movw	$-22074, BasicBlockSignatureTracker # imm = 0xA9C6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, -56(%rbp)         # 4-byte Folded Reload
	jl	.LBB81_180
# %bb.178:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-22058, %ax            # imm = 0xA9D6
	jne	.LBB81_283
# %bb.179:                              # %order_moves.split731
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, -56(%rbp)         # 4-byte Spill
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	sarl	$4, %eax
	movl	-56(%rbp), %edx         # 4-byte Reload
	subl	%eax, %edx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	%edx, (%rax,%rcx,4)
	movw	$-22058, BasicBlockSignatureTracker # imm = 0xA9D6
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_182
.LBB81_180:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-22053, %ax            # imm = 0xA9DB
	jne	.LBB81_283
# %bb.181:                              # %order_moves.split733
                                        #   in Loop: Header=BB81_166 Depth=1
	movl	$1, %edi
	xorl	%eax, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-22053, BasicBlockSignatureTracker # imm = 0xA9DB
	movw	$3896, RunTimeSignatureAdjuster # imm = 0xF38
	callq	see
	movw	$-22053, BasicBlockSignatureTracker # imm = 0xA9DB
	movw	$3896, RunTimeSignatureAdjuster # imm = 0xF38
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-22053, BasicBlockSignatureTracker # imm = 0xA9DB
	movw	$13, RunTimeSignatureAdjuster
.LBB81_182:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$-22045, %ax            # imm = 0xA9E3
	jne	.LBB81_283
# %bb.183:                              # %order_moves.split735
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-22045, BasicBlockSignatureTracker # imm = 0xA9E3
	movw	$89, RunTimeSignatureAdjuster
.LBB81_184:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$94, %ax
	xorw	%cx, %ax
	cmpw	$-22044, %ax            # imm = 0xA9E4
	jne	.LBB81_283
# %bb.185:                              # %order_moves.split729
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-22044, BasicBlockSignatureTracker # imm = 0xA9E4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_234
.LBB81_186:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$100, %ax
	xorw	%cx, %ax
	cmpw	$-22029, %ax            # imm = 0xA9F3
	jne	.LBB81_283
# %bb.187:                              # %order_moves.split723
                                        #   in Loop: Header=BB81_166 Depth=1
	movl	(%r15), %eax
	movw	$-22029, BasicBlockSignatureTracker # imm = 0xA9F3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-2, %eax
	jne	.LBB81_212
# %bb.188:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1011, %ax              # imm = 0x3F3
	cmpw	$-22016, %ax            # imm = 0xAA00
	jne	.LBB81_283
# %bb.189:                              # %order_moves.split739
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$pv, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$7200, %rdx, %rdx       # imm = 0x1C20
	addq	%rdx, %rax
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-22016, BasicBlockSignatureTracker # imm = 0xAA00
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_210
# %bb.190:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-22015, %ax            # imm = 0xAA01
	jne	.LBB81_283
# %bb.191:                              # %order_moves.split743
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$pv, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$7200, %rdx, %rdx       # imm = 0x1C20
	addq	%rdx, %rax
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-22015, BasicBlockSignatureTracker # imm = 0xAA01
	movw	$1, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_210
# %bb.192:                              # %Buffer__14
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30132, %ax             # imm = 0x75B4
	cmpw	$-8267, %ax             # imm = 0xDFB5
	jne	.LBB81_283
# %bb.193:                              # %order_moves.split747
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-8267, BasicBlockSignatureTracker # imm = 0xDFB5
	movw	$30132, RunTimeSignatureAdjuster # imm = 0x75B4
# %bb.194:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-22012, %ax            # imm = 0xAA04
	jne	.LBB81_283
# %bb.195:                              # %order_moves.split845
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$pv, %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$7200, %rdx, %rdx       # imm = 0x1C20
	addq	%rdx, %rax
	movl	ply, %edx
	addl	$1, %edx
	movslq	%edx, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-22012, BasicBlockSignatureTracker # imm = 0xAA04
	movw	$4, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_210
# %bb.196:                              # %Buffer__15
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7139, %ax              # imm = 0x1BE3
	cmpw	$-19993, %ax            # imm = 0xB1E7
	jne	.LBB81_283
# %bb.197:                              # %order_moves.split749
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-19993, BasicBlockSignatureTracker # imm = 0xB1E7
	movw	$7139, RunTimeSignatureAdjuster # imm = 0x1BE3
# %bb.198:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$-21999, %ax            # imm = 0xAA11
	jne	.LBB81_283
# %bb.199:                              # %order_moves.split847
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	(%rbx), %rax
	movslq	(%r12), %rcx
	movl	$100000000, (%rax,%rcx,4) # imm = 0x5F5E100
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-21999, BasicBlockSignatureTracker # imm = 0xAA11
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB81_208
# %bb.200:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-21987, %ax            # imm = 0xAA1D
	jne	.LBB81_283
# %bb.201:                              # %order_moves.split751
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	addl	$15, %eax
	movl	%eax, -56(%rbp)         # 4-byte Spill
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movw	$-21987, BasicBlockSignatureTracker # imm = 0xAA1D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, -56(%rbp)         # 4-byte Folded Reload
	jl	.LBB81_204
# %bb.202:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-21974, %ax            # imm = 0xAA2A
	jne	.LBB81_283
# %bb.203:                              # %order_moves.split755
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, -56(%rbp)         # 4-byte Spill
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	sarl	$4, %eax
	movl	-56(%rbp), %edx         # 4-byte Reload
	subl	%eax, %edx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rax
	movslq	(%r12), %rcx
	movl	%edx, (%rax,%rcx,4)
	movw	$-21974, BasicBlockSignatureTracker # imm = 0xAA2A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_206
.LBB81_204:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$-21969, %ax            # imm = 0xAA2F
	jne	.LBB81_283
# %bb.205:                              # %order_moves.split757
                                        #   in Loop: Header=BB81_166 Depth=1
	movl	$1, %edi
	xorl	%eax, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-21969, BasicBlockSignatureTracker # imm = 0xAA2F
	movw	$3276, RunTimeSignatureAdjuster # imm = 0xCCC
	callq	see
	movw	$-21969, BasicBlockSignatureTracker # imm = 0xAA2F
	movw	$3276, RunTimeSignatureAdjuster # imm = 0xCCC
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-21969, BasicBlockSignatureTracker # imm = 0xAA2F
	movw	$5, RunTimeSignatureAdjuster
.LBB81_206:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$-21962, %ax            # imm = 0xAA36
	jne	.LBB81_283
# %bb.207:                              # %order_moves.split759
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-21962, BasicBlockSignatureTracker # imm = 0xAA36
	movw	$39, RunTimeSignatureAdjuster
.LBB81_208:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$84, %ax
	xorw	%cx, %ax
	cmpw	$-21947, %ax            # imm = 0xAA45
	jne	.LBB81_283
# %bb.209:                              # %order_moves.split753
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-21947, BasicBlockSignatureTracker # imm = 0xAA45
	movw	$69, RunTimeSignatureAdjuster
.LBB81_210:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$75, %ax
	xorw	%cx, %ax
	cmpw	$-21941, %ax            # imm = 0xAA4B
	jne	.LBB81_283
# %bb.211:                              # %order_moves.split745
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-21941, BasicBlockSignatureTracker # imm = 0xAA4B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_232
.LBB81_212:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$928, %ax               # imm = 0x3A0
	cmpw	$-21933, %ax            # imm = 0xAA53
	jne	.LBB81_283
# %bb.213:                              # %order_moves.split741
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-21933, BasicBlockSignatureTracker # imm = 0xAA53
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB81_228
# %bb.214:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-21905, %ax            # imm = 0xAA6F
	jne	.LBB81_283
# %bb.215:                              # %order_moves.split763
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	addl	$15, %eax
	movl	%eax, -56(%rbp)         # 4-byte Spill
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movw	$-21905, BasicBlockSignatureTracker # imm = 0xAA6F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, -56(%rbp)         # 4-byte Folded Reload
	jl	.LBB81_218
# %bb.216:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-21903, %ax            # imm = 0xAA71
	jne	.LBB81_283
# %bb.217:                              # %order_moves.split767
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, -56(%rbp)         # 4-byte Spill
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	sarl	$4, %eax
	movl	-56(%rbp), %esi         # 4-byte Reload
	subl	%eax, %esi
	movq	-80(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rax
	movslq	(%r12), %rcx
	movl	%esi, (%rax,%rcx,4)
	movq	(%rdx), %rax
	movslq	(%r12), %rcx
	movl	(%rax,%rcx,4), %eax
	addl	$50000000, %eax         # imm = 0x2FAF080
	movq	(%rbx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-21903, BasicBlockSignatureTracker # imm = 0xAA71
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_226
.LBB81_218:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-21893, %ax            # imm = 0xAA7B
	jne	.LBB81_283
# %bb.219:                              # %order_moves.split769
                                        #   in Loop: Header=BB81_166 Depth=1
	movl	$1, %edi
	xorl	%eax, %eax
	movl	white_to_move, %ecx
	cmpl	$0, %ecx
	cmovnel	%eax, %edi
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-21893, BasicBlockSignatureTracker # imm = 0xAA7B
	movw	$3224, RunTimeSignatureAdjuster # imm = 0xC98
	callq	see
	movw	$-21893, BasicBlockSignatureTracker # imm = 0xAA7B
	movw	$3224, RunTimeSignatureAdjuster # imm = 0xC98
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$-21893, BasicBlockSignatureTracker # imm = 0xAA7B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-50, %eax
	jl	.LBB81_222
# %bb.220:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$253, %ax
	cmpw	$-21882, %ax            # imm = 0xAA86
	jne	.LBB81_283
# %bb.221:                              # %order_moves.split773
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$50000000, %eax         # imm = 0x2FAF080
	movq	(%rbx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-21882, BasicBlockSignatureTracker # imm = 0xAA86
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_224
.LBB81_222:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$247, %ax
	cmpw	$-21876, %ax            # imm = 0xAA8C
	jne	.LBB81_283
# %bb.223:                              # %order_moves.split775
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	(%rbx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-21876, BasicBlockSignatureTracker # imm = 0xAA8C
	movw	$10, RunTimeSignatureAdjuster
.LBB81_224:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-21871, %ax            # imm = 0xAA91
	jne	.LBB81_283
# %bb.225:                              # %order_moves.split777
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rcx
	movslq	(%r12), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-21871, BasicBlockSignatureTracker # imm = 0xAA91
	movw	$224, RunTimeSignatureAdjuster
.LBB81_226:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$231, %ax
	xorw	%cx, %ax
	cmpw	$-21866, %ax            # imm = 0xAA96
	jne	.LBB81_283
# %bb.227:                              # %order_moves.split771
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-21866, BasicBlockSignatureTracker # imm = 0xAA96
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_230
.LBB81_228:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$241, %ax
	cmpw	$-21854, %ax            # imm = 0xAAA2
	jne	.LBB81_283
# %bb.229:                              # %order_moves.split765
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	(%rbx), %rax
	movslq	(%r12), %rcx
	movl	$0, (%rax,%rcx,4)
	movw	$-21854, BasicBlockSignatureTracker # imm = 0xAAA2
	movw	$52, RunTimeSignatureAdjuster
.LBB81_230:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$-21840, %ax            # imm = 0xAAB0
	jne	.LBB81_283
# %bb.231:                              # %order_moves.split779
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-21840, BasicBlockSignatureTracker # imm = 0xAAB0
	movw	$251, RunTimeSignatureAdjuster
.LBB81_232:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$255, %ax
	xorw	%cx, %ax
	cmpw	$-21836, %ax            # imm = 0xAAB4
	jne	.LBB81_283
# %bb.233:                              # %order_moves.split761
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-21836, BasicBlockSignatureTracker # imm = 0xAAB4
	movw	$848, RunTimeSignatureAdjuster # imm = 0x350
.LBB81_234:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$850, %ax               # imm = 0x352
	xorw	%cx, %ax
	cmpw	$-21834, %ax            # imm = 0xAAB6
	jne	.LBB81_283
# %bb.235:                              # %order_moves.split737
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$killer1, %rax
	movabsq	$history_h, %rcx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movslq	(%rdi), %rdx
	imulq	$576, %rdx, %rdx        # imm = 0x240
	addq	%rdx, %rcx
	movq	-72(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rdx
	movl	(%rcx,%rdx,4), %ecx
	movq	(%rbx), %rdx
	movslq	(%r12), %rsi
	addl	(%rdx,%rsi,4), %ecx
	movl	%ecx, (%rdx,%rsi,4)
	movl	(%rdi), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-21834, BasicBlockSignatureTracker # imm = 0xAAB6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_246
# %bb.236:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-21825, %ax            # imm = 0xAABF
	jne	.LBB81_283
# %bb.237:                              # %order_moves.split781
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$killer1, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-21825, BasicBlockSignatureTracker # imm = 0xAABF
	movw	$9, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_246
# %bb.238:                              # %Buffer__16
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25757, %ax            # imm = 0x9B63
	cmpw	$12764, %ax             # imm = 0x31DC
	jne	.LBB81_283
# %bb.239:                              # %order_moves.split785
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$12764, BasicBlockSignatureTracker # imm = 0x31DC
	movw	$-25757, RunTimeSignatureAdjuster # imm = 0x9B63
# %bb.240:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$108, %ax
	xorw	%cx, %ax
	cmpw	$-21805, %ax            # imm = 0xAAD3
	jne	.LBB81_283
# %bb.241:                              # %order_moves.split849
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$killer1, %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-21805, BasicBlockSignatureTracker # imm = 0xAAD3
	movw	$101, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_246
# %bb.242:                              # %Buffer__17
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25667, %ax             # imm = 0x6443
	cmpw	$-12656, %ax            # imm = 0xCE90
	jne	.LBB81_283
# %bb.243:                              # %order_moves.split787
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-12656, BasicBlockSignatureTracker # imm = 0xCE90
	movw	$25667, RunTimeSignatureAdjuster # imm = 0x6443
# %bb.244:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-21803, %ax            # imm = 0xAAD5
	jne	.LBB81_283
# %bb.245:                              # %order_moves.split851
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	(%rbx), %rax
	movslq	(%r12), %rcx
	movl	(%rax,%rcx,4), %edx
	addl	$25000000, %edx         # imm = 0x17D7840
	movl	%edx, (%rax,%rcx,4)
	movw	$-21803, BasicBlockSignatureTracker # imm = 0xAAD5
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_274
.LBB81_246:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$95, %ax
	xorw	%cx, %ax
	cmpw	$-21783, %ax            # imm = 0xAAE9
	jne	.LBB81_283
# %bb.247:                              # %order_moves.split783
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$killer2, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-21783, BasicBlockSignatureTracker # imm = 0xAAE9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_258
# %bb.248:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-21776, %ax            # imm = 0xAAF0
	jne	.LBB81_283
# %bb.249:                              # %order_moves.split791
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$killer2, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-21776, BasicBlockSignatureTracker # imm = 0xAAF0
	movw	$25, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_258
# %bb.250:                              # %Buffer__18
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19188, %ax             # imm = 0x4AF4
	cmpw	$-8188, %ax             # imm = 0xE004
	jne	.LBB81_283
# %bb.251:                              # %order_moves.split795
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-8188, BasicBlockSignatureTracker # imm = 0xE004
	movw	$19188, RunTimeSignatureAdjuster # imm = 0x4AF4
# %bb.252:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$499, %ax               # imm = 0x1F3
	xorw	%cx, %ax
	cmpw	$-21757, %ax            # imm = 0xAB03
	jne	.LBB81_283
# %bb.253:                              # %order_moves.split853
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$killer2, %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-21757, BasicBlockSignatureTracker # imm = 0xAB03
	movw	$490, RunTimeSignatureAdjuster # imm = 0x1EA
	cmpl	%eax, %ecx
	jne	.LBB81_258
# %bb.254:                              # %Buffer__19
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10934, %ax             # imm = 0x2AB6
	cmpw	$-32331, %ax            # imm = 0x81B5
	jne	.LBB81_283
# %bb.255:                              # %order_moves.split797
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-32331, BasicBlockSignatureTracker # imm = 0x81B5
	movw	$10934, RunTimeSignatureAdjuster # imm = 0x2AB6
# %bb.256:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-21756, %ax            # imm = 0xAB04
	jne	.LBB81_283
# %bb.257:                              # %order_moves.split855
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	(%rbx), %rax
	movslq	(%r12), %rcx
	movl	(%rax,%rcx,4), %edx
	addl	$20000000, %edx         # imm = 0x1312D00
	movl	%edx, (%rax,%rcx,4)
	movw	$-21756, BasicBlockSignatureTracker # imm = 0xAB04
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB81_272
.LBB81_258:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$495, %ax               # imm = 0x1EF
	xorw	%cx, %ax
	cmpw	$-21754, %ax            # imm = 0xAB06
	jne	.LBB81_283
# %bb.259:                              # %order_moves.split793
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$killer3, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-21754, BasicBlockSignatureTracker # imm = 0xAB06
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_270
# %bb.260:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-21743, %ax            # imm = 0xAB11
	jne	.LBB81_283
# %bb.261:                              # %order_moves.split801
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$killer3, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-21743, BasicBlockSignatureTracker # imm = 0xAB11
	movw	$23, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_270
# %bb.262:                              # %Buffer__20
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-27563, %ax            # imm = 0x9455
	cmpw	$16196, %ax             # imm = 0x3F44
	jne	.LBB81_283
# %bb.263:                              # %order_moves.split805
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$16196, BasicBlockSignatureTracker # imm = 0x3F44
	movw	$-27563, RunTimeSignatureAdjuster # imm = 0x9455
# %bb.264:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$-21733, %ax            # imm = 0xAB1B
	jne	.LBB81_283
# %bb.265:                              # %order_moves.split857
                                        #   in Loop: Header=BB81_166 Depth=1
	movabsq	$killer3, %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-21733, BasicBlockSignatureTracker # imm = 0xAB1B
	movw	$29, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB81_270
# %bb.266:                              # %Buffer__21
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-19371, %ax            # imm = 0xB455
	cmpw	$8014, %ax              # imm = 0x1F4E
	jne	.LBB81_283
# %bb.267:                              # %order_moves.split807
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$8014, BasicBlockSignatureTracker # imm = 0x1F4E
	movw	$-19371, RunTimeSignatureAdjuster # imm = 0xB455
# %bb.268:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$-21714, %ax            # imm = 0xAB2E
	jne	.LBB81_283
# %bb.269:                              # %order_moves.split859
                                        #   in Loop: Header=BB81_166 Depth=1
	movq	(%rbx), %rax
	movslq	(%r12), %rcx
	movl	(%rax,%rcx,4), %edx
	addl	$15000000, %edx         # imm = 0xE4E1C0
	movl	%edx, (%rax,%rcx,4)
	movw	$-21714, BasicBlockSignatureTracker # imm = 0xAB2E
	movw	$40, RunTimeSignatureAdjuster
.LBB81_270:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$52, %ax
	xorw	%cx, %ax
	cmpw	$-21710, %ax            # imm = 0xAB32
	jne	.LBB81_283
# %bb.271:                              # %order_moves.split803
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-21710, BasicBlockSignatureTracker # imm = 0xAB32
	movw	$54, RunTimeSignatureAdjuster
.LBB81_272:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$-21705, %ax            # imm = 0xAB37
	jne	.LBB81_283
# %bb.273:                              # %order_moves.split799
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-21705, BasicBlockSignatureTracker # imm = 0xAB37
	movw	$482, RunTimeSignatureAdjuster # imm = 0x1E2
.LBB81_274:                             #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$490, %ax               # imm = 0x1EA
	xorw	%cx, %ax
	cmpw	$-21697, %ax            # imm = 0xAB3F
	jne	.LBB81_283
# %bb.275:                              # %order_moves.split789
                                        #   in Loop: Header=BB81_166 Depth=1
	movw	$-21697, BasicBlockSignatureTracker # imm = 0xAB3F
	movw	$0, RunTimeSignatureAdjuster
# %bb.276:                              #   in Loop: Header=BB81_166 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$-21692, %ax            # imm = 0xAB44
	jne	.LBB81_283
# %bb.277:                              # %order_moves.split809
                                        #   in Loop: Header=BB81_166 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$-21692, BasicBlockSignatureTracker # imm = 0xAB44
	movw	$707, RunTimeSignatureAdjuster # imm = 0x2C3
	jmp	.LBB81_166
.LBB81_278:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$760, %ax               # imm = 0x2F8
	cmpw	$-21653, %ax            # imm = 0xAB6B
	jne	.LBB81_284
# %bb.279:                              # %order_moves.split719
	movw	$-21653, BasicBlockSignatureTracker # imm = 0xAB6B
	movw	$531, RunTimeSignatureAdjuster # imm = 0x213
.LBB81_280:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$766, %ax               # imm = 0x2FE
	xorw	%cx, %ax
	cmpw	$-21626, %ax            # imm = 0xAB86
	jne	.LBB81_284
# %bb.281:                              # %order_moves.split713
	movw	$-21626, BasicBlockSignatureTracker # imm = 0xAB86
	movw	$1779, RunTimeSignatureAdjuster # imm = 0x6F3
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB81_282:                             # %CFerrorHandler.order_moves.loopexit
	jmp	.LBB81_284
.LBB81_283:                             # %CFerrorHandler.order_moves.loopexit1
	jmp	.LBB81_284
.LBB81_284:                             # %CFerrorHandler.order_moves
	callq	FAULT_DETECTED_CFC
.Lfunc_end81:
	.size	order_moves, .Lfunc_end81-order_moves
	.cfi_endproc
                                        # -- End function
	.globl	perft                   # -- Begin function perft
	.p2align	4, 0x90
	.type	perft,@function
perft:                                  # @perft
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-21620, %ax            # imm = 0xAB8C
	jne	.LBB82_25
# %bb.1:                                # %perft.split73
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-21620, %ax            # imm = 0xAB8C
	jne	.LBB82_25
# %bb.2:                                # %perft.split71
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-21620, %ax            # imm = 0xAB8C
	jne	.LBB82_25
# %bb.3:                                # %perft.split69
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-21620, %ax            # imm = 0xAB8C
	jne	.LBB82_25
# %bb.4:                                # %perft.split65
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r14
	addq	$-12288, %r14           # imm = 0xD000
	movq	%r14, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movl	%edi, (%rbx)
	movl	$0, (%r15)
	movl	(%rbx), %eax
	movw	$-21620, BasicBlockSignatureTracker # imm = 0xAB8C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB82_7
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-21618, %ax            # imm = 0xAB8E
	jne	.LBB82_25
# %bb.6:                                # %perft.split53
	movl	raw_nodes, %eax
	addl	$1, %eax
	movl	%eax, raw_nodes
	movw	$-21618, BasicBlockSignatureTracker # imm = 0xAB8E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB82_22
.LBB82_7:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-21601, %ax            # imm = 0xAB9F
	jne	.LBB82_25
# %bb.8:                                # %perft.split
	movw	$-21601, BasicBlockSignatureTracker # imm = 0xAB9F
	movw	$8463, RunTimeSignatureAdjuster # imm = 0x210F
	movq	%r14, %rdi
	callq	gen
	movw	$-21601, BasicBlockSignatureTracker # imm = 0xAB9F
	movw	$8463, RunTimeSignatureAdjuster # imm = 0x210F
	movl	numb_moves, %eax
	movl	%eax, (%r15)
	movw	$-21601, BasicBlockSignatureTracker # imm = 0xAB9F
	movw	$8464, RunTimeSignatureAdjuster # imm = 0x2110
	callq	in_check
	movw	$-21601, BasicBlockSignatureTracker # imm = 0xAB9F
	movw	$8464, RunTimeSignatureAdjuster # imm = 0x2110
	movl	%eax, (%r13)
	movl	$0, (%r12)
	movw	$-21601, BasicBlockSignatureTracker # imm = 0xAB9F
	movw	$0, RunTimeSignatureAdjuster
.LBB82_9:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$-21592, %ax            # imm = 0xABA8
	jne	.LBB82_24
# %bb.10:                               # %perft.split57
                                        #   in Loop: Header=BB82_9 Depth=1
	movl	(%r12), %eax
	movl	(%r15), %ecx
	movw	$-21592, BasicBlockSignatureTracker # imm = 0xABA8
	movw	$38, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB82_21
# %bb.11:                               # %Buffer__
                                        #   in Loop: Header=BB82_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-841, %ax              # imm = 0xFCB7
	cmpw	$22303, %ax             # imm = 0x571F
	jne	.LBB82_24
# %bb.12:                               # %perft.split59
                                        #   in Loop: Header=BB82_9 Depth=1
	movw	$22303, BasicBlockSignatureTracker # imm = 0x571F
	movw	$-841, RunTimeSignatureAdjuster # imm = 0xFCB7
# %bb.13:                               #   in Loop: Header=BB82_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-21581, %ax            # imm = 0xABB3
	jne	.LBB82_24
# %bb.14:                               # %perft.split75
                                        #   in Loop: Header=BB82_9 Depth=1
	movl	(%r12), %esi
	movw	$-21581, BasicBlockSignatureTracker # imm = 0xABB3
	movw	$8451, RunTimeSignatureAdjuster # imm = 0x2103
	movq	%r14, %rdi
	callq	make
	movw	$-21581, BasicBlockSignatureTracker # imm = 0xABB3
	movw	$8451, RunTimeSignatureAdjuster # imm = 0x2103
	movl	(%r12), %esi
	movl	(%r13), %edx
	movw	$-21581, BasicBlockSignatureTracker # imm = 0xABB3
	movw	$8451, RunTimeSignatureAdjuster # imm = 0x2103
	movq	%r14, %rdi
	callq	check_legal
	movw	$-21581, BasicBlockSignatureTracker # imm = 0xABB3
	movw	$8451, RunTimeSignatureAdjuster # imm = 0x2103
	movw	$-21581, BasicBlockSignatureTracker # imm = 0xABB3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB82_17
# %bb.15:                               #   in Loop: Header=BB82_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-21571, %ax            # imm = 0xABBD
	jne	.LBB82_24
# %bb.16:                               # %perft.split61
                                        #   in Loop: Header=BB82_9 Depth=1
	movl	(%rbx), %edi
	subl	$1, %edi
	movw	$-21571, BasicBlockSignatureTracker # imm = 0xABBD
	movw	$0, RunTimeSignatureAdjuster
	callq	perft
	movw	$-21571, BasicBlockSignatureTracker # imm = 0xABBD
	movw	$14, RunTimeSignatureAdjuster
	movw	$-21571, BasicBlockSignatureTracker # imm = 0xABBD
	movw	$14, RunTimeSignatureAdjuster
.LBB82_17:                              #   in Loop: Header=BB82_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$98, %ax
	xorw	%cx, %ax
	cmpw	$-21551, %ax            # imm = 0xABD1
	jne	.LBB82_24
# %bb.18:                               # %perft.split63
                                        #   in Loop: Header=BB82_9 Depth=1
	movl	(%r12), %esi
	movw	$-21551, BasicBlockSignatureTracker # imm = 0xABD1
	movw	$8502, RunTimeSignatureAdjuster # imm = 0x2136
	movq	%r14, %rdi
	callq	unmake
	movw	$-21551, BasicBlockSignatureTracker # imm = 0xABD1
	movw	$8502, RunTimeSignatureAdjuster # imm = 0x2136
	movw	$-21551, BasicBlockSignatureTracker # imm = 0xABD1
	movw	$0, RunTimeSignatureAdjuster
# %bb.19:                               #   in Loop: Header=BB82_9 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-21546, %ax            # imm = 0xABD6
	jne	.LBB82_24
# %bb.20:                               # %perft.split67
                                        #   in Loop: Header=BB82_9 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$-21546, BasicBlockSignatureTracker # imm = 0xABD6
	movw	$73, RunTimeSignatureAdjuster
	jmp	.LBB82_9
.LBB82_21:                              # %.loopexit
	jmp	.LBB82_22
.LBB82_22:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$87, %ax
	xorw	%cx, %ax
	cmpw	$-21543, %ax            # imm = 0xABD9
	jne	.LBB82_25
# %bb.23:                               # %perft.split55
	movw	$-21543, BasicBlockSignatureTracker # imm = 0xABD9
	movw	$106, RunTimeSignatureAdjuster
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB82_24:                              # %CFerrorHandler.perft.loopexit
	jmp	.LBB82_25
.LBB82_25:                              # %CFerrorHandler.perft
	callq	FAULT_DETECTED_CFC
.Lfunc_end82:
	.size	perft, .Lfunc_end82-perft
	.cfi_endproc
                                        # -- End function
	.globl	qsearch                 # -- Begin function qsearch
	.p2align	4, 0x90
	.type	qsearch,@function
qsearch:                                # @qsearch
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$152, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1595, %ax              # imm = 0x63B
	xorw	%cx, %ax
	cmpw	$-21521, %ax            # imm = 0xABEF
	jne	.LBB83_151
# %bb.1:                                # %qsearch.split407
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1595, %ax              # imm = 0x63B
	xorw	%cx, %ax
	cmpw	$-21521, %ax            # imm = 0xABEF
	jne	.LBB83_151
# %bb.2:                                # %qsearch.split381
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %rax
	addq	$-12288, %rax           # imm = 0xD000
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rax
	addq	$-2048, %rax            # imm = 0xF800
	movq	%rax, -176(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-2048, %rax            # imm = 0xF800
	movq	%rax, -168(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -120(%rbp)        # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -80(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -160(%rbp)        # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -112(%rbp)        # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -152(%rbp)        # 8-byte Spill
	movq	%rcx, %rsp
	movl	%edi, (%r9)
	movl	%esi, (%r10)
	movl	%edx, (%r11)
	movl	$-1000000, (%rbx)       # imm = 0xFFF0BDC0
	movq	%rax, -184(%rbp)        # 8-byte Spill
	movl	$1, (%rax)
	movl	ply, %eax
	movslq	ply, %rcx
	movl	%eax, pv_length(,%rcx,4)
	movl	nodes, %eax
	andl	$65535, %eax            # imm = 0xFFFF
	movw	$-21521, BasicBlockSignatureTracker # imm = 0xABEF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB83_51
# %bb.3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-21511, %ax            # imm = 0xABF9
	jne	.LBB83_151
# %bb.4:                                # %qsearch.split283
	movq	%r11, -88(%rbp)         # 8-byte Spill
	movq	%rbx, -56(%rbp)         # 8-byte Spill
	movq	%r9, -136(%rbp)         # 8-byte Spill
	movq	%r10, -144(%rbp)        # 8-byte Spill
	movq	%r8, -48(%rbp)          # 8-byte Spill
	movw	$-21511, BasicBlockSignatureTracker # imm = 0xABF9
	movw	$-16601, RunTimeSignatureAdjuster # imm = 0xBF27
	callq	interrupt
	movw	$-21511, BasicBlockSignatureTracker # imm = 0xABF9
	movw	$-16601, RunTimeSignatureAdjuster # imm = 0xBF27
	movw	$-21511, BasicBlockSignatureTracker # imm = 0xABF9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB83_7
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-21510, %ax            # imm = 0xABFA
	movq	-48(%rbp), %r8          # 8-byte Reload
	jne	.LBB83_151
# %bb.6:                                # %qsearch.split285
	movl	$1, time_exit
	movl	$0, (%r8)
	movw	$-21510, BasicBlockSignatureTracker # imm = 0xABFA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB83_147
.LBB83_7:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2037, %ax              # imm = 0x7F5
	cmpw	$-21492, %ax            # imm = 0xAC0C
	jne	.LBB83_151
# %bb.8:                                # %qsearch.split287
	movw	$-21492, BasicBlockSignatureTracker # imm = 0xAC0C
	movw	$-18100, RunTimeSignatureAdjuster # imm = 0xB94C
	callq	rtime
	movw	$-21492, BasicBlockSignatureTracker # imm = 0xAC0C
	movw	$-18100, RunTimeSignatureAdjuster # imm = 0xB94C
	movq	start_time, %rsi
	movw	$-21492, BasicBlockSignatureTracker # imm = 0xAC0C
	movw	$13131, RunTimeSignatureAdjuster # imm = 0x334B
	movq	%rax, %rdi
	callq	rdifftime
	movq	-88(%rbp), %r11         # 8-byte Reload
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movq	-136(%rbp), %r9         # 8-byte Reload
	movq	-144(%rbp), %r10        # 8-byte Reload
	movq	-48(%rbp), %r8          # 8-byte Reload
	movw	$-21492, BasicBlockSignatureTracker # imm = 0xAC0C
	movw	$13131, RunTimeSignatureAdjuster # imm = 0x334B
	movl	time_for_move, %ecx
	movw	$-21492, BasicBlockSignatureTracker # imm = 0xAC0C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB83_47
# %bb.9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-21486, %ax            # imm = 0xAC12
	jne	.LBB83_151
# %bb.10:                               # %qsearch.split291
	movl	i_depth, %eax
	movw	$-21486, BasicBlockSignatureTracker # imm = 0xAC12
	movw	$30, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB83_47
# %bb.11:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15488, %ax             # imm = 0x3C80
	cmpw	$-28526, %ax            # imm = 0x9092
	jne	.LBB83_151
# %bb.12:                               # %qsearch.split295
	movw	$-28526, BasicBlockSignatureTracker # imm = 0x9092
	movw	$15488, RunTimeSignatureAdjuster # imm = 0x3C80
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$-21480, %ax            # imm = 0xAC18
	jne	.LBB83_151
# %bb.14:                               # %qsearch.split409
	movl	failed, %eax
	movw	$-21480, BasicBlockSignatureTracker # imm = 0xAC18
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB83_43
# %bb.15:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-21478, %ax            # imm = 0xAC1A
	jne	.LBB83_151
# %bb.16:                               # %qsearch.split297
	movl	extendedtime, %eax
	movw	$-21478, BasicBlockSignatureTracker # imm = 0xAC1A
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB83_43
# %bb.17:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5434, %ax              # imm = 0x153A
	cmpw	$-18144, %ax            # imm = 0xB920
	jne	.LBB83_151
# %bb.18:                               # %qsearch.split301
	movw	$-18144, BasicBlockSignatureTracker # imm = 0xB920
	movw	$5434, RunTimeSignatureAdjuster # imm = 0x153A
# %bb.19:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$-21457, %ax            # imm = 0xAC2F
	movq	-48(%rbp), %r8          # 8-byte Reload
	jne	.LBB83_151
# %bb.20:                               # %qsearch.split411
	movl	fixed_time, %eax
	movw	$-21457, BasicBlockSignatureTracker # imm = 0xAC2F
	movw	$55, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB83_43
# %bb.21:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19683, %ax             # imm = 0x4CE3
	cmpw	$-7988, %ax             # imm = 0xE0CC
	jne	.LBB83_151
# %bb.22:                               # %qsearch.split303
	movw	$-7988, BasicBlockSignatureTracker # imm = 0xE0CC
	movw	$19683, RunTimeSignatureAdjuster # imm = 0x4CE3
# %bb.23:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-21451, %ax            # imm = 0xAC35
	movq	-48(%rbp), %r8          # 8-byte Reload
	jne	.LBB83_151
# %bb.24:                               # %qsearch.split413
	movl	go_fast, %eax
	movw	$-21451, BasicBlockSignatureTracker # imm = 0xAC35
	movw	$45, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB83_43
# %bb.25:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5015, %ax              # imm = 0x1397
	cmpw	$-16478, %ax            # imm = 0xBFA2
	jne	.LBB83_151
# %bb.26:                               # %qsearch.split305
	movw	$-16478, BasicBlockSignatureTracker # imm = 0xBFA2
	movw	$5015, RunTimeSignatureAdjuster # imm = 0x1397
# %bb.27:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-21447, %ax            # imm = 0xAC39
	movq	-48(%rbp), %r8          # 8-byte Reload
	jne	.LBB83_151
# %bb.28:                               # %qsearch.split415
	movl	Variant, %eax
	movw	$-21447, BasicBlockSignatureTracker # imm = 0xAC39
	movw	$33, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB83_43
# %bb.29:                               # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-32724, %ax            # imm = 0x802C
	cmpw	$11285, %ax             # imm = 0x2C15
	jne	.LBB83_151
# %bb.30:                               # %qsearch.split307
	movw	$11285, BasicBlockSignatureTracker # imm = 0x2C15
	movw	$-32724, RunTimeSignatureAdjuster # imm = 0x802C
# %bb.31:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-21446, %ax            # imm = 0xAC3A
	jne	.LBB83_151
# %bb.32:                               # %qsearch.split417
	movl	time_left, %eax
	movl	time_for_move, %ecx
	shll	$2, %ecx
	movw	$-21446, BasicBlockSignatureTracker # imm = 0xAC3A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1000, %ecx             # imm = 0x3E8
	jle	.LBB83_35
# %bb.33:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$123, %cx
	cmpw	$-21439, %cx            # imm = 0xAC41
	jne	.LBB83_151
# %bb.34:                               # %qsearch.split309
	movl	time_for_move, %ecx
	shll	$2, %ecx
	movw	$-21439, BasicBlockSignatureTracker # imm = 0xAC41
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB83_37
.LBB83_35:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$92, %cx
	cmpw	$-21402, %cx            # imm = 0xAC66
	jne	.LBB83_151
# %bb.36:                               # %qsearch.split311
	movl	$1000, %ecx             # imm = 0x3E8
	movw	$-21402, BasicBlockSignatureTracker # imm = 0xAC66
	movw	$39, RunTimeSignatureAdjuster
.LBB83_37:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$38, %dx
	xorw	%si, %dx
	cmpw	$-21401, %dx            # imm = 0xAC67
	movq	-48(%rbp), %r8          # 8-byte Reload
	jne	.LBB83_151
# %bb.38:                               # %qsearch.split313
	movw	$-21401, BasicBlockSignatureTracker # imm = 0xAC67
	movw	$127, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB83_43
# %bb.39:                               # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14239, %ax            # imm = 0xC861
	cmpw	$25606, %ax             # imm = 0x6406
	jne	.LBB83_151
# %bb.40:                               # %qsearch.split315
	movw	$25606, BasicBlockSignatureTracker # imm = 0x6406
	movw	$-14239, RunTimeSignatureAdjuster # imm = 0xC861
# %bb.41:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-21385, %ax            # imm = 0xAC77
	jne	.LBB83_151
# %bb.42:                               # %qsearch.split419
	movl	$1, extendedtime
	movl	time_for_move, %eax
	movl	%eax, (%r15)
	movw	$-21385, BasicBlockSignatureTracker # imm = 0xAC77
	movw	$0, RunTimeSignatureAdjuster
	callq	allocate_time
	movabsq	$.L.str.123, %rdi
	movw	$-21385, BasicBlockSignatureTracker # imm = 0xAC77
	movw	$0, RunTimeSignatureAdjuster
	addl	time_for_move, %eax
	movl	%eax, time_for_move
	movl	(%r15), %esi
	movl	time_for_move, %edx
	movl	time_left, %ecx
	movb	$0, %al
	callq	printf
	movw	$-21385, BasicBlockSignatureTracker # imm = 0xAC77
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB83_45
.LBB83_43:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$103, %ax
	xorw	%cx, %ax
	cmpw	$-21377, %ax            # imm = 0xAC7F
	jne	.LBB83_151
# %bb.44:                               # %qsearch.split299
	movl	$1, time_exit
	movl	$0, (%r8)
	movw	$-21377, BasicBlockSignatureTracker # imm = 0xAC7F
	movw	$1925, RunTimeSignatureAdjuster # imm = 0x785
	jmp	.LBB83_147
.LBB83_45:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$247, %ax
	cmpw	$-21376, %ax            # imm = 0xAC80
	movq	-48(%rbp), %r8          # 8-byte Reload
	movq	-144(%rbp), %r10        # 8-byte Reload
	movq	-136(%rbp), %r9         # 8-byte Reload
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movq	-88(%rbp), %r11         # 8-byte Reload
	jne	.LBB83_151
# %bb.46:                               # %qsearch.split317
	movw	$-21376, BasicBlockSignatureTracker # imm = 0xAC80
	movw	$140, RunTimeSignatureAdjuster
.LBB83_47:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$137, %ax
	xorw	%cx, %ax
	cmpw	$-21371, %ax            # imm = 0xAC85
	jne	.LBB83_151
# %bb.48:                               # %qsearch.split293
	movw	$-21371, BasicBlockSignatureTracker # imm = 0xAC85
	movw	$0, RunTimeSignatureAdjuster
# %bb.49:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-21351, %ax            # imm = 0xAC99
	jne	.LBB83_151
# %bb.50:                               # %qsearch.split319
	movw	$-21351, BasicBlockSignatureTracker # imm = 0xAC99
	movw	$1910, RunTimeSignatureAdjuster # imm = 0x776
.LBB83_51:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1858, %ax              # imm = 0x742
	xorw	%cx, %ax
	cmpw	$-21331, %ax            # imm = 0xACAD
	jne	.LBB83_151
# %bb.52:                               # %qsearch.split
	movl	(%r11), %eax
	movw	$-21331, BasicBlockSignatureTracker # imm = 0xACAD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB83_55
# %bb.53:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-21329, %ax            # imm = 0xACAF
	jne	.LBB83_151
# %bb.54:                               # %qsearch.split323
	movl	ply, %eax
	movw	$-21329, BasicBlockSignatureTracker # imm = 0xACAF
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$300, %eax              # imm = 0x12C
	jl	.LBB83_57
.LBB83_55:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$-21327, %ax            # imm = 0xACB1
	jne	.LBB83_151
# %bb.56:                               # %qsearch.split321
	movl	(%r9), %edi
	movl	(%r10), %esi
	movw	$-21327, BasicBlockSignatureTracker # imm = 0xACB1
	movw	$-18359, RunTimeSignatureAdjuster # imm = 0xB849
	movq	%r8, %r14
	callq	eval
	movq	%r14, %r8
	movw	$-21327, BasicBlockSignatureTracker # imm = 0xACB1
	movw	$-18359, RunTimeSignatureAdjuster # imm = 0xB849
	movl	%eax, (%rbx)
	movl	(%rbx), %eax
	movl	%eax, (%r8)
	movw	$-21327, BasicBlockSignatureTracker # imm = 0xACB1
	movw	$1867, RunTimeSignatureAdjuster # imm = 0x74B
	jmp	.LBB83_147
.LBB83_57:                              # %Buffer__6
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-11799, %ax            # imm = 0xD1E9
	cmpw	$32070, %ax             # imm = 0x7D46
	jne	.LBB83_151
# %bb.58:                               # %qsearch.split325
	movw	$32070, BasicBlockSignatureTracker # imm = 0x7D46
	movw	$-11799, RunTimeSignatureAdjuster # imm = 0xD1E9
# %bb.59:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$-21321, %ax            # imm = 0xACB7
	jne	.LBB83_151
# %bb.60:                               # %qsearch.split421
	movq	%r11, -88(%rbp)         # 8-byte Spill
	movq	%rbx, -56(%rbp)         # 8-byte Spill
	movq	%r10, %rbx
	movq	%r8, -48(%rbp)          # 8-byte Spill
	movl	qnodes(%rip), %eax
	addl	$1, %eax
	movl	%eax, qnodes(%rip)
	movl	nodes(%rip), %eax
	addl	$1, %eax
	movl	%eax, nodes(%rip)
	movq	%r9, %r15
	movl	(%r9), %eax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-21321, BasicBlockSignatureTracker(%rip) # imm = 0xACB7
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movq	%r14, %rdi
	movq	-80(%rbp), %rsi         # 8-byte Reload
	callq	QProbeTT
	movw	$-21321, BasicBlockSignatureTracker(%rip) # imm = 0xACB7
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movw	$-21321, BasicBlockSignatureTracker(%rip) # imm = 0xACB7
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movl	%eax, %ecx
	subl	$4, %eax
	ja	.LBB83_80
# %bb.61:                               # %qsearch.split421
	movq	.LJTI83_0(,%rcx,8), %rax
	jmpq	*%rax
.LBB83_62:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-21316, %ax            # imm = 0xACBC
	movq	-48(%rbp), %r8          # 8-byte Reload
	jne	.LBB83_151
# %bb.63:                               # %qsearch.split329
	movl	(%r14), %eax
	movl	%eax, (%r8)
	movw	$-21316, BasicBlockSignatureTracker # imm = 0xACBC
	movw	$1862, RunTimeSignatureAdjuster # imm = 0x746
	jmp	.LBB83_147
.LBB83_64:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-21314, %ax            # imm = 0xACBE
	movq	-48(%rbp), %r8          # 8-byte Reload
	movq	%r15, %rcx
	jne	.LBB83_151
# %bb.65:                               # %qsearch.split331
	movl	(%r14), %eax
	movl	(%rcx), %ecx
	movw	$-21314, BasicBlockSignatureTracker # imm = 0xACBE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB83_68
# %bb.66:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$125, %ax
	cmpw	$-21309, %ax            # imm = 0xACC3
	jne	.LBB83_151
# %bb.67:                               # %qsearch.split339
	movl	(%r14), %eax
	movl	%eax, (%r8)
	movw	$-21309, BasicBlockSignatureTracker # imm = 0xACC3
	movw	$1849, RunTimeSignatureAdjuster # imm = 0x739
	jmp	.LBB83_147
.LBB83_68:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$92, %ax
	cmpw	$-21278, %ax            # imm = 0xACE2
	jne	.LBB83_151
# %bb.69:                               # %qsearch.split341
	movw	$-21278, BasicBlockSignatureTracker # imm = 0xACE2
	movw	$85, RunTimeSignatureAdjuster
	jmp	.LBB83_80
.LBB83_70:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$64, %ax
	cmpw	$-21257, %ax            # imm = 0xACF7
	movq	-48(%rbp), %r8          # 8-byte Reload
	movq	%rbx, %rcx
	jne	.LBB83_151
# %bb.71:                               # %qsearch.split333
	movl	(%r14), %eax
	movl	(%rcx), %ecx
	movw	$-21257, BasicBlockSignatureTracker # imm = 0xACF7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB83_74
# %bb.72:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$507, %ax               # imm = 0x1FB
	cmpw	$-21236, %ax            # imm = 0xAD0C
	jne	.LBB83_151
# %bb.73:                               # %qsearch.split343
	movl	(%r14), %eax
	movl	%eax, (%r8)
	movw	$-21236, BasicBlockSignatureTracker # imm = 0xAD0C
	movw	$1782, RunTimeSignatureAdjuster # imm = 0x6F6
	jmp	.LBB83_147
.LBB83_74:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$506, %ax               # imm = 0x1FA
	cmpw	$-21235, %ax            # imm = 0xAD0D
	jne	.LBB83_151
# %bb.75:                               # %qsearch.split345
	movw	$-21235, BasicBlockSignatureTracker # imm = 0xAD0D
	movw	$442, RunTimeSignatureAdjuster # imm = 0x1BA
	jmp	.LBB83_80
.LBB83_76:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$405, %ax               # imm = 0x195
	cmpw	$-21214, %ax            # imm = 0xAD22
	jne	.LBB83_151
# %bb.77:                               # %qsearch.split335
	movw	$-21214, BasicBlockSignatureTracker # imm = 0xAD22
	movw	$405, RunTimeSignatureAdjuster # imm = 0x195
	jmp	.LBB83_80
.LBB83_78:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$413, %ax               # imm = 0x19D
	cmpw	$-21206, %ax            # imm = 0xAD2A
	jne	.LBB83_151
# %bb.79:                               # %qsearch.split337
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$-1, (%rax)
	movw	$-21206, BasicBlockSignatureTracker # imm = 0xAD2A
	movw	$413, RunTimeSignatureAdjuster # imm = 0x19D
.LBB83_80:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$408, %ax               # imm = 0x198
	xorw	%cx, %ax
	cmpw	$-21201, %ax            # imm = 0xAD2F
	movq	%rbx, %rax
	movq	%r15, %rcx
	jne	.LBB83_151
# %bb.81:                               # %qsearch.split327
	movl	(%rcx), %edi
	movl	(%rax), %esi
	movw	$-21201, BasicBlockSignatureTracker # imm = 0xAD2F
	movw	$-17961, RunTimeSignatureAdjuster # imm = 0xB9D7
	callq	eval
	movq	%rbx, %rdx
	movw	$-21201, BasicBlockSignatureTracker # imm = 0xAD2F
	movw	$-17961, RunTimeSignatureAdjuster # imm = 0xB9D7
	movl	%eax, (%r12)
	movl	(%r12), %eax
	movl	(%rdx), %ecx
	movw	$-21201, BasicBlockSignatureTracker # imm = 0xAD2F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB83_84
# %bb.82:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-21198, %ax            # imm = 0xAD32
	jne	.LBB83_151
# %bb.83:                               # %qsearch.split347
	movl	(%r12), %edi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movl	(%rdx), %edx
	movw	$-21198, BasicBlockSignatureTracker # imm = 0xAD32
	movw	$0, RunTimeSignatureAdjuster
	movl	$500, %ecx              # imm = 0x1F4
	callq	QStoreTT
	movq	-48(%rbp), %r8          # 8-byte Reload
	movw	$-21198, BasicBlockSignatureTracker # imm = 0xAD32
	movw	$1736, RunTimeSignatureAdjuster # imm = 0x6C8
	movl	(%r12), %eax
	movl	%eax, (%r8)
	movw	$-21198, BasicBlockSignatureTracker # imm = 0xAD32
	movw	$1736, RunTimeSignatureAdjuster # imm = 0x6C8
	jmp	.LBB83_147
.LBB83_84:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-21197, %ax            # imm = 0xAD33
	movq	%r15, %rdx
	jne	.LBB83_151
# %bb.85:                               # %qsearch.split349
	movl	(%r12), %eax
	movl	(%rdx), %ecx
	movw	$-21197, BasicBlockSignatureTracker # imm = 0xAD33
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB83_88
# %bb.86:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$102, %ax
	cmpw	$-21163, %ax            # imm = 0xAD55
	jne	.LBB83_151
# %bb.87:                               # %qsearch.split351
	movl	(%r12), %eax
	movl	%eax, (%rdx)
	movw	$-21163, BasicBlockSignatureTracker # imm = 0xAD55
	movw	$102, RunTimeSignatureAdjuster
.LBB83_88:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$106, %ax
	xorw	%cx, %ax
	cmpw	$-21159, %ax            # imm = 0xAD59
	jne	.LBB83_151
# %bb.89:                               # %qsearch.split353
	movw	$-21159, BasicBlockSignatureTracker # imm = 0xAD59
	movw	$0, RunTimeSignatureAdjuster
# %bb.90:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$-21131, %ax            # imm = 0xAD75
	jne	.LBB83_151
# %bb.91:                               # %qsearch.split355
	movl	$-1, (%r13)
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	$-1000000, (%rax)       # imm = 0xFFF0BDC0
	movq	-128(%rbp), %r14        # 8-byte Reload
	movl	$0, (%r14)
	movw	$-21131, BasicBlockSignatureTracker # imm = 0xAD75
	movw	$10213, RunTimeSignatureAdjuster # imm = 0x27E5
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-21131, BasicBlockSignatureTracker # imm = 0xAD75
	movw	$10213, RunTimeSignatureAdjuster # imm = 0x27E5
	movl	numb_moves, %eax
	movl	%eax, (%r14)
	movl	kingcap, %eax
	movw	$-21131, BasicBlockSignatureTracker # imm = 0xAD75
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB83_94
# %bb.92:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$244, %ax
	cmpw	$-21119, %ax            # imm = 0xAD81
	movq	-48(%rbp), %r8          # 8-byte Reload
	jne	.LBB83_151
# %bb.93:                               # %qsearch.split357
	movl	$50000, (%r8)           # imm = 0xC350
	movw	$-21119, BasicBlockSignatureTracker # imm = 0xAD81
	movw	$1659, RunTimeSignatureAdjuster # imm = 0x67B
	jmp	.LBB83_147
.LBB83_94:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$240, %ax
	cmpw	$-21115, %ax            # imm = 0xAD85
	movq	%r15, %rax
	jne	.LBB83_151
# %bb.95:                               # %qsearch.split359
	movl	(%rax), %eax
	subl	$150, %eax
	subl	(%r12), %eax
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %ecx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r8d
	movw	$-21115, BasicBlockSignatureTracker # imm = 0xAD85
	movw	$0, RunTimeSignatureAdjuster
	movq	-72(%rbp), %rdi         # 8-byte Reload
	movq	-176(%rbp), %rsi        # 8-byte Reload
	movq	-168(%rbp), %rdx        # 8-byte Reload
	callq	order_moves
	movw	$-21115, BasicBlockSignatureTracker # imm = 0xAD85
	movw	$0, RunTimeSignatureAdjuster
	movw	$-21115, BasicBlockSignatureTracker # imm = 0xAD85
	movw	$0, RunTimeSignatureAdjuster
.LBB83_96:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB83_135 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-21107, %ax            # imm = 0xAD8D
	jne	.LBB83_150
# %bb.97:                               # %qsearch.split361
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	movw	$-21107, BasicBlockSignatureTracker # imm = 0xAD8D
	movw	$0, RunTimeSignatureAdjuster
	movq	-64(%rbp), %rdi         # 8-byte Reload
	movq	-176(%rbp), %rsi        # 8-byte Reload
	callq	remove_one
	movw	$-21107, BasicBlockSignatureTracker # imm = 0xAD8D
	movw	$0, RunTimeSignatureAdjuster
	movw	$-21107, BasicBlockSignatureTracker # imm = 0xAD8D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB83_145
# %bb.98:                               #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-21094, %ax            # imm = 0xAD9A
	jne	.LBB83_150
# %bb.99:                               # %qsearch.split363
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movl	12(%rcx), %eax
	movw	$-21094, BasicBlockSignatureTracker # imm = 0xAD9A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB83_111
# %bb.100:                              #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-21087, %ax            # imm = 0xADA1
	jne	.LBB83_150
# %bb.101:                              # %qsearch.split369
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-168(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-21087, BasicBlockSignatureTracker # imm = 0xADA1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB83_104
# %bb.102:                              #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-21065, %ax            # imm = 0xADB7
	jne	.LBB83_150
# %bb.103:                              # %qsearch.split373
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-21065, BasicBlockSignatureTracker # imm = 0xADB7
	movw	$22, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jge	.LBB83_107
.LBB83_104:                             #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-21062, %ax            # imm = 0xADBA
	jne	.LBB83_150
# %bb.105:                              # %qsearch.split371
                                        #   in Loop: Header=BB83_96 Depth=1
	movw	$-21062, BasicBlockSignatureTracker # imm = 0xADBA
	movw	$63, RunTimeSignatureAdjuster
.LBB83_106:                             # %.backedge
                                        #   in Loop: Header=BB83_96 Depth=1
	jmp	.LBB83_96
.LBB83_107:                             # %Buffer__7
                                        #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10753, %ax             # imm = 0x2A01
	cmpw	$-30794, %ax            # imm = 0x87B6
	jne	.LBB83_150
# %bb.108:                              # %qsearch.split375
                                        #   in Loop: Header=BB83_96 Depth=1
	movw	$-30794, BasicBlockSignatureTracker # imm = 0x87B6
	movw	$10753, RunTimeSignatureAdjuster # imm = 0x2A01
# %bb.109:                              #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$120, %ax
	xorw	%cx, %ax
	cmpw	$-21041, %ax            # imm = 0xADCF
	jne	.LBB83_150
# %bb.110:                              # %qsearch.split423
                                        #   in Loop: Header=BB83_96 Depth=1
	movw	$-21041, BasicBlockSignatureTracker # imm = 0xADCF
	movw	$85, RunTimeSignatureAdjuster
.LBB83_111:                             #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$78, %ax
	xorw	%cx, %ax
	cmpw	$-21036, %ax            # imm = 0xADD4
	jne	.LBB83_150
# %bb.112:                              # %qsearch.split367
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-21036, BasicBlockSignatureTracker # imm = 0xADD4
	movw	$10084, RunTimeSignatureAdjuster # imm = 0x2764
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	make
	xorl	%esi, %esi
	movw	$-21036, BasicBlockSignatureTracker # imm = 0xADD4
	movw	$10084, RunTimeSignatureAdjuster # imm = 0x2764
	xorl	%edi, %edi
	subl	(%rbx), %edi
	subl	(%r15), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	subl	$1, %edx
	movw	$-21036, BasicBlockSignatureTracker # imm = 0xADD4
	movw	$0, RunTimeSignatureAdjuster
	callq	qsearch
	xorl	%ecx, %ecx
	movw	$-21036, BasicBlockSignatureTracker # imm = 0xADD4
	movw	$10084, RunTimeSignatureAdjuster # imm = 0x2764
	subl	%eax, %ecx
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	%ecx, (%rax)
	movl	(%rax), %eax
	movw	$-21036, BasicBlockSignatureTracker # imm = 0xADD4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-50000, %eax           # imm = 0xFFFF3CB0
	je	.LBB83_115
# %bb.113:                              #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$-21018, %ax            # imm = 0xADE6
	jne	.LBB83_150
# %bb.114:                              # %qsearch.split377
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-184(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-21018, BasicBlockSignatureTracker # imm = 0xADE6
	movw	$50, RunTimeSignatureAdjuster
.LBB83_115:                             #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$-21015, %ax            # imm = 0xADE9
	jne	.LBB83_150
# %bb.116:                              # %qsearch.split379
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-21015, BasicBlockSignatureTracker # imm = 0xADE9
	movw	$9998, RunTimeSignatureAdjuster # imm = 0x270E
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-21015, BasicBlockSignatureTracker # imm = 0xADE9
	movw	$9998, RunTimeSignatureAdjuster # imm = 0x270E
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-21015, BasicBlockSignatureTracker # imm = 0xADE9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB83_123
# %bb.117:                              #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-20996, %ax            # imm = 0xADFC
	jne	.LBB83_150
# %bb.118:                              # %qsearch.split383
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-20996, BasicBlockSignatureTracker # imm = 0xADFC
	movw	$21, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB83_123
# %bb.119:                              # %Buffer__8
                                        #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13176, %ax             # imm = 0x3378
	cmpw	$-24956, %ax            # imm = 0x9E84
	jne	.LBB83_150
# %bb.120:                              # %qsearch.split387
                                        #   in Loop: Header=BB83_96 Depth=1
	movw	$-24956, BasicBlockSignatureTracker # imm = 0x9E84
	movw	$13176, RunTimeSignatureAdjuster # imm = 0x3378
# %bb.121:                              #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1014, %ax              # imm = 0x3F6
	xorw	%cx, %ax
	cmpw	$-20982, %ax            # imm = 0xAE0A
	jne	.LBB83_150
# %bb.122:                              # %qsearch.split425
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-20982, BasicBlockSignatureTracker # imm = 0xAE0A
	movw	$995, RunTimeSignatureAdjuster # imm = 0x3E3
.LBB83_123:                             #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1009, %ax              # imm = 0x3F1
	xorw	%cx, %ax
	cmpw	$-20968, %ax            # imm = 0xAE18
	jne	.LBB83_150
# %bb.124:                              # %qsearch.split385
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r15), %ecx
	movw	$-20968, BasicBlockSignatureTracker # imm = 0xAE18
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB83_143
# %bb.125:                              #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$-20946, %ax            # imm = 0xAE2E
	jne	.LBB83_150
# %bb.126:                              # %qsearch.split389
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-20946, BasicBlockSignatureTracker # imm = 0xAE2E
	movw	$54, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB83_143
# %bb.127:                              # %Buffer__9
                                        #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21667, %ax             # imm = 0x54A3
	cmpw	$-1395, %ax             # imm = 0xFA8D
	jne	.LBB83_150
# %bb.128:                              # %qsearch.split393
                                        #   in Loop: Header=BB83_96 Depth=1
	movw	$-1395, BasicBlockSignatureTracker # imm = 0xFA8D
	movw	$21667, RunTimeSignatureAdjuster # imm = 0x54A3
# %bb.129:                              #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-20943, %ax            # imm = 0xAE31
	jne	.LBB83_150
# %bb.130:                              # %qsearch.split427
                                        #   in Loop: Header=BB83_96 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%rbx), %ecx
	movw	$-20943, BasicBlockSignatureTracker # imm = 0xAE31
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB83_133
# %bb.131:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-20936, %ax            # imm = 0xAE38
	movq	-56(%rbp), %rax         # 8-byte Reload
	jne	.LBB83_151
# %bb.132:                              # %qsearch.split395
	movl	(%rax), %edi
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %esi
	movl	(%rbx), %edx
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-20936, BasicBlockSignatureTracker # imm = 0xAE38
	movw	$778, RunTimeSignatureAdjuster # imm = 0x30A
	movq	%rax, %rbx
	callq	QStoreTT
	movq	-48(%rbp), %r8          # 8-byte Reload
	movw	$-20936, BasicBlockSignatureTracker # imm = 0xAE38
	movw	$778, RunTimeSignatureAdjuster # imm = 0x30A
	movl	(%rbx), %eax
	movl	%eax, (%r8)
	movw	$-20936, BasicBlockSignatureTracker # imm = 0xAE38
	movw	$1474, RunTimeSignatureAdjuster # imm = 0x5C2
	jmp	.LBB83_147
.LBB83_133:                             #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-20929, %ax            # imm = 0xAE3F
	jne	.LBB83_150
# %bb.134:                              # %qsearch.split397
                                        #   in Loop: Header=BB83_96 Depth=1
	movabsq	$pv, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movl	%ecx, (%r15)
	movslq	ply, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movslq	ply, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-72(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rax)
	movl	ply, %eax
	addl	$1, %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-20929, BasicBlockSignatureTracker # imm = 0xAE3F
	movw	$0, RunTimeSignatureAdjuster
.LBB83_135:                             #   Parent Loop BB83_96 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$89, %ax
	xorw	%cx, %ax
	cmpw	$-20890, %ax            # imm = 0xAE66
	jne	.LBB83_149
# %bb.136:                              # %qsearch.split399
                                        #   in Loop: Header=BB83_135 Depth=2
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	ply, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movl	pv_length(,%rcx,4), %ecx
	movw	$-20890, BasicBlockSignatureTracker # imm = 0xAE66
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB83_141
# %bb.137:                              #   in Loop: Header=BB83_135 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-20883, %ax            # imm = 0xAE6D
	jne	.LBB83_149
# %bb.138:                              # %qsearch.split401
                                        #   in Loop: Header=BB83_135 Depth=2
	movabsq	$pv, %rax
	movslq	ply, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movq	-96(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rdx
	movl	ply, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	(%rax), %rcx
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rax), %rax
	movq	%rax, 16(%rdx)
	movw	$-20883, BasicBlockSignatureTracker # imm = 0xAE6D
	movw	$0, RunTimeSignatureAdjuster
# %bb.139:                              #   in Loop: Header=BB83_135 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-20875, %ax            # imm = 0xAE75
	jne	.LBB83_149
# %bb.140:                              # %qsearch.split405
                                        #   in Loop: Header=BB83_135 Depth=2
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-20875, BasicBlockSignatureTracker # imm = 0xAE75
	movw	$74, RunTimeSignatureAdjuster
	jmp	.LBB83_135
.LBB83_141:                             #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$247, %ax
	cmpw	$-20847, %ax            # imm = 0xAE91
	jne	.LBB83_150
# %bb.142:                              # %qsearch.split403
                                        #   in Loop: Header=BB83_96 Depth=1
	movl	ply, %eax
	addl	$1, %eax
	cltq
	movl	pv_length(,%rax,4), %eax
	movslq	ply, %rcx
	movl	%eax, pv_length(,%rcx,4)
	movw	$-20847, BasicBlockSignatureTracker # imm = 0xAE91
	movw	$137, RunTimeSignatureAdjuster
.LBB83_143:                             #   in Loop: Header=BB83_96 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$140, %ax
	xorw	%cx, %ax
	cmpw	$-20844, %ax            # imm = 0xAE94
	jne	.LBB83_150
# %bb.144:                              # %qsearch.split391
                                        #   in Loop: Header=BB83_96 Depth=1
	movw	$-20844, BasicBlockSignatureTracker # imm = 0xAE94
	movw	$785, RunTimeSignatureAdjuster # imm = 0x311
	jmp	.LBB83_106
.LBB83_145:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$792, %ax               # imm = 0x318
	cmpw	$-20843, %ax            # imm = 0xAE95
	jne	.LBB83_151
# %bb.146:                              # %qsearch.split365
	movl	(%r15), %edi
	movq	-112(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movl	(%rbx), %edx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %ecx
	movw	$-20843, BasicBlockSignatureTracker # imm = 0xAE95
	movw	$935, RunTimeSignatureAdjuster # imm = 0x3A7
	callq	QStoreTT
	movq	-48(%rbp), %r8          # 8-byte Reload
	movw	$-20843, BasicBlockSignatureTracker # imm = 0xAE95
	movw	$935, RunTimeSignatureAdjuster # imm = 0x3A7
	movl	(%r15), %eax
	movl	%eax, (%r8)
	movw	$-20843, BasicBlockSignatureTracker # imm = 0xAE95
	movw	$1391, RunTimeSignatureAdjuster # imm = 0x56F
.LBB83_147:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1367, %ax              # imm = 0x557
	xorw	%cx, %ax
	cmpw	$-20819, %ax            # imm = 0xAEAD
	jne	.LBB83_151
# %bb.148:                              # %qsearch.split289
	movl	(%r8), %eax
	movw	$-20819, BasicBlockSignatureTracker # imm = 0xAEAD
	movw	$823, RunTimeSignatureAdjuster # imm = 0x337
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB83_149:                             # %CFerrorHandler.qsearch.loopexit
	jmp	.LBB83_151
.LBB83_150:                             # %CFerrorHandler.qsearch.loopexit1
	jmp	.LBB83_151
.LBB83_151:                             # %CFerrorHandler.qsearch
	callq	FAULT_DETECTED_CFC
.Lfunc_end83:
	.size	qsearch, .Lfunc_end83-qsearch
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI83_0:
	.quad	.LBB83_76
	.quad	.LBB83_64
	.quad	.LBB83_70
	.quad	.LBB83_62
	.quad	.LBB83_78
                                        # -- End function
	.text
	.globl	remove_one              # -- Begin function remove_one
	.p2align	4, 0x90
	.type	remove_one,@function
remove_one:                             # @remove_one
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$824, %ax               # imm = 0x338
	xorw	%cx, %ax
	cmpw	$-20811, %ax            # imm = 0xAEB5
	jne	.LBB84_23
# %bb.1:                                # %remove_one.split66
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$824, %ax               # imm = 0x338
	xorw	%cx, %ax
	cmpw	$-20811, %ax            # imm = 0xAEB5
	jne	.LBB84_23
# %bb.2:                                # %remove_one.split64
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$824, %ax               # imm = 0x338
	xorw	%cx, %ax
	cmpw	$-20811, %ax            # imm = 0xAEB5
	jne	.LBB84_23
# %bb.3:                                # %remove_one.split
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rdi, (%r10)
	movq	%rsi, (%r9)
	movl	%edx, (%r11)
	movl	$-1000000, (%rax)       # imm = 0xFFF0BDC0
	movq	(%r10), %rdx
	movl	$-1000000, (%rdx)       # imm = 0xFFF0BDC0
	movl	$0, (%rcx)
	movw	$-20811, BasicBlockSignatureTracker # imm = 0xAEB5
	movw	$0, RunTimeSignatureAdjuster
.LBB84_4:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$108, %dx
	xorw	%si, %dx
	cmpw	$-20775, %dx            # imm = 0xAED9
	jne	.LBB84_22
# %bb.5:                                # %remove_one.split46
                                        #   in Loop: Header=BB84_4 Depth=1
	movl	(%rcx), %edx
	movl	(%r11), %esi
	movw	$-20775, BasicBlockSignatureTracker # imm = 0xAED9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %edx
	jge	.LBB84_14
# %bb.6:                                #   in Loop: Header=BB84_4 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$53, %dx
	cmpw	$-20756, %dx            # imm = 0xAEEC
	jne	.LBB84_22
# %bb.7:                                # %remove_one.split48
                                        #   in Loop: Header=BB84_4 Depth=1
	movq	(%r9), %rdx
	movslq	(%rcx), %rsi
	movl	(%rdx,%rsi,4), %edx
	movl	(%rax), %esi
	movw	$-20756, BasicBlockSignatureTracker # imm = 0xAEEC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%esi, %edx
	jle	.LBB84_10
# %bb.8:                                #   in Loop: Header=BB84_4 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$20, %dx
	cmpw	$-20744, %dx            # imm = 0xAEF8
	jne	.LBB84_22
# %bb.9:                                # %remove_one.split52
                                        #   in Loop: Header=BB84_4 Depth=1
	movl	(%rcx), %edx
	movq	(%r10), %rsi
	movl	%edx, (%rsi)
	movq	(%r9), %rdx
	movslq	(%rcx), %rsi
	movl	(%rdx,%rsi,4), %edx
	movl	%edx, (%rax)
	movw	$-20744, BasicBlockSignatureTracker # imm = 0xAEF8
	movw	$20, RunTimeSignatureAdjuster
.LBB84_10:                              #   in Loop: Header=BB84_4 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$481, %dx               # imm = 0x1E1
	xorw	%si, %dx
	cmpw	$-20723, %dx            # imm = 0xAF0D
	jne	.LBB84_22
# %bb.11:                               # %remove_one.split54
                                        #   in Loop: Header=BB84_4 Depth=1
	movw	$-20723, BasicBlockSignatureTracker # imm = 0xAF0D
	movw	$0, RunTimeSignatureAdjuster
# %bb.12:                               #   in Loop: Header=BB84_4 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$27, %dx
	cmpw	$-20714, %dx            # imm = 0xAF16
	jne	.LBB84_22
# %bb.13:                               # %remove_one.split56
                                        #   in Loop: Header=BB84_4 Depth=1
	movl	(%rcx), %edx
	addl	$1, %edx
	movl	%edx, (%rcx)
	movw	$-20714, BasicBlockSignatureTracker # imm = 0xAF16
	movw	$419, RunTimeSignatureAdjuster # imm = 0x1A3
	jmp	.LBB84_4
.LBB84_14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$455, %ax               # imm = 0x1C7
	cmpw	$-20706, %ax            # imm = 0xAF1E
	jne	.LBB84_23
# %bb.15:                               # %remove_one.split50
	movq	(%r10), %rax
	movl	(%rax), %eax
	movw	$-20706, BasicBlockSignatureTracker # imm = 0xAF1E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-1000000, %eax         # imm = 0xFFF0BDC0
	jle	.LBB84_18
# %bb.16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-20702, %ax            # imm = 0xAF22
	jne	.LBB84_23
# %bb.17:                               # %remove_one.split58
	movq	(%r9), %rax
	movq	(%r10), %rcx
	movslq	(%rcx), %rcx
	movl	$-1000000, (%rax,%rcx,4) # imm = 0xFFF0BDC0
	movl	$1, (%r8)
	movw	$-20702, BasicBlockSignatureTracker # imm = 0xAF22
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB84_20
.LBB84_18:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-20700, %ax            # imm = 0xAF24
	jne	.LBB84_23
# %bb.19:                               # %remove_one.split60
	movl	$0, (%r8)
	movw	$-20700, BasicBlockSignatureTracker # imm = 0xAF24
	movw	$6, RunTimeSignatureAdjuster
.LBB84_20:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-20691, %ax            # imm = 0xAF2D
	jne	.LBB84_23
# %bb.21:                               # %remove_one.split62
	movl	(%r8), %eax
	movw	$-20691, BasicBlockSignatureTracker # imm = 0xAF2D
	movw	$680, RunTimeSignatureAdjuster # imm = 0x2A8
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB84_22:                              # %CFerrorHandler.remove_one.loopexit
	jmp	.LBB84_23
.LBB84_23:                              # %CFerrorHandler.remove_one
	callq	FAULT_DETECTED_CFC
.Lfunc_end84:
	.size	remove_one, .Lfunc_end84-remove_one
	.cfi_endproc
                                        # -- End function
	.globl	search                  # -- Begin function search
	.p2align	4, 0x90
	.type	search,@function
search:                                 # @search
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$232, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$7183, %ax              # imm = 0x1C0F
	xorw	%bx, %ax
	cmpw	$-20662, %ax            # imm = 0xAF4A
	jne	.LBB85_706
# %bb.1:                                # %search.split2017
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$7183, %ax              # imm = 0x1C0F
	xorw	%bx, %ax
	cmpw	$-20662, %ax            # imm = 0xAF4A
	jne	.LBB85_706
# %bb.2:                                # %search.split2015
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$7183, %ax              # imm = 0x1C0F
	xorw	%bx, %ax
	cmpw	$-20662, %ax            # imm = 0xAF4A
	jne	.LBB85_706
# %bb.3:                                # %search.split2013
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$7183, %ax              # imm = 0x1C0F
	xorw	%bx, %ax
	cmpw	$-20662, %ax            # imm = 0xAF4A
	jne	.LBB85_706
# %bb.4:                                # %search.split1887
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$7183, %ax              # imm = 0x1C0F
	xorw	%bx, %ax
	cmpw	$-20662, %ax            # imm = 0xAF4A
	jne	.LBB85_706
# %bb.5:                                # %search.split1871
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$7183, %ax              # imm = 0x1C0F
	xorw	%bx, %ax
	cmpw	$-20662, %ax            # imm = 0xAF4A
	jne	.LBB85_706
# %bb.6:                                # %search.split1865
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$7183, %ax              # imm = 0x1C0F
	xorw	%bx, %ax
	cmpw	$-20662, %ax            # imm = 0xAF4A
	jne	.LBB85_706
# %bb.7:                                # %search.split1643
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$7183, %ax              # imm = 0x1C0F
	xorw	%bx, %ax
	cmpw	$-20662, %ax            # imm = 0xAF4A
	jne	.LBB85_706
# %bb.8:                                # %search.split1641
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rax
	addq	$-12288, %rax           # imm = 0xD000
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -200(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rbx
	addq	$-2048, %rbx            # imm = 0xF800
	movq	%rbx, -240(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-2048, %rbx            # imm = 0xF800
	movq	%rbx, -272(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -232(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -176(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -104(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -184(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -160(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -96(%rbp)         # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -264(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -128(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -208(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -112(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -144(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -216(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -168(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-32, %rbx
	movq	%rbx, -248(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -256(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -136(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -224(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -152(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, -192(%rbp)        # 8-byte Spill
	movq	%rbx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%r10, %rbx
	movl	%edi, (%r10)
	movq	%r8, -88(%rbp)          # 8-byte Spill
	movl	%esi, (%r8)
	movq	%r9, -64(%rbp)          # 8-byte Spill
	movl	%edx, (%r9)
	movl	%ecx, (%r14)
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movl	$-1000000, (%rax)       # imm = 0xFFF0BDC0
	movl	nodes, %eax
	addl	$1, %eax
	movl	%eax, nodes
	movl	nodes, %eax
	andl	$65535, %eax            # imm = 0xFFFF
	movw	$-20662, BasicBlockSignatureTracker # imm = 0xAF4A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_57
# %bb.9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-20649, %ax            # imm = 0xAF57
	jne	.LBB85_706
# %bb.10:                               # %search.split1431
	movw	$-20649, BasicBlockSignatureTracker # imm = 0xAF57
	movw	$-17527, RunTimeSignatureAdjuster # imm = 0xBB89
	callq	interrupt
	movw	$-20649, BasicBlockSignatureTracker # imm = 0xAF57
	movw	$-17527, RunTimeSignatureAdjuster # imm = 0xBB89
	movw	$-20649, BasicBlockSignatureTracker # imm = 0xAF57
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_13
# %bb.11:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-20644, %ax            # imm = 0xAF5C
	jne	.LBB85_706
# %bb.12:                               # %search.split1433
	movl	$1, time_exit
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-20644, BasicBlockSignatureTracker # imm = 0xAF5C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_700
.LBB85_13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-20640, %ax            # imm = 0xAF60
	jne	.LBB85_706
# %bb.14:                               # %search.split1435
	movw	$-20640, BasicBlockSignatureTracker # imm = 0xAF60
	movw	$-17888, RunTimeSignatureAdjuster # imm = 0xBA20
	callq	rtime
	movw	$-20640, BasicBlockSignatureTracker # imm = 0xAF60
	movw	$-17888, RunTimeSignatureAdjuster # imm = 0xBA20
	movq	start_time, %rsi
	movw	$-20640, BasicBlockSignatureTracker # imm = 0xAF60
	movw	$12327, RunTimeSignatureAdjuster # imm = 0x3027
	movq	%rax, %rdi
	callq	rdifftime
	movw	$-20640, BasicBlockSignatureTracker # imm = 0xAF60
	movw	$12327, RunTimeSignatureAdjuster # imm = 0x3027
	movl	time_for_move, %ecx
	movw	$-20640, BasicBlockSignatureTracker # imm = 0xAF60
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB85_53
# %bb.15:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-20637, %ax            # imm = 0xAF63
	jne	.LBB85_706
# %bb.16:                               # %search.split1439
	movl	i_depth, %eax
	movw	$-20637, BasicBlockSignatureTracker # imm = 0xAF63
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB85_53
# %bb.17:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9758, %ax              # imm = 0x261E
	cmpw	$-30339, %ax            # imm = 0x897D
	jne	.LBB85_706
# %bb.18:                               # %search.split1443
	movw	$-30339, BasicBlockSignatureTracker # imm = 0x897D
	movw	$9758, RunTimeSignatureAdjuster # imm = 0x261E
# %bb.19:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-20614, %ax            # imm = 0xAF7A
	jne	.LBB85_706
# %bb.20:                               # %search.split2019
	movl	failed, %eax
	movw	$-20614, BasicBlockSignatureTracker # imm = 0xAF7A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB85_49
# %bb.21:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$242, %ax
	cmpw	$-20600, %ax            # imm = 0xAF88
	jne	.LBB85_706
# %bb.22:                               # %search.split1445
	movl	extendedtime, %eax
	movw	$-20600, BasicBlockSignatureTracker # imm = 0xAF88
	movw	$242, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_49
# %bb.23:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12474, %ax             # imm = 0x30BA
	cmpw	$-24782, %ax            # imm = 0x9F32
	jne	.LBB85_706
# %bb.24:                               # %search.split1449
	movw	$-24782, BasicBlockSignatureTracker # imm = 0x9F32
	movw	$12474, RunTimeSignatureAdjuster # imm = 0x30BA
# %bb.25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-20584, %ax            # imm = 0xAF98
	jne	.LBB85_706
# %bb.26:                               # %search.split2021
	movl	fixed_time, %eax
	movw	$-20584, BasicBlockSignatureTracker # imm = 0xAF98
	movw	$226, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_49
# %bb.27:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-16104, %ax            # imm = 0xC118
	cmpw	$28288, %ax             # imm = 0x6E80
	jne	.LBB85_706
# %bb.28:                               # %search.split1451
	movw	$28288, BasicBlockSignatureTracker # imm = 0x6E80
	movw	$-16104, RunTimeSignatureAdjuster # imm = 0xC118
# %bb.29:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$-20574, %ax            # imm = 0xAFA2
	jne	.LBB85_706
# %bb.30:                               # %search.split2023
	movl	go_fast, %eax
	movw	$-20574, BasicBlockSignatureTracker # imm = 0xAFA2
	movw	$216, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_49
# %bb.31:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-27060, %ax            # imm = 0x964C
	cmpw	$14830, %ax             # imm = 0x39EE
	jne	.LBB85_706
# %bb.32:                               # %search.split1453
	movw	$14830, BasicBlockSignatureTracker # imm = 0x39EE
	movw	$-27060, RunTimeSignatureAdjuster # imm = 0x964C
# %bb.33:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-20569, %ax            # imm = 0xAFA7
	jne	.LBB85_706
# %bb.34:                               # %search.split2025
	movl	Variant, %eax
	movw	$-20569, BasicBlockSignatureTracker # imm = 0xAFA7
	movw	$221, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB85_49
# %bb.35:                               # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-7547, %ax             # imm = 0xE285
	cmpw	$19746, %ax             # imm = 0x4D22
	jne	.LBB85_706
# %bb.36:                               # %search.split1455
	movw	$19746, BasicBlockSignatureTracker # imm = 0x4D22
	movw	$-7547, RunTimeSignatureAdjuster # imm = 0xE285
# %bb.37:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$-20549, %ax            # imm = 0xAFBB
	jne	.LBB85_706
# %bb.38:                               # %search.split2027
	movl	time_left, %eax
	movl	time_for_move, %ecx
	shll	$2, %ecx
	movw	$-20549, BasicBlockSignatureTracker # imm = 0xAFBB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1000, %ecx             # imm = 0x3E8
	jle	.LBB85_41
# %bb.39:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$123, %cx
	cmpw	$-20544, %cx            # imm = 0xAFC0
	jne	.LBB85_706
# %bb.40:                               # %search.split1457
	movl	time_for_move, %ecx
	shll	$2, %ecx
	movw	$-20544, BasicBlockSignatureTracker # imm = 0xAFC0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_43
.LBB85_41:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$113, %cx
	cmpw	$-20534, %cx            # imm = 0xAFCA
	jne	.LBB85_706
# %bb.42:                               # %search.split1459
	movl	$1000, %ecx             # imm = 0x3E8
	movw	$-20534, BasicBlockSignatureTracker # imm = 0xAFCA
	movw	$10, RunTimeSignatureAdjuster
.LBB85_43:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$18, %dx
	xorw	%si, %dx
	cmpw	$-20526, %dx            # imm = 0xAFD2
	jne	.LBB85_706
# %bb.44:                               # %search.split1461
	movw	$-20526, BasicBlockSignatureTracker # imm = 0xAFD2
	movw	$168, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB85_49
# %bb.45:                               # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27503, %ax             # imm = 0x6B6F
	cmpw	$-15171, %ax            # imm = 0xC4BD
	jne	.LBB85_706
# %bb.46:                               # %search.split1463
	movw	$-15171, BasicBlockSignatureTracker # imm = 0xC4BD
	movw	$27503, RunTimeSignatureAdjuster # imm = 0x6B6F
# %bb.47:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-20524, %ax            # imm = 0xAFD4
	jne	.LBB85_706
# %bb.48:                               # %search.split2029
	movl	$1, extendedtime
	movl	time_for_move, %eax
	movl	%eax, (%r13)
	movw	$-20524, BasicBlockSignatureTracker # imm = 0xAFD4
	movw	$931, RunTimeSignatureAdjuster # imm = 0x3A3
	callq	allocate_time
	movabsq	$.L.str.123, %rdi
	movw	$-20524, BasicBlockSignatureTracker # imm = 0xAFD4
	movw	$931, RunTimeSignatureAdjuster # imm = 0x3A3
	addl	time_for_move, %eax
	movl	%eax, time_for_move
	movl	(%r13), %esi
	movl	time_for_move, %edx
	movl	time_left, %ecx
	movb	$0, %al
	callq	printf
	movw	$-20524, BasicBlockSignatureTracker # imm = 0xAFD4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_51
.LBB85_49:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$158, %ax
	xorw	%cx, %ax
	cmpw	$-20508, %ax            # imm = 0xAFE4
	jne	.LBB85_706
# %bb.50:                               # %search.split1447
	movl	$1, time_exit
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-20508, BasicBlockSignatureTracker # imm = 0xAFE4
	movw	$184, RunTimeSignatureAdjuster
	jmp	.LBB85_700
.LBB85_51:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-20497, %ax            # imm = 0xAFEF
	jne	.LBB85_706
# %bb.52:                               # %search.split1465
	movw	$-20497, BasicBlockSignatureTracker # imm = 0xAFEF
	movw	$143, RunTimeSignatureAdjuster
.LBB85_53:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$145, %ax
	xorw	%cx, %ax
	cmpw	$-20495, %ax            # imm = 0xAFF1
	jne	.LBB85_706
# %bb.54:                               # %search.split1441
	movw	$-20495, BasicBlockSignatureTracker # imm = 0xAFF1
	movw	$0, RunTimeSignatureAdjuster
# %bb.55:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8176, %ax              # imm = 0x1FF0
	cmpw	$-20479, %ax            # imm = 0xB001
	jne	.LBB85_706
# %bb.56:                               # %search.split1467
	movw	$-20479, BasicBlockSignatureTracker # imm = 0xB001
	movw	$8011, RunTimeSignatureAdjuster # imm = 0x1F4B
.LBB85_57:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8014, %ax              # imm = 0x1F4E
	xorw	%cx, %ax
	cmpw	$-20476, %ax            # imm = 0xB004
	jne	.LBB85_706
# %bb.58:                               # %search.split
	movl	(%rbx), %eax
	movq	-136(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-216(%rbp), %rax        # 8-byte Reload
	movl	$-1000000, (%rax)       # imm = 0xFFF0BDC0
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-112(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movl	ply, %eax
	movslq	ply, %rcx
	movl	%eax, pv_length(,%rcx,4)
	movw	$-20476, BasicBlockSignatureTracker # imm = 0xB004
	movw	$10598, RunTimeSignatureAdjuster # imm = 0x2966
	callq	is_draw
	movw	$-20476, BasicBlockSignatureTracker # imm = 0xB004
	movw	$10598, RunTimeSignatureAdjuster # imm = 0x2966
	movw	$-20476, BasicBlockSignatureTracker # imm = 0xB004
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_61
# %bb.59:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-20465, %ax            # imm = 0xB00F
	jne	.LBB85_706
# %bb.60:                               # %search.split1469
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-20465, BasicBlockSignatureTracker # imm = 0xB00F
	movw	$8019, RunTimeSignatureAdjuster # imm = 0x1F53
	jmp	.LBB85_700
.LBB85_61:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-20459, %ax            # imm = 0xB015
	jne	.LBB85_706
# %bb.62:                               # %search.split1471
	movslq	ply, %rax
	movl	checks(,%rax,4), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	ply, %rax
	movl	$0, singular(,%rax,4)
	movslq	ply, %rax
	movl	$0, recaps(,%rax,4)
	movl	ply, %eax
	movw	$-20459, BasicBlockSignatureTracker # imm = 0xB015
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$300, %eax              # imm = 0x12C
	jge	.LBB85_75
# %bb.63:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-20457, %ax            # imm = 0xB017
	jne	.LBB85_706
# %bb.64:                               # %search.split1473
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-20457, BasicBlockSignatureTracker # imm = 0xB017
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_75
# %bb.65:                               # %Buffer__6
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8449, %ax             # imm = 0xDEFF
	cmpw	$28392, %ax             # imm = 0x6EE8
	jne	.LBB85_706
# %bb.66:                               # %search.split1477
	movw	$28392, BasicBlockSignatureTracker # imm = 0x6EE8
	movw	$-8449, RunTimeSignatureAdjuster # imm = 0xDEFF
# %bb.67:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-20449, %ax            # imm = 0xB01F
	jne	.LBB85_706
# %bb.68:                               # %search.split2031
	movl	ply, %eax
	movl	i_depth, %ecx
	shll	$1, %ecx
	movw	$-20449, BasicBlockSignatureTracker # imm = 0xB01F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB85_73
# %bb.69:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-20447, %ax            # imm = 0xB021
	jne	.LBB85_706
# %bb.70:                               # %search.split1481
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-20447, BasicBlockSignatureTracker # imm = 0xB021
	movw	$52, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_75
# %bb.71:                               # %Buffer__7
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25354, %ax            # imm = 0x9CF6
	cmpw	$11479, %ax             # imm = 0x2CD7
	jne	.LBB85_706
# %bb.72:                               # %search.split1483
	movw	$11479, BasicBlockSignatureTracker # imm = 0x2CD7
	movw	$-25400, RunTimeSignatureAdjuster # imm = 0x9CC8
.LBB85_73:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$-20426, %ax            # imm = 0xB036
	jne	.LBB85_706
# %bb.74:                               # %search.split1479
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	ext_check, %eax
	addl	$1, %eax
	movl	%eax, ext_check
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-20426, BasicBlockSignatureTracker # imm = 0xB036
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_105
.LBB85_75:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$81, %ax
	xorw	%cx, %ax
	cmpw	$-20412, %ax            # imm = 0xB044
	jne	.LBB85_706
# %bb.76:                               # %search.split1475
	movl	ply, %eax
	movw	$-20412, BasicBlockSignatureTracker # imm = 0xB044
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$300, %eax              # imm = 0x12C
	jge	.LBB85_103
# %bb.77:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-20406, %ax            # imm = 0xB04A
	jne	.LBB85_706
# %bb.78:                               # %search.split1487
	movl	ply, %eax
	movw	$-20406, BasicBlockSignatureTracker # imm = 0xB04A
	movw	$14, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jle	.LBB85_103
# %bb.79:                               # %Buffer__8
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14610, %ax            # imm = 0xC6EE
	cmpw	$30372, %ax             # imm = 0x76A4
	jne	.LBB85_706
# %bb.80:                               # %search.split1491
	movw	$30372, BasicBlockSignatureTracker # imm = 0x76A4
	movw	$-14610, RunTimeSignatureAdjuster # imm = 0xC6EE
# %bb.81:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$-20381, %ax            # imm = 0xB063
	jne	.LBB85_706
# %bb.82:                               # %search.split2033
	movl	ply, %eax
	movl	i_depth, %ecx
	shll	$1, %ecx
	movw	$-20381, BasicBlockSignatureTracker # imm = 0xB063
	movw	$39, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB85_103
# %bb.83:                               # %Buffer__9
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4262, %ax              # imm = 0x10A6
	cmpw	$-24379, %ax            # imm = 0xA0C5
	jne	.LBB85_706
# %bb.84:                               # %search.split1493
	movw	$-24379, BasicBlockSignatureTracker # imm = 0xA0C5
	movw	$4262, RunTimeSignatureAdjuster # imm = 0x10A6
# %bb.85:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-20361, %ax            # imm = 0xB077
	jne	.LBB85_706
# %bb.86:                               # %search.split2035
	movl	ply, %eax
	subl	$2, %eax
	cltq
	movl	recaps(,%rax,4), %eax
	movw	$-20361, BasicBlockSignatureTracker # imm = 0xB077
	movw	$51, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_103
# %bb.87:                               # %Buffer__10
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19216, %ax             # imm = 0x4B10
	cmpw	$-1177, %ax             # imm = 0xFB67
	jne	.LBB85_706
# %bb.88:                               # %search.split1495
	movw	$-1177, BasicBlockSignatureTracker # imm = 0xFB67
	movw	$19216, RunTimeSignatureAdjuster # imm = 0x4B10
# %bb.89:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$-20355, %ax            # imm = 0xB07D
	jne	.LBB85_706
# %bb.90:                               # %search.split2037
	movl	cfg_recap, %eax
	movw	$-20355, BasicBlockSignatureTracker # imm = 0xB07D
	movw	$57, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_103
# %bb.91:                               # %Buffer__11
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-6443, %ax             # imm = 0xE6D5
	cmpw	$22184, %ax             # imm = 0x56A8
	jne	.LBB85_706
# %bb.92:                               # %search.split1497
	movw	$22184, BasicBlockSignatureTracker # imm = 0x56A8
	movw	$-6443, RunTimeSignatureAdjuster # imm = 0xE6D5
# %bb.93:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-20353, %ax            # imm = 0xB07F
	jne	.LBB85_706
# %bb.94:                               # %search.split2039
	movabsq	$path, %rax
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movl	8(%rax), %eax
	movw	$-20353, BasicBlockSignatureTracker # imm = 0xB07F
	movw	$59, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB85_103
# %bb.95:                               # %Buffer__12
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-28155, %ax            # imm = 0x9205
	cmpw	$8826, %ax              # imm = 0x227A
	jne	.LBB85_706
# %bb.96:                               # %search.split1499
	movw	$8826, BasicBlockSignatureTracker # imm = 0x227A
	movw	$-28155, RunTimeSignatureAdjuster # imm = 0x9205
# %bb.97:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$234, %ax
	xorw	%cx, %ax
	cmpw	$-20331, %ax            # imm = 0xB095
	jne	.LBB85_706
# %bb.98:                               # %search.split2041
	movabsq	$path, %rax
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$24, %rcx, %rcx
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movslq	8(%rdx), %rcx
	movl	search.rc_index(,%rcx,4), %ecx
	movl	ply, %edx
	subl	$2, %edx
	movslq	%edx, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movslq	8(%rax), %rax
	movl	search.rc_index(,%rax,4), %eax
	movw	$-20331, BasicBlockSignatureTracker # imm = 0xB095
	movw	$209, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB85_103
# %bb.99:                               # %Buffer__13
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30151, %ax            # imm = 0x8A39
	cmpw	$15020, %ax             # imm = 0x3AAC
	jne	.LBB85_706
# %bb.100:                              # %search.split1501
	movw	$15020, BasicBlockSignatureTracker # imm = 0x3AAC
	movw	$-30151, RunTimeSignatureAdjuster # imm = 0x8A39
# %bb.101:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$87, %ax
	xorw	%cx, %ax
	cmpw	$-20286, %ax            # imm = 0xB0C2
	jne	.LBB85_706
# %bb.102:                              # %search.split2043
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	ext_recap, %eax
	addl	$1, %eax
	movl	%eax, ext_recap
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movslq	ply, %rax
	movl	$1, recaps(,%rax,4)
	movw	$-20286, BasicBlockSignatureTracker # imm = 0xB0C2
	movw	$134, RunTimeSignatureAdjuster
.LBB85_103:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$130, %ax
	xorw	%cx, %ax
	cmpw	$-20282, %ax            # imm = 0xB0C6
	jne	.LBB85_706
# %bb.104:                              # %search.split1489
	movw	$-20282, BasicBlockSignatureTracker # imm = 0xB0C6
	movw	$240, RunTimeSignatureAdjuster
.LBB85_105:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$254, %ax
	xorw	%cx, %ax
	cmpw	$-20280, %ax            # imm = 0xB0C8
	jne	.LBB85_706
# %bb.106:                              # %search.split1485
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-20280, BasicBlockSignatureTracker # imm = 0xB0C8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB85_109
# %bb.107:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$-20255, %ax            # imm = 0xB0E1
	jne	.LBB85_706
# %bb.108:                              # %search.split1505
	movl	ply, %eax
	movw	$-20255, BasicBlockSignatureTracker # imm = 0xB0E1
	movw	$41, RunTimeSignatureAdjuster
	cmpl	$300, %eax              # imm = 0x12C
	jl	.LBB85_141
.LBB85_109:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$-20253, %ax            # imm = 0xB0E3
	jne	.LBB85_706
# %bb.110:                              # %search.split1503
	movl	Variant, %eax
	movw	$-20253, BasicBlockSignatureTracker # imm = 0xB0E3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB85_117
# %bb.111:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-20230, %ax            # imm = 0xB0FA
	jne	.LBB85_706
# %bb.112:                              # %search.split1509
	movl	Variant, %eax
	movw	$-20230, BasicBlockSignatureTracker # imm = 0xB0FA
	movw	$25, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB85_117
# %bb.113:                              # %Buffer__15
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3789, %ax             # imm = 0xF133
	cmpw	$16841, %ax             # imm = 0x41C9
	jne	.LBB85_706
# %bb.114:                              # %search.split1513
	movw	$16841, BasicBlockSignatureTracker # imm = 0x41C9
	movw	$-3789, RunTimeSignatureAdjuster # imm = 0xF133
# %bb.115:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$511, %ax               # imm = 0x1FF
	xorw	%cx, %ax
	cmpw	$-20219, %ax            # imm = 0xB105
	jne	.LBB85_706
# %bb.116:                              # %search.split2045
	movl	$300, %edx              # imm = 0x12C
	movl	$1, captures
	movl	(%rbx), %edi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	subl	ply, %edx
	movw	$-20219, BasicBlockSignatureTracker # imm = 0xB105
	movw	$7377, RunTimeSignatureAdjuster # imm = 0x1CD1
	callq	qsearch
	movw	$-20219, BasicBlockSignatureTracker # imm = 0xB105
	movw	$7377, RunTimeSignatureAdjuster # imm = 0x1CD1
	movq	-80(%rbp), %rbx         # 8-byte Reload
	movl	%eax, (%rbx)
	movl	$0, captures
	movl	(%rbx), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-20219, BasicBlockSignatureTracker # imm = 0xB105
	movw	$7769, RunTimeSignatureAdjuster # imm = 0x1E59
	jmp	.LBB85_700
.LBB85_117:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$495, %ax               # imm = 0x1EF
	xorw	%cx, %ax
	cmpw	$-20212, %ax            # imm = 0xB10C
	jne	.LBB85_706
# %bb.118:                              # %search.split1511
	movl	Variant, %eax
	movw	$-20212, BasicBlockSignatureTracker # imm = 0xB10C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB85_121
# %bb.119:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-20211, %ax            # imm = 0xB10D
	jne	.LBB85_706
# %bb.120:                              # %search.split1515
	movw	$-20211, BasicBlockSignatureTracker # imm = 0xB10D
	movw	$-22986, RunTimeSignatureAdjuster # imm = 0xA636
	callq	suicide_eval
	movw	$-20211, BasicBlockSignatureTracker # imm = 0xB10D
	movw	$-22986, RunTimeSignatureAdjuster # imm = 0xA636
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-20211, BasicBlockSignatureTracker # imm = 0xB10D
	movw	$7761, RunTimeSignatureAdjuster # imm = 0x1E51
	jmp	.LBB85_700
.LBB85_121:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-20207, %ax            # imm = 0xB111
	jne	.LBB85_706
# %bb.122:                              # %search.split1517
	movl	Variant, %eax
	movw	$-20207, BasicBlockSignatureTracker # imm = 0xB111
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB85_135
# %bb.123:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-20205, %ax            # imm = 0xB113
	jne	.LBB85_706
# %bb.124:                              # %search.split1519
	movw	$-20205, BasicBlockSignatureTracker # imm = 0xB113
	movw	$-22956, RunTimeSignatureAdjuster # imm = 0xA654
	callq	losers_eval
	movw	$-20205, BasicBlockSignatureTracker # imm = 0xB113
	movw	$-22956, RunTimeSignatureAdjuster # imm = 0xA654
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %edi
	callq	abs
	movw	$-20205, BasicBlockSignatureTracker # imm = 0xB113
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1000000, %eax          # imm = 0xF4240
	jne	.LBB85_133
# %bb.125:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-20195, %ax            # imm = 0xB11D
	jne	.LBB85_706
# %bb.126:                              # %search.split1523
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-20195, BasicBlockSignatureTracker # imm = 0xB11D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB85_129
# %bb.127:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-20192, %ax            # imm = 0xB120
	jne	.LBB85_706
# %bb.128:                              # %search.split1527
	movl	$1000000, %eax          # imm = 0xF4240
	subl	ply, %eax
	movw	$-20192, BasicBlockSignatureTracker # imm = 0xB120
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_131
.LBB85_129:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$36, %ax
	cmpw	$-20167, %ax            # imm = 0xB139
	jne	.LBB85_706
# %bb.130:                              # %search.split1529
	movl	ply, %eax
	addl	$4293967296, %eax       # imm = 0xFFF0BDC0
	movw	$-20167, BasicBlockSignatureTracker # imm = 0xB139
	movw	$25, RunTimeSignatureAdjuster
.LBB85_131:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$116, %cx
	xorw	%dx, %cx
	cmpw	$-20140, %cx            # imm = 0xB154
	jne	.LBB85_706
# %bb.132:                              # %search.split1531
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-20140, BasicBlockSignatureTracker # imm = 0xB154
	movw	$7688, RunTimeSignatureAdjuster # imm = 0x1E08
	jmp	.LBB85_700
.LBB85_133:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$70, %ax
	cmpw	$-20139, %ax            # imm = 0xB155
	jne	.LBB85_706
# %bb.134:                              # %search.split1525
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-20139, BasicBlockSignatureTracker # imm = 0xB155
	movw	$7689, RunTimeSignatureAdjuster # imm = 0x1E09
	jmp	.LBB85_700
.LBB85_135:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$75, %ax
	cmpw	$-20134, %ax            # imm = 0xB15A
	jne	.LBB85_706
# %bb.136:                              # %search.split1521
	movw	$-20134, BasicBlockSignatureTracker # imm = 0xB15A
	movw	$0, RunTimeSignatureAdjuster
# %bb.137:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-20130, %ax            # imm = 0xB15E
	jne	.LBB85_706
# %bb.138:                              # %search.split1533
	movw	$-20130, BasicBlockSignatureTracker # imm = 0xB15E
	movw	$0, RunTimeSignatureAdjuster
# %bb.139:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$33, %ax
	cmpw	$-20097, %ax            # imm = 0xB17F
	jne	.LBB85_706
# %bb.140:                              # %search.split1535
	movw	$-20097, BasicBlockSignatureTracker # imm = 0xB17F
	movw	$414, RunTimeSignatureAdjuster # imm = 0x19E
	jmp	.LBB85_143
.LBB85_141:                             # %Buffer__14
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-13016, %ax            # imm = 0xCD28
	cmpw	$32201, %ax             # imm = 0x7DC9
	jne	.LBB85_706
# %bb.142:                              # %search.split1507
	movw	$32201, BasicBlockSignatureTracker # imm = 0x7DC9
	movw	$-13016, RunTimeSignatureAdjuster # imm = 0xCD28
.LBB85_143:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$355, %ax               # imm = 0x163
	xorw	%cx, %ax
	cmpw	$-20094, %ax            # imm = 0xB182
	jne	.LBB85_706
# %bb.144:                              # %search.split1537
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-232(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movw	$-20094, BasicBlockSignatureTracker(%rip) # imm = 0xB182
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movq	%r12, %rdi
	movq	-184(%rbp), %rdx        # 8-byte Reload
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movq	%r15, %r8
	callq	ProbeTT
	movw	$-20094, BasicBlockSignatureTracker(%rip) # imm = 0xB182
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movw	$-20094, BasicBlockSignatureTracker(%rip) # imm = 0xB182
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movl	%eax, %ecx
	subl	$4, %eax
	ja	.LBB85_164
# %bb.145:                              # %search.split1537
	movq	.LJTI85_0(,%rcx,8), %rax
	jmpq	*%rax
.LBB85_146:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-20090, %ax            # imm = 0xB186
	jne	.LBB85_706
# %bb.147:                              # %search.split1541
	movl	(%r12), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-20090, BasicBlockSignatureTracker # imm = 0xB186
	movw	$7898, RunTimeSignatureAdjuster # imm = 0x1EDA
	jmp	.LBB85_700
.LBB85_148:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$67, %ax
	cmpw	$-20031, %ax            # imm = 0xB1C1
	jne	.LBB85_706
# %bb.149:                              # %search.split1543
	movl	(%r12), %eax
	movl	(%rbx), %ecx
	movw	$-20031, BasicBlockSignatureTracker # imm = 0xB1C1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB85_152
# %bb.150:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-20026, %ax            # imm = 0xB1C6
	jne	.LBB85_706
# %bb.151:                              # %search.split1551
	movl	(%r12), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-20026, BasicBlockSignatureTracker # imm = 0xB1C6
	movw	$7834, RunTimeSignatureAdjuster # imm = 0x1E9A
	jmp	.LBB85_700
.LBB85_152:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-20017, %ax            # imm = 0xB1CF
	jne	.LBB85_706
# %bb.153:                              # %search.split1553
	movw	$-20017, BasicBlockSignatureTracker # imm = 0xB1CF
	movw	$77, RunTimeSignatureAdjuster
	jmp	.LBB85_164
.LBB85_154:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$84, %ax
	cmpw	$-20010, %ax            # imm = 0xB1D6
	jne	.LBB85_706
# %bb.155:                              # %search.split1545
	movl	(%r12), %eax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-20010, BasicBlockSignatureTracker # imm = 0xB1D6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB85_158
# %bb.156:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-20003, %ax            # imm = 0xB1DD
	jne	.LBB85_706
# %bb.157:                              # %search.split1555
	movl	(%r12), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-20003, BasicBlockSignatureTracker # imm = 0xB1DD
	movw	$7809, RunTimeSignatureAdjuster # imm = 0x1E81
	jmp	.LBB85_700
.LBB85_158:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$-19986, %ax            # imm = 0xB1EE
	jne	.LBB85_706
# %bb.159:                              # %search.split1557
	movw	$-19986, BasicBlockSignatureTracker # imm = 0xB1EE
	movw	$108, RunTimeSignatureAdjuster
	jmp	.LBB85_164
.LBB85_160:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$-19975, %ax            # imm = 0xB1F9
	jne	.LBB85_706
# %bb.161:                              # %search.split1547
	movw	$-19975, BasicBlockSignatureTracker # imm = 0xB1F9
	movw	$123, RunTimeSignatureAdjuster
	jmp	.LBB85_164
.LBB85_162:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$-19974, %ax            # imm = 0xB1FA
	jne	.LBB85_706
# %bb.163:                              # %search.split1549
	movq	-184(%rbp), %rax        # 8-byte Reload
	movl	$-1, (%rax)
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-19974, BasicBlockSignatureTracker # imm = 0xB1FA
	movw	$120, RunTimeSignatureAdjuster
.LBB85_164:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$127, %ax
	xorw	%cx, %ax
	cmpw	$-19971, %ax            # imm = 0xB1FD
	jne	.LBB85_706
# %bb.165:                              # %search.split1539
	movq	-184(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19971, BasicBlockSignatureTracker # imm = 0xB1FD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$500, %eax              # imm = 0x1F4
	jne	.LBB85_168
# %bb.166:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1021, %ax              # imm = 0x3FD
	cmpw	$-19968, %ax            # imm = 0xB200
	jne	.LBB85_706
# %bb.167:                              # %search.split1559
	movq	-184(%rbp), %rax        # 8-byte Reload
	movl	$-1, (%rax)
	movw	$-19968, BasicBlockSignatureTracker # imm = 0xB200
	movw	$1021, RunTimeSignatureAdjuster # imm = 0x3FD
.LBB85_168:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1018, %ax              # imm = 0x3FA
	xorw	%cx, %ax
	cmpw	$-19961, %ax            # imm = 0xB207
	jne	.LBB85_706
# %bb.169:                              # %search.split1561
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	$-1, (%rax)
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	$-1000000, (%rax)       # imm = 0xFFF0BDC0
	movl	ep_square, %eax
	movq	-264(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movl	Variant, %eax
	movw	$-19961, BasicBlockSignatureTracker # imm = 0xB207
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB85_202
# %bb.170:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-19947, %ax            # imm = 0xB215
	jne	.LBB85_706
# %bb.171:                              # %search.split1563
	movw	$-19947, BasicBlockSignatureTracker # imm = 0xB215
	movw	$-23214, RunTimeSignatureAdjuster # imm = 0xA552
	callq	losers_eval
	movw	$-19947, BasicBlockSignatureTracker # imm = 0xB215
	movw	$-23214, RunTimeSignatureAdjuster # imm = 0xA552
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %edi
	callq	abs
	movw	$-19947, BasicBlockSignatureTracker # imm = 0xB215
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1000000, %eax          # imm = 0xF4240
	jne	.LBB85_180
# %bb.172:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-19944, %ax            # imm = 0xB218
	jne	.LBB85_706
# %bb.173:                              # %search.split1567
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19944, BasicBlockSignatureTracker # imm = 0xB218
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB85_176
# %bb.174:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-19941, %ax            # imm = 0xB21B
	jne	.LBB85_706
# %bb.175:                              # %search.split1571
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	ply, %eax
	movw	$-19941, BasicBlockSignatureTracker # imm = 0xB21B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_178
.LBB85_176:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-19939, %ax            # imm = 0xB21D
	jne	.LBB85_706
# %bb.177:                              # %search.split1573
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	ply, %eax
	movw	$-19939, BasicBlockSignatureTracker # imm = 0xB21D
	movw	$6, RunTimeSignatureAdjuster
.LBB85_178:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$57, %cx
	xorw	%dx, %cx
	cmpw	$-19934, %cx            # imm = 0xB222
	jne	.LBB85_706
# %bb.179:                              # %search.split1575
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-19934, BasicBlockSignatureTracker # imm = 0xB222
	movw	$7550, RunTimeSignatureAdjuster # imm = 0x1D7E
	jmp	.LBB85_700
.LBB85_180:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$-19930, %ax            # imm = 0xB226
	jne	.LBB85_706
# %bb.181:                              # %search.split1569
	movl	$1, captures
	movw	$-19930, BasicBlockSignatureTracker # imm = 0xB226
	movw	$14518, RunTimeSignatureAdjuster # imm = 0x38B6
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-19930, BasicBlockSignatureTracker # imm = 0xB226
	movw	$14518, RunTimeSignatureAdjuster # imm = 0x38B6
	movl	numb_moves, %eax
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movl	$0, captures
	movl	(%rcx), %eax
	movw	$-19930, BasicBlockSignatureTracker # imm = 0xB226
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_196
# %bb.182:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-19929, %ax            # imm = 0xB227
	jne	.LBB85_706
# %bb.183:                              # %search.split1577
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-19929, BasicBlockSignatureTracker # imm = 0xB227
	movw	$0, RunTimeSignatureAdjuster
.LBB85_184:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-19924, %ax            # imm = 0xB22C
	jne	.LBB85_705
# %bb.185:                              # %search.split1581
                                        #   in Loop: Header=BB85_184 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-19924, BasicBlockSignatureTracker # imm = 0xB22C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB85_194
# %bb.186:                              #   in Loop: Header=BB85_184 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-19922, %ax            # imm = 0xB22E
	jne	.LBB85_705
# %bb.187:                              # %search.split1583
                                        #   in Loop: Header=BB85_184 Depth=1
	movq	-48(%rbp), %r12         # 8-byte Reload
	movl	(%r12), %esi
	movw	$-19922, BasicBlockSignatureTracker # imm = 0xB22E
	movw	$14494, RunTimeSignatureAdjuster # imm = 0x389E
	movq	-56(%rbp), %r13         # 8-byte Reload
	movq	%r13, %rdi
	callq	make
	movw	$-19922, BasicBlockSignatureTracker # imm = 0xB22E
	movw	$14494, RunTimeSignatureAdjuster # imm = 0x389E
	movl	(%r12), %esi
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	movw	$-19922, BasicBlockSignatureTracker # imm = 0xB22E
	movw	$14494, RunTimeSignatureAdjuster # imm = 0x389E
	movq	%r13, %rdi
	callq	check_legal
	movw	$-19922, BasicBlockSignatureTracker # imm = 0xB22E
	movw	$14494, RunTimeSignatureAdjuster # imm = 0x389E
	movw	$-19922, BasicBlockSignatureTracker # imm = 0xB22E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_190
# %bb.188:                              #   in Loop: Header=BB85_184 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-19911, %ax            # imm = 0xB239
	jne	.LBB85_705
# %bb.189:                              # %search.split1587
                                        #   in Loop: Header=BB85_184 Depth=1
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-19911, BasicBlockSignatureTracker # imm = 0xB239
	movw	$23, RunTimeSignatureAdjuster
.LBB85_190:                             #   in Loop: Header=BB85_184 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-19910, %ax            # imm = 0xB23A
	jne	.LBB85_705
# %bb.191:                              # %search.split1589
                                        #   in Loop: Header=BB85_184 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-19910, BasicBlockSignatureTracker # imm = 0xB23A
	movw	$14557, RunTimeSignatureAdjuster # imm = 0x38DD
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-19910, BasicBlockSignatureTracker # imm = 0xB23A
	movw	$14557, RunTimeSignatureAdjuster # imm = 0x38DD
	movw	$-19910, BasicBlockSignatureTracker # imm = 0xB23A
	movw	$0, RunTimeSignatureAdjuster
# %bb.192:                              #   in Loop: Header=BB85_184 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$122, %ax
	cmpw	$-19904, %ax            # imm = 0xB240
	jne	.LBB85_705
# %bb.193:                              # %search.split1591
                                        #   in Loop: Header=BB85_184 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-19904, BasicBlockSignatureTracker # imm = 0xB240
	movw	$103, RunTimeSignatureAdjuster
	jmp	.LBB85_184
.LBB85_194:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$111, %ax
	cmpw	$-19901, %ax            # imm = 0xB243
	jne	.LBB85_706
# %bb.195:                              # %search.split1585
	movw	$-19901, BasicBlockSignatureTracker # imm = 0xB243
	movw	$101, RunTimeSignatureAdjuster
.LBB85_196:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$97, %ax
	xorw	%cx, %ax
	cmpw	$-19897, %ax            # imm = 0xB247
	jne	.LBB85_706
# %bb.197:                              # %search.split1579
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19897, BasicBlockSignatureTracker # imm = 0xB247
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_200
# %bb.198:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-19884, %ax            # imm = 0xB254
	jne	.LBB85_706
# %bb.199:                              # %search.split1595
	movl	$0, captures
	movw	$-19884, BasicBlockSignatureTracker # imm = 0xB254
	movw	$14532, RunTimeSignatureAdjuster # imm = 0x38C4
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-19884, BasicBlockSignatureTracker # imm = 0xB254
	movw	$14532, RunTimeSignatureAdjuster # imm = 0x38C4
	movl	numb_moves, %eax
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-19884, BasicBlockSignatureTracker # imm = 0xB254
	movw	$19, RunTimeSignatureAdjuster
.LBB85_200:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$62, %ax
	xorw	%cx, %ax
	cmpw	$-19847, %ax            # imm = 0xB279
	jne	.LBB85_706
# %bb.201:                              # %search.split1593
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-19847, BasicBlockSignatureTracker # imm = 0xB279
	movw	$126, RunTimeSignatureAdjuster
.LBB85_202:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$129, %ax
	xorw	%cx, %ax
	cmpw	$-19834, %ax            # imm = 0xB286
	jne	.LBB85_706
# %bb.203:                              # %search.split1565
	movl	(%r14), %eax
	movw	$-19834, BasicBlockSignatureTracker # imm = 0xB286
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_276
# %bb.204:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-19825, %ax            # imm = 0xB28F
	jne	.LBB85_706
# %bb.205:                              # %search.split1597
	movl	phase, %eax
	movw	$-19825, BasicBlockSignatureTracker # imm = 0xB28F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB85_214
# %bb.206:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-19809, %ax            # imm = 0xB29F
	jne	.LBB85_706
# %bb.207:                              # %search.split1603
	movl	phase, %eax
	movw	$-19809, BasicBlockSignatureTracker # imm = 0xB29F
	movw	$25, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB85_276
# %bb.208:                              # %Buffer__16
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9044, %ax              # imm = 0x2354
	cmpw	$-28213, %ax            # imm = 0x91CB
	jne	.LBB85_706
# %bb.209:                              # %search.split1605
	movw	$-28213, BasicBlockSignatureTracker # imm = 0x91CB
	movw	$9044, RunTimeSignatureAdjuster # imm = 0x2354
# %bb.210:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-19794, %ax            # imm = 0xB2AE
	jne	.LBB85_706
# %bb.211:                              # %search.split2047
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19794, BasicBlockSignatureTracker # imm = 0xB2AE
	movw	$40, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jg	.LBB85_276
# %bb.212:                              # %Buffer__17
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-17166, %ax            # imm = 0xBCF2
	cmpw	$3676, %ax              # imm = 0xE5C
	jne	.LBB85_706
# %bb.213:                              # %search.split1607
	movw	$3676, BasicBlockSignatureTracker # imm = 0xE5C
	movw	$-17197, RunTimeSignatureAdjuster # imm = 0xBCD3
.LBB85_214:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$62, %ax
	xorw	%cx, %ax
	cmpw	$-19791, %ax            # imm = 0xB2B1
	jne	.LBB85_706
# %bb.215:                              # %search.split1601
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19791, BasicBlockSignatureTracker # imm = 0xB2B1
	movw	$55, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_276
# %bb.216:                              # %Buffer__18
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18520, %ax             # imm = 0x4858
	cmpw	$-1303, %ax             # imm = 0xFAE9
	jne	.LBB85_706
# %bb.217:                              # %search.split1609
	movw	$-1303, BasicBlockSignatureTracker # imm = 0xFAE9
	movw	$18520, RunTimeSignatureAdjuster # imm = 0x4858
# %bb.218:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$84, %ax
	xorw	%cx, %ax
	cmpw	$-19739, %ax            # imm = 0xB2E5
	jne	.LBB85_706
# %bb.219:                              # %search.split2049
	movl	(%r15), %eax
	movw	$-19739, BasicBlockSignatureTracker # imm = 0xB2E5
	movw	$99, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_276
# %bb.220:                              # %Buffer__19
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3346, %ax             # imm = 0xF2EE
	cmpw	$16395, %ax             # imm = 0x400B
	jne	.LBB85_706
# %bb.221:                              # %search.split1611
	movw	$16395, BasicBlockSignatureTracker # imm = 0x400B
	movw	$-3346, RunTimeSignatureAdjuster # imm = 0xF2EE
# %bb.222:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-19737, %ax            # imm = 0xB2E7
	jne	.LBB85_706
# %bb.223:                              # %search.split2051
	movl	searching_pv, %eax
	movw	$-19737, BasicBlockSignatureTracker # imm = 0xB2E7
	movw	$97, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_276
# %bb.224:                              # %Buffer__20
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24015, %ax             # imm = 0x5DCF
	cmpw	$-4312, %ax             # imm = 0xEF28
	jne	.LBB85_706
# %bb.225:                              # %search.split1613
	movw	$-4312, BasicBlockSignatureTracker # imm = 0xEF28
	movw	$24015, RunTimeSignatureAdjuster # imm = 0x5DCF
# %bb.226:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-19734, %ax            # imm = 0xB2EA
	jne	.LBB85_706
# %bb.227:                              # %search.split2053
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19734, BasicBlockSignatureTracker # imm = 0xB2EA
	movw	$108, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_276
# %bb.228:                              # %Buffer__21
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2145, %ax              # imm = 0x861
	cmpw	$-17781, %ax            # imm = 0xBA8B
	jne	.LBB85_706
# %bb.229:                              # %search.split1615
	movw	$-17781, BasicBlockSignatureTracker # imm = 0xBA8B
	movw	$2145, RunTimeSignatureAdjuster # imm = 0x861
# %bb.230:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-19730, %ax            # imm = 0xB2EE
	jne	.LBB85_706
# %bb.231:                              # %search.split2055
	movl	Variant, %eax
	movw	$-19730, BasicBlockSignatureTracker # imm = 0xB2EE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB85_234
# %bb.232:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-19717, %ax            # imm = 0xB2FB
	jne	.LBB85_706
# %bb.233:                              # %search.split1617
	movl	Variant, %eax
	movw	$-19717, BasicBlockSignatureTracker # imm = 0xB2FB
	movw	$21, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB85_240
.LBB85_234:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$494, %ax               # imm = 0x1EE
	xorw	%cx, %ax
	cmpw	$-19712, %ax            # imm = 0xB300
	jne	.LBB85_706
# %bb.235:                              # %search.split1619
	movl	Variant, %eax
	movw	$-19712, BasicBlockSignatureTracker # imm = 0xB300
	movw	$390, RunTimeSignatureAdjuster # imm = 0x186
	cmpl	$4, %eax
	jne	.LBB85_276
# %bb.236:                              # %Buffer__23
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24933, %ax             # imm = 0x6165
	cmpw	$-11675, %ax            # imm = 0xD265
	jne	.LBB85_706
# %bb.237:                              # %search.split1623
	movw	$-11675, BasicBlockSignatureTracker # imm = 0xD265
	movw	$24933, RunTimeSignatureAdjuster # imm = 0x6165
# %bb.238:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-19711, %ax            # imm = 0xB301
	jne	.LBB85_706
# %bb.239:                              # %search.split2059
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	8(%rax), %eax
	movw	$-19711, BasicBlockSignatureTracker # imm = 0xB301
	movw	$391, RunTimeSignatureAdjuster # imm = 0x187
	cmpl	$13, %eax
	je	.LBB85_242
	jmp	.LBB85_276
.LBB85_240:                             # %Buffer__22
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8485, %ax             # imm = 0xDEDB
	cmpw	$27680, %ax             # imm = 0x6C20
	jne	.LBB85_706
# %bb.241:                              # %search.split1621
	movw	$27680, BasicBlockSignatureTracker # imm = 0x6C20
	movw	$-8485, RunTimeSignatureAdjuster # imm = 0xDEDB
	jmp	.LBB85_244
.LBB85_242:                             # %Buffer__24
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-21104, %ax            # imm = 0xAD90
	cmpw	$7825, %ax              # imm = 0x1E91
	jne	.LBB85_706
# %bb.243:                              # %search.split1625
	movw	$7825, BasicBlockSignatureTracker # imm = 0x1E91
	movw	$-21398, RunTimeSignatureAdjuster # imm = 0xAC6A
.LBB85_244:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$489, %ax               # imm = 0x1E9
	xorw	%cx, %ax
	cmpw	$-19694, %ax            # imm = 0xB312
	jne	.LBB85_706
# %bb.245:                              # %search.split2057
	movl	$0, ep_square
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movl	ply, %eax
	addl	$1, %eax
	movl	%eax, ply
	movl	fifty, %eax
	addl	$1, %eax
	movl	%eax, fifty
	movl	hash, %eax
	xorl	$-559038737, %eax       # imm = 0xDEADBEEF
	movl	%eax, hash
	movl	Variant, %eax
	movw	$-19694, BasicBlockSignatureTracker # imm = 0xB312
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB85_258
# %bb.246:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-19684, %ax            # imm = 0xB31C
	jne	.LBB85_706
# %bb.247:                              # %search.split1627
	movl	Variant, %eax
	movw	$-19684, BasicBlockSignatureTracker # imm = 0xB31C
	movw	$14, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB85_258
# %bb.248:                              # %Buffer__25
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20597, %ax            # imm = 0xAF8B
	cmpw	$7319, %ax              # imm = 0x1C97
	jne	.LBB85_706
# %bb.249:                              # %search.split1631
	movw	$7319, BasicBlockSignatureTracker # imm = 0x1C97
	movw	$-20597, RunTimeSignatureAdjuster # imm = 0xAF8B
# %bb.250:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-19667, %ax            # imm = 0xB32D
	jne	.LBB85_706
# %bb.251:                              # %search.split2061
	xorl	%esi, %esi
	xorl	%edi, %edi
	movq	-88(%rbp), %rax         # 8-byte Reload
	subl	(%rax), %edi
	subl	(%rax), %esi
	addl	$1, %esi
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19667, BasicBlockSignatureTracker # imm = 0xB32D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jle	.LBB85_254
# %bb.252:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-19663, %ax            # imm = 0xB331
	jne	.LBB85_706
# %bb.253:                              # %search.split1633
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	subl	$2, %edx
	subl	$1, %edx
	movw	$-19663, BasicBlockSignatureTracker # imm = 0xB331
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_256
.LBB85_254:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-19654, %ax            # imm = 0xB33A
	jne	.LBB85_706
# %bb.255:                              # %search.split1635
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	subl	$1, %edx
	subl	$1, %edx
	movw	$-19654, BasicBlockSignatureTracker # imm = 0xB33A
	movw	$11, RunTimeSignatureAdjuster
.LBB85_256:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$116, %ax
	xorw	%cx, %ax
	cmpw	$-19643, %ax            # imm = 0xB345
	jne	.LBB85_706
# %bb.257:                              # %search.split1637
	movw	$-19643, BasicBlockSignatureTracker # imm = 0xB345
	movw	$0, RunTimeSignatureAdjuster
	movl	$1, %ecx
	callq	search
	xorl	%ecx, %ecx
	movw	$-19643, BasicBlockSignatureTracker # imm = 0xB345
	movw	$0, RunTimeSignatureAdjuster
	subl	%eax, %ecx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	%ecx, (%rax)
	movw	$-19643, BasicBlockSignatureTracker # imm = 0xB345
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_260
.LBB85_258:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$123, %ax
	xorw	%cx, %ax
	cmpw	$-19607, %ax            # imm = 0xB369
	jne	.LBB85_706
# %bb.259:                              # %search.split1629
	xorl	%esi, %esi
	xorl	%edi, %edi
	movq	-88(%rbp), %rax         # 8-byte Reload
	subl	(%rax), %edi
	subl	(%rax), %esi
	addl	$1, %esi
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	subl	$3, %edx
	subl	$1, %edx
	movw	$-19607, BasicBlockSignatureTracker # imm = 0xB369
	movw	$44, RunTimeSignatureAdjuster
	movl	$1, %ecx
	callq	search
	xorl	%ecx, %ecx
	movw	$-19607, BasicBlockSignatureTracker # imm = 0xB369
	movw	$44, RunTimeSignatureAdjuster
	subl	%eax, %ecx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	%ecx, (%rax)
	movw	$-19607, BasicBlockSignatureTracker # imm = 0xB369
	movw	$44, RunTimeSignatureAdjuster
.LBB85_260:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$56, %ax
	xorw	%cx, %ax
	cmpw	$-19587, %ax            # imm = 0xB37D
	jne	.LBB85_706
# %bb.261:                              # %search.split1639
	movl	hash, %eax
	xorl	$-559038737, %eax       # imm = 0xDEADBEEF
	movl	%eax, hash
	movl	fifty, %eax
	addl	$-1, %eax
	movl	%eax, fifty
	movl	ply, %eax
	addl	$-1, %eax
	movl	%eax, ply
	movl	white_to_move, %eax
	xorl	$1, %eax
	movl	%eax, white_to_move
	movq	-264(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	%eax, ep_square
	movl	time_exit, %eax
	movw	$-19587, BasicBlockSignatureTracker # imm = 0xB37D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_264
# %bb.262:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-19586, %ax            # imm = 0xB37E
	jne	.LBB85_706
# %bb.263:                              # %search.split1645
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-19586, BasicBlockSignatureTracker # imm = 0xB37E
	movw	$7202, RunTimeSignatureAdjuster # imm = 0x1C22
	jmp	.LBB85_700
.LBB85_264:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-19585, %ax            # imm = 0xB37F
	jne	.LBB85_706
# %bb.265:                              # %search.split1647
	movl	NTries, %eax
	addl	$1, %eax
	movl	%eax, NTries
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-19585, BasicBlockSignatureTracker # imm = 0xB37F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB85_268
# %bb.266:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$228, %ax
	cmpw	$-19557, %ax            # imm = 0xB39B
	jne	.LBB85_706
# %bb.267:                              # %search.split1649
	movl	NCuts, %eax
	addl	$1, %eax
	movl	%eax, NCuts
	movq	-80(%rbp), %r14         # 8-byte Reload
	movl	(%r14), %edi
	movl	(%rbx), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movw	$-19557, BasicBlockSignatureTracker # imm = 0xB39B
	movw	$11165, RunTimeSignatureAdjuster # imm = 0x2B9D
	movl	$500, %ecx              # imm = 0x1F4
	xorl	%r8d, %r8d
	callq	StoreTT
	movw	$-19557, BasicBlockSignatureTracker # imm = 0xB39B
	movw	$11165, RunTimeSignatureAdjuster # imm = 0x2B9D
	movl	(%r14), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-19557, BasicBlockSignatureTracker # imm = 0xB39B
	movw	$7367, RunTimeSignatureAdjuster # imm = 0x1CC7
	jmp	.LBB85_700
.LBB85_268:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$187, %ax
	cmpw	$-19516, %ax            # imm = 0xB3C4
	jne	.LBB85_706
# %bb.269:                              # %search.split1651
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19516, BasicBlockSignatureTracker # imm = 0xB3C4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-999900, %eax          # imm = 0xFFF0BE24
	jge	.LBB85_272
# %bb.270:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-19502, %ax            # imm = 0xB3D2
	jne	.LBB85_706
# %bb.271:                              # %search.split1653
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movl	TExt, %eax
	addl	$1, %eax
	movl	%eax, TExt
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	ext_onerep, %eax
	addl	$1, %eax
	movl	%eax, ext_onerep
	movw	$-19502, BasicBlockSignatureTracker # imm = 0xB3D2
	movw	$22, RunTimeSignatureAdjuster
.LBB85_272:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-19489, %ax            # imm = 0xB3DF
	jne	.LBB85_706
# %bb.273:                              # %search.split1655
	movw	$-19489, BasicBlockSignatureTracker # imm = 0xB3DF
	movw	$0, RunTimeSignatureAdjuster
# %bb.274:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-19486, %ax            # imm = 0xB3E2
	jne	.LBB85_706
# %bb.275:                              # %search.split1657
	movw	$-19486, BasicBlockSignatureTracker # imm = 0xB3E2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_282
.LBB85_276:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$367, %ax               # imm = 0x16F
	xorw	%cx, %ax
	cmpw	$-19479, %ax            # imm = 0xB3E9
	jne	.LBB85_706
# %bb.277:                              # %search.split1599
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19479, BasicBlockSignatureTracker # imm = 0xB3E9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB85_280
# %bb.278:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$-19466, %ax            # imm = 0xB3F6
	jne	.LBB85_706
# %bb.279:                              # %search.split1661
	movl	TExt, %eax
	addl	$1, %eax
	movl	%eax, TExt
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	ext_onerep, %eax
	addl	$1, %eax
	movl	%eax, ext_onerep
	movw	$-19466, BasicBlockSignatureTracker # imm = 0xB3F6
	movw	$31, RunTimeSignatureAdjuster
.LBB85_280:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2017, %ax              # imm = 0x7E1
	xorw	%cx, %ax
	cmpw	$-19448, %ax            # imm = 0xB408
	jne	.LBB85_706
# %bb.281:                              # %search.split1663
	movw	$-19448, BasicBlockSignatureTracker # imm = 0xB408
	movw	$2026, RunTimeSignatureAdjuster # imm = 0x7EA
.LBB85_282:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2027, %ax              # imm = 0x7EB
	xorw	%cx, %ax
	cmpw	$-19447, %ax            # imm = 0xB409
	jne	.LBB85_706
# %bb.283:                              # %search.split1659
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$-1000000, (%rax)       # imm = 0xFFF0BDC0
	movl	Variant, %eax
	movw	$-19447, BasicBlockSignatureTracker # imm = 0xB409
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB85_286
# %bb.284:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-19446, %ax            # imm = 0xB40A
	jne	.LBB85_706
# %bb.285:                              # %search.split1665
	movw	$-19446, BasicBlockSignatureTracker # imm = 0xB40A
	movw	$16026, RunTimeSignatureAdjuster # imm = 0x3E9A
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-19446, BasicBlockSignatureTracker # imm = 0xB40A
	movw	$16026, RunTimeSignatureAdjuster # imm = 0x3E9A
	movl	numb_moves, %eax
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-19446, BasicBlockSignatureTracker # imm = 0xB40A
	movw	$3, RunTimeSignatureAdjuster
.LBB85_286:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-19426, %ax            # imm = 0xB41E
	jne	.LBB85_706
# %bb.287:                              # %search.split1667
	movl	cfg_onerep, %eax
	movw	$-19426, BasicBlockSignatureTracker # imm = 0xB41E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_314
# %bb.288:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$-19416, %ax            # imm = 0xB428
	jne	.LBB85_706
# %bb.289:                              # %search.split1669
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19416, BasicBlockSignatureTracker # imm = 0xB428
	movw	$54, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_314
# %bb.290:                              # %Buffer__26
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1149, %ax             # imm = 0xFB83
	cmpw	$20395, %ax             # imm = 0x4FAB
	jne	.LBB85_706
# %bb.291:                              # %search.split1673
	movw	$20395, BasicBlockSignatureTracker # imm = 0x4FAB
	movw	$-1149, RunTimeSignatureAdjuster # imm = 0xFB83
# %bb.292:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-19406, %ax            # imm = 0xB432
	jne	.LBB85_706
# %bb.293:                              # %search.split2063
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19406, BasicBlockSignatureTracker # imm = 0xB432
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_312
# %bb.294:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$-19387, %ax            # imm = 0xB445
	jne	.LBB85_706
# %bb.295:                              # %search.split1675
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-19387, BasicBlockSignatureTracker # imm = 0xB445
	movw	$0, RunTimeSignatureAdjuster
.LBB85_296:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-19379, %ax            # imm = 0xB44D
	jne	.LBB85_704
# %bb.297:                              # %search.split1679
                                        #   in Loop: Header=BB85_296 Depth=1
	xorl	%eax, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movq	-120(%rbp), %rdx        # 8-byte Reload
	movl	(%rdx), %edx
	movw	$-19379, BasicBlockSignatureTracker # imm = 0xB44D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jge	.LBB85_300
# %bb.298:                              #   in Loop: Header=BB85_296 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-19373, %ax            # imm = 0xB453
	jne	.LBB85_704
# %bb.299:                              # %search.split1681
                                        #   in Loop: Header=BB85_296 Depth=1
	movq	-152(%rbp), %rax        # 8-byte Reload
	cmpl	$2, (%rax)
	setl	%al
	movw	$-19373, BasicBlockSignatureTracker # imm = 0xB453
	movw	$30, RunTimeSignatureAdjuster
.LBB85_300:                             #   in Loop: Header=BB85_296 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$47, %cx
	xorw	%dx, %cx
	cmpw	$-19358, %cx            # imm = 0xB462
	jne	.LBB85_704
# %bb.301:                              # %search.split1683
                                        #   in Loop: Header=BB85_296 Depth=1
	movw	$-19358, BasicBlockSignatureTracker # imm = 0xB462
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %al
	jne	.LBB85_302
	jmp	.LBB85_310
.LBB85_302:                             #   in Loop: Header=BB85_296 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-19344, %ax            # imm = 0xB470
	jne	.LBB85_704
# %bb.303:                              # %search.split1685
                                        #   in Loop: Header=BB85_296 Depth=1
	movq	-48(%rbp), %r14         # 8-byte Reload
	movl	(%r14), %esi
	movw	$-19344, BasicBlockSignatureTracker # imm = 0xB470
	movw	$16064, RunTimeSignatureAdjuster # imm = 0x3EC0
	movq	-56(%rbp), %r15         # 8-byte Reload
	movq	%r15, %rdi
	callq	make
	movw	$-19344, BasicBlockSignatureTracker # imm = 0xB470
	movw	$16064, RunTimeSignatureAdjuster # imm = 0x3EC0
	movl	(%r14), %esi
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	movw	$-19344, BasicBlockSignatureTracker # imm = 0xB470
	movw	$16064, RunTimeSignatureAdjuster # imm = 0x3EC0
	movq	%r15, %rdi
	callq	check_legal
	movw	$-19344, BasicBlockSignatureTracker # imm = 0xB470
	movw	$16064, RunTimeSignatureAdjuster # imm = 0x3EC0
	movw	$-19344, BasicBlockSignatureTracker # imm = 0xB470
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_306
# %bb.304:                              #   in Loop: Header=BB85_296 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-19341, %ax            # imm = 0xB473
	jne	.LBB85_704
# %bb.305:                              # %search.split1689
                                        #   in Loop: Header=BB85_296 Depth=1
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-19341, BasicBlockSignatureTracker # imm = 0xB473
	movw	$3, RunTimeSignatureAdjuster
.LBB85_306:                             #   in Loop: Header=BB85_296 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$250, %ax
	xorw	%cx, %ax
	cmpw	$-19318, %ax            # imm = 0xB48A
	jne	.LBB85_704
# %bb.307:                              # %search.split1691
                                        #   in Loop: Header=BB85_296 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-19318, BasicBlockSignatureTracker # imm = 0xB48A
	movw	$15981, RunTimeSignatureAdjuster # imm = 0x3E6D
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-19318, BasicBlockSignatureTracker # imm = 0xB48A
	movw	$15981, RunTimeSignatureAdjuster # imm = 0x3E6D
	movw	$-19318, BasicBlockSignatureTracker # imm = 0xB48A
	movw	$0, RunTimeSignatureAdjuster
# %bb.308:                              #   in Loop: Header=BB85_296 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-19297, %ax            # imm = 0xB49F
	jne	.LBB85_704
# %bb.309:                              # %search.split1693
                                        #   in Loop: Header=BB85_296 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-19297, BasicBlockSignatureTracker # imm = 0xB49F
	movw	$218, RunTimeSignatureAdjuster
	jmp	.LBB85_296
.LBB85_310:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$223, %ax
	cmpw	$-19267, %ax            # imm = 0xB4BD
	jne	.LBB85_706
# %bb.311:                              # %search.split1687
	movw	$-19267, BasicBlockSignatureTracker # imm = 0xB4BD
	movw	$143, RunTimeSignatureAdjuster
.LBB85_312:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$242, %ax
	xorw	%cx, %ax
	cmpw	$-19264, %ax            # imm = 0xB4C0
	jne	.LBB85_706
# %bb.313:                              # %search.split1677
	movw	$-19264, BasicBlockSignatureTracker # imm = 0xB4C0
	movw	$222, RunTimeSignatureAdjuster
.LBB85_314:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$201, %ax
	xorw	%cx, %ax
	cmpw	$-19241, %ax            # imm = 0xB4D7
	jne	.LBB85_706
# %bb.315:                              # %search.split1671
	movl	ply, %eax
	movw	$-19241, BasicBlockSignatureTracker # imm = 0xB4D7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$300, %eax              # imm = 0x12C
	jge	.LBB85_336
# %bb.316:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-19232, %ax            # imm = 0xB4E0
	jne	.LBB85_706
# %bb.317:                              # %search.split1695
	movl	Variant, %eax
	movw	$-19232, BasicBlockSignatureTracker # imm = 0xB4E0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB85_324
# %bb.318:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-19224, %ax            # imm = 0xB4E8
	jne	.LBB85_706
# %bb.319:                              # %search.split1699
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19224, BasicBlockSignatureTracker # imm = 0xB4E8
	movw	$8, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB85_324
# %bb.320:                              # %Buffer__27
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4783, %ax              # imm = 0x12AF
	cmpw	$-22969, %ax            # imm = 0xA647
	jne	.LBB85_706
# %bb.321:                              # %search.split1703
	movw	$-22969, BasicBlockSignatureTracker # imm = 0xA647
	movw	$4783, RunTimeSignatureAdjuster # imm = 0x12AF
# %bb.322:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-19221, %ax            # imm = 0xB4EB
	jne	.LBB85_706
# %bb.323:                              # %search.split2065
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	ext_onerep, %eax
	addl	$1, %eax
	movl	%eax, ext_onerep
	movslq	ply, %rax
	movl	$1, singular(,%rax,4)
	movw	$-19221, BasicBlockSignatureTracker # imm = 0xB4EB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_334
.LBB85_324:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-19216, %ax            # imm = 0xB4F0
	jne	.LBB85_706
# %bb.325:                              # %search.split1701
	movq	-152(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19216, BasicBlockSignatureTracker # imm = 0xB4F0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB85_332
# %bb.326:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-19214, %ax            # imm = 0xB4F2
	jne	.LBB85_706
# %bb.327:                              # %search.split1707
	movl	ply, %eax
	subl	$2, %eax
	cltq
	movl	singular(,%rax,4), %eax
	movw	$-19214, BasicBlockSignatureTracker # imm = 0xB4F2
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_332
# %bb.328:                              # %Buffer__28
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-309, %ax              # imm = 0xFECB
	cmpw	$19001, %ax             # imm = 0x4A39
	jne	.LBB85_706
# %bb.329:                              # %search.split1711
	movw	$19001, BasicBlockSignatureTracker # imm = 0x4A39
	movw	$-309, RunTimeSignatureAdjuster # imm = 0xFECB
# %bb.330:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-19209, %ax            # imm = 0xB4F7
	jne	.LBB85_706
# %bb.331:                              # %search.split2067
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	ext_onerep, %eax
	addl	$1, %eax
	movl	%eax, ext_onerep
	movslq	ply, %rax
	movl	$1, singular(,%rax,4)
	movw	$-19209, BasicBlockSignatureTracker # imm = 0xB4F7
	movw	$7, RunTimeSignatureAdjuster
.LBB85_332:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$486, %ax               # imm = 0x1E6
	xorw	%cx, %ax
	cmpw	$-19178, %ax            # imm = 0xB516
	jne	.LBB85_706
# %bb.333:                              # %search.split1709
	movw	$-19178, BasicBlockSignatureTracker # imm = 0xB516
	movw	$509, RunTimeSignatureAdjuster # imm = 0x1FD
.LBB85_334:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$501, %ax               # imm = 0x1F5
	xorw	%cx, %ax
	cmpw	$-19170, %ax            # imm = 0xB51E
	jne	.LBB85_706
# %bb.335:                              # %search.split1705
	movw	$-19170, BasicBlockSignatureTracker # imm = 0xB51E
	movw	$457, RunTimeSignatureAdjuster # imm = 0x1C9
.LBB85_336:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$499, %ax               # imm = 0x1F3
	xorw	%cx, %ax
	cmpw	$-19164, %ax            # imm = 0xB524
	jne	.LBB85_706
# %bb.337:                              # %search.split1697
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movl	phase, %eax
	movw	$-19164, BasicBlockSignatureTracker # imm = 0xB524
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB85_402
# %bb.338:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-19160, %ax            # imm = 0xB528
	jne	.LBB85_706
# %bb.339:                              # %search.split1713
	movl	Variant, %eax
	movw	$-19160, BasicBlockSignatureTracker # imm = 0xB528
	movw	$12, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB85_402
# %bb.340:                              # %Buffer__29
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20078, %ax             # imm = 0x4E6E
	cmpw	$-1210, %ax             # imm = 0xFB46
	jne	.LBB85_706
# %bb.341:                              # %search.split1717
	movw	$-1210, BasicBlockSignatureTracker # imm = 0xFB46
	movw	$20078, RunTimeSignatureAdjuster # imm = 0x4E6E
# %bb.342:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-19157, %ax            # imm = 0xB52B
	jne	.LBB85_706
# %bb.343:                              # %search.split2069
	movl	cfg_futprune, %eax
	movw	$-19157, BasicBlockSignatureTracker # imm = 0xB52B
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_402
# %bb.344:                              # %Buffer__30
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3662, %ax             # imm = 0xF1B2
	cmpw	$17561, %ax             # imm = 0x4499
	jne	.LBB85_706
# %bb.345:                              # %search.split1719
	movw	$17561, BasicBlockSignatureTracker # imm = 0x4499
	movw	$-3662, RunTimeSignatureAdjuster # imm = 0xF1B2
# %bb.346:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$-19113, %ax            # imm = 0xB557
	jne	.LBB85_706
# %bb.347:                              # %search.split2071
	movl	white_to_move, %eax
	movw	$-19113, BasicBlockSignatureTracker # imm = 0xB557
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_350
# %bb.348:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-19096, %ax            # imm = 0xB568
	jne	.LBB85_706
# %bb.349:                              # %search.split1721
	movl	Material, %eax
	movw	$-19096, BasicBlockSignatureTracker # imm = 0xB568
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_352
.LBB85_350:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-19093, %ax            # imm = 0xB56B
	jne	.LBB85_706
# %bb.351:                              # %search.split1723
	xorl	%eax, %eax
	subl	Material, %eax
	movw	$-19093, BasicBlockSignatureTracker # imm = 0xB56B
	movw	$3, RunTimeSignatureAdjuster
.LBB85_352:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$4, %cx
	xorw	%dx, %cx
	cmpw	$-19092, %cx            # imm = 0xB56C
	jne	.LBB85_706
# %bb.353:                              # %search.split1725
	addl	$900, %eax              # imm = 0x384
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-112(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19092, BasicBlockSignatureTracker # imm = 0xB56C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_364
# %bb.354:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-19083, %ax            # imm = 0xB575
	jne	.LBB85_706
# %bb.355:                              # %search.split1729
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19083, BasicBlockSignatureTracker # imm = 0xB575
	movw	$25, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB85_364
# %bb.356:                              # %Buffer__31
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23582, %ax             # imm = 0x5C1E
	cmpw	$-5781, %ax             # imm = 0xE96B
	jne	.LBB85_706
# %bb.357:                              # %search.split1731
	movw	$-5781, BasicBlockSignatureTracker # imm = 0xE96B
	movw	$23582, RunTimeSignatureAdjuster # imm = 0x5C1E
# %bb.358:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-19079, %ax            # imm = 0xB579
	jne	.LBB85_706
# %bb.359:                              # %search.split2073
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	(%rbx), %ecx
	movw	$-19079, BasicBlockSignatureTracker # imm = 0xB579
	movw	$21, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB85_364
# %bb.360:                              # %Buffer__32
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9025, %ax             # imm = 0xDCBF
	cmpw	$27078, %ax             # imm = 0x69C6
	jne	.LBB85_706
# %bb.361:                              # %search.split1733
	movw	$27078, BasicBlockSignatureTracker # imm = 0x69C6
	movw	$-9025, RunTimeSignatureAdjuster # imm = 0xDCBF
# %bb.362:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-19076, %ax            # imm = 0xB57C
	jne	.LBB85_706
# %bb.363:                              # %search.split2075
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$2, (%rax)
	movw	$-19076, BasicBlockSignatureTracker # imm = 0xB57C
	movw	$16, RunTimeSignatureAdjuster
.LBB85_364:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-19074, %ax            # imm = 0xB57E
	jne	.LBB85_706
# %bb.365:                              # %search.split1727
	movl	white_to_move, %eax
	movw	$-19074, BasicBlockSignatureTracker # imm = 0xB57E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_368
# %bb.366:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$252, %ax
	cmpw	$-19070, %ax            # imm = 0xB582
	jne	.LBB85_706
# %bb.367:                              # %search.split1735
	movl	Material, %eax
	movw	$-19070, BasicBlockSignatureTracker # imm = 0xB582
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_370
.LBB85_368:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$236, %ax
	cmpw	$-19054, %ax            # imm = 0xB592
	jne	.LBB85_706
# %bb.369:                              # %search.split1737
	xorl	%eax, %eax
	subl	Material, %eax
	movw	$-19054, BasicBlockSignatureTracker # imm = 0xB592
	movw	$16, RunTimeSignatureAdjuster
.LBB85_370:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$30, %cx
	xorw	%dx, %cx
	cmpw	$-19044, %cx            # imm = 0xB59C
	jne	.LBB85_706
# %bb.371:                              # %search.split1739
	addl	$500, %eax              # imm = 0x1F4
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-112(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19044, BasicBlockSignatureTracker # imm = 0xB59C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_382
# %bb.372:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-19039, %ax            # imm = 0xB5A1
	jne	.LBB85_706
# %bb.373:                              # %search.split1743
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-19039, BasicBlockSignatureTracker # imm = 0xB5A1
	movw	$61, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB85_382
# %bb.374:                              # %Buffer__33
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-13530, %ax            # imm = 0xCB26
	cmpw	$32391, %ax             # imm = 0x7E87
	jne	.LBB85_706
# %bb.375:                              # %search.split1745
	movw	$32391, BasicBlockSignatureTracker # imm = 0x7E87
	movw	$-13530, RunTimeSignatureAdjuster # imm = 0xCB26
# %bb.376:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-19036, %ax            # imm = 0xB5A4
	jne	.LBB85_706
# %bb.377:                              # %search.split2077
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	(%rbx), %ecx
	movw	$-19036, BasicBlockSignatureTracker # imm = 0xB5A4
	movw	$56, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB85_382
# %bb.378:                              # %Buffer__34
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-31959, %ax            # imm = 0x8329
	cmpw	$13965, %ax             # imm = 0x368D
	jne	.LBB85_706
# %bb.379:                              # %search.split1747
	movw	$13965, BasicBlockSignatureTracker # imm = 0x368D
	movw	$-31959, RunTimeSignatureAdjuster # imm = 0x8329
# %bb.380:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-19031, %ax            # imm = 0xB5A9
	jne	.LBB85_706
# %bb.381:                              # %search.split2079
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movq	-216(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-19031, BasicBlockSignatureTracker # imm = 0xB5A9
	movw	$53, RunTimeSignatureAdjuster
.LBB85_382:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$47, %ax
	xorw	%cx, %ax
	cmpw	$-19021, %ax            # imm = 0xB5B3
	jne	.LBB85_706
# %bb.383:                              # %search.split1741
	movl	white_to_move, %eax
	movw	$-19021, BasicBlockSignatureTracker # imm = 0xB5B3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_386
# %bb.384:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-19011, %ax            # imm = 0xB5BD
	jne	.LBB85_706
# %bb.385:                              # %search.split1749
	movl	Material, %eax
	movw	$-19011, BasicBlockSignatureTracker # imm = 0xB5BD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_388
.LBB85_386:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$113, %ax
	cmpw	$-19006, %ax            # imm = 0xB5C2
	jne	.LBB85_706
# %bb.387:                              # %search.split1751
	xorl	%eax, %eax
	subl	Material, %eax
	movw	$-19006, BasicBlockSignatureTracker # imm = 0xB5C2
	movw	$127, RunTimeSignatureAdjuster
.LBB85_388:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$107, %cx
	xorw	%dx, %cx
	cmpw	$-18986, %cx            # imm = 0xB5D6
	jne	.LBB85_706
# %bb.389:                              # %search.split1753
	movl	$200, %ecx
	movl	$150, %edx
	movl	Variant, %esi
	cmpl	$2, %esi
	cmovel	%edx, %ecx
	addl	%ecx, %eax
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-112(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18986, BasicBlockSignatureTracker # imm = 0xB5D6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_400
# %bb.390:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$-18956, %ax            # imm = 0xB5F4
	jne	.LBB85_706
# %bb.391:                              # %search.split1757
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18956, BasicBlockSignatureTracker # imm = 0xB5F4
	movw	$34, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB85_400
# %bb.392:                              # %Buffer__35
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25737, %ax            # imm = 0x9B77
	cmpw	$11907, %ax             # imm = 0x2E83
	jne	.LBB85_706
# %bb.393:                              # %search.split1759
	movw	$11907, BasicBlockSignatureTracker # imm = 0x2E83
	movw	$-25737, RunTimeSignatureAdjuster # imm = 0x9B77
# %bb.394:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-18951, %ax            # imm = 0xB5F9
	jne	.LBB85_706
# %bb.395:                              # %search.split2081
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	(%rbx), %ecx
	movw	$-18951, BasicBlockSignatureTracker # imm = 0xB5F9
	movw	$47, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB85_400
# %bb.396:                              # %Buffer__36
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22678, %ax             # imm = 0x5896
	cmpw	$-4753, %ax             # imm = 0xED6F
	jne	.LBB85_706
# %bb.397:                              # %search.split1761
	movw	$-4753, BasicBlockSignatureTracker # imm = 0xED6F
	movw	$22678, RunTimeSignatureAdjuster # imm = 0x5896
# %bb.398:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-18945, %ax            # imm = 0xB5FF
	jne	.LBB85_706
# %bb.399:                              # %search.split2083
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movq	-216(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-18945, BasicBlockSignatureTracker # imm = 0xB5FF
	movw	$41, RunTimeSignatureAdjuster
.LBB85_400:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$981, %ax               # imm = 0x3D5
	xorw	%cx, %ax
	cmpw	$-18941, %ax            # imm = 0xB603
	jne	.LBB85_706
# %bb.401:                              # %search.split1755
	movw	$-18941, BasicBlockSignatureTracker # imm = 0xB603
	movw	$807, RunTimeSignatureAdjuster # imm = 0x327
.LBB85_402:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$811, %ax               # imm = 0x32B
	xorw	%cx, %ax
	cmpw	$-18929, %ax            # imm = 0xB60F
	jne	.LBB85_706
# %bb.403:                              # %search.split1715
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18929, BasicBlockSignatureTracker # imm = 0xB60F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB85_654
# %bb.404:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-18917, %ax            # imm = 0xB61B
	jne	.LBB85_706
# %bb.405:                              # %search.split1763
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %ecx
	movq	-184(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r8d
	movw	$-18917, BasicBlockSignatureTracker # imm = 0xB61B
	movw	$7070, RunTimeSignatureAdjuster # imm = 0x1B9E
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-240(%rbp), %rsi        # 8-byte Reload
	movq	-272(%rbp), %rdx        # 8-byte Reload
	callq	order_moves
	movw	$-18917, BasicBlockSignatureTracker # imm = 0xB61B
	movw	$7070, RunTimeSignatureAdjuster # imm = 0x1B9E
	movw	$-18917, BasicBlockSignatureTracker # imm = 0xB61B
	movw	$0, RunTimeSignatureAdjuster
.LBB85_406:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB85_638 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$56, %ax
	xorw	%cx, %ax
	cmpw	$-18909, %ax            # imm = 0xB623
	jne	.LBB85_703
# %bb.407:                              # %search.split1767
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	movw	$-18909, BasicBlockSignatureTracker # imm = 0xB623
	movw	$7086, RunTimeSignatureAdjuster # imm = 0x1BAE
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-240(%rbp), %rsi        # 8-byte Reload
	callq	remove_one
	movw	$-18909, BasicBlockSignatureTracker # imm = 0xB623
	movw	$7086, RunTimeSignatureAdjuster # imm = 0x1BAE
	movw	$-18909, BasicBlockSignatureTracker # imm = 0xB623
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_652
# %bb.408:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-18905, %ax            # imm = 0xB627
	jne	.LBB85_703
# %bb.409:                              # %search.split1769
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %r14         # 8-byte Reload
	movl	(%r14), %esi
	movw	$-18905, BasicBlockSignatureTracker # imm = 0xB627
	movw	$15511, RunTimeSignatureAdjuster # imm = 0x3C97
	movq	-56(%rbp), %r15         # 8-byte Reload
	movq	%r15, %rdi
	callq	make
	movabsq	$path, %rax
	movw	$-18905, BasicBlockSignatureTracker # imm = 0xB627
	movw	$15511, RunTimeSignatureAdjuster # imm = 0x3C97
	movq	-176(%rbp), %rcx        # 8-byte Reload
	movl	$0, (%rcx)
	movl	hash, %ecx
	movl	move_number, %edx
	addl	ply, %edx
	subl	$1, %edx
	movslq	%edx, %rdx
	movl	%ecx, hash_history(,%rdx,4)
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movslq	(%r14), %rcx
	imulq	$24, %rcx, %rcx
	movq	%r15, %rdx
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rax)
	movq	-112(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movl	(%r14), %esi
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	movw	$-18905, BasicBlockSignatureTracker # imm = 0xB627
	movw	$15511, RunTimeSignatureAdjuster # imm = 0x3C97
	movq	%r15, %rdi
	callq	check_legal
	movw	$-18905, BasicBlockSignatureTracker # imm = 0xB627
	movw	$15511, RunTimeSignatureAdjuster # imm = 0x3C97
	movw	$-18905, BasicBlockSignatureTracker # imm = 0xB627
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_556
# %bb.410:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-18899, %ax            # imm = 0xB62D
	jne	.LBB85_703
# %bb.411:                              # %search.split1773
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-18899, BasicBlockSignatureTracker # imm = 0xB62D
	movw	$0, RunTimeSignatureAdjuster
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	f_in_check
	movw	$-18899, BasicBlockSignatureTracker # imm = 0xB62D
	movw	$0, RunTimeSignatureAdjuster
	movq	-224(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movl	(%rdx), %eax
	movslq	ply, %rcx
	movl	%eax, checks(,%rcx,4)
	movl	(%rdx), %eax
	movw	$-18899, BasicBlockSignatureTracker # imm = 0xB62D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_442
# %bb.412:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-18883, %ax            # imm = 0xB63D
	jne	.LBB85_703
# %bb.413:                              # %search.split1779
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	Variant, %eax
	movw	$-18883, BasicBlockSignatureTracker # imm = 0xB63D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB85_422
# %bb.414:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-18882, %ax            # imm = 0xB63E
	jne	.LBB85_703
# %bb.415:                              # %search.split1783
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	Variant, %eax
	movw	$-18882, BasicBlockSignatureTracker # imm = 0xB63E
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB85_422
# %bb.416:                              # %Buffer__37
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-10918, %ax            # imm = 0xD55A
	cmpw	$25444, %ax             # imm = 0x6364
	jne	.LBB85_703
# %bb.417:                              # %search.split1785
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$25444, BasicBlockSignatureTracker # imm = 0x6364
	movw	$-10918, RunTimeSignatureAdjuster # imm = 0xD55A
# %bb.418:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$-18878, %ax            # imm = 0xB642
	jne	.LBB85_703
# %bb.419:                              # %search.split2085
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	Variant, %eax
	movw	$-18878, BasicBlockSignatureTracker # imm = 0xB642
	movw	$111, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB85_442
# %bb.420:                              # %Buffer__38
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4970, %ax              # imm = 0x136A
	cmpw	$-23256, %ax            # imm = 0xA528
	jne	.LBB85_703
# %bb.421:                              # %search.split1787
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-23256, BasicBlockSignatureTracker # imm = 0xA528
	movw	$4885, RunTimeSignatureAdjuster # imm = 0x1315
.LBB85_422:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$98, %ax
	xorw	%cx, %ax
	cmpw	$-18849, %ax            # imm = 0xB65F
	jne	.LBB85_703
# %bb.423:                              # %search.split1781
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18849, BasicBlockSignatureTracker # imm = 0xB65F
	movw	$114, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jge	.LBB85_442
# %bb.424:                              # %Buffer__39
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-5997, %ax             # imm = 0xE893
	cmpw	$24268, %ax             # imm = 0x5ECC
	jne	.LBB85_703
# %bb.425:                              # %search.split1789
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$24268, BasicBlockSignatureTracker # imm = 0x5ECC
	movw	$-5997, RunTimeSignatureAdjuster # imm = 0xE893
# %bb.426:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$-18846, %ax            # imm = 0xB662
	jne	.LBB85_703
# %bb.427:                              # %search.split2087
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movslq	4(%rcx), %rax
	movl	board(,%rax,4), %eax
	movw	$-18846, BasicBlockSignatureTracker # imm = 0xB662
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB85_430
# %bb.428:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-18838, %ax            # imm = 0xB66A
	jne	.LBB85_703
# %bb.429:                              # %search.split1791
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movslq	4(%rcx), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$-18838, BasicBlockSignatureTracker # imm = 0xB66A
	movw	$8, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jge	.LBB85_436
.LBB85_430:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$226, %ax
	xorw	%cx, %ax
	cmpw	$-18816, %ax            # imm = 0xB680
	jne	.LBB85_703
# %bb.431:                              # %search.split1793
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movslq	4(%rcx), %rax
	movl	board(,%rax,4), %eax
	movw	$-18816, BasicBlockSignatureTracker # imm = 0xB680
	movw	$173, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB85_442
# %bb.432:                              # %Buffer__41
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1583, %ax              # imm = 0x62F
	cmpw	$-20305, %ax            # imm = 0xB0AF
	jne	.LBB85_703
# %bb.433:                              # %search.split1797
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-20305, BasicBlockSignatureTracker # imm = 0xB0AF
	movw	$1583, RunTimeSignatureAdjuster # imm = 0x62F
# %bb.434:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-18809, %ax            # imm = 0xB687
	jne	.LBB85_703
# %bb.435:                              # %search.split2091
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movslq	4(%rcx), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$-18809, BasicBlockSignatureTracker # imm = 0xB687
	movw	$170, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jle	.LBB85_438
	jmp	.LBB85_442
.LBB85_436:                             # %Buffer__40
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19898, %ax             # imm = 0x4DBA
	cmpw	$-1072, %ax             # imm = 0xFBD0
	jne	.LBB85_703
# %bb.437:                              # %search.split1795
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-1072, BasicBlockSignatureTracker # imm = 0xFBD0
	movw	$19898, RunTimeSignatureAdjuster # imm = 0x4DBA
	jmp	.LBB85_440
.LBB85_438:                             # %Buffer__42
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12287, %ax             # imm = 0x2FFF
	cmpw	$-26248, %ax            # imm = 0x9978
	jne	.LBB85_703
# %bb.439:                              # %search.split1799
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-26248, BasicBlockSignatureTracker # imm = 0x9978
	movw	$12050, RunTimeSignatureAdjuster # imm = 0x2F12
.LBB85_440:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$226, %ax
	xorw	%cx, %ax
	cmpw	$-18808, %ax            # imm = 0xB688
	jne	.LBB85_703
# %bb.441:                              # %search.split2089
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-18808, BasicBlockSignatureTracker # imm = 0xB688
	movw	$165, RunTimeSignatureAdjuster
.LBB85_442:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$164, %ax
	xorw	%cx, %ax
	cmpw	$-18807, %ax            # imm = 0xB689
	jne	.LBB85_703
# %bb.443:                              # %search.split1777
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-192(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movl	(%rcx), %eax
	movw	$-18807, BasicBlockSignatureTracker # imm = 0xB689
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_466
# %bb.444:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-18805, %ax            # imm = 0xB68B
	jne	.LBB85_703
# %bb.445:                              # %search.split1801
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18805, BasicBlockSignatureTracker # imm = 0xB68B
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB85_466
# %bb.446:                              # %Buffer__43
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17651, %ax             # imm = 0x44F3
	cmpw	$-3464, %ax             # imm = 0xF278
	jne	.LBB85_703
# %bb.447:                              # %search.split1805
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-3464, BasicBlockSignatureTracker # imm = 0xF278
	movw	$17651, RunTimeSignatureAdjuster # imm = 0x44F3
# %bb.448:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$-18790, %ax            # imm = 0xB69A
	jne	.LBB85_703
# %bb.449:                              # %search.split2093
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-224(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18790, BasicBlockSignatureTracker # imm = 0xB69A
	movw	$19, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_466
# %bb.450:                              # %Buffer__44
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12652, %ax             # imm = 0x316C
	cmpw	$-30730, %ax            # imm = 0x87F6
	jne	.LBB85_703
# %bb.451:                              # %search.split1807
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-30730, BasicBlockSignatureTracker # imm = 0x87F6
	movw	$12652, RunTimeSignatureAdjuster # imm = 0x316C
# %bb.452:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-18788, %ax            # imm = 0xB69C
	jne	.LBB85_703
# %bb.453:                              # %search.split2095
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18788, BasicBlockSignatureTracker # imm = 0xB69C
	movw	$21, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_466
# %bb.454:                              # %Buffer__45
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23549, %ax             # imm = 0x5BFD
	cmpw	$-4767, %ax             # imm = 0xED61
	jne	.LBB85_703
# %bb.455:                              # %search.split1809
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-4767, BasicBlockSignatureTracker # imm = 0xED61
	movw	$23549, RunTimeSignatureAdjuster # imm = 0x5BFD
# %bb.456:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$-18781, %ax            # imm = 0xB6A3
	jne	.LBB85_703
# %bb.457:                              # %search.split2097
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	searching_pv, %eax
	movw	$-18781, BasicBlockSignatureTracker # imm = 0xB6A3
	movw	$42, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_466
# %bb.458:                              # %Buffer__46
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8723, %ax             # imm = 0xDDED
	cmpw	$27470, %ax             # imm = 0x6B4E
	jne	.LBB85_703
# %bb.459:                              # %search.split1811
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$27470, BasicBlockSignatureTracker # imm = 0x6B4E
	movw	$-8723, RunTimeSignatureAdjuster # imm = 0xDDED
# %bb.460:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-18776, %ax            # imm = 0xB6A8
	jne	.LBB85_703
# %bb.461:                              # %search.split2099
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	cfg_razordrop, %eax
	movw	$-18776, BasicBlockSignatureTracker # imm = 0xB6A8
	movw	$33, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_466
# %bb.462:                              # %Buffer__47
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-15946, %ax            # imm = 0xC1B6
	cmpw	$30494, %ax             # imm = 0x771E
	jne	.LBB85_703
# %bb.463:                              # %search.split1813
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$30494, BasicBlockSignatureTracker # imm = 0x771E
	movw	$-15946, RunTimeSignatureAdjuster # imm = 0xC1B6
# %bb.464:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-18762, %ax            # imm = 0xB6B6
	jne	.LBB85_703
# %bb.465:                              # %search.split2101
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	razor_drop, %eax
	addl	$1, %eax
	movl	%eax, razor_drop
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$-1, %eax
	movl	%eax, (%rcx)
	movw	$-18762, BasicBlockSignatureTracker # imm = 0xB6B6
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_498
.LBB85_466:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$52, %ax
	xorw	%cx, %ax
	cmpw	$-18755, %ax            # imm = 0xB6BD
	jne	.LBB85_703
# %bb.467:                              # %search.split1803
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movl	(%rcx), %eax
	movw	$-18755, BasicBlockSignatureTracker # imm = 0xB6BD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_496
# %bb.468:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$101, %ax
	cmpw	$-18728, %ax            # imm = 0xB6D8
	jne	.LBB85_703
# %bb.469:                              # %search.split1817
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18728, BasicBlockSignatureTracker # imm = 0xB6D8
	movw	$101, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB85_496
# %bb.470:                              # %Buffer__48
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4404, %ax              # imm = 0x1134
	cmpw	$-22548, %ax            # imm = 0xA7EC
	jne	.LBB85_703
# %bb.471:                              # %search.split1821
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-22548, BasicBlockSignatureTracker # imm = 0xA7EC
	movw	$4404, RunTimeSignatureAdjuster # imm = 0x1134
# %bb.472:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$-18709, %ax            # imm = 0xB6EB
	jne	.LBB85_703
# %bb.473:                              # %search.split2103
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18709, BasicBlockSignatureTracker # imm = 0xB6EB
	movw	$86, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_496
# %bb.474:                              # %Buffer__49
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24965, %ax             # imm = 0x6185
	cmpw	$-10386, %ax            # imm = 0xD76E
	jne	.LBB85_703
# %bb.475:                              # %search.split1823
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-10386, BasicBlockSignatureTracker # imm = 0xD76E
	movw	$24965, RunTimeSignatureAdjuster # imm = 0x6185
# %bb.476:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-18700, %ax            # imm = 0xB6F4
	jne	.LBB85_703
# %bb.477:                              # %search.split2105
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	cfg_cutdrop, %eax
	movw	$-18700, BasicBlockSignatureTracker # imm = 0xB6F4
	movw	$73, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_496
# %bb.478:                              # %Buffer__50
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28809, %ax             # imm = 0x7089
	cmpw	$-14723, %ax            # imm = 0xC67D
	jne	.LBB85_703
# %bb.479:                              # %search.split1825
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-14723, BasicBlockSignatureTracker # imm = 0xC67D
	movw	$28809, RunTimeSignatureAdjuster # imm = 0x7089
# %bb.480:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$505, %ax               # imm = 0x1F9
	xorw	%cx, %ax
	cmpw	$-18675, %ax            # imm = 0xB70D
	jne	.LBB85_703
# %bb.481:                              # %search.split2107
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	white_to_move, %eax
	movw	$-18675, BasicBlockSignatureTracker # imm = 0xB70D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_488
# %bb.482:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-18668, %ax            # imm = 0xB714
	jne	.LBB85_703
# %bb.483:                              # %search.split1827
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %r15         # 8-byte Reload
	movslq	(%r15), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %r12         # 8-byte Reload
	movq	%r12, %rcx
	addq	%rax, %rcx
	movl	4(%rcx), %edi
	movw	$-18668, BasicBlockSignatureTracker # imm = 0xB714
	movw	$0, RunTimeSignatureAdjuster
	movl	$1, %esi
	callq	calc_attackers
	movl	%eax, %r14d
	movw	$-18668, BasicBlockSignatureTracker # imm = 0xB714
	movw	$0, RunTimeSignatureAdjuster
	movslq	(%r15), %rax
	imulq	$24, %rax, %rax
	movq	%r12, %rcx
	addq	%rax, %rcx
	movl	4(%rcx), %edi
	movw	$-18668, BasicBlockSignatureTracker # imm = 0xB714
	movw	$0, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	calc_attackers
	movw	$-18668, BasicBlockSignatureTracker # imm = 0xB714
	movw	$0, RunTimeSignatureAdjuster
	subl	%eax, %r14d
	cmpl	$0, %r14d
	setg	%al
	andb	$1, %al
	movzbl	%al, %eax
	movq	-192(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$-18668, BasicBlockSignatureTracker # imm = 0xB714
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_486
# %bb.484:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-18661, %ax            # imm = 0xB71B
	jne	.LBB85_703
# %bb.485:                              # %search.split1831
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	drop_cuts, %eax
	addl	$1, %eax
	movl	%eax, drop_cuts
	movw	$-18661, BasicBlockSignatureTracker # imm = 0xB71B
	movw	$15, RunTimeSignatureAdjuster
.LBB85_486:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-18659, %ax            # imm = 0xB71D
	jne	.LBB85_703
# %bb.487:                              # %search.split1833
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-18659, BasicBlockSignatureTracker # imm = 0xB71D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_494
.LBB85_488:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$-18652, %ax            # imm = 0xB724
	jne	.LBB85_703
# %bb.489:                              # %search.split1829
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %r15         # 8-byte Reload
	movslq	(%r15), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %r12         # 8-byte Reload
	movq	%r12, %rcx
	addq	%rax, %rcx
	movl	4(%rcx), %edi
	movw	$-18652, BasicBlockSignatureTracker # imm = 0xB724
	movw	$48, RunTimeSignatureAdjuster
	xorl	%esi, %esi
	callq	calc_attackers
	movl	%eax, %r14d
	movw	$-18652, BasicBlockSignatureTracker # imm = 0xB724
	movw	$48, RunTimeSignatureAdjuster
	movslq	(%r15), %rax
	imulq	$24, %rax, %rax
	movq	%r12, %rcx
	addq	%rax, %rcx
	movl	4(%rcx), %edi
	movw	$-18652, BasicBlockSignatureTracker # imm = 0xB724
	movw	$48, RunTimeSignatureAdjuster
	movl	$1, %esi
	callq	calc_attackers
	movw	$-18652, BasicBlockSignatureTracker # imm = 0xB724
	movw	$48, RunTimeSignatureAdjuster
	subl	%eax, %r14d
	cmpl	$0, %r14d
	setg	%al
	andb	$1, %al
	movzbl	%al, %eax
	movq	-192(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$-18652, BasicBlockSignatureTracker # imm = 0xB724
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_492
# %bb.490:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-18638, %ax            # imm = 0xB732
	jne	.LBB85_703
# %bb.491:                              # %search.split1837
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	drop_cuts, %eax
	addl	$1, %eax
	movl	%eax, drop_cuts
	movw	$-18638, BasicBlockSignatureTracker # imm = 0xB732
	movw	$22, RunTimeSignatureAdjuster
.LBB85_492:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-18629, %ax            # imm = 0xB73B
	jne	.LBB85_703
# %bb.493:                              # %search.split1839
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-18629, BasicBlockSignatureTracker # imm = 0xB73B
	movw	$38, RunTimeSignatureAdjuster
.LBB85_494:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$34, %ax
	xorw	%cx, %ax
	cmpw	$-18625, %ax            # imm = 0xB73F
	jne	.LBB85_703
# %bb.495:                              # %search.split1835
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-18625, BasicBlockSignatureTracker # imm = 0xB73F
	movw	$386, RunTimeSignatureAdjuster # imm = 0x182
.LBB85_496:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$493, %ax               # imm = 0x1ED
	xorw	%cx, %ax
	cmpw	$-18608, %ax            # imm = 0xB750
	jne	.LBB85_703
# %bb.497:                              # %search.split1819
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-18608, BasicBlockSignatureTracker # imm = 0xB750
	movw	$486, RunTimeSignatureAdjuster # imm = 0x1E6
.LBB85_498:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$487, %ax               # imm = 0x1E7
	xorw	%cx, %ax
	cmpw	$-18607, %ax            # imm = 0xB751
	jne	.LBB85_703
# %bb.499:                              # %search.split1815
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-192(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18607, BasicBlockSignatureTracker # imm = 0xB751
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_552
# %bb.500:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-18603, %ax            # imm = 0xB755
	jne	.LBB85_703
# %bb.501:                              # %search.split1843
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18603, BasicBlockSignatureTracker # imm = 0xB755
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_518
# %bb.502:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-18596, %ax            # imm = 0xB75C
	jne	.LBB85_703
# %bb.503:                              # %search.split1845
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-224(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18596, BasicBlockSignatureTracker # imm = 0xB75C
	movw	$9, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_518
# %bb.504:                              # %Buffer__51
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17242, %ax             # imm = 0x435A
	cmpw	$-3066, %ax             # imm = 0xF406
	jne	.LBB85_703
# %bb.505:                              # %search.split1849
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-3066, BasicBlockSignatureTracker # imm = 0xF406
	movw	$17242, RunTimeSignatureAdjuster # imm = 0x435A
# %bb.506:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-18594, %ax            # imm = 0xB75E
	jne	.LBB85_703
# %bb.507:                              # %search.split2109
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-216(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r14d
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movslq	8(%rcx), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movb	$1, %cl
	movl	Variant, %edx
	movw	$-18594, BasicBlockSignatureTracker # imm = 0xB75E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %edx
	je	.LBB85_510
# %bb.508:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	xorw	$1, %cx
	cmpw	$-18593, %cx            # imm = 0xB75F
	jne	.LBB85_703
# %bb.509:                              # %search.split1853
                                        #   in Loop: Header=BB85_406 Depth=1
	cmpl	$4, Variant
	sete	%cl
	movw	$-18593, BasicBlockSignatureTracker # imm = 0xB75F
	movw	$1, RunTimeSignatureAdjuster
.LBB85_510:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$63, %dx
	xorw	%si, %dx
	cmpw	$-18591, %dx            # imm = 0xB761
	jne	.LBB85_703
# %bb.511:                              # %search.split1851
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	$2, %edx
	movl	$1, %esi
	testb	$1, %cl
	cmovnel	%esi, %edx
	imull	%edx, %eax
	addl	%eax, %r14d
	movl	(%rbx), %eax
	movw	$-18591, BasicBlockSignatureTracker # imm = 0xB761
	movw	$52, RunTimeSignatureAdjuster
	cmpl	%eax, %r14d
	jg	.LBB85_518
# %bb.512:                              # %Buffer__52
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11854, %ax             # imm = 0x2E4E
	cmpw	$-26321, %ax            # imm = 0x992F
	jne	.LBB85_703
# %bb.513:                              # %search.split1855
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-26321, BasicBlockSignatureTracker # imm = 0x992F
	movw	$11854, RunTimeSignatureAdjuster # imm = 0x2E4E
# %bb.514:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-18590, %ax            # imm = 0xB762
	jne	.LBB85_703
# %bb.515:                              # %search.split2111
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movl	12(%rcx), %eax
	movw	$-18590, BasicBlockSignatureTracker # imm = 0xB762
	movw	$51, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_552
# %bb.516:                              # %Buffer__53
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9306, %ax             # imm = 0xDBA6
	cmpw	$27844, %ax             # imm = 0x6CC4
	jne	.LBB85_703
# %bb.517:                              # %search.split1857
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$27844, BasicBlockSignatureTracker # imm = 0x6CC4
	movw	$-9327, RunTimeSignatureAdjuster # imm = 0xDB91
.LBB85_518:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$33, %ax
	xorw	%cx, %ax
	cmpw	$-18572, %ax            # imm = 0xB774
	jne	.LBB85_703
# %bb.519:                              # %search.split1847
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18572, BasicBlockSignatureTracker # imm = 0xB774
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB85_522
# %bb.520:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-18564, %ax            # imm = 0xB77C
	jne	.LBB85_703
# %bb.521:                              # %search.split1859
                                        #   in Loop: Header=BB85_406 Depth=1
	xorl	%esi, %esi
	xorl	%edi, %edi
	movq	-88(%rbp), %rax         # 8-byte Reload
	subl	(%rax), %edi
	subl	(%rbx), %esi
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-112(%rbp), %rax        # 8-byte Reload
	addl	(%rax), %edx
	subl	$1, %edx
	movw	$-18564, BasicBlockSignatureTracker # imm = 0xB77C
	movw	$1081, RunTimeSignatureAdjuster # imm = 0x439
	xorl	%ecx, %ecx
	callq	search
	xorl	%ecx, %ecx
	movw	$-18564, BasicBlockSignatureTracker # imm = 0xB77C
	movw	$1081, RunTimeSignatureAdjuster # imm = 0x439
	subl	%eax, %ecx
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	%ecx, (%rax)
	movl	FULL, %eax
	addl	$1, %eax
	movl	%eax, FULL
	movw	$-18564, BasicBlockSignatureTracker # imm = 0xB77C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_550
.LBB85_522:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$247, %ax
	cmpw	$-18557, %ax            # imm = 0xB783
	jne	.LBB85_703
# %bb.523:                              # %search.split1861
                                        #   in Loop: Header=BB85_406 Depth=1
	xorl	%esi, %esi
	xorl	%edi, %edi
	movq	%rbx, %rax
	subl	(%rax), %edi
	subl	$1, %edi
	subl	(%rax), %esi
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-112(%rbp), %rax        # 8-byte Reload
	addl	(%rax), %edx
	subl	$1, %edx
	movw	$-18557, BasicBlockSignatureTracker # imm = 0xB783
	movw	$1222, RunTimeSignatureAdjuster # imm = 0x4C6
	xorl	%ecx, %ecx
	callq	search
	xorl	%ecx, %ecx
	movw	$-18557, BasicBlockSignatureTracker # imm = 0xB783
	movw	$1222, RunTimeSignatureAdjuster # imm = 0x4C6
	subl	%eax, %ecx
	movq	-80(%rbp), %rdx         # 8-byte Reload
	movl	%ecx, (%rdx)
	movl	PVS, %eax
	addl	$1, %eax
	movl	%eax, PVS
	movl	(%rdx), %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-18557, BasicBlockSignatureTracker # imm = 0xB783
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB85_548
# %bb.524:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-18544, %ax            # imm = 0xB790
	jne	.LBB85_703
# %bb.525:                              # %search.split1867
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	time_exit, %eax
	movw	$-18544, BasicBlockSignatureTracker # imm = 0xB790
	movw	$19, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_548
# %bb.526:                              # %Buffer__54
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6321, %ax              # imm = 0x18B1
	cmpw	$-20703, %ax            # imm = 0xAF21
	jne	.LBB85_703
# %bb.527:                              # %search.split1873
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-20703, BasicBlockSignatureTracker # imm = 0xAF21
	movw	$6321, RunTimeSignatureAdjuster # imm = 0x18B1
# %bb.528:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$82, %ax
	xorw	%cx, %ax
	cmpw	$-18494, %ax            # imm = 0xB7C2
	jne	.LBB85_703
# %bb.529:                              # %search.split2113
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18494, BasicBlockSignatureTracker # imm = 0xB7C2
	movw	$65, RunTimeSignatureAdjuster
	cmpl	$-50000, %eax           # imm = 0xFFFF3CB0
	je	.LBB85_548
# %bb.530:                              # %Buffer__55
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21674, %ax             # imm = 0x54AA
	cmpw	$-7320, %ax             # imm = 0xE368
	jne	.LBB85_703
# %bb.531:                              # %search.split1875
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-7320, BasicBlockSignatureTracker # imm = 0xE368
	movw	$21674, RunTimeSignatureAdjuster # imm = 0x54AA
# %bb.532:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-18491, %ax            # imm = 0xB7C5
	jne	.LBB85_703
# %bb.533:                              # %search.split2115
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%rbx), %ecx
	movw	$-18491, BasicBlockSignatureTracker # imm = 0xB7C5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB85_544
# %bb.534:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-18475, %ax            # imm = 0xB7D5
	jne	.LBB85_703
# %bb.535:                              # %search.split1877
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-18475, BasicBlockSignatureTracker # imm = 0xB7D5
	movw	$16, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB85_544
# %bb.536:                              # %Buffer__56
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8225, %ax             # imm = 0xDFDF
	cmpw	$26634, %ax             # imm = 0x680A
	jne	.LBB85_703
# %bb.537:                              # %search.split1881
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$26634, BasicBlockSignatureTracker # imm = 0x680A
	movw	$-8225, RunTimeSignatureAdjuster # imm = 0xDFDF
# %bb.538:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$52, %ax
	xorw	%cx, %ax
	cmpw	$-18463, %ax            # imm = 0xB7E1
	jne	.LBB85_703
# %bb.539:                              # %search.split2117
                                        #   in Loop: Header=BB85_406 Depth=1
	xorl	%esi, %esi
	xorl	%edi, %edi
	movq	-88(%rbp), %rax         # 8-byte Reload
	subl	(%rax), %edi
	subl	(%rbx), %esi
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-112(%rbp), %rax        # 8-byte Reload
	addl	(%rax), %edx
	subl	$1, %edx
	movw	$-18463, BasicBlockSignatureTracker # imm = 0xB7E1
	movw	$1188, RunTimeSignatureAdjuster # imm = 0x4A4
	xorl	%ecx, %ecx
	callq	search
	xorl	%ecx, %ecx
	movw	$-18463, BasicBlockSignatureTracker # imm = 0xB7E1
	movw	$1188, RunTimeSignatureAdjuster # imm = 0x4A4
	subl	%eax, %ecx
	movq	-80(%rbp), %rdx         # 8-byte Reload
	movl	%ecx, (%rdx)
	movl	PVSF, %eax
	addl	$1, %eax
	movl	%eax, PVSF
	movl	(%rdx), %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-18463, BasicBlockSignatureTracker # imm = 0xB7E1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB85_542
# %bb.540:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-18459, %ax            # imm = 0xB7E5
	jne	.LBB85_703
# %bb.541:                              # %search.split1883
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-18459, BasicBlockSignatureTracker # imm = 0xB7E5
	movw	$4, RunTimeSignatureAdjuster
.LBB85_542:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-18450, %ax            # imm = 0xB7EE
	jne	.LBB85_703
# %bb.543:                              # %search.split1885
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-18450, BasicBlockSignatureTracker # imm = 0xB7EE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_546
.LBB85_544:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4036, %ax              # imm = 0xFC4
	xorw	%cx, %ax
	cmpw	$-18431, %ax            # imm = 0xB801
	jne	.LBB85_703
# %bb.545:                              # %search.split1879
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-18431, BasicBlockSignatureTracker # imm = 0xB801
	movw	$4079, RunTimeSignatureAdjuster # imm = 0xFEF
.LBB85_546:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4075, %ax              # imm = 0xFEB
	xorw	%cx, %ax
	cmpw	$-18427, %ax            # imm = 0xB805
	jne	.LBB85_703
# %bb.547:                              # %search.split1889
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-18427, BasicBlockSignatureTracker # imm = 0xB805
	movw	$3974, RunTimeSignatureAdjuster # imm = 0xF86
.LBB85_548:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3991, %ax              # imm = 0xF97
	xorw	%cx, %ax
	cmpw	$-18412, %ax            # imm = 0xB814
	jne	.LBB85_703
# %bb.549:                              # %search.split1869
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-18412, BasicBlockSignatureTracker # imm = 0xB814
	movw	$3944, RunTimeSignatureAdjuster # imm = 0xF68
.LBB85_550:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3941, %ax              # imm = 0xF65
	xorw	%cx, %ax
	cmpw	$-18407, %ax            # imm = 0xB819
	jne	.LBB85_703
# %bb.551:                              # %search.split1863
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$-18407, BasicBlockSignatureTracker # imm = 0xB819
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_554
.LBB85_552:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3857, %ax              # imm = 0xF11
	xorw	%cx, %ax
	cmpw	$-18368, %ax            # imm = 0xB840
	jne	.LBB85_703
# %bb.553:                              # %search.split1841
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	razor_material, %eax
	addl	$1, %eax
	movl	%eax, razor_material
	movw	$-18368, BasicBlockSignatureTracker # imm = 0xB840
	movw	$89, RunTimeSignatureAdjuster
.LBB85_554:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$65, %ax
	xorw	%cx, %ax
	cmpw	$-18344, %ax            # imm = 0xB858
	jne	.LBB85_703
# %bb.555:                              # %search.split1891
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-232(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-18344, BasicBlockSignatureTracker # imm = 0xB858
	movw	$3711, RunTimeSignatureAdjuster # imm = 0xE7F
.LBB85_556:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3652, %ax              # imm = 0xE44
	xorw	%cx, %ax
	cmpw	$-18333, %ax            # imm = 0xB863
	jne	.LBB85_703
# %bb.557:                              # %search.split1775
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-18333, BasicBlockSignatureTracker # imm = 0xB863
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB85_564
# %bb.558:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-18328, %ax            # imm = 0xB868
	jne	.LBB85_703
# %bb.559:                              # %search.split1893
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18328, BasicBlockSignatureTracker # imm = 0xB868
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_564
# %bb.560:                              # %Buffer__57
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19410, %ax             # imm = 0x4BD2
	cmpw	$-3142, %ax             # imm = 0xF3BA
	jne	.LBB85_703
# %bb.561:                              # %search.split1897
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-3142, BasicBlockSignatureTracker # imm = 0xF3BA
	movw	$19410, RunTimeSignatureAdjuster # imm = 0x4BD2
# %bb.562:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$-18307, %ax            # imm = 0xB87D
	jne	.LBB85_703
# %bb.563:                              # %search.split2119
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-18307, BasicBlockSignatureTracker # imm = 0xB87D
	movw	$30, RunTimeSignatureAdjuster
.LBB85_564:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$227, %ax
	xorw	%cx, %ax
	cmpw	$-18304, %ax            # imm = 0xB880
	jne	.LBB85_703
# %bb.565:                              # %search.split1895
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-18304, BasicBlockSignatureTracker # imm = 0xB880
	movw	$12903, RunTimeSignatureAdjuster # imm = 0x3267
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-18304, BasicBlockSignatureTracker # imm = 0xB880
	movw	$12903, RunTimeSignatureAdjuster # imm = 0x3267
	movl	time_exit, %eax
	movw	$-18304, BasicBlockSignatureTracker # imm = 0xB880
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_568
# %bb.566:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-18302, %ax            # imm = 0xB882
	jne	.LBB85_706
# %bb.567:                              # %search.split1899
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-18302, BasicBlockSignatureTracker # imm = 0xB882
	movw	$6110, RunTimeSignatureAdjuster # imm = 0x17DE
	jmp	.LBB85_700
.LBB85_568:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-18299, %ax            # imm = 0xB885
	jne	.LBB85_703
# %bb.569:                              # %search.split1901
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%rbx), %ecx
	movw	$-18299, BasicBlockSignatureTracker # imm = 0xB885
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB85_646
# %bb.570:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-18297, %ax            # imm = 0xB887
	jne	.LBB85_703
# %bb.571:                              # %search.split1903
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18297, BasicBlockSignatureTracker # imm = 0xB887
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_646
# %bb.572:                              # %Buffer__58
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29780, %ax             # imm = 0x7454
	cmpw	$-13101, %ax            # imm = 0xCCD3
	jne	.LBB85_703
# %bb.573:                              # %search.split1907
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-13101, BasicBlockSignatureTracker # imm = 0xCCD3
	movw	$29780, RunTimeSignatureAdjuster # imm = 0x7454
# %bb.574:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-18289, %ax            # imm = 0xB88F
	jne	.LBB85_703
# %bb.575:                              # %search.split2121
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-18289, BasicBlockSignatureTracker # imm = 0xB88F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB85_636
# %bb.576:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-18282, %ax            # imm = 0xB896
	jne	.LBB85_706
# %bb.577:                              # %search.split1909
	movabsq	$history_h, %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rdi, %rdx
	addq	%rcx, %rdx
	movslq	(%rdx), %rcx
	imulq	$576, %rcx, %rcx        # imm = 0x240
	addq	%rcx, %rax
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	movq	%rdi, %rdx
	addq	%rcx, %rdx
	movslq	4(%rdx), %rcx
	movl	(%rax,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, (%rax,%rcx,4)
	movslq	(%rsi), %rax
	imulq	$24, %rax, %rax
	movq	%rdi, %rcx
	addq	%rax, %rcx
	movl	8(%rcx), %eax
	movw	$-18282, BasicBlockSignatureTracker # imm = 0xB896
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB85_630
# %bb.578:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-18261, %ax            # imm = 0xB8AB
	jne	.LBB85_706
# %bb.579:                              # %search.split1913
	movabsq	$killer1, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-18261, BasicBlockSignatureTracker # imm = 0xB8AB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB85_590
# %bb.580:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$105, %ax
	cmpw	$-18238, %ax            # imm = 0xB8C2
	jne	.LBB85_706
# %bb.581:                              # %search.split1917
	movabsq	$killer1, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	4(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-18238, BasicBlockSignatureTracker # imm = 0xB8C2
	movw	$105, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB85_590
# %bb.582:                              # %Buffer__59
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26898, %ax             # imm = 0x6912
	cmpw	$-11824, %ax            # imm = 0xD1D0
	jne	.LBB85_706
# %bb.583:                              # %search.split1921
	movw	$-11824, BasicBlockSignatureTracker # imm = 0xD1D0
	movw	$26898, RunTimeSignatureAdjuster # imm = 0x6912
# %bb.584:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-18226, %ax            # imm = 0xB8CE
	jne	.LBB85_706
# %bb.585:                              # %search.split2123
	movabsq	$killer1, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	12(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-18226, BasicBlockSignatureTracker # imm = 0xB8CE
	movw	$101, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB85_590
# %bb.586:                              # %Buffer__60
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-13681, %ax            # imm = 0xCA8F
	cmpw	$29249, %ax             # imm = 0x7241
	jne	.LBB85_706
# %bb.587:                              # %search.split1923
	movw	$29249, BasicBlockSignatureTracker # imm = 0x7241
	movw	$-13681, RunTimeSignatureAdjuster # imm = 0xCA8F
# %bb.588:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$-18221, %ax            # imm = 0xB8D3
	jne	.LBB85_706
# %bb.589:                              # %search.split2125
	movslq	ply, %rax
	movl	killer_scores(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, killer_scores(,%rax,4)
	movw	$-18221, BasicBlockSignatureTracker # imm = 0xB8D3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_628
.LBB85_590:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$125, %ax
	xorw	%cx, %ax
	cmpw	$-18218, %ax            # imm = 0xB8D6
	jne	.LBB85_706
# %bb.591:                              # %search.split1919
	movabsq	$killer2, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-18218, BasicBlockSignatureTracker # imm = 0xB8D6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB85_606
# %bb.592:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-18210, %ax            # imm = 0xB8DE
	jne	.LBB85_706
# %bb.593:                              # %search.split1927
	movabsq	$killer2, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	4(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-18210, BasicBlockSignatureTracker # imm = 0xB8DE
	movw	$8, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB85_606
# %bb.594:                              # %Buffer__61
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-17474, %ax            # imm = 0xBBBE
	cmpw	$864, %ax               # imm = 0x360
	jne	.LBB85_706
# %bb.595:                              # %search.split1931
	movw	$864, BasicBlockSignatureTracker # imm = 0x360
	movw	$-17474, RunTimeSignatureAdjuster # imm = 0xBBBE
# %bb.596:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$-18199, %ax            # imm = 0xB8E9
	jne	.LBB85_706
# %bb.597:                              # %search.split2127
	movabsq	$killer2, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	12(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-18199, BasicBlockSignatureTracker # imm = 0xB8E9
	movw	$63, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB85_606
# %bb.598:                              # %Buffer__62
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-18243, %ax            # imm = 0xB8BD
	cmpw	$84, %ax
	jne	.LBB85_706
# %bb.599:                              # %search.split1933
	movw	$84, BasicBlockSignatureTracker
	movw	$-18243, RunTimeSignatureAdjuster # imm = 0xB8BD
# %bb.600:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$-18184, %ax            # imm = 0xB8F8
	jne	.LBB85_706
# %bb.601:                              # %search.split2129
	movslq	ply, %rax
	movl	killer_scores2(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, killer_scores2(,%rax,4)
	movslq	ply, %rax
	movl	killer_scores2(,%rax,4), %eax
	movslq	ply, %rcx
	movl	killer_scores(,%rcx,4), %ecx
	movw	$-18184, BasicBlockSignatureTracker # imm = 0xB8F8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB85_604
# %bb.602:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-18177, %ax            # imm = 0xB8FF
	jne	.LBB85_706
# %bb.603:                              # %search.split1935
	movabsq	$killer2, %rax
	movabsq	$killer1, %rcx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	movq	%rcx, %rsi
	addq	%rdx, %rsi
	movq	(%rsi), %rdx
	movq	-248(%rbp), %rdi        # 8-byte Reload
	movq	%rdx, (%rdi)
	movq	8(%rsi), %rdx
	movq	%rdx, 8(%rdi)
	movq	16(%rsi), %rdx
	movq	%rdx, 16(%rdi)
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	movq	%rax, %rsi
	addq	%rdx, %rsi
	movq	(%rsi), %rdx
	movq	%rdx, (%rcx)
	movq	8(%rsi), %rdx
	movq	%rdx, 8(%rcx)
	movq	16(%rsi), %rdx
	movq	%rdx, 16(%rcx)
	movslq	ply, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	(%rdi), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdi), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdi), %rcx
	movq	%rcx, 16(%rax)
	movslq	ply, %rax
	movl	killer_scores(,%rax,4), %eax
	movq	-256(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movslq	ply, %rax
	movl	killer_scores2(,%rax,4), %eax
	movslq	ply, %rcx
	movl	%eax, killer_scores(,%rcx,4)
	movl	(%rdx), %eax
	movslq	ply, %rcx
	movl	%eax, killer_scores2(,%rcx,4)
	movw	$-18177, BasicBlockSignatureTracker # imm = 0xB8FF
	movw	$7, RunTimeSignatureAdjuster
.LBB85_604:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$507, %ax               # imm = 0x1FB
	xorw	%cx, %ax
	cmpw	$-18173, %ax            # imm = 0xB903
	jne	.LBB85_706
# %bb.605:                              # %search.split1937
	movw	$-18173, BasicBlockSignatureTracker # imm = 0xB903
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_626
.LBB85_606:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$472, %ax               # imm = 0x1D8
	xorw	%cx, %ax
	cmpw	$-18162, %ax            # imm = 0xB90E
	jne	.LBB85_706
# %bb.607:                              # %search.split1929
	movabsq	$killer3, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-18162, BasicBlockSignatureTracker # imm = 0xB90E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB85_622
# %bb.608:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-18158, %ax            # imm = 0xB912
	jne	.LBB85_706
# %bb.609:                              # %search.split1941
	movabsq	$killer3, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	4(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-18158, BasicBlockSignatureTracker # imm = 0xB912
	movw	$28, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB85_622
# %bb.610:                              # %Buffer__63
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-6493, %ax             # imm = 0xE6A3
	cmpw	$24497, %ax             # imm = 0x5FB1
	jne	.LBB85_706
# %bb.611:                              # %search.split1945
	movw	$24497, BasicBlockSignatureTracker # imm = 0x5FB1
	movw	$-6493, RunTimeSignatureAdjuster # imm = 0xE6A3
# %bb.612:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-18151, %ax            # imm = 0xB919
	jne	.LBB85_706
# %bb.613:                              # %search.split2131
	movabsq	$killer3, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	12(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-18151, BasicBlockSignatureTracker # imm = 0xB919
	movw	$23, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB85_622
# %bb.614:                              # %Buffer__64
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8228, %ax             # imm = 0xDFDC
	cmpw	$26309, %ax             # imm = 0x66C5
	jne	.LBB85_706
# %bb.615:                              # %search.split1947
	movw	$26309, BasicBlockSignatureTracker # imm = 0x66C5
	movw	$-8228, RunTimeSignatureAdjuster # imm = 0xDFDC
# %bb.616:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$95, %ax
	xorw	%cx, %ax
	cmpw	$-18106, %ax            # imm = 0xB946
	jne	.LBB85_706
# %bb.617:                              # %search.split2133
	movslq	ply, %rax
	movl	killer_scores3(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, killer_scores3(,%rax,4)
	movslq	ply, %rax
	movl	killer_scores3(,%rax,4), %eax
	movslq	ply, %rcx
	movl	killer_scores2(,%rcx,4), %ecx
	movw	$-18106, BasicBlockSignatureTracker # imm = 0xB946
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB85_620
# %bb.618:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-18103, %ax            # imm = 0xB949
	jne	.LBB85_706
# %bb.619:                              # %search.split1949
	movabsq	$killer3, %rax
	movabsq	$killer2, %rcx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	movq	%rcx, %rsi
	addq	%rdx, %rsi
	movq	(%rsi), %rdx
	movq	-248(%rbp), %rdi        # 8-byte Reload
	movq	%rdx, (%rdi)
	movq	8(%rsi), %rdx
	movq	%rdx, 8(%rdi)
	movq	16(%rsi), %rdx
	movq	%rdx, 16(%rdi)
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	movq	%rax, %rsi
	addq	%rdx, %rsi
	movq	(%rsi), %rdx
	movq	%rdx, (%rcx)
	movq	8(%rsi), %rdx
	movq	%rdx, 8(%rcx)
	movq	16(%rsi), %rdx
	movq	%rdx, 16(%rcx)
	movslq	ply, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	(%rdi), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdi), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdi), %rcx
	movq	%rcx, 16(%rax)
	movslq	ply, %rax
	movl	killer_scores2(,%rax,4), %eax
	movq	-256(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movslq	ply, %rax
	movl	killer_scores3(,%rax,4), %eax
	movslq	ply, %rcx
	movl	%eax, killer_scores2(,%rcx,4)
	movl	(%rdx), %eax
	movslq	ply, %rcx
	movl	%eax, killer_scores3(,%rcx,4)
	movw	$-18103, BasicBlockSignatureTracker # imm = 0xB949
	movw	$15, RunTimeSignatureAdjuster
.LBB85_620:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-18101, %ax            # imm = 0xB94B
	jne	.LBB85_706
# %bb.621:                              # %search.split1951
	movw	$-18101, BasicBlockSignatureTracker # imm = 0xB94B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_624
.LBB85_622:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$66, %ax
	xorw	%cx, %ax
	cmpw	$-18100, %ax            # imm = 0xB94C
	jne	.LBB85_706
# %bb.623:                              # %search.split1943
	movabsq	$killer3, %rax
	movslq	ply, %rcx
	movl	$1, killer_scores3(,%rcx,4)
	movslq	ply, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rax)
	movw	$-18100, BasicBlockSignatureTracker # imm = 0xB94C
	movw	$7, RunTimeSignatureAdjuster
.LBB85_624:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-18094, %ax            # imm = 0xB952
	jne	.LBB85_706
# %bb.625:                              # %search.split1953
	movw	$-18094, BasicBlockSignatureTracker # imm = 0xB952
	movw	$81, RunTimeSignatureAdjuster
.LBB85_626:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$-18072, %ax            # imm = 0xB968
	jne	.LBB85_706
# %bb.627:                              # %search.split1939
	movw	$-18072, BasicBlockSignatureTracker # imm = 0xB968
	movw	$443, RunTimeSignatureAdjuster # imm = 0x1BB
.LBB85_628:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$416, %ax               # imm = 0x1A0
	xorw	%cx, %ax
	cmpw	$-18061, %ax            # imm = 0xB973
	jne	.LBB85_706
# %bb.629:                              # %search.split1925
	movw	$-18061, BasicBlockSignatureTracker # imm = 0xB973
	movw	$485, RunTimeSignatureAdjuster # imm = 0x1E5
.LBB85_630:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$276, %ax               # imm = 0x114
	xorw	%cx, %ax
	cmpw	$-18046, %ax            # imm = 0xB982
	jne	.LBB85_706
# %bb.631:                              # %search.split1915
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-18046, BasicBlockSignatureTracker # imm = 0xB982
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB85_634
# %bb.632:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$41, %ax
	cmpw	$-18005, %ax            # imm = 0xB9AB
	jne	.LBB85_706
# %bb.633:                              # %search.split1955
	movl	FHF, %eax
	addl	$1, %eax
	movl	%eax, FHF
	movw	$-18005, BasicBlockSignatureTracker # imm = 0xB9AB
	movw	$41, RunTimeSignatureAdjuster
.LBB85_634:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$46, %ax
	xorw	%cx, %ax
	cmpw	$-18004, %ax            # imm = 0xB9AC
	jne	.LBB85_706
# %bb.635:                              # %search.split1957
	movl	FH, %eax
	addl	$1, %eax
	movl	%eax, FH
	movq	-80(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %edi
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %ecx
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r8d
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movw	$-18004, BasicBlockSignatureTracker # imm = 0xB9AC
	movw	$8618, RunTimeSignatureAdjuster # imm = 0x21AA
	callq	StoreTT
	movw	$-18004, BasicBlockSignatureTracker # imm = 0xB9AC
	movw	$8618, RunTimeSignatureAdjuster # imm = 0x21AA
	movl	(%rbx), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-18004, BasicBlockSignatureTracker # imm = 0xB9AC
	movw	$5872, RunTimeSignatureAdjuster # imm = 0x16F0
	jmp	.LBB85_700
.LBB85_636:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$317, %ax               # imm = 0x13D
	cmpw	$-17998, %ax            # imm = 0xB9B2
	jne	.LBB85_703
# %bb.637:                              # %search.split1911
                                        #   in Loop: Header=BB85_406 Depth=1
	movabsq	$pv, %rax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movl	%ecx, (%rbx)
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %ecx
	movq	-160(%rbp), %rsi        # 8-byte Reload
	movl	%ecx, (%rsi)
	movslq	ply, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movslq	ply, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movslq	(%rdx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rax)
	movl	ply, %eax
	addl	$1, %eax
	movq	-200(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-17998, BasicBlockSignatureTracker # imm = 0xB9B2
	movw	$0, RunTimeSignatureAdjuster
.LBB85_638:                             #   Parent Loop BB85_406 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-17995, %ax            # imm = 0xB9B5
	jne	.LBB85_702
# %bb.639:                              # %search.split1959
                                        #   in Loop: Header=BB85_638 Depth=2
	movq	-200(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	ply, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movl	pv_length(,%rcx,4), %ecx
	movw	$-17995, BasicBlockSignatureTracker # imm = 0xB9B5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB85_644
# %bb.640:                              #   in Loop: Header=BB85_638 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-17987, %ax            # imm = 0xB9BD
	jne	.LBB85_702
# %bb.641:                              # %search.split1961
                                        #   in Loop: Header=BB85_638 Depth=2
	movabsq	$pv, %rax
	movslq	ply, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movq	-200(%rbp), %rsi        # 8-byte Reload
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rdx
	movl	ply, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	(%rax), %rcx
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rax), %rax
	movq	%rax, 16(%rdx)
	movw	$-17987, BasicBlockSignatureTracker # imm = 0xB9BD
	movw	$0, RunTimeSignatureAdjuster
# %bb.642:                              #   in Loop: Header=BB85_638 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$-17974, %ax            # imm = 0xB9CA
	jne	.LBB85_702
# %bb.643:                              # %search.split1965
                                        #   in Loop: Header=BB85_638 Depth=2
	movq	-200(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-17974, BasicBlockSignatureTracker # imm = 0xB9CA
	movw	$120, RunTimeSignatureAdjuster
	jmp	.LBB85_638
.LBB85_644:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$103, %ax
	cmpw	$-17966, %ax            # imm = 0xB9D2
	jne	.LBB85_703
# %bb.645:                              # %search.split1963
                                        #   in Loop: Header=BB85_406 Depth=1
	movl	ply, %eax
	addl	$1, %eax
	cltq
	movl	pv_length(,%rax,4), %eax
	movslq	ply, %rcx
	movl	%eax, pv_length(,%rcx,4)
	movw	$-17966, BasicBlockSignatureTracker # imm = 0xB9D2
	movw	$343, RunTimeSignatureAdjuster # imm = 0x157
.LBB85_646:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$348, %ax               # imm = 0x15C
	xorw	%cx, %ax
	cmpw	$-17959, %ax            # imm = 0xB9D9
	jne	.LBB85_703
# %bb.647:                              # %search.split1905
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-176(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-17959, BasicBlockSignatureTracker # imm = 0xB9D9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_650
# %bb.648:                              #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$-17942, %ax            # imm = 0xB9EA
	jne	.LBB85_703
# %bb.649:                              # %search.split1967
                                        #   in Loop: Header=BB85_406 Depth=1
	movq	-208(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-17942, BasicBlockSignatureTracker # imm = 0xB9EA
	movw	$51, RunTimeSignatureAdjuster
.LBB85_650:                             #   in Loop: Header=BB85_406 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-17933, %ax            # imm = 0xB9F3
	jne	.LBB85_703
# %bb.651:                              # %search.split1969
                                        #   in Loop: Header=BB85_406 Depth=1
	movw	$-17933, BasicBlockSignatureTracker # imm = 0xB9F3
	movw	$4072, RunTimeSignatureAdjuster # imm = 0xFE8
	jmp	.LBB85_406
.LBB85_652:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4058, %ax              # imm = 0xFDA
	cmpw	$-17927, %ax            # imm = 0xB9F9
	jne	.LBB85_706
# %bb.653:                              # %search.split1771
	movw	$-17927, BasicBlockSignatureTracker # imm = 0xB9F9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_656
.LBB85_654:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3087, %ax              # imm = 0xC0F
	cmpw	$-17920, %ax            # imm = 0xBA00
	jne	.LBB85_706
# %bb.655:                              # %search.split1765
	movl	$1000000, %edi          # imm = 0xF4240
	subl	ply, %edi
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r8d
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movw	$-17920, BasicBlockSignatureTracker # imm = 0xBA00
	movw	$8710, RunTimeSignatureAdjuster # imm = 0x2206
	xorl	%ecx, %ecx
	callq	StoreTT
	movl	$1000000, %eax          # imm = 0xF4240
	movw	$-17920, BasicBlockSignatureTracker # imm = 0xBA00
	movw	$8710, RunTimeSignatureAdjuster # imm = 0x2206
	subl	ply, %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-17920, BasicBlockSignatureTracker # imm = 0xBA00
	movw	$5468, RunTimeSignatureAdjuster # imm = 0x155C
	jmp	.LBB85_700
.LBB85_656:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1020, %ax              # imm = 0x3FC
	cmpw	$-17915, %ax            # imm = 0xBA05
	jne	.LBB85_706
# %bb.657:                              # %search.split1971
	movq	-232(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-17915, BasicBlockSignatureTracker # imm = 0xBA05
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_672
# %bb.658:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-17900, %ax            # imm = 0xBA14
	jne	.LBB85_706
# %bb.659:                              # %search.split1973
	movl	Variant, %eax
	movw	$-17900, BasicBlockSignatureTracker # imm = 0xBA14
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB85_670
# %bb.660:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-17878, %ax            # imm = 0xBA2A
	jne	.LBB85_706
# %bb.661:                              # %search.split1977
	movl	Variant, %eax
	movw	$-17878, BasicBlockSignatureTracker # imm = 0xBA2A
	movw	$62, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB85_670
# %bb.662:                              # %Buffer__65
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8022, %ax              # imm = 0x1F56
	cmpw	$-23172, %ax            # imm = 0xA57C
	jne	.LBB85_706
# %bb.663:                              # %search.split1981
	movw	$-23172, BasicBlockSignatureTracker # imm = 0xA57C
	movw	$8022, RunTimeSignatureAdjuster # imm = 0x1F56
# %bb.664:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-17871, %ax            # imm = 0xBA31
	jne	.LBB85_706
# %bb.665:                              # %search.split2135
	movw	$-17871, BasicBlockSignatureTracker # imm = 0xBA31
	movw	$12478, RunTimeSignatureAdjuster # imm = 0x30BE
	callq	in_check
	movw	$-17871, BasicBlockSignatureTracker # imm = 0xBA31
	movw	$12478, RunTimeSignatureAdjuster # imm = 0x30BE
	movw	$-17871, BasicBlockSignatureTracker # imm = 0xBA31
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB85_668
# %bb.666:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-17864, %ax            # imm = 0xBA38
	jne	.LBB85_706
# %bb.667:                              # %search.split1983
	movl	ply, %edi
	addl	$4293967296, %edi       # imm = 0xFFF0BDC0
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r8d
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movw	$-17864, BasicBlockSignatureTracker # imm = 0xBA38
	movw	$8766, RunTimeSignatureAdjuster # imm = 0x223E
	xorl	%ecx, %ecx
	callq	StoreTT
	movw	$-17864, BasicBlockSignatureTracker # imm = 0xBA38
	movw	$8766, RunTimeSignatureAdjuster # imm = 0x223E
	movl	ply, %eax
	addl	$4293967296, %eax       # imm = 0xFFF0BDC0
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-17864, BasicBlockSignatureTracker # imm = 0xBA38
	movw	$5476, RunTimeSignatureAdjuster # imm = 0x1564
	jmp	.LBB85_700
.LBB85_668:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$113, %ax
	cmpw	$-17856, %ax            # imm = 0xBA40
	jne	.LBB85_706
# %bb.669:                              # %search.split1985
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r8d
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movw	$-17856, BasicBlockSignatureTracker # imm = 0xBA40
	movw	$8774, RunTimeSignatureAdjuster # imm = 0x2246
	xorl	%edi, %edi
	xorl	%ecx, %ecx
	callq	StoreTT
	movw	$-17856, BasicBlockSignatureTracker # imm = 0xBA40
	movw	$8774, RunTimeSignatureAdjuster # imm = 0x2246
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-17856, BasicBlockSignatureTracker # imm = 0xBA40
	movw	$5404, RunTimeSignatureAdjuster # imm = 0x151C
	jmp	.LBB85_700
.LBB85_670:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$88, %ax
	xorw	%cx, %ax
	cmpw	$-17844, %ax            # imm = 0xBA4C
	jne	.LBB85_706
# %bb.671:                              # %search.split1979
	movl	$1000000, %edi          # imm = 0xF4240
	subl	ply, %edi
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r8d
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movw	$-17844, BasicBlockSignatureTracker # imm = 0xBA4C
	movw	$8778, RunTimeSignatureAdjuster # imm = 0x224A
	xorl	%ecx, %ecx
	callq	StoreTT
	movl	$1000000, %eax          # imm = 0xF4240
	movw	$-17844, BasicBlockSignatureTracker # imm = 0xBA4C
	movw	$8778, RunTimeSignatureAdjuster # imm = 0x224A
	subl	ply, %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-17844, BasicBlockSignatureTracker # imm = 0xBA4C
	movw	$5392, RunTimeSignatureAdjuster # imm = 0x1510
	jmp	.LBB85_700
.LBB85_672:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$81, %ax
	cmpw	$-17836, %ax            # imm = 0xBA54
	jne	.LBB85_706
# %bb.673:                              # %search.split1975
	movl	fifty, %eax
	movw	$-17836, BasicBlockSignatureTracker # imm = 0xBA54
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$100, %eax
	jle	.LBB85_676
# %bb.674:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-17831, %ax            # imm = 0xBA59
	jne	.LBB85_706
# %bb.675:                              # %search.split1987
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-17831, BasicBlockSignatureTracker # imm = 0xBA59
	movw	$5381, RunTimeSignatureAdjuster # imm = 0x1505
	jmp	.LBB85_700
.LBB85_676:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$-17823, %ax            # imm = 0xBA61
	jne	.LBB85_706
# %bb.677:                              # %search.split1989
	movw	$-17823, BasicBlockSignatureTracker # imm = 0xBA61
	movw	$0, RunTimeSignatureAdjuster
# %bb.678:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-17821, %ax            # imm = 0xBA63
	jne	.LBB85_706
# %bb.679:                              # %search.split1991
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-17821, BasicBlockSignatureTracker # imm = 0xBA63
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-1, %eax
	jne	.LBB85_682
# %bb.680:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-17807, %ax            # imm = 0xBA71
	jne	.LBB85_706
# %bb.681:                              # %search.split1993
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	$500, (%rax)            # imm = 0x1F4
	movw	$-17807, BasicBlockSignatureTracker # imm = 0xBA71
	movw	$18, RunTimeSignatureAdjuster
.LBB85_682:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$227, %ax
	xorw	%cx, %ax
	cmpw	$-17792, %ax            # imm = 0xBA80
	jne	.LBB85_706
# %bb.683:                              # %search.split1995
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-136(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-17792, BasicBlockSignatureTracker # imm = 0xBA80
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB85_690
# %bb.684:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-17777, %ax            # imm = 0xBA8F
	jne	.LBB85_706
# %bb.685:                              # %search.split1997
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-17777, BasicBlockSignatureTracker # imm = 0xBA8F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_688
# %bb.686:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-17769, %ax            # imm = 0xBA97
	jne	.LBB85_706
# %bb.687:                              # %search.split2003
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edi
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %ecx
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r8d
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movw	$-17769, BasicBlockSignatureTracker # imm = 0xBA97
	movw	$8849, RunTimeSignatureAdjuster # imm = 0x2291
	callq	StoreTT
	movw	$-17769, BasicBlockSignatureTracker # imm = 0xBA97
	movw	$8849, RunTimeSignatureAdjuster # imm = 0x2291
	movw	$-17769, BasicBlockSignatureTracker # imm = 0xBA97
	movw	$24, RunTimeSignatureAdjuster
.LBB85_688:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$-17766, %ax            # imm = 0xBA9A
	jne	.LBB85_706
# %bb.689:                              # %search.split2001
	movw	$-17766, BasicBlockSignatureTracker # imm = 0xBA9A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_698
.LBB85_690:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-17743, %ax            # imm = 0xBAB1
	jne	.LBB85_706
# %bb.691:                              # %search.split1999
	movq	-168(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-17743, BasicBlockSignatureTracker # imm = 0xBAB1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB85_694
# %bb.692:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-17732, %ax            # imm = 0xBABC
	jne	.LBB85_706
# %bb.693:                              # %search.split2009
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edi
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %esi
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %ecx
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r8d
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movw	$-17732, BasicBlockSignatureTracker # imm = 0xBABC
	movw	$8890, RunTimeSignatureAdjuster # imm = 0x22BA
	callq	StoreTT
	movw	$-17732, BasicBlockSignatureTracker # imm = 0xBABC
	movw	$8890, RunTimeSignatureAdjuster # imm = 0x22BA
	movw	$-17732, BasicBlockSignatureTracker # imm = 0xBABC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB85_696
.LBB85_694:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$-17725, %ax            # imm = 0xBAC3
	jne	.LBB85_706
# %bb.695:                              # %search.split2007
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edi
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %ecx
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %r8d
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movw	$-17725, BasicBlockSignatureTracker # imm = 0xBAC3
	movw	$8901, RunTimeSignatureAdjuster # imm = 0x22C5
	movl	$4293967296, %esi       # imm = 0xFFF0BDC0
	movl	$4293967296, %edx       # imm = 0xFFF0BDC0
	callq	StoreTT
	movw	$-17725, BasicBlockSignatureTracker # imm = 0xBAC3
	movw	$8901, RunTimeSignatureAdjuster # imm = 0x22C5
	movw	$-17725, BasicBlockSignatureTracker # imm = 0xBAC3
	movw	$127, RunTimeSignatureAdjuster
.LBB85_696:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$93, %ax
	xorw	%cx, %ax
	cmpw	$-17695, %ax            # imm = 0xBAE1
	jne	.LBB85_706
# %bb.697:                              # %search.split2011
	movw	$-17695, BasicBlockSignatureTracker # imm = 0xBAE1
	movw	$123, RunTimeSignatureAdjuster
.LBB85_698:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$127, %ax
	xorw	%cx, %ax
	cmpw	$-17691, %ax            # imm = 0xBAE5
	jne	.LBB85_706
# %bb.699:                              # %search.split2005
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-17691, BasicBlockSignatureTracker # imm = 0xBAE5
	movw	$5561, RunTimeSignatureAdjuster # imm = 0x15B9
.LBB85_700:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5544, %ax              # imm = 0x15A8
	xorw	%cx, %ax
	cmpw	$-17676, %ax            # imm = 0xBAF4
	jne	.LBB85_706
# %bb.701:                              # %search.split1437
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-17676, BasicBlockSignatureTracker # imm = 0xBAF4
	movw	$2501, RunTimeSignatureAdjuster # imm = 0x9C5
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB85_702:                             # %CFerrorHandler.search.loopexit
	jmp	.LBB85_706
.LBB85_703:                             # %CFerrorHandler.search.loopexit1
	jmp	.LBB85_706
.LBB85_704:                             # %CFerrorHandler.search.loopexit2
	jmp	.LBB85_706
.LBB85_705:                             # %CFerrorHandler.search.loopexit3
	jmp	.LBB85_706
.LBB85_706:                             # %CFerrorHandler.search
	callq	FAULT_DETECTED_CFC
.Lfunc_end85:
	.size	search, .Lfunc_end85-search
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI85_0:
	.quad	.LBB85_160
	.quad	.LBB85_148
	.quad	.LBB85_154
	.quad	.LBB85_146
	.quad	.LBB85_162
                                        # -- End function
	.text
	.globl	search_root             # -- Begin function search_root
	.p2align	4, 0x90
	.type	search_root,@function
search_root:                            # @search_root
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$152, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movl	%esi, %r8d
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$-19117, %ax            # imm = 0xB553
	xorw	%bx, %ax
	cmpw	$-17668, %ax            # imm = 0xBAFC
	jne	.LBB86_331
# %bb.1:                                # %search_root.split935
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$-19117, %ax            # imm = 0xB553
	xorw	%bx, %ax
	cmpw	$-17668, %ax            # imm = 0xBAFC
	jne	.LBB86_331
# %bb.2:                                # %search_root.split933
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$-19117, %ax            # imm = 0xB553
	xorw	%bx, %ax
	cmpw	$-17668, %ax            # imm = 0xBAFC
	jne	.LBB86_331
# %bb.3:                                # %search_root.split931
	movq	%rdi, -112(%rbp)        # 8-byte Spill
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %rax
	addq	$-12288, %rax           # imm = 0xD000
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r14
	addq	$-32, %r14
	movq	%r14, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %rdi
	addq	$-16, %rdi
	movq	%rdi, -48(%rbp)         # 8-byte Spill
	movq	%rdi, %rsp
	movq	%rsp, %rdi
	addq	$-16, %rdi
	movq	%rdi, -72(%rbp)         # 8-byte Spill
	movq	%rdi, %rsp
	movq	%rsp, %rdi
	addq	$-16, %rdi
	movq	%rdi, %rsp
	movq	%rsp, %rax
	addq	$-2048, %rax            # imm = 0xF800
	movq	%rax, -176(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-2048, %rax            # imm = 0xF800
	movq	%rax, -192(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -152(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -168(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	%r8d, (%rax)
	movl	%edx, (%r9)
	movq	%r11, -136(%rbp)        # 8-byte Spill
	movl	%ecx, (%r11)
	movq	dummy, %rcx
	movq	%rcx, (%r14)
	movq	dummy+8, %rcx
	movq	%rcx, 8(%r14)
	movq	dummy+16, %rcx
	movq	%r14, -88(%rbp)         # 8-byte Spill
	movq	%rcx, 16(%r14)
	movq	%rdi, -64(%rbp)         # 8-byte Spill
	movl	$-1000000, (%rdi)       # imm = 0xFFF0BDC0
	movq	%rsi, -184(%rbp)        # 8-byte Spill
	movl	$0, (%rsi)
	movl	(%rax), %eax
	movq	%r12, -80(%rbp)         # 8-byte Spill
	movl	%eax, (%r12)
	movq	%r10, %r12
	movl	(%r9), %eax
	movq	%r13, %r14
	movl	%eax, (%r13)
	movl	$0, (%r12)
	movq	%r15, -120(%rbp)        # 8-byte Spill
	movl	$1, (%r15)
	movl	$1, ply
	movl	$1, searching_pv
	movl	$0, time_exit
	movl	$0, time_failure
	movq	%rbx, -160(%rbp)        # 8-byte Spill
	movl	$1, (%rbx)
	movl	$-1000000, cur_score    # imm = 0xFFF0BDC0
	movl	nodes, %eax
	addl	$1, %eax
	movl	%eax, nodes
	movw	$-17668, BasicBlockSignatureTracker # imm = 0xBAFC
	movw	$9118, RunTimeSignatureAdjuster # imm = 0x239E
	callq	is_draw
	movw	$-17668, BasicBlockSignatureTracker # imm = 0xBAFC
	movw	$9118, RunTimeSignatureAdjuster # imm = 0x239E
	movw	$-17668, BasicBlockSignatureTracker # imm = 0xBAFC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_6
# %bb.4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$498, %ax               # imm = 0x1F2
	cmpw	$-17650, %ax            # imm = 0xBB0E
	movq	-112(%rbp), %rdx        # 8-byte Reload
	jne	.LBB86_331
# %bb.5:                                # %search_root.split
	movl	$5, result
	movl	$0, cur_score
	movslq	ply, %rax
	movl	$0, pv_length(,%rax,4)
	movq	dummy, %rax
	movq	%rax, (%rdx)
	movq	dummy+8, %rax
	movq	%rax, 8(%rdx)
	movq	dummy+16, %rax
	movq	%rax, 16(%rdx)
	movw	$-17650, BasicBlockSignatureTracker # imm = 0xBB0E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_323
.LBB86_6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$487, %ax               # imm = 0x1E7
	cmpw	$-17637, %ax            # imm = 0xBB1B
	jne	.LBB86_331
# %bb.7:                                # %search_root.split655
	movl	ply, %eax
	movslq	ply, %rcx
	movl	%eax, pv_length(,%rcx,4)
	movl	hash, %eax
	movl	move_number, %ecx
	addl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movl	%eax, hash_history(,%rcx,4)
	movw	$-17637, BasicBlockSignatureTracker # imm = 0xBB1B
	movw	$12692, RunTimeSignatureAdjuster # imm = 0x3194
	callq	in_check
	movw	$-17637, BasicBlockSignatureTracker # imm = 0xBB1B
	movw	$12692, RunTimeSignatureAdjuster # imm = 0x3194
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$-17637, BasicBlockSignatureTracker # imm = 0xBB1B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_10
# %bb.8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-17630, %ax            # imm = 0xBB22
	jne	.LBB86_331
# %bb.9:                                # %search_root.split659
	movl	ext_check, %eax
	addl	$1, %eax
	movl	%eax, ext_check
	movq	-136(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-17630, BasicBlockSignatureTracker # imm = 0xBB22
	movw	$57, RunTimeSignatureAdjuster
.LBB86_10:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$43, %ax
	xorw	%cx, %ax
	cmpw	$-17616, %ax            # imm = 0xBB30
	jne	.LBB86_331
# %bb.11:                               # %search_root.split661
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movslq	ply, %rcx
	movl	%eax, checks(,%rcx,4)
	movslq	ply, %rax
	movl	$0, recaps(,%rax,4)
	movslq	ply, %rax
	movl	$0, singular(,%rax,4)
	movl	Variant, %eax
	movw	$-17616, BasicBlockSignatureTracker # imm = 0xBB30
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB86_46
# %bb.12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-17606, %ax            # imm = 0xBB3A
	jne	.LBB86_331
# %bb.13:                               # %search_root.split663
	movl	$0, legals
	movl	$1, captures
	movw	$-17606, BasicBlockSignatureTracker # imm = 0xBB3A
	movw	$12714, RunTimeSignatureAdjuster # imm = 0x31AA
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-17606, BasicBlockSignatureTracker # imm = 0xBB3A
	movw	$12714, RunTimeSignatureAdjuster # imm = 0x31AA
	movl	numb_moves, %eax
	movl	%eax, (%r12)
	movl	$0, captures
	movl	(%r12), %eax
	movw	$-17606, BasicBlockSignatureTracker # imm = 0xBB3A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_28
# %bb.14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-17605, %ax            # imm = 0xBB3B
	jne	.LBB86_331
# %bb.15:                               # %search_root.split667
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-17605, BasicBlockSignatureTracker # imm = 0xBB3B
	movw	$0, RunTimeSignatureAdjuster
.LBB86_16:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$120, %ax
	xorw	%cx, %ax
	cmpw	$-17597, %ax            # imm = 0xBB43
	jne	.LBB86_330
# %bb.17:                               # %search_root.split671
                                        #   in Loop: Header=BB86_16 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r12), %ecx
	movw	$-17597, BasicBlockSignatureTracker # imm = 0xBB43
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB86_26
# %bb.18:                               #   in Loop: Header=BB86_16 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-17585, %ax            # imm = 0xBB4F
	jne	.LBB86_330
# %bb.19:                               # %search_root.split673
                                        #   in Loop: Header=BB86_16 Depth=1
	movq	%r12, -96(%rbp)         # 8-byte Spill
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %esi
	movw	$-17585, BasicBlockSignatureTracker # imm = 0xBB4F
	movw	$12799, RunTimeSignatureAdjuster # imm = 0x31FF
	movq	-56(%rbp), %r15         # 8-byte Reload
	movq	%r15, %rdi
	callq	make
	movw	$-17585, BasicBlockSignatureTracker # imm = 0xBB4F
	movw	$12799, RunTimeSignatureAdjuster # imm = 0x31FF
	movl	(%rbx), %esi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	movw	$-17585, BasicBlockSignatureTracker # imm = 0xBB4F
	movw	$12799, RunTimeSignatureAdjuster # imm = 0x31FF
	movq	%r15, %rdi
	callq	check_legal
	movw	$-17585, BasicBlockSignatureTracker # imm = 0xBB4F
	movw	$12799, RunTimeSignatureAdjuster # imm = 0x31FF
	movw	$-17585, BasicBlockSignatureTracker # imm = 0xBB4F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_22
# %bb.20:                               #   in Loop: Header=BB86_16 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$-17564, %ax            # imm = 0xBB64
	jne	.LBB86_330
# %bb.21:                               # %search_root.split677
                                        #   in Loop: Header=BB86_16 Depth=1
	movl	legals, %eax
	addl	$1, %eax
	movl	%eax, legals
	movw	$-17564, BasicBlockSignatureTracker # imm = 0xBB64
	movw	$43, RunTimeSignatureAdjuster
.LBB86_22:                              #   in Loop: Header=BB86_16 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$39, %ax
	xorw	%cx, %ax
	cmpw	$-17560, %ax            # imm = 0xBB68
	jne	.LBB86_330
# %bb.23:                               # %search_root.split679
                                        #   in Loop: Header=BB86_16 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-17560, BasicBlockSignatureTracker # imm = 0xBB68
	movw	$12687, RunTimeSignatureAdjuster # imm = 0x318F
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-17560, BasicBlockSignatureTracker # imm = 0xBB68
	movw	$12687, RunTimeSignatureAdjuster # imm = 0x318F
	movw	$-17560, BasicBlockSignatureTracker # imm = 0xBB68
	movw	$0, RunTimeSignatureAdjuster
# %bb.24:                               #   in Loop: Header=BB86_16 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-17557, %ax            # imm = 0xBB6B
	movq	-96(%rbp), %r12         # 8-byte Reload
	jne	.LBB86_330
# %bb.25:                               # %search_root.split681
                                        #   in Loop: Header=BB86_16 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-17557, BasicBlockSignatureTracker # imm = 0xBB6B
	movw	$80, RunTimeSignatureAdjuster
	jmp	.LBB86_16
.LBB86_26:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$-17549, %ax            # imm = 0xBB73
	jne	.LBB86_331
# %bb.27:                               # %search_root.split675
	movw	$-17549, BasicBlockSignatureTracker # imm = 0xBB73
	movw	$73, RunTimeSignatureAdjuster
.LBB86_28:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$187, %ax
	xorw	%cx, %ax
	cmpw	$-17535, %ax            # imm = 0xBB81
	jne	.LBB86_331
# %bb.29:                               # %search_root.split669
	movl	legals, %eax
	movw	$-17535, BasicBlockSignatureTracker # imm = 0xBB81
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_44
# %bb.30:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-17521, %ax            # imm = 0xBB8F
	jne	.LBB86_331
# %bb.31:                               # %search_root.split685
	movl	$0, captures
	movw	$-17521, BasicBlockSignatureTracker # imm = 0xBB8F
	movw	$12575, RunTimeSignatureAdjuster # imm = 0x311F
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-17521, BasicBlockSignatureTracker # imm = 0xBB8F
	movw	$12575, RunTimeSignatureAdjuster # imm = 0x311F
	movl	numb_moves, %eax
	movl	%eax, (%r12)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-17521, BasicBlockSignatureTracker # imm = 0xBB8F
	movw	$0, RunTimeSignatureAdjuster
.LBB86_32:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-17505, %ax            # imm = 0xBB9F
	jne	.LBB86_329
# %bb.33:                               # %search_root.split687
                                        #   in Loop: Header=BB86_32 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r12), %ecx
	movw	$-17505, BasicBlockSignatureTracker # imm = 0xBB9F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB86_42
# %bb.34:                               #   in Loop: Header=BB86_32 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-17496, %ax            # imm = 0xBBA8
	jne	.LBB86_329
# %bb.35:                               # %search_root.split689
                                        #   in Loop: Header=BB86_32 Depth=1
	movq	%r12, -96(%rbp)         # 8-byte Spill
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %esi
	movw	$-17496, BasicBlockSignatureTracker # imm = 0xBBA8
	movw	$12568, RunTimeSignatureAdjuster # imm = 0x3118
	movq	-56(%rbp), %r15         # 8-byte Reload
	movq	%r15, %rdi
	callq	make
	movw	$-17496, BasicBlockSignatureTracker # imm = 0xBBA8
	movw	$12568, RunTimeSignatureAdjuster # imm = 0x3118
	movl	(%rbx), %esi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	movw	$-17496, BasicBlockSignatureTracker # imm = 0xBBA8
	movw	$12568, RunTimeSignatureAdjuster # imm = 0x3118
	movq	%r15, %rdi
	callq	check_legal
	movw	$-17496, BasicBlockSignatureTracker # imm = 0xBBA8
	movw	$12568, RunTimeSignatureAdjuster # imm = 0x3118
	movw	$-17496, BasicBlockSignatureTracker # imm = 0xBBA8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_38
# %bb.36:                               #   in Loop: Header=BB86_32 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-17477, %ax            # imm = 0xBBBB
	jne	.LBB86_329
# %bb.37:                               # %search_root.split693
                                        #   in Loop: Header=BB86_32 Depth=1
	movl	legals, %eax
	addl	$1, %eax
	movl	%eax, legals
	movw	$-17477, BasicBlockSignatureTracker # imm = 0xBBBB
	movw	$19, RunTimeSignatureAdjuster
.LBB86_38:                              #   in Loop: Header=BB86_32 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$99, %ax
	xorw	%cx, %ax
	cmpw	$-17461, %ax            # imm = 0xBBCB
	jne	.LBB86_329
# %bb.39:                               # %search_root.split695
                                        #   in Loop: Header=BB86_32 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-17461, BasicBlockSignatureTracker # imm = 0xBBCB
	movw	$12588, RunTimeSignatureAdjuster # imm = 0x312C
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-17461, BasicBlockSignatureTracker # imm = 0xBBCB
	movw	$12588, RunTimeSignatureAdjuster # imm = 0x312C
	movw	$-17461, BasicBlockSignatureTracker # imm = 0xBBCB
	movw	$0, RunTimeSignatureAdjuster
# %bb.40:                               #   in Loop: Header=BB86_32 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-17455, %ax            # imm = 0xBBD1
	movq	-96(%rbp), %r12         # 8-byte Reload
	jne	.LBB86_329
# %bb.41:                               # %search_root.split697
                                        #   in Loop: Header=BB86_32 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-17455, BasicBlockSignatureTracker # imm = 0xBBD1
	movw	$94, RunTimeSignatureAdjuster
	jmp	.LBB86_32
.LBB86_42:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$74, %ax
	cmpw	$-17451, %ax            # imm = 0xBBD5
	jne	.LBB86_331
# %bb.43:                               # %search_root.split691
	movw	$-17451, BasicBlockSignatureTracker # imm = 0xBBD5
	movw	$84, RunTimeSignatureAdjuster
.LBB86_44:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$89, %ax
	xorw	%cx, %ax
	cmpw	$-17448, %ax            # imm = 0xBBD8
	jne	.LBB86_331
# %bb.45:                               # %search_root.split683
	movw	$-17448, BasicBlockSignatureTracker # imm = 0xBBD8
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_48
.LBB86_46:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$238, %ax
	cmpw	$-17442, %ax            # imm = 0xBBDE
	jne	.LBB86_331
# %bb.47:                               # %search_root.split665
	movw	$-17442, BasicBlockSignatureTracker # imm = 0xBBDE
	movw	$12622, RunTimeSignatureAdjuster # imm = 0x314E
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-17442, BasicBlockSignatureTracker # imm = 0xBBDE
	movw	$12622, RunTimeSignatureAdjuster # imm = 0x314E
	movl	numb_moves, %eax
	movl	%eax, (%r12)
	movw	$-17442, BasicBlockSignatureTracker # imm = 0xBBDE
	movw	$6, RunTimeSignatureAdjuster
.LBB86_48:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$56, %ax
	xorw	%cx, %ax
	cmpw	$-17440, %ax            # imm = 0xBBE0
	jne	.LBB86_331
# %bb.49:                               # %search_root.split699
	movl	legals, %eax
	movl	%eax, movetotal
	movq	%r12, -96(%rbp)         # 8-byte Spill
	movl	(%r12), %ecx
	movw	$-17440, BasicBlockSignatureTracker # imm = 0xBBE0
	movw	$5733, RunTimeSignatureAdjuster # imm = 0x1665
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-176(%rbp), %rsi        # 8-byte Reload
	movq	-192(%rbp), %rdx        # 8-byte Reload
	movl	$4294967295, %r8d       # imm = 0xFFFFFFFF
	callq	order_moves
	movw	$-17440, BasicBlockSignatureTracker # imm = 0xBBE0
	movw	$5733, RunTimeSignatureAdjuster # imm = 0x1665
	movw	$-17440, BasicBlockSignatureTracker # imm = 0xBBE0
	movw	$0, RunTimeSignatureAdjuster
.LBB86_50:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB86_143 Depth 2
                                        #     Child Loop BB86_93 Depth 2
                                        #     Child Loop BB86_249 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-17438, %ax            # imm = 0xBBE2
	jne	.LBB86_328
# %bb.51:                               # %search_root.split701
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-96(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edx
	movw	$-17438, BasicBlockSignatureTracker # imm = 0xBBE2
	movw	$5743, RunTimeSignatureAdjuster # imm = 0x166F
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movq	-176(%rbp), %rsi        # 8-byte Reload
	callq	remove_one
	movw	$-17438, BasicBlockSignatureTracker # imm = 0xBBE2
	movw	$5743, RunTimeSignatureAdjuster # imm = 0x166F
	movw	$-17438, BasicBlockSignatureTracker # imm = 0xBBE2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_275
# %bb.52:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-17434, %ax            # imm = 0xBBE6
	jne	.LBB86_328
# %bb.53:                               # %search_root.split703
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	alllosers, %eax
	movw	$-17434, BasicBlockSignatureTracker # imm = 0xBBE6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_67
# %bb.54:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-17422, %ax            # imm = 0xBBF2
	jne	.LBB86_328
# %bb.55:                               # %search_root.split709
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	rootlosers(,%rax,4), %eax
	movw	$-17422, BasicBlockSignatureTracker # imm = 0xBBF2
	movw	$20, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_67
# %bb.56:                               # %Buffer__
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22039, %ax             # imm = 0x5617
	cmpw	$-4635, %ax             # imm = 0xEDE5
	jne	.LBB86_328
# %bb.57:                               # %search_root.split711
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-4635, BasicBlockSignatureTracker # imm = 0xEDE5
	movw	$22039, RunTimeSignatureAdjuster # imm = 0x5617
# %bb.58:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2034, %ax              # imm = 0x7F2
	xorw	%cx, %ax
	cmpw	$-17408, %ax            # imm = 0xBC00
	jne	.LBB86_328
# %bb.59:                               # %search_root.split937
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	Variant, %eax
	movw	$-17408, BasicBlockSignatureTracker # imm = 0xBC00
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB86_64
# %bb.60:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-17407, %ax            # imm = 0xBC01
	jne	.LBB86_328
# %bb.61:                               # %search_root.split715
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	Variant, %eax
	movw	$-17407, BasicBlockSignatureTracker # imm = 0xBC01
	movw	$2023, RunTimeSignatureAdjuster # imm = 0x7E7
	cmpl	$3, %eax
	jne	.LBB86_67
# %bb.62:                               # %Buffer__1
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31120, %ax             # imm = 0x7990
	cmpw	$-14959, %ax            # imm = 0xC591
	jne	.LBB86_328
# %bb.63:                               # %search_root.split717
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-14959, BasicBlockSignatureTracker # imm = 0xC591
	movw	$31121, RunTimeSignatureAdjuster # imm = 0x7991
.LBB86_64:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$-17386, %ax            # imm = 0xBC16
	jne	.LBB86_328
# %bb.65:                               # %search_root.split713
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-17386, BasicBlockSignatureTracker # imm = 0xBC16
	movw	$2038, RunTimeSignatureAdjuster # imm = 0x7F6
.LBB86_66:                              # %.backedge
                                        #   in Loop: Header=BB86_50 Depth=1
	jmp	.LBB86_50
.LBB86_67:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2042, %ax              # imm = 0x7FA
	xorw	%cx, %ax
	cmpw	$-17380, %ax            # imm = 0xBC1C
	jne	.LBB86_328
# %bb.68:                               # %search_root.split707
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movl	(%rbx), %esi
	movw	$-17380, BasicBlockSignatureTracker # imm = 0xBC1C
	movw	$13996, RunTimeSignatureAdjuster # imm = 0x36AC
	movq	-56(%rbp), %r12         # 8-byte Reload
	movq	%r12, %rdi
	callq	make
	movabsq	$path, %rax
	movw	$-17380, BasicBlockSignatureTracker # imm = 0xBC1C
	movw	$13996, RunTimeSignatureAdjuster # imm = 0x36AC
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	$0, (%rcx)
	movl	hash, %ecx
	movl	move_number, %edx
	addl	ply, %edx
	subl	$1, %edx
	movslq	%edx, %rdx
	movl	%ecx, hash_history(,%rdx,4)
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movslq	(%rbx), %rcx
	imulq	$24, %rcx, %rcx
	movq	%r12, %rdx
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rax)
	movl	nodes, %eax
	movq	-168(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rbx), %esi
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	movw	$-17380, BasicBlockSignatureTracker # imm = 0xBC1C
	movw	$13996, RunTimeSignatureAdjuster # imm = 0x36AC
	movq	%r12, %rdi
	callq	check_legal
	movw	$-17380, BasicBlockSignatureTracker # imm = 0xBC1C
	movw	$13996, RunTimeSignatureAdjuster # imm = 0x36AC
	movw	$-17380, BasicBlockSignatureTracker # imm = 0xBC1C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_187
# %bb.69:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-17363, %ax            # imm = 0xBC2D
	jne	.LBB86_328
# %bb.70:                               # %search_root.split719
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-48(%rbp), %r12         # 8-byte Reload
	movl	(%r12), %esi
	movw	$-17363, BasicBlockSignatureTracker # imm = 0xBC2D
	movw	$14026, RunTimeSignatureAdjuster # imm = 0x36CA
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movq	%rbx, %rdi
	callq	unmake
	movabsq	$searching_move, %rdi
	movw	$-17363, BasicBlockSignatureTracker # imm = 0xBC2D
	movw	$14026, RunTimeSignatureAdjuster # imm = 0x36CA
	movq	-184(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	movetotal, %eax
	subl	(%rcx), %eax
	movl	%eax, moveleft
	movslq	(%r12), %rax
	imulq	$24, %rax, %rax
	movq	%rbx, %rcx
	addq	%rax, %rcx
	movw	$-17363, BasicBlockSignatureTracker # imm = 0xBC2D
	movw	$-22404, RunTimeSignatureAdjuster # imm = 0xA87C
	subq	$32, %rsp
	movq	(%rcx), %rax
	movq	%rax, (%rsp)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsp)
	callq	comp_to_san
	addq	$32, %rsp
	movw	$-17363, BasicBlockSignatureTracker # imm = 0xBC2D
	movw	$-22404, RunTimeSignatureAdjuster # imm = 0xA87C
	movl	(%r12), %esi
	movw	$-17363, BasicBlockSignatureTracker # imm = 0xBC2D
	movw	$13981, RunTimeSignatureAdjuster # imm = 0x369D
	movq	%rbx, %rdi
	callq	make
	movw	$-17363, BasicBlockSignatureTracker # imm = 0xBC2D
	movw	$13981, RunTimeSignatureAdjuster # imm = 0x369D
	movl	(%r12), %esi
	movw	$-17363, BasicBlockSignatureTracker # imm = 0xBC2D
	movw	$2560, RunTimeSignatureAdjuster # imm = 0xA00
	movq	%rbx, %rdi
	callq	f_in_check
	movw	$-17363, BasicBlockSignatureTracker # imm = 0xBC2D
	movw	$2560, RunTimeSignatureAdjuster # imm = 0xA00
	movslq	ply, %rcx
	movl	%eax, checks(,%rcx,4)
	movslq	ply, %rax
	movl	$0, recaps(,%rax,4)
	movslq	ply, %rax
	movl	$0, singular(,%rax,4)
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-17363, BasicBlockSignatureTracker # imm = 0xBC2D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB86_73
# %bb.71:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-17351, %ax            # imm = 0xBC39
	jne	.LBB86_328
# %bb.72:                               # %search_root.split725
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	i_depth, %eax
	movw	$-17351, BasicBlockSignatureTracker # imm = 0xBC39
	movw	$20, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jge	.LBB86_117
.LBB86_73:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$110, %ax
	xorw	%cx, %ax
	cmpw	$-17341, %ax            # imm = 0xBC43
	jne	.LBB86_328
# %bb.74:                               # %search_root.split723
                                        #   in Loop: Header=BB86_50 Depth=1
	xorl	%esi, %esi
	xorl	%edi, %edi
	subl	(%r14), %edi
	movq	-80(%rbp), %rax         # 8-byte Reload
	subl	(%rax), %esi
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	subl	$1, %edx
	movw	$-17341, BasicBlockSignatureTracker # imm = 0xBC43
	movw	$3846, RunTimeSignatureAdjuster # imm = 0xF06
	xorl	%ecx, %ecx
	callq	search
	xorl	%ecx, %ecx
	movw	$-17341, BasicBlockSignatureTracker # imm = 0xBC43
	movw	$3846, RunTimeSignatureAdjuster # imm = 0xF06
	subl	%eax, %ecx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	%ecx, (%rax)
	movl	time_exit, %eax
	movw	$-17341, BasicBlockSignatureTracker # imm = 0xBC43
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_115
# %bb.75:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-17337, %ax            # imm = 0xBC47
	jne	.LBB86_328
# %bb.76:                               # %search_root.split731
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	post, %eax
	movw	$-17337, BasicBlockSignatureTracker # imm = 0xBC47
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_79
# %bb.77:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-17332, %ax            # imm = 0xBC4C
	jne	.LBB86_328
# %bb.78:                               # %search_root.split735
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	xb_mode, %eax
	movw	$-17332, BasicBlockSignatureTracker # imm = 0xBC4C
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_113
.LBB86_79:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-17320, %ax            # imm = 0xBC58
	jne	.LBB86_328
# %bb.80:                               # %search_root.split733
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	i_depth, %eax
	movw	$-17320, BasicBlockSignatureTracker # imm = 0xBC58
	movw	$27, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jl	.LBB86_115
# %bb.81:                               # %Buffer__4
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-7343, %ax             # imm = 0xE351
	cmpw	$24329, %ax             # imm = 0x5F09
	jne	.LBB86_328
# %bb.82:                               # %search_root.split739
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$24329, BasicBlockSignatureTracker # imm = 0x5F09
	movw	$-7343, RunTimeSignatureAdjuster # imm = 0xE351
# %bb.83:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$-17307, %ax            # imm = 0xBC65
	jne	.LBB86_328
# %bb.84:                               # %search_root.split941
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r14), %ecx
	movw	$-17307, BasicBlockSignatureTracker # imm = 0xBC65
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB86_87
# %bb.85:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-17306, %ax            # imm = 0xBC66
	jne	.LBB86_328
# %bb.86:                               # %search_root.split741
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rsi         # 8-byte Reload
	addq	%rax, %rsi
	movw	$-17306, BasicBlockSignatureTracker # imm = 0xBC66
	movw	$0, RunTimeSignatureAdjuster
	callq	post_fh_thinking
	movw	$-17306, BasicBlockSignatureTracker # imm = 0xBC66
	movw	$0, RunTimeSignatureAdjuster
	movw	$-17306, BasicBlockSignatureTracker # imm = 0xBC66
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_103
.LBB86_87:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-17304, %ax            # imm = 0xBC68
	jne	.LBB86_328
# %bb.88:                               # %search_root.split743
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-17304, BasicBlockSignatureTracker # imm = 0xBC68
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB86_91
# %bb.89:                               #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$229, %ax
	cmpw	$-17267, %ax            # imm = 0xBC8D
	jne	.LBB86_328
# %bb.90:                               # %search_root.split747
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	$1, failed
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rsi         # 8-byte Reload
	addq	%rax, %rsi
	movw	$-17267, BasicBlockSignatureTracker # imm = 0xBC8D
	movw	$0, RunTimeSignatureAdjuster
	callq	post_fl_thinking
	movw	$-17267, BasicBlockSignatureTracker # imm = 0xBC8D
	movw	$0, RunTimeSignatureAdjuster
	movw	$-17267, BasicBlockSignatureTracker # imm = 0xBC8D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_101
.LBB86_91:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$246, %ax
	cmpw	$-17250, %ax            # imm = 0xBC9E
	jne	.LBB86_328
# %bb.92:                               # %search_root.split749
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$pv, %rax
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rax)
	movl	ply, %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-17250, BasicBlockSignatureTracker # imm = 0xBC9E
	movw	$0, RunTimeSignatureAdjuster
.LBB86_93:                              #   Parent Loop BB86_50 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$62, %ax
	xorw	%cx, %ax
	cmpw	$-17248, %ax            # imm = 0xBCA0
	jne	.LBB86_326
# %bb.94:                               # %search_root.split753
                                        #   in Loop: Header=BB86_93 Depth=2
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	ply, %rcx
	movl	pv_length(,%rcx,4), %ecx
	movw	$-17248, BasicBlockSignatureTracker # imm = 0xBCA0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB86_99
# %bb.95:                               #   in Loop: Header=BB86_93 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-17241, %ax            # imm = 0xBCA7
	jne	.LBB86_326
# %bb.96:                               # %search_root.split755
                                        #   in Loop: Header=BB86_93 Depth=2
	movabsq	$pv, %rax
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movq	-72(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rdx
	movslq	ply, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	(%rax), %rcx
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rax), %rax
	movq	%rax, 16(%rdx)
	movw	$-17241, BasicBlockSignatureTracker # imm = 0xBCA7
	movw	$0, RunTimeSignatureAdjuster
# %bb.97:                               #   in Loop: Header=BB86_93 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-17230, %ax            # imm = 0xBCB2
	jne	.LBB86_326
# %bb.98:                               # %search_root.split759
                                        #   in Loop: Header=BB86_93 Depth=2
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-17230, BasicBlockSignatureTracker # imm = 0xBCB2
	movw	$44, RunTimeSignatureAdjuster
	jmp	.LBB86_93
.LBB86_99:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$103, %ax
	cmpw	$-17209, %ax            # imm = 0xBCC7
	jne	.LBB86_328
# %bb.100:                              # %search_root.split757
                                        #   in Loop: Header=BB86_50 Depth=1
	movslq	ply, %rax
	movl	pv_length(,%rax,4), %eax
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movl	%eax, pv_length(,%rcx,4)
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edi
	movw	$-17209, BasicBlockSignatureTracker # imm = 0xBCC7
	movw	$0, RunTimeSignatureAdjuster
	callq	post_thinking
	movw	$-17209, BasicBlockSignatureTracker # imm = 0xBCC7
	movw	$74, RunTimeSignatureAdjuster
	movw	$-17209, BasicBlockSignatureTracker # imm = 0xBCC7
	movw	$74, RunTimeSignatureAdjuster
.LBB86_101:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$67, %ax
	xorw	%cx, %ax
	cmpw	$-17202, %ax            # imm = 0xBCCE
	jne	.LBB86_328
# %bb.102:                              # %search_root.split751
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-17202, BasicBlockSignatureTracker # imm = 0xBCCE
	movw	$168, RunTimeSignatureAdjuster
.LBB86_103:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$178, %ax
	xorw	%cx, %ax
	cmpw	$-17196, %ax            # imm = 0xBCD4
	jne	.LBB86_328
# %bb.104:                              # %search_root.split745
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	cur_score, %ecx
	movw	$-17196, BasicBlockSignatureTracker # imm = 0xBCD4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB86_111
# %bb.105:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-17192, %ax            # imm = 0xBCD8
	jne	.LBB86_328
# %bb.106:                              # %search_root.split761
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	time_exit, %eax
	movw	$-17192, BasicBlockSignatureTracker # imm = 0xBCD8
	movw	$12, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_111
# %bb.107:                              # %Buffer__5
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22978, %ax            # imm = 0xA63E
	cmpw	$6886, %ax              # imm = 0x1AE6
	jne	.LBB86_328
# %bb.108:                              # %search_root.split765
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$6886, BasicBlockSignatureTracker # imm = 0x1AE6
	movw	$-22978, RunTimeSignatureAdjuster # imm = 0xA63E
# %bb.109:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-17186, %ax            # imm = 0xBCDE
	jne	.LBB86_328
# %bb.110:                              # %search_root.split943
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	%eax, cur_score
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	movl	%eax, bestmovenum
	movslq	(%rcx), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movq	(%rcx), %rax
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movq	%rax, (%rdx)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rdx)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rdx)
	movw	$-17186, BasicBlockSignatureTracker # imm = 0xBCDE
	movw	$10, RunTimeSignatureAdjuster
.LBB86_111:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-17185, %ax            # imm = 0xBCDF
	jne	.LBB86_328
# %bb.112:                              # %search_root.split763
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-17185, BasicBlockSignatureTracker # imm = 0xBCDF
	movw	$156, RunTimeSignatureAdjuster
	jmp	.LBB86_115
.LBB86_113:                             # %Buffer__3
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8920, %ax              # imm = 0x22D8
	cmpw	$-24940, %ax            # imm = 0x9E94
	jne	.LBB86_328
# %bb.114:                              # %search_root.split737
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-24940, BasicBlockSignatureTracker # imm = 0x9E94
	movw	$8919, RunTimeSignatureAdjuster # imm = 0x22D7
.LBB86_115:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$160, %ax
	xorw	%cx, %ax
	cmpw	$-17181, %ax            # imm = 0xBCE3
	jne	.LBB86_328
# %bb.116:                              # %search_root.split729
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-17181, BasicBlockSignatureTracker # imm = 0xBCE3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_165
.LBB86_117:                             # %Buffer__2
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7541, %ax              # imm = 0x1D75
	cmpw	$-24244, %ax            # imm = 0xA14C
	jne	.LBB86_328
# %bb.118:                              # %search_root.split727
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-24244, BasicBlockSignatureTracker # imm = 0xA14C
	movw	$7541, RunTimeSignatureAdjuster # imm = 0x1D75
# %bb.119:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$223, %ax
	xorw	%cx, %ax
	cmpw	$-17178, %ax            # imm = 0xBCE6
	jne	.LBB86_328
# %bb.120:                              # %search_root.split939
                                        #   in Loop: Header=BB86_50 Depth=1
	xorl	%esi, %esi
	xorl	%edi, %edi
	movq	-80(%rbp), %rbx         # 8-byte Reload
	subl	(%rbx), %edi
	subl	$1, %edi
	subl	(%rbx), %esi
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	subl	$1, %edx
	movw	$-17178, BasicBlockSignatureTracker # imm = 0xBCE6
	movw	$4003, RunTimeSignatureAdjuster # imm = 0xFA3
	xorl	%ecx, %ecx
	callq	search
	xorl	%ecx, %ecx
	movw	$-17178, BasicBlockSignatureTracker # imm = 0xBCE6
	movw	$4003, RunTimeSignatureAdjuster # imm = 0xFA3
	subl	%eax, %ecx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	%ecx, (%rax)
	movl	(%rax), %eax
	movl	(%rbx), %ecx
	movw	$-17178, BasicBlockSignatureTracker # imm = 0xBCE6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB86_155
# %bb.121:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$497, %ax               # imm = 0x1F1
	cmpw	$-17129, %ax            # imm = 0xBD17
	jne	.LBB86_328
# %bb.122:                              # %search_root.split769
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r14), %ecx
	movw	$-17129, BasicBlockSignatureTracker # imm = 0xBD17
	movw	$497, RunTimeSignatureAdjuster # imm = 0x1F1
	cmpl	%ecx, %eax
	jge	.LBB86_155
# %bb.123:                              # %Buffer__6
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11291, %ax             # imm = 0x2C1B
	cmpw	$-28404, %ax            # imm = 0x910C
	jne	.LBB86_328
# %bb.124:                              # %search_root.split773
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-28404, BasicBlockSignatureTracker # imm = 0x910C
	movw	$11291, RunTimeSignatureAdjuster # imm = 0x2C1B
# %bb.125:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-17128, %ax            # imm = 0xBD18
	jne	.LBB86_328
# %bb.126:                              # %search_root.split945
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	time_exit, %eax
	movw	$-17128, BasicBlockSignatureTracker # imm = 0xBD18
	movw	$510, RunTimeSignatureAdjuster # imm = 0x1FE
	cmpl	$0, %eax
	jne	.LBB86_155
# %bb.127:                              # %Buffer__7
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14164, %ax             # imm = 0x3754
	cmpw	$-30132, %ax            # imm = 0x8A4C
	jne	.LBB86_328
# %bb.128:                              # %search_root.split775
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-30132, BasicBlockSignatureTracker # imm = 0x8A4C
	movw	$14164, RunTimeSignatureAdjuster # imm = 0x3754
# %bb.129:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$-17117, %ax            # imm = 0xBD23
	jne	.LBB86_328
# %bb.130:                              # %search_root.split947
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %r15         # 8-byte Reload
	movl	(%r15), %edi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rsi         # 8-byte Reload
	addq	%rax, %rsi
	movw	$-17117, BasicBlockSignatureTracker # imm = 0xBD23
	movw	$0, RunTimeSignatureAdjuster
	callq	post_fail_thinking
	xorl	%esi, %esi
	movw	$-17117, BasicBlockSignatureTracker # imm = 0xBD23
	movw	$0, RunTimeSignatureAdjuster
	xorl	%edi, %edi
	subl	(%r14), %edi
	movq	-80(%rbp), %rbx         # 8-byte Reload
	subl	(%rbx), %esi
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	subl	$1, %edx
	movw	$-17117, BasicBlockSignatureTracker # imm = 0xBD23
	movw	$3686, RunTimeSignatureAdjuster # imm = 0xE66
	xorl	%ecx, %ecx
	callq	search
	xorl	%ecx, %ecx
	movw	$-17117, BasicBlockSignatureTracker # imm = 0xBD23
	movw	$3686, RunTimeSignatureAdjuster # imm = 0xE66
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%r15), %eax
	movl	(%rbx), %ecx
	movw	$-17117, BasicBlockSignatureTracker # imm = 0xBD23
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB86_153
# %bb.131:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-17091, %ax            # imm = 0xBD3D
	jne	.LBB86_328
# %bb.132:                              # %search_root.split777
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	time_exit, %eax
	movw	$-17091, BasicBlockSignatureTracker # imm = 0xBD3D
	movw	$30, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_153
# %bb.133:                              # %Buffer__8
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8161, %ax              # imm = 0x1FE1
	cmpw	$-23844, %ax            # imm = 0xA2DC
	jne	.LBB86_328
# %bb.134:                              # %search_root.split781
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-23844, BasicBlockSignatureTracker # imm = 0xA2DC
	movw	$8161, RunTimeSignatureAdjuster # imm = 0x1FE1
# %bb.135:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$125, %ax
	xorw	%cx, %ax
	cmpw	$-17088, %ax            # imm = 0xBD40
	jne	.LBB86_328
# %bb.136:                              # %search_root.split949
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	$0, failed
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx), %eax
	movl	%eax, cur_score
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	movl	%eax, bestmovenum
	movslq	(%rcx), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movq	(%rcx), %rax
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	%rax, (%rsi)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rsi)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsi)
	movl	(%rdx), %eax
	movl	(%r14), %ecx
	movw	$-17088, BasicBlockSignatureTracker # imm = 0xBD40
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB86_151
# %bb.137:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-17082, %ax            # imm = 0xBD46
	jne	.LBB86_328
# %bb.138:                              # %search_root.split783
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	i_depth, %eax
	movw	$-17082, BasicBlockSignatureTracker # imm = 0xBD46
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jl	.LBB86_151
# %bb.139:                              # %Buffer__9
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-15573, %ax            # imm = 0xC32B
	cmpw	$32365, %ax             # imm = 0x7E6D
	jne	.LBB86_328
# %bb.140:                              # %search_root.split787
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$32365, BasicBlockSignatureTracker # imm = 0x7E6D
	movw	$-15573, RunTimeSignatureAdjuster # imm = 0xC32B
# %bb.141:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-17074, %ax            # imm = 0xBD4E
	jne	.LBB86_328
# %bb.142:                              # %search_root.split951
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$pv, %rax
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rax)
	movl	ply, %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-17074, BasicBlockSignatureTracker # imm = 0xBD4E
	movw	$0, RunTimeSignatureAdjuster
.LBB86_143:                             #   Parent Loop BB86_50 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$-17064, %ax            # imm = 0xBD58
	jne	.LBB86_327
# %bb.144:                              # %search_root.split789
                                        #   in Loop: Header=BB86_143 Depth=2
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	ply, %rcx
	movl	pv_length(,%rcx,4), %ecx
	movw	$-17064, BasicBlockSignatureTracker # imm = 0xBD58
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB86_149
# %bb.145:                              #   in Loop: Header=BB86_143 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-17052, %ax            # imm = 0xBD64
	jne	.LBB86_327
# %bb.146:                              # %search_root.split791
                                        #   in Loop: Header=BB86_143 Depth=2
	movabsq	$pv, %rax
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movq	-72(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rdx
	movslq	ply, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	(%rax), %rcx
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rax), %rax
	movq	%rax, 16(%rdx)
	movw	$-17052, BasicBlockSignatureTracker # imm = 0xBD64
	movw	$0, RunTimeSignatureAdjuster
# %bb.147:                              #   in Loop: Header=BB86_143 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-17049, %ax            # imm = 0xBD67
	jne	.LBB86_327
# %bb.148:                              # %search_root.split795
                                        #   in Loop: Header=BB86_143 Depth=2
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-17049, BasicBlockSignatureTracker # imm = 0xBD67
	movw	$41, RunTimeSignatureAdjuster
	jmp	.LBB86_143
.LBB86_149:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$33, %ax
	cmpw	$-17031, %ax            # imm = 0xBD79
	jne	.LBB86_328
# %bb.150:                              # %search_root.split793
                                        #   in Loop: Header=BB86_50 Depth=1
	movslq	ply, %rax
	movl	pv_length(,%rax,4), %eax
	movl	ply, %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movl	%eax, pv_length(,%rcx,4)
	movw	$-17031, BasicBlockSignatureTracker # imm = 0xBD79
	movw	$57, RunTimeSignatureAdjuster
.LBB86_151:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$219, %ax
	xorw	%cx, %ax
	cmpw	$-16997, %ax            # imm = 0xBD9B
	jne	.LBB86_328
# %bb.152:                              # %search_root.split785
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-16997, BasicBlockSignatureTracker # imm = 0xBD9B
	movw	$184, RunTimeSignatureAdjuster
.LBB86_153:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$139, %ax
	xorw	%cx, %ax
	cmpw	$-16984, %ax            # imm = 0xBDA8
	jne	.LBB86_328
# %bb.154:                              # %search_root.split779
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-16984, BasicBlockSignatureTracker # imm = 0xBDA8
	movw	$334, RunTimeSignatureAdjuster # imm = 0x14E
.LBB86_155:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$333, %ax               # imm = 0x14D
	xorw	%cx, %ax
	cmpw	$-16981, %ax            # imm = 0xBDAB
	jne	.LBB86_328
# %bb.156:                              # %search_root.split771
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r14), %ecx
	movw	$-16981, BasicBlockSignatureTracker # imm = 0xBDAB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB86_163
# %bb.157:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-16979, %ax            # imm = 0xBDAD
	jne	.LBB86_328
# %bb.158:                              # %search_root.split797
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	time_exit, %eax
	movw	$-16979, BasicBlockSignatureTracker # imm = 0xBDAD
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_163
# %bb.159:                              # %Buffer__10
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18486, %ax             # imm = 0x4836
	cmpw	$-2661, %ax             # imm = 0xF59B
	jne	.LBB86_328
# %bb.160:                              # %search_root.split801
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-2661, BasicBlockSignatureTracker # imm = 0xF59B
	movw	$18486, RunTimeSignatureAdjuster # imm = 0x4836
# %bb.161:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-16978, %ax            # imm = 0xBDAE
	jne	.LBB86_328
# %bb.162:                              # %search_root.split953
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edi
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rsi         # 8-byte Reload
	addq	%rax, %rsi
	movw	$-16978, BasicBlockSignatureTracker # imm = 0xBDAE
	movw	$456, RunTimeSignatureAdjuster # imm = 0x1C8
	callq	post_fh_thinking
	movw	$-16978, BasicBlockSignatureTracker # imm = 0xBDAE
	movw	$456, RunTimeSignatureAdjuster # imm = 0x1C8
	movw	$-16978, BasicBlockSignatureTracker # imm = 0xBDAE
	movw	$5, RunTimeSignatureAdjuster
.LBB86_163:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-16964, %ax            # imm = 0xBDBC
	jne	.LBB86_328
# %bb.164:                              # %search_root.split799
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-16964, BasicBlockSignatureTracker # imm = 0xBDBC
	movw	$351, RunTimeSignatureAdjuster # imm = 0x15F
.LBB86_165:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$288, %ax               # imm = 0x120
	xorw	%cx, %ax
	cmpw	$-16957, %ax            # imm = 0xBDC3
	jne	.LBB86_328
# %bb.166:                              # %search_root.split767
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	cur_score, %ecx
	movw	$-16957, BasicBlockSignatureTracker # imm = 0xBDC3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB86_173
# %bb.167:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-16956, %ax            # imm = 0xBDC4
	jne	.LBB86_328
# %bb.168:                              # %search_root.split803
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	time_exit, %eax
	movw	$-16956, BasicBlockSignatureTracker # imm = 0xBDC4
	movw	$7, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_173
# %bb.169:                              # %Buffer__11
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-23489, %ax            # imm = 0xA43F
	cmpw	$6651, %ax              # imm = 0x19FB
	jne	.LBB86_328
# %bb.170:                              # %search_root.split807
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$6651, BasicBlockSignatureTracker # imm = 0x19FB
	movw	$-23489, RunTimeSignatureAdjuster # imm = 0xA43F
# %bb.171:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$-16937, %ax            # imm = 0xBDD7
	jne	.LBB86_328
# %bb.172:                              # %search_root.split955
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	%eax, cur_score
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	movl	%eax, bestmovenum
	movslq	(%rcx), %rax
	imulq	$24, %rax, %rax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movq	(%rcx), %rax
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movq	%rax, (%rdx)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rdx)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rdx)
	movw	$-16937, BasicBlockSignatureTracker # imm = 0xBDD7
	movw	$20, RunTimeSignatureAdjuster
.LBB86_173:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-16931, %ax            # imm = 0xBDDD
	jne	.LBB86_328
# %bb.174:                              # %search_root.split805
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	time_exit, %eax
	movw	$-16931, BasicBlockSignatureTracker # imm = 0xBDDD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_185
# %bb.175:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-16924, %ax            # imm = 0xBDE4
	jne	.LBB86_328
# %bb.176:                              # %search_root.split809
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	cur_score, %eax
	movw	$-16924, BasicBlockSignatureTracker # imm = 0xBDE4
	movw	$57, RunTimeSignatureAdjuster
	cmpl	$-1000000, %eax         # imm = 0xFFF0BDC0
	jne	.LBB86_185
# %bb.177:                              # %Buffer__12
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25667, %ax            # imm = 0x9BBD
	cmpw	$9817, %ax              # imm = 0x2659
	jne	.LBB86_328
# %bb.178:                              # %search_root.split813
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$9817, BasicBlockSignatureTracker # imm = 0x2659
	movw	$-25667, RunTimeSignatureAdjuster # imm = 0x9BBD
# %bb.179:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-16909, %ax            # imm = 0xBDF3
	jne	.LBB86_328
# %bb.180:                              # %search_root.split957
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-16909, BasicBlockSignatureTracker # imm = 0xBDF3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_183
# %bb.181:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-16907, %ax            # imm = 0xBDF5
	jne	.LBB86_328
# %bb.182:                              # %search_root.split815
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	$1, time_failure
	movw	$-16907, BasicBlockSignatureTracker # imm = 0xBDF5
	movw	$6, RunTimeSignatureAdjuster
.LBB86_183:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1019, %ax              # imm = 0x3FB
	xorw	%cx, %ax
	cmpw	$-16888, %ax            # imm = 0xBE08
	jne	.LBB86_328
# %bb.184:                              # %search_root.split817
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-16888, BasicBlockSignatureTracker # imm = 0xBE08
	movw	$981, RunTimeSignatureAdjuster # imm = 0x3D5
.LBB86_185:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$978, %ax               # imm = 0x3D2
	xorw	%cx, %ax
	cmpw	$-16881, %ax            # imm = 0xBE0F
	jne	.LBB86_328
# %bb.186:                              # %search_root.split811
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$-16881, BasicBlockSignatureTracker # imm = 0xBE0F
	movw	$531, RunTimeSignatureAdjuster # imm = 0x213
.LBB86_187:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$526, %ax               # imm = 0x20E
	xorw	%cx, %ax
	cmpw	$-16878, %ax            # imm = 0xBE12
	jne	.LBB86_328
# %bb.188:                              # %search_root.split721
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-16878, BasicBlockSignatureTracker # imm = 0xBE12
	movw	$13557, RunTimeSignatureAdjuster # imm = 0x34F5
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-16878, BasicBlockSignatureTracker # imm = 0xBE12
	movw	$13557, RunTimeSignatureAdjuster # imm = 0x34F5
	movl	time_exit, %eax
	movw	$-16878, BasicBlockSignatureTracker # imm = 0xBE12
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_191
# %bb.189:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-16875, %ax            # imm = 0xBE15
	movq	-112(%rbp), %rdx        # 8-byte Reload
	jne	.LBB86_331
# %bb.190:                              # %search_root.split819
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movq	%rax, (%rdx)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rdx)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rdx)
	movw	$-16875, BasicBlockSignatureTracker # imm = 0xBE15
	movw	$1307, RunTimeSignatureAdjuster # imm = 0x51B
	jmp	.LBB86_323
.LBB86_191:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-16866, %ax            # imm = 0xBE1E
	jne	.LBB86_328
# %bb.192:                              # %search_root.split821
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-16866, BasicBlockSignatureTracker # imm = 0xBE1E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB86_269
# %bb.193:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-16860, %ax            # imm = 0xBE24
	jne	.LBB86_328
# %bb.194:                              # %search_root.split823
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-16860, BasicBlockSignatureTracker # imm = 0xBE24
	movw	$58, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_269
# %bb.195:                              # %Buffer__13
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29485, %ax             # imm = 0x732D
	cmpw	$-13047, %ax            # imm = 0xCD09
	jne	.LBB86_328
# %bb.196:                              # %search_root.split827
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-13047, BasicBlockSignatureTracker # imm = 0xCD09
	movw	$29485, RunTimeSignatureAdjuster # imm = 0x732D
# %bb.197:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-16857, %ax            # imm = 0xBE27
	jne	.LBB86_328
# %bb.198:                              # %search_root.split959
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer1, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-16857, BasicBlockSignatureTracker # imm = 0xBE27
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB86_209
# %bb.199:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-16853, %ax            # imm = 0xBE2B
	jne	.LBB86_328
# %bb.200:                              # %search_root.split829
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer1, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	4(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-16853, BasicBlockSignatureTracker # imm = 0xBE2B
	movw	$12, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB86_209
# %bb.201:                              # %Buffer__14
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8876, %ax             # imm = 0xDD54
	cmpw	$25471, %ax             # imm = 0x637F
	jne	.LBB86_328
# %bb.202:                              # %search_root.split833
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$25471, BasicBlockSignatureTracker # imm = 0x637F
	movw	$-8876, RunTimeSignatureAdjuster # imm = 0xDD54
# %bb.203:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$-16838, %ax            # imm = 0xBE3A
	jne	.LBB86_328
# %bb.204:                              # %search_root.split961
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer1, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	12(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-16838, BasicBlockSignatureTracker # imm = 0xBE3A
	movw	$29, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB86_209
# %bb.205:                              # %Buffer__15
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21228, %ax             # imm = 0x52EC
	cmpw	$-4906, %ax             # imm = 0xECD6
	jne	.LBB86_328
# %bb.206:                              # %search_root.split835
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-4906, BasicBlockSignatureTracker # imm = 0xECD6
	movw	$21228, RunTimeSignatureAdjuster # imm = 0x52EC
# %bb.207:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$120, %ax
	xorw	%cx, %ax
	cmpw	$-16830, %ax            # imm = 0xBE42
	jne	.LBB86_328
# %bb.208:                              # %search_root.split963
                                        #   in Loop: Header=BB86_50 Depth=1
	movslq	ply, %rax
	movl	killer_scores(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, killer_scores(,%rax,4)
	movw	$-16830, BasicBlockSignatureTracker # imm = 0xBE42
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_247
.LBB86_209:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$-16820, %ax            # imm = 0xBE4C
	jne	.LBB86_328
# %bb.210:                              # %search_root.split831
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer2, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-16820, BasicBlockSignatureTracker # imm = 0xBE4C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB86_225
# %bb.211:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-16818, %ax            # imm = 0xBE4E
	jne	.LBB86_328
# %bb.212:                              # %search_root.split839
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer2, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	4(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-16818, BasicBlockSignatureTracker # imm = 0xBE4E
	movw	$2, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB86_225
# %bb.213:                              # %Buffer__16
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32577, %ax             # imm = 0x7F41
	cmpw	$-16113, %ax            # imm = 0xC10F
	jne	.LBB86_328
# %bb.214:                              # %search_root.split843
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-16113, BasicBlockSignatureTracker # imm = 0xC10F
	movw	$32577, RunTimeSignatureAdjuster # imm = 0x7F41
# %bb.215:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$-16810, %ax            # imm = 0xBE56
	jne	.LBB86_328
# %bb.216:                              # %search_root.split965
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer2, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	12(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-16810, BasicBlockSignatureTracker # imm = 0xBE56
	movw	$26, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB86_225
# %bb.217:                              # %Buffer__17
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-6195, %ax             # imm = 0xE7CD
	cmpw	$22939, %ax             # imm = 0x599B
	jne	.LBB86_328
# %bb.218:                              # %search_root.split845
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$22939, BasicBlockSignatureTracker # imm = 0x599B
	movw	$-6195, RunTimeSignatureAdjuster # imm = 0xE7CD
# %bb.219:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-16806, %ax            # imm = 0xBE5A
	jne	.LBB86_328
# %bb.220:                              # %search_root.split967
                                        #   in Loop: Header=BB86_50 Depth=1
	movslq	ply, %rax
	movl	killer_scores2(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, killer_scores2(,%rax,4)
	movslq	ply, %rax
	movl	killer_scores2(,%rax,4), %eax
	movslq	ply, %rcx
	movl	killer_scores(,%rcx,4), %ecx
	movw	$-16806, BasicBlockSignatureTracker # imm = 0xBE5A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB86_223
# %bb.221:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-16805, %ax            # imm = 0xBE5B
	jne	.LBB86_328
# %bb.222:                              # %search_root.split847
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer2, %rax
	movabsq	$killer1, %rcx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	movq	%rcx, %rsi
	addq	%rdx, %rsi
	movq	(%rsi), %rdx
	movq	-152(%rbp), %rdi        # 8-byte Reload
	movq	%rdx, (%rdi)
	movq	8(%rsi), %rdx
	movq	%rdx, 8(%rdi)
	movq	16(%rsi), %rdx
	movq	%rdx, 16(%rdi)
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	movq	%rax, %rsi
	addq	%rdx, %rsi
	movq	(%rsi), %rdx
	movq	%rdx, (%rcx)
	movq	8(%rsi), %rdx
	movq	%rdx, 8(%rcx)
	movq	16(%rsi), %rdx
	movq	%rdx, 16(%rcx)
	movslq	ply, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	(%rdi), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdi), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdi), %rcx
	movq	%rcx, 16(%rax)
	movslq	ply, %rax
	movl	killer_scores(,%rax,4), %eax
	movq	-144(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movslq	ply, %rax
	movl	killer_scores2(,%rax,4), %eax
	movslq	ply, %rcx
	movl	%eax, killer_scores(,%rcx,4)
	movl	(%rdx), %eax
	movslq	ply, %rcx
	movl	%eax, killer_scores2(,%rcx,4)
	movw	$-16805, BasicBlockSignatureTracker # imm = 0xBE5B
	movw	$1, RunTimeSignatureAdjuster
.LBB86_223:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$213, %ax
	xorw	%cx, %ax
	cmpw	$-16753, %ax            # imm = 0xBE8F
	jne	.LBB86_328
# %bb.224:                              # %search_root.split849
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-16753, BasicBlockSignatureTracker # imm = 0xBE8F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_245
.LBB86_225:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$237, %ax
	xorw	%cx, %ax
	cmpw	$-16735, %ax            # imm = 0xBEA1
	jne	.LBB86_328
# %bb.226:                              # %search_root.split841
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer3, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	(%rax), %eax
	movw	$-16735, BasicBlockSignatureTracker # imm = 0xBEA1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB86_241
# %bb.227:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-16716, %ax            # imm = 0xBEB4
	jne	.LBB86_328
# %bb.228:                              # %search_root.split853
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer3, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	4(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movw	$-16716, BasicBlockSignatureTracker # imm = 0xBEB4
	movw	$21, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB86_241
# %bb.229:                              # %Buffer__18
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12667, %ax            # imm = 0xCE85
	cmpw	$28721, %ax             # imm = 0x7031
	jne	.LBB86_328
# %bb.230:                              # %search_root.split857
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$28721, BasicBlockSignatureTracker # imm = 0x7031
	movw	$-12667, RunTimeSignatureAdjuster # imm = 0xCE85
# %bb.231:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$-16696, %ax            # imm = 0xBEC8
	jne	.LBB86_328
# %bb.232:                              # %search_root.split969
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer3, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movl	12(%rdx), %ecx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movw	$-16696, BasicBlockSignatureTracker # imm = 0xBEC8
	movw	$105, RunTimeSignatureAdjuster
	cmpl	%eax, %ecx
	jne	.LBB86_241
# %bb.233:                              # %Buffer__19
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24287, %ax             # imm = 0x5EDF
	cmpw	$-8169, %ax             # imm = 0xE017
	jne	.LBB86_328
# %bb.234:                              # %search_root.split859
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-8169, BasicBlockSignatureTracker # imm = 0xE017
	movw	$24287, RunTimeSignatureAdjuster # imm = 0x5EDF
# %bb.235:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$-16675, %ax            # imm = 0xBEDD
	jne	.LBB86_328
# %bb.236:                              # %search_root.split971
                                        #   in Loop: Header=BB86_50 Depth=1
	movslq	ply, %rax
	movl	killer_scores3(,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, killer_scores3(,%rax,4)
	movslq	ply, %rax
	movl	killer_scores3(,%rax,4), %eax
	movslq	ply, %rcx
	movl	killer_scores2(,%rcx,4), %ecx
	movw	$-16675, BasicBlockSignatureTracker # imm = 0xBEDD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB86_239
# %bb.237:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-16668, %ax            # imm = 0xBEE4
	jne	.LBB86_328
# %bb.238:                              # %search_root.split861
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer3, %rax
	movabsq	$killer2, %rcx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	movq	%rcx, %rsi
	addq	%rdx, %rsi
	movq	(%rsi), %rdx
	movq	-152(%rbp), %rdi        # 8-byte Reload
	movq	%rdx, (%rdi)
	movq	8(%rsi), %rdx
	movq	%rdx, 8(%rdi)
	movq	16(%rsi), %rdx
	movq	%rdx, 16(%rdi)
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movslq	ply, %rdx
	imulq	$24, %rdx, %rdx
	movq	%rax, %rsi
	addq	%rdx, %rsi
	movq	(%rsi), %rdx
	movq	%rdx, (%rcx)
	movq	8(%rsi), %rdx
	movq	%rdx, 8(%rcx)
	movq	16(%rsi), %rdx
	movq	%rdx, 16(%rcx)
	movslq	ply, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	(%rdi), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdi), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdi), %rcx
	movq	%rcx, 16(%rax)
	movslq	ply, %rax
	movl	killer_scores2(,%rax,4), %eax
	movq	-144(%rbp), %rdx        # 8-byte Reload
	movl	%eax, (%rdx)
	movslq	ply, %rax
	movl	killer_scores3(,%rax,4), %eax
	movslq	ply, %rcx
	movl	%eax, killer_scores2(,%rcx,4)
	movl	(%rdx), %eax
	movslq	ply, %rcx
	movl	%eax, killer_scores3(,%rcx,4)
	movw	$-16668, BasicBlockSignatureTracker # imm = 0xBEE4
	movw	$57, RunTimeSignatureAdjuster
.LBB86_239:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$-16662, %ax            # imm = 0xBEEA
	jne	.LBB86_328
# %bb.240:                              # %search_root.split863
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-16662, BasicBlockSignatureTracker # imm = 0xBEEA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_243
.LBB86_241:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$79, %ax
	xorw	%cx, %ax
	cmpw	$-16658, %ax            # imm = 0xBEEE
	jne	.LBB86_328
# %bb.242:                              # %search_root.split855
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$killer3, %rax
	movslq	ply, %rcx
	movl	$1, killer_scores3(,%rcx,4)
	movslq	ply, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	movq	-56(%rbp), %rdx         # 8-byte Reload
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rax)
	movw	$-16658, BasicBlockSignatureTracker # imm = 0xBEEE
	movw	$4, RunTimeSignatureAdjuster
.LBB86_243:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$490, %ax               # imm = 0x1EA
	xorw	%cx, %ax
	cmpw	$-16640, %ax            # imm = 0xBF00
	jne	.LBB86_328
# %bb.244:                              # %search_root.split865
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-16640, BasicBlockSignatureTracker # imm = 0xBF00
	movw	$399, RunTimeSignatureAdjuster # imm = 0x18F
.LBB86_245:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$442, %ax               # imm = 0x1BA
	xorw	%cx, %ax
	cmpw	$-16587, %ax            # imm = 0xBF35
	jne	.LBB86_328
# %bb.246:                              # %search_root.split851
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-16587, BasicBlockSignatureTracker # imm = 0xBF35
	movw	$375, RunTimeSignatureAdjuster # imm = 0x177
.LBB86_247:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$270, %ax               # imm = 0x10E
	xorw	%cx, %ax
	cmpw	$-16564, %ax            # imm = 0xBF4C
	jne	.LBB86_328
# %bb.248:                              # %search_root.split837
                                        #   in Loop: Header=BB86_50 Depth=1
	movabsq	$pv, %rax
	movabsq	$history_h, %rcx
	movq	-48(%rbp), %rbx         # 8-byte Reload
	movslq	(%rbx), %rdx
	imulq	$24, %rdx, %rdx
	movq	-56(%rbp), %r8          # 8-byte Reload
	movq	%r8, %rsi
	addq	%rdx, %rsi
	movslq	(%rsi), %rdx
	imulq	$576, %rdx, %rdx        # imm = 0x240
	addq	%rdx, %rcx
	movslq	(%rbx), %rdx
	imulq	$24, %rdx, %rdx
	movq	%r8, %rsi
	addq	%rdx, %rsi
	movslq	4(%rsi), %rdx
	movl	(%rcx,%rdx,4), %esi
	addl	$1, %esi
	movl	%esi, (%rcx,%rdx,4)
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movq	-80(%rbp), %rdi         # 8-byte Reload
	movl	%ecx, (%rdi)
	movslq	(%rbx), %rcx
	imulq	$24, %rcx, %rcx
	movq	%r8, %rdx
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	-88(%rbp), %rsi         # 8-byte Reload
	movq	%rcx, (%rsi)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rsi)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rsi)
	movl	(%rbx), %ecx
	movl	%ecx, bestmovenum
	movl	(%rdi), %ecx
	movl	%ecx, cur_score
	movslq	ply, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movslq	ply, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movslq	(%rbx), %rcx
	imulq	$24, %rcx, %rcx
	movq	%r8, %rdx
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rax)
	movl	ply, %eax
	addl	$1, %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-16564, BasicBlockSignatureTracker # imm = 0xBF4C
	movw	$0, RunTimeSignatureAdjuster
.LBB86_249:                             #   Parent Loop BB86_50 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-16563, %ax            # imm = 0xBF4D
	jne	.LBB86_325
# %bb.250:                              # %search_root.split867
                                        #   in Loop: Header=BB86_249 Depth=2
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	ply, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movl	pv_length(,%rcx,4), %ecx
	movw	$-16563, BasicBlockSignatureTracker # imm = 0xBF4D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB86_255
# %bb.251:                              #   in Loop: Header=BB86_249 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-16553, %ax            # imm = 0xBF57
	jne	.LBB86_325
# %bb.252:                              # %search_root.split869
                                        #   in Loop: Header=BB86_249 Depth=2
	movabsq	$pv, %rax
	movslq	ply, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movq	-72(%rbp), %rsi         # 8-byte Reload
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rdx
	movl	ply, %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	(%rax), %rcx
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rax), %rax
	movq	%rax, 16(%rdx)
	movw	$-16553, BasicBlockSignatureTracker # imm = 0xBF57
	movw	$0, RunTimeSignatureAdjuster
# %bb.253:                              #   in Loop: Header=BB86_249 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-16550, %ax            # imm = 0xBF5A
	jne	.LBB86_325
# %bb.254:                              # %search_root.split873
                                        #   in Loop: Header=BB86_249 Depth=2
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-16550, BasicBlockSignatureTracker # imm = 0xBF5A
	movw	$22, RunTimeSignatureAdjuster
	jmp	.LBB86_249
.LBB86_255:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-16522, %ax            # imm = 0xBF76
	jne	.LBB86_328
# %bb.256:                              # %search_root.split871
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	ply, %eax
	addl	$1, %eax
	cltq
	movl	pv_length(,%rax,4), %eax
	movslq	ply, %rcx
	movl	%eax, pv_length(,%rcx,4)
	movl	cur_score, %eax
	movl	(%r14), %ecx
	movw	$-16522, BasicBlockSignatureTracker # imm = 0xBF76
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB86_259
# %bb.257:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$243, %ax
	cmpw	$-16507, %ax            # imm = 0xBF85
	movq	-112(%rbp), %rdx        # 8-byte Reload
	jne	.LBB86_331
# %bb.258:                              # %search_root.split875
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movq	%rax, (%rdx)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rdx)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rdx)
	movw	$-16507, BasicBlockSignatureTracker # imm = 0xBF85
	movw	$1163, RunTimeSignatureAdjuster # imm = 0x48B
	jmp	.LBB86_323
.LBB86_259:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$227, %ax
	cmpw	$-16491, %ax            # imm = 0xBF95
	jne	.LBB86_328
# %bb.260:                              # %search_root.split877
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	post, %eax
	movw	$-16491, BasicBlockSignatureTracker # imm = 0xBF95
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_267
# %bb.261:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-16489, %ax            # imm = 0xBF97
	jne	.LBB86_328
# %bb.262:                              # %search_root.split879
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	i_depth, %eax
	movw	$-16489, BasicBlockSignatureTracker # imm = 0xBF97
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jl	.LBB86_267
# %bb.263:                              # %Buffer__20
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9092, %ax             # imm = 0xDC7C
	cmpw	$25579, %ax             # imm = 0x63EB
	jne	.LBB86_328
# %bb.264:                              # %search_root.split883
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$25579, BasicBlockSignatureTracker # imm = 0x63EB
	movw	$-9092, RunTimeSignatureAdjuster # imm = 0xDC7C
# %bb.265:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$-16469, %ax            # imm = 0xBFAB
	jne	.LBB86_328
# %bb.266:                              # %search_root.split973
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %edi
	movw	$-16469, BasicBlockSignatureTracker # imm = 0xBFAB
	movw	$876, RunTimeSignatureAdjuster # imm = 0x36C
	callq	post_thinking
	movw	$-16469, BasicBlockSignatureTracker # imm = 0xBFAB
	movw	$876, RunTimeSignatureAdjuster # imm = 0x36C
	movw	$-16469, BasicBlockSignatureTracker # imm = 0xBFAB
	movw	$62, RunTimeSignatureAdjuster
.LBB86_267:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$-16468, %ax            # imm = 0xBFAC
	jne	.LBB86_328
# %bb.268:                              # %search_root.split881
                                        #   in Loop: Header=BB86_50 Depth=1
	movw	$-16468, BasicBlockSignatureTracker # imm = 0xBFAC
	movw	$434, RunTimeSignatureAdjuster # imm = 0x1B2
.LBB86_269:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$477, %ax               # imm = 0x1DD
	xorw	%cx, %ax
	cmpw	$-16445, %ax            # imm = 0xBFC3
	jne	.LBB86_328
# %bb.270:                              # %search_root.split825
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-16445, BasicBlockSignatureTracker # imm = 0xBFC3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_273
# %bb.271:                              #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-16440, %ax            # imm = 0xBFC8
	jne	.LBB86_328
# %bb.272:                              # %search_root.split885
                                        #   in Loop: Header=BB86_50 Depth=1
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-16440, BasicBlockSignatureTracker # imm = 0xBFC8
	movw	$11, RunTimeSignatureAdjuster
.LBB86_273:                             #   in Loop: Header=BB86_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$-16439, %ax            # imm = 0xBFC9
	jne	.LBB86_328
# %bb.274:                              # %search_root.split887
                                        #   in Loop: Header=BB86_50 Depth=1
	movl	nodes, %eax
	movq	-168(%rbp), %rcx        # 8-byte Reload
	subl	(%rcx), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movl	%eax, rootnodecount(,%rcx,4)
	movw	$-16439, BasicBlockSignatureTracker # imm = 0xBFC9
	movw	$1065, RunTimeSignatureAdjuster # imm = 0x429
	jmp	.LBB86_66
.LBB86_275:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1070, %ax              # imm = 0x42E
	cmpw	$-16436, %ax            # imm = 0xBFCC
	jne	.LBB86_331
# %bb.276:                              # %search_root.split705
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-16436, BasicBlockSignatureTracker # imm = 0xBFCC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_311
# %bb.277:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-16426, %ax            # imm = 0xBFD6
	jne	.LBB86_331
# %bb.278:                              # %search_root.split889
	movl	is_pondering, %eax
	movw	$-16426, BasicBlockSignatureTracker # imm = 0xBFD6
	movw	$26, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_311
# %bb.279:                              # %Buffer__21
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4924, %ax              # imm = 0x133C
	cmpw	$-21270, %ax            # imm = 0xACEA
	jne	.LBB86_331
# %bb.280:                              # %search_root.split893
	movw	$-21270, BasicBlockSignatureTracker # imm = 0xACEA
	movw	$4924, RunTimeSignatureAdjuster # imm = 0x133C
# %bb.281:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-16423, %ax            # imm = 0xBFD9
	jne	.LBB86_331
# %bb.282:                              # %search_root.split975
	movl	Variant, %eax
	movw	$-16423, BasicBlockSignatureTracker # imm = 0xBFD9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB86_301
# %bb.283:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-16421, %ax            # imm = 0xBFDB
	jne	.LBB86_331
# %bb.284:                              # %search_root.split895
	movl	Variant, %eax
	movw	$-16421, BasicBlockSignatureTracker # imm = 0xBFDB
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB86_301
# %bb.285:                              # %Buffer__22
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11437, %ax             # imm = 0x2CAD
	cmpw	$-27786, %ax            # imm = 0x9376
	jne	.LBB86_331
# %bb.286:                              # %search_root.split899
	movw	$-27786, BasicBlockSignatureTracker # imm = 0x9376
	movw	$11437, RunTimeSignatureAdjuster # imm = 0x2CAD
# %bb.287:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$52, %ax
	xorw	%cx, %ax
	cmpw	$-16401, %ax            # imm = 0xBFEF
	jne	.LBB86_331
# %bb.288:                              # %search_root.split977
	movw	$-16401, BasicBlockSignatureTracker # imm = 0xBFEF
	movw	$13664, RunTimeSignatureAdjuster # imm = 0x3560
	callq	in_check
	movw	$-16401, BasicBlockSignatureTracker # imm = 0xBFEF
	movw	$13664, RunTimeSignatureAdjuster # imm = 0x3560
	movw	$-16401, BasicBlockSignatureTracker # imm = 0xBFEF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB86_297
# %bb.289:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-16393, %ax            # imm = 0xBFF7
	jne	.LBB86_331
# %bb.290:                              # %search_root.split901
	movl	white_to_move, %eax
	movw	$-16393, BasicBlockSignatureTracker # imm = 0xBFF7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB86_293
# %bb.291:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32755, %ax             # imm = 0x7FF3
	cmpw	$-16380, %ax            # imm = 0xC004
	jne	.LBB86_331
# %bb.292:                              # %search_root.split905
	movl	$2, result
	movw	$-16380, BasicBlockSignatureTracker # imm = 0xC004
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_295
.LBB86_293:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32743, %ax             # imm = 0x7FE7
	cmpw	$-16368, %ax            # imm = 0xC010
	jne	.LBB86_331
# %bb.294:                              # %search_root.split907
	movl	$3, result
	movw	$-16368, BasicBlockSignatureTracker # imm = 0xC010
	movw	$20, RunTimeSignatureAdjuster
.LBB86_295:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$-16361, %ax            # imm = 0xC017
	jne	.LBB86_331
# %bb.296:                              # %search_root.split909
	movw	$-16361, BasicBlockSignatureTracker # imm = 0xC017
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_299
.LBB86_297:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32716, %ax             # imm = 0x7FCC
	cmpw	$-16349, %ax            # imm = 0xC023
	jne	.LBB86_331
# %bb.298:                              # %search_root.split903
	movl	$1, result
	movw	$-16349, BasicBlockSignatureTracker # imm = 0xC023
	movw	$52, RunTimeSignatureAdjuster
.LBB86_299:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$-16332, %ax            # imm = 0xC034
	jne	.LBB86_331
# %bb.300:                              # %search_root.split911
	movw	$-16332, BasicBlockSignatureTracker # imm = 0xC034
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_309
.LBB86_301:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32669, %ax             # imm = 0x7F9D
	xorw	%cx, %ax
	cmpw	$-16316, %ax            # imm = 0xC044
	jne	.LBB86_331
# %bb.302:                              # %search_root.split897
	movl	white_to_move, %eax
	movw	$-16316, BasicBlockSignatureTracker # imm = 0xC044
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB86_305
# %bb.303:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-16315, %ax            # imm = 0xC045
	jne	.LBB86_331
# %bb.304:                              # %search_root.split915
	movl	$3, result
	movw	$-16315, BasicBlockSignatureTracker # imm = 0xC045
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_307
.LBB86_305:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-16301, %ax            # imm = 0xC053
	jne	.LBB86_331
# %bb.306:                              # %search_root.split917
	movl	$2, result
	movw	$-16301, BasicBlockSignatureTracker # imm = 0xC053
	movw	$22, RunTimeSignatureAdjuster
.LBB86_307:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$-16291, %ax            # imm = 0xC05D
	jne	.LBB86_331
# %bb.308:                              # %search_root.split919
	movw	$-16291, BasicBlockSignatureTracker # imm = 0xC05D
	movw	$105, RunTimeSignatureAdjuster
.LBB86_309:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$94, %ax
	xorw	%cx, %ax
	cmpw	$-16278, %ax            # imm = 0xC06A
	jne	.LBB86_331
# %bb.310:                              # %search_root.split913
	movw	$-16278, BasicBlockSignatureTracker # imm = 0xC06A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB86_321
.LBB86_311:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32672, %ax             # imm = 0x7FA0
	xorw	%cx, %ax
	cmpw	$-16276, %ax            # imm = 0xC06C
	jne	.LBB86_331
# %bb.312:                              # %search_root.split891
	movl	is_pondering, %eax
	movw	$-16276, BasicBlockSignatureTracker # imm = 0xC06C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB86_319
# %bb.313:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-16257, %ax            # imm = 0xC07F
	jne	.LBB86_331
# %bb.314:                              # %search_root.split925
	movl	fifty, %eax
	movw	$-16257, BasicBlockSignatureTracker # imm = 0xC07F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$100, %eax
	jle	.LBB86_317
# %bb.315:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$227, %ax
	cmpw	$-16228, %ax            # imm = 0xC09C
	movq	-112(%rbp), %rdx        # 8-byte Reload
	jne	.LBB86_331
# %bb.316:                              # %search_root.split927
	movl	$4, result
	movl	$0, cur_score
	movslq	ply, %rax
	movl	$0, pv_length(,%rax,4)
	movq	dummy, %rax
	movq	%rax, (%rdx)
	movq	dummy+8, %rax
	movq	%rax, 8(%rdx)
	movq	dummy+16, %rax
	movq	%rax, 16(%rdx)
	movw	$-16228, BasicBlockSignatureTracker # imm = 0xC09C
	movw	$31634, RunTimeSignatureAdjuster # imm = 0x7B92
	jmp	.LBB86_323
.LBB86_317:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$217, %ax
	cmpw	$-16218, %ax            # imm = 0xC0A6
	jne	.LBB86_331
# %bb.318:                              # %search_root.split929
	movw	$-16218, BasicBlockSignatureTracker # imm = 0xC0A6
	movw	$202, RunTimeSignatureAdjuster
.LBB86_319:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$195, %ax
	xorw	%cx, %ax
	cmpw	$-16209, %ax            # imm = 0xC0AF
	jne	.LBB86_331
# %bb.320:                              # %search_root.split923
	movw	$-16209, BasicBlockSignatureTracker # imm = 0xC0AF
	movw	$197, RunTimeSignatureAdjuster
.LBB86_321:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$174, %ax
	xorw	%cx, %ax
	cmpw	$-16188, %ax            # imm = 0xC0C4
	movq	-112(%rbp), %rdx        # 8-byte Reload
	jne	.LBB86_331
# %bb.322:                              # %search_root.split921
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movq	%rax, (%rdx)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rdx)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rdx)
	movw	$-16188, BasicBlockSignatureTracker # imm = 0xC0C4
	movw	$31690, RunTimeSignatureAdjuster # imm = 0x7BCA
.LBB86_323:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31725, %ax             # imm = 0x7BED
	xorw	%cx, %ax
	cmpw	$-16157, %ax            # imm = 0xC0E3
	jne	.LBB86_331
# %bb.324:                              # %search_root.split657
	movw	$-16157, BasicBlockSignatureTracker # imm = 0xC0E3
	movw	$1226, RunTimeSignatureAdjuster # imm = 0x4CA
	movq	%rdx, %rax
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB86_325:                             # %CFerrorHandler.search_root.loopexit
	jmp	.LBB86_331
.LBB86_326:                             # %CFerrorHandler.search_root.loopexit1
	jmp	.LBB86_331
.LBB86_327:                             # %CFerrorHandler.search_root.loopexit2
	jmp	.LBB86_331
.LBB86_328:                             # %CFerrorHandler.search_root.loopexit3
	jmp	.LBB86_331
.LBB86_329:                             # %CFerrorHandler.search_root.loopexit4
	jmp	.LBB86_331
.LBB86_330:                             # %CFerrorHandler.search_root.loopexit5
	jmp	.LBB86_331
.LBB86_331:                             # %CFerrorHandler.search_root
	callq	FAULT_DETECTED_CFC
.Lfunc_end86:
	.size	search_root, .Lfunc_end86-search_root
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function think
.LCPI87_0:
	.quad	4607182418800017408     # double 1
.LCPI87_2:
	.quad	4613937818241073152     # double 3
.LCPI87_3:
	.quad	4611911198408756429     # double 2.1000000000000001
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI87_1:
	.long	1073741824              # float 2
	.text
	.globl	think
	.p2align	4, 0x90
	.type	think,@function
think:                                  # @think
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$168, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rdi, %rbx
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-11241, %ax            # imm = 0xD417
	xorw	%cx, %ax
	cmpw	$-16145, %ax            # imm = 0xC0EF
	jne	.LBB87_584
# %bb.1:                                # %think.split1636
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-11241, %ax            # imm = 0xD417
	xorw	%cx, %ax
	cmpw	$-16145, %ax            # imm = 0xC0EF
	jne	.LBB87_584
# %bb.2:                                # %think.split1634
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-11241, %ax            # imm = 0xD417
	xorw	%cx, %ax
	cmpw	$-16145, %ax            # imm = 0xC0EF
	jne	.LBB87_584
# %bb.3:                                # %think.split1632
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-11241, %ax            # imm = 0xD417
	xorw	%cx, %ax
	cmpw	$-16145, %ax            # imm = 0xC0EF
	jne	.LBB87_584
# %bb.4:                                # %think.split1160
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-11241, %ax            # imm = 0xD417
	xorw	%cx, %ax
	cmpw	$-16145, %ax            # imm = 0xC0EF
	jne	.LBB87_584
# %bb.5:                                # %think.split
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -200(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -112(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -184(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -192(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -136(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-12288, %rax           # imm = 0xD000
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -176(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -168(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -160(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -152(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -144(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movl	$0, (%r13)
	movl	$0, (%r12)
	movl	$0, (%r15)
	movl	$0, userealholdings
	movl	$0, (%r14)
	movw	$-16145, BasicBlockSignatureTracker # imm = 0xC0EF
	movw	$0, RunTimeSignatureAdjuster
.LBB87_6:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB87_25 Depth 2
                                        #     Child Loop BB87_43 Depth 2
                                        #     Child Loop BB87_161 Depth 2
                                        #       Child Loop BB87_165 Depth 3
                                        #     Child Loop BB87_177 Depth 2
                                        #     Child Loop BB87_185 Depth 2
                                        #       Child Loop BB87_283 Depth 3
                                        #     Child Loop BB87_322 Depth 2
                                        #     Child Loop BB87_343 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$-16141, %ax            # imm = 0xC0F3
	jne	.LBB87_583
# %bb.7:                                # %think.split1162
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$0, nodes
	movl	$0, qnodes
	movl	$1, ply
	movl	$0, ECacheProbes
	movl	$0, ECacheHits
	movl	$0, TTProbes
	movl	$0, TTHits
	movl	$0, TTStores
	movl	$0, NCuts
	movl	$0, NTries
	movl	$0, TExt
	movl	$0, FH
	movl	$0, FHF
	movl	$0, PVS
	movl	$0, FULL
	movl	$0, PVSF
	movl	$0, ext_check
	movl	$0, ext_recap
	movl	$0, ext_onerep
	movl	$0, razor_drop
	movl	$0, razor_material
	movl	$0, drop_cuts
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movl	$0, extendedtime
	movl	$0, forcedwin
	movl	$200, maxposdiff
	movb	$0, true_i_depth
	movl	$-1, bestmovenum
	movw	$-16141, BasicBlockSignatureTracker # imm = 0xC0F3
	movw	$-11219, RunTimeSignatureAdjuster # imm = 0xD42D
	callq	interrupt
	movw	$-16141, BasicBlockSignatureTracker # imm = 0xC0F3
	movw	$-11219, RunTimeSignatureAdjuster # imm = 0xD42D
	movw	$-16141, BasicBlockSignatureTracker # imm = 0xC0F3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_17
# %bb.8:                                #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$510, %ax               # imm = 0x1FE
	cmpw	$-16115, %ax            # imm = 0xC10D
	jne	.LBB87_583
# %bb.9:                                # %think.split1164
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_analyzing, %eax
	movw	$-16115, BasicBlockSignatureTracker # imm = 0xC10D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_14
# %bb.10:                               #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$47, %ax
	cmpw	$-16094, %ax            # imm = 0xC122
	jne	.LBB87_583
# %bb.11:                               # %think.split1170
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_pondering, %eax
	movw	$-16094, BasicBlockSignatureTracker # imm = 0xC122
	movw	$465, RunTimeSignatureAdjuster # imm = 0x1D1
	cmpl	$0, %eax
	je	.LBB87_17
# %bb.12:                               # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5903, %ax              # imm = 0x170F
	cmpw	$-10707, %ax            # imm = 0xD62D
	jne	.LBB87_584
# %bb.13:                               # %think.split1172
	movw	$-10707, BasicBlockSignatureTracker # imm = 0xD62D
	movw	$5920, RunTimeSignatureAdjuster # imm = 0x1720
	jmp	.LBB87_15
.LBB87_14:                              # %.loopexit11
	jmp	.LBB87_15
.LBB87_15:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-16089, %ax            # imm = 0xC127
	jne	.LBB87_584
# %bb.16:                               # %think.split1168
	movq	dummy, %rax
	movq	%rax, (%rbx)
	movq	dummy+8, %rax
	movq	%rax, 8(%rbx)
	movq	dummy+16, %rax
	movq	%rax, 16(%rbx)
	movw	$-16089, BasicBlockSignatureTracker # imm = 0xC127
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_572
.LBB87_17:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$459, %ax               # imm = 0x1CB
	xorw	%cx, %ax
	cmpw	$-16072, %ax            # imm = 0xC138
	jne	.LBB87_583
# %bb.18:                               # %think.split1166
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-16072, BasicBlockSignatureTracker # imm = 0xC138
	movw	$-11144, RunTimeSignatureAdjuster # imm = 0xD478
	callq	rtime
	movw	$-16072, BasicBlockSignatureTracker # imm = 0xC138
	movw	$-11144, RunTimeSignatureAdjuster # imm = 0xD478
	movq	%rax, start_time
	movl	$0, legals
	movl	Variant, %eax
	movw	$-16072, BasicBlockSignatureTracker # imm = 0xC138
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB87_21
# %bb.19:                               #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-16068, %ax            # imm = 0xC13C
	jne	.LBB87_583
# %bb.20:                               # %think.split1176
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$1, captures
	movw	$-16068, BasicBlockSignatureTracker # imm = 0xC13C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_23
.LBB87_21:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$124, %ax
	cmpw	$-16060, %ax            # imm = 0xC144
	jne	.LBB87_583
# %bb.22:                               # %think.split1178
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$0, captures
	movw	$-16060, BasicBlockSignatureTracker # imm = 0xC144
	movw	$120, RunTimeSignatureAdjuster
.LBB87_23:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$102, %ax
	xorw	%cx, %ax
	cmpw	$-16038, %ax            # imm = 0xC15A
	jne	.LBB87_583
# %bb.24:                               # %think.split1180
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-16038, BasicBlockSignatureTracker # imm = 0xC15A
	movw	$19402, RunTimeSignatureAdjuster # imm = 0x4BCA
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-16038, BasicBlockSignatureTracker # imm = 0xC15A
	movw	$19402, RunTimeSignatureAdjuster # imm = 0x4BCA
	movl	numb_moves, %eax
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-16038, BasicBlockSignatureTracker # imm = 0xC15A
	movw	$19413, RunTimeSignatureAdjuster # imm = 0x4BD5
	callq	in_check
	movw	$-16038, BasicBlockSignatureTracker # imm = 0xC15A
	movw	$19413, RunTimeSignatureAdjuster # imm = 0x4BD5
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-16038, BasicBlockSignatureTracker # imm = 0xC15A
	movw	$0, RunTimeSignatureAdjuster
.LBB87_25:                              #   Parent Loop BB87_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$36, %ax
	xorw	%cx, %ax
	cmpw	$-16002, %ax            # imm = 0xC17E
	jne	.LBB87_582
# %bb.26:                               # %think.split1182
                                        #   in Loop: Header=BB87_25 Depth=2
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	numb_moves, %ecx
	movw	$-16002, BasicBlockSignatureTracker # imm = 0xC17E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB87_35
# %bb.27:                               #   in Loop: Header=BB87_25 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-16001, %ax            # imm = 0xC17F
	jne	.LBB87_582
# %bb.28:                               # %think.split1184
                                        #   in Loop: Header=BB87_25 Depth=2
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-16001, BasicBlockSignatureTracker # imm = 0xC17F
	movw	$19407, RunTimeSignatureAdjuster # imm = 0x4BCF
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	make
	movw	$-16001, BasicBlockSignatureTracker # imm = 0xC17F
	movw	$19407, RunTimeSignatureAdjuster # imm = 0x4BCF
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	movw	$-16001, BasicBlockSignatureTracker # imm = 0xC17F
	movw	$19407, RunTimeSignatureAdjuster # imm = 0x4BCF
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	check_legal
	movw	$-16001, BasicBlockSignatureTracker # imm = 0xC17F
	movw	$19407, RunTimeSignatureAdjuster # imm = 0x4BCF
	movw	$-16001, BasicBlockSignatureTracker # imm = 0xC17F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_31
# %bb.29:                               #   in Loop: Header=BB87_25 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$228, %ax
	cmpw	$-15973, %ax            # imm = 0xC19B
	jne	.LBB87_582
# %bb.30:                               # %think.split1188
                                        #   in Loop: Header=BB87_25 Depth=2
	movl	legals, %eax
	addl	$1, %eax
	movl	%eax, legals
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	%eax, (%r15)
	movw	$-15973, BasicBlockSignatureTracker # imm = 0xC19B
	movw	$228, RunTimeSignatureAdjuster
.LBB87_31:                              #   in Loop: Header=BB87_25 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$218, %ax
	xorw	%cx, %ax
	cmpw	$-15963, %ax            # imm = 0xC1A5
	jne	.LBB87_582
# %bb.32:                               # %think.split1190
                                        #   in Loop: Header=BB87_25 Depth=2
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-15963, BasicBlockSignatureTracker # imm = 0xC1A5
	movw	$19266, RunTimeSignatureAdjuster # imm = 0x4B42
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-15963, BasicBlockSignatureTracker # imm = 0xC1A5
	movw	$19266, RunTimeSignatureAdjuster # imm = 0x4B42
	movw	$-15963, BasicBlockSignatureTracker # imm = 0xC1A5
	movw	$0, RunTimeSignatureAdjuster
# %bb.33:                               #   in Loop: Header=BB87_25 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-15948, %ax            # imm = 0xC1B4
	jne	.LBB87_582
# %bb.34:                               # %think.split1192
                                        #   in Loop: Header=BB87_25 Depth=2
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-15948, BasicBlockSignatureTracker # imm = 0xC1B4
	movw	$238, RunTimeSignatureAdjuster
	jmp	.LBB87_25
.LBB87_35:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$193, %ax
	cmpw	$-15937, %ax            # imm = 0xC1BF
	jne	.LBB87_583
# %bb.36:                               # %think.split1186
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	Variant, %eax
	movw	$-15937, BasicBlockSignatureTracker # imm = 0xC1BF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB87_55
# %bb.37:                               #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$-15935, %ax            # imm = 0xC1C1
	jne	.LBB87_583
# %bb.38:                               # %think.split1194
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	legals, %eax
	movw	$-15935, BasicBlockSignatureTracker # imm = 0xC1C1
	movw	$126, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_55
# %bb.39:                               # %Buffer__1
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29066, %ax             # imm = 0x718A
	cmpw	$-20405, %ax            # imm = 0xB04B
	jne	.LBB87_583
# %bb.40:                               # %think.split1198
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-20405, BasicBlockSignatureTracker # imm = 0xB04B
	movw	$29066, RunTimeSignatureAdjuster # imm = 0x718A
# %bb.41:                               #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-15931, %ax            # imm = 0xC1C5
	jne	.LBB87_583
# %bb.42:                               # %think.split1638
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$0, captures
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movw	$-15931, BasicBlockSignatureTracker # imm = 0xC1C5
	movw	$19285, RunTimeSignatureAdjuster # imm = 0x4B55
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-15931, BasicBlockSignatureTracker # imm = 0xC1C5
	movw	$19285, RunTimeSignatureAdjuster # imm = 0x4B55
	movl	numb_moves, %eax
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-15931, BasicBlockSignatureTracker # imm = 0xC1C5
	movw	$0, RunTimeSignatureAdjuster
.LBB87_43:                              #   Parent Loop BB87_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$46, %ax
	xorw	%cx, %ax
	cmpw	$-15893, %ax            # imm = 0xC1EB
	jne	.LBB87_581
# %bb.44:                               # %think.split1200
                                        #   in Loop: Header=BB87_43 Depth=2
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	numb_moves, %ecx
	movw	$-15893, BasicBlockSignatureTracker # imm = 0xC1EB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB87_53
# %bb.45:                               #   in Loop: Header=BB87_43 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-15881, %ax            # imm = 0xC1F7
	jne	.LBB87_581
# %bb.46:                               # %think.split1202
                                        #   in Loop: Header=BB87_43 Depth=2
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-15881, BasicBlockSignatureTracker # imm = 0xC1F7
	movw	$19271, RunTimeSignatureAdjuster # imm = 0x4B47
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	make
	movw	$-15881, BasicBlockSignatureTracker # imm = 0xC1F7
	movw	$19271, RunTimeSignatureAdjuster # imm = 0x4B47
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %edx
	movw	$-15881, BasicBlockSignatureTracker # imm = 0xC1F7
	movw	$19271, RunTimeSignatureAdjuster # imm = 0x4B47
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	check_legal
	movw	$-15881, BasicBlockSignatureTracker # imm = 0xC1F7
	movw	$19271, RunTimeSignatureAdjuster # imm = 0x4B47
	movw	$-15881, BasicBlockSignatureTracker # imm = 0xC1F7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_49
# %bb.47:                               #   in Loop: Header=BB87_43 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-15875, %ax            # imm = 0xC1FD
	jne	.LBB87_581
# %bb.48:                               # %think.split1206
                                        #   in Loop: Header=BB87_43 Depth=2
	movl	legals, %eax
	addl	$1, %eax
	movl	%eax, legals
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	%eax, (%r15)
	movw	$-15875, BasicBlockSignatureTracker # imm = 0xC1FD
	movw	$10, RunTimeSignatureAdjuster
.LBB87_49:                              #   in Loop: Header=BB87_43 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-15873, %ax            # imm = 0xC1FF
	jne	.LBB87_581
# %bb.50:                               # %think.split1208
                                        #   in Loop: Header=BB87_43 Depth=2
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-15873, BasicBlockSignatureTracker # imm = 0xC1FF
	movw	$19224, RunTimeSignatureAdjuster # imm = 0x4B18
	movq	-72(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-15873, BasicBlockSignatureTracker # imm = 0xC1FF
	movw	$19224, RunTimeSignatureAdjuster # imm = 0x4B18
	movw	$-15873, BasicBlockSignatureTracker # imm = 0xC1FF
	movw	$0, RunTimeSignatureAdjuster
# %bb.51:                               #   in Loop: Header=BB87_43 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1022, %ax              # imm = 0x3FE
	cmpw	$-15871, %ax            # imm = 0xC201
	jne	.LBB87_581
# %bb.52:                               # %think.split1210
                                        #   in Loop: Header=BB87_43 Depth=2
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-15871, BasicBlockSignatureTracker # imm = 0xC201
	movw	$964, RunTimeSignatureAdjuster # imm = 0x3C4
	jmp	.LBB87_43
.LBB87_53:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1000, %ax              # imm = 0x3E8
	cmpw	$-15869, %ax            # imm = 0xC203
	jne	.LBB87_583
# %bb.54:                               # %think.split1204
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15869, BasicBlockSignatureTracker # imm = 0xC203
	movw	$956, RunTimeSignatureAdjuster # imm = 0x3BC
.LBB87_55:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$952, %ax               # imm = 0x3B8
	xorw	%cx, %ax
	cmpw	$-15865, %ax            # imm = 0xC207
	jne	.LBB87_583
# %bb.56:                               # %think.split1196
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	Variant, %eax
	movw	$-15865, BasicBlockSignatureTracker # imm = 0xC207
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB87_67
# %bb.57:                               #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-15844, %ax            # imm = 0xC21C
	jne	.LBB87_583
# %bb.58:                               # %think.split1212
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_pondering, %eax
	movw	$-15844, BasicBlockSignatureTracker # imm = 0xC21C
	movw	$27, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_67
# %bb.59:                               # %Buffer__2
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20950, %ax             # imm = 0x51D6
	cmpw	$-27702, %ax            # imm = 0x93CA
	jne	.LBB87_583
# %bb.60:                               # %think.split1216
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-27702, BasicBlockSignatureTracker # imm = 0x93CA
	movw	$20950, RunTimeSignatureAdjuster # imm = 0x51D6
# %bb.61:                               #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$48, %ax
	xorw	%cx, %ax
	cmpw	$-15828, %ax            # imm = 0xC22C
	jne	.LBB87_583
# %bb.62:                               # %think.split1640
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	legals, %eax
	movw	$-15828, BasicBlockSignatureTracker # imm = 0xC22C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB87_65
# %bb.63:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-15822, %ax            # imm = 0xC232
	jne	.LBB87_584
# %bb.64:                               # %think.split1218
	imull	$100, inc, %eax
	addl	time_cushion, %eax
	movl	%eax, time_cushion
	movslq	(%r15), %rax
	imulq	$24, %rax, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movq	(%rcx), %rax
	movq	%rax, (%rbx)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rbx)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rbx)
	movw	$-15822, BasicBlockSignatureTracker # imm = 0xC232
	movw	$789, RunTimeSignatureAdjuster # imm = 0x315
	jmp	.LBB87_572
.LBB87_65:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$-15821, %ax            # imm = 0xC233
	jne	.LBB87_583
# %bb.66:                               # %think.split1220
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15821, BasicBlockSignatureTracker # imm = 0xC233
	movw	$52, RunTimeSignatureAdjuster
.LBB87_67:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-15818, %ax            # imm = 0xC236
	jne	.LBB87_583
# %bb.68:                               # %think.split1214
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15818, BasicBlockSignatureTracker(%rip) # imm = 0xC236
	movw	$0, RunTimeSignatureAdjuster(%rip)
	callq	check_phase
	movw	$-15818, BasicBlockSignatureTracker(%rip) # imm = 0xC236
	movw	$0, RunTimeSignatureAdjuster(%rip)
	movl	phase(%rip), %eax
	movw	$-15818, BasicBlockSignatureTracker(%rip) # imm = 0xC236
	movw	$0, RunTimeSignatureAdjuster(%rip)
	testl	%eax, %eax
	je	.LBB87_71
	jmp	.LBB87_69
.LBB87_69:                              # %think.split1214
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	%eax, %ecx
	subl	$1, %ecx
	je	.LBB87_73
	jmp	.LBB87_70
.LBB87_70:                              # %think.split1214
                                        #   in Loop: Header=BB87_6 Depth=1
	subl	$2, %eax
	je	.LBB87_75
	jmp	.LBB87_77
.LBB87_71:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$-15807, %ax            # imm = 0xC241
	jne	.LBB87_583
# %bb.72:                               # %think.split1224
                                        #   in Loop: Header=BB87_6 Depth=1
	movabsq	$.L.str.1.126, %rdi
	movb	$0, %al
	callq	printf
	movw	$-15807, BasicBlockSignatureTracker # imm = 0xC241
	movw	$119, RunTimeSignatureAdjuster
	jmp	.LBB87_77
.LBB87_73:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$-15805, %ax            # imm = 0xC243
	jne	.LBB87_583
# %bb.74:                               # %think.split1226
                                        #   in Loop: Header=BB87_6 Depth=1
	movabsq	$.L.str.2.127, %rdi
	movb	$0, %al
	callq	printf
	movw	$-15805, BasicBlockSignatureTracker # imm = 0xC243
	movw	$117, RunTimeSignatureAdjuster
	jmp	.LBB87_77
.LBB87_75:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$124, %ax
	cmpw	$-15798, %ax            # imm = 0xC24A
	jne	.LBB87_583
# %bb.76:                               # %think.split1228
                                        #   in Loop: Header=BB87_6 Depth=1
	movabsq	$.L.str.3.128, %rdi
	movb	$0, %al
	callq	printf
	movw	$-15798, BasicBlockSignatureTracker # imm = 0xC24A
	movw	$124, RunTimeSignatureAdjuster
.LBB87_77:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$86, %ax
	xorw	%cx, %ax
	cmpw	$-15776, %ax            # imm = 0xC260
	jne	.LBB87_583
# %bb.78:                               # %think.split1222
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_pondering, %eax
	movw	$-15776, BasicBlockSignatureTracker # imm = 0xC260
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_99
# %bb.79:                               #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-15769, %ax            # imm = 0xC267
	jne	.LBB87_583
# %bb.80:                               # %think.split1232
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	fixed_time, %eax
	movw	$-15769, BasicBlockSignatureTracker # imm = 0xC267
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_95
# %bb.81:                               #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-15768, %ax            # imm = 0xC268
	jne	.LBB87_583
# %bb.82:                               # %think.split1236
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	go_fast, %eax
	movw	$-15768, BasicBlockSignatureTracker # imm = 0xC268
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_91
# %bb.83:                               #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-15765, %ax            # imm = 0xC26B
	jne	.LBB87_583
# %bb.84:                               # %think.split1238
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15765, BasicBlockSignatureTracker # imm = 0xC26B
	movw	$28188, RunTimeSignatureAdjuster # imm = 0x6E1C
	callq	allocate_time
	movw	$-15765, BasicBlockSignatureTracker # imm = 0xC26B
	movw	$28188, RunTimeSignatureAdjuster # imm = 0x6E1C
	movq	-192(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$-15765, BasicBlockSignatureTracker # imm = 0xC26B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$40, %eax
	jle	.LBB87_87
# %bb.85:                               #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-15748, %ax            # imm = 0xC27C
	jne	.LBB87_583
# %bb.86:                               # %think.split1242
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$40, time_for_move
	movw	$-15748, BasicBlockSignatureTracker # imm = 0xC27C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_89
.LBB87_87:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$227, %ax
	cmpw	$-15736, %ax            # imm = 0xC288
	jne	.LBB87_583
# %bb.88:                               # %think.split1244
                                        #   in Loop: Header=BB87_6 Depth=1
	movq	-192(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	%eax, time_for_move
	movw	$-15736, BasicBlockSignatureTracker # imm = 0xC288
	movw	$244, RunTimeSignatureAdjuster
.LBB87_89:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$231, %ax
	xorw	%cx, %ax
	cmpw	$-15717, %ax            # imm = 0xC29B
	jne	.LBB87_583
# %bb.90:                               # %think.split1246
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15717, BasicBlockSignatureTracker # imm = 0xC29B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_93
.LBB87_91:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$218, %ax
	cmpw	$-15694, %ax            # imm = 0xC2B2
	jne	.LBB87_583
# %bb.92:                               # %think.split1240
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15694, BasicBlockSignatureTracker # imm = 0xC2B2
	movw	$28357, RunTimeSignatureAdjuster # imm = 0x6EC5
	callq	allocate_time
	movw	$-15694, BasicBlockSignatureTracker # imm = 0xC2B2
	movw	$28357, RunTimeSignatureAdjuster # imm = 0x6EC5
	movl	%eax, time_for_move
	movw	$-15694, BasicBlockSignatureTracker # imm = 0xC2B2
	movw	$41, RunTimeSignatureAdjuster
.LBB87_93:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$-15685, %ax            # imm = 0xC2BB
	jne	.LBB87_583
# %bb.94:                               # %think.split1248
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15685, BasicBlockSignatureTracker # imm = 0xC2BB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_97
.LBB87_95:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$169, %ax
	cmpw	$-15666, %ax            # imm = 0xC2CE
	jne	.LBB87_583
# %bb.96:                               # %think.split1234
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	fixed_time, %eax
	movl	%eax, time_for_move
	movw	$-15666, BasicBlockSignatureTracker # imm = 0xC2CE
	movw	$117, RunTimeSignatureAdjuster
.LBB87_97:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$98, %ax
	xorw	%cx, %ax
	cmpw	$-15655, %ax            # imm = 0xC2D9
	jne	.LBB87_583
# %bb.98:                               # %think.split1250
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15655, BasicBlockSignatureTracker # imm = 0xC2D9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_101
.LBB87_99:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$186, %ax
	cmpw	$-15654, %ax            # imm = 0xC2DA
	jne	.LBB87_583
# %bb.100:                              # %think.split1230
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$999999, time_for_move  # imm = 0xF423F
	movw	$-15654, BasicBlockSignatureTracker # imm = 0xC2DA
	movw	$3, RunTimeSignatureAdjuster
.LBB87_101:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$-15638, %ax            # imm = 0xC2EA
	jne	.LBB87_583
# %bb.102:                              # %think.split1252
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r14), %eax
	movw	$-15638, BasicBlockSignatureTracker # imm = 0xC2EA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_105
# %bb.103:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-15635, %ax            # imm = 0xC2ED
	jne	.LBB87_583
# %bb.104:                              # %think.split1254
                                        #   in Loop: Header=BB87_6 Depth=1
	movsd	.LCPI87_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movss	.LCPI87_1(%rip), %xmm1  # xmm1 = mem[0],zero,zero,zero
	movl	time_for_move, %eax
	cvtsi2ssl	%eax, %xmm2
	mulss	%xmm1, %xmm2
	cvtss2sd	%xmm2, %xmm1
	movl	(%r14), %eax
	cvtsi2ssl	%eax, %xmm2
	cvtss2sd	%xmm2, %xmm2
	addsd	%xmm0, %xmm2
	divsd	%xmm2, %xmm1
	cvttsd2si	%xmm1, %eax
	movl	%eax, time_for_move
	movw	$-15635, BasicBlockSignatureTracker # imm = 0xC2ED
	movw	$7, RunTimeSignatureAdjuster
.LBB87_105:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-15634, %ax            # imm = 0xC2EE
	jne	.LBB87_583
# %bb.106:                              # %think.split1256
                                        #   in Loop: Header=BB87_6 Depth=1
	movabsq	$.L.str.4.129, %rdi
	movl	time_for_move, %esi
	movb	$0, %al
	callq	printf
	movl	(%r14), %eax
	movw	$-15634, BasicBlockSignatureTracker # imm = 0xC2EE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_109
# %bb.107:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$507, %ax               # imm = 0x1FB
	cmpw	$-15595, %ax            # imm = 0xC315
	jne	.LBB87_583
# %bb.108:                              # %think.split1260
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15595, BasicBlockSignatureTracker # imm = 0xC315
	movw	$-10293, RunTimeSignatureAdjuster # imm = 0xD7CB
	callq	clear_tt
	movw	$-15595, BasicBlockSignatureTracker # imm = 0xC315
	movw	$-10293, RunTimeSignatureAdjuster # imm = 0xD7CB
	movw	$-15595, BasicBlockSignatureTracker # imm = 0xC315
	movw	$-13946, RunTimeSignatureAdjuster # imm = 0xC986
	callq	reset_ecache
	movabsq	$rootlosers, %rdi
	movw	$-15595, BasicBlockSignatureTracker # imm = 0xC315
	movw	$-13946, RunTimeSignatureAdjuster # imm = 0xC986
	xorl	%esi, %esi
	movl	$1200, %edx             # imm = 0x4B0
	callq	memset
	movw	$-15595, BasicBlockSignatureTracker # imm = 0xC315
	movw	$507, RunTimeSignatureAdjuster # imm = 0x1FB
.LBB87_109:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$502, %ax               # imm = 0x1F6
	xorw	%cx, %ax
	cmpw	$-15592, %ax            # imm = 0xC318
	jne	.LBB87_583
# %bb.110:                              # %think.split1258
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r14), %eax
	movw	$-15592, BasicBlockSignatureTracker # imm = 0xC318
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_129
# %bb.111:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-15590, %ax            # imm = 0xC31A
	jne	.LBB87_583
# %bb.112:                              # %think.split1264
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_pondering, %eax
	movw	$-15590, BasicBlockSignatureTracker # imm = 0xC31A
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_129
# %bb.113:                              # %Buffer__3
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-2364, %ax             # imm = 0xF6C4
	cmpw	$13790, %ax             # imm = 0x35DE
	jne	.LBB87_583
# %bb.114:                              # %think.split1266
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$13790, BasicBlockSignatureTracker # imm = 0x35DE
	movw	$-2364, RunTimeSignatureAdjuster # imm = 0xF6C4
# %bb.115:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7, %ax
	xorw	%cx, %ax
	cmpw	$-15587, %ax            # imm = 0xC31D
	jne	.LBB87_583
# %bb.116:                              # %think.split1642
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	Variant, %eax
	movw	$-15587, BasicBlockSignatureTracker # imm = 0xC31D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB87_121
# %bb.117:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-15582, %ax            # imm = 0xC322
	jne	.LBB87_583
# %bb.118:                              # %think.split1270
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	Variant, %eax
	movw	$-15582, BasicBlockSignatureTracker # imm = 0xC322
	movw	$58, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB87_129
# %bb.119:                              # %Buffer__4
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-11214, %ax            # imm = 0xD432
	cmpw	$5904, %ax              # imm = 0x1710
	jne	.LBB87_583
# %bb.120:                              # %think.split1272
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$5904, BasicBlockSignatureTracker # imm = 0x1710
	movw	$-11251, RunTimeSignatureAdjuster # imm = 0xD40D
.LBB87_121:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$-15574, %ax            # imm = 0xC32A
	jne	.LBB87_583
# %bb.122:                              # %think.split1268
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	piece_count, %eax
	movw	$-15574, BasicBlockSignatureTracker # imm = 0xC32A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jg	.LBB87_127
# %bb.123:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-15573, %ax            # imm = 0xC32B
	jne	.LBB87_583
# %bb.124:                              # %think.split1276
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	Variant, %eax
	movw	$-15573, BasicBlockSignatureTracker # imm = 0xC32B
	movw	$51, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB87_129
# %bb.125:                              # %Buffer__5
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1427, %ax             # imm = 0xFA6D
	cmpw	$14662, %ax             # imm = 0x3946
	jne	.LBB87_583
# %bb.126:                              # %think.split1278
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$14662, BasicBlockSignatureTracker # imm = 0x3946
	movw	$-1428, RunTimeSignatureAdjuster # imm = 0xFA6C
.LBB87_127:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-15568, %ax            # imm = 0xC330
	jne	.LBB87_583
# %bb.128:                              # %think.split1274
                                        #   in Loop: Header=BB87_6 Depth=1
	movsd	.LCPI87_2(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI87_0(%rip), %xmm1  # xmm1 = mem[0],zero
	movl	time_for_move, %eax
	cvtsi2ssl	%eax, %xmm2
	cvtss2sd	%xmm2, %xmm2
	mulsd	%xmm1, %xmm2
	divsd	%xmm0, %xmm2
	cvttsd2si	%xmm2, %eax
	movl	%eax, pn_time
	movw	$-15568, BasicBlockSignatureTracker # imm = 0xC330
	movw	$15047, RunTimeSignatureAdjuster # imm = 0x3AC7
	callq	proofnumberscan
	movw	$-15568, BasicBlockSignatureTracker # imm = 0xC330
	movw	$15047, RunTimeSignatureAdjuster # imm = 0x3AC7
	movw	$-15568, BasicBlockSignatureTracker # imm = 0xC330
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_135
.LBB87_129:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$47, %ax
	xorw	%cx, %ax
	cmpw	$-15561, %ax            # imm = 0xC337
	jne	.LBB87_583
# %bb.130:                              # %think.split1262
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r14), %eax
	movw	$-15561, BasicBlockSignatureTracker # imm = 0xC337
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_133
# %bb.131:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-15558, %ax            # imm = 0xC33A
	jne	.LBB87_583
# %bb.132:                              # %think.split1284
                                        #   in Loop: Header=BB87_6 Depth=1
	movq	dummy, %rax
	movq	%rax, pn_move
	movq	dummy+8, %rax
	movq	%rax, pn_move+8
	movq	dummy+16, %rax
	movq	%rax, pn_move+16
	movw	$-15558, BasicBlockSignatureTracker # imm = 0xC33A
	movw	$13, RunTimeSignatureAdjuster
.LBB87_133:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$119, %ax
	xorw	%cx, %ax
	cmpw	$-15552, %ax            # imm = 0xC340
	jne	.LBB87_583
# %bb.134:                              # %think.split1282
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15552, BasicBlockSignatureTracker # imm = 0xC340
	movw	$112, RunTimeSignatureAdjuster
.LBB87_135:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$115, %ax
	xorw	%cx, %ax
	cmpw	$-15549, %ax            # imm = 0xC343
	jne	.LBB87_583
# %bb.136:                              # %think.split1280
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-15549, BasicBlockSignatureTracker # imm = 0xC343
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_143
# %bb.137:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-15534, %ax            # imm = 0xC352
	jne	.LBB87_583
# %bb.138:                              # %think.split1286
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	pn_move+4, %eax
	movl	dummy+4, %ecx
	movw	$-15534, BasicBlockSignatureTracker # imm = 0xC352
	movw	$17, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB87_143
# %bb.139:                              # %Buffer__6
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8047, %ax             # imm = 0xE091
	cmpw	$9155, %ax              # imm = 0x23C3
	jne	.LBB87_584
# %bb.140:                              # %think.split1290
	movw	$9155, BasicBlockSignatureTracker # imm = 0x23C3
	movw	$-8047, RunTimeSignatureAdjuster # imm = 0xE091
# %bb.141:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-15517, %ax            # imm = 0xC363
	jne	.LBB87_584
# %bb.142:                              # %think.split1644
	movq	pn_move, %rax
	movq	%rax, (%rbx)
	movq	pn_move+8, %rax
	movq	%rax, 8(%rbx)
	movq	pn_move+16, %rax
	movq	%rax, 16(%rbx)
	movw	$-15517, BasicBlockSignatureTracker # imm = 0xC363
	movw	$580, RunTimeSignatureAdjuster # imm = 0x244
	jmp	.LBB87_572
.LBB87_143:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$-15494, %ax            # imm = 0xC37A
	jne	.LBB87_583
# %bb.144:                              # %think.split1288
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	forcedwin, %eax
	movw	$-15494, BasicBlockSignatureTracker # imm = 0xC37A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_147
# %bb.145:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-15490, %ax            # imm = 0xC37E
	jne	.LBB87_583
# %bb.146:                              # %think.split1294
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-15490, BasicBlockSignatureTracker # imm = 0xC37E
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_157
.LBB87_147:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$251, %ax
	xorw	%cx, %ax
	cmpw	$-15487, %ax            # imm = 0xC381
	jne	.LBB87_583
# %bb.148:                              # %think.split1292
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	pn_move+4, %eax
	movl	dummy+4, %ecx
	movw	$-15487, BasicBlockSignatureTracker # imm = 0xC381
	movw	$255, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB87_159
# %bb.149:                              # %Buffer__8
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6419, %ax              # imm = 0x1913
	cmpw	$-9582, %ax             # imm = 0xDA92
	jne	.LBB87_583
# %bb.150:                              # %think.split1300
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-9582, BasicBlockSignatureTracker # imm = 0xDA92
	movw	$6419, RunTimeSignatureAdjuster # imm = 0x1913
# %bb.151:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-15486, %ax            # imm = 0xC382
	jne	.LBB87_583
# %bb.152:                              # %think.split1646
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_analyzing, %eax
	movw	$-15486, BasicBlockSignatureTracker # imm = 0xC382
	movw	$252, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_159
# %bb.153:                              # %Buffer__9
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$474, %ax               # imm = 0x1DA
	cmpw	$-15784, %ax            # imm = 0xC258
	jne	.LBB87_583
# %bb.154:                              # %think.split1302
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15784, BasicBlockSignatureTracker # imm = 0xC258
	movw	$474, RunTimeSignatureAdjuster # imm = 0x1DA
# %bb.155:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$39, %ax
	xorw	%cx, %ax
	cmpw	$-15451, %ax            # imm = 0xC3A5
	jne	.LBB87_583
# %bb.156:                              # %think.split1648
                                        #   in Loop: Header=BB87_6 Depth=1
	movq	pn_move, %rax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	pn_move+8, %rax
	movq	%rax, 8(%rcx)
	movq	pn_move+16, %rax
	movq	%rax, 16(%rcx)
	movw	$-15451, BasicBlockSignatureTracker # imm = 0xC3A5
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_296
.LBB87_157:                             # %Buffer__7
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8159, %ax              # imm = 0x1FDF
	cmpw	$-9055, %ax             # imm = 0xDCA1
	jne	.LBB87_583
# %bb.158:                              # %think.split1296
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-9055, BasicBlockSignatureTracker # imm = 0xDCA1
	movw	$8159, RunTimeSignatureAdjuster # imm = 0x1FDF
.LBB87_159:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$209, %ax
	xorw	%cx, %ax
	cmpw	$-15441, %ax            # imm = 0xC3AF
	jne	.LBB87_583
# %bb.160:                              # %think.split1298
                                        #   in Loop: Header=BB87_6 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-15441, BasicBlockSignatureTracker # imm = 0xC3AF
	movw	$0, RunTimeSignatureAdjuster
.LBB87_161:                             #   Parent Loop BB87_6 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB87_165 Depth 3
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$-15420, %ax            # imm = 0xC3C4
	jne	.LBB87_580
# %bb.162:                              # %think.split1306
                                        #   in Loop: Header=BB87_161 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-15420, BasicBlockSignatureTracker # imm = 0xC3C4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$300, %eax              # imm = 0x12C
	jge	.LBB87_175
# %bb.163:                              #   in Loop: Header=BB87_161 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-15411, %ax            # imm = 0xC3CD
	jne	.LBB87_580
# %bb.164:                              # %think.split1308
                                        #   in Loop: Header=BB87_161 Depth=2
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-15411, BasicBlockSignatureTracker # imm = 0xC3CD
	movw	$0, RunTimeSignatureAdjuster
.LBB87_165:                             #   Parent Loop BB87_6 Depth=1
                                        #     Parent Loop BB87_161 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$46, %ax
	xorw	%cx, %ax
	cmpw	$-15389, %ax            # imm = 0xC3E3
	jne	.LBB87_575
# %bb.166:                              # %think.split1312
                                        #   in Loop: Header=BB87_165 Depth=3
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-15389, BasicBlockSignatureTracker # imm = 0xC3E3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$300, %eax              # imm = 0x12C
	jge	.LBB87_171
# %bb.167:                              #   in Loop: Header=BB87_165 Depth=3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-15388, %ax            # imm = 0xC3E4
	jne	.LBB87_575
# %bb.168:                              # %think.split1314
                                        #   in Loop: Header=BB87_165 Depth=3
	movabsq	$pv, %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$7200, %rcx, %rcx       # imm = 0x1C20
	addq	%rcx, %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	dummy, %rcx
	movq	%rcx, (%rax)
	movq	dummy+8, %rcx
	movq	%rcx, 8(%rax)
	movq	dummy+16, %rcx
	movq	%rcx, 16(%rax)
	movw	$-15388, BasicBlockSignatureTracker # imm = 0xC3E4
	movw	$0, RunTimeSignatureAdjuster
# %bb.169:                              #   in Loop: Header=BB87_165 Depth=3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-15387, %ax            # imm = 0xC3E5
	jne	.LBB87_575
# %bb.170:                              # %think.split1318
                                        #   in Loop: Header=BB87_165 Depth=3
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-15387, BasicBlockSignatureTracker # imm = 0xC3E5
	movw	$40, RunTimeSignatureAdjuster
	jmp	.LBB87_165
.LBB87_171:                             #   in Loop: Header=BB87_161 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-15385, %ax            # imm = 0xC3E7
	jne	.LBB87_580
# %bb.172:                              # %think.split1316
                                        #   in Loop: Header=BB87_161 Depth=2
	movw	$-15385, BasicBlockSignatureTracker # imm = 0xC3E7
	movw	$0, RunTimeSignatureAdjuster
# %bb.173:                              #   in Loop: Header=BB87_161 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2021, %ax              # imm = 0x7E5
	cmpw	$-15358, %ax            # imm = 0xC402
	jne	.LBB87_580
# %bb.174:                              # %think.split1320
                                        #   in Loop: Header=BB87_161 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-15358, BasicBlockSignatureTracker # imm = 0xC402
	movw	$1965, RunTimeSignatureAdjuster # imm = 0x7AD
	jmp	.LBB87_161
.LBB87_175:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1985, %ax              # imm = 0x7C1
	cmpw	$-15355, %ax            # imm = 0xC405
	jne	.LBB87_583
# %bb.176:                              # %think.split1310
                                        #   in Loop: Header=BB87_6 Depth=1
	movabsq	$history_h, %rdi
	xorl	%esi, %esi
	movl	$82944, %edx            # imm = 0x14400
	callq	memset
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-15355, BasicBlockSignatureTracker # imm = 0xC405
	movw	$0, RunTimeSignatureAdjuster
.LBB87_177:                             #   Parent Loop BB87_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-15346, %ax            # imm = 0xC40E
	jne	.LBB87_579
# %bb.178:                              # %think.split1322
                                        #   in Loop: Header=BB87_177 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-15346, BasicBlockSignatureTracker # imm = 0xC40E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$300, %eax              # imm = 0x12C
	jge	.LBB87_183
# %bb.179:                              #   in Loop: Header=BB87_177 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-15345, %ax            # imm = 0xC40F
	jne	.LBB87_579
# %bb.180:                              # %think.split1324
                                        #   in Loop: Header=BB87_177 Depth=2
	movabsq	$killer3, %rax
	movabsq	$killer2, %rcx
	movabsq	$killer1, %rdx
	movq	-48(%rbp), %rdi         # 8-byte Reload
	movslq	(%rdi), %rsi
	movl	$0, killer_scores(,%rsi,4)
	movslq	(%rdi), %rsi
	movl	$0, killer_scores2(,%rsi,4)
	movslq	(%rdi), %rsi
	movl	$0, killer_scores3(,%rsi,4)
	movslq	(%rdi), %rsi
	imulq	$24, %rsi, %rsi
	addq	%rsi, %rdx
	movq	dummy, %rsi
	movq	%rsi, (%rdx)
	movq	dummy+8, %rsi
	movq	%rsi, 8(%rdx)
	movq	dummy+16, %rsi
	movq	%rsi, 16(%rdx)
	movslq	(%rdi), %rdx
	imulq	$24, %rdx, %rdx
	addq	%rdx, %rcx
	movq	dummy, %rdx
	movq	%rdx, (%rcx)
	movq	dummy+8, %rdx
	movq	%rdx, 8(%rcx)
	movq	dummy+16, %rdx
	movq	%rdx, 16(%rcx)
	movslq	(%rdi), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	dummy, %rcx
	movq	%rcx, (%rax)
	movq	dummy+8, %rcx
	movq	%rcx, 8(%rax)
	movq	dummy+16, %rcx
	movq	%rcx, 16(%rax)
	movw	$-15345, BasicBlockSignatureTracker # imm = 0xC40F
	movw	$0, RunTimeSignatureAdjuster
# %bb.181:                              #   in Loop: Header=BB87_177 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-15340, %ax            # imm = 0xC414
	jne	.LBB87_579
# %bb.182:                              # %think.split1328
                                        #   in Loop: Header=BB87_177 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-15340, BasicBlockSignatureTracker # imm = 0xC414
	movw	$17, RunTimeSignatureAdjuster
	jmp	.LBB87_177
.LBB87_183:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-15333, %ax            # imm = 0xC41B
	jne	.LBB87_583
# %bb.184:                              # %think.split1326
                                        #   in Loop: Header=BB87_6 Depth=1
	movabsq	$rootnodecount, %rdi
	xorl	%esi, %esi
	movl	$2048, %edx             # imm = 0x800
	callq	memset
	movl	$0, (%r12)
	movl	$0, cur_score
	movq	-200(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movl	$1, i_depth
	movw	$-15333, BasicBlockSignatureTracker # imm = 0xC41B
	movw	$0, RunTimeSignatureAdjuster
.LBB87_185:                             #   Parent Loop BB87_6 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB87_283 Depth 3
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$-15321, %ax            # imm = 0xC427
	jne	.LBB87_578
# %bb.186:                              # %think.split1330
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	i_depth, %eax
	movl	maxdepth, %ecx
	movw	$-15321, BasicBlockSignatureTracker # imm = 0xC427
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB87_293
# %bb.187:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-15319, %ax            # imm = 0xC429
	jne	.LBB87_578
# %bb.188:                              # %think.split1332
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-15319, BasicBlockSignatureTracker # imm = 0xC429
	movw	$-11927, RunTimeSignatureAdjuster # imm = 0xD169
	callq	rtime
	movw	$-15319, BasicBlockSignatureTracker # imm = 0xC429
	movw	$-11927, RunTimeSignatureAdjuster # imm = 0xD169
	movq	start_time, %rsi
	movw	$-15319, BasicBlockSignatureTracker # imm = 0xC429
	movw	$23406, RunTimeSignatureAdjuster # imm = 0x5B6E
	movq	%rax, %rdi
	callq	rdifftime
	movsd	.LCPI87_2(%rip), %xmm0  # xmm0 = mem[0],zero
	movsd	.LCPI87_3(%rip), %xmm1  # xmm1 = mem[0],zero
	movw	$-15319, BasicBlockSignatureTracker # imm = 0xC429
	movw	$23406, RunTimeSignatureAdjuster # imm = 0x5B6E
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	cvtsi2sdl	%eax, %xmm2
	movl	time_for_move, %eax
	cvtsi2sdl	%eax, %xmm3
	mulsd	%xmm1, %xmm3
	divsd	%xmm0, %xmm3
	movw	$-15319, BasicBlockSignatureTracker # imm = 0xC429
	movw	$0, RunTimeSignatureAdjuster
	ucomisd	%xmm3, %xmm2
	jbe	.LBB87_195
# %bb.189:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-15311, %ax            # imm = 0xC431
	jne	.LBB87_578
# %bb.190:                              # %think.split1336
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	i_depth, %eax
	movw	$-15311, BasicBlockSignatureTracker # imm = 0xC431
	movw	$24, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jle	.LBB87_195
# %bb.191:                              # %Buffer__10
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-101, %ax
	cmpw	$15274, %ax             # imm = 0x3BAA
	jne	.LBB87_583
# %bb.192:                              # %think.split1340
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$15274, BasicBlockSignatureTracker # imm = 0x3BAA
	movw	$-101, RunTimeSignatureAdjuster
# %bb.193:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$113, %ax
	xorw	%cx, %ax
	cmpw	$-15296, %ax            # imm = 0xC440
	jne	.LBB87_583
# %bb.194:                              # %think.split1650
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15296, BasicBlockSignatureTracker # imm = 0xC440
	movw	$103, RunTimeSignatureAdjuster
	jmp	.LBB87_294
.LBB87_195:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$77, %ax
	xorw	%cx, %ax
	cmpw	$-15260, %ax            # imm = 0xC464
	jne	.LBB87_578
# %bb.196:                              # %think.split1338
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	$100, %eax
	movl	$35, %ecx
	movl	$0, failed
	movl	(%r12), %edx
	movl	Variant, %esi
	cmpl	$2, %esi
	movl	$100, %esi
	cmovel	%ecx, %esi
	subl	%esi, %edx
	movq	-112(%rbp), %rdi        # 8-byte Reload
	movl	%edx, (%rdi)
	movl	(%r12), %edx
	movl	Variant, %esi
	cmpl	$2, %esi
	cmovel	%ecx, %eax
	addl	%eax, %edx
	movq	-184(%rbp), %rax        # 8-byte Reload
	movl	%edx, (%rax)
	movl	(%rdi), %esi
	movl	(%rax), %edx
	movl	i_depth, %ecx
	movw	$-15260, BasicBlockSignatureTracker # imm = 0xC464
	movw	$-13365, RunTimeSignatureAdjuster # imm = 0xCBCB
	movq	-168(%rbp), %rdi        # 8-byte Reload
	callq	search_root
	movw	$-15260, BasicBlockSignatureTracker # imm = 0xC464
	movw	$-13365, RunTimeSignatureAdjuster # imm = 0xCBCB
	movq	-168(%rbp), %rdx        # 8-byte Reload
	movq	(%rdx), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	8(%rdx), %rax
	movq	%rax, 8(%rcx)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rcx)
	movl	result, %eax
	movw	$-15260, BasicBlockSignatureTracker # imm = 0xC464
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_199
# %bb.197:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-15235, %ax            # imm = 0xC47D
	jne	.LBB87_583
# %bb.198:                              # %think.split1342
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15235, BasicBlockSignatureTracker # imm = 0xC47D
	movw	$90, RunTimeSignatureAdjuster
	jmp	.LBB87_294
.LBB87_199:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$244, %ax
	cmpw	$-15216, %ax            # imm = 0xC490
	jne	.LBB87_578
# %bb.200:                              # %think.split1344
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	cur_score, %eax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-15216, BasicBlockSignatureTracker # imm = 0xC490
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB87_203
# %bb.201:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-15206, %ax            # imm = 0xC49A
	jne	.LBB87_578
# %bb.202:                              # %think.split1346
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	$1, failed
	movw	$-15206, BasicBlockSignatureTracker # imm = 0xC49A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_205
.LBB87_203:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-15202, %ax            # imm = 0xC49E
	jne	.LBB87_578
# %bb.204:                              # %think.split1348
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	$0, failed
	movw	$-15202, BasicBlockSignatureTracker # imm = 0xC49E
	movw	$4, RunTimeSignatureAdjuster
.LBB87_205:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$50, %ax
	xorw	%cx, %ax
	cmpw	$-15192, %ax            # imm = 0xC4A8
	jne	.LBB87_578
# %bb.206:                              # %think.split1350
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	cur_score, %eax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-15192, BasicBlockSignatureTracker # imm = 0xC4A8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB87_217
# %bb.207:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-15186, %ax            # imm = 0xC4AE
	jne	.LBB87_578
# %bb.208:                              # %think.split1352
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	time_exit, %eax
	movw	$-15186, BasicBlockSignatureTracker # imm = 0xC4AE
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_217
# %bb.209:                              # %Buffer__11
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12759, %ax             # imm = 0x31D7
	cmpw	$-2695, %ax             # imm = 0xF579
	jne	.LBB87_578
# %bb.210:                              # %think.split1356
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-2695, BasicBlockSignatureTracker # imm = 0xF579
	movw	$12759, RunTimeSignatureAdjuster # imm = 0x31D7
# %bb.211:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-15177, %ax            # imm = 0xC4B7
	jne	.LBB87_578
# %bb.212:                              # %think.split1652
                                        #   in Loop: Header=BB87_185 Depth=2
	movq	-136(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	i_depth, %ecx
	movw	$-15177, BasicBlockSignatureTracker # imm = 0xC4B7
	movw	$-13544, RunTimeSignatureAdjuster # imm = 0xCB18
	movq	-160(%rbp), %rdi        # 8-byte Reload
	movl	$4293967296, %esi       # imm = 0xFFF0BDC0
	movl	$1000000, %edx          # imm = 0xF4240
	callq	search_root
	movw	$-15177, BasicBlockSignatureTracker # imm = 0xC4B7
	movw	$-13544, RunTimeSignatureAdjuster # imm = 0xCB18
	movq	-160(%rbp), %rdx        # 8-byte Reload
	movq	(%rdx), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	8(%rdx), %rax
	movq	%rax, 8(%rcx)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rcx)
	movl	time_exit, %eax
	movw	$-15177, BasicBlockSignatureTracker # imm = 0xC4B7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_215
# %bb.213:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$-15166, %ax            # imm = 0xC4C2
	jne	.LBB87_578
# %bb.214:                              # %think.split1360
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	$0, failed
	movw	$-15166, BasicBlockSignatureTracker # imm = 0xC4C2
	movw	$117, RunTimeSignatureAdjuster
.LBB87_215:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$-15159, %ax            # imm = 0xC4C9
	jne	.LBB87_578
# %bb.216:                              # %think.split1358
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-15159, BasicBlockSignatureTracker # imm = 0xC4C9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_231
.LBB87_217:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$-15146, %ax            # imm = 0xC4D6
	jne	.LBB87_578
# %bb.218:                              # %think.split1354
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	cur_score, %eax
	movq	-184(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-15146, BasicBlockSignatureTracker # imm = 0xC4D6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB87_229
# %bb.219:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-15143, %ax            # imm = 0xC4D9
	jne	.LBB87_578
# %bb.220:                              # %think.split1364
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	time_exit, %eax
	movw	$-15143, BasicBlockSignatureTracker # imm = 0xC4D9
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_229
# %bb.221:                              # %Buffer__12
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-26691, %ax            # imm = 0x97BD
	cmpw	$21348, %ax             # imm = 0x5364
	jne	.LBB87_578
# %bb.222:                              # %think.split1368
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$21348, BasicBlockSignatureTracker # imm = 0x5364
	movw	$-26691, RunTimeSignatureAdjuster # imm = 0x97BD
# %bb.223:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$461, %ax               # imm = 0x1CD
	xorw	%cx, %ax
	cmpw	$-15084, %ax            # imm = 0xC514
	jne	.LBB87_578
# %bb.224:                              # %think.split1654
                                        #   in Loop: Header=BB87_185 Depth=2
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	8(%rdx), %rax
	movq	%rax, 8(%rcx)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rcx)
	movl	cur_score, %eax
	movl	%eax, (%r12)
	movq	-136(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movl	i_depth, %ecx
	movw	$-15084, BasicBlockSignatureTracker # imm = 0xC514
	movw	$-13637, RunTimeSignatureAdjuster # imm = 0xCABB
	movq	-152(%rbp), %rdi        # 8-byte Reload
	movl	$4293967296, %esi       # imm = 0xFFF0BDC0
	movl	$1000000, %edx          # imm = 0xF4240
	callq	search_root
	movw	$-15084, BasicBlockSignatureTracker # imm = 0xC514
	movw	$-13637, RunTimeSignatureAdjuster # imm = 0xCABB
	movq	-152(%rbp), %rdx        # 8-byte Reload
	movq	(%rdx), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	8(%rdx), %rax
	movq	%rax, 8(%rcx)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rcx)
	movl	time_exit, %eax
	movw	$-15084, BasicBlockSignatureTracker # imm = 0xC514
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_227
# %bb.225:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-15082, %ax            # imm = 0xC516
	jne	.LBB87_578
# %bb.226:                              # %think.split1372
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	$0, failed
	movw	$-15082, BasicBlockSignatureTracker # imm = 0xC516
	movw	$2, RunTimeSignatureAdjuster
.LBB87_227:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-15073, %ax            # imm = 0xC51F
	jne	.LBB87_578
# %bb.228:                              # %think.split1370
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-15073, BasicBlockSignatureTracker # imm = 0xC51F
	movw	$457, RunTimeSignatureAdjuster # imm = 0x1C9
.LBB87_229:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$496, %ax               # imm = 0x1F0
	xorw	%cx, %ax
	cmpw	$-15066, %ax            # imm = 0xC526
	jne	.LBB87_578
# %bb.230:                              # %think.split1366
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-15066, BasicBlockSignatureTracker # imm = 0xC526
	movw	$495, RunTimeSignatureAdjuster # imm = 0x1EF
.LBB87_231:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$487, %ax               # imm = 0x1E7
	xorw	%cx, %ax
	cmpw	$-15058, %ax            # imm = 0xC52E
	jne	.LBB87_578
# %bb.232:                              # %think.split1362
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-15058, BasicBlockSignatureTracker # imm = 0xC52E
	movw	$-11792, RunTimeSignatureAdjuster # imm = 0xD1F0
	callq	interrupt
	movw	$-15058, BasicBlockSignatureTracker # imm = 0xC52E
	movw	$-11792, RunTimeSignatureAdjuster # imm = 0xD1F0
	movw	$-15058, BasicBlockSignatureTracker # imm = 0xC52E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_249
# %bb.233:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-15041, %ax            # imm = 0xC53F
	jne	.LBB87_578
# %bb.234:                              # %think.split1374
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	i_depth, %eax
	movw	$-15041, BasicBlockSignatureTracker # imm = 0xC53F
	movw	$17, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB87_249
# %bb.235:                              # %Buffer__13
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$201, %ax
	cmpw	$-14858, %ax            # imm = 0xC5F6
	jne	.LBB87_578
# %bb.236:                              # %think.split1378
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-14858, BasicBlockSignatureTracker # imm = 0xC5F6
	movw	$201, RunTimeSignatureAdjuster
# %bb.237:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$-15037, %ax            # imm = 0xC543
	jne	.LBB87_578
# %bb.238:                              # %think.split1656
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	is_pondering, %eax
	movw	$-15037, BasicBlockSignatureTracker # imm = 0xC543
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_241
# %bb.239:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-15036, %ax            # imm = 0xC544
	jne	.LBB87_584
# %bb.240:                              # %think.split1380
	movq	dummy, %rax
	movq	%rax, (%rbx)
	movq	dummy+8, %rax
	movq	%rax, 8(%rbx)
	movq	dummy+16, %rax
	movq	%rax, 16(%rbx)
	movw	$-15036, BasicBlockSignatureTracker # imm = 0xC544
	movw	$1123, RunTimeSignatureAdjuster # imm = 0x463
	jmp	.LBB87_572
.LBB87_241:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-15024, %ax            # imm = 0xC550
	jne	.LBB87_578
# %bb.242:                              # %think.split1382
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	go_fast, %eax
	movw	$-15024, BasicBlockSignatureTracker # imm = 0xC550
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_245
# %bb.243:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$52, %ax
	cmpw	$-15004, %ax            # imm = 0xC564
	jne	.LBB87_583
# %bb.244:                              # %think.split1386
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-15004, BasicBlockSignatureTracker # imm = 0xC564
	movw	$323, RunTimeSignatureAdjuster # imm = 0x143
	jmp	.LBB87_294
.LBB87_245:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$-14978, %ax            # imm = 0xC57E
	jne	.LBB87_578
# %bb.246:                              # %think.split1384
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-14978, BasicBlockSignatureTracker # imm = 0xC57E
	movw	$0, RunTimeSignatureAdjuster
# %bb.247:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$252, %ax
	cmpw	$-14974, %ax            # imm = 0xC582
	jne	.LBB87_578
# %bb.248:                              # %think.split1388
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-14974, BasicBlockSignatureTracker # imm = 0xC582
	movw	$172, RunTimeSignatureAdjuster
.LBB87_249:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$178, %ax
	xorw	%cx, %ax
	cmpw	$-14948, %ax            # imm = 0xC59C
	jne	.LBB87_578
# %bb.250:                              # %think.split1376
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	time_failure, %eax
	movw	$-14948, BasicBlockSignatureTracker # imm = 0xC59C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_277
# %bb.251:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-14942, %ax            # imm = 0xC5A2
	jne	.LBB87_578
# %bb.252:                              # %think.split1392
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	failed, %eax
	movw	$-14942, BasicBlockSignatureTracker # imm = 0xC5A2
	movw	$62, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_277
# %bb.253:                              # %Buffer__14
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24055, %ax             # imm = 0x5DF7
	cmpw	$-26539, %ax            # imm = 0x9855
	jne	.LBB87_578
# %bb.254:                              # %think.split1394
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-26539, BasicBlockSignatureTracker # imm = 0x9855
	movw	$24055, RunTimeSignatureAdjuster # imm = 0x5DF7
# %bb.255:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-14933, %ax            # imm = 0xC5AB
	jne	.LBB87_578
# %bb.256:                              # %think.split1658
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	cur_score, %eax
	movw	$-14933, BasicBlockSignatureTracker # imm = 0xC5AB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-1000000, %eax         # imm = 0xFFF0BDC0
	jne	.LBB87_259
# %bb.257:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-14931, %ax            # imm = 0xC5AD
	jne	.LBB87_584
# %bb.258:                              # %think.split1396
	movq	dummy, %rax
	movq	%rax, (%rbx)
	movq	dummy+8, %rax
	movq	%rax, 8(%rbx)
	movq	dummy+16, %rax
	movq	%rax, 16(%rbx)
	movw	$-14931, BasicBlockSignatureTracker # imm = 0xC5AD
	movw	$1162, RunTimeSignatureAdjuster # imm = 0x48A
	jmp	.LBB87_572
.LBB87_259:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-14923, %ax            # imm = 0xC5B5
	jne	.LBB87_578
# %bb.260:                              # %think.split1398
                                        #   in Loop: Header=BB87_185 Depth=2
	movabsq	$postpv, %rdi
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	8(%rdx), %rax
	movq	%rax, 8(%rcx)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rcx)
	movl	cur_score, %eax
	movl	%eax, (%r12)
	movw	$-14923, BasicBlockSignatureTracker # imm = 0xC5B5
	movw	$0, RunTimeSignatureAdjuster
	callq	stringize_pv
	movw	$-14923, BasicBlockSignatureTracker # imm = 0xC5B5
	movw	$0, RunTimeSignatureAdjuster
	movl	time_exit, %eax
	movw	$-14923, BasicBlockSignatureTracker # imm = 0xC5B5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_263
# %bb.261:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$113, %ax
	cmpw	$-14908, %ax            # imm = 0xC5C4
	jne	.LBB87_578
# %bb.262:                              # %think.split1402
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	i_depth, %eax
	movb	%al, true_i_depth
	movw	$-14908, BasicBlockSignatureTracker # imm = 0xC5C4
	movw	$113, RunTimeSignatureAdjuster
.LBB87_263:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$121, %ax
	xorw	%cx, %ax
	cmpw	$-14900, %ax            # imm = 0xC5CC
	jne	.LBB87_578
# %bb.264:                              # %think.split1400
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	i_depth, %eax
	movw	$-14900, BasicBlockSignatureTracker # imm = 0xC5CC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jl	.LBB87_267
# %bb.265:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$-14878, %ax            # imm = 0xC5E2
	jne	.LBB87_578
# %bb.266:                              # %think.split1404
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	cur_score, %edi
	movw	$-14878, BasicBlockSignatureTracker # imm = 0xC5E2
	movw	$31013, RunTimeSignatureAdjuster # imm = 0x7925
	callq	post_thinking
	movw	$-14878, BasicBlockSignatureTracker # imm = 0xC5E2
	movw	$31013, RunTimeSignatureAdjuster # imm = 0x7925
	movw	$-14878, BasicBlockSignatureTracker # imm = 0xC5E2
	movw	$46, RunTimeSignatureAdjuster
.LBB87_267:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$-14868, %ax            # imm = 0xC5EC
	jne	.LBB87_578
# %bb.268:                              # %think.split1406
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	(%r12), %eax
	movw	$-14868, BasicBlockSignatureTracker # imm = 0xC5EC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$900000, %eax           # imm = 0xDBBA0
	jle	.LBB87_275
# %bb.269:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-14854, %ax            # imm = 0xC5FA
	jne	.LBB87_578
# %bb.270:                              # %think.split1408
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	$1000000, %eax          # imm = 0xF4240
	subl	cur_score, %eax
	movl	i_depth, %ecx
	movw	$-14854, BasicBlockSignatureTracker # imm = 0xC5FA
	movw	$22, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB87_275
# %bb.271:                              # %Buffer__15
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5160, %ax              # imm = 0x1428
	cmpw	$-11822, %ax            # imm = 0xD1D2
	jne	.LBB87_583
# %bb.272:                              # %think.split1412
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-11822, BasicBlockSignatureTracker # imm = 0xD1D2
	movw	$5160, RunTimeSignatureAdjuster # imm = 0x1428
# %bb.273:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-14853, %ax            # imm = 0xC5FB
	jne	.LBB87_583
# %bb.274:                              # %think.split1660
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14853, BasicBlockSignatureTracker # imm = 0xC5FB
	movw	$476, RunTimeSignatureAdjuster # imm = 0x1DC
	jmp	.LBB87_294
.LBB87_275:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$-14851, %ax            # imm = 0xC5FD
	jne	.LBB87_578
# %bb.276:                              # %think.split1410
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-14851, BasicBlockSignatureTracker # imm = 0xC5FD
	movw	$97, RunTimeSignatureAdjuster
.LBB87_277:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$920, %ax               # imm = 0x398
	xorw	%cx, %ax
	cmpw	$-14844, %ax            # imm = 0xC604
	jne	.LBB87_578
# %bb.278:                              # %think.split1390
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	time_exit, %eax
	movw	$-14844, BasicBlockSignatureTracker # imm = 0xC604
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_281
# %bb.279:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-14843, %ax            # imm = 0xC605
	jne	.LBB87_583
# %bb.280:                              # %think.split1414
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14843, BasicBlockSignatureTracker # imm = 0xC605
	movw	$546, RunTimeSignatureAdjuster # imm = 0x222
	jmp	.LBB87_294
.LBB87_281:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$67, %ax
	cmpw	$-14777, %ax            # imm = 0xC647
	jne	.LBB87_578
# %bb.282:                              # %think.split1416
                                        #   in Loop: Header=BB87_185 Depth=2
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-14777, BasicBlockSignatureTracker # imm = 0xC647
	movw	$0, RunTimeSignatureAdjuster
.LBB87_283:                             #   Parent Loop BB87_6 Depth=1
                                        #     Parent Loop BB87_185 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-14775, %ax            # imm = 0xC649
	jne	.LBB87_574
# %bb.284:                              # %think.split1418
                                        #   in Loop: Header=BB87_283 Depth=3
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-14775, BasicBlockSignatureTracker # imm = 0xC649
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$300, %eax              # imm = 0x12C
	jge	.LBB87_289
# %bb.285:                              #   in Loop: Header=BB87_283 Depth=3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-14772, %ax            # imm = 0xC64C
	jne	.LBB87_574
# %bb.286:                              # %think.split1420
                                        #   in Loop: Header=BB87_283 Depth=3
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	$0, killer_scores(,%rax,4)
	movslq	(%rcx), %rax
	movl	$0, killer_scores2(,%rax,4)
	movslq	(%rcx), %rax
	movl	$0, killer_scores3(,%rax,4)
	movw	$-14772, BasicBlockSignatureTracker # imm = 0xC64C
	movw	$0, RunTimeSignatureAdjuster
# %bb.287:                              #   in Loop: Header=BB87_283 Depth=3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-14767, %ax            # imm = 0xC651
	jne	.LBB87_574
# %bb.288:                              # %think.split1424
                                        #   in Loop: Header=BB87_283 Depth=3
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-14767, BasicBlockSignatureTracker # imm = 0xC651
	movw	$22, RunTimeSignatureAdjuster
	jmp	.LBB87_283
.LBB87_289:                             #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-14764, %ax            # imm = 0xC654
	jne	.LBB87_578
# %bb.290:                              # %think.split1422
                                        #   in Loop: Header=BB87_185 Depth=2
	movw	$-14764, BasicBlockSignatureTracker # imm = 0xC654
	movw	$0, RunTimeSignatureAdjuster
# %bb.291:                              #   in Loop: Header=BB87_185 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$-14722, %ax            # imm = 0xC67E
	jne	.LBB87_578
# %bb.292:                              # %think.split1426
                                        #   in Loop: Header=BB87_185 Depth=2
	movl	i_depth, %eax
	addl	$1, %eax
	movl	%eax, i_depth
	movw	$-14722, BasicBlockSignatureTracker # imm = 0xC67E
	movw	$613, RunTimeSignatureAdjuster # imm = 0x265
	jmp	.LBB87_185
.LBB87_293:                             # %.loopexit5
                                        #   in Loop: Header=BB87_6 Depth=1
	jmp	.LBB87_294
.LBB87_294:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$674, %ax               # imm = 0x2A2
	xorw	%cx, %ax
	cmpw	$-14715, %ax            # imm = 0xC685
	jne	.LBB87_583
# %bb.295:                              # %think.split1334
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14715, BasicBlockSignatureTracker # imm = 0xC685
	movw	$1312, RunTimeSignatureAdjuster # imm = 0x520
.LBB87_296:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1326, %ax              # imm = 0x52E
	xorw	%cx, %ax
	cmpw	$-14709, %ax            # imm = 0xC68B
	jne	.LBB87_583
# %bb.297:                              # %think.split1304
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	forcedwin, %eax
	movw	$-14709, BasicBlockSignatureTracker # imm = 0xC68B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_366
# %bb.298:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-14695, %ax            # imm = 0xC699
	jne	.LBB87_583
# %bb.299:                              # %think.split1430
                                        #   in Loop: Header=BB87_6 Depth=1
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movq	%rax, (%rdx)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rdx)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rdx)
	movl	Variant, %eax
	movw	$-14695, BasicBlockSignatureTracker # imm = 0xC699
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB87_302
# %bb.300:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-14685, %ax            # imm = 0xC6A3
	jne	.LBB87_583
# %bb.301:                              # %think.split1434
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	Variant, %eax
	movw	$-14685, BasicBlockSignatureTracker # imm = 0xC6A3
	movw	$58, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB87_362
.LBB87_302:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-14669, %ax            # imm = 0xC6B3
	jne	.LBB87_583
# %bb.303:                              # %think.split1432
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14669, BasicBlockSignatureTracker # imm = 0xC6B3
	movw	$16, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_364
# %bb.304:                              # %Buffer__17
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29923, %ax             # imm = 0x74E3
	cmpw	$-19888, %ax            # imm = 0xB250
	jne	.LBB87_583
# %bb.305:                              # %think.split1440
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-19888, BasicBlockSignatureTracker # imm = 0xB250
	movw	$29923, RunTimeSignatureAdjuster # imm = 0x74E3
# %bb.306:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$115, %ax
	xorw	%cx, %ax
	cmpw	$-14656, %ax            # imm = 0xC6C0
	jne	.LBB87_583
# %bb.307:                              # %think.split1662
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	alllosers, %eax
	movw	$-14656, BasicBlockSignatureTracker # imm = 0xC6C0
	movw	$99, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_364
# %bb.308:                              # %Buffer__18
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16107, %ax             # imm = 0x3EEB
	cmpw	$-2005, %ax             # imm = 0xF82B
	jne	.LBB87_583
# %bb.309:                              # %think.split1442
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-2005, BasicBlockSignatureTracker # imm = 0xF82B
	movw	$16107, RunTimeSignatureAdjuster # imm = 0x3EEB
# %bb.310:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$-14628, %ax            # imm = 0xC6DC
	jne	.LBB87_583
# %bb.311:                              # %think.split1664
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_pondering, %eax
	movw	$-14628, BasicBlockSignatureTracker # imm = 0xC6DC
	movw	$127, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_364
# %bb.312:                              # %Buffer__19
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20039, %ax             # imm = 0x4E47
	cmpw	$-30565, %ax            # imm = 0x889B
	jne	.LBB87_583
# %bb.313:                              # %think.split1444
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-30565, BasicBlockSignatureTracker # imm = 0x889B
	movw	$20039, RunTimeSignatureAdjuster # imm = 0x4E47
# %bb.314:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-14626, %ax            # imm = 0xC6DE
	jne	.LBB87_583
# %bb.315:                              # %think.split1666
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$0, s_threat
	movw	$-14626, BasicBlockSignatureTracker # imm = 0xC6DE
	movw	$0, RunTimeSignatureAdjuster
	subq	$32, %rsp
	movq	-144(%rbp), %rdi        # 8-byte Reload
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movq	%rax, (%rsp)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsp)
	callq	proofnumbercheck
	addq	$32, %rsp
	movw	$-14626, BasicBlockSignatureTracker # imm = 0xC6DE
	movw	$0, RunTimeSignatureAdjuster
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movq	(%rcx), %rax
	movq	-80(%rbp), %rdx         # 8-byte Reload
	movq	%rax, (%rdx)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rdx)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rdx)
	movl	(%r14), %eax
	movw	$-14626, BasicBlockSignatureTracker # imm = 0xC6DE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jge	.LBB87_360
# %bb.316:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-14624, %ax            # imm = 0xC6E0
	jne	.LBB87_583
# %bb.317:                              # %think.split1446
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	s_threat, %eax
	movw	$-14624, BasicBlockSignatureTracker # imm = 0xC6E0
	movw	$62, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_360
# %bb.318:                              # %Buffer__20
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-11473, %ax            # imm = 0xD32F
	cmpw	$5583, %ax              # imm = 0x15CF
	jne	.LBB87_583
# %bb.319:                              # %think.split1450
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$5583, BasicBlockSignatureTracker # imm = 0x15CF
	movw	$-11473, RunTimeSignatureAdjuster # imm = 0xD32F
# %bb.320:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-14622, %ax            # imm = 0xC6E2
	jne	.LBB87_583
# %bb.321:                              # %think.split1668
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-14622, BasicBlockSignatureTracker # imm = 0xC6E2
	movw	$0, RunTimeSignatureAdjuster
.LBB87_322:                             #   Parent Loop BB87_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-14609, %ax            # imm = 0xC6EF
	jne	.LBB87_577
# %bb.323:                              # %think.split1452
                                        #   in Loop: Header=BB87_322 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-14609, BasicBlockSignatureTracker # imm = 0xC6EF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB87_340
# %bb.324:                              #   in Loop: Header=BB87_322 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$493, %ax               # imm = 0x1ED
	cmpw	$-14590, %ax            # imm = 0xC702
	jne	.LBB87_577
# %bb.325:                              # %think.split1454
                                        #   in Loop: Header=BB87_322 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movl	(%rcx), %eax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-14590, BasicBlockSignatureTracker # imm = 0xC702
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB87_336
# %bb.326:                              #   in Loop: Header=BB87_322 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-14577, %ax            # imm = 0xC70F
	jne	.LBB87_577
# %bb.327:                              # %think.split1458
                                        #   in Loop: Header=BB87_322 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movl	4(%rcx), %eax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	4(%rcx), %ecx
	movw	$-14577, BasicBlockSignatureTracker # imm = 0xC70F
	movw	$13, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB87_336
# %bb.328:                              # %Buffer__21
                                        #   in Loop: Header=BB87_322 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8717, %ax              # imm = 0x220D
	cmpw	$-6910, %ax             # imm = 0xE502
	jne	.LBB87_577
# %bb.329:                              # %think.split1462
                                        #   in Loop: Header=BB87_322 Depth=2
	movw	$-6910, BasicBlockSignatureTracker # imm = 0xE502
	movw	$8717, RunTimeSignatureAdjuster # imm = 0x220D
# %bb.330:                              #   in Loop: Header=BB87_322 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$69, %ax
	xorw	%cx, %ax
	cmpw	$-14518, %ax            # imm = 0xC74A
	jne	.LBB87_577
# %bb.331:                              # %think.split1670
                                        #   in Loop: Header=BB87_322 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movl	12(%rcx), %eax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	12(%rcx), %ecx
	movw	$-14518, BasicBlockSignatureTracker # imm = 0xC74A
	movw	$72, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB87_336
# %bb.332:                              # %Buffer__22
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-28960, %ax            # imm = 0x8EE0
	cmpw	$18858, %ax             # imm = 0x49AA
	jne	.LBB87_583
# %bb.333:                              # %think.split1464
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$18858, BasicBlockSignatureTracker # imm = 0x49AA
	movw	$-28960, RunTimeSignatureAdjuster # imm = 0x8EE0
# %bb.334:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-14507, %ax            # imm = 0xC755
	jne	.LBB87_583
# %bb.335:                              # %think.split1672
                                        #   in Loop: Header=BB87_6 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	$1, rootlosers(,%rax,4)
	movw	$-14507, BasicBlockSignatureTracker # imm = 0xC755
	movw	$442, RunTimeSignatureAdjuster # imm = 0x1BA
	jmp	.LBB87_341
.LBB87_336:                             #   in Loop: Header=BB87_322 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$91, %ax
	xorw	%cx, %ax
	cmpw	$-14503, %ax            # imm = 0xC759
	jne	.LBB87_577
# %bb.337:                              # %think.split1460
                                        #   in Loop: Header=BB87_322 Depth=2
	movw	$-14503, BasicBlockSignatureTracker # imm = 0xC759
	movw	$0, RunTimeSignatureAdjuster
# %bb.338:                              #   in Loop: Header=BB87_322 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-14494, %ax            # imm = 0xC762
	jne	.LBB87_577
# %bb.339:                              # %think.split1466
                                        #   in Loop: Header=BB87_322 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-14494, BasicBlockSignatureTracker # imm = 0xC762
	movw	$384, RunTimeSignatureAdjuster # imm = 0x180
	jmp	.LBB87_322
.LBB87_340:                             # %.loopexit
                                        #   in Loop: Header=BB87_6 Depth=1
	jmp	.LBB87_341
.LBB87_341:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$384, %ax               # imm = 0x180
	xorw	%cx, %ax
	cmpw	$-14481, %ax            # imm = 0xC76F
	jne	.LBB87_583
# %bb.342:                              # %think.split1456
                                        #   in Loop: Header=BB87_6 Depth=1
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-14481, BasicBlockSignatureTracker # imm = 0xC76F
	movw	$0, RunTimeSignatureAdjuster
.LBB87_343:                             #   Parent Loop BB87_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$-14473, %ax            # imm = 0xC777
	jne	.LBB87_576
# %bb.344:                              # %think.split1468
                                        #   in Loop: Header=BB87_343 Depth=2
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-104(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-14473, BasicBlockSignatureTracker # imm = 0xC777
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB87_353
# %bb.345:                              #   in Loop: Header=BB87_343 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$251, %ax
	cmpw	$-14452, %ax            # imm = 0xC78C
	jne	.LBB87_576
# %bb.346:                              # %think.split1470
                                        #   in Loop: Header=BB87_343 Depth=2
	movq	-64(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	rootlosers(,%rax,4), %eax
	movw	$-14452, BasicBlockSignatureTracker # imm = 0xC78C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_349
# %bb.347:                              #   in Loop: Header=BB87_343 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-14450, %ax            # imm = 0xC78E
	jne	.LBB87_576
# %bb.348:                              # %think.split1474
                                        #   in Loop: Header=BB87_343 Depth=2
	movl	(%r13), %eax
	addl	$1, %eax
	movl	%eax, (%r13)
	movw	$-14450, BasicBlockSignatureTracker # imm = 0xC78E
	movw	$2, RunTimeSignatureAdjuster
.LBB87_349:                             #   in Loop: Header=BB87_343 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$-14444, %ax            # imm = 0xC794
	jne	.LBB87_576
# %bb.350:                              # %think.split1476
                                        #   in Loop: Header=BB87_343 Depth=2
	movw	$-14444, BasicBlockSignatureTracker # imm = 0xC794
	movw	$0, RunTimeSignatureAdjuster
# %bb.351:                              #   in Loop: Header=BB87_343 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-14443, %ax            # imm = 0xC795
	jne	.LBB87_576
# %bb.352:                              # %think.split1478
                                        #   in Loop: Header=BB87_343 Depth=2
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-14443, BasicBlockSignatureTracker # imm = 0xC795
	movw	$250, RunTimeSignatureAdjuster
	jmp	.LBB87_343
.LBB87_353:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$233, %ax
	cmpw	$-14434, %ax            # imm = 0xC79E
	jne	.LBB87_583
# %bb.354:                              # %think.split1472
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r13), %eax
	movl	legals, %ecx
	movw	$-14434, BasicBlockSignatureTracker # imm = 0xC79E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB87_357
# %bb.355:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$-14424, %ax            # imm = 0xC7A8
	jne	.LBB87_583
# %bb.356:                              # %think.split1480
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$1, alllosers
	movw	$-14424, BasicBlockSignatureTracker # imm = 0xC7A8
	movw	$54, RunTimeSignatureAdjuster
.LBB87_357:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-14412, %ax            # imm = 0xC7B4
	jne	.LBB87_583
# %bb.358:                              # %think.split1482
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14412, BasicBlockSignatureTracker # imm = 0xC7B4
	movw	$1883, RunTimeSignatureAdjuster # imm = 0x75B
.LBB87_359:                             # %.backedge
                                        #   in Loop: Header=BB87_6 Depth=1
	jmp	.LBB87_6
.LBB87_360:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$352, %ax               # imm = 0x160
	xorw	%cx, %ax
	cmpw	$-14402, %ax            # imm = 0xC7BE
	jne	.LBB87_583
# %bb.361:                              # %think.split1448
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14402, BasicBlockSignatureTracker # imm = 0xC7BE
	movw	$285, RunTimeSignatureAdjuster # imm = 0x11D
	jmp	.LBB87_364
.LBB87_362:                             # %Buffer__16
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32050, %ax             # imm = 0x7D32
	cmpw	$-17519, %ax            # imm = 0xBB91
	jne	.LBB87_583
# %bb.363:                              # %think.split1436
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-17519, BasicBlockSignatureTracker # imm = 0xBB91
	movw	$32050, RunTimeSignatureAdjuster # imm = 0x7D32
.LBB87_364:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$361, %ax               # imm = 0x169
	xorw	%cx, %ax
	cmpw	$-14390, %ax            # imm = 0xC7CA
	jne	.LBB87_583
# %bb.365:                              # %think.split1438
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14390, BasicBlockSignatureTracker # imm = 0xC7CA
	movw	$321, RunTimeSignatureAdjuster # imm = 0x141
.LBB87_366:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$354, %ax               # imm = 0x162
	xorw	%cx, %ax
	cmpw	$-14359, %ax            # imm = 0xC7E9
	jne	.LBB87_583
# %bb.367:                              # %think.split1428
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	alllosers, %eax
	movw	$-14359, BasicBlockSignatureTracker # imm = 0xC7E9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_370
# %bb.368:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-14352, %ax            # imm = 0xC7F0
	jne	.LBB87_583
# %bb.369:                              # %think.split1484
                                        #   in Loop: Header=BB87_6 Depth=1
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movq	(%rdx), %rax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	%rax, (%rcx)
	movq	8(%rdx), %rax
	movq	%rax, 8(%rcx)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rcx)
	movw	$-14352, BasicBlockSignatureTracker # imm = 0xC7F0
	movw	$25, RunTimeSignatureAdjuster
.LBB87_370:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-14350, %ax            # imm = 0xC7F2
	jne	.LBB87_583
# %bb.371:                              # %think.split1486
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r14), %eax
	movw	$-14350, BasicBlockSignatureTracker # imm = 0xC7F2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_378
# %bb.372:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4091, %ax              # imm = 0xFFB
	cmpw	$-14327, %ax            # imm = 0xC809
	jne	.LBB87_583
# %bb.373:                              # %think.split1488
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	xb_mode, %eax
	movw	$-14327, BasicBlockSignatureTracker # imm = 0xC809
	movw	$4091, RunTimeSignatureAdjuster # imm = 0xFFB
	cmpl	$0, %eax
	je	.LBB87_378
# %bb.374:                              # %Buffer__23
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9609, %ax             # imm = 0xDA77
	cmpw	$4734, %ax              # imm = 0x127E
	jne	.LBB87_583
# %bb.375:                              # %think.split1492
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$4734, BasicBlockSignatureTracker # imm = 0x127E
	movw	$-9609, RunTimeSignatureAdjuster # imm = 0xDA77
# %bb.376:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$33, %ax
	xorw	%cx, %ax
	cmpw	$-14296, %ax            # imm = 0xC828
	jne	.LBB87_583
# %bb.377:                              # %think.split1674
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14296, BasicBlockSignatureTracker # imm = 0xC828
	movw	$-9095, RunTimeSignatureAdjuster # imm = 0xDC79
	subq	$32, %rsp
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movq	%rax, (%rsp)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsp)
	movq	-176(%rbp), %rdi        # 8-byte Reload
	callq	comp_to_san
	addq	$32, %rsp
	movabsq	$.L.str.5.130, %rdi
	movw	$-14296, BasicBlockSignatureTracker # imm = 0xC828
	movw	$-9095, RunTimeSignatureAdjuster # imm = 0xDC79
	movl	(%r14), %esi
	movq	-176(%rbp), %rdx        # 8-byte Reload
	movb	$0, %al
	callq	printf
	movl	$0, result
	movw	$-14296, BasicBlockSignatureTracker # imm = 0xC828
	movw	$4058, RunTimeSignatureAdjuster # imm = 0xFDA
.LBB87_378:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4059, %ax              # imm = 0xFDB
	xorw	%cx, %ax
	cmpw	$-14295, %ax            # imm = 0xC829
	jne	.LBB87_583
# %bb.379:                              # %think.split1490
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14295, BasicBlockSignatureTracker # imm = 0xC829
	movw	$-8855, RunTimeSignatureAdjuster # imm = 0xDD69
	callq	rtime
	movw	$-14295, BasicBlockSignatureTracker # imm = 0xC829
	movw	$-8855, RunTimeSignatureAdjuster # imm = 0xDD69
	movq	start_time, %rsi
	movw	$-14295, BasicBlockSignatureTracker # imm = 0xC829
	movw	$22382, RunTimeSignatureAdjuster # imm = 0x576E
	movq	%rax, %rdi
	callq	rdifftime
	movw	$-14295, BasicBlockSignatureTracker # imm = 0xC829
	movw	$22382, RunTimeSignatureAdjuster # imm = 0x576E
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movl	time_left, %ecx
	subl	%eax, %ecx
	movl	%ecx, time_left
	movl	moves_to_tc, %eax
	movw	$-14295, BasicBlockSignatureTracker # imm = 0xC829
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_386
# %bb.380:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-14293, %ax            # imm = 0xC82B
	jne	.LBB87_583
# %bb.381:                              # %think.split1494
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_pondering, %eax
	movw	$-14293, BasicBlockSignatureTracker # imm = 0xC82B
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_386
# %bb.382:                              # %Buffer__24
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-2378, %ax             # imm = 0xF6B6
	cmpw	$16029, %ax             # imm = 0x3E9D
	jne	.LBB87_583
# %bb.383:                              # %think.split1498
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$16029, BasicBlockSignatureTracker # imm = 0x3E9D
	movw	$-2378, RunTimeSignatureAdjuster # imm = 0xF6B6
# %bb.384:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-14290, %ax            # imm = 0xC82E
	jne	.LBB87_583
# %bb.385:                              # %think.split1676
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	time_for_move, %eax
	movq	-120(%rbp), %rcx        # 8-byte Reload
	subl	(%rcx), %eax
	addl	inc, %eax
	addl	time_cushion, %eax
	movl	%eax, time_cushion
	movw	$-14290, BasicBlockSignatureTracker # imm = 0xC82E
	movw	$7, RunTimeSignatureAdjuster
.LBB87_386:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$24, %ax
	xorw	%cx, %ax
	cmpw	$-14287, %ax            # imm = 0xC831
	jne	.LBB87_583
# %bb.387:                              # %think.split1496
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r12), %eax
	movw	$-14287, BasicBlockSignatureTracker # imm = 0xC831
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$999998, %eax           # imm = 0xF423E
	jne	.LBB87_400
# %bb.388:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-14284, %ax            # imm = 0xC834
	jne	.LBB87_583
# %bb.389:                              # %think.split1500
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_pondering, %eax
	movw	$-14284, BasicBlockSignatureTracker # imm = 0xC834
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_400
# %bb.390:                              # %Buffer__25
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29167, %ax             # imm = 0x71EF
	cmpw	$-17957, %ax            # imm = 0xB9DB
	jne	.LBB87_583
# %bb.391:                              # %think.split1504
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-17957, BasicBlockSignatureTracker # imm = 0xB9DB
	movw	$29167, RunTimeSignatureAdjuster # imm = 0x71EF
# %bb.392:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$-14274, %ax            # imm = 0xC83E
	jne	.LBB87_583
# %bb.393:                              # %think.split1678
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	white_to_move, %eax
	movw	$-14274, BasicBlockSignatureTracker # imm = 0xC83E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB87_396
# %bb.394:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-14273, %ax            # imm = 0xC83F
	jne	.LBB87_583
# %bb.395:                              # %think.split1506
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$3, result
	movw	$-14273, BasicBlockSignatureTracker # imm = 0xC83F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_398
.LBB87_396:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$108, %ax
	cmpw	$-14254, %ax            # imm = 0xC852
	jne	.LBB87_583
# %bb.397:                              # %think.split1508
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$2, result
	movw	$-14254, BasicBlockSignatureTracker # imm = 0xC852
	movw	$109, RunTimeSignatureAdjuster
.LBB87_398:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$95, %ax
	xorw	%cx, %ax
	cmpw	$-14240, %ax            # imm = 0xC860
	jne	.LBB87_583
# %bb.399:                              # %think.split1510
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14240, BasicBlockSignatureTracker # imm = 0xC860
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_416
.LBB87_400:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$84, %ax
	xorw	%cx, %ax
	cmpw	$-14235, %ax            # imm = 0xC865
	jne	.LBB87_583
# %bb.401:                              # %think.split1502
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r12), %eax
	movw	$-14235, BasicBlockSignatureTracker # imm = 0xC865
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-999998, %eax          # imm = 0xFFF0BDC2
	jne	.LBB87_414
# %bb.402:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-14224, %ax            # imm = 0xC870
	jne	.LBB87_583
# %bb.403:                              # %think.split1514
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_pondering, %eax
	movw	$-14224, BasicBlockSignatureTracker # imm = 0xC870
	movw	$21, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_414
# %bb.404:                              # %Buffer__26
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15077, %ax             # imm = 0x3AE5
	cmpw	$-3435, %ax             # imm = 0xF295
	jne	.LBB87_583
# %bb.405:                              # %think.split1518
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-3435, BasicBlockSignatureTracker # imm = 0xF295
	movw	$15077, RunTimeSignatureAdjuster # imm = 0x3AE5
# %bb.406:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-14211, %ax            # imm = 0xC87D
	jne	.LBB87_583
# %bb.407:                              # %think.split1680
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	white_to_move, %eax
	movw	$-14211, BasicBlockSignatureTracker # imm = 0xC87D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB87_410
# %bb.408:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$250, %ax
	cmpw	$-14201, %ax            # imm = 0xC887
	jne	.LBB87_583
# %bb.409:                              # %think.split1520
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$2, result
	movw	$-14201, BasicBlockSignatureTracker # imm = 0xC887
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_412
.LBB87_410:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$237, %ax
	cmpw	$-14192, %ax            # imm = 0xC890
	jne	.LBB87_583
# %bb.411:                              # %think.split1522
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	$3, result
	movw	$-14192, BasicBlockSignatureTracker # imm = 0xC890
	movw	$23, RunTimeSignatureAdjuster
.LBB87_412:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-14185, %ax            # imm = 0xC897
	jne	.LBB87_583
# %bb.413:                              # %think.split1524
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14185, BasicBlockSignatureTracker # imm = 0xC897
	movw	$242, RunTimeSignatureAdjuster
.LBB87_414:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$249, %ax
	xorw	%cx, %ax
	cmpw	$-14180, %ax            # imm = 0xC89C
	jne	.LBB87_583
# %bb.415:                              # %think.split1516
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14180, BasicBlockSignatureTracker # imm = 0xC89C
	movw	$252, RunTimeSignatureAdjuster
.LBB87_416:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$203, %ax
	xorw	%cx, %ax
	cmpw	$-14165, %ax            # imm = 0xC8AB
	jne	.LBB87_583
# %bb.417:                              # %think.split1512
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	post, %eax
	movw	$-14165, BasicBlockSignatureTracker # imm = 0xC8AB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_462
# %bb.418:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-14161, %ax            # imm = 0xC8AF
	jne	.LBB87_583
# %bb.419:                              # %think.split1526
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	xb_mode, %eax
	movw	$-14161, BasicBlockSignatureTracker # imm = 0xC8AF
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_462
# %bb.420:                              # %Buffer__27
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14099, %ax            # imm = 0xC8ED
	cmpw	$66, %ax
	jne	.LBB87_583
# %bb.421:                              # %think.split1530
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$66, BasicBlockSignatureTracker
	movw	$-14099, RunTimeSignatureAdjuster # imm = 0xC8ED
# %bb.422:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-14156, %ax            # imm = 0xC8B4
	jne	.LBB87_583
# %bb.423:                              # %think.split1682
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_pondering, %eax
	movw	$-14156, BasicBlockSignatureTracker # imm = 0xC8B4
	movw	$31, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_462
# %bb.424:                              # %Buffer__28
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-10893, %ax            # imm = 0xD573
	cmpw	$7623, %ax              # imm = 0x1DC7
	jne	.LBB87_583
# %bb.425:                              # %think.split1532
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$7623, BasicBlockSignatureTracker # imm = 0x1DC7
	movw	$-10893, RunTimeSignatureAdjuster # imm = 0xD573
# %bb.426:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-14150, %ax            # imm = 0xC8BA
	jne	.LBB87_583
# %bb.427:                              # %think.split1684
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14150, BasicBlockSignatureTracker # imm = 0xC8BA
	movw	$17, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB87_462
# %bb.428:                              # %Buffer__29
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22469, %ax             # imm = 0x57C5
	cmpw	$-24705, %ax            # imm = 0x9F7F
	jne	.LBB87_583
# %bb.429:                              # %think.split1534
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-24705, BasicBlockSignatureTracker # imm = 0x9F7F
	movw	$22469, RunTimeSignatureAdjuster # imm = 0x57C5
# %bb.430:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$118, %ax
	xorw	%cx, %ax
	cmpw	$-14132, %ax            # imm = 0xC8CC
	jne	.LBB87_583
# %bb.431:                              # %think.split1686
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14132, BasicBlockSignatureTracker # imm = 0xC8CC
	movw	$103, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB87_462
# %bb.432:                              # %Buffer__30
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23412, %ax             # imm = 0x5B74
	cmpw	$-27720, %ax            # imm = 0x93B8
	jne	.LBB87_583
# %bb.433:                              # %think.split1536
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-27720, BasicBlockSignatureTracker # imm = 0x93B8
	movw	$23412, RunTimeSignatureAdjuster # imm = 0x5B74
# %bb.434:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-14122, %ax            # imm = 0xC8D6
	jne	.LBB87_583
# %bb.435:                              # %think.split1688
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14122, BasicBlockSignatureTracker # imm = 0xC8D6
	movw	$125, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB87_462
# %bb.436:                              # %Buffer__31
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15138, %ax             # imm = 0x3B22
	cmpw	$-3084, %ax             # imm = 0xF3F4
	jne	.LBB87_583
# %bb.437:                              # %think.split1538
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-3084, BasicBlockSignatureTracker # imm = 0xF3F4
	movw	$15138, RunTimeSignatureAdjuster # imm = 0x3B22
# %bb.438:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-14120, %ax            # imm = 0xC8D8
	jne	.LBB87_583
# %bb.439:                              # %think.split1690
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14120, BasicBlockSignatureTracker # imm = 0xC8D8
	movw	$115, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB87_462
# %bb.440:                              # %Buffer__32
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30958, %ax            # imm = 0x8712
	cmpw	$20426, %ax             # imm = 0x4FCA
	jne	.LBB87_583
# %bb.441:                              # %think.split1540
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$20426, BasicBlockSignatureTracker # imm = 0x4FCA
	movw	$-30958, RunTimeSignatureAdjuster # imm = 0x8712
# %bb.442:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-14115, %ax            # imm = 0xC8DD
	jne	.LBB87_583
# %bb.443:                              # %think.split1692
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14115, BasicBlockSignatureTracker # imm = 0xC8DD
	movw	$118, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB87_462
# %bb.444:                              # %Buffer__33
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-4257, %ax             # imm = 0xEF5F
	cmpw	$10114, %ax             # imm = 0x2782
	jne	.LBB87_583
# %bb.445:                              # %think.split1542
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$10114, BasicBlockSignatureTracker # imm = 0x2782
	movw	$-4257, RunTimeSignatureAdjuster # imm = 0xEF5F
# %bb.446:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$54, %ax
	xorw	%cx, %ax
	cmpw	$-14101, %ax            # imm = 0xC8EB
	jne	.LBB87_583
# %bb.447:                              # %think.split1694
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	forcedwin, %eax
	movw	$-14101, BasicBlockSignatureTracker # imm = 0xC8EB
	movw	$64, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_462
# %bb.448:                              # %Buffer__34
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-7879, %ax             # imm = 0xE139
	cmpw	$10706, %ax             # imm = 0x29D2
	jne	.LBB87_583
# %bb.449:                              # %think.split1544
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$10706, BasicBlockSignatureTracker # imm = 0x29D2
	movw	$-7879, RunTimeSignatureAdjuster # imm = 0xE139
# %bb.450:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-14097, %ax            # imm = 0xC8EF
	jne	.LBB87_583
# %bb.451:                              # %think.split1696
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r12), %eax
	movw	$-14097, BasicBlockSignatureTracker # imm = 0xC8EF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$999600, %eax           # imm = 0xF40B0
	jle	.LBB87_460
# %bb.452:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-14087, %ax            # imm = 0xC8F9
	jne	.LBB87_583
# %bb.453:                              # %think.split1546
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	Variant, %eax
	movw	$-14087, BasicBlockSignatureTracker # imm = 0xC8F9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB87_456
# %bb.454:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-14086, %ax            # imm = 0xC8FA
	jne	.LBB87_583
# %bb.455:                              # %think.split1550
                                        #   in Loop: Header=BB87_6 Depth=1
	movabsq	$.L.str.6.131, %rdi
	movl	$2, %ecx
	movl	$1000000, %eax          # imm = 0xF4240
	subl	(%r12), %eax
	cltd
	idivl	%ecx
	movl	%eax, %esi
	movb	$0, %al
	callq	printf
	movw	$-14086, BasicBlockSignatureTracker # imm = 0xC8FA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_458
.LBB87_456:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-14085, %ax            # imm = 0xC8FB
	jne	.LBB87_583
# %bb.457:                              # %think.split1552
                                        #   in Loop: Header=BB87_6 Depth=1
	movabsq	$.L.str.7.132, %rdi
	movl	$2, %ecx
	movl	$1000000, %eax          # imm = 0xF4240
	subl	(%r12), %eax
	cltd
	idivl	%ecx
	movl	%eax, %esi
	movb	$0, %al
	callq	printf
	movw	$-14085, BasicBlockSignatureTracker # imm = 0xC8FB
	movw	$1, RunTimeSignatureAdjuster
.LBB87_458:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-14081, %ax            # imm = 0xC8FF
	jne	.LBB87_583
# %bb.459:                              # %think.split1554
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14081, BasicBlockSignatureTracker # imm = 0xC8FF
	movw	$16, RunTimeSignatureAdjuster
.LBB87_460:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$488, %ax               # imm = 0x1E8
	xorw	%cx, %ax
	cmpw	$-14073, %ax            # imm = 0xC907
	jne	.LBB87_583
# %bb.461:                              # %think.split1548
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14073, BasicBlockSignatureTracker # imm = 0xC907
	movw	$428, RunTimeSignatureAdjuster # imm = 0x1AC
.LBB87_462:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$439, %ax               # imm = 0x1B7
	xorw	%cx, %ax
	cmpw	$-14052, %ax            # imm = 0xC91C
	jne	.LBB87_583
# %bb.463:                              # %think.split1528
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14052, BasicBlockSignatureTracker # imm = 0xC91C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB87_502
# %bb.464:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-14051, %ax            # imm = 0xC91D
	jne	.LBB87_583
# %bb.465:                              # %think.split1556
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14051, BasicBlockSignatureTracker # imm = 0xC91D
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB87_502
# %bb.466:                              # %Buffer__35
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20537, %ax            # imm = 0xAFC7
	cmpw	$26330, %ax             # imm = 0x66DA
	jne	.LBB87_583
# %bb.467:                              # %think.split1560
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$26330, BasicBlockSignatureTracker # imm = 0x66DA
	movw	$-20537, RunTimeSignatureAdjuster # imm = 0xAFC7
# %bb.468:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-14025, %ax            # imm = 0xC937
	jne	.LBB87_583
# %bb.469:                              # %think.split1698
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14025, BasicBlockSignatureTracker # imm = 0xC937
	movw	$43, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB87_502
# %bb.470:                              # %Buffer__36
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22017, %ax            # imm = 0xA9FF
	cmpw	$24776, %ax             # imm = 0x60C8
	jne	.LBB87_583
# %bb.471:                              # %think.split1562
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$24776, BasicBlockSignatureTracker # imm = 0x60C8
	movw	$-22017, RunTimeSignatureAdjuster # imm = 0xA9FF
# %bb.472:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-14021, %ax            # imm = 0xC93B
	jne	.LBB87_583
# %bb.473:                              # %think.split1700
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14021, BasicBlockSignatureTracker # imm = 0xC93B
	movw	$39, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB87_502
# %bb.474:                              # %Buffer__37
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-31570, %ax            # imm = 0x84AE
	cmpw	$19861, %ax             # imm = 0x4D95
	jne	.LBB87_583
# %bb.475:                              # %think.split1564
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$19861, BasicBlockSignatureTracker # imm = 0x4D95
	movw	$-31570, RunTimeSignatureAdjuster # imm = 0x84AE
# %bb.476:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$116, %ax
	xorw	%cx, %ax
	cmpw	$-14001, %ax            # imm = 0xC94F
	jne	.LBB87_583
# %bb.477:                              # %think.split1702
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	result, %eax
	movw	$-14001, BasicBlockSignatureTracker # imm = 0xC94F
	movw	$83, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB87_502
# %bb.478:                              # %Buffer__38
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30156, %ax            # imm = 0x8A34
	cmpw	$17275, %ax             # imm = 0x437B
	jne	.LBB87_583
# %bb.479:                              # %think.split1566
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$17275, BasicBlockSignatureTracker # imm = 0x437B
	movw	$-30156, RunTimeSignatureAdjuster # imm = 0x8A34
# %bb.480:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-13999, %ax            # imm = 0xC951
	jne	.LBB87_583
# %bb.481:                              # %think.split1704
                                        #   in Loop: Header=BB87_6 Depth=1
	movsbl	true_i_depth, %eax
	movw	$-13999, BasicBlockSignatureTracker # imm = 0xC951
	movw	$77, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jl	.LBB87_502
# %bb.482:                              # %Buffer__39
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3574, %ax             # imm = 0xF20A
	cmpw	$15195, %ax             # imm = 0x3B5B
	jne	.LBB87_583
# %bb.483:                              # %think.split1568
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$15195, BasicBlockSignatureTracker # imm = 0x3B5B
	movw	$-3574, RunTimeSignatureAdjuster # imm = 0xF20A
# %bb.484:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-13997, %ax            # imm = 0xC953
	jne	.LBB87_583
# %bb.485:                              # %think.split1706
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	pn_move+4, %eax
	movl	dummy+4, %ecx
	movw	$-13997, BasicBlockSignatureTracker # imm = 0xC953
	movw	$79, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB87_502
# %bb.486:                              # %Buffer__40
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14658, %ax            # imm = 0xC6BE
	cmpw	$4077, %ax              # imm = 0xFED
	jne	.LBB87_583
# %bb.487:                              # %think.split1570
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$4077, BasicBlockSignatureTracker # imm = 0xFED
	movw	$-14658, RunTimeSignatureAdjuster # imm = 0xC6BE
# %bb.488:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-13986, %ax            # imm = 0xC95E
	jne	.LBB87_583
# %bb.489:                              # %think.split1708
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	is_pondering, %eax
	movw	$-13986, BasicBlockSignatureTracker # imm = 0xC95E
	movw	$66, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_502
# %bb.490:                              # %Buffer__41
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-18821, %ax            # imm = 0xB67B
	cmpw	$32549, %ax             # imm = 0x7F25
	jne	.LBB87_583
# %bb.491:                              # %think.split1572
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$32549, BasicBlockSignatureTracker # imm = 0x7F25
	movw	$-18821, RunTimeSignatureAdjuster # imm = 0xB67B
# %bb.492:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-13969, %ax            # imm = 0xC96F
	jne	.LBB87_583
# %bb.493:                              # %think.split1710
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	Variant, %eax
	movw	$-13969, BasicBlockSignatureTracker # imm = 0xC96F
	movw	$115, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB87_502
# %bb.494:                              # %Buffer__42
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1605, %ax             # imm = 0xF9BB
	cmpw	$12500, %ax             # imm = 0x30D4
	jne	.LBB87_583
# %bb.495:                              # %think.split1574
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$12500, BasicBlockSignatureTracker # imm = 0x30D4
	movw	$-1605, RunTimeSignatureAdjuster # imm = 0xF9BB
# %bb.496:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-13967, %ax            # imm = 0xC971
	jne	.LBB87_583
# %bb.497:                              # %think.split1712
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	bestmovenum, %eax
	movw	$-13967, BasicBlockSignatureTracker # imm = 0xC971
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-1, %eax
	jne	.LBB87_500
# %bb.498:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-13964, %ax            # imm = 0xC974
	jne	.LBB87_583
# %bb.499:                              # %think.split1576
                                        #   in Loop: Header=BB87_6 Depth=1
	xorl	%eax, %eax
	movl	$0, (%rax)
	movw	$-13964, BasicBlockSignatureTracker # imm = 0xC974
	movw	$5, RunTimeSignatureAdjuster
.LBB87_500:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-13961, %ax            # imm = 0xC977
	jne	.LBB87_583
# %bb.501:                              # %think.split1578
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-13961, BasicBlockSignatureTracker # imm = 0xC977
	movw	$107, RunTimeSignatureAdjuster
.LBB87_502:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$139, %ax
	xorw	%cx, %ax
	cmpw	$-13929, %ax            # imm = 0xC997
	jne	.LBB87_583
# %bb.503:                              # %think.split1558
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	Variant, %eax
	movw	$-13929, BasicBlockSignatureTracker # imm = 0xC997
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB87_518
# %bb.504:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$-13913, %ax            # imm = 0xC9A7
	jne	.LBB87_583
# %bb.505:                              # %think.split1580
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r12), %eax
	movw	$-13913, BasicBlockSignatureTracker # imm = 0xC9A7
	movw	$48, RunTimeSignatureAdjuster
	cmpl	$-999900, %eax          # imm = 0xFFF0BE24
	jle	.LBB87_518
# %bb.506:                              # %Buffer__43
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-21771, %ax            # imm = 0xAAF5
	cmpw	$25426, %ax             # imm = 0x6352
	jne	.LBB87_584
# %bb.507:                              # %think.split1584
	movw	$25426, BasicBlockSignatureTracker # imm = 0x6352
	movw	$-21771, RunTimeSignatureAdjuster # imm = 0xAAF5
# %bb.508:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-13905, %ax            # imm = 0xC9AF
	jne	.LBB87_584
# %bb.509:                              # %think.split1714
	movl	tradefreely, %eax
	movw	$-13905, BasicBlockSignatureTracker # imm = 0xC9AF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_516
# %bb.510:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-13900, %ax            # imm = 0xC9B4
	jne	.LBB87_584
# %bb.511:                              # %think.split1586
	movl	userealholdings, %eax
	movw	$-13900, BasicBlockSignatureTracker # imm = 0xC9B4
	movw	$27, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_516
# %bb.512:                              # %Buffer__44
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29528, %ax            # imm = 0x8CA8
	cmpw	$17692, %ax             # imm = 0x451C
	jne	.LBB87_584
# %bb.513:                              # %think.split1590
	movw	$17692, BasicBlockSignatureTracker # imm = 0x451C
	movw	$-29528, RunTimeSignatureAdjuster # imm = 0x8CA8
# %bb.514:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-13899, %ax            # imm = 0xC9B5
	jne	.LBB87_584
# %bb.515:                              # %think.split1716
	movabsq	$.L.str.8.133, %rdi
	movl	$1, tradefreely
	movb	$0, %al
	callq	printf
	movw	$-13899, BasicBlockSignatureTracker # imm = 0xC9B5
	movw	$26, RunTimeSignatureAdjuster
.LBB87_516:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$89, %ax
	xorw	%cx, %ax
	cmpw	$-13834, %ax            # imm = 0xC9F6
	jne	.LBB87_584
# %bb.517:                              # %think.split1588
	movw	$-13834, BasicBlockSignatureTracker # imm = 0xC9F6
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_570
.LBB87_518:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$-13828, %ax            # imm = 0xC9FC
	jne	.LBB87_583
# %bb.519:                              # %think.split1582
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	(%r12), %eax
	movw	$-13828, BasicBlockSignatureTracker # imm = 0xC9FC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-999900, %eax          # imm = 0xFFF0BE24
	jge	.LBB87_546
# %bb.520:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1020, %ax              # imm = 0x3FC
	cmpw	$-13824, %ax            # imm = 0xCA00
	jne	.LBB87_583
# %bb.521:                              # %think.split1594
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	Variant, %eax
	movw	$-13824, BasicBlockSignatureTracker # imm = 0xCA00
	movw	$1020, RunTimeSignatureAdjuster # imm = 0x3FC
	cmpl	$1, %eax
	jne	.LBB87_546
# %bb.522:                              # %Buffer__45
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$809, %ax               # imm = 0x329
	cmpw	$-14039, %ax            # imm = 0xC929
	jne	.LBB87_583
# %bb.523:                              # %think.split1598
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$-14039, BasicBlockSignatureTracker # imm = 0xC929
	movw	$809, RunTimeSignatureAdjuster # imm = 0x329
# %bb.524:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-13822, %ax            # imm = 0xCA02
	jne	.LBB87_583
# %bb.525:                              # %think.split1718
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	pn_move+4, %eax
	movl	dummy+4, %ecx
	movw	$-13822, BasicBlockSignatureTracker # imm = 0xCA02
	movw	$1022, RunTimeSignatureAdjuster # imm = 0x3FE
	cmpl	%ecx, %eax
	jne	.LBB87_546
# %bb.526:                              # %Buffer__46
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-218, %ax
	cmpw	$13604, %ax             # imm = 0x3524
	jne	.LBB87_583
# %bb.527:                              # %think.split1600
                                        #   in Loop: Header=BB87_6 Depth=1
	movw	$13604, BasicBlockSignatureTracker # imm = 0x3524
	movw	$-218, RunTimeSignatureAdjuster
# %bb.528:                              #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-13815, %ax            # imm = 0xCA09
	jne	.LBB87_583
# %bb.529:                              # %think.split1720
                                        #   in Loop: Header=BB87_6 Depth=1
	movl	userealholdings, %eax
	movw	$-13815, BasicBlockSignatureTracker # imm = 0xCA09
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_532
# %bb.530:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-13814, %ax            # imm = 0xCA0A
	jne	.LBB87_584
# %bb.531:                              # %think.split1602
	movl	$1, must_sit
	movw	$-13814, BasicBlockSignatureTracker # imm = 0xCA0A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_534
.LBB87_532:                             #   in Loop: Header=BB87_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-13807, %ax            # imm = 0xCA11
	jne	.LBB87_583
# %bb.533:                              # %think.split1604
                                        #   in Loop: Header=BB87_6 Depth=1
	movabsq	$realholdings, %rdi
	movl	$1, userealholdings
	movw	$-13807, BasicBlockSignatureTracker # imm = 0xCA11
	movw	$-14875, RunTimeSignatureAdjuster # imm = 0xC5E5
	callq	ProcessHoldings
	movabsq	$.L.str.9.134, %rdi
	movw	$-13807, BasicBlockSignatureTracker # imm = 0xCA11
	movw	$-14875, RunTimeSignatureAdjuster # imm = 0xC5E5
	movl	$0, tradefreely
	movb	$0, %al
	callq	printf
	movw	$-13807, BasicBlockSignatureTracker # imm = 0xCA11
	movw	$2814, RunTimeSignatureAdjuster # imm = 0xAFE
	jmp	.LBB87_359
.LBB87_534:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-13795, %ax            # imm = 0xCA1D
	jne	.LBB87_584
# %bb.535:                              # %think.split1606
	movl	(%r12), %eax
	movw	$-13795, BasicBlockSignatureTracker # imm = 0xCA1D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-1000000, %eax         # imm = 0xFFF0BDC0
	jle	.LBB87_544
# %bb.536:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-13789, %ax            # imm = 0xCA23
	jne	.LBB87_584
# %bb.537:                              # %think.split1608
	movl	partnerdead, %eax
	movw	$-13789, BasicBlockSignatureTracker # imm = 0xCA23
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB87_540
# %bb.538:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-13787, %ax            # imm = 0xCA25
	jne	.LBB87_584
# %bb.539:                              # %think.split1612
	movabsq	$.L.str.10.135, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.11.136, %rdi
	movb	$0, %al
	callq	printf
	movw	$-13787, BasicBlockSignatureTracker # imm = 0xCA25
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_542
.LBB87_540:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-13780, %ax            # imm = 0xCA2C
	jne	.LBB87_584
# %bb.541:                              # %think.split1614
	movabsq	$.L.str.12.137, %rdi
	movb	$0, %al
	callq	printf
	movw	$-13780, BasicBlockSignatureTracker # imm = 0xCA2C
	movw	$9, RunTimeSignatureAdjuster
.LBB87_542:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$108, %ax
	xorw	%cx, %ax
	cmpw	$-13751, %ax            # imm = 0xCA49
	jne	.LBB87_584
# %bb.543:                              # %think.split1616
	movw	$-13751, BasicBlockSignatureTracker # imm = 0xCA49
	movw	$84, RunTimeSignatureAdjuster
.LBB87_544:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$87, %ax
	xorw	%cx, %ax
	cmpw	$-13750, %ax            # imm = 0xCA4A
	jne	.LBB87_584
# %bb.545:                              # %think.split1610
	movw	$-13750, BasicBlockSignatureTracker # imm = 0xCA4A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB87_568
.LBB87_546:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$943, %ax               # imm = 0x3AF
	xorw	%cx, %ax
	cmpw	$-13741, %ax            # imm = 0xCA53
	jne	.LBB87_584
# %bb.547:                              # %think.split1596
	movl	(%r12), %eax
	movw	$-13741, BasicBlockSignatureTracker # imm = 0xCA53
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-60000, %eax           # imm = 0xFFFF15A0
	jle	.LBB87_566
# %bb.548:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-13730, %ax            # imm = 0xCA5E
	jne	.LBB87_584
# %bb.549:                              # %think.split1620
	movl	(%r12), %eax
	movw	$-13730, BasicBlockSignatureTracker # imm = 0xCA5E
	movw	$13, RunTimeSignatureAdjuster
	cmpl	$-40000, %eax           # imm = 0xFFFF63C0
	jge	.LBB87_566
# %bb.550:                              # %Buffer__47
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-13581, %ax            # imm = 0xCAF3
	cmpw	$173, %ax
	jne	.LBB87_584
# %bb.551:                              # %think.split1624
	movw	$173, BasicBlockSignatureTracker
	movw	$-13581, RunTimeSignatureAdjuster # imm = 0xCAF3
# %bb.552:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$39, %ax
	xorw	%cx, %ax
	cmpw	$-13703, %ax            # imm = 0xCA79
	jne	.LBB87_584
# %bb.553:                              # %think.split1722
	movl	Variant, %eax
	movw	$-13703, BasicBlockSignatureTracker # imm = 0xCA79
	movw	$42, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB87_566
# %bb.554:                              # %Buffer__48
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20221, %ax            # imm = 0xB103
	cmpw	$31610, %ax             # imm = 0x7B7A
	jne	.LBB87_584
# %bb.555:                              # %think.split1626
	movw	$31610, BasicBlockSignatureTracker # imm = 0x7B7A
	movw	$-20221, RunTimeSignatureAdjuster # imm = 0xB103
# %bb.556:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$246, %ax
	xorw	%cx, %ax
	cmpw	$-13681, %ax            # imm = 0xCA8F
	jne	.LBB87_584
# %bb.557:                              # %think.split1724
	movl	partnerdead, %eax
	movw	$-13681, BasicBlockSignatureTracker # imm = 0xCA8F
	movw	$220, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB87_566
# %bb.558:                              # %Buffer__49
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-6208, %ax             # imm = 0xE7C0
	cmpw	$11599, %ax             # imm = 0x2D4F
	jne	.LBB87_584
# %bb.559:                              # %think.split1628
	movw	$11599, BasicBlockSignatureTracker # imm = 0x2D4F
	movw	$-6208, RunTimeSignatureAdjuster # imm = 0xE7C0
# %bb.560:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-13680, %ax            # imm = 0xCA90
	jne	.LBB87_584
# %bb.561:                              # %think.split1726
	movl	pn_move+4, %eax
	movl	dummy+4, %ecx
	movw	$-13680, BasicBlockSignatureTracker # imm = 0xCA90
	movw	$195, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB87_566
# %bb.562:                              # %Buffer__50
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17368, %ax             # imm = 0x43D8
	cmpw	$-30392, %ax            # imm = 0x8948
	jne	.LBB87_584
# %bb.563:                              # %think.split1630
	movw	$-30392, BasicBlockSignatureTracker # imm = 0x8948
	movw	$17368, RunTimeSignatureAdjuster # imm = 0x43D8
# %bb.564:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$40, %ax
	xorw	%cx, %ax
	cmpw	$-13640, %ax            # imm = 0xCAB8
	jne	.LBB87_584
# %bb.565:                              # %think.split1728
	movabsq	$.L.str.13.138, %rdi
	movl	$1, must_sit
	movb	$0, %al
	callq	printf
	movw	$-13640, BasicBlockSignatureTracker # imm = 0xCAB8
	movw	$235, RunTimeSignatureAdjuster
.LBB87_566:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$130, %ax
	xorw	%cx, %ax
	cmpw	$-13615, %ax            # imm = 0xCAD1
	jne	.LBB87_584
# %bb.567:                              # %think.split1622
	movw	$-13615, BasicBlockSignatureTracker # imm = 0xCAD1
	movw	$155, RunTimeSignatureAdjuster
.LBB87_568:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$156, %ax
	xorw	%cx, %ax
	cmpw	$-13610, %ax            # imm = 0xCAD6
	jne	.LBB87_584
# %bb.569:                              # %think.split1618
	movw	$-13610, BasicBlockSignatureTracker # imm = 0xCAD6
	movw	$800, RunTimeSignatureAdjuster # imm = 0x320
.LBB87_570:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$814, %ax               # imm = 0x32E
	xorw	%cx, %ax
	cmpw	$-13608, %ax            # imm = 0xCAD8
	jne	.LBB87_584
# %bb.571:                              # %think.split1592
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movq	(%rcx), %rax
	movq	%rax, (%rbx)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rbx)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rbx)
	movw	$-13608, BasicBlockSignatureTracker # imm = 0xCAD8
	movw	$3071, RunTimeSignatureAdjuster # imm = 0xBFF
.LBB87_572:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3021, %ax              # imm = 0xBCD
	xorw	%cx, %ax
	cmpw	$-13590, %ax            # imm = 0xCAEA
	jne	.LBB87_584
# %bb.573:                              # %think.split1174
	movw	$-13590, BasicBlockSignatureTracker # imm = 0xCAEA
	movw	$-8652, RunTimeSignatureAdjuster # imm = 0xDE34
	movq	%rbx, %rax
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB87_574:                             # %CFerrorHandler.think.loopexit
	jmp	.LBB87_584
.LBB87_575:                             # %CFerrorHandler.think.loopexit1
	jmp	.LBB87_584
.LBB87_576:                             # %CFerrorHandler.think.loopexit2
	jmp	.LBB87_584
.LBB87_577:                             # %CFerrorHandler.think.loopexit3
	jmp	.LBB87_584
.LBB87_578:                             # %CFerrorHandler.think.loopexit4
	jmp	.LBB87_584
.LBB87_579:                             # %CFerrorHandler.think.loopexit6
	jmp	.LBB87_584
.LBB87_580:                             # %CFerrorHandler.think.loopexit7
	jmp	.LBB87_584
.LBB87_581:                             # %CFerrorHandler.think.loopexit8
	jmp	.LBB87_584
.LBB87_582:                             # %CFerrorHandler.think.loopexit9
	jmp	.LBB87_584
.LBB87_583:                             # %CFerrorHandler.think.loopexit10
	jmp	.LBB87_584
.LBB87_584:                             # %CFerrorHandler.think
	callq	FAULT_DETECTED_CFC
.Lfunc_end87:
	.size	think, .Lfunc_end87-think
	.cfi_endproc
                                        # -- End function
	.globl	tree                    # -- Begin function tree
	.p2align	4, 0x90
	.type	tree,@function
tree:                                   # @tree
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$365, %ax               # imm = 0x16D
	xorw	%bx, %ax
	cmpw	$-13569, %ax            # imm = 0xCAFF
	jne	.LBB88_36
# %bb.1:                                # %tree.split93
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$365, %ax               # imm = 0x16D
	xorw	%bx, %ax
	cmpw	$-13569, %ax            # imm = 0xCAFF
	jne	.LBB88_36
# %bb.2:                                # %tree.split89
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r9
	addq	$-12288, %r9            # imm = 0xD000
	movq	%r9, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movl	%edi, (%r15)
	movl	%esi, (%r8)
	movq	%rdx, (%r12)
	movq	%rcx, (%r13)
	movl	$0, (%r14)
	movl	(%r15), %eax
	movw	$-13569, BasicBlockSignatureTracker # imm = 0xCAFF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB88_5
# %bb.3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$510, %ax               # imm = 0x1FE
	cmpw	$-13567, %ax            # imm = 0xCB01
	jne	.LBB88_36
# %bb.4:                                # %tree.split65
	movw	$-13567, BasicBlockSignatureTracker # imm = 0xCB01
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB88_32
.LBB88_5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$505, %ax               # imm = 0x1F9
	cmpw	$-13562, %ax            # imm = 0xCB06
	jne	.LBB88_36
# %bb.6:                                # %tree.split
	movw	$-13562, BasicBlockSignatureTracker # imm = 0xCB06
	movw	$16790, RunTimeSignatureAdjuster # imm = 0x4196
	movq	%r9, %rdi
	movq	%r9, -56(%rbp)          # 8-byte Spill
	movq	%r8, -64(%rbp)          # 8-byte Spill
	movq	%r11, -48(%rbp)         # 8-byte Spill
	movq	%r10, -72(%rbp)         # 8-byte Spill
	movq	%rbx, -80(%rbp)         # 8-byte Spill
	callq	gen
	movw	$-13562, BasicBlockSignatureTracker # imm = 0xCB06
	movw	$16790, RunTimeSignatureAdjuster # imm = 0x4196
	movl	numb_moves, %eax
	movl	%eax, (%r14)
	movw	$-13562, BasicBlockSignatureTracker # imm = 0xCB06
	movw	$16777, RunTimeSignatureAdjuster # imm = 0x4189
	callq	in_check
	movq	-80(%rbp), %rbx         # 8-byte Reload
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movw	$-13562, BasicBlockSignatureTracker # imm = 0xCB06
	movw	$16777, RunTimeSignatureAdjuster # imm = 0x4189
	movl	%eax, (%rbx)
	movl	$0, (%rdx)
	movw	$-13562, BasicBlockSignatureTracker # imm = 0xCB06
	movw	$0, RunTimeSignatureAdjuster
.LBB88_7:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB88_15 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$-13531, %ax            # imm = 0xCB25
	jne	.LBB88_35
# %bb.8:                                # %tree.split69
                                        #   in Loop: Header=BB88_7 Depth=1
	movl	(%rdx), %eax
	movl	(%r14), %ecx
	movw	$-13531, BasicBlockSignatureTracker # imm = 0xCB25
	movw	$36, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB88_31
# %bb.9:                                # %Buffer__
                                        #   in Loop: Header=BB88_7 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23148, %ax             # imm = 0x5A6C
	cmpw	$-28343, %ax            # imm = 0x9149
	jne	.LBB88_35
# %bb.10:                               # %tree.split71
                                        #   in Loop: Header=BB88_7 Depth=1
	movw	$-28343, BasicBlockSignatureTracker # imm = 0x9149
	movw	$23148, RunTimeSignatureAdjuster # imm = 0x5A6C
# %bb.11:                               #   in Loop: Header=BB88_7 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-13526, %ax            # imm = 0xCB2A
	jne	.LBB88_35
# %bb.12:                               # %tree.split95
                                        #   in Loop: Header=BB88_7 Depth=1
	movl	(%rdx), %esi
	movw	$-13526, BasicBlockSignatureTracker # imm = 0xCB2A
	movw	$16794, RunTimeSignatureAdjuster # imm = 0x419A
	callq	make
	movw	$-13526, BasicBlockSignatureTracker # imm = 0xCB2A
	movw	$16794, RunTimeSignatureAdjuster # imm = 0x419A
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movl	(%rbx), %edx
	movw	$-13526, BasicBlockSignatureTracker # imm = 0xCB2A
	movw	$16794, RunTimeSignatureAdjuster # imm = 0x419A
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	check_legal
	movw	$-13526, BasicBlockSignatureTracker # imm = 0xCB2A
	movw	$16794, RunTimeSignatureAdjuster # imm = 0x419A
	movw	$-13526, BasicBlockSignatureTracker # imm = 0xCB2A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB88_27
# %bb.13:                               #   in Loop: Header=BB88_7 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-13522, %ax            # imm = 0xCB2E
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	-72(%rbp), %rcx         # 8-byte Reload
	jne	.LBB88_35
# %bb.14:                               # %tree.split73
                                        #   in Loop: Header=BB88_7 Depth=1
	movl	$0, (%rcx)
	movw	$-13522, BasicBlockSignatureTracker # imm = 0xCB2E
	movw	$0, RunTimeSignatureAdjuster
.LBB88_15:                              #   Parent Loop BB88_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %r8w
	xorw	$18, %ax
	xorw	%r8w, %ax
	cmpw	$-13508, %ax            # imm = 0xCB3C
	jne	.LBB88_34
# %bb.16:                               # %tree.split77
                                        #   in Loop: Header=BB88_15 Depth=2
	movl	(%rcx), %eax
	movl	(%rdx), %ecx
	movw	$-13508, BasicBlockSignatureTracker # imm = 0xCB3C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB88_21
# %bb.17:                               #   in Loop: Header=BB88_15 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-13507, %ax            # imm = 0xCB3D
	jne	.LBB88_34
# %bb.18:                               # %tree.split79
                                        #   in Loop: Header=BB88_15 Depth=2
	movq	(%r12), %rsi
	movl	$32, %edi
	callq	fputc
	movw	$-13507, BasicBlockSignatureTracker # imm = 0xCB3D
	movw	$0, RunTimeSignatureAdjuster
# %bb.19:                               #   in Loop: Header=BB88_15 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$-13498, %ax            # imm = 0xCB46
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rdx         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	-72(%rbp), %rcx         # 8-byte Reload
	jne	.LBB88_34
# %bb.20:                               # %tree.split83
                                        #   in Loop: Header=BB88_15 Depth=2
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-13498, BasicBlockSignatureTracker # imm = 0xCB46
	movw	$104, RunTimeSignatureAdjuster
	jmp	.LBB88_15
.LBB88_21:                              #   in Loop: Header=BB88_7 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$108, %ax
	cmpw	$-13488, %ax            # imm = 0xCB50
	jne	.LBB88_35
# %bb.22:                               # %tree.split81
                                        #   in Loop: Header=BB88_7 Depth=1
	movl	(%rsi), %esi
	movq	(%r12), %rdx
	movw	$-13488, BasicBlockSignatureTracker # imm = 0xCB50
	movw	$0, RunTimeSignatureAdjuster
	callq	print_move
	movabsq	$.L.str.14.139, %rsi
	movw	$-13488, BasicBlockSignatureTracker # imm = 0xCB50
	movw	$0, RunTimeSignatureAdjuster
	movq	(%r12), %rdi
	movb	$0, %al
	callq	fprintf
	movq	(%r13), %rax
	movsbl	(%rax), %eax
	movw	$-13488, BasicBlockSignatureTracker # imm = 0xCB50
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$121, %eax
	jne	.LBB88_25
# %bb.23:                               #   in Loop: Header=BB88_7 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$220, %ax
	cmpw	$-13428, %ax            # imm = 0xCB8C
	jne	.LBB88_35
# %bb.24:                               # %tree.split85
                                        #   in Loop: Header=BB88_7 Depth=1
	movq	(%r12), %rdi
	movw	$-13428, BasicBlockSignatureTracker # imm = 0xCB8C
	movw	$-8366, RunTimeSignatureAdjuster # imm = 0xDF52
	movl	$1, %esi
	callq	display_board
	movw	$-13428, BasicBlockSignatureTracker # imm = 0xCB8C
	movw	$-8366, RunTimeSignatureAdjuster # imm = 0xDF52
	movw	$-13428, BasicBlockSignatureTracker # imm = 0xCB8C
	movw	$220, RunTimeSignatureAdjuster
.LBB88_25:                              #   in Loop: Header=BB88_7 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$194, %ax
	xorw	%cx, %ax
	cmpw	$-13422, %ax            # imm = 0xCB92
	movq	-64(%rbp), %rax         # 8-byte Reload
	jne	.LBB88_35
# %bb.26:                               # %tree.split87
                                        #   in Loop: Header=BB88_7 Depth=1
	movl	(%r15), %edi
	subl	$1, %edi
	movl	(%rax), %esi
	addl	$2, %esi
	movq	(%r12), %rdx
	movq	(%r13), %rcx
	movw	$-13422, BasicBlockSignatureTracker # imm = 0xCB92
	movw	$0, RunTimeSignatureAdjuster
	callq	tree
	movw	$-13422, BasicBlockSignatureTracker # imm = 0xCB92
	movw	$184, RunTimeSignatureAdjuster
	movw	$-13422, BasicBlockSignatureTracker # imm = 0xCB92
	movw	$184, RunTimeSignatureAdjuster
.LBB88_27:                              #   in Loop: Header=BB88_7 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$188, %ax
	xorw	%cx, %ax
	cmpw	$-13418, %ax            # imm = 0xCB96
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB88_35
# %bb.28:                               # %tree.split75
                                        #   in Loop: Header=BB88_7 Depth=1
	movl	(%rax), %esi
	movw	$-13418, BasicBlockSignatureTracker # imm = 0xCB96
	movw	$16753, RunTimeSignatureAdjuster # imm = 0x4171
	callq	unmake
	movw	$-13418, BasicBlockSignatureTracker # imm = 0xCB96
	movw	$16753, RunTimeSignatureAdjuster # imm = 0x4171
	movw	$-13418, BasicBlockSignatureTracker # imm = 0xCB96
	movw	$0, RunTimeSignatureAdjuster
# %bb.29:                               #   in Loop: Header=BB88_7 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-13415, %ax            # imm = 0xCB99
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	-80(%rbp), %rbx         # 8-byte Reload
	jne	.LBB88_35
# %bb.30:                               # %tree.split91
                                        #   in Loop: Header=BB88_7 Depth=1
	movl	(%rdx), %eax
	addl	$1, %eax
	movl	%eax, (%rdx)
	movw	$-13415, BasicBlockSignatureTracker # imm = 0xCB99
	movw	$159, RunTimeSignatureAdjuster
	jmp	.LBB88_7
.LBB88_31:                              # %.loopexit
	jmp	.LBB88_32
.LBB88_32:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$157, %ax
	xorw	%cx, %ax
	cmpw	$-13412, %ax            # imm = 0xCB9C
	jne	.LBB88_36
# %bb.33:                               # %tree.split67
	movw	$-13412, BasicBlockSignatureTracker # imm = 0xCB9C
	movw	$204, RunTimeSignatureAdjuster
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB88_34:                              # %CFerrorHandler.tree.loopexit
	jmp	.LBB88_36
.LBB88_35:                              # %CFerrorHandler.tree.loopexit1
	jmp	.LBB88_36
.LBB88_36:                              # %CFerrorHandler.tree
	callq	FAULT_DETECTED_CFC
.Lfunc_end88:
	.size	tree, .Lfunc_end88-tree
	.cfi_endproc
                                        # -- End function
	.globl	setup_attackers         # -- Begin function setup_attackers
	.p2align	4, 0x90
	.type	setup_attackers,@function
setup_attackers:                        # @setup_attackers
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1435, %ax              # imm = 0x59B
	xorw	%cx, %ax
	cmpw	$-13407, %ax            # imm = 0xCBA1
	jne	.LBB89_149
# %bb.1:                                # %setup_attackers.split385
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movl	%edi, (%r10)
	movl	see_num_attackers, %eax
	movl	%eax, (%rsi)
	movl	see_num_attackers+4, %eax
	movl	%eax, (%r11)
	movl	$0, (%rcx)
	movw	$-13407, BasicBlockSignatureTracker # imm = 0xCBA1
	movw	$0, RunTimeSignatureAdjuster
.LBB89_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB89_14 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$13, %ax
	xorw	%dx, %ax
	cmpw	$-13396, %ax            # imm = 0xCBAC
	jne	.LBB89_148
# %bb.3:                                # %setup_attackers.split
                                        #   in Loop: Header=BB89_2 Depth=1
	movl	(%rcx), %eax
	movw	$-13396, BasicBlockSignatureTracker # imm = 0xCBAC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jge	.LBB89_51
# %bb.4:                                #   in Loop: Header=BB89_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$108, %ax
	cmpw	$-13376, %ax            # imm = 0xCBC0
	jne	.LBB89_148
# %bb.5:                                # %setup_attackers.split261
                                        #   in Loop: Header=BB89_2 Depth=1
	movl	(%r10), %eax
	movslq	(%rcx), %rdx
	addl	setup_attackers.rook_o(,%rdx,4), %eax
	movl	%eax, (%r8)
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movl	%eax, (%r9)
	movl	(%r9), %eax
	movw	$-13376, BasicBlockSignatureTracker # imm = 0xCBC0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB89_8
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-13358, %ax            # imm = 0xCBD2
	jne	.LBB89_149
# %bb.7:                                # %setup_attackers.split265
	movl	(%r9), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers+4(,%rdx,8)
	movl	(%rsi), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	movw	$-13358, BasicBlockSignatureTracker # imm = 0xCBD2
	movw	$126, RunTimeSignatureAdjuster
	jmp	.LBB89_52
.LBB89_8:                               #   in Loop: Header=BB89_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$36, %ax
	cmpw	$-13340, %ax            # imm = 0xCBE4
	jne	.LBB89_148
# %bb.9:                                # %setup_attackers.split267
                                        #   in Loop: Header=BB89_2 Depth=1
	movl	(%r9), %eax
	movw	$-13340, BasicBlockSignatureTracker # imm = 0xCBE4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jne	.LBB89_12
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-13333, %ax            # imm = 0xCBEB
	jne	.LBB89_149
# %bb.11:                               # %setup_attackers.split269
	movl	(%r9), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+128(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+132(,%rdx,8)
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$-13333, BasicBlockSignatureTracker # imm = 0xCBEB
	movw	$71, RunTimeSignatureAdjuster
	jmp	.LBB89_52
.LBB89_12:                              #   in Loop: Header=BB89_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-13331, %ax            # imm = 0xCBED
	jne	.LBB89_148
# %bb.13:                               # %setup_attackers.split271
                                        #   in Loop: Header=BB89_2 Depth=1
	movw	$-13331, BasicBlockSignatureTracker # imm = 0xCBED
	movw	$0, RunTimeSignatureAdjuster
.LBB89_14:                              #   Parent Loop BB89_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$25, %ax
	xorw	%dx, %ax
	cmpw	$-13324, %ax            # imm = 0xCBF4
	jne	.LBB89_147
# %bb.15:                               # %setup_attackers.split273
                                        #   in Loop: Header=BB89_14 Depth=2
	movl	(%r9), %eax
	movw	$-13324, BasicBlockSignatureTracker # imm = 0xCBF4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB89_42
# %bb.16:                               #   in Loop: Header=BB89_14 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2044, %ax              # imm = 0x7FC
	cmpw	$-13304, %ax            # imm = 0xCC08
	jne	.LBB89_147
# %bb.17:                               # %setup_attackers.split275
                                        #   in Loop: Header=BB89_14 Depth=2
	movl	(%r9), %eax
	movw	$-13304, BasicBlockSignatureTracker # imm = 0xCC08
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB89_20
# %bb.18:                               #   in Loop: Header=BB89_14 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-13286, %ax            # imm = 0xCC1A
	jne	.LBB89_147
# %bb.19:                               # %setup_attackers.split281
                                        #   in Loop: Header=BB89_14 Depth=2
	movl	(%r9), %eax
	movw	$-13286, BasicBlockSignatureTracker # imm = 0xCC1A
	movw	$18, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB89_22
.LBB89_20:                              #   in Loop: Header=BB89_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$44, %ax
	xorw	%dx, %ax
	cmpw	$-13276, %ax            # imm = 0xCC24
	jne	.LBB89_148
# %bb.21:                               # %setup_attackers.split279
                                        #   in Loop: Header=BB89_2 Depth=1
	movl	(%r9), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers+4(,%rdx,8)
	movl	(%rsi), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	movw	$-13276, BasicBlockSignatureTracker # imm = 0xCC24
	movw	$2000, RunTimeSignatureAdjuster # imm = 0x7D0
	jmp	.LBB89_43
.LBB89_22:                              # %Buffer__
                                        #   in Loop: Header=BB89_14 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8629, %ax             # imm = 0xDE4B
	cmpw	$4689, %ax              # imm = 0x1251
	jne	.LBB89_147
# %bb.23:                               # %setup_attackers.split283
                                        #   in Loop: Header=BB89_14 Depth=2
	movw	$4689, BasicBlockSignatureTracker # imm = 0x1251
	movw	$-8629, RunTimeSignatureAdjuster # imm = 0xDE4B
# %bb.24:                               #   in Loop: Header=BB89_14 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$60, %ax
	xorw	%dx, %ax
	cmpw	$-13274, %ax            # imm = 0xCC26
	jne	.LBB89_147
# %bb.25:                               # %setup_attackers.split387
                                        #   in Loop: Header=BB89_14 Depth=2
	movl	(%r9), %eax
	movw	$-13274, BasicBlockSignatureTracker # imm = 0xCC26
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	je	.LBB89_28
# %bb.26:                               #   in Loop: Header=BB89_14 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-13267, %ax            # imm = 0xCC2D
	jne	.LBB89_147
# %bb.27:                               # %setup_attackers.split287
                                        #   in Loop: Header=BB89_14 Depth=2
	movl	(%r9), %eax
	movw	$-13267, BasicBlockSignatureTracker # imm = 0xCC2D
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB89_30
.LBB89_28:                              #   in Loop: Header=BB89_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$21, %ax
	xorw	%dx, %ax
	cmpw	$-13261, %ax            # imm = 0xCC33
	jne	.LBB89_148
# %bb.29:                               # %setup_attackers.split285
                                        #   in Loop: Header=BB89_2 Depth=1
	movl	(%r9), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+128(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+132(,%rdx,8)
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$-13261, BasicBlockSignatureTracker # imm = 0xCC33
	movw	$1991, RunTimeSignatureAdjuster # imm = 0x7C7
	jmp	.LBB89_43
.LBB89_30:                              # %Buffer__1
                                        #   in Loop: Header=BB89_14 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7902, %ax              # imm = 0x1EDE
	cmpw	$-11533, %ax            # imm = 0xD2F3
	jne	.LBB89_147
# %bb.31:                               # %setup_attackers.split289
                                        #   in Loop: Header=BB89_14 Depth=2
	movw	$-11533, BasicBlockSignatureTracker # imm = 0xD2F3
	movw	$7902, RunTimeSignatureAdjuster # imm = 0x1EDE
# %bb.32:                               #   in Loop: Header=BB89_14 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$26, %ax
	xorw	%dx, %ax
	cmpw	$-13257, %ax            # imm = 0xCC37
	jne	.LBB89_147
# %bb.33:                               # %setup_attackers.split389
                                        #   in Loop: Header=BB89_14 Depth=2
	movl	(%r9), %eax
	movw	$-13257, BasicBlockSignatureTracker # imm = 0xCC37
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB89_36
# %bb.34:                               #   in Loop: Header=BB89_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$-13248, %ax            # imm = 0xCC40
	jne	.LBB89_148
# %bb.35:                               # %setup_attackers.split291
                                        #   in Loop: Header=BB89_2 Depth=1
	movw	$-13248, BasicBlockSignatureTracker # imm = 0xCC40
	movw	$1972, RunTimeSignatureAdjuster # imm = 0x7B4
	jmp	.LBB89_43
.LBB89_36:                              #   in Loop: Header=BB89_14 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$118, %ax
	cmpw	$-13247, %ax            # imm = 0xCC41
	jne	.LBB89_147
# %bb.37:                               # %setup_attackers.split293
                                        #   in Loop: Header=BB89_14 Depth=2
	movw	$-13247, BasicBlockSignatureTracker # imm = 0xCC41
	movw	$0, RunTimeSignatureAdjuster
# %bb.38:                               #   in Loop: Header=BB89_14 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-13244, %ax            # imm = 0xCC44
	jne	.LBB89_147
# %bb.39:                               # %setup_attackers.split295
                                        #   in Loop: Header=BB89_14 Depth=2
	movw	$-13244, BasicBlockSignatureTracker # imm = 0xCC44
	movw	$0, RunTimeSignatureAdjuster
# %bb.40:                               #   in Loop: Header=BB89_14 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-13229, %ax            # imm = 0xCC53
	jne	.LBB89_147
# %bb.41:                               # %setup_attackers.split297
                                        #   in Loop: Header=BB89_14 Depth=2
	movslq	(%rcx), %rax
	movl	setup_attackers.rook_o(,%rax,4), %eax
	addl	(%r8), %eax
	movl	%eax, (%r8)
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movl	%eax, (%r9)
	movw	$-13229, BasicBlockSignatureTracker # imm = 0xCC53
	movw	$1982, RunTimeSignatureAdjuster # imm = 0x7BE
	jmp	.LBB89_14
.LBB89_42:                              # %.loopexit5
                                        #   in Loop: Header=BB89_2 Depth=1
	jmp	.LBB89_43
.LBB89_43:                              #   in Loop: Header=BB89_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$1940, %ax              # imm = 0x794
	xorw	%dx, %ax
	cmpw	$-13216, %ax            # imm = 0xCC60
	jne	.LBB89_148
# %bb.44:                               # %setup_attackers.split277
                                        #   in Loop: Header=BB89_2 Depth=1
	movw	$-13216, BasicBlockSignatureTracker # imm = 0xCC60
	movw	$0, RunTimeSignatureAdjuster
# %bb.45:                               #   in Loop: Header=BB89_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-13215, %ax            # imm = 0xCC61
	jne	.LBB89_148
# %bb.46:                               # %setup_attackers.split299
                                        #   in Loop: Header=BB89_2 Depth=1
	movw	$-13215, BasicBlockSignatureTracker # imm = 0xCC61
	movw	$0, RunTimeSignatureAdjuster
# %bb.47:                               #   in Loop: Header=BB89_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-13207, %ax            # imm = 0xCC69
	jne	.LBB89_148
# %bb.48:                               # %setup_attackers.split301
                                        #   in Loop: Header=BB89_2 Depth=1
	movw	$-13207, BasicBlockSignatureTracker # imm = 0xCC69
	movw	$0, RunTimeSignatureAdjuster
# %bb.49:                               #   in Loop: Header=BB89_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-13203, %ax            # imm = 0xCC6D
	jne	.LBB89_148
# %bb.50:                               # %setup_attackers.split303
                                        #   in Loop: Header=BB89_2 Depth=1
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-13203, BasicBlockSignatureTracker # imm = 0xCC6D
	movw	$1996, RunTimeSignatureAdjuster # imm = 0x7CC
	jmp	.LBB89_2
.LBB89_51:                              # %.loopexit7
	jmp	.LBB89_52
.LBB89_52:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$2004, %ax              # imm = 0x7D4
	xorw	%dx, %ax
	cmpw	$-13192, %ax            # imm = 0xCC78
	jne	.LBB89_149
# %bb.53:                               # %setup_attackers.split263
	movl	$0, (%rcx)
	movw	$-13192, BasicBlockSignatureTracker # imm = 0xCC78
	movw	$0, RunTimeSignatureAdjuster
.LBB89_54:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB89_82 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$254, %ax
	xorw	%dx, %ax
	cmpw	$-13178, %ax            # imm = 0xCC86
	jne	.LBB89_146
# %bb.55:                               # %setup_attackers.split305
                                        #   in Loop: Header=BB89_54 Depth=1
	movl	(%rcx), %eax
	movw	$-13178, BasicBlockSignatureTracker # imm = 0xCC86
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jge	.LBB89_123
# %bb.56:                               #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-13170, %ax            # imm = 0xCC8E
	jne	.LBB89_146
# %bb.57:                               # %setup_attackers.split307
                                        #   in Loop: Header=BB89_54 Depth=1
	movl	(%r10), %eax
	movslq	(%rcx), %rdx
	addl	setup_attackers.bishop_o(,%rdx,4), %eax
	movl	%eax, (%r8)
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movl	%eax, (%r9)
	movl	(%r9), %eax
	movw	$-13170, BasicBlockSignatureTracker # imm = 0xCC8E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB89_64
# %bb.58:                               #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-13155, %ax            # imm = 0xCC9D
	jne	.LBB89_146
# %bb.59:                               # %setup_attackers.split311
                                        #   in Loop: Header=BB89_54 Depth=1
	movl	$2, %edi
	movl	(%rcx), %eax
	cltd
	idivl	%edi
	movw	$-13155, BasicBlockSignatureTracker # imm = 0xCC9D
	movw	$19, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB89_64
# %bb.60:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28506, %ax             # imm = 0x6F5A
	cmpw	$-23609, %ax            # imm = 0xA3C7
	jne	.LBB89_149
# %bb.61:                               # %setup_attackers.split315
	movw	$-23609, BasicBlockSignatureTracker # imm = 0xA3C7
	movw	$28506, RunTimeSignatureAdjuster # imm = 0x6F5A
# %bb.62:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$62, %ax
	xorw	%dx, %ax
	cmpw	$-13149, %ax            # imm = 0xCCA3
	jne	.LBB89_149
# %bb.63:                               # %setup_attackers.split391
	movl	(%r9), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers+4(,%rdx,8)
	movl	(%rsi), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	movw	$-13149, BasicBlockSignatureTracker # imm = 0xCCA3
	movw	$37, RunTimeSignatureAdjuster
	jmp	.LBB89_124
.LBB89_64:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$43, %ax
	xorw	%dx, %ax
	cmpw	$-13147, %ax            # imm = 0xCCA5
	jne	.LBB89_146
# %bb.65:                               # %setup_attackers.split313
                                        #   in Loop: Header=BB89_54 Depth=1
	movl	(%r9), %eax
	movw	$-13147, BasicBlockSignatureTracker # imm = 0xCCA5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB89_72
# %bb.66:                               #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-13144, %ax            # imm = 0xCCA8
	jne	.LBB89_146
# %bb.67:                               # %setup_attackers.split317
                                        #   in Loop: Header=BB89_54 Depth=1
	movl	$2, %edi
	movl	(%rcx), %eax
	cltd
	idivl	%edi
	movw	$-13144, BasicBlockSignatureTracker # imm = 0xCCA8
	movw	$13, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jne	.LBB89_72
# %bb.68:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25530, %ax            # imm = 0x9C46
	cmpw	$20718, %ax             # imm = 0x50EE
	jne	.LBB89_149
# %bb.69:                               # %setup_attackers.split321
	movw	$20718, BasicBlockSignatureTracker # imm = 0x50EE
	movw	$-25530, RunTimeSignatureAdjuster # imm = 0x9C46
# %bb.70:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$2, %ax
	xorw	%dx, %ax
	cmpw	$-13142, %ax            # imm = 0xCCAA
	jne	.LBB89_149
# %bb.71:                               # %setup_attackers.split393
	movl	(%r9), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+128(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+132(,%rdx,8)
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$-13142, BasicBlockSignatureTracker # imm = 0xCCAA
	movw	$44, RunTimeSignatureAdjuster
	jmp	.LBB89_124
.LBB89_72:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$11, %ax
	xorw	%dx, %ax
	cmpw	$-13138, %ax            # imm = 0xCCAE
	jne	.LBB89_146
# %bb.73:                               # %setup_attackers.split319
                                        #   in Loop: Header=BB89_54 Depth=1
	movl	(%r9), %eax
	movw	$-13138, BasicBlockSignatureTracker # imm = 0xCCAE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB89_76
# %bb.74:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-13137, %ax            # imm = 0xCCAF
	jne	.LBB89_149
# %bb.75:                               # %setup_attackers.split323
	movl	(%r9), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers+4(,%rdx,8)
	movl	(%rsi), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	movw	$-13137, BasicBlockSignatureTracker # imm = 0xCCAF
	movw	$41, RunTimeSignatureAdjuster
	jmp	.LBB89_124
.LBB89_76:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-13133, %ax            # imm = 0xCCB3
	jne	.LBB89_146
# %bb.77:                               # %setup_attackers.split325
                                        #   in Loop: Header=BB89_54 Depth=1
	movl	(%r9), %eax
	movw	$-13133, BasicBlockSignatureTracker # imm = 0xCCB3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jne	.LBB89_80
# %bb.78:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-13130, %ax            # imm = 0xCCB6
	jne	.LBB89_149
# %bb.79:                               # %setup_attackers.split327
	movl	(%r9), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+128(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+132(,%rdx,8)
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$-13130, BasicBlockSignatureTracker # imm = 0xCCB6
	movw	$48, RunTimeSignatureAdjuster
	jmp	.LBB89_124
.LBB89_80:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$-13112, %ax            # imm = 0xCCC8
	jne	.LBB89_146
# %bb.81:                               # %setup_attackers.split329
                                        #   in Loop: Header=BB89_54 Depth=1
	movw	$-13112, BasicBlockSignatureTracker # imm = 0xCCC8
	movw	$0, RunTimeSignatureAdjuster
.LBB89_82:                              #   Parent Loop BB89_54 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$1, %ax
	xorw	%dx, %ax
	cmpw	$-13111, %ax            # imm = 0xCCC9
	jne	.LBB89_145
# %bb.83:                               # %setup_attackers.split331
                                        #   in Loop: Header=BB89_82 Depth=2
	movl	(%r9), %eax
	movw	$-13111, BasicBlockSignatureTracker # imm = 0xCCC9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB89_110
# %bb.84:                               #   in Loop: Header=BB89_82 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-13107, %ax            # imm = 0xCCCD
	jne	.LBB89_145
# %bb.85:                               # %setup_attackers.split333
                                        #   in Loop: Header=BB89_82 Depth=2
	movl	(%r9), %eax
	movw	$-13107, BasicBlockSignatureTracker # imm = 0xCCCD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB89_88
# %bb.86:                               #   in Loop: Header=BB89_82 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31, %ax
	cmpw	$-13102, %ax            # imm = 0xCCD2
	jne	.LBB89_145
# %bb.87:                               # %setup_attackers.split339
                                        #   in Loop: Header=BB89_82 Depth=2
	movl	(%r9), %eax
	movw	$-13102, BasicBlockSignatureTracker # imm = 0xCCD2
	movw	$31, RunTimeSignatureAdjuster
	cmpl	$9, %eax
	jne	.LBB89_90
.LBB89_88:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$21, %ax
	xorw	%dx, %ax
	cmpw	$-13096, %ax            # imm = 0xCCD8
	jne	.LBB89_146
# %bb.89:                               # %setup_attackers.split337
                                        #   in Loop: Header=BB89_54 Depth=1
	movl	(%r9), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers+4(,%rdx,8)
	movl	(%rsi), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	movw	$-13096, BasicBlockSignatureTracker # imm = 0xCCD8
	movw	$17, RunTimeSignatureAdjuster
	jmp	.LBB89_111
.LBB89_90:                              # %Buffer__4
                                        #   in Loop: Header=BB89_82 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16412, %ax             # imm = 0x401C
	cmpw	$-29490, %ax            # imm = 0x8CCE
	jne	.LBB89_145
# %bb.91:                               # %setup_attackers.split341
                                        #   in Loop: Header=BB89_82 Depth=2
	movw	$-29490, BasicBlockSignatureTracker # imm = 0x8CCE
	movw	$16412, RunTimeSignatureAdjuster # imm = 0x401C
# %bb.92:                               #   in Loop: Header=BB89_82 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$58, %ax
	xorw	%dx, %ax
	cmpw	$-13080, %ax            # imm = 0xCCE8
	jne	.LBB89_145
# %bb.93:                               # %setup_attackers.split395
                                        #   in Loop: Header=BB89_82 Depth=2
	movl	(%r9), %eax
	movw	$-13080, BasicBlockSignatureTracker # imm = 0xCCE8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	je	.LBB89_96
# %bb.94:                               #   in Loop: Header=BB89_82 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-13079, %ax            # imm = 0xCCE9
	jne	.LBB89_145
# %bb.95:                               # %setup_attackers.split345
                                        #   in Loop: Header=BB89_82 Depth=2
	movl	(%r9), %eax
	movw	$-13079, BasicBlockSignatureTracker # imm = 0xCCE9
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	jne	.LBB89_98
.LBB89_96:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$29, %ax
	xorw	%dx, %ax
	cmpw	$-13067, %ax            # imm = 0xCCF5
	jne	.LBB89_146
# %bb.97:                               # %setup_attackers.split343
                                        #   in Loop: Header=BB89_54 Depth=1
	movl	(%r9), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+128(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+132(,%rdx,8)
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$-13067, BasicBlockSignatureTracker # imm = 0xCCF5
	movw	$60, RunTimeSignatureAdjuster
	jmp	.LBB89_111
.LBB89_98:                              # %Buffer__5
                                        #   in Loop: Header=BB89_82 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25128, %ax            # imm = 0x9DD8
	cmpw	$20785, %ax             # imm = 0x5131
	jne	.LBB89_145
# %bb.99:                               # %setup_attackers.split347
                                        #   in Loop: Header=BB89_82 Depth=2
	movw	$20785, BasicBlockSignatureTracker # imm = 0x5131
	movw	$-25128, RunTimeSignatureAdjuster # imm = 0x9DD8
# %bb.100:                              #   in Loop: Header=BB89_82 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$509, %ax               # imm = 0x1FD
	xorw	%dx, %ax
	cmpw	$-13036, %ax            # imm = 0xCD14
	jne	.LBB89_145
# %bb.101:                              # %setup_attackers.split397
                                        #   in Loop: Header=BB89_82 Depth=2
	movl	(%r9), %eax
	movw	$-13036, BasicBlockSignatureTracker # imm = 0xCD14
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB89_104
# %bb.102:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-13032, %ax            # imm = 0xCD18
	jne	.LBB89_146
# %bb.103:                              # %setup_attackers.split349
                                        #   in Loop: Header=BB89_54 Depth=1
	movw	$-13032, BasicBlockSignatureTracker # imm = 0xCD18
	movw	$465, RunTimeSignatureAdjuster # imm = 0x1D1
	jmp	.LBB89_111
.LBB89_104:                             #   in Loop: Header=BB89_82 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-13030, %ax            # imm = 0xCD1A
	jne	.LBB89_145
# %bb.105:                              # %setup_attackers.split351
                                        #   in Loop: Header=BB89_82 Depth=2
	movw	$-13030, BasicBlockSignatureTracker # imm = 0xCD1A
	movw	$0, RunTimeSignatureAdjuster
# %bb.106:                              #   in Loop: Header=BB89_82 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-13026, %ax            # imm = 0xCD1E
	jne	.LBB89_145
# %bb.107:                              # %setup_attackers.split353
                                        #   in Loop: Header=BB89_82 Depth=2
	movw	$-13026, BasicBlockSignatureTracker # imm = 0xCD1E
	movw	$0, RunTimeSignatureAdjuster
# %bb.108:                              #   in Loop: Header=BB89_82 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-13023, %ax            # imm = 0xCD21
	jne	.LBB89_145
# %bb.109:                              # %setup_attackers.split355
                                        #   in Loop: Header=BB89_82 Depth=2
	movslq	(%rcx), %rax
	movl	setup_attackers.bishop_o(,%rax,4), %eax
	addl	(%r8), %eax
	movl	%eax, (%r8)
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movl	%eax, (%r9)
	movw	$-13023, BasicBlockSignatureTracker # imm = 0xCD21
	movw	$489, RunTimeSignatureAdjuster # imm = 0x1E9
	jmp	.LBB89_82
.LBB89_110:                             # %.loopexit
                                        #   in Loop: Header=BB89_54 Depth=1
	jmp	.LBB89_111
.LBB89_111:                             #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$482, %ax               # imm = 0x1E2
	xorw	%dx, %ax
	cmpw	$-13013, %ax            # imm = 0xCD2B
	jne	.LBB89_146
# %bb.112:                              # %setup_attackers.split335
                                        #   in Loop: Header=BB89_54 Depth=1
	movw	$-13013, BasicBlockSignatureTracker # imm = 0xCD2B
	movw	$0, RunTimeSignatureAdjuster
# %bb.113:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$106, %ax
	cmpw	$-12991, %ax            # imm = 0xCD41
	jne	.LBB89_146
# %bb.114:                              # %setup_attackers.split357
                                        #   in Loop: Header=BB89_54 Depth=1
	movw	$-12991, BasicBlockSignatureTracker # imm = 0xCD41
	movw	$0, RunTimeSignatureAdjuster
# %bb.115:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-12981, %ax            # imm = 0xCD4B
	jne	.LBB89_146
# %bb.116:                              # %setup_attackers.split359
                                        #   in Loop: Header=BB89_54 Depth=1
	movw	$-12981, BasicBlockSignatureTracker # imm = 0xCD4B
	movw	$0, RunTimeSignatureAdjuster
# %bb.117:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-12965, %ax            # imm = 0xCD5B
	jne	.LBB89_146
# %bb.118:                              # %setup_attackers.split361
                                        #   in Loop: Header=BB89_54 Depth=1
	movw	$-12965, BasicBlockSignatureTracker # imm = 0xCD5B
	movw	$0, RunTimeSignatureAdjuster
# %bb.119:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-12960, %ax            # imm = 0xCD60
	jne	.LBB89_146
# %bb.120:                              # %setup_attackers.split363
                                        #   in Loop: Header=BB89_54 Depth=1
	movw	$-12960, BasicBlockSignatureTracker # imm = 0xCD60
	movw	$0, RunTimeSignatureAdjuster
# %bb.121:                              #   in Loop: Header=BB89_54 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-12938, %ax            # imm = 0xCD76
	jne	.LBB89_146
# %bb.122:                              # %setup_attackers.split365
                                        #   in Loop: Header=BB89_54 Depth=1
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-12938, BasicBlockSignatureTracker # imm = 0xCD76
	movw	$270, RunTimeSignatureAdjuster # imm = 0x10E
	jmp	.LBB89_54
.LBB89_123:                             # %.loopexit3
	jmp	.LBB89_124
.LBB89_124:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$261, %ax               # imm = 0x105
	xorw	%dx, %ax
	cmpw	$-12925, %ax            # imm = 0xCD83
	jne	.LBB89_149
# %bb.125:                              # %setup_attackers.split309
	movl	$0, (%rcx)
	movw	$-12925, BasicBlockSignatureTracker # imm = 0xCD83
	movw	$0, RunTimeSignatureAdjuster
.LBB89_126:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$9, %ax
	xorw	%dx, %ax
	cmpw	$-12918, %ax            # imm = 0xCD8A
	jne	.LBB89_144
# %bb.127:                              # %setup_attackers.split367
                                        #   in Loop: Header=BB89_126 Depth=1
	movl	(%rcx), %eax
	movw	$-12918, BasicBlockSignatureTracker # imm = 0xCD8A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jge	.LBB89_142
# %bb.128:                              #   in Loop: Header=BB89_126 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-12912, %ax            # imm = 0xCD90
	jne	.LBB89_144
# %bb.129:                              # %setup_attackers.split369
                                        #   in Loop: Header=BB89_126 Depth=1
	movl	(%r10), %eax
	movslq	(%rcx), %rdx
	addl	setup_attackers.knight_o(,%rdx,4), %eax
	movl	%eax, (%r8)
	movslq	(%r8), %rax
	movl	board(,%rax,4), %eax
	movl	%eax, (%r9)
	movl	(%r9), %eax
	movw	$-12912, BasicBlockSignatureTracker # imm = 0xCD90
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB89_132
# %bb.130:                              #   in Loop: Header=BB89_126 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-12908, %ax            # imm = 0xCD94
	jne	.LBB89_144
# %bb.131:                              # %setup_attackers.split373
                                        #   in Loop: Header=BB89_126 Depth=1
	movl	(%r9), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%rsi), %rdx
	movl	%eax, see_attackers+4(,%rdx,8)
	movl	(%rsi), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	movw	$-12908, BasicBlockSignatureTracker # imm = 0xCD94
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB89_138
.LBB89_132:                             #   in Loop: Header=BB89_126 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$52, %ax
	cmpw	$-12892, %ax            # imm = 0xCDA4
	jne	.LBB89_144
# %bb.133:                              # %setup_attackers.split375
                                        #   in Loop: Header=BB89_126 Depth=1
	movl	(%r9), %eax
	movw	$-12892, BasicBlockSignatureTracker # imm = 0xCDA4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB89_136
# %bb.134:                              #   in Loop: Header=BB89_126 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-12891, %ax            # imm = 0xCDA5
	jne	.LBB89_144
# %bb.135:                              # %setup_attackers.split379
                                        #   in Loop: Header=BB89_126 Depth=1
	movl	(%r9), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+128(,%rdx,8)
	movl	(%r8), %eax
	movslq	(%r11), %rdx
	movl	%eax, see_attackers+132(,%rdx,8)
	movl	(%r11), %eax
	addl	$1, %eax
	movl	%eax, (%r11)
	movw	$-12891, BasicBlockSignatureTracker # imm = 0xCDA5
	movw	$1, RunTimeSignatureAdjuster
.LBB89_136:                             #   in Loop: Header=BB89_126 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$12, %ax
	xorw	%dx, %ax
	cmpw	$-12888, %ax            # imm = 0xCDA8
	jne	.LBB89_144
# %bb.137:                              # %setup_attackers.split381
                                        #   in Loop: Header=BB89_126 Depth=1
	movw	$-12888, BasicBlockSignatureTracker # imm = 0xCDA8
	movw	$60, RunTimeSignatureAdjuster
.LBB89_138:                             #   in Loop: Header=BB89_126 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$56, %ax
	xorw	%dx, %ax
	cmpw	$-12884, %ax            # imm = 0xCDAC
	jne	.LBB89_144
# %bb.139:                              # %setup_attackers.split377
                                        #   in Loop: Header=BB89_126 Depth=1
	movw	$-12884, BasicBlockSignatureTracker # imm = 0xCDAC
	movw	$0, RunTimeSignatureAdjuster
# %bb.140:                              #   in Loop: Header=BB89_126 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-12881, %ax            # imm = 0xCDAF
	jne	.LBB89_144
# %bb.141:                              # %setup_attackers.split383
                                        #   in Loop: Header=BB89_126 Depth=1
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-12881, BasicBlockSignatureTracker # imm = 0xCDAF
	movw	$44, RunTimeSignatureAdjuster
	jmp	.LBB89_126
.LBB89_142:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-12873, %ax            # imm = 0xCDB7
	jne	.LBB89_149
# %bb.143:                              # %setup_attackers.split371
	movl	(%rsi), %eax
	movl	%eax, see_num_attackers
	movl	(%r11), %eax
	movl	%eax, see_num_attackers+4
	movw	$-12873, BasicBlockSignatureTracker # imm = 0xCDB7
	movw	$27476, RunTimeSignatureAdjuster # imm = 0x6B54
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB89_144:                             # %CFerrorHandler.setup_attackers.loopexit
	jmp	.LBB89_149
.LBB89_145:                             # %CFerrorHandler.setup_attackers.loopexit1
	jmp	.LBB89_149
.LBB89_146:                             # %CFerrorHandler.setup_attackers.loopexit2
	jmp	.LBB89_149
.LBB89_147:                             # %CFerrorHandler.setup_attackers.loopexit4
	jmp	.LBB89_149
.LBB89_148:                             # %CFerrorHandler.setup_attackers.loopexit6
	jmp	.LBB89_149
.LBB89_149:                             # %CFerrorHandler.setup_attackers
	callq	FAULT_DETECTED_CFC
.Lfunc_end89:
	.size	setup_attackers, .Lfunc_end89-setup_attackers
	.cfi_endproc
                                        # -- End function
	.globl	findlowest              # -- Begin function findlowest
	.p2align	4, 0x90
	.type	findlowest,@function
findlowest:                             # @findlowest
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$914, %ax               # imm = 0x392
	xorw	%cx, %ax
	cmpw	$-12852, %ax            # imm = 0xCDCC
	jne	.LBB90_15
# %bb.1:                                # %findlowest.split35
	movabsq	$see_attackers, %rax
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movl	%edi, (%r15)
	movl	%esi, (%rbx)
	movl	(%rbx), %ecx
	movl	%ecx, (%r14)
	movslq	(%r15), %rcx
	shlq	$7, %rcx
	addq	%rcx, %rax
	movslq	(%rbx), %rcx
	movslq	(%rax,%rcx,8), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, (%r13)
	movl	(%rbx), %eax
	movl	%eax, (%r12)
	movw	$-12852, BasicBlockSignatureTracker # imm = 0xCDCC
	movw	$0, RunTimeSignatureAdjuster
.LBB90_2:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-12851, %ax            # imm = 0xCDCD
	jne	.LBB90_14
# %bb.3:                                # %findlowest.split
                                        #   in Loop: Header=BB90_2 Depth=1
	movl	(%r12), %eax
	movslq	(%r15), %rcx
	movl	see_num_attackers(,%rcx,4), %ecx
	movw	$-12851, BasicBlockSignatureTracker # imm = 0xCDCD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB90_12
# %bb.4:                                #   in Loop: Header=BB90_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$-12825, %ax            # imm = 0xCDE7
	jne	.LBB90_14
# %bb.5:                                # %findlowest.split25
                                        #   in Loop: Header=BB90_2 Depth=1
	movabsq	$see_attackers, %rax
	movslq	(%r15), %rcx
	shlq	$7, %rcx
	addq	%rcx, %rax
	movslq	(%r12), %rcx
	movslq	(%rax,%rcx,8), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	(%r13), %ecx
	movw	$-12825, BasicBlockSignatureTracker # imm = 0xCDE7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB90_8
# %bb.6:                                #   in Loop: Header=BB90_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1005, %ax              # imm = 0x3ED
	cmpw	$-12790, %ax            # imm = 0xCE0A
	jne	.LBB90_14
# %bb.7:                                # %findlowest.split29
                                        #   in Loop: Header=BB90_2 Depth=1
	movabsq	$see_attackers, %rax
	movl	(%r12), %ecx
	movl	%ecx, (%r14)
	movslq	(%r15), %rcx
	shlq	$7, %rcx
	addq	%rcx, %rax
	movslq	(%r12), %rcx
	movslq	(%rax,%rcx,8), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, (%r13)
	movw	$-12790, BasicBlockSignatureTracker # imm = 0xCE0A
	movw	$1005, RunTimeSignatureAdjuster # imm = 0x3ED
.LBB90_8:                               #   in Loop: Header=BB90_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1000, %ax              # imm = 0x3E8
	xorw	%cx, %ax
	cmpw	$-12785, %ax            # imm = 0xCE0F
	jne	.LBB90_14
# %bb.9:                                # %findlowest.split31
                                        #   in Loop: Header=BB90_2 Depth=1
	movw	$-12785, BasicBlockSignatureTracker # imm = 0xCE0F
	movw	$0, RunTimeSignatureAdjuster
# %bb.10:                               #   in Loop: Header=BB90_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$-12766, %ax            # imm = 0xCE22
	jne	.LBB90_14
# %bb.11:                               # %findlowest.split33
                                        #   in Loop: Header=BB90_2 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$-12766, BasicBlockSignatureTracker # imm = 0xCE22
	movw	$1006, RunTimeSignatureAdjuster # imm = 0x3EE
	jmp	.LBB90_2
.LBB90_12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$993, %ax               # imm = 0x3E1
	cmpw	$-12756, %ax            # imm = 0xCE2C
	jne	.LBB90_15
# %bb.13:                               # %findlowest.split27
	movabsq	$see_attackers, %rax
	movslq	(%r15), %rcx
	shlq	$7, %rcx
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movslq	(%rbx), %rcx
	movq	(%rdx,%rcx,8), %rcx
	movq	-48(%rbp), %r8          # 8-byte Reload
	movq	%rcx, (%r8)
	movslq	(%r15), %rcx
	shlq	$7, %rcx
	movq	%rax, %rdx
	addq	%rcx, %rdx
	movslq	(%rbx), %rcx
	movslq	(%r15), %rsi
	shlq	$7, %rsi
	movq	%rax, %rdi
	addq	%rsi, %rdi
	movslq	(%r14), %rsi
	movq	(%rdi,%rsi,8), %rsi
	movq	%rsi, (%rdx,%rcx,8)
	movslq	(%r15), %rcx
	shlq	$7, %rcx
	addq	%rcx, %rax
	movslq	(%r14), %rcx
	movq	(%r8), %rdx
	movq	%rdx, (%rax,%rcx,8)
	movw	$-12756, BasicBlockSignatureTracker # imm = 0xCE2C
	movw	$113, RunTimeSignatureAdjuster
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB90_14:                              # %CFerrorHandler.findlowest.loopexit
	jmp	.LBB90_15
.LBB90_15:                              # %CFerrorHandler.findlowest
	callq	FAULT_DETECTED_CFC
.Lfunc_end90:
	.size	findlowest, .Lfunc_end90-findlowest
	.cfi_endproc
                                        # -- End function
	.globl	see                     # -- Begin function see
	.p2align	4, 0x90
	.type	see,@function
see:                                    # @see
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26841, %ax             # imm = 0x68D9
	xorw	%cx, %ax
	cmpw	$-12742, %ax            # imm = 0xCE3A
	jne	.LBB91_59
# %bb.1:                                # %see.split139
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26841, %ax             # imm = 0x68D9
	xorw	%cx, %ax
	cmpw	$-12742, %ax            # imm = 0xCE3A
	jne	.LBB91_59
# %bb.2:                                # %see.split137
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26841, %ax             # imm = 0x68D9
	xorw	%cx, %ax
	cmpw	$-12742, %ax            # imm = 0xCE3A
	jne	.LBB91_59
# %bb.3:                                # %see.split135
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26841, %ax             # imm = 0x68D9
	xorw	%cx, %ax
	cmpw	$-12742, %ax            # imm = 0xCE3A
	jne	.LBB91_59
# %bb.4:                                # %see.split133
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26841, %ax             # imm = 0x68D9
	xorw	%cx, %ax
	cmpw	$-12742, %ax            # imm = 0xCE3A
	jne	.LBB91_59
# %bb.5:                                # %see.split131
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26841, %ax             # imm = 0x68D9
	xorw	%cx, %ax
	cmpw	$-12742, %ax            # imm = 0xCE3A
	jne	.LBB91_59
# %bb.6:                                # %see.split129
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26841, %ax             # imm = 0x68D9
	xorw	%cx, %ax
	cmpw	$-12742, %ax            # imm = 0xCE3A
	jne	.LBB91_59
# %bb.7:                                # %see.split
	movabsq	$see_attackers, %rax
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -80(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -48(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -72(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movl	%edi, (%rbx)
	movl	%esi, (%r12)
	movl	%edx, (%r15)
	movl	$0, see_num_attackers
	movl	$0, see_num_attackers+4
	movslq	(%r15), %rcx
	movl	board(,%rcx,4), %ecx
	movl	%ecx, (%r13)
	movslq	(%r15), %rcx
	movl	$13, board(,%rcx,4)
	movslq	(%rbx), %rcx
	movl	see_num_attackers(,%rcx,4), %edx
	addl	$1, %edx
	movl	%edx, see_num_attackers(,%rcx,4)
	movl	(%r13), %ecx
	movslq	(%rbx), %rdx
	shlq	$7, %rdx
	movq	%rax, %rsi
	addq	%rdx, %rsi
	movl	%ecx, (%rsi)
	movl	(%r15), %ecx
	movslq	(%rbx), %rdx
	shlq	$7, %rdx
	addq	%rdx, %rax
	movl	%ecx, 4(%rax)
	movl	(%r12), %edi
	movw	$-12742, BasicBlockSignatureTracker # imm = 0xCE3A
	movw	$0, RunTimeSignatureAdjuster
	callq	setup_attackers
	movw	$-12742, BasicBlockSignatureTracker # imm = 0xCE3A
	movw	$0, RunTimeSignatureAdjuster
	movslq	(%r12), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	%eax, (%r14)
	cmpl	$0, (%rbx)
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %eax
	cltq
	movl	see_num_attackers(,%rax,4), %eax
	movw	$-12742, BasicBlockSignatureTracker # imm = 0xCE3A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB91_10
# %bb.8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-12740, %ax            # imm = 0xCE3C
	jne	.LBB91_59
# %bb.9:                                # %see.split143
	movl	(%r13), %eax
	movslq	(%r15), %rcx
	movl	%eax, board(,%rcx,4)
	movl	(%r14), %eax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-12740, BasicBlockSignatureTracker # imm = 0xCE3C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB91_56
.LBB91_10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$-12728, %ax            # imm = 0xCE48
	jne	.LBB91_59
# %bb.11:                               # %see.split141
	movl	(%r14), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	$-1000000, (%rax)       # imm = 0xFFF0BDC0
	movw	$-12728, BasicBlockSignatureTracker # imm = 0xCE48
	movw	$0, RunTimeSignatureAdjuster
# %bb.12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-12715, %ax            # imm = 0xCE55
	jne	.LBB91_59
# %bb.13:                               # %see.split147
	movslq	(%rbx), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	$1, (%rcx,%rax,4)
	cmpl	$0, (%rbx)
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %eax
	cltq
	movl	$0, (%rcx,%rax,4)
	cmpl	$0, (%rbx)
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-12715, BasicBlockSignatureTracker # imm = 0xCE55
	movw	$0, RunTimeSignatureAdjuster
.LBB91_14:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-12707, %ax            # imm = 0xCE5D
	jne	.LBB91_58
# %bb.15:                               # %see.split149
                                        #   in Loop: Header=BB91_14 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rax,4), %eax
	movslq	(%rcx), %rcx
	movl	see_num_attackers(,%rcx,4), %ecx
	movw	$-12707, BasicBlockSignatureTracker # imm = 0xCE5D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB91_48
# %bb.16:                               #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-12706, %ax            # imm = 0xCE5E
	jne	.LBB91_58
# %bb.17:                               # %see.split151
                                        #   in Loop: Header=BB91_14 Depth=1
	movq	-56(%rbp), %r12         # 8-byte Reload
	movl	(%r12), %edi
	movslq	(%r12), %rax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %esi
	movw	$-12706, BasicBlockSignatureTracker # imm = 0xCE5E
	movw	$0, RunTimeSignatureAdjuster
	callq	findlowest
	movw	$-12706, BasicBlockSignatureTracker # imm = 0xCE5E
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r12), %eax
	movl	(%rbx), %ecx
	movw	$-12706, BasicBlockSignatureTracker # imm = 0xCE5E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB91_32
# %bb.18:                               #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-12700, %ax            # imm = 0xCE64
	jne	.LBB91_58
# %bb.19:                               # %see.split155
                                        #   in Loop: Header=BB91_14 Depth=1
	movabsq	$see_attackers, %rax
	movq	-56(%rbp), %r12         # 8-byte Reload
	cmpl	$0, (%r12)
	setne	%cl
	xorb	$-1, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movslq	%ecx, %rcx
	shlq	$7, %rcx
	addq	%rcx, %rax
	cmpl	$0, (%r12)
	setne	%cl
	xorb	$-1, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movslq	%ecx, %rcx
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movslq	(%rax,%rcx,8), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	addl	(%r14), %eax
	movl	%eax, (%r14)
	cmpl	$0, (%r12)
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %eax
	cltq
	movl	see_num_attackers(,%rax,4), %eax
	cmpl	$0, (%r12)
	setne	%cl
	xorb	$-1, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movslq	%ecx, %rcx
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$-12700, BasicBlockSignatureTracker # imm = 0xCE64
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB91_26
# %bb.20:                               #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-12693, %ax            # imm = 0xCE6B
	jne	.LBB91_58
# %bb.21:                               # %see.split159
                                        #   in Loop: Header=BB91_14 Depth=1
	movl	(%r14), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-12693, BasicBlockSignatureTracker # imm = 0xCE6B
	movw	$15, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB91_26
# %bb.22:                               # %Buffer__
                                        #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25854, %ax             # imm = 0x64FE
	cmpw	$-21867, %ax            # imm = 0xAA95
	jne	.LBB91_58
# %bb.23:                               # %see.split163
                                        #   in Loop: Header=BB91_14 Depth=1
	movw	$-21867, BasicBlockSignatureTracker # imm = 0xAA95
	movw	$25854, RunTimeSignatureAdjuster # imm = 0x64FE
# %bb.24:                               #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-12690, %ax            # imm = 0xCE6E
	jne	.LBB91_58
# %bb.25:                               # %see.split187
                                        #   in Loop: Header=BB91_14 Depth=1
	movl	(%r14), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-12690, BasicBlockSignatureTracker # imm = 0xCE6E
	movw	$10, RunTimeSignatureAdjuster
.LBB91_26:                              #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$230, %ax
	xorw	%cx, %ax
	cmpw	$-12670, %ax            # imm = 0xCE82
	jne	.LBB91_58
# %bb.27:                               # %see.split161
                                        #   in Loop: Header=BB91_14 Depth=1
	movl	(%r14), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-12670, BasicBlockSignatureTracker # imm = 0xCE82
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB91_30
# %bb.28:                               #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-12649, %ax            # imm = 0xCE97
	jne	.LBB91_58
# %bb.29:                               # %see.split165
                                        #   in Loop: Header=BB91_14 Depth=1
	movl	(%r14), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-12649, BasicBlockSignatureTracker # imm = 0xCE97
	movw	$21, RunTimeSignatureAdjuster
.LBB91_30:                              #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-12644, %ax            # imm = 0xCE9C
	jne	.LBB91_58
# %bb.31:                               # %see.split167
                                        #   in Loop: Header=BB91_14 Depth=1
	movw	$-12644, BasicBlockSignatureTracker # imm = 0xCE9C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB91_46
.LBB91_32:                              #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$195, %ax
	cmpw	$-12643, %ax            # imm = 0xCE9D
	jne	.LBB91_58
# %bb.33:                               # %see.split157
                                        #   in Loop: Header=BB91_14 Depth=1
	movabsq	$see_attackers, %rax
	movq	-56(%rbp), %rdx         # 8-byte Reload
	cmpl	$0, (%rdx)
	setne	%cl
	xorb	$-1, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movslq	%ecx, %rcx
	shlq	$7, %rcx
	addq	%rcx, %rax
	cmpl	$0, (%rdx)
	setne	%cl
	xorb	$-1, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movslq	%ecx, %rcx
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movslq	(%rax,%rcx,8), %rax
	movl	material(,%rax,4), %edi
	callq	abs
	movl	(%r14), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r14)
	movl	(%r14), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-12643, BasicBlockSignatureTracker # imm = 0xCE9D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB91_36
# %bb.34:                               #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$84, %ax
	cmpw	$-12599, %ax            # imm = 0xCEC9
	jne	.LBB91_58
# %bb.35:                               # %see.split171
                                        #   in Loop: Header=BB91_14 Depth=1
	movl	(%r14), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-12599, BasicBlockSignatureTracker # imm = 0xCEC9
	movw	$84, RunTimeSignatureAdjuster
.LBB91_36:                              #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$83, %ax
	xorw	%cx, %ax
	cmpw	$-12594, %ax            # imm = 0xCECE
	jne	.LBB91_58
# %bb.37:                               # %see.split173
                                        #   in Loop: Header=BB91_14 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	cmpl	$0, (%rcx)
	setne	%al
	xorb	$-1, %al
	andb	$1, %al
	movzbl	%al, %eax
	cltq
	movl	see_num_attackers(,%rax,4), %eax
	cmpl	$0, (%rcx)
	setne	%cl
	xorb	$-1, %cl
	andb	$1, %cl
	movzbl	%cl, %ecx
	movslq	%ecx, %rcx
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$-12594, BasicBlockSignatureTracker # imm = 0xCECE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB91_44
# %bb.38:                               #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-12590, %ax            # imm = 0xCED2
	jne	.LBB91_58
# %bb.39:                               # %see.split175
                                        #   in Loop: Header=BB91_14 Depth=1
	movl	(%r14), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-12590, BasicBlockSignatureTracker # imm = 0xCED2
	movw	$28, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB91_44
# %bb.40:                               # %Buffer__1
                                        #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1266, %ax             # imm = 0xFB0E
	cmpw	$13788, %ax             # imm = 0x35DC
	jne	.LBB91_58
# %bb.41:                               # %see.split179
                                        #   in Loop: Header=BB91_14 Depth=1
	movw	$13788, BasicBlockSignatureTracker # imm = 0x35DC
	movw	$-1266, RunTimeSignatureAdjuster # imm = 0xFB0E
# %bb.42:                               #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$-12562, %ax            # imm = 0xCEEE
	jne	.LBB91_58
# %bb.43:                               # %see.split189
                                        #   in Loop: Header=BB91_14 Depth=1
	movl	(%r14), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-12562, BasicBlockSignatureTracker # imm = 0xCEEE
	movw	$32, RunTimeSignatureAdjuster
.LBB91_44:                              #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$-12559, %ax            # imm = 0xCEF1
	jne	.LBB91_58
# %bb.45:                               # %see.split177
                                        #   in Loop: Header=BB91_14 Depth=1
	movw	$-12559, BasicBlockSignatureTracker # imm = 0xCEF1
	movw	$109, RunTimeSignatureAdjuster
.LBB91_46:                              #   in Loop: Header=BB91_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$-12553, %ax            # imm = 0xCEF7
	jne	.LBB91_58
# %bb.47:                               # %see.split169
                                        #   in Loop: Header=BB91_14 Depth=1
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rsi,%rax,4)
	movl	(%rdx), %eax
	xorl	$1, %eax
	movl	%eax, (%rdx)
	movw	$-12553, BasicBlockSignatureTracker # imm = 0xCEF7
	movw	$162, RunTimeSignatureAdjuster
	jmp	.LBB91_14
.LBB91_48:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$350, %ax               # imm = 0x15E
	cmpw	$-12541, %ax            # imm = 0xCF03
	jne	.LBB91_59
# %bb.49:                               # %see.split153
	movl	(%r13), %eax
	movslq	(%r15), %rcx
	movl	%eax, board(,%rcx,4)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-12541, BasicBlockSignatureTracker # imm = 0xCF03
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB91_52
# %bb.50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-12535, %ax            # imm = 0xCF09
	jne	.LBB91_59
# %bb.51:                               # %see.split181
	movq	-64(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-12535, BasicBlockSignatureTracker # imm = 0xCF09
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB91_54
.LBB91_52:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-12527, %ax            # imm = 0xCF11
	jne	.LBB91_59
# %bb.53:                               # %see.split183
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-12527, BasicBlockSignatureTracker # imm = 0xCF11
	movw	$24, RunTimeSignatureAdjuster
.LBB91_54:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$18, %cx
	xorw	%dx, %cx
	cmpw	$-12517, %cx            # imm = 0xCF1B
	jne	.LBB91_59
# %bb.55:                               # %see.split185
	movq	-80(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-12517, BasicBlockSignatureTracker # imm = 0xCF1B
	movw	$295, RunTimeSignatureAdjuster # imm = 0x127
.LBB91_56:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$288, %ax               # imm = 0x120
	xorw	%cx, %ax
	cmpw	$-12516, %ax            # imm = 0xCF1C
	jne	.LBB91_59
# %bb.57:                               # %see.split145
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-12516, BasicBlockSignatureTracker # imm = 0xCF1C
	movw	$27086, RunTimeSignatureAdjuster # imm = 0x69CE
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB91_58:                              # %CFerrorHandler.see.loopexit
	jmp	.LBB91_59
.LBB91_59:                              # %CFerrorHandler.see
	callq	FAULT_DETECTED_CFC
.Lfunc_end91:
	.size	see, .Lfunc_end91-see
	.cfi_endproc
                                        # -- End function
	.globl	suicide_eval            # -- Begin function suicide_eval
	.p2align	4, 0x90
	.type	suicide_eval,@function
suicide_eval:                           # @suicide_eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-10210, %ax            # imm = 0xD81E
	xorw	%cx, %ax
	cmpw	$-12507, %ax            # imm = 0xCF25
	jne	.LBB92_3
# %bb.1:                                # %suicide_eval.split8
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-10210, %ax            # imm = 0xD81E
	xorw	%cx, %ax
	cmpw	$-12507, %ax            # imm = 0xCF25
	jne	.LBB92_3
# %bb.2:                                # %suicide_eval.split
	movw	$-12507, BasicBlockSignatureTracker # imm = 0xCF25
	movw	$0, RunTimeSignatureAdjuster
	callq	suicide_mid_eval
	movw	$-12507, BasicBlockSignatureTracker # imm = 0xCF25
	movw	$32297, RunTimeSignatureAdjuster # imm = 0x7E29
	movw	$-12507, BasicBlockSignatureTracker # imm = 0xCF25
	movw	$-10212, RunTimeSignatureAdjuster # imm = 0xD81C
	popq	%rbp
	retq
.LBB92_3:                               # %CFerrorHandler.suicide_eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end92:
	.size	suicide_eval, .Lfunc_end92-suicide_eval
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function suicide_mid_eval
.LCPI93_0:
	.quad	4629700416936869888     # double 32
	.text
	.globl	suicide_mid_eval
	.p2align	4, 0x90
	.type	suicide_mid_eval,@function
suicide_mid_eval:                       # @suicide_mid_eval
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$168, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$108, %ax
	xorw	%cx, %ax
	cmpw	$-12471, %ax            # imm = 0xCF49
	jne	.LBB93_252
# %bb.1:                                # %suicide_mid_eval.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -128(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -72(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-96, %rax
	movq	%rax, -64(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-48, %rax
	movq	%rax, -96(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-48, %rax
	movq	%rax, -88(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -80(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -120(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -112(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %rdi
	addq	$-16, %rdi
	movq	%rdi, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movl	$0, (%r15)
	movq	%r8, -144(%rbp)         # 8-byte Spill
	movl	$0, (%r8)
	movq	%r9, -136(%rbp)         # 8-byte Spill
	movl	$0, (%r9)
	movq	%r10, -160(%rbp)        # 8-byte Spill
	movl	$0, (%r10)
	movq	%r11, -152(%rbp)        # 8-byte Spill
	movl	$0, (%r11)
	movq	%rdi, -208(%rbp)        # 8-byte Spill
	movl	$0, (%rdi)
	movq	%rsi, -200(%rbp)        # 8-byte Spill
	movl	$0, (%rsi)
	movq	%rdx, -192(%rbp)        # 8-byte Spill
	movl	$0, (%rdx)
	movq	%rax, -184(%rbp)        # 8-byte Spill
	movl	$0, (%rax)
	movq	%rcx, -176(%rbp)        # 8-byte Spill
	movl	$0, (%rcx)
	movq	%rbx, -168(%rbp)        # 8-byte Spill
	movl	$0, (%rbx)
	movl	$0, (%r14)
	movl	$0, (%r12)
	movl	$0, (%r13)
	movw	$-12471, BasicBlockSignatureTracker # imm = 0xCF49
	movw	$-10208, RunTimeSignatureAdjuster # imm = 0xD820
	movq	%r15, %rdi
	movq	%r13, %rsi
	callq	checkECache
	movw	$-12471, BasicBlockSignatureTracker # imm = 0xCF49
	movw	$-10208, RunTimeSignatureAdjuster # imm = 0xD820
	movl	(%r13), %eax
	movw	$-12471, BasicBlockSignatureTracker # imm = 0xCF49
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB93_8
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-12467, %ax            # imm = 0xCF4D
	jne	.LBB93_252
# %bb.3:                                # %suicide_mid_eval.split482
	movl	white_to_move, %eax
	movw	$-12467, BasicBlockSignatureTracker # imm = 0xCF4D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB93_6
# %bb.4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-12461, %ax            # imm = 0xCF53
	jne	.LBB93_252
# %bb.5:                                # %suicide_mid_eval.split486
	movl	(%r15), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-12461, BasicBlockSignatureTracker # imm = 0xCF53
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB93_247
.LBB93_6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-12455, %ax            # imm = 0xCF59
	jne	.LBB93_252
# %bb.7:                                # %suicide_mid_eval.split488
	xorl	%eax, %eax
	subl	(%r15), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-12455, BasicBlockSignatureTracker # imm = 0xCF59
	movw	$10, RunTimeSignatureAdjuster
	jmp	.LBB93_247
.LBB93_8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$40, %ax
	cmpw	$-12447, %ax            # imm = 0xCF61
	jne	.LBB93_252
# %bb.9:                                # %suicide_mid_eval.split484
	movl	Material, %eax
	movl	%eax, (%r15)
	movq	-64(%rbp), %rdi         # 8-byte Reload
	xorl	%esi, %esi
	movl	$88, %edx
	callq	memset
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movl	$0, (%rdx)
	movw	$-12447, BasicBlockSignatureTracker # imm = 0xCF61
	movw	$0, RunTimeSignatureAdjuster
.LBB93_10:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-12435, %ax            # imm = 0xCF6D
	jne	.LBB93_251
# %bb.11:                               # %suicide_mid_eval.split492
                                        #   in Loop: Header=BB93_10 Depth=1
	movl	(%rdx), %eax
	movw	$-12435, BasicBlockSignatureTracker # imm = 0xCF6D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	jge	.LBB93_16
# %bb.12:                               #   in Loop: Header=BB93_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-12434, %ax            # imm = 0xCF6E
	jne	.LBB93_251
# %bb.13:                               # %suicide_mid_eval.split494
                                        #   in Loop: Header=BB93_10 Depth=1
	movslq	(%rdx), %rax
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	$7, (%rcx,%rax,4)
	movslq	(%rdx), %rax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	$2, (%rcx,%rax,4)
	movw	$-12434, BasicBlockSignatureTracker # imm = 0xCF6E
	movw	$0, RunTimeSignatureAdjuster
# %bb.14:                               #   in Loop: Header=BB93_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-12433, %ax            # imm = 0xCF6F
	jne	.LBB93_251
# %bb.15:                               # %suicide_mid_eval.split498
                                        #   in Loop: Header=BB93_10 Depth=1
	movl	(%rdx), %eax
	addl	$1, %eax
	movl	%eax, (%rdx)
	movw	$-12433, BasicBlockSignatureTracker # imm = 0xCF6F
	movw	$14, RunTimeSignatureAdjuster
	jmp	.LBB93_10
.LBB93_16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-12431, %ax            # imm = 0xCF71
	jne	.LBB93_252
# %bb.17:                               # %suicide_mid_eval.split496
	movq	-112(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-120(%rbp), %rsi        # 8-byte Reload
	movl	$1, (%rsi)
	movw	$-12431, BasicBlockSignatureTracker # imm = 0xCF71
	movw	$0, RunTimeSignatureAdjuster
	movq	-56(%rbp), %rdx         # 8-byte Reload
.LBB93_18:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$240, %ax
	xorw	%cx, %ax
	cmpw	$-12415, %ax            # imm = 0xCF81
	jne	.LBB93_250
# %bb.19:                               # %suicide_mid_eval.split500
                                        #   in Loop: Header=BB93_18 Depth=1
	movl	(%rsi), %eax
	movl	piece_count, %ecx
	movw	$-12415, BasicBlockSignatureTracker # imm = 0xCF81
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB93_48
# %bb.20:                               #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-12409, %ax            # imm = 0xCF87
	jne	.LBB93_250
# %bb.21:                               # %suicide_mid_eval.split502
                                        #   in Loop: Header=BB93_18 Depth=1
	movq	-112(%rbp), %rax        # 8-byte Reload
	movslq	(%rax), %rax
	movl	pieces(,%rax,4), %eax
	movl	%eax, (%rdx)
	movl	(%rdx), %eax
	movw	$-12409, BasicBlockSignatureTracker # imm = 0xCF87
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_24
# %bb.22:                               #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-12407, %ax            # imm = 0xCF89
	jne	.LBB93_250
# %bb.23:                               # %suicide_mid_eval.split508
                                        #   in Loop: Header=BB93_18 Depth=1
	movw	$-12407, BasicBlockSignatureTracker # imm = 0xCF89
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB93_46
.LBB93_24:                              #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-12394, %ax            # imm = 0xCF96
	jne	.LBB93_250
# %bb.25:                               # %suicide_mid_eval.split506
                                        #   in Loop: Header=BB93_18 Depth=1
	movl	(%rsi), %eax
	addl	$1, %eax
	movl	%eax, (%rsi)
	movw	$-12394, BasicBlockSignatureTracker # imm = 0xCF96
	movw	$0, RunTimeSignatureAdjuster
# %bb.26:                               #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-12391, %ax            # imm = 0xCF99
	jne	.LBB93_250
# %bb.27:                               # %suicide_mid_eval.split512
                                        #   in Loop: Header=BB93_18 Depth=1
	movslq	(%rdx), %rax
	movl	Xfile(,%rax,4), %eax
	addl	$1, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	(%rdx), %rax
	movl	Xrank(,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	(%rdx), %rax
	movl	board(,%rax,4), %eax
	movw	$-12391, BasicBlockSignatureTracker # imm = 0xCF99
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB93_34
# %bb.28:                               #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-12388, %ax            # imm = 0xCF9C
	jne	.LBB93_250
# %bb.29:                               # %suicide_mid_eval.split514
                                        #   in Loop: Header=BB93_18 Depth=1
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movl	44(%rsi,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, 44(%rsi,%rax,4)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	(%rdx), %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$-12388, BasicBlockSignatureTracker # imm = 0xCF9C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB93_32
# %bb.30:                               #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-12383, %ax            # imm = 0xCFA1
	jne	.LBB93_250
# %bb.31:                               # %suicide_mid_eval.split518
                                        #   in Loop: Header=BB93_18 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	%eax, (%rdx,%rcx,4)
	movw	$-12383, BasicBlockSignatureTracker # imm = 0xCFA1
	movw	$61, RunTimeSignatureAdjuster
.LBB93_32:                              #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$-12381, %ax            # imm = 0xCFA3
	jne	.LBB93_250
# %bb.33:                               # %suicide_mid_eval.split520
                                        #   in Loop: Header=BB93_18 Depth=1
	movw	$-12381, BasicBlockSignatureTracker # imm = 0xCFA3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB93_44
.LBB93_34:                              #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$-12374, %ax            # imm = 0xCFAA
	jne	.LBB93_250
# %bb.35:                               # %suicide_mid_eval.split516
                                        #   in Loop: Header=BB93_18 Depth=1
	movslq	(%rdx), %rax
	movl	board(,%rax,4), %eax
	movw	$-12374, BasicBlockSignatureTracker # imm = 0xCFAA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB93_42
# %bb.36:                               #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-12367, %ax            # imm = 0xCFB1
	jne	.LBB93_250
# %bb.37:                               # %suicide_mid_eval.split524
                                        #   in Loop: Header=BB93_18 Depth=1
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movl	(%rsi,%rax,4), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rsi,%rax,4)
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movslq	(%rdx), %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$-12367, BasicBlockSignatureTracker # imm = 0xCFB1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB93_40
# %bb.38:                               #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$-12347, %ax            # imm = 0xCFC5
	jne	.LBB93_250
# %bb.39:                               # %suicide_mid_eval.split528
                                        #   in Loop: Header=BB93_18 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	%eax, (%rdx,%rcx,4)
	movw	$-12347, BasicBlockSignatureTracker # imm = 0xCFC5
	movw	$116, RunTimeSignatureAdjuster
.LBB93_40:                              #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$105, %ax
	xorw	%cx, %ax
	cmpw	$-12328, %ax            # imm = 0xCFD8
	jne	.LBB93_250
# %bb.41:                               # %suicide_mid_eval.split530
                                        #   in Loop: Header=BB93_18 Depth=1
	movw	$-12328, BasicBlockSignatureTracker # imm = 0xCFD8
	movw	$114, RunTimeSignatureAdjuster
.LBB93_42:                              #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8100, %ax              # imm = 0x1FA4
	xorw	%cx, %ax
	cmpw	$-12274, %ax            # imm = 0xD00E
	jne	.LBB93_250
# %bb.43:                               # %suicide_mid_eval.split526
                                        #   in Loop: Header=BB93_18 Depth=1
	movw	$-12274, BasicBlockSignatureTracker # imm = 0xD00E
	movw	$8109, RunTimeSignatureAdjuster # imm = 0x1FAD
.LBB93_44:                              #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8112, %ax              # imm = 0x1FB0
	xorw	%cx, %ax
	cmpw	$-12269, %ax            # imm = 0xD013
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movq	-120(%rbp), %rsi        # 8-byte Reload
	jne	.LBB93_250
# %bb.45:                               # %suicide_mid_eval.split522
                                        #   in Loop: Header=BB93_18 Depth=1
	movw	$-12269, BasicBlockSignatureTracker # imm = 0xD013
	movw	$8090, RunTimeSignatureAdjuster # imm = 0x1F9A
.LBB93_46:                              #   in Loop: Header=BB93_18 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8081, %ax              # imm = 0x1F91
	xorw	%cx, %ax
	cmpw	$-12264, %ax            # imm = 0xD018
	jne	.LBB93_250
# %bb.47:                               # %suicide_mid_eval.split510
                                        #   in Loop: Header=BB93_18 Depth=1
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-12264, BasicBlockSignatureTracker # imm = 0xD018
	movw	$8041, RunTimeSignatureAdjuster # imm = 0x1F69
	jmp	.LBB93_18
.LBB93_48:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8100, %ax              # imm = 0x1FA4
	cmpw	$-12251, %ax            # imm = 0xD025
	jne	.LBB93_252
# %bb.49:                               # %suicide_mid_eval.split504
	movq	-112(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movw	$-12251, BasicBlockSignatureTracker # imm = 0xD025
	movw	$0, RunTimeSignatureAdjuster
.LBB93_50:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$-12241, %ax            # imm = 0xD02F
	jne	.LBB93_249
# %bb.51:                               # %suicide_mid_eval.split532
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-120(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movl	piece_count, %ecx
	movw	$-12241, BasicBlockSignatureTracker # imm = 0xD02F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB93_225
# %bb.52:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-12237, %ax            # imm = 0xD033
	jne	.LBB93_249
# %bb.53:                               # %suicide_mid_eval.split534
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-112(%rbp), %rax        # 8-byte Reload
	movslq	(%rax), %rax
	movl	pieces(,%rax,4), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movl	(%rcx), %eax
	movw	$-12237, BasicBlockSignatureTracker # imm = 0xD033
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_56
# %bb.54:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$115, %ax
	cmpw	$-12224, %ax            # imm = 0xD040
	jne	.LBB93_249
# %bb.55:                               # %suicide_mid_eval.split540
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-12224, BasicBlockSignatureTracker # imm = 0xD040
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB93_223
.LBB93_56:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$122, %ax
	cmpw	$-12215, %ax            # imm = 0xD049
	jne	.LBB93_249
# %bb.57:                               # %suicide_mid_eval.split538
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-120(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-12215, BasicBlockSignatureTracker # imm = 0xD049
	movw	$0, RunTimeSignatureAdjuster
# %bb.58:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-12204, %ax            # imm = 0xD054
	jne	.LBB93_249
# %bb.59:                               # %suicide_mid_eval.split544
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movl	Xfile(,%rax,4), %eax
	addl	$1, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	(%rdx), %rax
	movl	Xrank(,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	(%rdx), %rax
	movl	board(,%rax,4), %eax
	movw	$-12204, BasicBlockSignatureTracker(%rip) # imm = 0xD054
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-1, %eax
	movl	%eax, %ecx
	subl	$11, %ecx
	ja	.LBB93_221
# %bb.60:                               # %suicide_mid_eval.split544
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	.LJTI93_0(,%rax,8), %rax
	jmpq	*%rax
.LBB93_61:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-12203, %ax            # imm = 0xD055
	jne	.LBB93_249
# %bb.62:                               # %suicide_mid_eval.split548
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movslq	(%rbx), %rax
	movl	scentral(,%rax,4), %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rbx), %edi
	movw	$-12203, BasicBlockSignatureTracker # imm = 0xD055
	movw	$0, RunTimeSignatureAdjuster
	callq	s_pawn_mobility
	movw	$-12203, BasicBlockSignatureTracker # imm = 0xD055
	movw	$0, RunTimeSignatureAdjuster
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rbx), %edi
	movw	$-12203, BasicBlockSignatureTracker # imm = 0xD055
	movw	$0, RunTimeSignatureAdjuster
	callq	black_saccers
	movw	$-12203, BasicBlockSignatureTracker # imm = 0xD055
	movw	$0, RunTimeSignatureAdjuster
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-12203, BasicBlockSignatureTracker # imm = 0xD055
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB93_77
# %bb.63:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-12181, %ax            # imm = 0xD06B
	jne	.LBB93_249
# %bb.64:                               # %suicide_mid_eval.split572
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-96(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-12181, BasicBlockSignatureTracker # imm = 0xD06B
	movw	$62, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB93_77
# %bb.65:                               # %Buffer__
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13442, %ax             # imm = 0x3482
	cmpw	$-6935, %ax             # imm = 0xE4E9
	jne	.LBB93_249
# %bb.66:                               # %suicide_mid_eval.split576
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-6935, BasicBlockSignatureTracker # imm = 0xE4E9
	movw	$13442, RunTimeSignatureAdjuster # imm = 0x3482
# %bb.67:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-12171, %ax            # imm = 0xD075
	jne	.LBB93_249
# %bb.68:                               # %suicide_mid_eval.split706
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	subl	$8, %eax
	movl	%eax, (%r15)
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$-12171, BasicBlockSignatureTracker # imm = 0xD075
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_75
# %bb.69:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$252, %ax
	cmpw	$-12151, %ax            # imm = 0xD089
	jne	.LBB93_249
# %bb.70:                               # %suicide_mid_eval.split580
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$-12151, BasicBlockSignatureTracker # imm = 0xD089
	movw	$252, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_75
# %bb.71:                               # %Buffer__1
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19968, %ax             # imm = 0x4E00
	cmpw	$-24951, %ax            # imm = 0x9E89
	jne	.LBB93_249
# %bb.72:                               # %suicide_mid_eval.split582
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-24951, BasicBlockSignatureTracker # imm = 0x9E89
	movw	$19968, RunTimeSignatureAdjuster # imm = 0x4E00
# %bb.73:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-12147, %ax            # imm = 0xD08D
	jne	.LBB93_249
# %bb.74:                               # %suicide_mid_eval.split708
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	subl	$12, %eax
	movl	%eax, (%r15)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$1, (%rax)
	movw	$-12147, BasicBlockSignatureTracker # imm = 0xD08D
	movw	$248, RunTimeSignatureAdjuster
.LBB93_75:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$251, %ax
	xorw	%cx, %ax
	cmpw	$-12146, %ax            # imm = 0xD08E
	jne	.LBB93_249
# %bb.76:                               # %suicide_mid_eval.split578
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-12146, BasicBlockSignatureTracker # imm = 0xD08E
	movw	$219, RunTimeSignatureAdjuster
.LBB93_77:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$244, %ax
	xorw	%cx, %ax
	cmpw	$-12127, %ax            # imm = 0xD0A1
	jne	.LBB93_249
# %bb.78:                               # %suicide_mid_eval.split574
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$-12127, BasicBlockSignatureTracker # imm = 0xD0A1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_89
# %bb.79:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-12110, %ax            # imm = 0xD0B2
	jne	.LBB93_249
# %bb.80:                               # %suicide_mid_eval.split586
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-12110, BasicBlockSignatureTracker # imm = 0xD0B2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB93_83
# %bb.81:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-12107, %ax            # imm = 0xD0B5
	jne	.LBB93_249
# %bb.82:                               # %suicide_mid_eval.split588
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	subl	$5, %eax
	movl	%eax, (%r15)
	movw	$-12107, BasicBlockSignatureTracker # imm = 0xD0B5
	movw	$7, RunTimeSignatureAdjuster
.LBB93_83:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-12101, %ax            # imm = 0xD0BB
	jne	.LBB93_249
# %bb.84:                               # %suicide_mid_eval.split590
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-12101, BasicBlockSignatureTracker # imm = 0xD0BB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB93_87
# %bb.85:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$118, %ax
	cmpw	$-12083, %ax            # imm = 0xD0CD
	jne	.LBB93_249
# %bb.86:                               # %suicide_mid_eval.split592
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	subl	$8, %eax
	movl	%eax, (%r15)
	movw	$-12083, BasicBlockSignatureTracker # imm = 0xD0CD
	movw	$118, RunTimeSignatureAdjuster
.LBB93_87:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$99, %ax
	xorw	%cx, %ax
	cmpw	$-12072, %ax            # imm = 0xD0D8
	jne	.LBB93_249
# %bb.88:                               # %suicide_mid_eval.split594
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-12072, BasicBlockSignatureTracker # imm = 0xD0D8
	movw	$121, RunTimeSignatureAdjuster
.LBB93_89:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$120, %ax
	xorw	%cx, %ax
	cmpw	$-12071, %ax            # imm = 0xD0D9
	jne	.LBB93_249
# %bb.90:                               # %suicide_mid_eval.split584
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$-12071, BasicBlockSignatureTracker # imm = 0xD0D9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB93_93
# %bb.91:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-12070, %ax            # imm = 0xD0DA
	jne	.LBB93_249
# %bb.92:                               # %suicide_mid_eval.split596
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	subl	$1, %eax
	imull	$15, %eax, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$-12070, BasicBlockSignatureTracker # imm = 0xD0DA
	movw	$3, RunTimeSignatureAdjuster
.LBB93_93:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-12069, %ax            # imm = 0xD0DB
	jne	.LBB93_249
# %bb.94:                               # %suicide_mid_eval.split598
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$-12069, BasicBlockSignatureTracker # imm = 0xD0DB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_117
# %bb.95:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$466, %ax               # imm = 0x1D2
	cmpw	$-12023, %ax            # imm = 0xD109
	jne	.LBB93_249
# %bb.96:                               # %suicide_mid_eval.split602
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$-12023, BasicBlockSignatureTracker # imm = 0xD109
	movw	$466, RunTimeSignatureAdjuster # imm = 0x1D2
	cmpl	%ecx, %eax
	jl	.LBB93_117
# %bb.97:                               # %Buffer__2
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21679, %ax             # imm = 0x54AF
	cmpw	$-31322, %ax            # imm = 0x85A6
	jne	.LBB93_249
# %bb.98:                               # %suicide_mid_eval.split604
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-31322, BasicBlockSignatureTracker # imm = 0x85A6
	movw	$21679, RunTimeSignatureAdjuster # imm = 0x54AF
# %bb.99:                               #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-12016, %ax            # imm = 0xD110
	jne	.LBB93_249
# %bb.100:                              # %suicide_mid_eval.split710
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-88(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$-12016, BasicBlockSignatureTracker # imm = 0xD110
	movw	$459, RunTimeSignatureAdjuster # imm = 0x1CB
	cmpl	%ecx, %eax
	jl	.LBB93_117
# %bb.101:                              # %Buffer__3
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-8836, %ax             # imm = 0xDD7C
	cmpw	$3180, %ax              # imm = 0xC6C
	jne	.LBB93_249
# %bb.102:                              # %suicide_mid_eval.split606
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$3180, BasicBlockSignatureTracker # imm = 0xC6C
	movw	$-8836, RunTimeSignatureAdjuster # imm = 0xDD7C
# %bb.103:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-12004, %ax            # imm = 0xD11C
	jne	.LBB93_249
# %bb.104:                              # %suicide_mid_eval.split712
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	Xrank(,%rax,4), %eax
	subl	$2, %eax
	imull	$3, %eax, %eax
	addl	$30, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movslq	(%rcx), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$-12004, BasicBlockSignatureTracker # imm = 0xD11C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB93_107
# %bb.105:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$-11970, %ax            # imm = 0xD13E
	jne	.LBB93_249
# %bb.106:                              # %suicide_mid_eval.split610
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$-11970, BasicBlockSignatureTracker # imm = 0xD13E
	movw	$34, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jne	.LBB93_109
.LBB93_107:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$74, %ax
	xorw	%cx, %ax
	cmpw	$-11946, %ax            # imm = 0xD156
	jne	.LBB93_249
# %bb.108:                              # %suicide_mid_eval.split608
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xrank(,%rax,4), %eax
	subl	$2, %eax
	shll	$1, %eax
	addl	$4, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$-11946, BasicBlockSignatureTracker # imm = 0xD156
	movw	$104, RunTimeSignatureAdjuster
	jmp	.LBB93_111
.LBB93_109:                             # %Buffer__4
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6501, %ax              # imm = 0x1965
	cmpw	$-14245, %ax            # imm = 0xC85B
	jne	.LBB93_249
# %bb.110:                              # %suicide_mid_eval.split612
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-14245, BasicBlockSignatureTracker # imm = 0xC85B
	movw	$6501, RunTimeSignatureAdjuster # imm = 0x1965
.LBB93_111:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$94, %ax
	xorw	%cx, %ax
	cmpw	$-11936, %ax            # imm = 0xD160
	jne	.LBB93_249
# %bb.112:                              # %suicide_mid_eval.split614
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-11936, BasicBlockSignatureTracker # imm = 0xD160
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_115
# %bb.113:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-11934, %ax            # imm = 0xD162
	jne	.LBB93_249
# %bb.114:                              # %suicide_mid_eval.split618
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	addl	$6, %eax
	movl	%eax, (%r15)
	movw	$-11934, BasicBlockSignatureTracker # imm = 0xD162
	movw	$2, RunTimeSignatureAdjuster
.LBB93_115:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-11933, %ax            # imm = 0xD163
	jne	.LBB93_249
# %bb.116:                              # %suicide_mid_eval.split616
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-11933, BasicBlockSignatureTracker # imm = 0xD163
	movw	$440, RunTimeSignatureAdjuster # imm = 0x1B8
.LBB93_117:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$422, %ax               # imm = 0x1A6
	xorw	%cx, %ax
	cmpw	$-11907, %ax            # imm = 0xD17D
	jne	.LBB93_249
# %bb.118:                              # %suicide_mid_eval.split600
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$-11907, BasicBlockSignatureTracker # imm = 0xD17D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_121
# %bb.119:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$253, %ax
	cmpw	$-11904, %ax            # imm = 0xD180
	jne	.LBB93_249
# %bb.120:                              # %suicide_mid_eval.split622
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	subl	$20, %eax
	movl	%eax, (%r15)
	movw	$-11904, BasicBlockSignatureTracker # imm = 0xD180
	movw	$253, RunTimeSignatureAdjuster
.LBB93_121:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$233, %ax
	xorw	%cx, %ax
	cmpw	$-11884, %ax            # imm = 0xD194
	jne	.LBB93_249
# %bb.122:                              # %suicide_mid_eval.split620
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-11884, BasicBlockSignatureTracker # imm = 0xD194
	movw	$448, RunTimeSignatureAdjuster # imm = 0x1C0
	jmp	.LBB93_221
.LBB93_123:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$500, %ax               # imm = 0x1F4
	cmpw	$-11872, %ax            # imm = 0xD1A0
	jne	.LBB93_249
# %bb.124:                              # %suicide_mid_eval.split550
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movslq	(%rbx), %rax
	movl	scentral(,%rax,4), %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rbx), %edi
	movw	$-11872, BasicBlockSignatureTracker # imm = 0xD1A0
	movw	$501, RunTimeSignatureAdjuster # imm = 0x1F5
	callq	s_pawn_mobility
	movw	$-11872, BasicBlockSignatureTracker # imm = 0xD1A0
	movw	$501, RunTimeSignatureAdjuster # imm = 0x1F5
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rbx), %edi
	movw	$-11872, BasicBlockSignatureTracker # imm = 0xD1A0
	movw	$0, RunTimeSignatureAdjuster
	callq	white_saccers
	movw	$-11872, BasicBlockSignatureTracker # imm = 0xD1A0
	movw	$501, RunTimeSignatureAdjuster # imm = 0x1F5
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-11872, BasicBlockSignatureTracker # imm = 0xD1A0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB93_139
# %bb.125:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-11853, %ax            # imm = 0xD1B3
	jne	.LBB93_249
# %bb.126:                              # %suicide_mid_eval.split624
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movq	-72(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-11853, BasicBlockSignatureTracker # imm = 0xD1B3
	movw	$19, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB93_139
# %bb.127:                              # %Buffer__5
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15666, %ax             # imm = 0x3D32
	cmpw	$-4991, %ax             # imm = 0xEC81
	jne	.LBB93_249
# %bb.128:                              # %suicide_mid_eval.split628
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-4991, BasicBlockSignatureTracker # imm = 0xEC81
	movw	$15666, RunTimeSignatureAdjuster # imm = 0x3D32
# %bb.129:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$-11847, %ax            # imm = 0xD1B9
	jne	.LBB93_249
# %bb.130:                              # %suicide_mid_eval.split714
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	addl	$8, %eax
	movl	%eax, (%r15)
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	addl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$-11847, BasicBlockSignatureTracker # imm = 0xD1B9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_137
# %bb.131:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$125, %ax
	cmpw	$-11836, %ax            # imm = 0xD1C4
	jne	.LBB93_249
# %bb.132:                              # %suicide_mid_eval.split632
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$-11836, BasicBlockSignatureTracker # imm = 0xD1C4
	movw	$125, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_137
# %bb.133:                              # %Buffer__6
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-17168, %ax            # imm = 0xBCF0
	cmpw	$27956, %ax             # imm = 0x6D34
	jne	.LBB93_249
# %bb.134:                              # %suicide_mid_eval.split634
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$27956, BasicBlockSignatureTracker # imm = 0x6D34
	movw	$-17168, RunTimeSignatureAdjuster # imm = 0xBCF0
# %bb.135:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-11821, %ax            # imm = 0xD1D3
	jne	.LBB93_249
# %bb.136:                              # %suicide_mid_eval.split716
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	addl	$12, %eax
	movl	%eax, (%r15)
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	$1, (%rax)
	movw	$-11821, BasicBlockSignatureTracker # imm = 0xD1D3
	movw	$106, RunTimeSignatureAdjuster
.LBB93_137:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$90, %ax
	xorw	%cx, %ax
	cmpw	$-11805, %ax            # imm = 0xD1E3
	jne	.LBB93_249
# %bb.138:                              # %suicide_mid_eval.split630
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-11805, BasicBlockSignatureTracker # imm = 0xD1E3
	movw	$67, RunTimeSignatureAdjuster
.LBB93_139:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$72, %ax
	xorw	%cx, %ax
	cmpw	$-11800, %ax            # imm = 0xD1E8
	jne	.LBB93_249
# %bb.140:                              # %suicide_mid_eval.split626
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$-11800, BasicBlockSignatureTracker # imm = 0xD1E8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_151
# %bb.141:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-11799, %ax            # imm = 0xD1E9
	jne	.LBB93_249
# %bb.142:                              # %suicide_mid_eval.split638
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-11799, BasicBlockSignatureTracker # imm = 0xD1E9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB93_145
# %bb.143:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-11784, %ax            # imm = 0xD1F8
	jne	.LBB93_249
# %bb.144:                              # %suicide_mid_eval.split640
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	addl	$5, %eax
	movl	%eax, (%r15)
	movw	$-11784, BasicBlockSignatureTracker # imm = 0xD1F8
	movw	$17, RunTimeSignatureAdjuster
.LBB93_145:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1020, %ax              # imm = 0x3FC
	xorw	%cx, %ax
	cmpw	$-11755, %ax            # imm = 0xD215
	jne	.LBB93_249
# %bb.146:                              # %suicide_mid_eval.split642
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-11755, BasicBlockSignatureTracker # imm = 0xD215
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB93_149
# %bb.147:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$-11744, %ax            # imm = 0xD220
	jne	.LBB93_249
# %bb.148:                              # %suicide_mid_eval.split644
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	addl	$8, %eax
	movl	%eax, (%r15)
	movw	$-11744, BasicBlockSignatureTracker # imm = 0xD220
	movw	$53, RunTimeSignatureAdjuster
.LBB93_149:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$-11732, %ax            # imm = 0xD22C
	jne	.LBB93_249
# %bb.150:                              # %suicide_mid_eval.split646
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-11732, BasicBlockSignatureTracker # imm = 0xD22C
	movw	$964, RunTimeSignatureAdjuster # imm = 0x3C4
.LBB93_151:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$945, %ax               # imm = 0x3B1
	xorw	%cx, %ax
	cmpw	$-11687, %ax            # imm = 0xD259
	jne	.LBB93_249
# %bb.152:                              # %suicide_mid_eval.split636
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$-11687, BasicBlockSignatureTracker # imm = 0xD259
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB93_155
# %bb.153:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$-11661, %ax            # imm = 0xD273
	jne	.LBB93_249
# %bb.154:                              # %suicide_mid_eval.split648
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	subl	$1, %eax
	imull	$15, %eax, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$-11661, BasicBlockSignatureTracker # imm = 0xD273
	movw	$42, RunTimeSignatureAdjuster
.LBB93_155:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$44, %ax
	xorw	%cx, %ax
	cmpw	$-11659, %ax            # imm = 0xD275
	jne	.LBB93_249
# %bb.156:                              # %suicide_mid_eval.split650
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	44(%rcx,%rax,4), %eax
	movw	$-11659, BasicBlockSignatureTracker # imm = 0xD275
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_179
# %bb.157:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$253, %ax
	cmpw	$-11640, %ax            # imm = 0xD288
	jne	.LBB93_249
# %bb.158:                              # %suicide_mid_eval.split654
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	subl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$-11640, BasicBlockSignatureTracker # imm = 0xD288
	movw	$253, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB93_179
# %bb.159:                              # %Buffer__7
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14471, %ax            # imm = 0xC779
	cmpw	$5617, %ax              # imm = 0x15F1
	jne	.LBB93_249
# %bb.160:                              # %suicide_mid_eval.split656
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$5617, BasicBlockSignatureTracker # imm = 0x15F1
	movw	$-14471, RunTimeSignatureAdjuster # imm = 0xC779
# %bb.161:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-11617, %ax            # imm = 0xD29F
	jne	.LBB93_249
# %bb.162:                              # %suicide_mid_eval.split718
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %ecx
	addl	$1, %ecx
	movslq	%ecx, %rcx
	movq	-96(%rbp), %rdx         # 8-byte Reload
	movl	(%rdx,%rcx,4), %ecx
	movw	$-11617, BasicBlockSignatureTracker # imm = 0xD29F
	movw	$234, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB93_179
# %bb.163:                              # %Buffer__8
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-669, %ax              # imm = 0xFD63
	cmpw	$12284, %ax             # imm = 0x2FFC
	jne	.LBB93_249
# %bb.164:                              # %suicide_mid_eval.split658
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$12284, BasicBlockSignatureTracker # imm = 0x2FFC
	movw	$-669, RunTimeSignatureAdjuster # imm = 0xFD63
# %bb.165:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$-11604, %ax            # imm = 0xD2AC
	jne	.LBB93_249
# %bb.166:                              # %suicide_mid_eval.split720
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	$7, %eax
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rcx
	subl	Xrank(,%rcx,4), %eax
	imull	$3, %eax, %eax
	addl	$30, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movslq	(%rdx), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$-11604, BasicBlockSignatureTracker # imm = 0xD2AC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB93_169
# %bb.167:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-11586, %ax            # imm = 0xD2BE
	jne	.LBB93_249
# %bb.168:                              # %suicide_mid_eval.split662
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	Xfile(,%rax,4), %eax
	movw	$-11586, BasicBlockSignatureTracker # imm = 0xD2BE
	movw	$18, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jne	.LBB93_171
.LBB93_169:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$-11566, %ax            # imm = 0xD2D2
	jne	.LBB93_249
# %bb.170:                              # %suicide_mid_eval.split660
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	$7, %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rcx
	subl	Xrank(,%rcx,4), %eax
	shll	$1, %eax
	addl	$4, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$-11566, BasicBlockSignatureTracker # imm = 0xD2D2
	movw	$108, RunTimeSignatureAdjuster
	jmp	.LBB93_173
.LBB93_171:                             # %Buffer__9
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31281, %ax             # imm = 0x7A31
	cmpw	$-22385, %ax            # imm = 0xA88F
	jne	.LBB93_249
# %bb.172:                              # %suicide_mid_eval.split664
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-22385, BasicBlockSignatureTracker # imm = 0xA88F
	movw	$31281, RunTimeSignatureAdjuster # imm = 0x7A31
.LBB93_173:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$93, %ax
	xorw	%cx, %ax
	cmpw	$-11549, %ax            # imm = 0xD2E3
	jne	.LBB93_249
# %bb.174:                              # %suicide_mid_eval.split666
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-80(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-11549, BasicBlockSignatureTracker # imm = 0xD2E3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_177
# %bb.175:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-11540, %ax            # imm = 0xD2EC
	jne	.LBB93_249
# %bb.176:                              # %suicide_mid_eval.split670
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	subl	$6, %eax
	movl	%eax, (%r15)
	movw	$-11540, BasicBlockSignatureTracker # imm = 0xD2EC
	movw	$15, RunTimeSignatureAdjuster
.LBB93_177:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-11528, %ax            # imm = 0xD2F8
	jne	.LBB93_249
# %bb.178:                              # %suicide_mid_eval.split668
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-11528, BasicBlockSignatureTracker # imm = 0xD2F8
	movw	$141, RunTimeSignatureAdjuster
.LBB93_179:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$372, %ax               # imm = 0x174
	xorw	%cx, %ax
	cmpw	$-11519, %ax            # imm = 0xD301
	jne	.LBB93_249
# %bb.180:                              # %suicide_mid_eval.split652
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	subl	$1, %eax
	cltq
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx,%rax,4), %eax
	movw	$-11519, BasicBlockSignatureTracker # imm = 0xD301
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB93_183
# %bb.181:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-11514, %ax            # imm = 0xD306
	jne	.LBB93_249
# %bb.182:                              # %suicide_mid_eval.split674
                                        #   in Loop: Header=BB93_50 Depth=1
	movl	(%r15), %eax
	addl	$20, %eax
	movl	%eax, (%r15)
	movw	$-11514, BasicBlockSignatureTracker # imm = 0xD306
	movw	$7, RunTimeSignatureAdjuster
.LBB93_183:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-11507, %ax            # imm = 0xD30D
	jne	.LBB93_249
# %bb.184:                              # %suicide_mid_eval.split672
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-11507, BasicBlockSignatureTracker # imm = 0xD30D
	movw	$857, RunTimeSignatureAdjuster # imm = 0x359
	jmp	.LBB93_221
.LBB93_185:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$889, %ax               # imm = 0x379
	cmpw	$-11475, %ax            # imm = 0xD32D
	jne	.LBB93_249
# %bb.186:                              # %suicide_mid_eval.split552
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	scentral(,%rax,4), %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rcx), %edi
	movw	$-11475, BasicBlockSignatureTracker # imm = 0xD32D
	movw	$0, RunTimeSignatureAdjuster
	callq	s_rook_mobility
	movw	$-11475, BasicBlockSignatureTracker # imm = 0xD32D
	movw	$889, RunTimeSignatureAdjuster # imm = 0x379
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movq	-192(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-11475, BasicBlockSignatureTracker # imm = 0xD32D
	movw	$889, RunTimeSignatureAdjuster # imm = 0x379
	jmp	.LBB93_221
.LBB93_187:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$870, %ax               # imm = 0x366
	cmpw	$-11470, %ax            # imm = 0xD332
	jne	.LBB93_249
# %bb.188:                              # %suicide_mid_eval.split554
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movl	scentral(,%rax,4), %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rdx), %edi
	movw	$-11470, BasicBlockSignatureTracker # imm = 0xD332
	movw	$31, RunTimeSignatureAdjuster
	callq	s_rook_mobility
	movw	$-11470, BasicBlockSignatureTracker # imm = 0xD332
	movw	$31, RunTimeSignatureAdjuster
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movq	-184(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-11470, BasicBlockSignatureTracker # imm = 0xD332
	movw	$870, RunTimeSignatureAdjuster # imm = 0x366
	jmp	.LBB93_221
.LBB93_189:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$866, %ax               # imm = 0x362
	cmpw	$-11466, %ax            # imm = 0xD336
	jne	.LBB93_249
# %bb.190:                              # %suicide_mid_eval.split556
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	scentral(,%rax,4), %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rcx), %edi
	movw	$-11466, BasicBlockSignatureTracker # imm = 0xD336
	movw	$0, RunTimeSignatureAdjuster
	callq	s_bishop_mobility
	movw	$-11466, BasicBlockSignatureTracker # imm = 0xD336
	movw	$0, RunTimeSignatureAdjuster
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-11466, BasicBlockSignatureTracker # imm = 0xD336
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB93_197
# %bb.191:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$108, %ax
	cmpw	$-11430, %ax            # imm = 0xD35A
	jne	.LBB93_249
# %bb.192:                              # %suicide_mid_eval.split676
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	sqcolor(,%rax,4), %eax
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-11430, BasicBlockSignatureTracker # imm = 0xD35A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB93_195
# %bb.193:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-11427, %ax            # imm = 0xD35D
	jne	.LBB93_249
# %bb.194:                              # %suicide_mid_eval.split680
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	$99, (%rax)
	movw	$-11427, BasicBlockSignatureTracker # imm = 0xD35D
	movw	$7, RunTimeSignatureAdjuster
.LBB93_195:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$56, %ax
	xorw	%cx, %ax
	cmpw	$-11422, %ax            # imm = 0xD362
	jne	.LBB93_249
# %bb.196:                              # %suicide_mid_eval.split682
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-11422, BasicBlockSignatureTracker # imm = 0xD362
	movw	$84, RunTimeSignatureAdjuster
.LBB93_197:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$82, %ax
	xorw	%cx, %ax
	cmpw	$-11420, %ax            # imm = 0xD364
	jne	.LBB93_249
# %bb.198:                              # %suicide_mid_eval.split678
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-144(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	sqcolor(,%rax,4), %eax
	movq	-160(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-11420, BasicBlockSignatureTracker # imm = 0xD364
	movw	$816, RunTimeSignatureAdjuster # imm = 0x330
	jmp	.LBB93_221
.LBB93_199:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$831, %ax               # imm = 0x33F
	cmpw	$-11413, %ax            # imm = 0xD36B
	jne	.LBB93_249
# %bb.200:                              # %suicide_mid_eval.split558
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movl	scentral(,%rax,4), %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rdx), %edi
	movw	$-11413, BasicBlockSignatureTracker # imm = 0xD36B
	movw	$93, RunTimeSignatureAdjuster
	callq	s_bishop_mobility
	movw	$-11413, BasicBlockSignatureTracker # imm = 0xD36B
	movw	$93, RunTimeSignatureAdjuster
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-11413, BasicBlockSignatureTracker # imm = 0xD36B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB93_207
# %bb.201:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-11405, %ax            # imm = 0xD373
	jne	.LBB93_249
# %bb.202:                              # %suicide_mid_eval.split684
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	sqcolor(,%rax,4), %eax
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-11405, BasicBlockSignatureTracker # imm = 0xD373
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB93_205
# %bb.203:                              #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-11399, %ax            # imm = 0xD379
	jne	.LBB93_249
# %bb.204:                              # %suicide_mid_eval.split688
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	$99, (%rax)
	movw	$-11399, BasicBlockSignatureTracker # imm = 0xD379
	movw	$10, RunTimeSignatureAdjuster
.LBB93_205:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$255, %ax
	xorw	%cx, %ax
	cmpw	$-11380, %ax            # imm = 0xD38C
	jne	.LBB93_249
# %bb.206:                              # %suicide_mid_eval.split690
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-11380, BasicBlockSignatureTracker # imm = 0xD38C
	movw	$231, RunTimeSignatureAdjuster
.LBB93_207:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$230, %ax
	xorw	%cx, %ax
	cmpw	$-11379, %ax            # imm = 0xD38D
	jne	.LBB93_249
# %bb.208:                              # %suicide_mid_eval.split686
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-136(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movl	sqcolor(,%rax,4), %eax
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-11379, BasicBlockSignatureTracker # imm = 0xD38D
	movw	$985, RunTimeSignatureAdjuster # imm = 0x3D9
	jmp	.LBB93_221
.LBB93_209:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$966, %ax               # imm = 0x3C6
	cmpw	$-11374, %ax            # imm = 0xD392
	jne	.LBB93_249
# %bb.210:                              # %suicide_mid_eval.split560
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	scentral(,%rax,4), %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rcx), %edi
	movw	$-11374, BasicBlockSignatureTracker # imm = 0xD392
	movw	$0, RunTimeSignatureAdjuster
	callq	s_knight_mobility
	movw	$-11374, BasicBlockSignatureTracker # imm = 0xD392
	movw	$966, RunTimeSignatureAdjuster # imm = 0x3C6
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movq	-176(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-11374, BasicBlockSignatureTracker # imm = 0xD392
	movw	$966, RunTimeSignatureAdjuster # imm = 0x3C6
	jmp	.LBB93_221
.LBB93_211:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1015, %ax              # imm = 0x3F7
	cmpw	$-11357, %ax            # imm = 0xD3A3
	jne	.LBB93_249
# %bb.212:                              # %suicide_mid_eval.split562
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movl	scentral(,%rax,4), %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rdx), %edi
	movw	$-11357, BasicBlockSignatureTracker # imm = 0xD3A3
	movw	$49, RunTimeSignatureAdjuster
	callq	s_knight_mobility
	movw	$-11357, BasicBlockSignatureTracker # imm = 0xD3A3
	movw	$49, RunTimeSignatureAdjuster
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movq	-168(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-11357, BasicBlockSignatureTracker # imm = 0xD3A3
	movw	$1015, RunTimeSignatureAdjuster # imm = 0x3F7
	jmp	.LBB93_221
.LBB93_213:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$993, %ax               # imm = 0x3E1
	cmpw	$-11339, %ax            # imm = 0xD3B5
	jne	.LBB93_249
# %bb.214:                              # %suicide_mid_eval.split564
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movslq	(%rbx), %rax
	movl	scentral(,%rax,4), %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rbx), %edi
	movw	$-11339, BasicBlockSignatureTracker # imm = 0xD3B5
	movw	$152, RunTimeSignatureAdjuster
	callq	s_rook_mobility
	movw	$-11339, BasicBlockSignatureTracker # imm = 0xD3B5
	movw	$152, RunTimeSignatureAdjuster
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rbx), %edi
	movw	$-11339, BasicBlockSignatureTracker # imm = 0xD3B5
	movw	$131, RunTimeSignatureAdjuster
	callq	s_bishop_mobility
	movw	$-11339, BasicBlockSignatureTracker # imm = 0xD3B5
	movw	$131, RunTimeSignatureAdjuster
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$-11339, BasicBlockSignatureTracker # imm = 0xD3B5
	movw	$993, RunTimeSignatureAdjuster # imm = 0x3E1
	jmp	.LBB93_221
.LBB93_215:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$916, %ax               # imm = 0x394
	cmpw	$-11328, %ax            # imm = 0xD3C0
	jne	.LBB93_249
# %bb.216:                              # %suicide_mid_eval.split566
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movslq	(%rbx), %rax
	movl	scentral(,%rax,4), %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rbx), %edi
	movw	$-11328, BasicBlockSignatureTracker # imm = 0xD3C0
	movw	$237, RunTimeSignatureAdjuster
	callq	s_rook_mobility
	movw	$-11328, BasicBlockSignatureTracker # imm = 0xD3C0
	movw	$237, RunTimeSignatureAdjuster
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rbx), %edi
	movw	$-11328, BasicBlockSignatureTracker # imm = 0xD3C0
	movw	$246, RunTimeSignatureAdjuster
	callq	s_bishop_mobility
	movw	$-11328, BasicBlockSignatureTracker # imm = 0xD3C0
	movw	$246, RunTimeSignatureAdjuster
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$-11328, BasicBlockSignatureTracker # imm = 0xD3C0
	movw	$916, RunTimeSignatureAdjuster # imm = 0x394
	jmp	.LBB93_221
.LBB93_217:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$919, %ax               # imm = 0x397
	cmpw	$-11325, %ax            # imm = 0xD3C3
	jne	.LBB93_249
# %bb.218:                              # %suicide_mid_eval.split568
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movslq	(%rcx), %rax
	movl	scentral(,%rax,4), %eax
	sarl	$1, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movl	(%rcx), %edi
	movw	$-11325, BasicBlockSignatureTracker # imm = 0xD3C3
	movw	$0, RunTimeSignatureAdjuster
	callq	s_king_mobility
	movw	$-11325, BasicBlockSignatureTracker # imm = 0xD3C3
	movw	$919, RunTimeSignatureAdjuster # imm = 0x397
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movq	-208(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-11325, BasicBlockSignatureTracker # imm = 0xD3C3
	movw	$919, RunTimeSignatureAdjuster # imm = 0x397
	jmp	.LBB93_221
.LBB93_219:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$912, %ax               # imm = 0x390
	cmpw	$-11324, %ax            # imm = 0xD3C4
	jne	.LBB93_249
# %bb.220:                              # %suicide_mid_eval.split570
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-56(%rbp), %rdx         # 8-byte Reload
	movslq	(%rdx), %rax
	movl	scentral(,%rax,4), %eax
	sarl	$1, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movl	(%rdx), %edi
	movw	$-11324, BasicBlockSignatureTracker # imm = 0xD3C4
	movw	$7, RunTimeSignatureAdjuster
	callq	s_king_mobility
	movw	$-11324, BasicBlockSignatureTracker # imm = 0xD3C4
	movw	$7, RunTimeSignatureAdjuster
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movq	-200(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-11324, BasicBlockSignatureTracker # imm = 0xD3C4
	movw	$912, RunTimeSignatureAdjuster # imm = 0x390
.LBB93_221:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$896, %ax               # imm = 0x380
	xorw	%cx, %ax
	cmpw	$-11308, %ax            # imm = 0xD3D4
	jne	.LBB93_249
# %bb.222:                              # %suicide_mid_eval.split546
                                        #   in Loop: Header=BB93_50 Depth=1
	movw	$-11308, BasicBlockSignatureTracker # imm = 0xD3D4
	movw	$916, RunTimeSignatureAdjuster # imm = 0x394
.LBB93_223:                             #   in Loop: Header=BB93_50 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$929, %ax               # imm = 0x3A1
	xorw	%cx, %ax
	cmpw	$-11295, %ax            # imm = 0xD3E1
	jne	.LBB93_249
# %bb.224:                              # %suicide_mid_eval.split542
                                        #   in Loop: Header=BB93_50 Depth=1
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-11295, BasicBlockSignatureTracker # imm = 0xD3E1
	movw	$964, RunTimeSignatureAdjuster # imm = 0x3C4
	jmp	.LBB93_50
.LBB93_225:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$967, %ax               # imm = 0x3C7
	cmpw	$-11288, %ax            # imm = 0xD3E8
	jne	.LBB93_252
# %bb.226:                              # %suicide_mid_eval.split536
	movq	-144(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-11288, BasicBlockSignatureTracker # imm = 0xD3E8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$99, %eax
	jge	.LBB93_241
# %bb.227:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2026, %ax              # imm = 0x7EA
	cmpw	$-11262, %ax            # imm = 0xD402
	jne	.LBB93_252
# %bb.228:                              # %suicide_mid_eval.split692
	movq	-136(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-11262, BasicBlockSignatureTracker # imm = 0xD402
	movw	$2026, RunTimeSignatureAdjuster # imm = 0x7EA
	cmpl	$99, %eax
	jge	.LBB93_241
# %bb.229:                              # %Buffer__10
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3620, %ax             # imm = 0xF1DC
	cmpw	$9694, %ax              # imm = 0x25DE
	jne	.LBB93_252
# %bb.230:                              # %suicide_mid_eval.split696
	movw	$9694, BasicBlockSignatureTracker # imm = 0x25DE
	movw	$-3620, RunTimeSignatureAdjuster # imm = 0xF1DC
# %bb.231:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-11261, %ax            # imm = 0xD403
	jne	.LBB93_252
# %bb.232:                              # %suicide_mid_eval.split722
	movq	-160(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movq	-152(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-11261, BasicBlockSignatureTracker # imm = 0xD403
	movw	$2027, RunTimeSignatureAdjuster # imm = 0x7EB
	cmpl	%ecx, %eax
	je	.LBB93_241
# %bb.233:                              # %Buffer__11
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3424, %ax              # imm = 0xD60
	cmpw	$-9885, %ax             # imm = 0xD963
	jne	.LBB93_252
# %bb.234:                              # %suicide_mid_eval.split698
	movw	$-9885, BasicBlockSignatureTracker # imm = 0xD963
	movw	$3424, RunTimeSignatureAdjuster # imm = 0xD60
# %bb.235:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$-11248, %ax            # imm = 0xD410
	jne	.LBB93_252
# %bb.236:                              # %suicide_mid_eval.split724
	movl	piece_count, %eax
	movw	$-11248, BasicBlockSignatureTracker # imm = 0xD410
	movw	$2040, RunTimeSignatureAdjuster # imm = 0x7F8
	cmpl	$32, %eax
	jge	.LBB93_241
# %bb.237:                              # %Buffer__12
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23840, %ax             # imm = 0x5D20
	cmpw	$-30416, %ax            # imm = 0x8930
	jne	.LBB93_252
# %bb.238:                              # %suicide_mid_eval.split700
	movw	$-30416, BasicBlockSignatureTracker # imm = 0x8930
	movw	$23840, RunTimeSignatureAdjuster # imm = 0x5D20
# %bb.239:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-11244, %ax            # imm = 0xD414
	jne	.LBB93_252
# %bb.240:                              # %suicide_mid_eval.split726
	movsd	.LCPI93_0(%rip), %xmm0  # xmm0 = mem[0],zero
	movl	(%r15), %eax
	cvtsi2ssl	%eax, %xmm1
	movl	piece_count, %eax
	cvtsi2ssl	%eax, %xmm2
	cvtss2sd	%xmm2, %xmm2
	divsd	%xmm0, %xmm2
	cvtsd2ss	%xmm2, %xmm0
	mulss	%xmm0, %xmm1
	cvttss2si	%xmm1, %eax
	movl	%eax, (%r15)
	movw	$-11244, BasicBlockSignatureTracker # imm = 0xD414
	movw	$2044, RunTimeSignatureAdjuster # imm = 0x7FC
.LBB93_241:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2033, %ax              # imm = 0x7F1
	xorw	%cx, %ax
	cmpw	$-11239, %ax            # imm = 0xD419
	jne	.LBB93_252
# %bb.242:                              # %suicide_mid_eval.split694
	movl	(%r15), %edi
	movw	$-11239, BasicBlockSignatureTracker # imm = 0xD419
	movw	$-3810, RunTimeSignatureAdjuster # imm = 0xF11E
	callq	storeECache
	movw	$-11239, BasicBlockSignatureTracker # imm = 0xD419
	movw	$-3810, RunTimeSignatureAdjuster # imm = 0xF11E
	movl	white_to_move, %eax
	movw	$-11239, BasicBlockSignatureTracker # imm = 0xD419
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB93_245
# %bb.243:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-11234, %ax            # imm = 0xD41E
	jne	.LBB93_252
# %bb.244:                              # %suicide_mid_eval.split702
	movl	(%r15), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-11234, BasicBlockSignatureTracker # imm = 0xD41E
	movw	$6989, RunTimeSignatureAdjuster # imm = 0x1B4D
	jmp	.LBB93_247
.LBB93_245:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-11233, %ax            # imm = 0xD41F
	jne	.LBB93_252
# %bb.246:                              # %suicide_mid_eval.split704
	xorl	%eax, %eax
	subl	(%r15), %eax
	movq	-128(%rbp), %rcx        # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-11233, BasicBlockSignatureTracker # imm = 0xD41F
	movw	$6988, RunTimeSignatureAdjuster # imm = 0x1B4C
.LBB93_247:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7038, %ax              # imm = 0x1B7E
	xorw	%cx, %ax
	cmpw	$-11219, %ax            # imm = 0xD42D
	jne	.LBB93_252
# %bb.248:                              # %suicide_mid_eval.split490
	movq	-128(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-11219, BasicBlockSignatureTracker # imm = 0xD42D
	movw	$-15594, RunTimeSignatureAdjuster # imm = 0xC316
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB93_249:                             # %CFerrorHandler.suicide_mid_eval.loopexit
	jmp	.LBB93_252
.LBB93_250:                             # %CFerrorHandler.suicide_mid_eval.loopexit1
	jmp	.LBB93_252
.LBB93_251:                             # %CFerrorHandler.suicide_mid_eval.loopexit2
	jmp	.LBB93_252
.LBB93_252:                             # %CFerrorHandler.suicide_mid_eval
	callq	FAULT_DETECTED_CFC
.Lfunc_end93:
	.size	suicide_mid_eval, .Lfunc_end93-suicide_mid_eval
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI93_0:
	.quad	.LBB93_61
	.quad	.LBB93_123
	.quad	.LBB93_209
	.quad	.LBB93_211
	.quad	.LBB93_217
	.quad	.LBB93_219
	.quad	.LBB93_185
	.quad	.LBB93_187
	.quad	.LBB93_213
	.quad	.LBB93_215
	.quad	.LBB93_189
	.quad	.LBB93_199
                                        # -- End function
	.text
	.p2align	4, 0x90         # -- Begin function s_pawn_mobility
	.type	s_pawn_mobility,@function
s_pawn_mobility:                        # @s_pawn_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1134, %ax              # imm = 0x46E
	xorw	%cx, %ax
	cmpw	$-11205, %ax            # imm = 0xD43B
	jne	.LBB94_17
# %bb.1:                                # %s_pawn_mobility.split35
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1134, %ax              # imm = 0x46E
	xorw	%cx, %ax
	cmpw	$-11205, %ax            # imm = 0xD43B
	jne	.LBB94_17
# %bb.2:                                # %s_pawn_mobility.split
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rcx)
	movl	$0, (%rax)
	movslq	(%rcx), %rdx
	movl	board(,%rdx,4), %edx
	movw	$-11205, BasicBlockSignatureTracker # imm = 0xD43B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %edx
	jne	.LBB94_9
# %bb.3:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$7, %dx
	cmpw	$-11204, %dx            # imm = 0xD43C
	jne	.LBB94_17
# %bb.4:                                # %s_pawn_mobility.split37
	movl	(%rcx), %ecx
	addl	$12, %ecx
	movslq	%ecx, %rcx
	movl	board(,%rcx,4), %ecx
	movw	$-11204, BasicBlockSignatureTracker # imm = 0xD43C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %ecx
	jne	.LBB94_7
# %bb.5:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$121, %cx
	cmpw	$-11195, %cx            # imm = 0xD445
	jne	.LBB94_17
# %bb.6:                                # %s_pawn_mobility.split41
	movl	(%rax), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rax)
	movw	$-11195, BasicBlockSignatureTracker # imm = 0xD445
	movw	$121, RunTimeSignatureAdjuster
.LBB94_7:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$123, %cx
	xorw	%dx, %cx
	cmpw	$-11193, %cx            # imm = 0xD447
	jne	.LBB94_17
# %bb.8:                                # %s_pawn_mobility.split43
	movw	$-11193, BasicBlockSignatureTracker # imm = 0xD447
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB94_15
.LBB94_9:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$110, %dx
	cmpw	$-11179, %dx            # imm = 0xD455
	jne	.LBB94_17
# %bb.10:                               # %s_pawn_mobility.split39
	movl	(%rcx), %ecx
	subl	$12, %ecx
	movslq	%ecx, %rcx
	movl	board(,%rcx,4), %ecx
	movw	$-11179, BasicBlockSignatureTracker # imm = 0xD455
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %ecx
	jne	.LBB94_13
# %bb.11:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$61, %cx
	cmpw	$-11160, %cx            # imm = 0xD468
	jne	.LBB94_17
# %bb.12:                               # %s_pawn_mobility.split47
	movl	(%rax), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rax)
	movw	$-11160, BasicBlockSignatureTracker # imm = 0xD468
	movw	$61, RunTimeSignatureAdjuster
.LBB94_13:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$62, %cx
	xorw	%dx, %cx
	cmpw	$-11157, %cx            # imm = 0xD46B
	jne	.LBB94_17
# %bb.14:                               # %s_pawn_mobility.split49
	movw	$-11157, BasicBlockSignatureTracker # imm = 0xD46B
	movw	$44, RunTimeSignatureAdjuster
.LBB94_15:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$60, %cx
	xorw	%dx, %cx
	cmpw	$-11141, %cx            # imm = 0xD47B
	jne	.LBB94_17
# %bb.16:                               # %s_pawn_mobility.split45
	movl	(%rax), %eax
	shll	$3, %eax
	movw	$-11141, BasicBlockSignatureTracker # imm = 0xD47B
	movw	$1071, RunTimeSignatureAdjuster # imm = 0x42F
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB94_17:                              # %CFerrorHandler.s_pawn_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end94:
	.size	s_pawn_mobility, .Lfunc_end94-s_pawn_mobility
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function black_saccers
	.type	black_saccers,@function
black_saccers:                          # @black_saccers
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1233, %ax              # imm = 0x4D1
	xorw	%cx, %ax
	cmpw	$-11132, %ax            # imm = 0xD484
	jne	.LBB95_62
# %bb.1:                                # %black_saccers.split
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movl	%edi, (%rbx)
	movl	$0, (%r15)
	movl	(%rbx), %eax
	addl	$24, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-11132, BasicBlockSignatureTracker # imm = 0xD484
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB95_8
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-11130, %ax            # imm = 0xD486
	jne	.LBB95_62
# %bb.3:                                # %black_saccers.split120
	movl	(%rbx), %eax
	addl	$22, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-11130, BasicBlockSignatureTracker # imm = 0xD486
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB95_8
# %bb.4:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8376, %ax              # imm = 0x20B8
	cmpw	$-3010, %ax             # imm = 0xF43E
	jne	.LBB95_62
# %bb.5:                                # %black_saccers.split122
	movw	$-3010, BasicBlockSignatureTracker # imm = 0xF43E
	movw	$8376, RunTimeSignatureAdjuster # imm = 0x20B8
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$-11117, %ax            # imm = 0xD493
	jne	.LBB95_62
# %bb.7:                                # %black_saccers.split174
	movl	(%rbx), %eax
	addl	$26, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-11117, BasicBlockSignatureTracker # imm = 0xD493
	movw	$23, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB95_10
.LBB95_8:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$-11113, %ax            # imm = 0xD497
	jne	.LBB95_62
# %bb.9:                                # %black_saccers.split118
	movl	$0, (%r14)
	movw	$-11113, BasicBlockSignatureTracker # imm = 0xD497
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB95_60
.LBB95_10:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30238, %ax             # imm = 0x761E
	cmpw	$-23923, %ax            # imm = 0xA28D
	jne	.LBB95_62
# %bb.11:                               # %black_saccers.split124
	movw	$-23923, BasicBlockSignatureTracker # imm = 0xA28D
	movw	$30238, RunTimeSignatureAdjuster # imm = 0x761E
# %bb.12:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$50, %ax
	xorw	%cx, %ax
	cmpw	$-11103, %ax            # imm = 0xD4A1
	jne	.LBB95_62
# %bb.13:                               # %black_saccers.split176
	movslq	(%rbx), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$-11103, BasicBlockSignatureTracker # imm = 0xD4A1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jge	.LBB95_22
# %bb.14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-11100, %ax            # imm = 0xD4A4
	jne	.LBB95_62
# %bb.15:                               # %black_saccers.split128
	movl	(%rbx), %eax
	addl	$25, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-11100, BasicBlockSignatureTracker # imm = 0xD4A4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB95_20
# %bb.16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-11099, %ax            # imm = 0xD4A5
	jne	.LBB95_62
# %bb.17:                               # %black_saccers.split134
	movl	(%rbx), %eax
	addl	$23, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-11099, BasicBlockSignatureTracker # imm = 0xD4A5
	movw	$4, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB95_22
# %bb.18:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27377, %ax             # imm = 0x6AF1
	cmpw	$-16812, %ax            # imm = 0xBE54
	jne	.LBB95_62
# %bb.19:                               # %black_saccers.split136
	movw	$-16812, BasicBlockSignatureTracker # imm = 0xBE54
	movw	$27376, RunTimeSignatureAdjuster # imm = 0x6AF0
.LBB95_20:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-11094, %ax            # imm = 0xD4AA
	jne	.LBB95_62
# %bb.21:                               # %black_saccers.split132
	movl	$1, (%r15)
	movw	$-11094, BasicBlockSignatureTracker # imm = 0xD4AA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB95_34
.LBB95_22:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-11085, %ax            # imm = 0xD4B3
	jne	.LBB95_62
# %bb.23:                               # %black_saccers.split130
	movslq	(%rbx), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$-11085, BasicBlockSignatureTracker # imm = 0xD4B3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB95_32
# %bb.24:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-11084, %ax            # imm = 0xD4B4
	jne	.LBB95_62
# %bb.25:                               # %black_saccers.split140
	movl	(%rbx), %eax
	addl	$35, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-11084, BasicBlockSignatureTracker # imm = 0xD4B4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB95_30
# %bb.26:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$-11066, %ax            # imm = 0xD4C6
	jne	.LBB95_62
# %bb.27:                               # %black_saccers.split146
	movl	(%rbx), %eax
	addl	$37, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-11066, BasicBlockSignatureTracker # imm = 0xD4C6
	movw	$117, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB95_32
# %bb.28:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8237, %ax              # imm = 0x202D
	cmpw	$-2837, %ax             # imm = 0xF4EB
	jne	.LBB95_62
# %bb.29:                               # %black_saccers.split148
	movw	$-2837, BasicBlockSignatureTracker # imm = 0xF4EB
	movw	$8287, RunTimeSignatureAdjuster # imm = 0x205F
.LBB95_30:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$115, %ax
	xorw	%cx, %ax
	cmpw	$-11065, %ax            # imm = 0xD4C7
	jne	.LBB95_62
# %bb.31:                               # %black_saccers.split144
	movl	$1, (%r15)
	movw	$-11065, BasicBlockSignatureTracker # imm = 0xD4C7
	movw	$116, RunTimeSignatureAdjuster
.LBB95_32:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$100, %ax
	xorw	%cx, %ax
	cmpw	$-11049, %ax            # imm = 0xD4D7
	jne	.LBB95_62
# %bb.33:                               # %black_saccers.split142
	movw	$-11049, BasicBlockSignatureTracker # imm = 0xD4D7
	movw	$125, RunTimeSignatureAdjuster
.LBB95_34:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$69, %ax
	xorw	%cx, %ax
	cmpw	$-11025, %ax            # imm = 0xD4EF
	jne	.LBB95_62
# %bb.35:                               # %black_saccers.split138
	movl	(%r15), %eax
	movw	$-11025, BasicBlockSignatureTracker # imm = 0xD4EF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB95_38
# %bb.36:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$485, %ax               # imm = 0x1E5
	cmpw	$-10998, %ax            # imm = 0xD50A
	jne	.LBB95_62
# %bb.37:                               # %black_saccers.split152
	movl	(%rbx), %edi
	addl	$11, %edi
	movw	$-10998, BasicBlockSignatureTracker # imm = 0xD50A
	movw	$-14113, RunTimeSignatureAdjuster # imm = 0xC8DF
	xorl	%esi, %esi
	callq	is_attacked
	xorl	%ecx, %ecx
	movl	$1, %edx
	movw	$-10998, BasicBlockSignatureTracker # imm = 0xD50A
	movw	$-14113, RunTimeSignatureAdjuster # imm = 0xC8DF
	cmpl	$0, %eax
	cmovnel	%edx, %ecx
	movl	%ecx, (%r15)
	movw	$-10998, BasicBlockSignatureTracker # imm = 0xD50A
	movw	$485, RunTimeSignatureAdjuster # imm = 0x1E5
.LBB95_38:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$481, %ax               # imm = 0x1E1
	xorw	%cx, %ax
	cmpw	$-10994, %ax            # imm = 0xD50E
	jne	.LBB95_62
# %bb.39:                               # %black_saccers.split150
	movl	(%r15), %eax
	movw	$-10994, BasicBlockSignatureTracker # imm = 0xD50E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB95_42
# %bb.40:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-10986, %ax            # imm = 0xD516
	jne	.LBB95_62
# %bb.41:                               # %black_saccers.split156
	movl	(%rbx), %edi
	addl	$13, %edi
	movw	$-10986, BasicBlockSignatureTracker # imm = 0xD516
	movw	$-14141, RunTimeSignatureAdjuster # imm = 0xC8C3
	xorl	%esi, %esi
	callq	is_attacked
	xorl	%ecx, %ecx
	movl	$2, %edx
	movw	$-10986, BasicBlockSignatureTracker # imm = 0xD516
	movw	$-14141, RunTimeSignatureAdjuster # imm = 0xC8C3
	cmpl	$0, %eax
	cmovnel	%edx, %ecx
	movl	%ecx, (%r15)
	movw	$-10986, BasicBlockSignatureTracker # imm = 0xD516
	movw	$24, RunTimeSignatureAdjuster
.LBB95_42:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-10972, %ax            # imm = 0xD524
	jne	.LBB95_62
# %bb.43:                               # %black_saccers.split154
	movl	(%r15), %eax
	movw	$-10972, BasicBlockSignatureTracker # imm = 0xD524
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB95_46
# %bb.44:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-10962, %ax            # imm = 0xD52E
	jne	.LBB95_62
# %bb.45:                               # %black_saccers.split160
	movl	$0, (%r14)
	movw	$-10962, BasicBlockSignatureTracker # imm = 0xD52E
	movw	$441, RunTimeSignatureAdjuster # imm = 0x1B9
	jmp	.LBB95_60
.LBB95_46:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-10952, %ax            # imm = 0xD538
	jne	.LBB95_62
# %bb.47:                               # %black_saccers.split158
	movl	(%r15), %eax
	movw	$-10952, BasicBlockSignatureTracker # imm = 0xD538
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB95_54
# %bb.48:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-10945, %ax            # imm = 0xD53F
	jne	.LBB95_62
# %bb.49:                               # %black_saccers.split162
	movl	(%rbx), %edi
	addl	$11, %edi
	movw	$-10945, BasicBlockSignatureTracker # imm = 0xD53F
	movw	$25131, RunTimeSignatureAdjuster # imm = 0x622B
	xorl	%esi, %esi
	callq	calc_attackers
	movw	$-10945, BasicBlockSignatureTracker # imm = 0xD53F
	movw	$25131, RunTimeSignatureAdjuster # imm = 0x622B
	movw	$-10945, BasicBlockSignatureTracker # imm = 0xD53F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB95_52
# %bb.50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$-10943, %ax            # imm = 0xD541
	jne	.LBB95_62
# %bb.51:                               # %black_saccers.split166
	movl	$0, (%r14)
	movw	$-10943, BasicBlockSignatureTracker # imm = 0xD541
	movw	$470, RunTimeSignatureAdjuster # imm = 0x1D6
	jmp	.LBB95_60
.LBB95_52:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$98, %ax
	cmpw	$-10915, %ax            # imm = 0xD55D
	jne	.LBB95_62
# %bb.53:                               # %black_saccers.split168
	movl	$30, (%r14)
	movw	$-10915, BasicBlockSignatureTracker # imm = 0xD55D
	movw	$458, RunTimeSignatureAdjuster # imm = 0x1CA
	jmp	.LBB95_60
.LBB95_54:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$91, %ax
	cmpw	$-10909, %ax            # imm = 0xD563
	jne	.LBB95_62
# %bb.55:                               # %black_saccers.split164
	movl	(%rbx), %edi
	addl	$13, %edi
	movw	$-10909, BasicBlockSignatureTracker # imm = 0xD563
	movw	$25207, RunTimeSignatureAdjuster # imm = 0x6277
	xorl	%esi, %esi
	callq	calc_attackers
	movw	$-10909, BasicBlockSignatureTracker # imm = 0xD563
	movw	$25207, RunTimeSignatureAdjuster # imm = 0x6277
	movw	$-10909, BasicBlockSignatureTracker # imm = 0xD563
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB95_58
# %bb.56:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17, %ax
	cmpw	$-10894, %ax            # imm = 0xD572
	jne	.LBB95_62
# %bb.57:                               # %black_saccers.split170
	movl	$0, (%r14)
	movw	$-10894, BasicBlockSignatureTracker # imm = 0xD572
	movw	$485, RunTimeSignatureAdjuster # imm = 0x1E5
	jmp	.LBB95_60
.LBB95_58:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-10892, %ax            # imm = 0xD574
	jne	.LBB95_62
# %bb.59:                               # %black_saccers.split172
	movl	$30, (%r14)
	movw	$-10892, BasicBlockSignatureTracker # imm = 0xD574
	movw	$483, RunTimeSignatureAdjuster # imm = 0x1E3
.LBB95_60:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$315, %ax               # imm = 0x13B
	xorw	%cx, %ax
	cmpw	$-10836, %ax            # imm = 0xD5AC
	jne	.LBB95_62
# %bb.61:                               # %black_saccers.split126
	movl	(%r14), %eax
	movw	$-10836, BasicBlockSignatureTracker # imm = 0xD5AC
	movw	$1528, RunTimeSignatureAdjuster # imm = 0x5F8
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB95_62:                              # %CFerrorHandler.black_saccers
	callq	FAULT_DETECTED_CFC
.Lfunc_end95:
	.size	black_saccers, .Lfunc_end95-black_saccers
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function white_saccers
	.type	white_saccers,@function
white_saccers:                          # @white_saccers
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1045, %ax              # imm = 0x415
	xorw	%cx, %ax
	cmpw	$-10827, %ax            # imm = 0xD5B5
	jne	.LBB96_62
# %bb.1:                                # %white_saccers.split
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movl	%edi, (%rbx)
	movl	$0, (%r15)
	movl	(%rbx), %eax
	subl	$24, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-10827, BasicBlockSignatureTracker # imm = 0xD5B5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB96_8
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-10819, %ax            # imm = 0xD5BD
	jne	.LBB96_62
# %bb.3:                                # %white_saccers.split120
	movl	(%rbx), %eax
	subl	$22, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-10819, BasicBlockSignatureTracker # imm = 0xD5BD
	movw	$8, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB96_8
# %bb.4:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-13382, %ax            # imm = 0xCBBA
	cmpw	$7687, %ax              # imm = 0x1E07
	jne	.LBB96_62
# %bb.5:                                # %white_saccers.split122
	movw	$7687, BasicBlockSignatureTracker # imm = 0x1E07
	movw	$-13382, RunTimeSignatureAdjuster # imm = 0xCBBA
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$120, %ax
	xorw	%cx, %ax
	cmpw	$-10811, %ax            # imm = 0xD5C5
	jne	.LBB96_62
# %bb.7:                                # %white_saccers.split174
	movl	(%rbx), %eax
	subl	$26, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-10811, BasicBlockSignatureTracker # imm = 0xD5C5
	movw	$112, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB96_10
.LBB96_8:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$97, %ax
	xorw	%cx, %ax
	cmpw	$-10796, %ax            # imm = 0xD5D4
	jne	.LBB96_62
# %bb.9:                                # %white_saccers.split118
	movl	$0, (%r14)
	movw	$-10796, BasicBlockSignatureTracker # imm = 0xD5D4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB96_60
.LBB96_10:                              # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15969, %ax             # imm = 0x3E61
	cmpw	$-5212, %ax             # imm = 0xEBA4
	jne	.LBB96_62
# %bb.11:                               # %white_saccers.split124
	movw	$-5212, BasicBlockSignatureTracker # imm = 0xEBA4
	movw	$15969, RunTimeSignatureAdjuster # imm = 0x3E61
# %bb.12:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-10795, %ax            # imm = 0xD5D5
	jne	.LBB96_62
# %bb.13:                               # %white_saccers.split176
	movslq	(%rbx), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$-10795, BasicBlockSignatureTracker # imm = 0xD5D5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jle	.LBB96_22
# %bb.14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-10792, %ax            # imm = 0xD5D8
	jne	.LBB96_62
# %bb.15:                               # %white_saccers.split128
	movl	(%rbx), %eax
	subl	$25, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-10792, BasicBlockSignatureTracker # imm = 0xD5D8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB96_20
# %bb.16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-10789, %ax            # imm = 0xD5DB
	jne	.LBB96_62
# %bb.17:                               # %white_saccers.split134
	movl	(%rbx), %eax
	subl	$23, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-10789, BasicBlockSignatureTracker # imm = 0xD5DB
	movw	$14, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB96_22
# %bb.18:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-21521, %ax            # imm = 0xABEF
	cmpw	$32308, %ax             # imm = 0x7E34
	jne	.LBB96_62
# %bb.19:                               # %white_saccers.split136
	movw	$32308, BasicBlockSignatureTracker # imm = 0x7E34
	movw	$-21524, RunTimeSignatureAdjuster # imm = 0xABEC
.LBB96_20:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-10766, %ax            # imm = 0xD5F2
	jne	.LBB96_62
# %bb.21:                               # %white_saccers.split132
	movl	$1, (%r15)
	movw	$-10766, BasicBlockSignatureTracker # imm = 0xD5F2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB96_34
.LBB96_22:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$-10763, %ax            # imm = 0xD5F5
	jne	.LBB96_62
# %bb.23:                               # %white_saccers.split130
	movslq	(%rbx), %rax
	movl	Xrank(,%rax,4), %eax
	movw	$-10763, BasicBlockSignatureTracker # imm = 0xD5F5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB96_32
# %bb.24:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-10754, %ax            # imm = 0xD5FE
	jne	.LBB96_62
# %bb.25:                               # %white_saccers.split140
	movl	(%rbx), %eax
	subl	$35, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-10754, BasicBlockSignatureTracker # imm = 0xD5FE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB96_30
# %bb.26:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1022, %ax              # imm = 0x3FE
	cmpw	$-10752, %ax            # imm = 0xD600
	jne	.LBB96_62
# %bb.27:                               # %white_saccers.split146
	movl	(%rbx), %eax
	subl	$37, %eax
	cltq
	movl	board(,%rax,4), %eax
	movw	$-10752, BasicBlockSignatureTracker # imm = 0xD600
	movw	$1013, RunTimeSignatureAdjuster # imm = 0x3F5
	cmpl	$1, %eax
	jne	.LBB96_32
# %bb.28:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31056, %ax             # imm = 0x7950
	cmpw	$-20656, %ax            # imm = 0xAF50
	jne	.LBB96_62
# %bb.29:                               # %white_saccers.split148
	movw	$-20656, BasicBlockSignatureTracker # imm = 0xAF50
	movw	$31406, RunTimeSignatureAdjuster # imm = 0x7AAE
.LBB96_30:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1014, %ax              # imm = 0x3F6
	xorw	%cx, %ax
	cmpw	$-10744, %ax            # imm = 0xD608
	jne	.LBB96_62
# %bb.31:                               # %white_saccers.split144
	movl	$1, (%r15)
	movw	$-10744, BasicBlockSignatureTracker # imm = 0xD608
	movw	$1021, RunTimeSignatureAdjuster # imm = 0x3FD
.LBB96_32:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1019, %ax              # imm = 0x3FB
	xorw	%cx, %ax
	cmpw	$-10738, %ax            # imm = 0xD60E
	jne	.LBB96_62
# %bb.33:                               # %white_saccers.split142
	movw	$-10738, BasicBlockSignatureTracker # imm = 0xD60E
	movw	$1020, RunTimeSignatureAdjuster # imm = 0x3FC
.LBB96_34:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1021, %ax              # imm = 0x3FD
	xorw	%cx, %ax
	cmpw	$-10737, %ax            # imm = 0xD60F
	jne	.LBB96_62
# %bb.35:                               # %white_saccers.split138
	movl	(%r15), %eax
	movw	$-10737, BasicBlockSignatureTracker # imm = 0xD60F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB96_38
# %bb.36:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-10723, %ax            # imm = 0xD61D
	jne	.LBB96_62
# %bb.37:                               # %white_saccers.split152
	movl	(%rbx), %edi
	subl	$11, %edi
	movw	$-10723, BasicBlockSignatureTracker # imm = 0xD61D
	movw	$-13368, RunTimeSignatureAdjuster # imm = 0xCBC8
	movl	$1, %esi
	callq	is_attacked
	xorl	%ecx, %ecx
	movl	$1, %edx
	movw	$-10723, BasicBlockSignatureTracker # imm = 0xD61D
	movw	$-13368, RunTimeSignatureAdjuster # imm = 0xCBC8
	cmpl	$0, %eax
	cmovnel	%edx, %ecx
	movl	%ecx, (%r15)
	movw	$-10723, BasicBlockSignatureTracker # imm = 0xD61D
	movw	$18, RunTimeSignatureAdjuster
.LBB96_38:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-10715, %ax            # imm = 0xD625
	jne	.LBB96_62
# %bb.39:                               # %white_saccers.split150
	movl	(%r15), %eax
	movw	$-10715, BasicBlockSignatureTracker # imm = 0xD625
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB96_42
# %bb.40:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-10705, %ax            # imm = 0xD62F
	jne	.LBB96_62
# %bb.41:                               # %white_saccers.split156
	movl	(%rbx), %edi
	subl	$13, %edi
	movw	$-10705, BasicBlockSignatureTracker # imm = 0xD62F
	movw	$-13318, RunTimeSignatureAdjuster # imm = 0xCBFA
	movl	$1, %esi
	callq	is_attacked
	xorl	%ecx, %ecx
	movl	$2, %edx
	movw	$-10705, BasicBlockSignatureTracker # imm = 0xD62F
	movw	$-13318, RunTimeSignatureAdjuster # imm = 0xCBFA
	cmpl	$0, %eax
	cmovnel	%edx, %ecx
	movl	%ecx, (%r15)
	movw	$-10705, BasicBlockSignatureTracker # imm = 0xD62F
	movw	$10, RunTimeSignatureAdjuster
.LBB96_42:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-10703, %ax            # imm = 0xD631
	jne	.LBB96_62
# %bb.43:                               # %white_saccers.split154
	movl	(%r15), %eax
	movw	$-10703, BasicBlockSignatureTracker # imm = 0xD631
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB96_46
# %bb.44:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-10696, %ax            # imm = 0xD638
	jne	.LBB96_62
# %bb.45:                               # %white_saccers.split160
	movl	$0, (%r14)
	movw	$-10696, BasicBlockSignatureTracker # imm = 0xD638
	movw	$1004, RunTimeSignatureAdjuster # imm = 0x3EC
	jmp	.LBB96_60
.LBB96_46:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-10694, %ax            # imm = 0xD63A
	jne	.LBB96_62
# %bb.47:                               # %white_saccers.split158
	movl	(%r15), %eax
	movw	$-10694, BasicBlockSignatureTracker # imm = 0xD63A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB96_54
# %bb.48:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$127, %ax
	cmpw	$-10683, %ax            # imm = 0xD645
	jne	.LBB96_62
# %bb.49:                               # %white_saccers.split162
	movl	(%rbx), %edi
	subl	$11, %edi
	movw	$-10683, BasicBlockSignatureTracker # imm = 0xD645
	movw	$24913, RunTimeSignatureAdjuster # imm = 0x6151
	movl	$1, %esi
	callq	calc_attackers
	movw	$-10683, BasicBlockSignatureTracker # imm = 0xD645
	movw	$24913, RunTimeSignatureAdjuster # imm = 0x6151
	movw	$-10683, BasicBlockSignatureTracker # imm = 0xD645
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB96_52
# %bb.50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-10680, %ax            # imm = 0xD648
	jne	.LBB96_62
# %bb.51:                               # %white_saccers.split166
	movl	$0, (%r14)
	movw	$-10680, BasicBlockSignatureTracker # imm = 0xD648
	movw	$924, RunTimeSignatureAdjuster # imm = 0x39C
	jmp	.LBB96_60
.LBB96_52:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-10670, %ax            # imm = 0xD652
	jne	.LBB96_62
# %bb.53:                               # %white_saccers.split168
	movl	$30, (%r14)
	movw	$-10670, BasicBlockSignatureTracker # imm = 0xD652
	movw	$902, RunTimeSignatureAdjuster # imm = 0x386
	jmp	.LBB96_60
.LBB96_54:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$105, %ax
	cmpw	$-10669, %ax            # imm = 0xD653
	jne	.LBB96_62
# %bb.55:                               # %white_saccers.split164
	movl	(%rbx), %edi
	subl	$13, %edi
	movw	$-10669, BasicBlockSignatureTracker # imm = 0xD653
	movw	$24903, RunTimeSignatureAdjuster # imm = 0x6147
	movl	$1, %esi
	callq	calc_attackers
	movw	$-10669, BasicBlockSignatureTracker # imm = 0xD653
	movw	$24903, RunTimeSignatureAdjuster # imm = 0x6147
	movw	$-10669, BasicBlockSignatureTracker # imm = 0xD653
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB96_58
# %bb.56:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-10644, %ax            # imm = 0xD66C
	jne	.LBB96_62
# %bb.57:                               # %white_saccers.split170
	movl	$0, (%r14)
	movw	$-10644, BasicBlockSignatureTracker # imm = 0xD66C
	movw	$952, RunTimeSignatureAdjuster # imm = 0x3B8
	jmp	.LBB96_60
.LBB96_58:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-10641, %ax            # imm = 0xD66F
	jne	.LBB96_62
# %bb.59:                               # %white_saccers.split172
	movl	$30, (%r14)
	movw	$-10641, BasicBlockSignatureTracker # imm = 0xD66F
	movw	$955, RunTimeSignatureAdjuster # imm = 0x3BB
.LBB96_60:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$935, %ax               # imm = 0x3A7
	xorw	%cx, %ax
	cmpw	$-10637, %ax            # imm = 0xD673
	jne	.LBB96_62
# %bb.61:                               # %white_saccers.split126
	movl	(%r14), %eax
	movw	$-10637, BasicBlockSignatureTracker # imm = 0xD673
	movw	$1575, RunTimeSignatureAdjuster # imm = 0x627
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB96_62:                              # %CFerrorHandler.white_saccers
	callq	FAULT_DETECTED_CFC
.Lfunc_end96:
	.size	white_saccers, .Lfunc_end96-white_saccers
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function s_rook_mobility
	.type	s_rook_mobility,@function
s_rook_mobility:                        # @s_rook_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1445, %ax              # imm = 0x5A5
	xorw	%cx, %ax
	cmpw	$-10616, %ax            # imm = 0xD688
	jne	.LBB97_41
# %bb.1:                                # %s_rook_mobility.split78
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1445, %ax              # imm = 0x5A5
	xorw	%cx, %ax
	cmpw	$-10616, %ax            # imm = 0xD688
	jne	.LBB97_41
# %bb.2:                                # %s_rook_mobility.split76
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1445, %ax              # imm = 0x5A5
	xorw	%cx, %ax
	cmpw	$-10616, %ax            # imm = 0xD688
	jne	.LBB97_41
# %bb.3:                                # %s_rook_mobility.split74
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1445, %ax              # imm = 0x5A5
	xorw	%cx, %ax
	cmpw	$-10616, %ax            # imm = 0xD688
	jne	.LBB97_41
# %bb.4:                                # %s_rook_mobility.split
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rdx)
	movl	$0, (%rax)
	movl	(%rdx), %esi
	subl	$12, %esi
	movl	%esi, (%rcx)
	movw	$-10616, BasicBlockSignatureTracker # imm = 0xD688
	movw	$0, RunTimeSignatureAdjuster
.LBB97_5:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$24, %si
	xorw	%di, %si
	cmpw	$-10608, %si            # imm = 0xD690
	jne	.LBB97_40
# %bb.6:                                # %s_rook_mobility.split80
                                        #   in Loop: Header=BB97_5 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$-10608, BasicBlockSignatureTracker # imm = 0xD690
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB97_11
# %bb.7:                                #   in Loop: Header=BB97_5 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$38, %si
	cmpw	$-10570, %si            # imm = 0xD6B6
	jne	.LBB97_40
# %bb.8:                                # %s_rook_mobility.split82
                                        #   in Loop: Header=BB97_5 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$-10570, BasicBlockSignatureTracker # imm = 0xD6B6
	movw	$0, RunTimeSignatureAdjuster
# %bb.9:                                #   in Loop: Header=BB97_5 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$126, %si
	cmpw	$-10552, %si            # imm = 0xD6C8
	jne	.LBB97_40
# %bb.10:                               # %s_rook_mobility.split86
                                        #   in Loop: Header=BB97_5 Depth=1
	movl	(%rcx), %esi
	subl	$12, %esi
	movl	%esi, (%rcx)
	movw	$-10552, BasicBlockSignatureTracker # imm = 0xD6C8
	movw	$64, RunTimeSignatureAdjuster
	jmp	.LBB97_5
.LBB97_11:
	movw	BasicBlockSignatureTracker, %si
	xorw	$112, %si
	cmpw	$-10528, %si            # imm = 0xD6E0
	jne	.LBB97_41
# %bb.12:                               # %s_rook_mobility.split84
	movl	(%rdx), %esi
	subl	$1, %esi
	movl	%esi, (%rcx)
	movw	$-10528, BasicBlockSignatureTracker # imm = 0xD6E0
	movw	$0, RunTimeSignatureAdjuster
.LBB97_13:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$4, %si
	xorw	%di, %si
	cmpw	$-10524, %si            # imm = 0xD6E4
	jne	.LBB97_39
# %bb.14:                               # %s_rook_mobility.split88
                                        #   in Loop: Header=BB97_13 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$-10524, BasicBlockSignatureTracker # imm = 0xD6E4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB97_19
# %bb.15:                               #   in Loop: Header=BB97_13 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$16, %si
	cmpw	$-10508, %si            # imm = 0xD6F4
	jne	.LBB97_39
# %bb.16:                               # %s_rook_mobility.split90
                                        #   in Loop: Header=BB97_13 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$-10508, BasicBlockSignatureTracker # imm = 0xD6F4
	movw	$0, RunTimeSignatureAdjuster
# %bb.17:                               #   in Loop: Header=BB97_13 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$8, %si
	cmpw	$-10500, %si            # imm = 0xD6FC
	jne	.LBB97_39
# %bb.18:                               # %s_rook_mobility.split94
                                        #   in Loop: Header=BB97_13 Depth=1
	movl	(%rcx), %esi
	subl	$1, %esi
	movl	%esi, (%rcx)
	movw	$-10500, BasicBlockSignatureTracker # imm = 0xD6FC
	movw	$28, RunTimeSignatureAdjuster
	jmp	.LBB97_13
.LBB97_19:
	movw	BasicBlockSignatureTracker, %si
	xorw	$480, %si               # imm = 0x1E0
	cmpw	$-10492, %si            # imm = 0xD704
	jne	.LBB97_41
# %bb.20:                               # %s_rook_mobility.split92
	movl	(%rdx), %esi
	addl	$1, %esi
	movl	%esi, (%rcx)
	movw	$-10492, BasicBlockSignatureTracker # imm = 0xD704
	movw	$0, RunTimeSignatureAdjuster
.LBB97_21:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$8, %si
	xorw	%di, %si
	cmpw	$-10484, %si            # imm = 0xD70C
	jne	.LBB97_38
# %bb.22:                               # %s_rook_mobility.split96
                                        #   in Loop: Header=BB97_21 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$-10484, BasicBlockSignatureTracker # imm = 0xD70C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB97_27
# %bb.23:                               #   in Loop: Header=BB97_21 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$2, %si
	cmpw	$-10482, %si            # imm = 0xD70E
	jne	.LBB97_38
# %bb.24:                               # %s_rook_mobility.split98
                                        #   in Loop: Header=BB97_21 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$-10482, BasicBlockSignatureTracker # imm = 0xD70E
	movw	$0, RunTimeSignatureAdjuster
# %bb.25:                               #   in Loop: Header=BB97_21 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$25, %si
	cmpw	$-10473, %si            # imm = 0xD717
	jne	.LBB97_38
# %bb.26:                               # %s_rook_mobility.split102
                                        #   in Loop: Header=BB97_21 Depth=1
	movl	(%rcx), %esi
	addl	$1, %esi
	movl	%esi, (%rcx)
	movw	$-10473, BasicBlockSignatureTracker # imm = 0xD717
	movw	$19, RunTimeSignatureAdjuster
	jmp	.LBB97_21
.LBB97_27:
	movw	BasicBlockSignatureTracker, %si
	xorw	$19, %si
	cmpw	$-10465, %si            # imm = 0xD71F
	jne	.LBB97_41
# %bb.28:                               # %s_rook_mobility.split100
	movl	(%rdx), %edx
	addl	$12, %edx
	movl	%edx, (%rcx)
	movw	$-10465, BasicBlockSignatureTracker # imm = 0xD71F
	movw	$0, RunTimeSignatureAdjuster
.LBB97_29:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$58, %dx
	xorw	%si, %dx
	cmpw	$-10459, %dx            # imm = 0xD725
	jne	.LBB97_37
# %bb.30:                               # %s_rook_mobility.split104
                                        #   in Loop: Header=BB97_29 Depth=1
	movslq	(%rcx), %rdx
	movl	board(,%rdx,4), %edx
	movw	$-10459, BasicBlockSignatureTracker # imm = 0xD725
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	jne	.LBB97_35
# %bb.31:                               #   in Loop: Header=BB97_29 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$27, %dx
	cmpw	$-10434, %dx            # imm = 0xD73E
	jne	.LBB97_37
# %bb.32:                               # %s_rook_mobility.split106
                                        #   in Loop: Header=BB97_29 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$-10434, BasicBlockSignatureTracker # imm = 0xD73E
	movw	$0, RunTimeSignatureAdjuster
# %bb.33:                               #   in Loop: Header=BB97_29 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$109, %dx
	cmpw	$-10413, %dx            # imm = 0xD753
	jne	.LBB97_37
# %bb.34:                               # %s_rook_mobility.split110
                                        #   in Loop: Header=BB97_29 Depth=1
	movl	(%rcx), %edx
	addl	$12, %edx
	movl	%edx, (%rcx)
	movw	$-10413, BasicBlockSignatureTracker # imm = 0xD753
	movw	$76, RunTimeSignatureAdjuster
	jmp	.LBB97_29
.LBB97_35:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$114, %cx
	cmpw	$-10409, %cx            # imm = 0xD757
	jne	.LBB97_41
# %bb.36:                               # %s_rook_mobility.split108
	movl	(%rax), %eax
	shll	$2, %eax
	movw	$-10409, BasicBlockSignatureTracker # imm = 0xD757
	movw	$1795, RunTimeSignatureAdjuster # imm = 0x703
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB97_37:                              # %CFerrorHandler.s_rook_mobility.loopexit
	jmp	.LBB97_41
.LBB97_38:                              # %CFerrorHandler.s_rook_mobility.loopexit1
	jmp	.LBB97_41
.LBB97_39:                              # %CFerrorHandler.s_rook_mobility.loopexit2
	jmp	.LBB97_41
.LBB97_40:                              # %CFerrorHandler.s_rook_mobility.loopexit3
	jmp	.LBB97_41
.LBB97_41:                              # %CFerrorHandler.s_rook_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end97:
	.size	s_rook_mobility, .Lfunc_end97-s_rook_mobility
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function s_bishop_mobility
	.type	s_bishop_mobility,@function
s_bishop_mobility:                      # @s_bishop_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1128, %ax              # imm = 0x468
	xorw	%cx, %ax
	cmpw	$-10402, %ax            # imm = 0xD75E
	jne	.LBB98_41
# %bb.1:                                # %s_bishop_mobility.split78
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1128, %ax              # imm = 0x468
	xorw	%cx, %ax
	cmpw	$-10402, %ax            # imm = 0xD75E
	jne	.LBB98_41
# %bb.2:                                # %s_bishop_mobility.split76
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1128, %ax              # imm = 0x468
	xorw	%cx, %ax
	cmpw	$-10402, %ax            # imm = 0xD75E
	jne	.LBB98_41
# %bb.3:                                # %s_bishop_mobility.split74
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1128, %ax              # imm = 0x468
	xorw	%cx, %ax
	cmpw	$-10402, %ax            # imm = 0xD75E
	jne	.LBB98_41
# %bb.4:                                # %s_bishop_mobility.split
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	%edi, (%rdx)
	movl	$0, (%rax)
	movl	(%rdx), %esi
	subl	$13, %esi
	movl	%esi, (%rcx)
	movw	$-10402, BasicBlockSignatureTracker # imm = 0xD75E
	movw	$0, RunTimeSignatureAdjuster
.LBB98_5:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$51, %si
	xorw	%di, %si
	cmpw	$-10387, %si            # imm = 0xD76D
	jne	.LBB98_40
# %bb.6:                                # %s_bishop_mobility.split80
                                        #   in Loop: Header=BB98_5 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$-10387, BasicBlockSignatureTracker # imm = 0xD76D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB98_11
# %bb.7:                                #   in Loop: Header=BB98_5 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$30, %si
	cmpw	$-10381, %si            # imm = 0xD773
	jne	.LBB98_40
# %bb.8:                                # %s_bishop_mobility.split82
                                        #   in Loop: Header=BB98_5 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$-10381, BasicBlockSignatureTracker # imm = 0xD773
	movw	$0, RunTimeSignatureAdjuster
# %bb.9:                                #   in Loop: Header=BB98_5 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$243, %si
	cmpw	$-10368, %si            # imm = 0xD780
	jne	.LBB98_40
# %bb.10:                               # %s_bishop_mobility.split86
                                        #   in Loop: Header=BB98_5 Depth=1
	movl	(%rcx), %esi
	subl	$13, %esi
	movl	%esi, (%rcx)
	movw	$-10368, BasicBlockSignatureTracker # imm = 0xD780
	movw	$222, RunTimeSignatureAdjuster
	jmp	.LBB98_5
.LBB98_11:
	movw	BasicBlockSignatureTracker, %si
	xorw	$226, %si
	cmpw	$-10353, %si            # imm = 0xD78F
	jne	.LBB98_41
# %bb.12:                               # %s_bishop_mobility.split84
	movl	(%rdx), %esi
	subl	$11, %esi
	movl	%esi, (%rcx)
	movw	$-10353, BasicBlockSignatureTracker # imm = 0xD78F
	movw	$0, RunTimeSignatureAdjuster
.LBB98_13:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$16, %si
	xorw	%di, %si
	cmpw	$-10337, %si            # imm = 0xD79F
	jne	.LBB98_39
# %bb.14:                               # %s_bishop_mobility.split88
                                        #   in Loop: Header=BB98_13 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$-10337, BasicBlockSignatureTracker # imm = 0xD79F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB98_19
# %bb.15:                               #   in Loop: Header=BB98_13 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$59, %si
	cmpw	$-10332, %si            # imm = 0xD7A4
	jne	.LBB98_39
# %bb.16:                               # %s_bishop_mobility.split90
                                        #   in Loop: Header=BB98_13 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$-10332, BasicBlockSignatureTracker # imm = 0xD7A4
	movw	$0, RunTimeSignatureAdjuster
# %bb.17:                               #   in Loop: Header=BB98_13 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$15, %si
	cmpw	$-10325, %si            # imm = 0xD7AB
	jne	.LBB98_39
# %bb.18:                               # %s_bishop_mobility.split94
                                        #   in Loop: Header=BB98_13 Depth=1
	movl	(%rcx), %esi
	subl	$11, %esi
	movl	%esi, (%rcx)
	movw	$-10325, BasicBlockSignatureTracker # imm = 0xD7AB
	movw	$36, RunTimeSignatureAdjuster
	jmp	.LBB98_13
.LBB98_19:
	movw	BasicBlockSignatureTracker, %si
	xorw	$51, %si
	cmpw	$-10324, %si            # imm = 0xD7AC
	jne	.LBB98_41
# %bb.20:                               # %s_bishop_mobility.split92
	movl	(%rdx), %esi
	addl	$11, %esi
	movl	%esi, (%rcx)
	movw	$-10324, BasicBlockSignatureTracker # imm = 0xD7AC
	movw	$0, RunTimeSignatureAdjuster
.LBB98_21:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$27, %si
	xorw	%di, %si
	cmpw	$-10313, %si            # imm = 0xD7B7
	jne	.LBB98_38
# %bb.22:                               # %s_bishop_mobility.split96
                                        #   in Loop: Header=BB98_21 Depth=1
	movslq	(%rcx), %rsi
	movl	board(,%rsi,4), %esi
	movw	$-10313, BasicBlockSignatureTracker # imm = 0xD7B7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB98_27
# %bb.23:                               #   in Loop: Header=BB98_21 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$11, %si
	cmpw	$-10308, %si            # imm = 0xD7BC
	jne	.LBB98_38
# %bb.24:                               # %s_bishop_mobility.split98
                                        #   in Loop: Header=BB98_21 Depth=1
	movl	(%rax), %esi
	addl	$1, %esi
	movl	%esi, (%rax)
	movw	$-10308, BasicBlockSignatureTracker # imm = 0xD7BC
	movw	$0, RunTimeSignatureAdjuster
# %bb.25:                               #   in Loop: Header=BB98_21 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$124, %si
	cmpw	$-10304, %si            # imm = 0xD7C0
	jne	.LBB98_38
# %bb.26:                               # %s_bishop_mobility.split102
                                        #   in Loop: Header=BB98_21 Depth=1
	movl	(%rcx), %esi
	addl	$11, %esi
	movl	%esi, (%rcx)
	movw	$-10304, BasicBlockSignatureTracker # imm = 0xD7C0
	movw	$108, RunTimeSignatureAdjuster
	jmp	.LBB98_21
.LBB98_27:
	movw	BasicBlockSignatureTracker, %si
	xorw	$117, %si
	cmpw	$-10302, %si            # imm = 0xD7C2
	jne	.LBB98_41
# %bb.28:                               # %s_bishop_mobility.split100
	movl	(%rdx), %edx
	addl	$13, %edx
	movl	%edx, (%rcx)
	movw	$-10302, BasicBlockSignatureTracker # imm = 0xD7C2
	movw	$0, RunTimeSignatureAdjuster
.LBB98_29:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$5, %dx
	xorw	%si, %dx
	cmpw	$-10297, %dx            # imm = 0xD7C7
	jne	.LBB98_37
# %bb.30:                               # %s_bishop_mobility.split104
                                        #   in Loop: Header=BB98_29 Depth=1
	movslq	(%rcx), %rdx
	movl	board(,%rdx,4), %edx
	movw	$-10297, BasicBlockSignatureTracker # imm = 0xD7C7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %edx
	jne	.LBB98_35
# %bb.31:                               #   in Loop: Header=BB98_29 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$14, %dx
	cmpw	$-10295, %dx            # imm = 0xD7C9
	jne	.LBB98_37
# %bb.32:                               # %s_bishop_mobility.split106
                                        #   in Loop: Header=BB98_29 Depth=1
	movl	(%rax), %edx
	addl	$1, %edx
	movl	%edx, (%rax)
	movw	$-10295, BasicBlockSignatureTracker # imm = 0xD7C9
	movw	$0, RunTimeSignatureAdjuster
# %bb.33:                               #   in Loop: Header=BB98_29 Depth=1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$4, %dx
	cmpw	$-10291, %dx            # imm = 0xD7CD
	jne	.LBB98_37
# %bb.34:                               # %s_bishop_mobility.split110
                                        #   in Loop: Header=BB98_29 Depth=1
	movl	(%rcx), %edx
	addl	$13, %edx
	movl	%edx, (%rcx)
	movw	$-10291, BasicBlockSignatureTracker # imm = 0xD7CD
	movw	$15, RunTimeSignatureAdjuster
	jmp	.LBB98_29
.LBB98_35:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$21, %cx
	cmpw	$-10286, %cx            # imm = 0xD7D2
	jne	.LBB98_41
# %bb.36:                               # %s_bishop_mobility.split108
	movl	(%rax), %eax
	shll	$2, %eax
	movw	$-10286, BasicBlockSignatureTracker # imm = 0xD7D2
	movw	$1926, RunTimeSignatureAdjuster # imm = 0x786
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB98_37:                              # %CFerrorHandler.s_bishop_mobility.loopexit
	jmp	.LBB98_41
.LBB98_38:                              # %CFerrorHandler.s_bishop_mobility.loopexit1
	jmp	.LBB98_41
.LBB98_39:                              # %CFerrorHandler.s_bishop_mobility.loopexit2
	jmp	.LBB98_41
.LBB98_40:                              # %CFerrorHandler.s_bishop_mobility.loopexit3
	jmp	.LBB98_41
.LBB98_41:                              # %CFerrorHandler.s_bishop_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end98:
	.size	s_bishop_mobility, .Lfunc_end98-s_bishop_mobility
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function s_knight_mobility
	.type	s_knight_mobility,@function
s_knight_mobility:                      # @s_knight_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1124, %ax              # imm = 0x464
	xorw	%cx, %ax
	cmpw	$-10250, %ax            # imm = 0xD7F6
	jne	.LBB99_16
# %bb.1:                                # %s_knight_mobility.split30
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1124, %ax              # imm = 0x464
	xorw	%cx, %ax
	cmpw	$-10250, %ax            # imm = 0xD7F6
	jne	.LBB99_16
# %bb.2:                                # %s_knight_mobility.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movl	%edi, (%rax)
	movl	$0, (%rcx)
	movl	$0, (%rdx)
	movw	$-10250, BasicBlockSignatureTracker # imm = 0xD7F6
	movw	$0, RunTimeSignatureAdjuster
.LBB99_3:                               # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$14, %si
	xorw	%di, %si
	cmpw	$-10248, %si            # imm = 0xD7F8
	jne	.LBB99_15
# %bb.4:                                # %s_knight_mobility.split32
                                        #   in Loop: Header=BB99_3 Depth=1
	movl	(%rdx), %esi
	movw	$-10248, BasicBlockSignatureTracker # imm = 0xD7F8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %esi
	jge	.LBB99_13
# %bb.5:                                #   in Loop: Header=BB99_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$4, %si
	cmpw	$-10244, %si            # imm = 0xD7FC
	jne	.LBB99_15
# %bb.6:                                # %s_knight_mobility.split34
                                        #   in Loop: Header=BB99_3 Depth=1
	movl	(%rax), %esi
	movslq	(%rdx), %rdi
	addl	knight_o(,%rdi,4), %esi
	movslq	%esi, %rsi
	movl	board(,%rsi,4), %esi
	movw	$-10244, BasicBlockSignatureTracker # imm = 0xD7FC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB99_9
# %bb.7:                                #   in Loop: Header=BB99_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$4094, %si              # imm = 0xFFE
	cmpw	$-10238, %si            # imm = 0xD802
	jne	.LBB99_15
# %bb.8:                                # %s_knight_mobility.split38
                                        #   in Loop: Header=BB99_3 Depth=1
	movl	(%rcx), %esi
	addl	$1, %esi
	movl	%esi, (%rcx)
	movw	$-10238, BasicBlockSignatureTracker # imm = 0xD802
	movw	$4094, RunTimeSignatureAdjuster # imm = 0xFFE
.LBB99_9:                               #   in Loop: Header=BB99_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$4058, %si              # imm = 0xFDA
	xorw	%di, %si
	cmpw	$-10202, %si            # imm = 0xD826
	jne	.LBB99_15
# %bb.10:                               # %s_knight_mobility.split40
                                        #   in Loop: Header=BB99_3 Depth=1
	movw	$-10202, BasicBlockSignatureTracker # imm = 0xD826
	movw	$0, RunTimeSignatureAdjuster
# %bb.11:                               #   in Loop: Header=BB99_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$23, %si
	cmpw	$-10191, %si            # imm = 0xD831
	jne	.LBB99_15
# %bb.12:                               # %s_knight_mobility.split42
                                        #   in Loop: Header=BB99_3 Depth=1
	movl	(%rdx), %esi
	addl	$1, %esi
	movl	%esi, (%rdx)
	movw	$-10191, BasicBlockSignatureTracker # imm = 0xD831
	movw	$4039, RunTimeSignatureAdjuster # imm = 0xFC7
	jmp	.LBB99_3
.LBB99_13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4035, %ax              # imm = 0xFC3
	cmpw	$-10181, %ax            # imm = 0xD83B
	jne	.LBB99_16
# %bb.14:                               # %s_knight_mobility.split36
	movl	(%rcx), %eax
	shll	$2, %eax
	movw	$-10181, BasicBlockSignatureTracker # imm = 0xD83B
	movw	$2159, RunTimeSignatureAdjuster # imm = 0x86F
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB99_15:                              # %CFerrorHandler.s_knight_mobility.loopexit
	jmp	.LBB99_16
.LBB99_16:                              # %CFerrorHandler.s_knight_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end99:
	.size	s_knight_mobility, .Lfunc_end99-s_knight_mobility
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90         # -- Begin function s_king_mobility
	.type	s_king_mobility,@function
s_king_mobility:                        # @s_king_mobility
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3069, %ax              # imm = 0xBFD
	xorw	%cx, %ax
	cmpw	$-10178, %ax            # imm = 0xD83E
	jne	.LBB100_16
# %bb.1:                                # %s_king_mobility.split30
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3069, %ax              # imm = 0xBFD
	xorw	%cx, %ax
	cmpw	$-10178, %ax            # imm = 0xD83E
	jne	.LBB100_16
# %bb.2:                                # %s_king_mobility.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movl	%edi, (%rax)
	movl	$0, (%rcx)
	movl	$0, (%rdx)
	movw	$-10178, BasicBlockSignatureTracker # imm = 0xD83E
	movw	$0, RunTimeSignatureAdjuster
.LBB100_3:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$122, %si
	xorw	%di, %si
	cmpw	$-10172, %si            # imm = 0xD844
	jne	.LBB100_15
# %bb.4:                                # %s_king_mobility.split32
                                        #   in Loop: Header=BB100_3 Depth=1
	movl	(%rdx), %esi
	movw	$-10172, BasicBlockSignatureTracker # imm = 0xD844
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %esi
	jge	.LBB100_13
# %bb.5:                                #   in Loop: Header=BB100_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$9, %si
	cmpw	$-10163, %si            # imm = 0xD84D
	jne	.LBB100_15
# %bb.6:                                # %s_king_mobility.split34
                                        #   in Loop: Header=BB100_3 Depth=1
	movl	(%rax), %esi
	movslq	(%rdx), %rdi
	addl	king_o(,%rdi,4), %esi
	movslq	%esi, %rsi
	movl	board(,%rsi,4), %esi
	movw	$-10163, BasicBlockSignatureTracker # imm = 0xD84D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %esi
	jne	.LBB100_9
# %bb.7:                                #   in Loop: Header=BB100_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$3, %si
	cmpw	$-10162, %si            # imm = 0xD84E
	jne	.LBB100_15
# %bb.8:                                # %s_king_mobility.split38
                                        #   in Loop: Header=BB100_3 Depth=1
	movl	(%rcx), %esi
	addl	$1, %esi
	movl	%esi, (%rcx)
	movw	$-10162, BasicBlockSignatureTracker # imm = 0xD84E
	movw	$3, RunTimeSignatureAdjuster
.LBB100_9:                              #   in Loop: Header=BB100_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	movw	RunTimeSignatureAdjuster, %di
	xorw	$60, %si
	xorw	%di, %si
	cmpw	$-10127, %si            # imm = 0xD871
	jne	.LBB100_15
# %bb.10:                               # %s_king_mobility.split40
                                        #   in Loop: Header=BB100_3 Depth=1
	movw	$-10127, BasicBlockSignatureTracker # imm = 0xD871
	movw	$0, RunTimeSignatureAdjuster
# %bb.11:                               #   in Loop: Header=BB100_3 Depth=1
	movw	BasicBlockSignatureTracker, %si
	xorw	$250, %si
	cmpw	$-10101, %si            # imm = 0xD88B
	jne	.LBB100_15
# %bb.12:                               # %s_king_mobility.split42
                                        #   in Loop: Header=BB100_3 Depth=1
	movl	(%rdx), %esi
	addl	$1, %esi
	movl	%esi, (%rdx)
	movw	$-10101, BasicBlockSignatureTracker # imm = 0xD88B
	movw	$181, RunTimeSignatureAdjuster
	jmp	.LBB100_3
.LBB100_13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$210, %ax
	cmpw	$-10090, %ax            # imm = 0xD896
	jne	.LBB100_16
# %bb.14:                               # %s_king_mobility.split36
	movl	(%rcx), %eax
	shll	$2, %eax
	movw	$-10090, BasicBlockSignatureTracker # imm = 0xD896
	movw	$2242, RunTimeSignatureAdjuster # imm = 0x8C2
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB100_15:                             # %CFerrorHandler.s_king_mobility.loopexit
	jmp	.LBB100_16
.LBB100_16:                             # %CFerrorHandler.s_king_mobility
	callq	FAULT_DETECTED_CFC
.Lfunc_end100:
	.size	s_king_mobility, .Lfunc_end100-s_king_mobility
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function main
.LCPI101_0:
	.quad	4636737291354636288     # double 100
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI101_1:
	.long	1065353216              # float 1
.LCPI101_2:
	.long	1120403456              # float 100
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%rbx
	subq	$25000, %rsp            # imm = 0x61A8
	.cfi_offset %rbx, -24
	movl	$0, -356(%rbp)
	movl	%edi, -80(%rbp)
	movq	%rsi, -352(%rbp)
	movl	$4, -32(%rbp)
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-12400, RunTimeSignatureAdjuster # imm = 0xCF90
	callq	read_rcfile
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-12400, RunTimeSignatureAdjuster # imm = 0xCF90
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$0, RunTimeSignatureAdjuster
	callq	initialize_zobrist
	movabsq	$material, %rdi
	movabsq	$std_material, %rsi
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-12400, RunTimeSignatureAdjuster # imm = 0xCF90
	movl	$2, Variant
	movl	$56, %edx
	callq	memcpy
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$0, RunTimeSignatureAdjuster
	callq	init_game
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-12400, RunTimeSignatureAdjuster # imm = 0xCF90
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-13149, RunTimeSignatureAdjuster # imm = 0xCCA3
	callq	initialize_hash
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-13149, RunTimeSignatureAdjuster # imm = 0xCCA3
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-13247, RunTimeSignatureAdjuster # imm = 0xCC41
	callq	clear_tt
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-13247, RunTimeSignatureAdjuster # imm = 0xCC41
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-11764, RunTimeSignatureAdjuster # imm = 0xD20C
	callq	reset_ecache
	leaq	-10576(%rbp), %rbx
	leaq	-24976(%rbp), %rdi
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-11764, RunTimeSignatureAdjuster # imm = 0xD20C
	movl	$0, ECacheProbes
	movl	$0, ECacheHits
	movl	$0, TTProbes
	movl	$0, TTStores
	movl	$0, TTHits
	movl	$0, bookidx
	movl	$0, total_moves
	movl	$0, ply
	movl	$0, -44(%rbp)
	movl	$40, moves_to_tc
	movl	$5, min_per_game
	movl	$30000, time_left       # imm = 0x7530
	movl	$2000, opp_rating       # imm = 0x7D0
	movl	$2000, my_rating        # imm = 0x7D0
	movl	$40, maxdepth
	movl	$200, maxposdiff
	movl	$1, must_go
	movl	$1, tradefreely
	movl	$0, -16(%rbp)
	movl	$0, xb_mode
	movl	$0, -20(%rbp)
	movl	$0, comp_color
	movl	$0, -24(%rbp)
	movl	$1, -28(%rbp)
	movl	$0, is_pondering
	movl	$1, allow_pondering
	movl	$0, is_analyzing
	movl	$0, -12(%rbp)
	movl	$0, have_partner
	movl	$0, must_sit
	movl	$0, go_fast
	movl	$0, fixed_time
	movl	$0, phase
	movl	$0, root_to_move
	movl	$0, kibitzed
	movl	$0, move_number
	xorl	%esi, %esi
	movl	$14400, %edx            # imm = 0x3840
	callq	memset
	movq	%rbx, %rdi
	xorl	%esi, %esi
	movl	$9600, %edx             # imm = 0x2580
	callq	memset
	movl	hash, %eax
	movslq	move_number, %rcx
	movl	%eax, hash_history(,%rcx,4)
	movq	stdout, %rdi
	xorl	%esi, %esi
	callq	setbuf
	movq	stdin, %rdi
	xorl	%esi, %esi
	callq	setbuf
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$0, RunTimeSignatureAdjuster
	callq	start_up
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$-11764, RunTimeSignatureAdjuster # imm = 0xD20C
	movl	-80(%rbp), %eax
	movw	$-10081, BasicBlockSignatureTracker # imm = 0xD89F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB101_3
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-10076, %ax            # imm = 0xD8A4
	jne	.LBB101_732
# %bb.2:                                # %main.split
	movabsq	$.L.str.280, %rdi
	movb	$0, %al
	callq	printf
	movq	-352(%rbp), %rax
	movq	8(%rax), %rdi
	movw	$-10076, BasicBlockSignatureTracker # imm = 0xD8A4
	movw	$0, RunTimeSignatureAdjuster
	callq	run_autotest
	movw	$-10076, BasicBlockSignatureTracker # imm = 0xD8A4
	movw	$59, RunTimeSignatureAdjuster
	movw	$-10076, BasicBlockSignatureTracker # imm = 0xD8A4
	movw	$59, RunTimeSignatureAdjuster
.LBB101_3:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$-10068, %ax            # imm = 0xD8AC
	jne	.LBB101_732
# %bb.4:                                # %main.split1401
	movw	$-10068, BasicBlockSignatureTracker # imm = 0xD8AC
	movw	$0, RunTimeSignatureAdjuster
.LBB101_5:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB101_291 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-10059, %ax            # imm = 0xD8B5
	jne	.LBB101_731
# %bb.6:                                # %main.split1403
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-12(%rbp), %eax
	movw	$-10059, BasicBlockSignatureTracker # imm = 0xD8B5
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_211
# %bb.7:                                #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$98, %ax
	cmpw	$-10025, %ax            # imm = 0xD8D7
	jne	.LBB101_731
# %bb.8:                                # %main.split1407
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	comp_color, %eax
	movl	white_to_move, %ecx
	movw	$-10025, BasicBlockSignatureTracker # imm = 0xD8D7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB101_13
# %bb.9:                                #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$-9995, %ax             # imm = 0xD8F5
	jne	.LBB101_731
# %bb.10:                               # %main.split1411
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-16(%rbp), %eax
	movw	$-9995, BasicBlockSignatureTracker # imm = 0xD8F5
	movw	$64, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_211
# %bb.11:                               # %Buffer__
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9472, %ax              # imm = 0x2500
	cmpw	$-523, %ax              # imm = 0xFDF5
	jne	.LBB101_731
# %bb.12:                               # %main.split1413
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-523, BasicBlockSignatureTracker # imm = 0xFDF5
	movw	$9506, RunTimeSignatureAdjuster # imm = 0x2522
.LBB101_13:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$-9986, %ax             # imm = 0xD8FE
	jne	.LBB101_731
# %bb.14:                               # %main.split1409
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-20(%rbp), %eax
	movw	$-9986, BasicBlockSignatureTracker # imm = 0xD8FE
	movw	$75, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_211
# %bb.15:                               # %Buffer__1
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30247, %ax            # imm = 0x89D9
	cmpw	$20775, %ax             # imm = 0x5127
	jne	.LBB101_731
# %bb.16:                               # %main.split1415
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$20775, BasicBlockSignatureTracker # imm = 0x5127
	movw	$-30247, RunTimeSignatureAdjuster # imm = 0x89D9
# %bb.17:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$505, %ax               # imm = 0x1F9
	xorw	%cx, %ax
	cmpw	$-9977, %ax             # imm = 0xD907
	jne	.LBB101_731
# %bb.18:                               # %main.split2083
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	must_sit, %eax
	movw	$-9977, BasicBlockSignatureTracker # imm = 0xD907
	movw	$434, RunTimeSignatureAdjuster # imm = 0x1B2
	cmpl	$0, %eax
	jne	.LBB101_211
# %bb.19:                               # %Buffer__2
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30177, %ax            # imm = 0x8A1F
	cmpw	$21272, %ax             # imm = 0x5318
	jne	.LBB101_731
# %bb.20:                               # %main.split1417
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$21272, BasicBlockSignatureTracker # imm = 0x5318
	movw	$-30177, RunTimeSignatureAdjuster # imm = 0x8A1F
# %bb.21:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-9968, %ax             # imm = 0xD910
	jne	.LBB101_731
# %bb.22:                               # %main.split2085
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9968, BasicBlockSignatureTracker # imm = 0xD910
	movw	$421, RunTimeSignatureAdjuster # imm = 0x1A5
	cmpl	$0, %eax
	jne	.LBB101_211
# %bb.23:                               # %Buffer__3
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-26636, %ax            # imm = 0x97F4
	cmpw	$20196, %ax             # imm = 0x4EE4
	jne	.LBB101_731
# %bb.24:                               # %main.split1419
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$20196, BasicBlockSignatureTracker # imm = 0x4EE4
	movw	$-26636, RunTimeSignatureAdjuster # imm = 0x97F4
# %bb.25:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-9966, %ax             # imm = 0xD912
	jne	.LBB101_731
# %bb.26:                               # %main.split2087
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-408(%rbp), %rdi
	movl	$0, is_pondering
	movw	$-9966, BasicBlockSignatureTracker # imm = 0xD912
	movw	$-12822, RunTimeSignatureAdjuster # imm = 0xCDEA
	callq	think
	movw	$-9966, BasicBlockSignatureTracker # imm = 0xD912
	movw	$-12822, RunTimeSignatureAdjuster # imm = 0xCDEA
	movq	-408(%rbp), %rax
	movq	%rax, -72(%rbp)
	movq	-400(%rbp), %rax
	movq	%rax, -64(%rbp)
	movq	-392(%rbp), %rax
	movq	%rax, -56(%rbp)
	movl	$0, ply
	movl	must_sit, %eax
	movw	$-9966, BasicBlockSignatureTracker # imm = 0xD912
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_29
# %bb.27:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-9957, %ax             # imm = 0xD91B
	jne	.LBB101_731
# %bb.28:                               # %main.split1421
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	must_go, %eax
	movw	$-9957, BasicBlockSignatureTracker # imm = 0xD91B
	movw	$9, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_207
.LBB101_29:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$-9937, %ax             # imm = 0xD92F
	jne	.LBB101_731
# %bb.30:                               # %main.split1423
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	Variant, %eax
	movw	$-9937, BasicBlockSignatureTracker # imm = 0xD92F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB101_33
# %bb.31:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-9930, %ax             # imm = 0xD936
	jne	.LBB101_731
# %bb.32:                               # %main.split1429
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	Variant, %eax
	movw	$-9930, BasicBlockSignatureTracker # imm = 0xD936
	movw	$25, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB101_39
.LBB101_33:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$-9927, %ax             # imm = 0xD939
	jne	.LBB101_731
# %bb.34:                               # %main.split1427
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9927, BasicBlockSignatureTracker # imm = 0xD939
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB101_41
# %bb.35:                               # %Buffer__6
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31020, %ax             # imm = 0x792C
	cmpw	$-24555, %ax            # imm = 0xA015
	jne	.LBB101_731
# %bb.36:                               # %main.split1435
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-24555, BasicBlockSignatureTracker # imm = 0xA015
	movw	$31020, RunTimeSignatureAdjuster # imm = 0x792C
# %bb.37:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$122, %ax
	xorw	%cx, %ax
	cmpw	$-9917, %ax             # imm = 0xD943
	jne	.LBB101_731
# %bb.38:                               # %main.split2089
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9917, BasicBlockSignatureTracker # imm = 0xD943
	movw	$117, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB101_59
	jmp	.LBB101_41
.LBB101_39:                             # %Buffer__5
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12354, %ax             # imm = 0x3042
	cmpw	$-5772, %ax             # imm = 0xE974
	jne	.LBB101_731
# %bb.40:                               # %main.split1431
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-5772, BasicBlockSignatureTracker # imm = 0xE974
	movw	$12354, RunTimeSignatureAdjuster # imm = 0x3042
.LBB101_41:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$114, %ax
	xorw	%cx, %ax
	cmpw	$-9916, %ax             # imm = 0xD944
	jne	.LBB101_731
# %bb.42:                               # %main.split1433
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	Variant, %eax
	movw	$-9916, BasicBlockSignatureTracker # imm = 0xD944
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	je	.LBB101_49
# %bb.43:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-9894, %ax             # imm = 0xD95A
	jne	.LBB101_731
# %bb.44:                               # %main.split1441
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	Variant, %eax
	movw	$-9894, BasicBlockSignatureTracker # imm = 0xD95A
	movw	$30, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_49
# %bb.45:                               # %Buffer__8
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-14838, %ax            # imm = 0xC60A
	cmpw	$8016, %ax              # imm = 0x1F50
	jne	.LBB101_731
# %bb.46:                               # %main.split1443
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$8016, BasicBlockSignatureTracker # imm = 0x1F50
	movw	$-14838, RunTimeSignatureAdjuster # imm = 0xC60A
# %bb.47:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-9893, %ax             # imm = 0xD95B
	jne	.LBB101_731
# %bb.48:                               # %main.split2093
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	Variant, %eax
	movw	$-9893, BasicBlockSignatureTracker # imm = 0xD95B
	movw	$31, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB101_177
.LBB101_49:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$-9879, %ax             # imm = 0xD969
	jne	.LBB101_731
# %bb.50:                               # %main.split1439
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	comp_color, %eax
	movw	$-9879, BasicBlockSignatureTracker # imm = 0xD969
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB101_53
# %bb.51:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-9876, %ax             # imm = 0xD96C
	jne	.LBB101_731
# %bb.52:                               # %main.split1447
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9876, BasicBlockSignatureTracker # imm = 0xD96C
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB101_61
.LBB101_53:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-9863, %ax             # imm = 0xD979
	jne	.LBB101_731
# %bb.54:                               # %main.split1449
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	comp_color, %eax
	movw	$-9863, BasicBlockSignatureTracker # imm = 0xD979
	movw	$34, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_179
# %bb.55:                               # %Buffer__11
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18451, %ax             # imm = 0x4813
	cmpw	$-28310, %ax            # imm = 0x916A
	jne	.LBB101_731
# %bb.56:                               # %main.split1455
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-28310, BasicBlockSignatureTracker # imm = 0x916A
	movw	$18451, RunTimeSignatureAdjuster # imm = 0x4813
# %bb.57:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$254, %ax
	xorw	%cx, %ax
	cmpw	$-9849, %ax             # imm = 0xD987
	jne	.LBB101_731
# %bb.58:                               # %main.split2095
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9849, BasicBlockSignatureTracker # imm = 0xD987
	movw	$220, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB101_63
	jmp	.LBB101_179
.LBB101_59:                             # %Buffer__7
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20936, %ax             # imm = 0x51C8
	cmpw	$-30581, %ax            # imm = 0x888B
	jne	.LBB101_731
# %bb.60:                               # %main.split1437
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-30581, BasicBlockSignatureTracker # imm = 0x888B
	movw	$20936, RunTimeSignatureAdjuster # imm = 0x51C8
	jmp	.LBB101_65
.LBB101_61:                             # %Buffer__10
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32155, %ax             # imm = 0x7D9B
	cmpw	$-23305, %ax            # imm = 0xA4F7
	jne	.LBB101_731
# %bb.62:                               # %main.split1451
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-23305, BasicBlockSignatureTracker # imm = 0xA4F7
	movw	$32180, RunTimeSignatureAdjuster # imm = 0x7DB4
	jmp	.LBB101_65
.LBB101_63:                             # %Buffer__12
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14071, %ax             # imm = 0x36F7
	cmpw	$-4240, %ax             # imm = 0xEF70
	jne	.LBB101_731
# %bb.64:                               # %main.split1457
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-4240, BasicBlockSignatureTracker # imm = 0xEF70
	movw	$13875, RunTimeSignatureAdjuster # imm = 0x3633
.LBB101_65:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$210, %ax
	xorw	%cx, %ax
	cmpw	$-9839, %ax             # imm = 0xD991
	jne	.LBB101_731
# %bb.66:                               # %main.split2091
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9839, BasicBlockSignatureTracker # imm = 0xD991
	movw	$202, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB101_179
# %bb.67:                               # %Buffer__13
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18665, %ax             # imm = 0x48E9
	cmpw	$-28296, %ax            # imm = 0x9178
	jne	.LBB101_731
# %bb.68:                               # %main.split1459
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-28296, BasicBlockSignatureTracker # imm = 0x9178
	movw	$18665, RunTimeSignatureAdjuster # imm = 0x48E9
# %bb.69:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-9833, %ax             # imm = 0xD997
	jne	.LBB101_731
# %bb.70:                               # %main.split2097
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9833, BasicBlockSignatureTracker # imm = 0xD997
	movw	$204, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB101_179
# %bb.71:                               # %Buffer__14
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9992, %ax              # imm = 0x2708
	cmpw	$-353, %ax              # imm = 0xFE9F
	jne	.LBB101_731
# %bb.72:                               # %main.split1461
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-353, BasicBlockSignatureTracker # imm = 0xFE9F
	movw	$9992, RunTimeSignatureAdjuster # imm = 0x2708
# %bb.73:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$59, %ax
	xorw	%cx, %ax
	cmpw	$-9812, %ax             # imm = 0xD9AC
	jne	.LBB101_731
# %bb.74:                               # %main.split2099
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9812, BasicBlockSignatureTracker # imm = 0xD9AC
	movw	$247, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB101_179
# %bb.75:                               # %Buffer__15
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-9011, %ax             # imm = 0xDCCD
	cmpw	$1377, %ax              # imm = 0x561
	jne	.LBB101_731
# %bb.76:                               # %main.split1463
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$1377, BasicBlockSignatureTracker # imm = 0x561
	movw	$-9011, RunTimeSignatureAdjuster # imm = 0xDCCD
# %bb.77:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-9794, %ax             # imm = 0xD9BE
	jne	.LBB101_731
# %bb.78:                               # %main.split2101
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-72(%rbp), %rax
	leaq	-720(%rbp), %rdi
	movw	$-9794, BasicBlockSignatureTracker # imm = 0xD9BE
	movw	$31303, RunTimeSignatureAdjuster # imm = 0x7A47
	movq	(%rax), %rcx
	movq	%rcx, (%rsp)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rsp)
	movq	16(%rax), %rax
	movq	%rax, 16(%rsp)
	callq	comp_to_coord
	leaq	-72(%rbp), %rdi
	leaq	-24976(%rbp), %rax
	movw	$-9794, BasicBlockSignatureTracker # imm = 0xD9BE
	movw	$31303, RunTimeSignatureAdjuster # imm = 0x7A47
	movl	hash, %ecx
	movslq	move_number, %rdx
	movl	%ecx, hash_history(,%rdx,4)
	movslq	move_number, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	-72(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-64(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-56(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movw	$-9794, BasicBlockSignatureTracker # imm = 0xD9BE
	movw	$21262, RunTimeSignatureAdjuster # imm = 0x530E
	xorl	%esi, %esi
	callq	make
	leaq	-10576(%rbp), %rax
	movw	$-9794, BasicBlockSignatureTracker # imm = 0xD9BE
	movw	$21262, RunTimeSignatureAdjuster # imm = 0x530E
	movl	move_number, %ecx
	movl	%ecx, %edx
	addl	$1, %edx
	movl	%edx, move_number
	movslq	%ecx, %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	path_x, %rcx
	movq	%rcx, (%rax)
	movq	path_x+8, %rcx
	movq	%rcx, 8(%rax)
	movl	$0, userealholdings
	movl	must_go, %eax
	addl	$-1, %eax
	movl	%eax, must_go
	movw	$-9794, BasicBlockSignatureTracker # imm = 0xD9BE
	movw	$16604, RunTimeSignatureAdjuster # imm = 0x40DC
	callq	is_draw
	movw	$-9794, BasicBlockSignatureTracker # imm = 0xD9BE
	movw	$16604, RunTimeSignatureAdjuster # imm = 0x40DC
	movw	$-9794, BasicBlockSignatureTracker # imm = 0xD9BE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_81
# %bb.79:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$124, %ax
	cmpw	$-9790, %ax             # imm = 0xD9C2
	jne	.LBB101_731
# %bb.80:                               # %main.split1465
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$5, result
	movw	$-9790, BasicBlockSignatureTracker # imm = 0xD9C2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_87
.LBB101_81:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$78, %ax
	cmpw	$-9744, %ax             # imm = 0xD9F0
	jne	.LBB101_731
# %bb.82:                               # %main.split1467
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	fifty, %eax
	movw	$-9744, BasicBlockSignatureTracker # imm = 0xD9F0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$100, %eax
	jle	.LBB101_85
# %bb.83:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-9741, %ax             # imm = 0xD9F3
	jne	.LBB101_731
# %bb.84:                               # %main.split1471
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$4, result
	movw	$-9741, BasicBlockSignatureTracker # imm = 0xD9F3
	movw	$3, RunTimeSignatureAdjuster
.LBB101_85:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1012, %ax              # imm = 0x3F4
	xorw	%cx, %ax
	cmpw	$-9724, %ax             # imm = 0xDA04
	jne	.LBB101_731
# %bb.86:                               # %main.split1473
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9724, BasicBlockSignatureTracker # imm = 0xDA04
	movw	$966, RunTimeSignatureAdjuster # imm = 0x3C6
.LBB101_87:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$995, %ax               # imm = 0x3E3
	xorw	%cx, %ax
	cmpw	$-9695, %ax             # imm = 0xDA21
	jne	.LBB101_731
# %bb.88:                               # %main.split1469
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	root_to_move, %eax
	xorl	$1, %eax
	movl	%eax, root_to_move
	movw	$-9695, BasicBlockSignatureTracker # imm = 0xDA21
	movw	$-12771, RunTimeSignatureAdjuster # imm = 0xCE1D
	callq	reset_piece_square
	movw	$-9695, BasicBlockSignatureTracker # imm = 0xDA21
	movw	$-12771, RunTimeSignatureAdjuster # imm = 0xCE1D
	movl	book_ply, %eax
	movw	$-9695, BasicBlockSignatureTracker # imm = 0xDA21
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$40, %eax
	jge	.LBB101_97
# %bb.89:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-9693, %ax             # imm = 0xDA23
	jne	.LBB101_731
# %bb.90:                               # %main.split1475
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	book_ply, %eax
	movw	$-9693, BasicBlockSignatureTracker # imm = 0xDA23
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_93
# %bb.91:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-9690, %ax             # imm = 0xDA26
	jne	.LBB101_731
# %bb.92:                               # %main.split1481
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-720(%rbp), %rsi
	movl	$opening_history, %edi
	callq	strcpy
	movw	$-9690, BasicBlockSignatureTracker # imm = 0xDA26
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_95
.LBB101_93:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-9684, %ax             # imm = 0xDA2C
	jne	.LBB101_731
# %bb.94:                               # %main.split1479
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$opening_history, %rdi
	leaq	-720(%rbp), %rsi
	callq	strcat
	movw	$-9684, BasicBlockSignatureTracker # imm = 0xDA2C
	movw	$10, RunTimeSignatureAdjuster
.LBB101_95:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$-9680, %ax             # imm = 0xDA30
	jne	.LBB101_731
# %bb.96:                               # %main.split1483
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9680, BasicBlockSignatureTracker # imm = 0xDA30
	movw	$17, RunTimeSignatureAdjuster
.LBB101_97:                             #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-9669, %ax             # imm = 0xDA3B
	jne	.LBB101_731
# %bb.98:                               # %main.split1477
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.6.286, %rbx
	movl	book_ply(%rip), %eax
	addl	$1, %eax
	movl	%eax, book_ply(%rip)
	movl	nodes(%rip), %esi
	cvtsi2ssl	qnodes(%rip), %xmm0
	cvtsi2ssl	%esi, %xmm1
	divss	%xmm1, %xmm0
	cvtss2sd	%xmm0, %xmm0
	movsd	.LCPI101_0(%rip), %xmm1 # xmm1 = mem[0],zero
	mulsd	%xmm1, %xmm0
	cvtsd2ss	%xmm0, %xmm0
	cvtss2sd	%xmm0, %xmm0
	movl	$.L.str.1.281, %edi
	movb	$1, %al
	callq	printf
	movl	ECacheProbes(%rip), %esi
	movl	ECacheHits(%rip), %edx
	cvtsi2ssq	%rdx, %xmm0
	cvtsi2ssq	%rsi, %xmm1
	addss	.LCPI101_1(%rip), %xmm1
	divss	%xmm1, %xmm0
	mulss	.LCPI101_2(%rip), %xmm0
	cvtss2sd	%xmm0, %xmm0
	movl	$.L.str.2.282, %edi
                                        # kill: def %esi killed %esi killed %rsi
                                        # kill: def %edx killed %edx killed %rdx
	movb	$1, %al
	callq	printf
	movl	TTStores(%rip), %esi
	movl	TTProbes(%rip), %edx
	movl	TTHits(%rip), %ecx
	cvtsi2ssq	%rcx, %xmm0
	cvtsi2ssq	%rdx, %xmm1
	addss	.LCPI101_1(%rip), %xmm1
	divss	%xmm1, %xmm0
	mulss	.LCPI101_2(%rip), %xmm0
	cvtss2sd	%xmm0, %xmm0
	movl	$.L.str.3.283, %edi
                                        # kill: def %edx killed %edx killed %rdx
                                        # kill: def %ecx killed %ecx killed %rcx
	movb	$1, %al
	callq	printf
	movl	NTries(%rip), %esi
	movl	NCuts(%rip), %edx
	cvtsi2ssq	%rdx, %xmm0
	mulss	.LCPI101_2(%rip), %xmm0
	cvtsi2ssq	%rsi, %xmm1
	addss	.LCPI101_1(%rip), %xmm1
	divss	%xmm1, %xmm0
	cvtss2sd	%xmm0, %xmm0
	movl	TExt(%rip), %ecx
	movl	$.L.str.4.284, %edi
                                        # kill: def %esi killed %esi killed %rsi
                                        # kill: def %edx killed %edx killed %rdx
	movb	$1, %al
	callq	printf
	movl	ext_check(%rip), %esi
	movl	razor_drop(%rip), %edx
	movl	razor_material(%rip), %ecx
	movl	$.L.str.5.285, %edi
	xorl	%eax, %eax
	callq	printf
	movl	FHF(%rip), %eax
	cvtsi2ssq	%rax, %xmm0
	mulss	.LCPI101_2(%rip), %xmm0
	movl	FH(%rip), %eax
	addl	$1, %eax
	cvtsi2ssq	%rax, %xmm1
	divss	%xmm1, %xmm0
	cvtss2sd	%xmm0, %xmm0
	movq	%rbx, %rdi
	movb	$1, %al
	callq	printf
	movl	Material, %ebx
	movw	$-9669, BasicBlockSignatureTracker # imm = 0xDA3B
	movw	$-12605, RunTimeSignatureAdjuster # imm = 0xCEC3
	movl	$4293967296, %edi       # imm = 0xFFF0BDC0
	movl	$1000000, %esi          # imm = 0xF4240
	callq	eval
	movabsq	$.L.str.7.287, %rdi
	movw	$-9669, BasicBlockSignatureTracker # imm = 0xDA3B
	movw	$-12605, RunTimeSignatureAdjuster # imm = 0xCEC3
	movl	maxposdiff, %ecx
	movl	white_hand_eval, %r8d
	movl	black_hand_eval, %r9d
	movl	%ebx, %esi
	movl	%eax, %edx
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.8.288, %rdi
	movl	hash, %esi
	movl	hold_hash, %edx
	movb	$0, %al
	callq	printf
	movl	result, %eax
	movw	$-9669, BasicBlockSignatureTracker # imm = 0xDA3B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_127
# %bb.99:                               #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$113, %ax
	cmpw	$-9654, %ax             # imm = 0xDA4A
	jne	.LBB101_731
# %bb.100:                              # %main.split1487
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	xb_mode, %eax
	movw	$-9654, BasicBlockSignatureTracker # imm = 0xDA4A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_115
# %bb.101:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-9651, %ax             # imm = 0xDA4D
	jne	.LBB101_731
# %bb.102:                              # %main.split1489
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-72(%rbp), %eax
	movl	dummy, %ecx
	movw	$-9651, BasicBlockSignatureTracker # imm = 0xDA4D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB101_105
# %bb.103:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-9649, %ax             # imm = 0xDA4F
	jne	.LBB101_731
# %bb.104:                              # %main.split1495
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-68(%rbp), %eax
	movl	dummy+4, %ecx
	movw	$-9649, BasicBlockSignatureTracker # imm = 0xDA4F
	movw	$2, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB101_107
.LBB101_105:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-9641, %ax             # imm = 0xDA57
	jne	.LBB101_731
# %bb.106:                              # %main.split1493
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.9.289, %rdi
	leaq	-720(%rbp), %rsi
	movb	$0, %al
	callq	printf
	movw	$-9641, BasicBlockSignatureTracker # imm = 0xDA57
	movw	$24, RunTimeSignatureAdjuster
	jmp	.LBB101_109
.LBB101_107:                            # %Buffer__16
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6971, %ax              # imm = 0x1B3B
	cmpw	$-16012, %ax            # imm = 0xC174
	jne	.LBB101_731
# %bb.108:                              # %main.split1497
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-16012, BasicBlockSignatureTracker # imm = 0xC174
	movw	$6971, RunTimeSignatureAdjuster # imm = 0x1B3B
.LBB101_109:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$-9634, %ax             # imm = 0xDA5E
	jne	.LBB101_731
# %bb.110:                              # %main.split1499
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	Variant, %eax
	movw	$-9634, BasicBlockSignatureTracker # imm = 0xDA5E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB101_113
# %bb.111:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-9631, %ax             # imm = 0xDA61
	jne	.LBB101_731
# %bb.112:                              # %main.split1501
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9631, BasicBlockSignatureTracker # imm = 0xDA61
	movw	$0, RunTimeSignatureAdjuster
	xorl	%edi, %edi
	callq	CheckBadFlow
	movw	$-9631, BasicBlockSignatureTracker # imm = 0xDA61
	movw	$63, RunTimeSignatureAdjuster
	movw	$-9631, BasicBlockSignatureTracker # imm = 0xDA61
	movw	$63, RunTimeSignatureAdjuster
.LBB101_113:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$51, %ax
	xorw	%cx, %ax
	cmpw	$-9619, %ax             # imm = 0xDA6D
	jne	.LBB101_731
# %bb.114:                              # %main.split1503
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9619, BasicBlockSignatureTracker # imm = 0xDA6D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_125
.LBB101_115:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$36, %ax
	cmpw	$-9618, %ax             # imm = 0xDA6E
	jne	.LBB101_731
# %bb.116:                              # %main.split1491
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-72(%rbp), %eax
	movl	dummy, %ecx
	movw	$-9618, BasicBlockSignatureTracker # imm = 0xDA6E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB101_119
# %bb.117:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-9607, %ax             # imm = 0xDA79
	jne	.LBB101_731
# %bb.118:                              # %main.split1509
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-68(%rbp), %eax
	movl	dummy+4, %ecx
	movw	$-9607, BasicBlockSignatureTracker # imm = 0xDA79
	movw	$23, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB101_121
.LBB101_119:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$-9603, %ax             # imm = 0xDA7D
	jne	.LBB101_731
# %bb.120:                              # %main.split1507
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.10.290, %rdi
	leaq	-720(%rbp), %rsi
	movb	$0, %al
	callq	printf
	movw	$-9603, BasicBlockSignatureTracker # imm = 0xDA7D
	movw	$4, RunTimeSignatureAdjuster
	jmp	.LBB101_123
.LBB101_121:                            # %Buffer__17
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32087, %ax             # imm = 0x7D57
	cmpw	$-22738, %ax            # imm = 0xA72E
	jne	.LBB101_731
# %bb.122:                              # %main.split1511
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-22738, BasicBlockSignatureTracker # imm = 0xA72E
	movw	$32087, RunTimeSignatureAdjuster # imm = 0x7D57
.LBB101_123:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$245, %ax
	xorw	%cx, %ax
	cmpw	$-9588, %ax             # imm = 0xDA8C
	jne	.LBB101_731
# %bb.124:                              # %main.split1513
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9588, BasicBlockSignatureTracker # imm = 0xDA8C
	movw	$225, RunTimeSignatureAdjuster
.LBB101_125:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$213, %ax
	xorw	%cx, %ax
	cmpw	$-9544, %ax             # imm = 0xDAB8
	jne	.LBB101_731
# %bb.126:                              # %main.split1505
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9544, BasicBlockSignatureTracker # imm = 0xDAB8
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_175
.LBB101_127:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$231, %ax
	cmpw	$-9508, %ax             # imm = 0xDADC
	jne	.LBB101_731
# %bb.128:                              # %main.split1485
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	xb_mode, %eax
	movw	$-9508, BasicBlockSignatureTracker # imm = 0xDADC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_139
# %bb.129:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-9501, %ax             # imm = 0xDAE3
	jne	.LBB101_731
# %bb.130:                              # %main.split1517
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-72(%rbp), %eax
	movl	dummy, %ecx
	movw	$-9501, BasicBlockSignatureTracker # imm = 0xDAE3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB101_133
# %bb.131:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-9493, %ax             # imm = 0xDAEB
	jne	.LBB101_731
# %bb.132:                              # %main.split1523
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-68(%rbp), %eax
	movl	dummy+4, %ecx
	movw	$-9493, BasicBlockSignatureTracker # imm = 0xDAEB
	movw	$8, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB101_135
.LBB101_133:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$-9474, %ax             # imm = 0xDAFE
	jne	.LBB101_731
# %bb.134:                              # %main.split1521
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.9.289, %rdi
	leaq	-720(%rbp), %rsi
	movb	$0, %al
	callq	printf
	movw	$-9474, BasicBlockSignatureTracker # imm = 0xDAFE
	movw	$21, RunTimeSignatureAdjuster
	jmp	.LBB101_137
.LBB101_135:                            # %Buffer__18
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3628, %ax             # imm = 0xF1D4
	cmpw	$11071, %ax             # imm = 0x2B3F
	jne	.LBB101_731
# %bb.136:                              # %main.split1525
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$11071, BasicBlockSignatureTracker # imm = 0x2B3F
	movw	$-3628, RunTimeSignatureAdjuster # imm = 0xF1D4
.LBB101_137:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-9473, %ax             # imm = 0xDAFF
	jne	.LBB101_731
# %bb.138:                              # %main.split1527
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9473, BasicBlockSignatureTracker # imm = 0xDAFF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_149
.LBB101_139:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$472, %ax               # imm = 0x1D8
	cmpw	$-9468, %ax             # imm = 0xDB04
	jne	.LBB101_731
# %bb.140:                              # %main.split1519
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-72(%rbp), %eax
	movl	dummy, %ecx
	movw	$-9468, BasicBlockSignatureTracker # imm = 0xDB04
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB101_143
# %bb.141:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-9464, %ax             # imm = 0xDB08
	jne	.LBB101_731
# %bb.142:                              # %main.split1533
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-68(%rbp), %eax
	movl	dummy+4, %ecx
	movw	$-9464, BasicBlockSignatureTracker # imm = 0xDB08
	movw	$12, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB101_145
.LBB101_143:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-9453, %ax             # imm = 0xDB13
	jne	.LBB101_731
# %bb.144:                              # %main.split1531
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.10.290, %rdi
	leaq	-720(%rbp), %rsi
	movb	$0, %al
	callq	printf
	movw	$-9453, BasicBlockSignatureTracker # imm = 0xDB13
	movw	$27, RunTimeSignatureAdjuster
	jmp	.LBB101_147
.LBB101_145:                            # %Buffer__19
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-21602, %ax            # imm = 0xAB9E
	cmpw	$28822, %ax             # imm = 0x7096
	jne	.LBB101_731
# %bb.146:                              # %main.split1535
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$28822, BasicBlockSignatureTracker # imm = 0x7096
	movw	$-21602, RunTimeSignatureAdjuster # imm = 0xAB9E
.LBB101_147:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$35, %ax
	xorw	%cx, %ax
	cmpw	$-9429, %ax             # imm = 0xDB2B
	jne	.LBB101_731
# %bb.148:                              # %main.split1537
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9429, BasicBlockSignatureTracker # imm = 0xDB2B
	movw	$468, RunTimeSignatureAdjuster # imm = 0x1D4
.LBB101_149:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$445, %ax               # imm = 0x1BD
	xorw	%cx, %ax
	cmpw	$-9406, %ax             # imm = 0xDB42
	jne	.LBB101_731
# %bb.150:                              # %main.split1529
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9406, BasicBlockSignatureTracker # imm = 0xDB42
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB101_153
# %bb.151:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-9398, %ax             # imm = 0xDB4A
	jne	.LBB101_731
# %bb.152:                              # %main.split1539
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.11.291, %rdi
	movb	$0, %al
	callq	printf
	movw	$-9398, BasicBlockSignatureTracker # imm = 0xDB4A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_173
.LBB101_153:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-9355, %ax             # imm = 0xDB75
	jne	.LBB101_731
# %bb.154:                              # %main.split1541
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9355, BasicBlockSignatureTracker # imm = 0xDB75
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB101_157
# %bb.155:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-9354, %ax             # imm = 0xDB76
	jne	.LBB101_731
# %bb.156:                              # %main.split1545
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.12.292, %rdi
	movb	$0, %al
	callq	printf
	movw	$-9354, BasicBlockSignatureTracker # imm = 0xDB76
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_171
.LBB101_157:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-9346, %ax             # imm = 0xDB7E
	jne	.LBB101_731
# %bb.158:                              # %main.split1547
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9346, BasicBlockSignatureTracker # imm = 0xDB7E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB101_161
# %bb.159:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$251, %ax
	cmpw	$-9339, %ax             # imm = 0xDB85
	jne	.LBB101_731
# %bb.160:                              # %main.split1551
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.13.293, %rdi
	movb	$0, %al
	callq	printf
	movw	$-9339, BasicBlockSignatureTracker # imm = 0xDB85
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_169
.LBB101_161:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$235, %ax
	cmpw	$-9323, %ax             # imm = 0xDB95
	jne	.LBB101_731
# %bb.162:                              # %main.split1553
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9323, BasicBlockSignatureTracker # imm = 0xDB95
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB101_165
# %bb.163:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$53, %ax
	cmpw	$-9312, %ax             # imm = 0xDBA0
	jne	.LBB101_731
# %bb.164:                              # %main.split1557
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.14.294, %rdi
	movb	$0, %al
	callq	printf
	movw	$-9312, BasicBlockSignatureTracker # imm = 0xDBA0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_167
.LBB101_165:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$35, %ax
	cmpw	$-9290, %ax             # imm = 0xDBB6
	jne	.LBB101_731
# %bb.166:                              # %main.split1559
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.15.295, %rdi
	movb	$0, %al
	callq	printf
	movw	$-9290, BasicBlockSignatureTracker # imm = 0xDBB6
	movw	$22, RunTimeSignatureAdjuster
.LBB101_167:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-9282, %ax             # imm = 0xDBBE
	jne	.LBB101_731
# %bb.168:                              # %main.split1561
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9282, BasicBlockSignatureTracker # imm = 0xDBBE
	movw	$59, RunTimeSignatureAdjuster
.LBB101_169:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$77, %ax
	xorw	%cx, %ax
	cmpw	$-9272, %ax             # imm = 0xDBC8
	jne	.LBB101_731
# %bb.170:                              # %main.split1555
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9272, BasicBlockSignatureTracker # imm = 0xDBC8
	movw	$190, RunTimeSignatureAdjuster
.LBB101_171:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$187, %ax
	xorw	%cx, %ax
	cmpw	$-9267, %ax             # imm = 0xDBCD
	jne	.LBB101_731
# %bb.172:                              # %main.split1549
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9267, BasicBlockSignatureTracker # imm = 0xDBCD
	movw	$135, RunTimeSignatureAdjuster
.LBB101_173:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$155, %ax
	xorw	%cx, %ax
	cmpw	$-9263, %ax             # imm = 0xDBD1
	jne	.LBB101_731
# %bb.174:                              # %main.split1543
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, -16(%rbp)
	movw	$-9263, BasicBlockSignatureTracker # imm = 0xDBD1
	movw	$361, RunTimeSignatureAdjuster # imm = 0x169
.LBB101_175:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$367, %ax               # imm = 0x16F
	xorw	%cx, %ax
	cmpw	$-9257, %ax             # imm = 0xDBD7
	jne	.LBB101_731
# %bb.176:                              # %main.split1515
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9257, BasicBlockSignatureTracker # imm = 0xDBD7
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_205
.LBB101_177:                            # %Buffer__9
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23973, %ax             # imm = 0x5DA5
	cmpw	$-31490, %ax            # imm = 0x84FE
	jne	.LBB101_731
# %bb.178:                              # %main.split1445
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-31490, BasicBlockSignatureTracker # imm = 0x84FE
	movw	$23973, RunTimeSignatureAdjuster # imm = 0x5DA5
.LBB101_179:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$703, %ax               # imm = 0x2BF
	xorw	%cx, %ax
	cmpw	$-9244, %ax             # imm = 0xDBE4
	jne	.LBB101_731
# %bb.180:                              # %main.split1453
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9244, BasicBlockSignatureTracker # imm = 0xDBE4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB101_183
# %bb.181:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-9238, %ax             # imm = 0xDBEA
	jne	.LBB101_731
# %bb.182:                              # %main.split1565
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.11.291, %rdi
	movb	$0, %al
	callq	printf
	movw	$-9238, BasicBlockSignatureTracker # imm = 0xDBEA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_203
.LBB101_183:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-9230, %ax             # imm = 0xDBF2
	jne	.LBB101_731
# %bb.184:                              # %main.split1567
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9230, BasicBlockSignatureTracker # imm = 0xDBF2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB101_187
# %bb.185:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2033, %ax              # imm = 0x7F1
	cmpw	$-9213, %ax             # imm = 0xDC03
	jne	.LBB101_731
# %bb.186:                              # %main.split1571
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.12.292, %rdi
	movb	$0, %al
	callq	printf
	movw	$-9213, BasicBlockSignatureTracker # imm = 0xDC03
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_201
.LBB101_187:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2022, %ax              # imm = 0x7E6
	cmpw	$-9196, %ax             # imm = 0xDC14
	jne	.LBB101_731
# %bb.188:                              # %main.split1573
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9196, BasicBlockSignatureTracker # imm = 0xDC14
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB101_191
# %bb.189:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-9192, %ax             # imm = 0xDC18
	jne	.LBB101_731
# %bb.190:                              # %main.split1577
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.13.293, %rdi
	movb	$0, %al
	callq	printf
	movw	$-9192, BasicBlockSignatureTracker # imm = 0xDC18
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_199
.LBB101_191:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-9186, %ax             # imm = 0xDC1E
	jne	.LBB101_731
# %bb.192:                              # %main.split1579
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-9186, BasicBlockSignatureTracker # imm = 0xDC1E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	jne	.LBB101_195
# %bb.193:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-9182, %ax             # imm = 0xDC22
	jne	.LBB101_731
# %bb.194:                              # %main.split1583
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.14.294, %rdi
	movb	$0, %al
	callq	printf
	movw	$-9182, BasicBlockSignatureTracker # imm = 0xDC22
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_197
.LBB101_195:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$79, %ax
	cmpw	$-9135, %ax             # imm = 0xDC51
	jne	.LBB101_731
# %bb.196:                              # %main.split1585
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.15.295, %rdi
	movb	$0, %al
	callq	printf
	movw	$-9135, BasicBlockSignatureTracker # imm = 0xDC51
	movw	$115, RunTimeSignatureAdjuster
.LBB101_197:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$118, %ax
	xorw	%cx, %ax
	cmpw	$-9132, %ax             # imm = 0xDC54
	jne	.LBB101_731
# %bb.198:                              # %main.split1587
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9132, BasicBlockSignatureTracker # imm = 0xDC54
	movw	$76, RunTimeSignatureAdjuster
.LBB101_199:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$125, %ax
	xorw	%cx, %ax
	cmpw	$-9115, %ax             # imm = 0xDC65
	jne	.LBB101_731
# %bb.200:                              # %main.split1581
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9115, BasicBlockSignatureTracker # imm = 0xDC65
	movw	$102, RunTimeSignatureAdjuster
.LBB101_201:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$120, %ax
	xorw	%cx, %ax
	cmpw	$-9093, %ax             # imm = 0xDC7B
	jne	.LBB101_731
# %bb.202:                              # %main.split1575
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9093, BasicBlockSignatureTracker # imm = 0xDC7B
	movw	$1937, RunTimeSignatureAdjuster # imm = 0x791
.LBB101_203:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1941, %ax              # imm = 0x795
	xorw	%cx, %ax
	cmpw	$-9089, %ax             # imm = 0xDC7F
	jne	.LBB101_731
# %bb.204:                              # %main.split1569
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, -16(%rbp)
	movw	$-9089, BasicBlockSignatureTracker # imm = 0xDC7F
	movw	$1960, RunTimeSignatureAdjuster # imm = 0x7A8
.LBB101_205:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1876, %ax              # imm = 0x754
	xorw	%cx, %ax
	cmpw	$-9085, %ax             # imm = 0xDC83
	jne	.LBB101_731
# %bb.206:                              # %main.split1563
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9085, BasicBlockSignatureTracker # imm = 0xDC83
	movw	$1432, RunTimeSignatureAdjuster # imm = 0x598
	jmp	.LBB101_209
.LBB101_207:                            # %Buffer__4
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1262, %ax              # imm = 0x4EE
	cmpw	$-8715, %ax             # imm = 0xDDF5
	jne	.LBB101_731
# %bb.208:                              # %main.split1425
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8715, BasicBlockSignatureTracker # imm = 0xDDF5
	movw	$1262, RunTimeSignatureAdjuster # imm = 0x4EE
.LBB101_209:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1423, %ax              # imm = 0x58F
	xorw	%cx, %ax
	cmpw	$-9068, %ax             # imm = 0xDC94
	jne	.LBB101_731
# %bb.210:                              # %main.split1589
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9068, BasicBlockSignatureTracker # imm = 0xDC94
	movw	$1057, RunTimeSignatureAdjuster # imm = 0x421
.LBB101_211:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1064, %ax              # imm = 0x428
	xorw	%cx, %ax
	cmpw	$-9059, %ax             # imm = 0xDC9D
	jne	.LBB101_731
# %bb.212:                              # %main.split1405
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	xb_mode, %eax
	movw	$-9059, BasicBlockSignatureTracker # imm = 0xDC9D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_223
# %bb.213:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-9054, %ax             # imm = 0xDCA2
	jne	.LBB101_731
# %bb.214:                              # %main.split1593
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-28(%rbp), %eax
	movw	$-9054, BasicBlockSignatureTracker # imm = 0xDCA2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_217
# %bb.215:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-9035, %ax             # imm = 0xDCB5
	jne	.LBB101_731
# %bb.216:                              # %main.split1595
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.16.296, %rdi
	movb	$0, %al
	callq	printf
	movl	$1, %esi
	movq	stdout, %rdi
	subl	comp_color, %esi
	movw	$-9035, BasicBlockSignatureTracker # imm = 0xDCB5
	movw	$-14229, RunTimeSignatureAdjuster # imm = 0xC86B
	callq	display_board
	movw	$-9035, BasicBlockSignatureTracker # imm = 0xDCB5
	movw	$-14229, RunTimeSignatureAdjuster # imm = 0xC86B
	movw	$-9035, BasicBlockSignatureTracker # imm = 0xDCB5
	movw	$23, RunTimeSignatureAdjuster
.LBB101_217:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-9028, %ax             # imm = 0xDCBC
	jne	.LBB101_731
# %bb.218:                              # %main.split1597
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-16(%rbp), %eax
	movw	$-9028, BasicBlockSignatureTracker # imm = 0xDCBC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_221
# %bb.219:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$-9020, %ax             # imm = 0xDCC4
	jne	.LBB101_731
# %bb.220:                              # %main.split1601
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.17.297, %rdi
	movb	$0, %al
	callq	printf
	leaq	-336(%rbp), %rdi
	movq	stdin, %rdx
	movw	$-9020, BasicBlockSignatureTracker # imm = 0xDCC4
	movw	$-14223, RunTimeSignatureAdjuster # imm = 0xC871
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	movw	$-9020, BasicBlockSignatureTracker # imm = 0xDCC4
	movw	$-14223, RunTimeSignatureAdjuster # imm = 0xC871
	movw	$-9020, BasicBlockSignatureTracker # imm = 0xDCC4
	movw	$120, RunTimeSignatureAdjuster
.LBB101_221:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$117, %ax
	xorw	%cx, %ax
	cmpw	$-9015, %ax             # imm = 0xDCC9
	jne	.LBB101_731
# %bb.222:                              # %main.split1599
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-9015, BasicBlockSignatureTracker # imm = 0xDCC9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_259
.LBB101_223:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$-8983, %ax             # imm = 0xDCE9
	jne	.LBB101_731
# %bb.224:                              # %main.split1591
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	must_sit, %eax
	movw	$-8983, BasicBlockSignatureTracker # imm = 0xDCE9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_241
# %bb.225:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-8976, %ax             # imm = 0xDCF0
	jne	.LBB101_731
# %bb.226:                              # %main.split1607
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	allow_pondering, %eax
	movw	$-8976, BasicBlockSignatureTracker # imm = 0xDCF0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_237
# %bb.227:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-8973, %ax             # imm = 0xDCF3
	jne	.LBB101_731
# %bb.228:                              # %main.split1609
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-12(%rbp), %eax
	movw	$-8973, BasicBlockSignatureTracker # imm = 0xDCF3
	movw	$3, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_237
# %bb.229:                              # %Buffer__20
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23649, %ax             # imm = 0x5C61
	cmpw	$-32622, %ax            # imm = 0x8092
	jne	.LBB101_731
# %bb.230:                              # %main.split1613
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-32622, BasicBlockSignatureTracker # imm = 0x8092
	movw	$23649, RunTimeSignatureAdjuster # imm = 0x5C61
# %bb.231:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$499, %ax               # imm = 0x1F3
	xorw	%cx, %ax
	cmpw	$-8960, %ax             # imm = 0xDD00
	jne	.LBB101_731
# %bb.232:                              # %main.split2103
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-20(%rbp), %eax
	movw	$-8960, BasicBlockSignatureTracker # imm = 0xDD00
	movw	$496, RunTimeSignatureAdjuster # imm = 0x1F0
	cmpl	$0, %eax
	jne	.LBB101_237
# %bb.233:                              # %Buffer__21
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-481, %ax              # imm = 0xFE1F
	cmpw	$8991, %ax              # imm = 0x231F
	jne	.LBB101_731
# %bb.234:                              # %main.split1615
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$8991, BasicBlockSignatureTracker # imm = 0x231F
	movw	$-481, RunTimeSignatureAdjuster # imm = 0xFE1F
# %bb.235:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-8951, %ax             # imm = 0xDD09
	jne	.LBB101_731
# %bb.236:                              # %main.split2105
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	move_number, %eax
	movw	$-8951, BasicBlockSignatureTracker # imm = 0xDD09
	movw	$505, RunTimeSignatureAdjuster # imm = 0x1F9
	cmpl	$0, %eax
	jne	.LBB101_239
.LBB101_237:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$511, %ax               # imm = 0x1FF
	xorw	%cx, %ax
	cmpw	$-8945, %ax             # imm = 0xDD0F
	jne	.LBB101_731
# %bb.238:                              # %main.split1611
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	is_analyzing, %eax
	movw	$-8945, BasicBlockSignatureTracker # imm = 0xDD0F
	movw	$486, RunTimeSignatureAdjuster # imm = 0x1E6
	cmpl	$0, %eax
	jne	.LBB101_241
	jmp	.LBB101_251
.LBB101_239:                            # %Buffer__22
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20531, %ax            # imm = 0xAFCD
	cmpw	$29380, %ax             # imm = 0x72C4
	jne	.LBB101_731
# %bb.240:                              # %main.split1617
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$29380, BasicBlockSignatureTracker # imm = 0x72C4
	movw	$-20947, RunTimeSignatureAdjuster # imm = 0xAE2D
.LBB101_241:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$496, %ax               # imm = 0x1F0
	xorw	%cx, %ax
	cmpw	$-8935, %ax             # imm = 0xDD19
	jne	.LBB101_731
# %bb.242:                              # %main.split1605
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	result, %eax
	movw	$-8935, BasicBlockSignatureTracker # imm = 0xDD19
	movw	$22, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_253
# %bb.243:                              # %Buffer__24
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25537, %ax            # imm = 0x9C3F
	cmpw	$16678, %ax             # imm = 0x4126
	jne	.LBB101_731
# %bb.244:                              # %main.split1623
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$16678, BasicBlockSignatureTracker # imm = 0x4126
	movw	$-25537, RunTimeSignatureAdjuster # imm = 0x9C3F
# %bb.245:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$-8925, %ax             # imm = 0xDD23
	jne	.LBB101_731
# %bb.246:                              # %main.split2107
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-16(%rbp), %eax
	movw	$-8925, BasicBlockSignatureTracker # imm = 0xDD23
	movw	$44, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_253
# %bb.247:                              # %Buffer__25
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-31925, %ax            # imm = 0x834B
	cmpw	$24168, %ax             # imm = 0x5E68
	jne	.LBB101_731
# %bb.248:                              # %main.split1625
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$24168, BasicBlockSignatureTracker # imm = 0x5E68
	movw	$-31925, RunTimeSignatureAdjuster # imm = 0x834B
# %bb.249:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-8905, %ax             # imm = 0xDD37
	jne	.LBB101_731
# %bb.250:                              # %main.split2109
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-456(%rbp), %rdi
	movl	$1, is_pondering
	movw	$-8905, BasicBlockSignatureTracker # imm = 0xDD37
	movw	$-13873, RunTimeSignatureAdjuster # imm = 0xC9CF
	callq	think
	movw	$-8905, BasicBlockSignatureTracker # imm = 0xDD37
	movw	$-13873, RunTimeSignatureAdjuster # imm = 0xC9CF
	movl	$0, is_pondering
	movl	$0, ply
	movw	$-8905, BasicBlockSignatureTracker # imm = 0xDD37
	movw	$56, RunTimeSignatureAdjuster
	jmp	.LBB101_253
.LBB101_251:                            # %Buffer__23
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-31537, %ax            # imm = 0x84CF
	cmpw	$22976, %ax             # imm = 0x59C0
	jne	.LBB101_731
# %bb.252:                              # %main.split1619
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$22976, BasicBlockSignatureTracker # imm = 0x59C0
	movw	$-31537, RunTimeSignatureAdjuster # imm = 0x84CF
.LBB101_253:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$-8902, %ax             # imm = 0xDD3A
	jne	.LBB101_731
# %bb.254:                              # %main.split1621
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-16(%rbp), %eax
	movw	$-8902, BasicBlockSignatureTracker # imm = 0xDD3A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_257
# %bb.255:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$101, %ax
	cmpw	$-8865, %ax             # imm = 0xDD5F
	jne	.LBB101_731
# %bb.256:                              # %main.split1629
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movq	stdin, %rdx
	movw	$-8865, BasicBlockSignatureTracker # imm = 0xDD5F
	movw	$-13846, RunTimeSignatureAdjuster # imm = 0xC9EA
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	movw	$-8865, BasicBlockSignatureTracker # imm = 0xDD5F
	movw	$-13846, RunTimeSignatureAdjuster # imm = 0xC9EA
	movw	$-8865, BasicBlockSignatureTracker # imm = 0xDD5F
	movw	$101, RunTimeSignatureAdjuster
.LBB101_257:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$93, %ax
	xorw	%cx, %ax
	cmpw	$-8857, %ax             # imm = 0xDD67
	jne	.LBB101_731
# %bb.258:                              # %main.split1627
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8857, BasicBlockSignatureTracker # imm = 0xDD67
	movw	$430, RunTimeSignatureAdjuster # imm = 0x1AE
.LBB101_259:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$420, %ax               # imm = 0x1A4
	xorw	%cx, %ax
	cmpw	$-8851, %ax             # imm = 0xDD6D
	jne	.LBB101_731
# %bb.260:                              # %main.split1603
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-12(%rbp), %eax
	movw	$-8851, BasicBlockSignatureTracker # imm = 0xDD6D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_287
# %bb.261:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-8847, %ax             # imm = 0xDD71
	jne	.LBB101_731
# %bb.262:                              # %main.split1633
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movw	$-8847, BasicBlockSignatureTracker # imm = 0xDD71
	movw	$0, RunTimeSignatureAdjuster
	callq	is_move
	movw	$-8847, BasicBlockSignatureTracker # imm = 0xDD71
	movw	$28, RunTimeSignatureAdjuster
	movw	$-8847, BasicBlockSignatureTracker # imm = 0xDD71
	movw	$28, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_287
# %bb.263:                              # %Buffer__26
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2693, %ax              # imm = 0xA85
	cmpw	$-10252, %ax            # imm = 0xD7F4
	jne	.LBB101_731
# %bb.264:                              # %main.split1635
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-10252, BasicBlockSignatureTracker # imm = 0xD7F4
	movw	$2693, RunTimeSignatureAdjuster # imm = 0xA85
# %bb.265:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-8834, %ax             # imm = 0xDD7E
	jne	.LBB101_731
# %bb.266:                              # %main.split2111
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-384(%rbp), %rsi
	leaq	-336(%rbp), %rdi
	movw	$-8834, BasicBlockSignatureTracker # imm = 0xDD7E
	movw	$0, RunTimeSignatureAdjuster
	callq	verify_coord
	movw	$-8834, BasicBlockSignatureTracker # imm = 0xDD7E
	movw	$0, RunTimeSignatureAdjuster
	movw	$-8834, BasicBlockSignatureTracker # imm = 0xDD7E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_283
# %bb.267:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$244, %ax
	cmpw	$-8822, %ax             # imm = 0xDD8A
	jne	.LBB101_731
# %bb.268:                              # %main.split1637
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-384(%rbp), %rdi
	leaq	-24976(%rbp), %rax
	movslq	move_number, %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	-384(%rbp), %rcx
	movq	%rcx, (%rax)
	movq	-376(%rbp), %rcx
	movq	%rcx, 8(%rax)
	movq	-368(%rbp), %rcx
	movq	%rcx, 16(%rax)
	movl	hash, %eax
	movslq	move_number, %rcx
	movl	%eax, hash_history(,%rcx,4)
	movw	$-8822, BasicBlockSignatureTracker # imm = 0xDD8A
	movw	$22330, RunTimeSignatureAdjuster # imm = 0x573A
	xorl	%esi, %esi
	callq	make
	leaq	-10576(%rbp), %rax
	movw	$-8822, BasicBlockSignatureTracker # imm = 0xDD8A
	movw	$22330, RunTimeSignatureAdjuster # imm = 0x573A
	movl	move_number, %ecx
	movl	%ecx, %edx
	addl	$1, %edx
	movl	%edx, move_number
	movslq	%ecx, %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	path_x, %rcx
	movq	%rcx, (%rax)
	movq	path_x+8, %rcx
	movq	%rcx, 8(%rax)
	movw	$-8822, BasicBlockSignatureTracker # imm = 0xDD8A
	movw	$-13898, RunTimeSignatureAdjuster # imm = 0xC9B6
	callq	reset_piece_square
	movw	$-8822, BasicBlockSignatureTracker # imm = 0xDD8A
	movw	$-13898, RunTimeSignatureAdjuster # imm = 0xC9B6
	movl	root_to_move, %eax
	xorl	$1, %eax
	movl	%eax, root_to_move
	movl	book_ply, %eax
	movw	$-8822, BasicBlockSignatureTracker # imm = 0xDD8A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$40, %eax
	jge	.LBB101_277
# %bb.269:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-8803, %ax             # imm = 0xDD9D
	jne	.LBB101_731
# %bb.270:                              # %main.split1641
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	book_ply, %eax
	movw	$-8803, BasicBlockSignatureTracker # imm = 0xDD9D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_273
# %bb.271:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-8788, %ax             # imm = 0xDDAC
	jne	.LBB101_731
# %bb.272:                              # %main.split1647
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rsi
	movl	$opening_history, %edi
	callq	strcpy
	movw	$-8788, BasicBlockSignatureTracker # imm = 0xDDAC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_275
.LBB101_273:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$44, %ax
	cmpw	$-8783, %ax             # imm = 0xDDB1
	jne	.LBB101_731
# %bb.274:                              # %main.split1645
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$opening_history, %rdi
	leaq	-336(%rbp), %rsi
	callq	strcat
	movw	$-8783, BasicBlockSignatureTracker # imm = 0xDDB1
	movw	$29, RunTimeSignatureAdjuster
.LBB101_275:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-8782, %ax             # imm = 0xDDB2
	jne	.LBB101_731
# %bb.276:                              # %main.split1649
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8782, BasicBlockSignatureTracker # imm = 0xDDB2
	movw	$56, RunTimeSignatureAdjuster
.LBB101_277:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$74, %ax
	xorw	%cx, %ax
	cmpw	$-8768, %ax             # imm = 0xDDC0
	jne	.LBB101_731
# %bb.278:                              # %main.split1643
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	book_ply, %eax
	addl	$1, %eax
	movl	%eax, book_ply
	movl	-28(%rbp), %eax
	movw	$-8768, BasicBlockSignatureTracker # imm = 0xDDC0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_281
# %bb.279:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-8747, %ax             # imm = 0xDDD5
	jne	.LBB101_731
# %bb.280:                              # %main.split1651
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.16.296, %rdi
	movb	$0, %al
	callq	printf
	movl	$1, %esi
	movq	stdout, %rdi
	subl	comp_color, %esi
	movw	$-8747, BasicBlockSignatureTracker # imm = 0xDDD5
	movw	$-14069, RunTimeSignatureAdjuster # imm = 0xC90B
	callq	display_board
	movw	$-8747, BasicBlockSignatureTracker # imm = 0xDDD5
	movw	$-14069, RunTimeSignatureAdjuster # imm = 0xC90B
	movw	$-8747, BasicBlockSignatureTracker # imm = 0xDDD5
	movw	$21, RunTimeSignatureAdjuster
.LBB101_281:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$-8727, %ax             # imm = 0xDDE9
	jne	.LBB101_731
# %bb.282:                              # %main.split1653
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8727, BasicBlockSignatureTracker # imm = 0xDDE9
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_285
.LBB101_283:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$138, %ax
	cmpw	$-8716, %ax             # imm = 0xDDF4
	jne	.LBB101_731
# %bb.284:                              # %main.split1639
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.18.298, %rdi
	leaq	-336(%rbp), %rsi
	movb	$0, %al
	callq	printf
	movw	$-8716, BasicBlockSignatureTracker # imm = 0xDDF4
	movw	$29, RunTimeSignatureAdjuster
.LBB101_285:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$992, %ax               # imm = 0x3E0
	xorw	%cx, %ax
	cmpw	$-8695, %ax             # imm = 0xDE09
	jne	.LBB101_731
# %bb.286:                              # %main.split1655
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8695, BasicBlockSignatureTracker # imm = 0xDE09
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_728
.LBB101_287:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$892, %ax               # imm = 0x37C
	xorw	%cx, %ax
	cmpw	$-8687, %ax             # imm = 0xDE11
	jne	.LBB101_731
# %bb.288:                              # %main.split1631
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.19.299, %rsi
	leaq	-336(%rbp), %rdi
	callq	strstr
	movw	$-8687, BasicBlockSignatureTracker # imm = 0xDE11
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB101_299
# %bb.289:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-8659, %ax             # imm = 0xDE2D
	jne	.LBB101_731
# %bb.290:                              # %main.split1661
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rax
	movq	%rax, -40(%rbp)
	movw	$-8659, BasicBlockSignatureTracker # imm = 0xDE2D
	movw	$0, RunTimeSignatureAdjuster
.LBB101_291:                            #   Parent Loop BB101_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-8654, %ax             # imm = 0xDE32
	jne	.LBB101_730
# %bb.292:                              # %main.split1663
                                        #   in Loop: Header=BB101_291 Depth=2
	movq	-40(%rbp), %rax
	movb	(%rax), %al
	movw	$-8654, BasicBlockSignatureTracker # imm = 0xDE32
	movw	$0, RunTimeSignatureAdjuster
	cmpb	$0, %al
	je	.LBB101_297
# %bb.293:                              #   in Loop: Header=BB101_291 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-8641, %ax             # imm = 0xDE3F
	jne	.LBB101_730
# %bb.294:                              # %main.split1665
                                        #   in Loop: Header=BB101_291 Depth=2
	movq	-40(%rbp), %rax
	movsbl	(%rax), %edi
	callq	tolower
	movq	-40(%rbp), %rcx
	movb	%al, (%rcx)
	movw	$-8641, BasicBlockSignatureTracker # imm = 0xDE3F
	movw	$0, RunTimeSignatureAdjuster
# %bb.295:                              #   in Loop: Header=BB101_291 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$100, %ax
	cmpw	$-8613, %ax             # imm = 0xDE5B
	jne	.LBB101_730
# %bb.296:                              # %main.split1669
                                        #   in Loop: Header=BB101_291 Depth=2
	movq	-40(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -40(%rbp)
	movw	$-8613, BasicBlockSignatureTracker # imm = 0xDE5B
	movw	$118, RunTimeSignatureAdjuster
	jmp	.LBB101_291
.LBB101_297:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$108, %ax
	cmpw	$-8610, %ax             # imm = 0xDE5E
	jne	.LBB101_731
# %bb.298:                              # %main.split1667
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8610, BasicBlockSignatureTracker # imm = 0xDE5E
	movw	$79, RunTimeSignatureAdjuster
.LBB101_299:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$114, %ax
	xorw	%cx, %ax
	cmpw	$-8605, %ax             # imm = 0xDE63
	jne	.LBB101_731
# %bb.300:                              # %main.split1659
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.20.300, %esi
	callq	strcmp
	movw	$-8605, BasicBlockSignatureTracker # imm = 0xDE63
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_303
# %bb.301:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-8596, %ax             # imm = 0xDE6C
	jne	.LBB101_732
# %bb.302:                              # %main.split1673
	movw	$-8596, BasicBlockSignatureTracker # imm = 0xDE6C
	movw	$0, RunTimeSignatureAdjuster
	callq	free_hash
	movw	$-8596, BasicBlockSignatureTracker # imm = 0xDE6C
	movw	$0, RunTimeSignatureAdjuster
	movw	$-8596, BasicBlockSignatureTracker # imm = 0xDE6C
	movw	$0, RunTimeSignatureAdjuster
	callq	free_ecache
	movw	$-8596, BasicBlockSignatureTracker # imm = 0xDE6C
	movw	$0, RunTimeSignatureAdjuster
	xorl	%edi, %edi
	callq	exit
	movw	$-8596, BasicBlockSignatureTracker # imm = 0xDE6C
	movw	$0, RunTimeSignatureAdjuster
.LBB101_303:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-8588, %ax             # imm = 0xDE74
	jne	.LBB101_731
# %bb.304:                              # %main.split1671
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.21.301, %esi
	callq	strcmp
	movw	$-8588, BasicBlockSignatureTracker # imm = 0xDE74
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_313
# %bb.305:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-8580, %ax             # imm = 0xDE7C
	jne	.LBB101_731
# %bb.306:                              # %main.split1677
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	is_analyzing, %eax
	movw	$-8580, BasicBlockSignatureTracker # imm = 0xDE7C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_309
# %bb.307:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$228, %ax
	cmpw	$-8552, %ax             # imm = 0xDE98
	jne	.LBB101_731
# %bb.308:                              # %main.split1679
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, is_analyzing
	movl	$0, is_pondering
	movl	$0, time_for_move
	movw	$-8552, BasicBlockSignatureTracker # imm = 0xDE98
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_311
.LBB101_309:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$229, %ax
	cmpw	$-8551, %ax             # imm = 0xDE99
	jne	.LBB101_732
# %bb.310:                              # %main.split1681
	movw	$-8551, BasicBlockSignatureTracker # imm = 0xDE99
	movw	$245, RunTimeSignatureAdjuster
	callq	free_hash
	movw	$-8551, BasicBlockSignatureTracker # imm = 0xDE99
	movw	$245, RunTimeSignatureAdjuster
	movw	$-8551, BasicBlockSignatureTracker # imm = 0xDE99
	movw	$245, RunTimeSignatureAdjuster
	callq	free_ecache
	movw	$-8551, BasicBlockSignatureTracker # imm = 0xDE99
	movw	$245, RunTimeSignatureAdjuster
	xorl	%edi, %edi
	callq	exit
	movw	$-8551, BasicBlockSignatureTracker # imm = 0xDE99
	movw	$0, RunTimeSignatureAdjuster
.LBB101_311:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-8549, %ax             # imm = 0xDE9B
	jne	.LBB101_731
# %bb.312:                              # %main.split1683
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8549, BasicBlockSignatureTracker # imm = 0xDE9B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_724
.LBB101_313:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$222, %ax
	cmpw	$-8534, %ax             # imm = 0xDEAA
	jne	.LBB101_731
# %bb.314:                              # %main.split1675
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.22.302, %esi
	callq	strcmp
	movw	$-8534, BasicBlockSignatureTracker # imm = 0xDEAA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_317
# %bb.315:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-8527, %ax             # imm = 0xDEB1
	jne	.LBB101_731
# %bb.316:                              # %main.split1687
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.23.303, %esi
	callq	strcmp
	movw	$-8527, BasicBlockSignatureTracker # imm = 0xDEB1
	movw	$27, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_319
.LBB101_317:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$106, %ax
	xorw	%cx, %ax
	cmpw	$-8512, %ax             # imm = 0xDEC0
	jne	.LBB101_731
# %bb.318:                              # %main.split1689
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-28(%rbp), %rdi
	movw	$-8512, BasicBlockSignatureTracker # imm = 0xDEC0
	movw	$0, RunTimeSignatureAdjuster
	callq	toggle_bool
	movw	$-8512, BasicBlockSignatureTracker # imm = 0xDEC0
	movw	$0, RunTimeSignatureAdjuster
	movw	$-8512, BasicBlockSignatureTracker # imm = 0xDEC0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_722
.LBB101_319:                            # %Buffer__27
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11975, %ax             # imm = 0x2EC7
	cmpw	$-3978, %ax             # imm = 0xF076
	jne	.LBB101_731
# %bb.320:                              # %main.split1691
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-3978, BasicBlockSignatureTracker # imm = 0xF076
	movw	$11975, RunTimeSignatureAdjuster # imm = 0x2EC7
# %bb.321:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$109, %ax
	xorw	%cx, %ax
	cmpw	$-8484, %ax             # imm = 0xDEDC
	jne	.LBB101_731
# %bb.322:                              # %main.split2113
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.24.304, %rsi
	leaq	-336(%rbp), %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-8484, BasicBlockSignatureTracker # imm = 0xDEDC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_325
# %bb.323:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-8478, %ax             # imm = 0xDEE2
	jne	.LBB101_731
# %bb.324:                              # %main.split1697
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.25.305, %rsi
	leaq	-32(%rbp), %rdx
	leaq	-336(%rbp), %rdi
	addq	$6, %rdi
	movb	$0, %al
	callq	__isoc99_sscanf
	movl	$0, raw_nodes
	movw	$-8478, BasicBlockSignatureTracker # imm = 0xDEE2
	movw	$-13406, RunTimeSignatureAdjuster # imm = 0xCBA2
	callq	rtime
	movw	$-8478, BasicBlockSignatureTracker # imm = 0xDEE2
	movw	$-13406, RunTimeSignatureAdjuster # imm = 0xCBA2
	movq	%rax, -344(%rbp)
	movl	-32(%rbp), %edi
	movw	$-8478, BasicBlockSignatureTracker # imm = 0xDEE2
	movw	$30047, RunTimeSignatureAdjuster # imm = 0x755F
	callq	perft
	movabsq	$.L.str.26.306, %rdi
	movw	$-8478, BasicBlockSignatureTracker # imm = 0xDEE2
	movw	$30047, RunTimeSignatureAdjuster # imm = 0x755F
	movl	-32(%rbp), %esi
	movl	raw_nodes, %edx
	movb	$0, %al
	callq	printf
	movw	$-8478, BasicBlockSignatureTracker # imm = 0xDEE2
	movw	$-13406, RunTimeSignatureAdjuster # imm = 0xCBA2
	callq	rtime
	movw	$-8478, BasicBlockSignatureTracker # imm = 0xDEE2
	movw	$-13406, RunTimeSignatureAdjuster # imm = 0xCBA2
	movq	-344(%rbp), %rsi
	movw	$-8478, BasicBlockSignatureTracker # imm = 0xDEE2
	movw	$16805, RunTimeSignatureAdjuster # imm = 0x41A5
	movq	%rax, %rdi
	callq	rdifftime
	movabsq	$.L.str.27.307, %rdi
	movsd	.LCPI101_0(%rip), %xmm1 # xmm1 = mem[0],zero
	movw	$-8478, BasicBlockSignatureTracker # imm = 0xDEE2
	movw	$16805, RunTimeSignatureAdjuster # imm = 0x41A5
	cvtsi2ssl	%eax, %xmm0
	cvtss2sd	%xmm0, %xmm0
	divsd	%xmm1, %xmm0
	movb	$1, %al
	callq	printf
	movw	$-8478, BasicBlockSignatureTracker # imm = 0xDEE2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_720
.LBB101_325:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$38, %ax
	cmpw	$-8454, %ax             # imm = 0xDEFA
	jne	.LBB101_731
# %bb.326:                              # %main.split1695
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.28.308, %esi
	callq	strcmp
	movw	$-8454, BasicBlockSignatureTracker # imm = 0xDEFA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_343
# %bb.327:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-8453, %ax             # imm = 0xDEFB
	jne	.LBB101_731
# %bb.328:                              # %main.split1703
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	xb_mode, %eax
	movw	$-8453, BasicBlockSignatureTracker # imm = 0xDEFB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_331
# %bb.329:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-8449, %ax             # imm = 0xDEFF
	jne	.LBB101_731
# %bb.330:                              # %main.split1705
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.29.309, %rdi
	movabsq	$setcode, %rsi
	movb	$0, %al
	callq	printf
	movw	$-8449, BasicBlockSignatureTracker # imm = 0xDEFF
	movw	$4, RunTimeSignatureAdjuster
.LBB101_331:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$459, %ax               # imm = 0x1CB
	xorw	%cx, %ax
	cmpw	$-8400, %ax             # imm = 0xDF30
	jne	.LBB101_731
# %bb.332:                              # %main.split1707
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	is_analyzing, %eax
	movw	$-8400, BasicBlockSignatureTracker # imm = 0xDF30
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_339
# %bb.333:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-8390, %ax             # imm = 0xDF3A
	jne	.LBB101_731
# %bb.334:                              # %main.split1711
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$material, %rdi
	movabsq	$std_material, %rsi
	movl	$56, %edx
	callq	memcpy
	movl	$2, Variant
	movw	$-8390, BasicBlockSignatureTracker # imm = 0xDF3A
	movw	$1957, RunTimeSignatureAdjuster # imm = 0x7A5
	callq	init_game
	movw	$-8390, BasicBlockSignatureTracker # imm = 0xDF3A
	movw	$1957, RunTimeSignatureAdjuster # imm = 0x7A5
	movw	$-8390, BasicBlockSignatureTracker # imm = 0xDF3A
	movw	$-13562, RunTimeSignatureAdjuster # imm = 0xCB06
	callq	initialize_hash
	movw	$-8390, BasicBlockSignatureTracker # imm = 0xDF3A
	movw	$-13562, RunTimeSignatureAdjuster # imm = 0xCB06
	movl	-44(%rbp), %eax
	movw	$-8390, BasicBlockSignatureTracker # imm = 0xDF3A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_337
# %bb.335:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$121, %ax
	cmpw	$-8381, %ax             # imm = 0xDF43
	jne	.LBB101_731
# %bb.336:                              # %main.split1715
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8381, BasicBlockSignatureTracker # imm = 0xDF43
	movw	$-13411, RunTimeSignatureAdjuster # imm = 0xCB9D
	callq	clear_tt
	movw	$-8381, BasicBlockSignatureTracker # imm = 0xDF43
	movw	$-13411, RunTimeSignatureAdjuster # imm = 0xCB9D
	movw	$-8381, BasicBlockSignatureTracker # imm = 0xDF43
	movw	$-10800, RunTimeSignatureAdjuster # imm = 0xD5D0
	callq	reset_ecache
	movw	$-8381, BasicBlockSignatureTracker # imm = 0xDF43
	movw	$-10800, RunTimeSignatureAdjuster # imm = 0xD5D0
	movw	$-8381, BasicBlockSignatureTracker # imm = 0xDF43
	movw	$121, RunTimeSignatureAdjuster
.LBB101_337:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$-8378, %ax             # imm = 0xDF46
	jne	.LBB101_731
# %bb.338:                              # %main.split1713
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, -20(%rbp)
	movl	$0, must_sit
	movl	$0, go_fast
	movl	$0, piecedead
	movl	$0, partnerdead
	movl	$0, kibitzed
	movl	$0, fixed_time
	movl	$0, root_to_move
	movl	$0, comp_color
	movl	$0, move_number
	movslq	move_number, %rax
	movl	$0, hash_history(,%rax,4)
	movl	$0, bookidx
	movl	$2000, opp_rating       # imm = 0x7D0
	movl	$2000, my_rating        # imm = 0x7D0
	movl	$0, must_go
	movl	$1, tradefreely
	movl	$0, -16(%rbp)
	movw	$-8378, BasicBlockSignatureTracker # imm = 0xDF46
	movw	$1319, RunTimeSignatureAdjuster # imm = 0x527
	movl	$1, %edi
	callq	CheckBadFlow
	movw	$-8378, BasicBlockSignatureTracker # imm = 0xDF46
	movw	$1319, RunTimeSignatureAdjuster # imm = 0x527
	movw	$-8378, BasicBlockSignatureTracker # imm = 0xDF46
	movw	$22335, RunTimeSignatureAdjuster # imm = 0x573F
	callq	ResetHandValue
	movw	$-8378, BasicBlockSignatureTracker # imm = 0xDF46
	movw	$22335, RunTimeSignatureAdjuster # imm = 0x573F
	movw	$-8378, BasicBlockSignatureTracker # imm = 0xDF46
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_341
.LBB101_339:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$104, %ax
	cmpw	$-8360, %ax             # imm = 0xDF58
	jne	.LBB101_731
# %bb.340:                              # %main.split1709
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8360, BasicBlockSignatureTracker # imm = 0xDF58
	movw	$1991, RunTimeSignatureAdjuster # imm = 0x7C7
	callq	init_game
	movw	$-8360, BasicBlockSignatureTracker # imm = 0xDF58
	movw	$1991, RunTimeSignatureAdjuster # imm = 0x7C7
	movl	$0, move_number
	movw	$-8360, BasicBlockSignatureTracker # imm = 0xDF58
	movw	$30, RunTimeSignatureAdjuster
.LBB101_341:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$54, %ax
	xorw	%cx, %ax
	cmpw	$-8336, %ax             # imm = 0xDF70
	jne	.LBB101_731
# %bb.342:                              # %main.split1717
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8336, BasicBlockSignatureTracker # imm = 0xDF70
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_718
.LBB101_343:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$395, %ax               # imm = 0x18B
	cmpw	$-8335, %ax             # imm = 0xDF71
	jne	.LBB101_731
# %bb.344:                              # %main.split1701
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.30.310, %esi
	callq	strcmp
	movw	$-8335, BasicBlockSignatureTracker # imm = 0xDF71
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_347
# %bb.345:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$243, %ax
	cmpw	$-8318, %ax             # imm = 0xDF82
	jne	.LBB101_731
# %bb.346:                              # %main.split1723
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-28(%rbp), %rdi
	movl	$1, xb_mode
	movw	$-8318, BasicBlockSignatureTracker # imm = 0xDF82
	movw	$322, RunTimeSignatureAdjuster # imm = 0x142
	callq	toggle_bool
	movw	$-8318, BasicBlockSignatureTracker # imm = 0xDF82
	movw	$322, RunTimeSignatureAdjuster # imm = 0x142
	movl	$2, %edi
	movl	$1, %esi
	callq	signal
	movabsq	$.L.str.16.296, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.31.311, %rdi
	movb	$0, %al
	callq	printf
	movw	$-8318, BasicBlockSignatureTracker # imm = 0xDF82
	movw	$24250, RunTimeSignatureAdjuster # imm = 0x5EBA
	callq	BegForPartner
	movw	$-8318, BasicBlockSignatureTracker # imm = 0xDF82
	movw	$24250, RunTimeSignatureAdjuster # imm = 0x5EBA
	movw	$-8318, BasicBlockSignatureTracker # imm = 0xDF82
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_716
.LBB101_347:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$232, %ax
	cmpw	$-8295, %ax             # imm = 0xDF99
	jne	.LBB101_731
# %bb.348:                              # %main.split1721
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.32.312, %esi
	callq	strcmp
	movw	$-8295, BasicBlockSignatureTracker # imm = 0xDF99
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_351
# %bb.349:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-8288, %ax             # imm = 0xDFA0
	jne	.LBB101_731
# %bb.350:                              # %main.split1729
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.33.313, %rdi
	movsd	.LCPI101_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	nodes, %esi
	movl	qnodes, %eax
	cvtsi2ssl	%eax, %xmm1
	movl	nodes, %eax
	cvtsi2ssl	%eax, %xmm2
	divss	%xmm2, %xmm1
	cvtss2sd	%xmm1, %xmm1
	mulsd	%xmm0, %xmm1
	cvtsd2ss	%xmm1, %xmm0
	cvtss2sd	%xmm0, %xmm0
	movb	$1, %al
	callq	printf
	movw	$-8288, BasicBlockSignatureTracker # imm = 0xDFA0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_714
.LBB101_351:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$-8287, %ax             # imm = 0xDFA1
	jne	.LBB101_731
# %bb.352:                              # %main.split1727
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.34.314, %esi
	callq	strcmp
	movw	$-8287, BasicBlockSignatureTracker # imm = 0xDFA1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_359
# %bb.353:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-8285, %ax             # imm = 0xDFA3
	jne	.LBB101_731
# %bb.354:                              # %main.split1735
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$post, %rdi
	movw	$-8285, BasicBlockSignatureTracker # imm = 0xDFA3
	movw	$355, RunTimeSignatureAdjuster # imm = 0x163
	callq	toggle_bool
	movw	$-8285, BasicBlockSignatureTracker # imm = 0xDFA3
	movw	$355, RunTimeSignatureAdjuster # imm = 0x163
	movl	xb_mode, %eax
	movw	$-8285, BasicBlockSignatureTracker # imm = 0xDFA3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_357
# %bb.355:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-8283, %ax             # imm = 0xDFA5
	jne	.LBB101_731
# %bb.356:                              # %main.split1737
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$1, post
	movw	$-8283, BasicBlockSignatureTracker # imm = 0xDFA5
	movw	$6, RunTimeSignatureAdjuster
.LBB101_357:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-8281, %ax             # imm = 0xDFA7
	jne	.LBB101_731
# %bb.358:                              # %main.split1739
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8281, BasicBlockSignatureTracker # imm = 0xDFA7
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_712
.LBB101_359:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-8263, %ax             # imm = 0xDFB9
	jne	.LBB101_731
# %bb.360:                              # %main.split1733
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.35.315, %esi
	callq	strcmp
	movw	$-8263, BasicBlockSignatureTracker # imm = 0xDFB9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_363
# %bb.361:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$-8242, %ax             # imm = 0xDFCE
	jne	.LBB101_731
# %bb.362:                              # %main.split1745
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, post
	movw	$-8242, BasicBlockSignatureTracker # imm = 0xDFCE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_710
.LBB101_363:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$118, %ax
	cmpw	$-8241, %ax             # imm = 0xDFCF
	jne	.LBB101_731
# %bb.364:                              # %main.split1743
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.36.316, %esi
	callq	strcmp
	movw	$-8241, BasicBlockSignatureTracker # imm = 0xDFCF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_368
# %bb.365:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-8239, %ax             # imm = 0xDFD1
	jne	.LBB101_731
# %bb.366:                              # %main.split1751
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8239, BasicBlockSignatureTracker # imm = 0xDFD1
	movw	$1917, RunTimeSignatureAdjuster # imm = 0x77D
.LBB101_367:                            # %.backedge
                                        #   in Loop: Header=BB101_5 Depth=1
	jmp	.LBB101_5
.LBB101_368:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-8230, %ax             # imm = 0xDFDA
	jne	.LBB101_731
# %bb.369:                              # %main.split1749
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.37.317, %esi
	callq	strcmp
	movw	$-8230, BasicBlockSignatureTracker # imm = 0xDFDA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_372
# %bb.370:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-8224, %ax             # imm = 0xDFE0
	jne	.LBB101_731
# %bb.371:                              # %main.split1755
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$1, allow_pondering
	movw	$-8224, BasicBlockSignatureTracker # imm = 0xDFE0
	movw	$1868, RunTimeSignatureAdjuster # imm = 0x74C
	jmp	.LBB101_367
.LBB101_372:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-8218, %ax             # imm = 0xDFE6
	jne	.LBB101_731
# %bb.373:                              # %main.split1753
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.38.318, %esi
	callq	strcmp
	movw	$-8218, BasicBlockSignatureTracker # imm = 0xDFE6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_376
# %bb.374:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-8216, %ax             # imm = 0xDFE8
	jne	.LBB101_731
# %bb.375:                              # %main.split1759
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, allow_pondering
	movw	$-8216, BasicBlockSignatureTracker # imm = 0xDFE8
	movw	$1860, RunTimeSignatureAdjuster # imm = 0x744
	jmp	.LBB101_367
.LBB101_376:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-8205, %ax             # imm = 0xDFF3
	jne	.LBB101_731
# %bb.377:                              # %main.split1757
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.39.319, %esi
	callq	strcmp
	movw	$-8205, BasicBlockSignatureTracker # imm = 0xDFF3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_380
# %bb.378:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-8196, %ax             # imm = 0xDFFC
	jne	.LBB101_731
# %bb.379:                              # %main.split1763
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8196, BasicBlockSignatureTracker # imm = 0xDFFC
	movw	$1872, RunTimeSignatureAdjuster # imm = 0x750
	jmp	.LBB101_367
.LBB101_380:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16327, %ax             # imm = 0x3FC7
	cmpw	$-8140, %ax             # imm = 0xE034
	jne	.LBB101_731
# %bb.381:                              # %main.split1761
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.40.320, %esi
	callq	strcmp
	movw	$-8140, BasicBlockSignatureTracker # imm = 0xE034
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_384
# %bb.382:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-8138, %ax             # imm = 0xE036
	jne	.LBB101_731
# %bb.383:                              # %main.split1767
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$1, white_to_move
	movl	$0, root_to_move
	movl	$0, comp_color
	movw	$-8138, BasicBlockSignatureTracker # imm = 0xE036
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_700
.LBB101_384:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$118, %ax
	cmpw	$-8126, %ax             # imm = 0xE042
	jne	.LBB101_731
# %bb.385:                              # %main.split1765
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.41.321, %esi
	callq	strcmp
	movw	$-8126, BasicBlockSignatureTracker # imm = 0xE042
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_388
# %bb.386:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-8113, %ax             # imm = 0xE04F
	jne	.LBB101_731
# %bb.387:                              # %main.split1773
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, white_to_move
	movl	$1, root_to_move
	movl	$1, comp_color
	movw	$-8113, BasicBlockSignatureTracker # imm = 0xE04F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_698
.LBB101_388:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-8111, %ax             # imm = 0xE051
	jne	.LBB101_731
# %bb.389:                              # %main.split1771
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.42.322, %esi
	callq	strcmp
	movw	$-8111, BasicBlockSignatureTracker # imm = 0xE051
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_392
# %bb.390:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-8104, %ax             # imm = 0xE058
	jne	.LBB101_731
# %bb.391:                              # %main.split1779
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$1, -20(%rbp)
	movw	$-8104, BasicBlockSignatureTracker # imm = 0xE058
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_696
.LBB101_392:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-8096, %ax             # imm = 0xE060
	jne	.LBB101_731
# %bb.393:                              # %main.split1777
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.43.323, %esi
	callq	strcmp
	movw	$-8096, BasicBlockSignatureTracker # imm = 0xE060
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_396
# %bb.394:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-8068, %ax             # imm = 0xE07C
	jne	.LBB101_731
# %bb.395:                              # %main.split1785
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-8068, BasicBlockSignatureTracker # imm = 0xE07C
	movw	$8778, RunTimeSignatureAdjuster # imm = 0x224A
	callq	check_phase
	movw	$-8068, BasicBlockSignatureTracker # imm = 0xE07C
	movw	$8778, RunTimeSignatureAdjuster # imm = 0x224A
	movw	$-8068, BasicBlockSignatureTracker # imm = 0xE07C
	movw	$-2940, RunTimeSignatureAdjuster # imm = 0xF484
	movl	$4293967296, %edi       # imm = 0xFFF0BDC0
	movl	$1000000, %esi          # imm = 0xF4240
	callq	eval
	movabsq	$.L.str.44.324, %rdi
	movw	$-8068, BasicBlockSignatureTracker # imm = 0xE07C
	movw	$-2940, RunTimeSignatureAdjuster # imm = 0xF484
	movl	%eax, %esi
	movb	$0, %al
	callq	printf
	movw	$-8068, BasicBlockSignatureTracker # imm = 0xE07C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_694
.LBB101_396:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$226, %ax
	cmpw	$-8062, %ax             # imm = 0xE082
	jne	.LBB101_731
# %bb.397:                              # %main.split1783
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.45.325, %esi
	callq	strcmp
	movw	$-8062, BasicBlockSignatureTracker # imm = 0xE082
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_400
# %bb.398:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-8042, %ax             # imm = 0xE096
	jne	.LBB101_731
# %bb.399:                              # %main.split1791
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	white_to_move, %eax
	movl	%eax, comp_color
	movl	$0, -20(%rbp)
	movw	$-8042, BasicBlockSignatureTracker # imm = 0xE096
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_692
.LBB101_400:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$35, %ax
	cmpw	$-8031, %ax             # imm = 0xE0A1
	jne	.LBB101_731
# %bb.401:                              # %main.split1789
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.46.326, %rsi
	leaq	-336(%rbp), %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-8031, BasicBlockSignatureTracker # imm = 0xE0A1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_404
# %bb.402:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-8024, %ax             # imm = 0xE0A8
	jne	.LBB101_731
# %bb.403:                              # %main.split1797
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.47.327, %rsi
	movabsq	$time_left, %rdx
	leaq	-336(%rbp), %rdi
	addq	$5, %rdi
	movb	$0, %al
	callq	__isoc99_sscanf
	movw	$-8024, BasicBlockSignatureTracker # imm = 0xE0A8
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_690
.LBB101_404:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-8022, %ax             # imm = 0xE0AA
	jne	.LBB101_731
# %bb.405:                              # %main.split1795
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.48.328, %rsi
	leaq	-336(%rbp), %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-8022, BasicBlockSignatureTracker # imm = 0xE0AA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_408
# %bb.406:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-8021, %ax             # imm = 0xE0AB
	jne	.LBB101_731
# %bb.407:                              # %main.split1803
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.47.327, %rsi
	movabsq	$opp_time, %rdx
	leaq	-336(%rbp), %rdi
	addq	$5, %rdi
	movb	$0, %al
	callq	__isoc99_sscanf
	movw	$-8021, BasicBlockSignatureTracker # imm = 0xE0AB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_688
.LBB101_408:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-8019, %ax             # imm = 0xE0AD
	jne	.LBB101_731
# %bb.409:                              # %main.split1801
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.49.329, %rsi
	leaq	-336(%rbp), %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-8019, BasicBlockSignatureTracker # imm = 0xE0AD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_418
# %bb.410:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-8009, %ax             # imm = 0xE0B7
	jne	.LBB101_731
# %bb.411:                              # %main.split1809
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.50.330, %rsi
	leaq	-336(%rbp), %rdi
	addq	$6, %rdi
	callq	strstr
	movw	$-8009, BasicBlockSignatureTracker # imm = 0xE0B7
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB101_414
# %bb.412:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$115, %ax
	cmpw	$-7996, %ax             # imm = 0xE0C4
	jne	.LBB101_731
# %bb.413:                              # %main.split1811
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.51.331, %rsi
	movabsq	$moves_to_tc, %rdx
	movabsq	$min_per_game, %rcx
	movabsq	$sec_per_game, %r8
	movabsq	$inc, %r9
	leaq	-336(%rbp), %rdi
	addq	$6, %rdi
	movb	$0, %al
	callq	__isoc99_sscanf
	imull	$6000, min_per_game, %eax # imm = 0x1770
	imull	$100, sec_per_game, %ecx
	addl	%ecx, %eax
	movl	%eax, time_left
	movl	time_left, %eax
	movl	%eax, opp_time
	movw	$-7996, BasicBlockSignatureTracker # imm = 0xE0C4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_416
.LBB101_414:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$113, %ax
	cmpw	$-7994, %ax             # imm = 0xE0C6
	jne	.LBB101_731
# %bb.415:                              # %main.split1813
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.52.332, %rsi
	movabsq	$moves_to_tc, %rdx
	movabsq	$min_per_game, %rcx
	movabsq	$inc, %r8
	leaq	-336(%rbp), %rdi
	addq	$6, %rdi
	movb	$0, %al
	callq	__isoc99_sscanf
	imull	$6000, min_per_game, %eax # imm = 0x1770
	movl	%eax, time_left
	movl	time_left, %eax
	movl	%eax, opp_time
	movw	$-7994, BasicBlockSignatureTracker # imm = 0xE0C6
	movw	$2, RunTimeSignatureAdjuster
.LBB101_416:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-7985, %ax             # imm = 0xE0CF
	jne	.LBB101_731
# %bb.417:                              # %main.split1815
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, fixed_time
	movl	$0, time_cushion
	movw	$-7985, BasicBlockSignatureTracker # imm = 0xE0CF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_686
.LBB101_418:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$124, %ax
	cmpw	$-7983, %ax             # imm = 0xE0D1
	jne	.LBB101_731
# %bb.419:                              # %main.split1807
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.53.333, %rsi
	leaq	-336(%rbp), %rdi
	movl	$6, %edx
	callq	strncmp
	movw	$-7983, BasicBlockSignatureTracker # imm = 0xE0D1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_430
# %bb.420:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-7976, %ax             # imm = 0xE0D8
	jne	.LBB101_731
# %bb.421:                              # %main.split1821
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.54.334, %rsi
	movabsq	$my_rating, %rdx
	movabsq	$opp_rating, %rcx
	leaq	-336(%rbp), %rdi
	addq	$7, %rdi
	movb	$0, %al
	callq	__isoc99_sscanf
	movl	my_rating, %eax
	movw	$-7976, BasicBlockSignatureTracker # imm = 0xE0D8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_424
# %bb.422:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-7973, %ax             # imm = 0xE0DB
	jne	.LBB101_731
# %bb.423:                              # %main.split1823
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$2000, my_rating        # imm = 0x7D0
	movw	$-7973, BasicBlockSignatureTracker # imm = 0xE0DB
	movw	$3, RunTimeSignatureAdjuster
.LBB101_424:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-7971, %ax             # imm = 0xE0DD
	jne	.LBB101_731
# %bb.425:                              # %main.split1825
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	opp_rating, %eax
	movw	$-7971, BasicBlockSignatureTracker # imm = 0xE0DD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_428
# %bb.426:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-7968, %ax             # imm = 0xE0E0
	jne	.LBB101_731
# %bb.427:                              # %main.split1827
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$2000, opp_rating       # imm = 0x7D0
	movw	$-7968, BasicBlockSignatureTracker # imm = 0xE0E0
	movw	$61, RunTimeSignatureAdjuster
.LBB101_428:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$-7966, %ax             # imm = 0xE0E2
	jne	.LBB101_731
# %bb.429:                              # %main.split1829
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7966, BasicBlockSignatureTracker # imm = 0xE0E2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_684
.LBB101_430:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-7957, %ax             # imm = 0xE0EB
	jne	.LBB101_731
# %bb.431:                              # %main.split1819
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.55.335, %rsi
	leaq	-336(%rbp), %rdi
	movl	$7, %edx
	callq	strncmp
	movw	$-7957, BasicBlockSignatureTracker # imm = 0xE0EB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_434
# %bb.432:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-7939, %ax             # imm = 0xE0FD
	jne	.LBB101_731
# %bb.433:                              # %main.split1835
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movw	$-7939, BasicBlockSignatureTracker # imm = 0xE0FD
	movw	$-4343, RunTimeSignatureAdjuster # imm = 0xEF09
	callq	ProcessHoldings
	movw	$-7939, BasicBlockSignatureTracker # imm = 0xE0FD
	movw	$-4343, RunTimeSignatureAdjuster # imm = 0xEF09
	movw	$-7939, BasicBlockSignatureTracker # imm = 0xE0FD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_682
.LBB101_434:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-7938, %ax             # imm = 0xE0FE
	jne	.LBB101_731
# %bb.435:                              # %main.split1833
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.56.336, %rsi
	leaq	-336(%rbp), %rdi
	movl	$7, %edx
	callq	strncmp
	movw	$-7938, BasicBlockSignatureTracker # imm = 0xE0FE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_472
# %bb.436:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$477, %ax               # imm = 0x1DD
	cmpw	$-7901, %ax             # imm = 0xE123
	jne	.LBB101_731
# %bb.437:                              # %main.split1841
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.57.337, %rsi
	leaq	-336(%rbp), %rdi
	callq	strstr
	movw	$-7901, BasicBlockSignatureTracker # imm = 0xE123
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB101_440
# %bb.438:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-7899, %ax             # imm = 0xE125
	jne	.LBB101_731
# %bb.439:                              # %main.split1843
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$material, %rdi
	movabsq	$std_material, %rsi
	movl	$2, Variant
	movl	$56, %edx
	callq	memcpy
	movw	$-7899, BasicBlockSignatureTracker # imm = 0xE125
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_470
.LBB101_440:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-7883, %ax             # imm = 0xE135
	jne	.LBB101_731
# %bb.441:                              # %main.split1845
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.58.338, %rsi
	leaq	-336(%rbp), %rdi
	callq	strstr
	movw	$-7883, BasicBlockSignatureTracker # imm = 0xE135
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB101_444
# %bb.442:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-7875, %ax             # imm = 0xE13D
	jne	.LBB101_731
# %bb.443:                              # %main.split1849
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$material, %rdi
	movabsq	$zh_material, %rsi
	movl	$0, Variant
	movl	$56, %edx
	callq	memcpy
	movw	$-7875, BasicBlockSignatureTracker # imm = 0xE13D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_468
.LBB101_444:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$-7872, %ax             # imm = 0xE140
	jne	.LBB101_731
# %bb.445:                              # %main.split1851
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.59.339, %rsi
	leaq	-336(%rbp), %rdi
	callq	strstr
	movw	$-7872, BasicBlockSignatureTracker # imm = 0xE140
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB101_448
# %bb.446:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-7866, %ax             # imm = 0xE146
	jne	.LBB101_731
# %bb.447:                              # %main.split1855
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$material, %rdi
	movabsq	$zh_material, %rsi
	movl	$1, Variant
	movl	$56, %edx
	callq	memcpy
	movw	$-7866, BasicBlockSignatureTracker # imm = 0xE146
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_466
.LBB101_448:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-7846, %ax             # imm = 0xE15A
	jne	.LBB101_731
# %bb.449:                              # %main.split1857
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.60.340, %rsi
	leaq	-336(%rbp), %rdi
	callq	strstr
	movw	$-7846, BasicBlockSignatureTracker # imm = 0xE15A
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB101_452
# %bb.450:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-7835, %ax             # imm = 0xE165
	jne	.LBB101_731
# %bb.451:                              # %main.split1861
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$material, %rdi
	movabsq	$suicide_material, %rsi
	movl	$3, Variant
	movl	$0, Giveaway
	movl	$56, %edx
	callq	memcpy
	movw	$-7835, BasicBlockSignatureTracker # imm = 0xE165
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_464
.LBB101_452:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$-7828, %ax             # imm = 0xE16C
	jne	.LBB101_731
# %bb.453:                              # %main.split1863
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.61.341, %rsi
	leaq	-336(%rbp), %rdi
	callq	strstr
	movw	$-7828, BasicBlockSignatureTracker # imm = 0xE16C
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB101_456
# %bb.454:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-7809, %ax             # imm = 0xE17F
	jne	.LBB101_731
# %bb.455:                              # %main.split1867
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$material, %rdi
	movabsq	$suicide_material, %rsi
	movl	$3, Variant
	movl	$1, Giveaway
	movl	$56, %edx
	callq	memcpy
	movw	$-7809, BasicBlockSignatureTracker # imm = 0xE17F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_462
.LBB101_456:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$203, %ax
	cmpw	$-7769, %ax             # imm = 0xE1A7
	jne	.LBB101_731
# %bb.457:                              # %main.split1869
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.62.342, %rsi
	leaq	-336(%rbp), %rdi
	callq	strstr
	movw	$-7769, BasicBlockSignatureTracker # imm = 0xE1A7
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB101_460
# %bb.458:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-7764, %ax             # imm = 0xE1AC
	jne	.LBB101_731
# %bb.459:                              # %main.split1873
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$material, %rdi
	movabsq	$losers_material, %rsi
	movl	$4, Variant
	movl	$56, %edx
	callq	memcpy
	movw	$-7764, BasicBlockSignatureTracker # imm = 0xE1AC
	movw	$11, RunTimeSignatureAdjuster
.LBB101_460:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$-7759, %ax             # imm = 0xE1B1
	jne	.LBB101_731
# %bb.461:                              # %main.split1875
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7759, BasicBlockSignatureTracker # imm = 0xE1B1
	movw	$206, RunTimeSignatureAdjuster
.LBB101_462:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$200, %ax
	xorw	%cx, %ax
	cmpw	$-7753, %ax             # imm = 0xE1B7
	jne	.LBB101_731
# %bb.463:                              # %main.split1871
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7753, BasicBlockSignatureTracker # imm = 0xE1B7
	movw	$210, RunTimeSignatureAdjuster
.LBB101_464:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$185, %ax
	xorw	%cx, %ax
	cmpw	$-7716, %ax             # imm = 0xE1DC
	jne	.LBB101_731
# %bb.465:                              # %main.split1865
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7716, BasicBlockSignatureTracker # imm = 0xE1DC
	movw	$154, RunTimeSignatureAdjuster
.LBB101_466:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$164, %ax
	xorw	%cx, %ax
	cmpw	$-7710, %ax             # imm = 0xE1E2
	jne	.LBB101_731
# %bb.467:                              # %main.split1859
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7710, BasicBlockSignatureTracker # imm = 0xE1E2
	movw	$223, RunTimeSignatureAdjuster
.LBB101_468:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$192, %ax
	xorw	%cx, %ax
	cmpw	$-7683, %ax             # imm = 0xE1FD
	jne	.LBB101_731
# %bb.469:                              # %main.split1853
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7683, BasicBlockSignatureTracker # imm = 0xE1FD
	movw	$216, RunTimeSignatureAdjuster
.LBB101_470:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$817, %ax               # imm = 0x331
	xorw	%cx, %ax
	cmpw	$-7660, %ax             # imm = 0xE214
	jne	.LBB101_731
# %bb.471:                              # %main.split1847
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7660, BasicBlockSignatureTracker # imm = 0xE214
	movw	$-2520, RunTimeSignatureAdjuster # imm = 0xF628
	callq	initialize_hash
	movw	$-7660, BasicBlockSignatureTracker # imm = 0xE214
	movw	$-2520, RunTimeSignatureAdjuster # imm = 0xF628
	movw	$-7660, BasicBlockSignatureTracker # imm = 0xE214
	movw	$-2358, RunTimeSignatureAdjuster # imm = 0xF6CA
	callq	clear_tt
	movw	$-7660, BasicBlockSignatureTracker # imm = 0xE214
	movw	$-2358, RunTimeSignatureAdjuster # imm = 0xF6CA
	movw	$-7660, BasicBlockSignatureTracker # imm = 0xE214
	movw	$-6009, RunTimeSignatureAdjuster # imm = 0xE887
	callq	reset_ecache
	movw	$-7660, BasicBlockSignatureTracker # imm = 0xE214
	movw	$-6009, RunTimeSignatureAdjuster # imm = 0xE887
	movw	$-7660, BasicBlockSignatureTracker # imm = 0xE214
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_680
.LBB101_472:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$738, %ax               # imm = 0x2E2
	cmpw	$-7652, %ax             # imm = 0xE21C
	jne	.LBB101_731
# %bb.473:                              # %main.split1839
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.63.343, %rsi
	leaq	-336(%rbp), %rdi
	movl	$7, %edx
	callq	strncmp
	movw	$-7652, BasicBlockSignatureTracker # imm = 0xE21C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_476
# %bb.474:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-7648, %ax             # imm = 0xE220
	jne	.LBB101_731
# %bb.475:                              # %main.split1881
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-432(%rbp), %rdi
	movl	$1, is_analyzing
	movl	$1, is_pondering
	movw	$-7648, BasicBlockSignatureTracker # imm = 0xE220
	movw	$-2344, RunTimeSignatureAdjuster # imm = 0xF6D8
	callq	think
	movw	$-7648, BasicBlockSignatureTracker # imm = 0xE220
	movw	$-2344, RunTimeSignatureAdjuster # imm = 0xF6D8
	movl	$0, ply
	movw	$-7648, BasicBlockSignatureTracker # imm = 0xE220
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_678
.LBB101_476:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$92, %ax
	cmpw	$-7616, %ax             # imm = 0xE240
	jne	.LBB101_731
# %bb.477:                              # %main.split1879
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.64.344, %rsi
	leaq	-336(%rbp), %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-7616, BasicBlockSignatureTracker # imm = 0xE240
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_484
# %bb.478:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-7614, %ax             # imm = 0xE242
	jne	.LBB101_731
# %bb.479:                              # %main.split1887
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.65.345, %rdi
	movl	move_number, %esi
	movb	$0, %al
	callq	printf
	movl	move_number, %eax
	movw	$-7614, BasicBlockSignatureTracker # imm = 0xE242
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB101_482
# %bb.480:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-7607, %ax             # imm = 0xE249
	jne	.LBB101_731
# %bb.481:                              # %main.split1889
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-24976(%rbp), %rdi
	leaq	-10576(%rbp), %rax
	movl	move_number, %ecx
	addl	$-1, %ecx
	movl	%ecx, move_number
	movslq	%ecx, %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	(%rax), %rcx
	movq	%rcx, path_x
	movq	8(%rax), %rax
	movq	%rax, path_x+8
	movslq	move_number, %rax
	imulq	$24, %rax, %rax
	addq	%rax, %rdi
	movw	$-7607, BasicBlockSignatureTracker # imm = 0xE249
	movw	$26798, RunTimeSignatureAdjuster # imm = 0x68AE
	xorl	%esi, %esi
	callq	unmake
	movw	$-7607, BasicBlockSignatureTracker # imm = 0xE249
	movw	$26798, RunTimeSignatureAdjuster # imm = 0x68AE
	movw	$-7607, BasicBlockSignatureTracker # imm = 0xE249
	movw	$-2443, RunTimeSignatureAdjuster # imm = 0xF675
	callq	reset_piece_square
	movw	$-7607, BasicBlockSignatureTracker # imm = 0xE249
	movw	$-2443, RunTimeSignatureAdjuster # imm = 0xF675
	movl	root_to_move, %eax
	xorl	$1, %eax
	movl	%eax, root_to_move
	movw	$-7607, BasicBlockSignatureTracker # imm = 0xE249
	movw	$11, RunTimeSignatureAdjuster
.LBB101_482:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8, %ax
	xorw	%cx, %ax
	cmpw	$-7606, %ax             # imm = 0xE24A
	jne	.LBB101_731
# %bb.483:                              # %main.split1891
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7606, BasicBlockSignatureTracker # imm = 0xE24A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_676
.LBB101_484:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$39, %ax
	cmpw	$-7577, %ax             # imm = 0xE267
	jne	.LBB101_731
# %bb.485:                              # %main.split1885
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.66.346, %rsi
	leaq	-336(%rbp), %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-7577, BasicBlockSignatureTracker # imm = 0xE267
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_492
# %bb.486:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$21, %ax
	cmpw	$-7566, %ax             # imm = 0xE272
	jne	.LBB101_731
# %bb.487:                              # %main.split1897
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	move_number, %eax
	movw	$-7566, BasicBlockSignatureTracker # imm = 0xE272
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jle	.LBB101_490
# %bb.488:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-7561, %ax             # imm = 0xE277
	jne	.LBB101_731
# %bb.489:                              # %main.split1899
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-24976(%rbp), %rdi
	leaq	-10576(%rbp), %rax
	movl	move_number, %ecx
	addl	$-1, %ecx
	movl	%ecx, move_number
	movslq	%ecx, %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	(%rax), %rcx
	movq	%rcx, path_x
	movq	8(%rax), %rax
	movq	%rax, path_x+8
	movslq	move_number, %rax
	imulq	$24, %rax, %rax
	addq	%rax, %rdi
	movw	$-7561, BasicBlockSignatureTracker # imm = 0xE277
	movw	$26768, RunTimeSignatureAdjuster # imm = 0x6890
	xorl	%esi, %esi
	callq	unmake
	movw	$-7561, BasicBlockSignatureTracker # imm = 0xE277
	movw	$26768, RunTimeSignatureAdjuster # imm = 0x6890
	movw	$-7561, BasicBlockSignatureTracker # imm = 0xE277
	movw	$-2485, RunTimeSignatureAdjuster # imm = 0xF64B
	callq	reset_piece_square
	leaq	-24976(%rbp), %rdi
	leaq	-10576(%rbp), %rax
	movw	$-7561, BasicBlockSignatureTracker # imm = 0xE277
	movw	$-2485, RunTimeSignatureAdjuster # imm = 0xF64B
	movl	move_number, %ecx
	addl	$-1, %ecx
	movl	%ecx, move_number
	movslq	%ecx, %rcx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movq	(%rax), %rcx
	movq	%rcx, path_x
	movq	8(%rax), %rax
	movq	%rax, path_x+8
	movslq	move_number, %rax
	imulq	$24, %rax, %rax
	addq	%rax, %rdi
	movw	$-7561, BasicBlockSignatureTracker # imm = 0xE277
	movw	$26768, RunTimeSignatureAdjuster # imm = 0x6890
	xorl	%esi, %esi
	callq	unmake
	movw	$-7561, BasicBlockSignatureTracker # imm = 0xE277
	movw	$26768, RunTimeSignatureAdjuster # imm = 0x6890
	movw	$-7561, BasicBlockSignatureTracker # imm = 0xE277
	movw	$-2485, RunTimeSignatureAdjuster # imm = 0xF64B
	callq	reset_piece_square
	movw	$-7561, BasicBlockSignatureTracker # imm = 0xE277
	movw	$-2485, RunTimeSignatureAdjuster # imm = 0xF64B
	movw	$-7561, BasicBlockSignatureTracker # imm = 0xE277
	movw	$5, RunTimeSignatureAdjuster
.LBB101_490:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$246, %ax
	xorw	%cx, %ax
	cmpw	$-7548, %ax             # imm = 0xE284
	jne	.LBB101_731
# %bb.491:                              # %main.split1901
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7548, BasicBlockSignatureTracker # imm = 0xE284
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_674
.LBB101_492:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$250, %ax
	cmpw	$-7523, %ax             # imm = 0xE29D
	jne	.LBB101_731
# %bb.493:                              # %main.split1895
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.67.347, %rsi
	leaq	-336(%rbp), %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-7523, BasicBlockSignatureTracker # imm = 0xE29D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_496
# %bb.494:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-7518, %ax             # imm = 0xE2A2
	jne	.LBB101_731
# %bb.495:                              # %main.split1907
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$1, -12(%rbp)
	movl	$0, -24(%rbp)
	movw	$-7518, BasicBlockSignatureTracker # imm = 0xE2A2
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_672
.LBB101_496:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-7513, %ax             # imm = 0xE2A7
	jne	.LBB101_731
# %bb.497:                              # %main.split1905
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.68.348, %rsi
	leaq	-336(%rbp), %rdi
	movl	$1, %edx
	callq	strncmp
	movw	$-7513, BasicBlockSignatureTracker # imm = 0xE2A7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_512
# %bb.498:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-7499, %ax             # imm = 0xE2B5
	jne	.LBB101_731
# %bb.499:                              # %main.split1913
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-12(%rbp), %eax
	movw	$-7499, BasicBlockSignatureTracker # imm = 0xE2B5
	movw	$18, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_512
# %bb.500:                              # %Buffer__28
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-16661, %ax            # imm = 0xBEEB
	cmpw	$23646, %ax             # imm = 0x5C5E
	jne	.LBB101_731
# %bb.501:                              # %main.split1915
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$23646, BasicBlockSignatureTracker # imm = 0x5C5E
	movw	$-16661, RunTimeSignatureAdjuster # imm = 0xBEEB
# %bb.502:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-7495, %ax             # imm = 0xE2B9
	jne	.LBB101_731
# %bb.503:                              # %main.split2115
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, -12(%rbp)
	movl	wking_loc, %eax
	movw	$-7495, BasicBlockSignatureTracker # imm = 0xE2B9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$30, %eax
	jne	.LBB101_506
# %bb.504:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$122, %ax
	cmpw	$-7485, %ax             # imm = 0xE2C3
	jne	.LBB101_731
# %bb.505:                              # %main.split1917
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, white_castled
	movw	$-7485, BasicBlockSignatureTracker # imm = 0xE2C3
	movw	$122, RunTimeSignatureAdjuster
.LBB101_506:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$109, %ax
	xorw	%cx, %ax
	cmpw	$-7468, %ax             # imm = 0xE2D4
	jne	.LBB101_731
# %bb.507:                              # %main.split1919
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	bking_loc, %eax
	movw	$-7468, BasicBlockSignatureTracker # imm = 0xE2D4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$114, %eax
	jne	.LBB101_510
# %bb.508:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-7466, %ax             # imm = 0xE2D6
	jne	.LBB101_731
# %bb.509:                              # %main.split1921
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, black_castled
	movw	$-7466, BasicBlockSignatureTracker # imm = 0xE2D6
	movw	$2, RunTimeSignatureAdjuster
.LBB101_510:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$-7458, %ax             # imm = 0xE2DE
	jne	.LBB101_731
# %bb.511:                              # %main.split1923
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$opening_history, %rdi
	movl	$50, book_ply
	movl	$0, ep_square
	movl	$0, move_number
	xorl	%esi, %esi
	movl	$256, %edx              # imm = 0x100
	callq	memset
	movw	$-7458, BasicBlockSignatureTracker # imm = 0xE2DE
	movw	$-2560, RunTimeSignatureAdjuster # imm = 0xF600
	callq	clear_tt
	movw	$-7458, BasicBlockSignatureTracker # imm = 0xE2DE
	movw	$-2560, RunTimeSignatureAdjuster # imm = 0xF600
	movw	$-7458, BasicBlockSignatureTracker # imm = 0xE2DE
	movw	$-2334, RunTimeSignatureAdjuster # imm = 0xF6E2
	callq	initialize_hash
	movw	$-7458, BasicBlockSignatureTracker # imm = 0xE2DE
	movw	$-2334, RunTimeSignatureAdjuster # imm = 0xF6E2
	movw	$-7458, BasicBlockSignatureTracker # imm = 0xE2DE
	movw	$-2334, RunTimeSignatureAdjuster # imm = 0xF6E2
	callq	reset_piece_square
	movw	$-7458, BasicBlockSignatureTracker # imm = 0xE2DE
	movw	$-2334, RunTimeSignatureAdjuster # imm = 0xF6E2
	movw	$-7458, BasicBlockSignatureTracker # imm = 0xE2DE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_670
.LBB101_512:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$68, %ax
	xorw	%cx, %ax
	cmpw	$-7453, %ax             # imm = 0xE2E3
	jne	.LBB101_731
# %bb.513:                              # %main.split1911
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-12(%rbp), %eax
	movw	$-7453, BasicBlockSignatureTracker # imm = 0xE2E3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_526
# %bb.514:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-7452, %ax             # imm = 0xE2E4
	jne	.LBB101_731
# %bb.515:                              # %main.split1927
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.69.349, %rsi
	leaq	-336(%rbp), %rdi
	movl	$1, %edx
	callq	strncmp
	movw	$-7452, BasicBlockSignatureTracker # imm = 0xE2E4
	movw	$7, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_526
# %bb.516:                              # %Buffer__29
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-13313, %ax            # imm = 0xCBFF
	cmpw	$10523, %ax             # imm = 0x291B
	jne	.LBB101_731
# %bb.517:                              # %main.split1931
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$10523, BasicBlockSignatureTracker # imm = 0x291B
	movw	$-13313, RunTimeSignatureAdjuster # imm = 0xCBFF
# %bb.518:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-7448, %ax             # imm = 0xE2E8
	jne	.LBB101_731
# %bb.519:                              # %main.split2117
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-24(%rbp), %eax
	movw	$-7448, BasicBlockSignatureTracker # imm = 0xE2E8
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_522
# %bb.520:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-7441, %ax             # imm = 0xE2EF
	jne	.LBB101_731
# %bb.521:                              # %main.split1933
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$1, -24(%rbp)
	movw	$-7441, BasicBlockSignatureTracker # imm = 0xE2EF
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_524
.LBB101_522:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-7437, %ax             # imm = 0xE2F3
	jne	.LBB101_731
# %bb.523:                              # %main.split1935
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$0, -24(%rbp)
	movw	$-7437, BasicBlockSignatureTracker # imm = 0xE2F3
	movw	$28, RunTimeSignatureAdjuster
.LBB101_524:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$507, %ax               # imm = 0x1FB
	xorw	%cx, %ax
	cmpw	$-7404, %ax             # imm = 0xE314
	jne	.LBB101_731
# %bb.525:                              # %main.split1937
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7404, BasicBlockSignatureTracker # imm = 0xE314
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_668
.LBB101_526:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$510, %ax               # imm = 0x1FE
	xorw	%cx, %ax
	cmpw	$-7395, %ax             # imm = 0xE31D
	jne	.LBB101_731
# %bb.527:                              # %main.split1929
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-12(%rbp), %eax
	movw	$-7395, BasicBlockSignatureTracker # imm = 0xE31D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_534
# %bb.528:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$47, %ax
	cmpw	$-7374, %ax             # imm = 0xE332
	jne	.LBB101_731
# %bb.529:                              # %main.split1941
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.70.350, %rsi
	leaq	-336(%rbp), %rdi
	movl	$1, %edx
	callq	strncmp
	movw	$-7374, BasicBlockSignatureTracker # imm = 0xE332
	movw	$47, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_534
# %bb.530:                              # %Buffer__30
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-24388, %ax            # imm = 0xA0BC
	cmpw	$17294, %ax             # imm = 0x438E
	jne	.LBB101_731
# %bb.531:                              # %main.split1945
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$17294, BasicBlockSignatureTracker # imm = 0x438E
	movw	$-24388, RunTimeSignatureAdjuster # imm = 0xA0BC
# %bb.532:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-7373, %ax             # imm = 0xE333
	jne	.LBB101_731
# %bb.533:                              # %main.split2119
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7373, BasicBlockSignatureTracker # imm = 0xE333
	movw	$0, RunTimeSignatureAdjuster
	callq	reset_board
	movw	$-7373, BasicBlockSignatureTracker # imm = 0xE333
	movw	$0, RunTimeSignatureAdjuster
	movl	$0, move_number
	movw	$-7373, BasicBlockSignatureTracker # imm = 0xE333
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_666
.LBB101_534:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$84, %ax
	xorw	%cx, %ax
	cmpw	$-7351, %ax             # imm = 0xE349
	jne	.LBB101_731
# %bb.535:                              # %main.split1943
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-12(%rbp), %eax
	movw	$-7351, BasicBlockSignatureTracker # imm = 0xE349
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_550
# %bb.536:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-7349, %ax             # imm = 0xE34B
	jne	.LBB101_731
# %bb.537:                              # %main.split1949
                                        #   in Loop: Header=BB101_5 Depth=1
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movsbl	-336(%rbp), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$1024, %eax             # imm = 0x400
	movw	$-7349, BasicBlockSignatureTracker # imm = 0xE34B
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_550
# %bb.538:                              # %Buffer__31
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18441, %ax             # imm = 0x4809
	cmpw	$-21694, %ax            # imm = 0xAB42
	jne	.LBB101_731
# %bb.539:                              # %main.split1953
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-21694, BasicBlockSignatureTracker # imm = 0xAB42
	movw	$18441, RunTimeSignatureAdjuster # imm = 0x4809
# %bb.540:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$-7331, %ax             # imm = 0xE35D
	jne	.LBB101_731
# %bb.541:                              # %main.split2121
                                        #   in Loop: Header=BB101_5 Depth=1
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movsbl	-335(%rbp), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$1024, %eax             # imm = 0x400
	movw	$-7331, BasicBlockSignatureTracker # imm = 0xE35D
	movw	$20, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_550
# %bb.542:                              # %Buffer__32
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-7091, %ax             # imm = 0xE44D
	cmpw	$1808, %ax              # imm = 0x710
	jne	.LBB101_731
# %bb.543:                              # %main.split1955
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$1808, BasicBlockSignatureTracker # imm = 0x710
	movw	$-7091, RunTimeSignatureAdjuster # imm = 0xE44D
# %bb.544:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-7330, %ax             # imm = 0xE35E
	jne	.LBB101_731
# %bb.545:                              # %main.split2123
                                        #   in Loop: Header=BB101_5 Depth=1
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movsbl	-334(%rbp), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$2048, %eax             # imm = 0x800
	movw	$-7330, BasicBlockSignatureTracker # imm = 0xE35E
	movw	$23, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB101_550
# %bb.546:                              # %Buffer__33
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-12707, %ax            # imm = 0xCE5D
	cmpw	$11523, %ax             # imm = 0x2D03
	jne	.LBB101_731
# %bb.547:                              # %main.split1957
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$11523, BasicBlockSignatureTracker # imm = 0x2D03
	movw	$-12707, RunTimeSignatureAdjuster # imm = 0xCE5D
# %bb.548:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$45, %ax
	xorw	%cx, %ax
	cmpw	$-7309, %ax             # imm = 0xE373
	jne	.LBB101_731
# %bb.549:                              # %main.split2125
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	-24(%rbp), %edi
	movb	-336(%rbp), %al
	movb	-335(%rbp), %dl
	movsbl	-334(%rbp), %ecx
	movw	$-7309, BasicBlockSignatureTracker # imm = 0xE373
	movw	$0, RunTimeSignatureAdjuster
	movsbl	%al, %esi
	movsbl	%dl, %edx
	callq	PutPiece
	movw	$-7309, BasicBlockSignatureTracker # imm = 0xE373
	movw	$0, RunTimeSignatureAdjuster
	movw	$-7309, BasicBlockSignatureTracker # imm = 0xE373
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_664
.LBB101_550:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$-7307, %ax             # imm = 0xE375
	jne	.LBB101_731
# %bb.551:                              # %main.split1951
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.71.351, %rsi
	leaq	-336(%rbp), %rdi
	movl	$7, %edx
	callq	strncmp
	movw	$-7307, BasicBlockSignatureTracker # imm = 0xE375
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_554
# %bb.552:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$241, %ax
	cmpw	$-7292, %ax             # imm = 0xE384
	jne	.LBB101_731
# %bb.553:                              # %main.split1963
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	addq	$7, %rdi
	movw	$-7292, BasicBlockSignatureTracker # imm = 0xE384
	movw	$0, RunTimeSignatureAdjuster
	callq	HandlePartner
	movw	$-7292, BasicBlockSignatureTracker # imm = 0xE384
	movw	$0, RunTimeSignatureAdjuster
	movw	$-7292, BasicBlockSignatureTracker # imm = 0xE384
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_662
.LBB101_554:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$254, %ax
	cmpw	$-7285, %ax             # imm = 0xE38B
	jne	.LBB101_731
# %bb.555:                              # %main.split1961
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.72.352, %rsi
	leaq	-336(%rbp), %rdi
	movl	$8, %edx
	callq	strncmp
	movw	$-7285, BasicBlockSignatureTracker # imm = 0xE38B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_558
# %bb.556:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-7284, %ax             # imm = 0xE38C
	jne	.LBB101_731
# %bb.557:                              # %main.split1969
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	addq	$8, %rdi
	movw	$-7284, BasicBlockSignatureTracker # imm = 0xE38C
	movw	$8, RunTimeSignatureAdjuster
	callq	HandlePartner
	movw	$-7284, BasicBlockSignatureTracker # imm = 0xE38C
	movw	$8, RunTimeSignatureAdjuster
	movw	$-7284, BasicBlockSignatureTracker # imm = 0xE38C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_660
.LBB101_558:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27, %ax
	cmpw	$-7280, %ax             # imm = 0xE390
	jne	.LBB101_731
# %bb.559:                              # %main.split1967
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.73.353, %rsi
	leaq	-336(%rbp), %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-7280, BasicBlockSignatureTracker # imm = 0xE390
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_562
# %bb.560:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-7265, %ax             # imm = 0xE39F
	jne	.LBB101_731
# %bb.561:                              # %main.split1975
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movw	$-7265, BasicBlockSignatureTracker # imm = 0xE39F
	movw	$0, RunTimeSignatureAdjuster
	callq	HandlePtell
	movw	$-7265, BasicBlockSignatureTracker # imm = 0xE39F
	movw	$0, RunTimeSignatureAdjuster
	movw	$-7265, BasicBlockSignatureTracker # imm = 0xE39F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_658
.LBB101_562:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$47, %ax
	cmpw	$-7233, %ax             # imm = 0xE3BF
	jne	.LBB101_731
# %bb.563:                              # %main.split1973
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.74.354, %rsi
	leaq	-336(%rbp), %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-7233, BasicBlockSignatureTracker # imm = 0xE3BF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_566
# %bb.564:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$120, %ax
	cmpw	$-7225, %ax             # imm = 0xE3C7
	jne	.LBB101_731
# %bb.565:                              # %main.split1981
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7225, BasicBlockSignatureTracker # imm = 0xE3C7
	movw	$5503, RunTimeSignatureAdjuster # imm = 0x157F
	callq	run_epd_testsuite
	movw	$-7225, BasicBlockSignatureTracker # imm = 0xE3C7
	movw	$5503, RunTimeSignatureAdjuster # imm = 0x157F
	movw	$-7225, BasicBlockSignatureTracker # imm = 0xE3C7
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_656
.LBB101_566:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$108, %ax
	cmpw	$-7213, %ax             # imm = 0xE3D3
	jne	.LBB101_731
# %bb.567:                              # %main.split1979
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.75.355, %rsi
	leaq	-336(%rbp), %rdi
	movl	$2, %edx
	callq	strncmp
	movw	$-7213, BasicBlockSignatureTracker # imm = 0xE3D3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_570
# %bb.568:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-7196, %ax             # imm = 0xE3E4
	jne	.LBB101_731
# %bb.569:                              # %main.split1987
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.25.305, %rsi
	movabsq	$fixed_time, %rdx
	leaq	-336(%rbp), %rdi
	addq	$3, %rdi
	movb	$0, %al
	callq	__isoc99_sscanf
	imull	$100, fixed_time, %eax
	movl	%eax, fixed_time
	movw	$-7196, BasicBlockSignatureTracker # imm = 0xE3E4
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_654
.LBB101_570:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$-7189, %ax             # imm = 0xE3EB
	jne	.LBB101_731
# %bb.571:                              # %main.split1985
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.76.356, %rsi
	leaq	-336(%rbp), %rdi
	movl	$6, %edx
	callq	strncmp
	movw	$-7189, BasicBlockSignatureTracker # imm = 0xE3EB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_574
# %bb.572:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-7187, %ax             # imm = 0xE3ED
	jne	.LBB101_731
# %bb.573:                              # %main.split1993
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7187, BasicBlockSignatureTracker # imm = 0xE3ED
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_652
.LBB101_574:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2025, %ax              # imm = 0x7E9
	cmpw	$-7166, %ax             # imm = 0xE402
	jne	.LBB101_731
# %bb.575:                              # %main.split1991
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.77.357, %rsi
	leaq	-336(%rbp), %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-7166, BasicBlockSignatureTracker # imm = 0xE402
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_578
# %bb.576:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-7151, %ax             # imm = 0xE411
	jne	.LBB101_731
# %bb.577:                              # %main.split1999
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.78.358, %rdi
	movb	$0, %al
	callq	printf
	movw	$-7151, BasicBlockSignatureTracker # imm = 0xE411
	movw	$-3759, RunTimeSignatureAdjuster # imm = 0xF151
	callq	rtime
	leaq	-976(%rbp), %rdi
	movw	$-7151, BasicBlockSignatureTracker # imm = 0xE411
	movw	$-3759, RunTimeSignatureAdjuster # imm = 0xF151
	movq	%rax, start_time
	movq	stdin, %rdx
	movw	$-7151, BasicBlockSignatureTracker # imm = 0xE411
	movw	$-3932, RunTimeSignatureAdjuster # imm = 0xF0A4
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	leaq	-976(%rbp), %rdi
	movw	$-7151, BasicBlockSignatureTracker # imm = 0xE411
	movw	$-3932, RunTimeSignatureAdjuster # imm = 0xF0A4
	callq	atol
	movabsq	$.L.str.16.296, %rdi
	imulq	$100, %rax, %rax
	movl	%eax, pn_time
	movb	$0, %al
	callq	printf
	movw	$-7151, BasicBlockSignatureTracker # imm = 0xE411
	movw	$7654, RunTimeSignatureAdjuster # imm = 0x1DE6
	callq	proofnumbersearch
	movw	$-7151, BasicBlockSignatureTracker # imm = 0xE411
	movw	$7654, RunTimeSignatureAdjuster # imm = 0x1DE6
	movw	$-7151, BasicBlockSignatureTracker # imm = 0xE411
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_650
.LBB101_578:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-7144, %ax             # imm = 0xE418
	jne	.LBB101_731
# %bb.579:                              # %main.split1997
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.79.359, %rsi
	leaq	-336(%rbp), %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-7144, BasicBlockSignatureTracker # imm = 0xE418
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_582
# %bb.580:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-7140, %ax             # imm = 0xE41C
	jne	.LBB101_731
# %bb.581:                              # %main.split2005
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.25.305, %rsi
	leaq	-76(%rbp), %rdx
	leaq	-336(%rbp), %rdi
	addq	$5, %rdi
	movb	$0, %al
	callq	__isoc99_sscanf
	movabsq	$.L.str.80.360, %rdi
	movl	-76(%rbp), %esi
	movb	$0, %al
	callq	printf
	movw	$-7140, BasicBlockSignatureTracker # imm = 0xE41C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_648
.LBB101_582:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-7132, %ax             # imm = 0xE424
	jne	.LBB101_731
# %bb.583:                              # %main.split2003
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.81.361, %rsi
	leaq	-336(%rbp), %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-7132, BasicBlockSignatureTracker # imm = 0xE424
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_586
# %bb.584:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-7125, %ax             # imm = 0xE42B
	jne	.LBB101_731
# %bb.585:                              # %main.split2011
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$1, -44(%rbp)
	movw	$-7125, BasicBlockSignatureTracker # imm = 0xE42B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_646
.LBB101_586:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$103, %ax
	cmpw	$-7101, %ax             # imm = 0xE443
	jne	.LBB101_731
# %bb.587:                              # %main.split2009
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.82.362, %rsi
	leaq	-336(%rbp), %rdi
	movl	$5, %edx
	callq	strncmp
	movw	$-7101, BasicBlockSignatureTracker # imm = 0xE443
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_590
# %bb.588:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-7096, %ax             # imm = 0xE448
	jne	.LBB101_731
# %bb.589:                              # %main.split2017
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$material, %rdi
	movabsq	$std_material, %rsi
	movl	$56, %edx
	callq	memcpy
	movl	$2, Variant
	movw	$-7096, BasicBlockSignatureTracker # imm = 0xE448
	movw	$15575, RunTimeSignatureAdjuster # imm = 0x3CD7
	callq	init_game
	movw	$-7096, BasicBlockSignatureTracker # imm = 0xE448
	movw	$15575, RunTimeSignatureAdjuster # imm = 0x3CD7
	movw	$-7096, BasicBlockSignatureTracker # imm = 0xE448
	movw	$-3980, RunTimeSignatureAdjuster # imm = 0xF074
	callq	initialize_hash
	movw	$-7096, BasicBlockSignatureTracker # imm = 0xE448
	movw	$-3980, RunTimeSignatureAdjuster # imm = 0xF074
	movw	$-7096, BasicBlockSignatureTracker # imm = 0xE448
	movw	$-3946, RunTimeSignatureAdjuster # imm = 0xF096
	callq	clear_tt
	movw	$-7096, BasicBlockSignatureTracker # imm = 0xE448
	movw	$-3946, RunTimeSignatureAdjuster # imm = 0xF096
	movw	$-7096, BasicBlockSignatureTracker # imm = 0xE448
	movw	$-4389, RunTimeSignatureAdjuster # imm = 0xEEDB
	callq	reset_ecache
	movw	$-7096, BasicBlockSignatureTracker # imm = 0xE448
	movw	$-4389, RunTimeSignatureAdjuster # imm = 0xEEDB
	movl	$0, -20(%rbp)
	movl	$0, fixed_time
	movl	$0, root_to_move
	movl	$0, comp_color
	movl	$0, move_number
	movl	$0, bookidx
	movl	$2000, opp_rating       # imm = 0x7D0
	movl	$2000, my_rating        # imm = 0x7D0
	movw	$-7096, BasicBlockSignatureTracker # imm = 0xE448
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_644
.LBB101_590:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-7093, %ax             # imm = 0xE44B
	jne	.LBB101_731
# %bb.591:                              # %main.split2015
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.19.299, %rsi
	leaq	-336(%rbp), %rdi
	movl	$8, %edx
	callq	strncmp
	movw	$-7093, BasicBlockSignatureTracker # imm = 0xE44B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_594
# %bb.592:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25, %ax
	cmpw	$-7086, %ax             # imm = 0xE452
	jne	.LBB101_731
# %bb.593:                              # %main.split2023
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	addq	$9, %rdi
	movw	$-7086, BasicBlockSignatureTracker # imm = 0xE452
	movw	$-3956, RunTimeSignatureAdjuster # imm = 0xF08C
	callq	setup_epd_line
	movw	$-7086, BasicBlockSignatureTracker # imm = 0xE452
	movw	$-3956, RunTimeSignatureAdjuster # imm = 0xF08C
	movw	$-7086, BasicBlockSignatureTracker # imm = 0xE452
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_642
.LBB101_594:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19, %ax
	cmpw	$-7080, %ax             # imm = 0xE458
	jne	.LBB101_731
# %bb.595:                              # %main.split2021
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.68.348, %rsi
	leaq	-336(%rbp), %rdi
	movl	$1, %edx
	callq	strncmp
	movw	$-7080, BasicBlockSignatureTracker # imm = 0xE458
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_598
# %bb.596:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-7070, %ax             # imm = 0xE462
	jne	.LBB101_731
# %bb.597:                              # %main.split2029
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-7070, BasicBlockSignatureTracker # imm = 0xE462
	movw	$15566, RunTimeSignatureAdjuster # imm = 0x3CCE
	jmp	.LBB101_367
.LBB101_598:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-7057, %ax             # imm = 0xE46F
	jne	.LBB101_731
# %bb.599:                              # %main.split2027
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.83.363, %rsi
	leaq	-336(%rbp), %rdi
	movl	$2, %edx
	callq	strncmp
	movw	$-7057, BasicBlockSignatureTracker # imm = 0xE46F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_602
# %bb.600:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$233, %ax
	cmpw	$-7034, %ax             # imm = 0xE486
	jne	.LBB101_731
# %bb.601:                              # %main.split2033
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.25.305, %rsi
	movabsq	$maxdepth, %rdx
	leaq	-336(%rbp), %rdi
	addq	$3, %rdi
	movb	$0, %al
	callq	__isoc99_sscanf
	movabsq	$.L.str.84.364, %rdi
	movl	maxdepth, %esi
	movb	$0, %al
	callq	printf
	movw	$-7034, BasicBlockSignatureTracker # imm = 0xE486
	movw	$15402, RunTimeSignatureAdjuster # imm = 0x3C2A
	jmp	.LBB101_367
.LBB101_602:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$251, %ax
	cmpw	$-7020, %ax             # imm = 0xE494
	jne	.LBB101_731
# %bb.603:                              # %main.split2031
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.85, %rsi
	leaq	-336(%rbp), %rdi
	movl	$4, %edx
	callq	strncmp
	movw	$-7020, BasicBlockSignatureTracker # imm = 0xE494
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_606
# %bb.604:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-7018, %ax             # imm = 0xE496
	jne	.LBB101_731
# %bb.605:                              # %main.split2037
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	$1, -16(%rbp)
	movw	$-7018, BasicBlockSignatureTracker # imm = 0xE496
	movw	$15418, RunTimeSignatureAdjuster # imm = 0x3C3A
	jmp	.LBB101_367
.LBB101_606:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$50, %ax
	cmpw	$-7002, %ax             # imm = 0xE4A6
	jne	.LBB101_731
# %bb.607:                              # %main.split2035
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.86, %rsi
	leaq	-336(%rbp), %rdi
	movl	$8, %edx
	callq	strncmp
	movw	$-7002, BasicBlockSignatureTracker # imm = 0xE4A6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_610
# %bb.608:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$64, %ax
	cmpw	$-6938, %ax             # imm = 0xE4E6
	jne	.LBB101_731
# %bb.609:                              # %main.split2041
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.87, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.88, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.89, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.90, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.91, %rdi
	movb	$0, %al
	callq	printf
	movl	$2, xb_mode
	movw	$-6938, BasicBlockSignatureTracker # imm = 0xE4E6
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_634
.LBB101_610:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$74, %ax
	cmpw	$-6932, %ax             # imm = 0xE4EC
	jne	.LBB101_731
# %bb.611:                              # %main.split2039
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.92, %rsi
	leaq	-336(%rbp), %rdi
	movl	$8, %edx
	callq	strncmp
	movw	$-6932, BasicBlockSignatureTracker # imm = 0xE4EC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_614
# %bb.612:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-6927, %ax             # imm = 0xE4F1
	jne	.LBB101_731
# %bb.613:                              # %main.split2047
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6927, BasicBlockSignatureTracker # imm = 0xE4F1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_632
.LBB101_614:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-6917, %ax             # imm = 0xE4FB
	jne	.LBB101_731
# %bb.615:                              # %main.split2045
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.93, %rsi
	leaq	-336(%rbp), %rdi
	movl	$8, %edx
	callq	strncmp
	movw	$-6917, BasicBlockSignatureTracker # imm = 0xE4FB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_618
# %bb.616:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$497, %ax               # imm = 0x1F1
	cmpw	$-6902, %ax             # imm = 0xE50A
	jne	.LBB101_731
# %bb.617:                              # %main.split2053
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.94, %rdi
	movb	$0, %al
	callq	printf
	movw	$-6902, BasicBlockSignatureTracker # imm = 0xE50A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_630
.LBB101_618:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$494, %ax               # imm = 0x1EE
	cmpw	$-6891, %ax             # imm = 0xE515
	jne	.LBB101_731
# %bb.619:                              # %main.split2051
                                        #   in Loop: Header=BB101_5 Depth=1
	leaq	-336(%rbp), %rdi
	movl	$.L.str.95, %esi
	callq	strcmp
	movw	$-6891, BasicBlockSignatureTracker # imm = 0xE515
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_622
# %bb.620:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$-6875, %ax             # imm = 0xE525
	jne	.LBB101_731
# %bb.621:                              # %main.split2059
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.96, %rdi
	movabsq	$divider, %rsi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.97, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.98, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.99, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.100, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.101, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.102, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.103, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.104, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.105, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.106, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.107, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.108, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.109, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.110, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.111, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.112.365, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.113, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.114, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.115, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.116, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.117, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.118, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.119, %rdi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.96, %rdi
	movabsq	$divider, %rsi
	movb	$0, %al
	callq	printf
	movl	$0, -28(%rbp)
	movw	$-6875, BasicBlockSignatureTracker # imm = 0xE525
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB101_628
.LBB101_622:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-6866, %ax             # imm = 0xE52E
	jne	.LBB101_731
# %bb.623:                              # %main.split2057
                                        #   in Loop: Header=BB101_5 Depth=1
	movl	xb_mode, %eax
	movw	$-6866, BasicBlockSignatureTracker # imm = 0xE52E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB101_626
# %bb.624:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-6858, %ax             # imm = 0xE536
	jne	.LBB101_731
# %bb.625:                              # %main.split2065
                                        #   in Loop: Header=BB101_5 Depth=1
	movabsq	$.L.str.18.298, %rdi
	leaq	-336(%rbp), %rsi
	movb	$0, %al
	callq	printf
	movw	$-6858, BasicBlockSignatureTracker # imm = 0xE536
	movw	$24, RunTimeSignatureAdjuster
.LBB101_626:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-6857, %ax             # imm = 0xE537
	jne	.LBB101_731
# %bb.627:                              # %main.split2063
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6857, BasicBlockSignatureTracker # imm = 0xE537
	movw	$18, RunTimeSignatureAdjuster
.LBB101_628:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-6853, %ax             # imm = 0xE53B
	jne	.LBB101_731
# %bb.629:                              # %main.split2061
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6853, BasicBlockSignatureTracker # imm = 0xE53B
	movw	$49, RunTimeSignatureAdjuster
.LBB101_630:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$64, %ax
	xorw	%cx, %ax
	cmpw	$-6838, %ax             # imm = 0xE54A
	jne	.LBB101_731
# %bb.631:                              # %main.split2055
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6838, BasicBlockSignatureTracker # imm = 0xE54A
	movw	$443, RunTimeSignatureAdjuster # imm = 0x1BB
.LBB101_632:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$425, %ax               # imm = 0x1A9
	xorw	%cx, %ax
	cmpw	$-6824, %ax             # imm = 0xE558
	jne	.LBB101_731
# %bb.633:                              # %main.split2049
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6824, BasicBlockSignatureTracker # imm = 0xE558
	movw	$446, RunTimeSignatureAdjuster # imm = 0x1BE
.LBB101_634:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$442, %ax               # imm = 0x1BA
	xorw	%cx, %ax
	cmpw	$-6820, %ax             # imm = 0xE55C
	jne	.LBB101_731
# %bb.635:                              # %main.split2043
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6820, BasicBlockSignatureTracker # imm = 0xE55C
	movw	$0, RunTimeSignatureAdjuster
# %bb.636:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$47, %ax
	cmpw	$-6797, %ax             # imm = 0xE573
	jne	.LBB101_731
# %bb.637:                              # %main.split2067
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6797, BasicBlockSignatureTracker # imm = 0xE573
	movw	$0, RunTimeSignatureAdjuster
# %bb.638:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-6796, %ax             # imm = 0xE574
	jne	.LBB101_731
# %bb.639:                              # %main.split2069
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6796, BasicBlockSignatureTracker # imm = 0xE574
	movw	$0, RunTimeSignatureAdjuster
# %bb.640:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$227, %ax
	cmpw	$-6761, %ax             # imm = 0xE597
	jne	.LBB101_731
# %bb.641:                              # %main.split2071
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6761, BasicBlockSignatureTracker # imm = 0xE597
	movw	$453, RunTimeSignatureAdjuster # imm = 0x1C5
.LBB101_642:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$485, %ax               # imm = 0x1E5
	xorw	%cx, %ax
	cmpw	$-6729, %ax             # imm = 0xE5B7
	jne	.LBB101_731
# %bb.643:                              # %main.split2025
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6729, BasicBlockSignatureTracker # imm = 0xE5B7
	movw	$511, RunTimeSignatureAdjuster # imm = 0x1FF
.LBB101_644:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$496, %ax               # imm = 0x1F0
	xorw	%cx, %ax
	cmpw	$-6728, %ax             # imm = 0xE5B8
	jne	.LBB101_731
# %bb.645:                              # %main.split2019
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6728, BasicBlockSignatureTracker # imm = 0xE5B8
	movw	$403, RunTimeSignatureAdjuster # imm = 0x193
.LBB101_646:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$488, %ax               # imm = 0x1E8
	xorw	%cx, %ax
	cmpw	$-6717, %ax             # imm = 0xE5C3
	jne	.LBB101_731
# %bb.647:                              # %main.split2013
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6717, BasicBlockSignatureTracker # imm = 0xE5C3
	movw	$479, RunTimeSignatureAdjuster # imm = 0x1DF
.LBB101_648:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$470, %ax               # imm = 0x1D6
	xorw	%cx, %ax
	cmpw	$-6710, %ax             # imm = 0xE5CA
	jne	.LBB101_731
# %bb.649:                              # %main.split2007
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6710, BasicBlockSignatureTracker # imm = 0xE5CA
	movw	$475, RunTimeSignatureAdjuster # imm = 0x1DB
.LBB101_650:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$450, %ax               # imm = 0x1C2
	xorw	%cx, %ax
	cmpw	$-6701, %ax             # imm = 0xE5D3
	jne	.LBB101_731
# %bb.651:                              # %main.split2001
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6701, BasicBlockSignatureTracker # imm = 0xE5D3
	movw	$1598, RunTimeSignatureAdjuster # imm = 0x63E
.LBB101_652:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1567, %ax              # imm = 0x61F
	xorw	%cx, %ax
	cmpw	$-6670, %ax             # imm = 0xE5F2
	jne	.LBB101_731
# %bb.653:                              # %main.split1995
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6670, BasicBlockSignatureTracker # imm = 0xE5F2
	movw	$1558, RunTimeSignatureAdjuster # imm = 0x616
.LBB101_654:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1511, %ax              # imm = 0x5E7
	xorw	%cx, %ax
	cmpw	$-6653, %ax             # imm = 0xE603
	jne	.LBB101_731
# %bb.655:                              # %main.split1989
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6653, BasicBlockSignatureTracker # imm = 0xE603
	movw	$1476, RunTimeSignatureAdjuster # imm = 0x5C4
.LBB101_656:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1473, %ax              # imm = 0x5C1
	xorw	%cx, %ax
	cmpw	$-6650, %ax             # imm = 0xE606
	jne	.LBB101_731
# %bb.657:                              # %main.split1983
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6650, BasicBlockSignatureTracker # imm = 0xE606
	movw	$1433, RunTimeSignatureAdjuster # imm = 0x599
.LBB101_658:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1432, %ax              # imm = 0x598
	xorw	%cx, %ax
	cmpw	$-6649, %ax             # imm = 0xE607
	jne	.LBB101_731
# %bb.659:                              # %main.split1977
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6649, BasicBlockSignatureTracker # imm = 0xE607
	movw	$1419, RunTimeSignatureAdjuster # imm = 0x58B
.LBB101_660:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1409, %ax              # imm = 0x581
	xorw	%cx, %ax
	cmpw	$-6643, %ax             # imm = 0xE60D
	jne	.LBB101_731
# %bb.661:                              # %main.split1971
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6643, BasicBlockSignatureTracker # imm = 0xE60D
	movw	$1417, RunTimeSignatureAdjuster # imm = 0x589
.LBB101_662:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1437, %ax              # imm = 0x59D
	xorw	%cx, %ax
	cmpw	$-6631, %ax             # imm = 0xE619
	jne	.LBB101_731
# %bb.663:                              # %main.split1965
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6631, BasicBlockSignatureTracker # imm = 0xE619
	movw	$1386, RunTimeSignatureAdjuster # imm = 0x56A
.LBB101_664:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1361, %ax              # imm = 0x551
	xorw	%cx, %ax
	cmpw	$-6622, %ax             # imm = 0xE622
	jne	.LBB101_731
# %bb.665:                              # %main.split1959
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6622, BasicBlockSignatureTracker # imm = 0xE622
	movw	$1297, RunTimeSignatureAdjuster # imm = 0x511
.LBB101_666:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1285, %ax              # imm = 0x505
	xorw	%cx, %ax
	cmpw	$-6602, %ax             # imm = 0xE636
	jne	.LBB101_731
# %bb.667:                              # %main.split1947
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6602, BasicBlockSignatureTracker # imm = 0xE636
	movw	$1314, RunTimeSignatureAdjuster # imm = 0x522
.LBB101_668:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1356, %ax              # imm = 0x54C
	xorw	%cx, %ax
	cmpw	$-6568, %ax             # imm = 0xE658
	jne	.LBB101_731
# %bb.669:                              # %main.split1939
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6568, BasicBlockSignatureTracker # imm = 0xE658
	movw	$1158, RunTimeSignatureAdjuster # imm = 0x486
.LBB101_670:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1212, %ax              # imm = 0x4BC
	xorw	%cx, %ax
	cmpw	$-6558, %ax             # imm = 0xE662
	jne	.LBB101_731
# %bb.671:                              # %main.split1925
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6558, BasicBlockSignatureTracker # imm = 0xE662
	movw	$1216, RunTimeSignatureAdjuster # imm = 0x4C0
.LBB101_672:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1247, %ax              # imm = 0x4DF
	xorw	%cx, %ax
	cmpw	$-6531, %ax             # imm = 0xE67D
	jne	.LBB101_731
# %bb.673:                              # %main.split1909
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6531, BasicBlockSignatureTracker # imm = 0xE67D
	movw	$1273, RunTimeSignatureAdjuster # imm = 0x4F9
.LBB101_674:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1037, %ax              # imm = 0x40D
	xorw	%cx, %ax
	cmpw	$-6519, %ax             # imm = 0xE689
	jne	.LBB101_731
# %bb.675:                              # %main.split1903
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6519, BasicBlockSignatureTracker # imm = 0xE689
	movw	$1219, RunTimeSignatureAdjuster # imm = 0x4C3
.LBB101_676:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1255, %ax              # imm = 0x4E7
	xorw	%cx, %ax
	cmpw	$-6483, %ax             # imm = 0xE6AD
	jne	.LBB101_731
# %bb.677:                              # %main.split1893
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6483, BasicBlockSignatureTracker # imm = 0xE6AD
	movw	$1165, RunTimeSignatureAdjuster # imm = 0x48D
.LBB101_678:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1173, %ax              # imm = 0x495
	xorw	%cx, %ax
	cmpw	$-6475, %ax             # imm = 0xE6B5
	jne	.LBB101_731
# %bb.679:                              # %main.split1883
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6475, BasicBlockSignatureTracker # imm = 0xE6B5
	movw	$1185, RunTimeSignatureAdjuster # imm = 0x4A1
.LBB101_680:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1197, %ax              # imm = 0x4AD
	xorw	%cx, %ax
	cmpw	$-6471, %ax             # imm = 0xE6B9
	jne	.LBB101_731
# %bb.681:                              # %main.split1877
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6471, BasicBlockSignatureTracker # imm = 0xE6B9
	movw	$1604, RunTimeSignatureAdjuster # imm = 0x644
.LBB101_682:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1607, %ax              # imm = 0x647
	xorw	%cx, %ax
	cmpw	$-6470, %ax             # imm = 0xE6BA
	jne	.LBB101_731
# %bb.683:                              # %main.split1837
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6470, BasicBlockSignatureTracker # imm = 0xE6BA
	movw	$1624, RunTimeSignatureAdjuster # imm = 0x658
.LBB101_684:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1631, %ax              # imm = 0x65F
	xorw	%cx, %ax
	cmpw	$-6467, %ax             # imm = 0xE6BD
	jne	.LBB101_731
# %bb.685:                              # %main.split1831
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6467, BasicBlockSignatureTracker # imm = 0xE6BD
	movw	$1650, RunTimeSignatureAdjuster # imm = 0x672
.LBB101_686:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1537, %ax              # imm = 0x601
	xorw	%cx, %ax
	cmpw	$-6450, %ax             # imm = 0xE6CE
	jne	.LBB101_731
# %bb.687:                              # %main.split1817
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6450, BasicBlockSignatureTracker # imm = 0xE6CE
	movw	$1637, RunTimeSignatureAdjuster # imm = 0x665
.LBB101_688:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1658, %ax              # imm = 0x67A
	xorw	%cx, %ax
	cmpw	$-6447, %ax             # imm = 0xE6D1
	jne	.LBB101_731
# %bb.689:                              # %main.split1805
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6447, BasicBlockSignatureTracker # imm = 0xE6D1
	movw	$1657, RunTimeSignatureAdjuster # imm = 0x679
.LBB101_690:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1649, %ax              # imm = 0x671
	xorw	%cx, %ax
	cmpw	$-6439, %ax             # imm = 0xE6D9
	jne	.LBB101_731
# %bb.691:                              # %main.split1799
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6439, BasicBlockSignatureTracker # imm = 0xE6D9
	movw	$1615, RunTimeSignatureAdjuster # imm = 0x64F
.LBB101_692:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1610, %ax              # imm = 0x64A
	xorw	%cx, %ax
	cmpw	$-6436, %ax             # imm = 0xE6DC
	jne	.LBB101_731
# %bb.693:                              # %main.split1793
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6436, BasicBlockSignatureTracker # imm = 0xE6DC
	movw	$1696, RunTimeSignatureAdjuster # imm = 0x6A0
.LBB101_694:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1698, %ax              # imm = 0x6A2
	xorw	%cx, %ax
	cmpw	$-6434, %ax             # imm = 0xE6DE
	jne	.LBB101_731
# %bb.695:                              # %main.split1787
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6434, BasicBlockSignatureTracker # imm = 0xE6DE
	movw	$1670, RunTimeSignatureAdjuster # imm = 0x686
.LBB101_696:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1720, %ax              # imm = 0x6B8
	xorw	%cx, %ax
	cmpw	$-6432, %ax             # imm = 0xE6E0
	jne	.LBB101_731
# %bb.697:                              # %main.split1781
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6432, BasicBlockSignatureTracker # imm = 0xE6E0
	movw	$1711, RunTimeSignatureAdjuster # imm = 0x6AF
.LBB101_698:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1722, %ax              # imm = 0x6BA
	xorw	%cx, %ax
	cmpw	$-6411, %ax             # imm = 0xE6F5
	jne	.LBB101_731
# %bb.699:                              # %main.split1775
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6411, BasicBlockSignatureTracker # imm = 0xE6F5
	movw	$1731, RunTimeSignatureAdjuster # imm = 0x6C3
.LBB101_700:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1728, %ax              # imm = 0x6C0
	xorw	%cx, %ax
	cmpw	$-6410, %ax             # imm = 0xE6F6
	jne	.LBB101_731
# %bb.701:                              # %main.split1769
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6410, BasicBlockSignatureTracker # imm = 0xE6F6
	movw	$0, RunTimeSignatureAdjuster
# %bb.702:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-6406, %ax             # imm = 0xE6FA
	jne	.LBB101_731
# %bb.703:                              # %main.split2073
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6406, BasicBlockSignatureTracker # imm = 0xE6FA
	movw	$0, RunTimeSignatureAdjuster
# %bb.704:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$494, %ax               # imm = 0x1EE
	cmpw	$-6380, %ax             # imm = 0xE714
	jne	.LBB101_731
# %bb.705:                              # %main.split2075
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6380, BasicBlockSignatureTracker # imm = 0xE714
	movw	$0, RunTimeSignatureAdjuster
# %bb.706:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$88, %ax
	cmpw	$-6324, %ax             # imm = 0xE74C
	jne	.LBB101_731
# %bb.707:                              # %main.split2077
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6324, BasicBlockSignatureTracker # imm = 0xE74C
	movw	$0, RunTimeSignatureAdjuster
# %bb.708:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-6322, %ax             # imm = 0xE74E
	jne	.LBB101_731
# %bb.709:                              # %main.split2079
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6322, BasicBlockSignatureTracker # imm = 0xE74E
	movw	$14464, RunTimeSignatureAdjuster # imm = 0x3880
.LBB101_710:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14480, %ax             # imm = 0x3890
	xorw	%cx, %ax
	cmpw	$-6306, %ax             # imm = 0xE75E
	jne	.LBB101_731
# %bb.711:                              # %main.split1747
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6306, BasicBlockSignatureTracker # imm = 0xE75E
	movw	$14585, RunTimeSignatureAdjuster # imm = 0x38F9
.LBB101_712:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14534, %ax             # imm = 0x38C6
	xorw	%cx, %ax
	cmpw	$-6303, %ax             # imm = 0xE761
	jne	.LBB101_731
# %bb.713:                              # %main.split1741
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6303, BasicBlockSignatureTracker # imm = 0xE761
	movw	$14529, RunTimeSignatureAdjuster # imm = 0x38C1
.LBB101_714:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14539, %ax             # imm = 0x38CB
	xorw	%cx, %ax
	cmpw	$-6293, %ax             # imm = 0xE76B
	jne	.LBB101_731
# %bb.715:                              # %main.split1731
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6293, BasicBlockSignatureTracker # imm = 0xE76B
	movw	$14569, RunTimeSignatureAdjuster # imm = 0x38E9
.LBB101_716:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14580, %ax             # imm = 0x38F4
	xorw	%cx, %ax
	cmpw	$-6282, %ax             # imm = 0xE776
	jne	.LBB101_731
# %bb.717:                              # %main.split1725
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6282, BasicBlockSignatureTracker # imm = 0xE776
	movw	$14342, RunTimeSignatureAdjuster # imm = 0x3806
.LBB101_718:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14561, %ax             # imm = 0x38E1
	xorw	%cx, %ax
	cmpw	$-6255, %ax             # imm = 0xE791
	jne	.LBB101_731
# %bb.719:                              # %main.split1719
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6255, BasicBlockSignatureTracker # imm = 0xE791
	movw	$14707, RunTimeSignatureAdjuster # imm = 0x3973
.LBB101_720:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14671, %ax             # imm = 0x394F
	xorw	%cx, %ax
	cmpw	$-6227, %ax             # imm = 0xE7AD
	jne	.LBB101_731
# %bb.721:                              # %main.split1699
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6227, BasicBlockSignatureTracker # imm = 0xE7AD
	movw	$14701, RunTimeSignatureAdjuster # imm = 0x396D
.LBB101_722:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14599, %ax             # imm = 0x3907
	xorw	%cx, %ax
	cmpw	$-6201, %ax             # imm = 0xE7C7
	jne	.LBB101_731
# %bb.723:                              # %main.split1693
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6201, BasicBlockSignatureTracker # imm = 0xE7C7
	movw	$14684, RunTimeSignatureAdjuster # imm = 0x395C
.LBB101_724:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14678, %ax             # imm = 0x3956
	xorw	%cx, %ax
	cmpw	$-6195, %ax             # imm = 0xE7CD
	jne	.LBB101_731
# %bb.725:                              # %main.split1685
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6195, BasicBlockSignatureTracker # imm = 0xE7CD
	movw	$0, RunTimeSignatureAdjuster
# %bb.726:                              #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-6191, %ax             # imm = 0xE7D1
	jne	.LBB101_731
# %bb.727:                              # %main.split2081
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6191, BasicBlockSignatureTracker # imm = 0xE7D1
	movw	$14808, RunTimeSignatureAdjuster # imm = 0x39D8
.LBB101_728:                            #   in Loop: Header=BB101_5 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14805, %ax             # imm = 0x39D5
	xorw	%cx, %ax
	cmpw	$-6180, %ax             # imm = 0xE7DC
	jne	.LBB101_731
# %bb.729:                              # %main.split1657
                                        #   in Loop: Header=BB101_5 Depth=1
	movw	$-6180, BasicBlockSignatureTracker # imm = 0xE7DC
	movw	$16240, RunTimeSignatureAdjuster # imm = 0x3F70
	jmp	.LBB101_367
.LBB101_730:                            # %CFerrorHandler.main.loopexit
	jmp	.LBB101_732
.LBB101_731:                            # %CFerrorHandler.main.loopexit1
	jmp	.LBB101_732
.LBB101_732:                            # %CFerrorHandler.main
	callq	FAULT_DETECTED_CFC
.Lfunc_end101:
	.size	main, .Lfunc_end101-main
	.cfi_endproc
                                        # -- End function
	.globl	clear_tt                # -- Begin function clear_tt
	.p2align	4, 0x90
	.type	clear_tt,@function
clear_tt:                               # @clear_tt
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-3288, %ax             # imm = 0xF328
	xorw	%cx, %ax
	cmpw	$-6154, %ax             # imm = 0xE7F6
	jne	.LBB102_9
# %bb.1:                                # %clear_tt.split50
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-3288, %ax             # imm = 0xF328
	xorw	%cx, %ax
	cmpw	$-6154, %ax             # imm = 0xE7F6
	jne	.LBB102_9
# %bb.2:                                # %clear_tt.split48
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-3288, %ax             # imm = 0xF328
	xorw	%cx, %ax
	cmpw	$-6154, %ax             # imm = 0xE7F6
	jne	.LBB102_9
# %bb.3:                                # %clear_tt.split46
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-3288, %ax             # imm = 0xF328
	xorw	%cx, %ax
	cmpw	$-6154, %ax             # imm = 0xE7F6
	jne	.LBB102_9
# %bb.4:                                # %clear_tt.split44
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-3288, %ax             # imm = 0xF328
	xorw	%cx, %ax
	cmpw	$-6154, %ax             # imm = 0xE7F6
	jne	.LBB102_9
# %bb.5:                                # %clear_tt.split42
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-3288, %ax             # imm = 0xF328
	xorw	%cx, %ax
	cmpw	$-6154, %ax             # imm = 0xE7F6
	jne	.LBB102_9
# %bb.6:                                # %clear_tt.split40
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-3288, %ax             # imm = 0xF328
	xorw	%cx, %ax
	cmpw	$-6154, %ax             # imm = 0xE7F6
	jne	.LBB102_9
# %bb.7:                                # %clear_tt.split38
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-3288, %ax             # imm = 0xF328
	xorw	%cx, %ax
	cmpw	$-6154, %ax             # imm = 0xE7F6
	jne	.LBB102_9
# %bb.8:                                # %clear_tt.split
	movq	DP_TTable, %rdi
	movslq	TTSize, %rax
	imulq	$20, %rax, %rdx
	xorl	%esi, %esi
	callq	memset
	movq	AS_TTable, %rdi
	movslq	TTSize, %rax
	imulq	$20, %rax, %rdx
	xorl	%esi, %esi
	callq	memset
	movq	QS_TTable, %rdi
	movslq	TTSize, %rdx
	shlq	$4, %rdx
	xorl	%esi, %esi
	callq	memset
	movw	$-6154, BasicBlockSignatureTracker # imm = 0xE7F6
	movw	$-3254, RunTimeSignatureAdjuster # imm = 0xF34A
	popq	%rbp
	retq
.LBB102_9:                              # %CFerrorHandler.clear_tt
	callq	FAULT_DETECTED_CFC
.Lfunc_end102:
	.size	clear_tt, .Lfunc_end102-clear_tt
	.cfi_endproc
                                        # -- End function
	.globl	clear_dp_tt             # -- Begin function clear_dp_tt
	.p2align	4, 0x90
	.type	clear_dp_tt,@function
clear_dp_tt:                            # @clear_dp_tt
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movq	DP_TTable, %rdi
	movslq	TTSize, %rax
	imulq	$20, %rax, %rdx
	xorl	%esi, %esi
	callq	memset
	movw	$-6134, BasicBlockSignatureTracker # imm = 0xE80A
	movw	$0, RunTimeSignatureAdjuster
	popq	%rbp
	retq
.Lfunc_end103:
	.size	clear_dp_tt, .Lfunc_end103-clear_dp_tt
	.cfi_endproc
                                        # -- End function
	.globl	initialize_zobrist      # -- Begin function initialize_zobrist
	.p2align	4, 0x90
	.type	initialize_zobrist,@function
initialize_zobrist:                     # @initialize_zobrist
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12418, %ax             # imm = 0x3082
	xorw	%cx, %ax
	cmpw	$-6115, %ax             # imm = 0xE81D
	jne	.LBB104_20
# %bb.1:                                # %initialize_zobrist.split
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movw	$-6115, BasicBlockSignatureTracker # imm = 0xE81D
	movw	$0, RunTimeSignatureAdjuster
	movl	$31657, %edi            # imm = 0x7BA9
	callq	seedMT
	movw	$-6115, BasicBlockSignatureTracker # imm = 0xE81D
	movw	$0, RunTimeSignatureAdjuster
	movl	$0, (%rbx)
	movw	$-6115, BasicBlockSignatureTracker # imm = 0xE81D
	movw	$0, RunTimeSignatureAdjuster
.LBB104_2:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB104_6 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$-6112, %ax             # imm = 0xE820
	jne	.LBB104_19
# %bb.3:                                # %initialize_zobrist.split31
                                        #   in Loop: Header=BB104_2 Depth=1
	movl	(%rbx), %eax
	movw	$-6112, BasicBlockSignatureTracker # imm = 0xE820
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$14, %eax
	jge	.LBB104_16
# %bb.4:                                #   in Loop: Header=BB104_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-6110, %ax             # imm = 0xE822
	jne	.LBB104_19
# %bb.5:                                # %initialize_zobrist.split33
                                        #   in Loop: Header=BB104_2 Depth=1
	movl	$0, (%r14)
	movw	$-6110, BasicBlockSignatureTracker # imm = 0xE822
	movw	$0, RunTimeSignatureAdjuster
.LBB104_6:                              #   Parent Loop BB104_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-6109, %ax             # imm = 0xE823
	jne	.LBB104_18
# %bb.7:                                # %initialize_zobrist.split37
                                        #   in Loop: Header=BB104_6 Depth=2
	movl	(%r14), %eax
	movw	$-6109, BasicBlockSignatureTracker # imm = 0xE823
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$144, %eax
	jge	.LBB104_12
# %bb.8:                                #   in Loop: Header=BB104_6 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-6108, %ax             # imm = 0xE824
	jne	.LBB104_18
# %bb.9:                                # %initialize_zobrist.split39
                                        #   in Loop: Header=BB104_6 Depth=2
	movw	$-6108, BasicBlockSignatureTracker # imm = 0xE824
	movw	$0, RunTimeSignatureAdjuster
	callq	randomMT
	movabsq	$zobrist, %rcx
	movw	$-6108, BasicBlockSignatureTracker # imm = 0xE824
	movw	$0, RunTimeSignatureAdjuster
	movslq	(%rbx), %rdx
	imulq	$576, %rdx, %rdx        # imm = 0x240
	addq	%rdx, %rcx
	movslq	(%r14), %rdx
	movl	%eax, (%rcx,%rdx,4)
	movw	$-6108, BasicBlockSignatureTracker # imm = 0xE824
	movw	$0, RunTimeSignatureAdjuster
# %bb.10:                               #   in Loop: Header=BB104_6 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-6090, %ax             # imm = 0xE836
	jne	.LBB104_18
# %bb.11:                               # %initialize_zobrist.split43
                                        #   in Loop: Header=BB104_6 Depth=2
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movw	$-6090, BasicBlockSignatureTracker # imm = 0xE836
	movw	$20, RunTimeSignatureAdjuster
	jmp	.LBB104_6
.LBB104_12:                             #   in Loop: Header=BB104_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$96, %ax
	cmpw	$-6077, %ax             # imm = 0xE843
	jne	.LBB104_19
# %bb.13:                               # %initialize_zobrist.split41
                                        #   in Loop: Header=BB104_2 Depth=1
	movw	$-6077, BasicBlockSignatureTracker # imm = 0xE843
	movw	$0, RunTimeSignatureAdjuster
# %bb.14:                               #   in Loop: Header=BB104_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-6060, %ax             # imm = 0xE854
	jne	.LBB104_19
# %bb.15:                               # %initialize_zobrist.split45
                                        #   in Loop: Header=BB104_2 Depth=1
	movl	(%rbx), %eax
	addl	$1, %eax
	movl	%eax, (%rbx)
	movw	$-6060, BasicBlockSignatureTracker # imm = 0xE854
	movw	$73, RunTimeSignatureAdjuster
	jmp	.LBB104_2
.LBB104_16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$124, %ax
	cmpw	$-6052, %ax             # imm = 0xE85C
	jne	.LBB104_20
# %bb.17:                               # %initialize_zobrist.split35
	movl	$-559038737, hash       # imm = 0xDEADBEEF
	movl	$-1056969216, hold_hash # imm = 0xC0FFEE00
	movw	$-6052, BasicBlockSignatureTracker # imm = 0xE85C
	movw	$20162, RunTimeSignatureAdjuster # imm = 0x4EC2
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB104_18:                             # %CFerrorHandler.initialize_zobrist.loopexit
	jmp	.LBB104_20
.LBB104_19:                             # %CFerrorHandler.initialize_zobrist.loopexit1
	jmp	.LBB104_20
.LBB104_20:                             # %CFerrorHandler.initialize_zobrist
	callq	FAULT_DETECTED_CFC
.Lfunc_end104:
	.size	initialize_zobrist, .Lfunc_end104-initialize_zobrist
	.cfi_endproc
                                        # -- End function
	.globl	initialize_hash         # -- Begin function initialize_hash
	.p2align	4, 0x90
	.type	initialize_hash,@function
initialize_hash:                        # @initialize_hash
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-955, %ax              # imm = 0xFC45
	xorw	%cx, %ax
	cmpw	$-6023, %ax             # imm = 0xE879
	jne	.LBB105_26
# %bb.1:                                # %initialize_hash.split80
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-955, %ax              # imm = 0xFC45
	xorw	%cx, %ax
	cmpw	$-6023, %ax             # imm = 0xE879
	jne	.LBB105_26
# %bb.2:                                # %initialize_hash.split78
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-955, %ax              # imm = 0xFC45
	xorw	%cx, %ax
	cmpw	$-6023, %ax             # imm = 0xE879
	jne	.LBB105_26
# %bb.3:                                # %initialize_hash.split76
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-955, %ax              # imm = 0xFC45
	xorw	%cx, %ax
	cmpw	$-6023, %ax             # imm = 0xE879
	jne	.LBB105_26
# %bb.4:                                # %initialize_hash.split74
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-955, %ax              # imm = 0xFC45
	xorw	%cx, %ax
	cmpw	$-6023, %ax             # imm = 0xE879
	jne	.LBB105_26
# %bb.5:                                # %initialize_hash.split72
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-955, %ax              # imm = 0xFC45
	xorw	%cx, %ax
	cmpw	$-6023, %ax             # imm = 0xE879
	jne	.LBB105_26
# %bb.6:                                # %initialize_hash.split70
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-955, %ax              # imm = 0xFC45
	xorw	%cx, %ax
	cmpw	$-6023, %ax             # imm = 0xE879
	jne	.LBB105_26
# %bb.7:                                # %initialize_hash.split68
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-955, %ax              # imm = 0xFC45
	xorw	%cx, %ax
	cmpw	$-6023, %ax             # imm = 0xE879
	jne	.LBB105_26
# %bb.8:                                # %initialize_hash.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	$-559038737, hash       # imm = 0xDEADBEEF
	movl	$0, (%rax)
	movw	$-6023, BasicBlockSignatureTracker # imm = 0xE879
	movw	$0, RunTimeSignatureAdjuster
.LBB105_9:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$171, %cx
	xorw	%dx, %cx
	cmpw	$-5934, %cx             # imm = 0xE8D2
	jne	.LBB105_25
# %bb.10:                               # %initialize_hash.split82
                                        #   in Loop: Header=BB105_9 Depth=1
	movl	(%rax), %ecx
	movw	$-5934, BasicBlockSignatureTracker # imm = 0xE8D2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$144, %ecx
	jge	.LBB105_23
# %bb.11:                               #   in Loop: Header=BB105_9 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	xorw	$12, %cx
	cmpw	$-5922, %cx             # imm = 0xE8DE
	jne	.LBB105_25
# %bb.12:                               # %initialize_hash.split84
                                        #   in Loop: Header=BB105_9 Depth=1
	movslq	(%rax), %rcx
	movl	board(,%rcx,4), %ecx
	movw	$-5922, BasicBlockSignatureTracker # imm = 0xE8DE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %ecx
	je	.LBB105_19
# %bb.13:                               #   in Loop: Header=BB105_9 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	xorw	$62, %cx
	cmpw	$-5920, %cx             # imm = 0xE8E0
	jne	.LBB105_25
# %bb.14:                               # %initialize_hash.split88
                                        #   in Loop: Header=BB105_9 Depth=1
	movslq	(%rax), %rcx
	movl	board(,%rcx,4), %ecx
	movw	$-5920, BasicBlockSignatureTracker # imm = 0xE8E0
	movw	$62, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB105_19
# %bb.15:                               # %Buffer__
                                        #   in Loop: Header=BB105_9 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	xorw	$-23625, %cx            # imm = 0xA3B7
	cmpw	$19287, %cx             # imm = 0x4B57
	jne	.LBB105_25
# %bb.16:                               # %initialize_hash.split92
                                        #   in Loop: Header=BB105_9 Depth=1
	movw	$19287, BasicBlockSignatureTracker # imm = 0x4B57
	movw	$-23625, RunTimeSignatureAdjuster # imm = 0xA3B7
# %bb.17:                               #   in Loop: Header=BB105_9 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$14, %cx
	xorw	%dx, %cx
	cmpw	$-5906, %cx             # imm = 0xE8EE
	jne	.LBB105_25
# %bb.18:                               # %initialize_hash.split96
                                        #   in Loop: Header=BB105_9 Depth=1
	movabsq	$zobrist, %rcx
	movl	hash, %edx
	movslq	(%rax), %rsi
	movslq	board(,%rsi,4), %rsi
	imulq	$576, %rsi, %rsi        # imm = 0x240
	addq	%rsi, %rcx
	movslq	(%rax), %rsi
	xorl	(%rcx,%rsi,4), %edx
	movl	%edx, hash
	movw	$-5906, BasicBlockSignatureTracker # imm = 0xE8EE
	movw	$48, RunTimeSignatureAdjuster
.LBB105_19:                             #   in Loop: Header=BB105_9 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$45, %cx
	xorw	%dx, %cx
	cmpw	$-5901, %cx             # imm = 0xE8F3
	jne	.LBB105_25
# %bb.20:                               # %initialize_hash.split90
                                        #   in Loop: Header=BB105_9 Depth=1
	movw	$-5901, BasicBlockSignatureTracker # imm = 0xE8F3
	movw	$0, RunTimeSignatureAdjuster
# %bb.21:                               #   in Loop: Header=BB105_9 Depth=1
	movw	BasicBlockSignatureTracker, %cx
	xorw	$7, %cx
	cmpw	$-5900, %cx             # imm = 0xE8F4
	jne	.LBB105_25
# %bb.22:                               # %initialize_hash.split94
                                        #   in Loop: Header=BB105_9 Depth=1
	movl	(%rax), %ecx
	addl	$1, %ecx
	movl	%ecx, (%rax)
	movw	$-5900, BasicBlockSignatureTracker # imm = 0xE8F4
	movw	$141, RunTimeSignatureAdjuster
	jmp	.LBB105_9
.LBB105_23:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$455, %ax               # imm = 0x1C7
	cmpw	$-5867, %ax             # imm = 0xE915
	jne	.LBB105_26
# %bb.24:                               # %initialize_hash.split86
	movl	$-1056969216, hold_hash # imm = 0xC0FFEE00
	movw	$-5867, BasicBlockSignatureTracker # imm = 0xE915
	movw	$-1637, RunTimeSignatureAdjuster # imm = 0xF99B
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB105_25:                             # %CFerrorHandler.initialize_hash.loopexit
	jmp	.LBB105_26
.LBB105_26:                             # %CFerrorHandler.initialize_hash
	callq	FAULT_DETECTED_CFC
.Lfunc_end105:
	.size	initialize_hash, .Lfunc_end105-initialize_hash
	.cfi_endproc
                                        # -- End function
	.globl	QStoreTT                # -- Begin function QStoreTT
	.p2align	4, 0x90
	.type	QStoreTT,@function
QStoreTT:                               # @QStoreTT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$17432, %ax             # imm = 0x4418
	xorw	%bx, %ax
	cmpw	$-5846, %ax             # imm = 0xE92A
	jne	.LBB106_16
# %bb.1:                                # %QStoreTT.split37
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$17432, %ax             # imm = 0x4418
	xorw	%bx, %ax
	cmpw	$-5846, %ax             # imm = 0xE92A
	jne	.LBB106_16
# %bb.2:                                # %QStoreTT.split35
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$17432, %ax             # imm = 0x4418
	xorw	%bx, %ax
	cmpw	$-5846, %ax             # imm = 0xE92A
	jne	.LBB106_16
# %bb.3:                                # %QStoreTT.split
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movl	%edi, (%r8)
	movl	%esi, (%rbx)
	movl	%edx, (%r11)
	movl	%ecx, (%r10)
	movl	TTStores, %eax
	addl	$1, %eax
	movl	%eax, TTStores
	movl	hash, %eax
	xorl	%edx, %edx
	divl	TTSize
	movl	%edx, (%r9)
	movl	(%r8), %eax
	movl	(%rbx), %ecx
	movw	$-5846, BasicBlockSignatureTracker # imm = 0xE92A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB106_6
# %bb.4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-5845, %ax             # imm = 0xE92B
	jne	.LBB106_16
# %bb.5:                                # %QStoreTT.split39
	movq	QS_TTable, %rax
	movl	(%r9), %ecx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movb	$1, 1(%rax)
	movw	$-5845, BasicBlockSignatureTracker # imm = 0xE92B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB106_14
.LBB106_6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-5836, %ax             # imm = 0xE934
	jne	.LBB106_16
# %bb.7:                                # %QStoreTT.split41
	movl	(%r8), %eax
	movl	(%r11), %ecx
	movw	$-5836, BasicBlockSignatureTracker # imm = 0xE934
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB106_10
# %bb.8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-5833, %ax             # imm = 0xE937
	jne	.LBB106_16
# %bb.9:                                # %QStoreTT.split45
	movq	QS_TTable, %rax
	movl	(%r9), %ecx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movb	$2, 1(%rax)
	movw	$-5833, BasicBlockSignatureTracker # imm = 0xE937
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB106_12
.LBB106_10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-5825, %ax             # imm = 0xE93F
	jne	.LBB106_16
# %bb.11:                               # %QStoreTT.split47
	movq	QS_TTable, %rax
	movl	(%r9), %ecx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movb	$3, 1(%rax)
	movw	$-5825, BasicBlockSignatureTracker # imm = 0xE93F
	movw	$8, RunTimeSignatureAdjuster
.LBB106_12:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$99, %ax
	xorw	%cx, %ax
	cmpw	$-5804, %ax             # imm = 0xE954
	jne	.LBB106_16
# %bb.13:                               # %QStoreTT.split49
	movw	$-5804, BasicBlockSignatureTracker # imm = 0xE954
	movw	$127, RunTimeSignatureAdjuster
.LBB106_14:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$71, %ax
	xorw	%cx, %ax
	cmpw	$-5780, %ax             # imm = 0xE96C
	jne	.LBB106_16
# %bb.15:                               # %QStoreTT.split43
	movl	$1, %eax
	xorl	%ecx, %ecx
	movl	hash, %edx
	movq	QS_TTable, %rsi
	movl	(%r9), %edi
	shlq	$4, %rdi
	addq	%rdi, %rsi
	movl	%edx, 4(%rsi)
	movl	hold_hash, %edx
	movq	QS_TTable, %rsi
	movl	(%r9), %edi
	shlq	$4, %rdi
	addq	%rdi, %rsi
	movl	%edx, 8(%rsi)
	movl	(%r10), %edx
	movq	QS_TTable, %rsi
	movl	(%r9), %edi
	shlq	$4, %rdi
	addq	%rdi, %rsi
	movw	%dx, 2(%rsi)
	movl	(%r8), %edx
	movq	QS_TTable, %rsi
	movl	(%r9), %edi
	shlq	$4, %rdi
	addq	%rdi, %rsi
	movl	%edx, 12(%rsi)
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movq	QS_TTable, %rcx
	movl	(%r9), %edx
	shlq	$4, %rdx
	addq	%rdx, %rcx
	movb	%al, (%rcx)
	movw	$-5780, BasicBlockSignatureTracker # imm = 0xE96C
	movw	$17475, RunTimeSignatureAdjuster # imm = 0x4443
	leaq	-8(%rbp), %rsp
	popq	%rbx
	popq	%rbp
	retq
.LBB106_16:                             # %CFerrorHandler.QStoreTT
	callq	FAULT_DETECTED_CFC
.Lfunc_end106:
	.size	QStoreTT, .Lfunc_end106-QStoreTT
	.cfi_endproc
                                        # -- End function
	.globl	StoreTT                 # -- Begin function StoreTT
	.p2align	4, 0x90
	.type	StoreTT,@function
StoreTT:                                # @StoreTT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.1:                                # %StoreTT.split253
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.2:                                # %StoreTT.split251
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.3:                                # %StoreTT.split249
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.4:                                # %StoreTT.split247
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.5:                                # %StoreTT.split245
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.6:                                # %StoreTT.split243
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.7:                                # %StoreTT.split241
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.8:                                # %StoreTT.split239
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.9:                                # %StoreTT.split237
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.10:                               # %StoreTT.split235
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.11:                               # %StoreTT.split233
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.12:                               # %StoreTT.split231
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$29079, %ax             # imm = 0x7197
	xorw	%bx, %ax
	cmpw	$-5743, %ax             # imm = 0xE991
	jne	.LBB107_100
# %bb.13:                               # %StoreTT.split
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movl	%edi, (%r15)
	movl	%esi, (%rbx)
	movl	%edx, (%r13)
	movl	%ecx, (%r14)
	movl	%r8d, (%r10)
	movl	%r9d, (%r12)
	movl	TTStores, %eax
	addl	$1, %eax
	movl	%eax, TTStores
	movl	hash, %eax
	xorl	%edx, %edx
	divl	TTSize
	movl	%edx, (%r11)
	movq	DP_TTable, %rax
	movl	(%r11), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	(%rax), %eax
	movl	(%r12), %ecx
	movw	$-5743, BasicBlockSignatureTracker # imm = 0xE991
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB107_30
# %bb.14:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-5736, %ax             # imm = 0xE998
	jne	.LBB107_100
# %bb.15:                               # %StoreTT.split257
	movq	DP_TTable, %rax
	movl	(%r11), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	(%rax), %eax
	movl	(%r12), %ecx
	movw	$-5736, BasicBlockSignatureTracker # imm = 0xE998
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB107_66
# %bb.16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-5729, %ax             # imm = 0xE99F
	jne	.LBB107_100
# %bb.17:                               # %StoreTT.split259
	movq	DP_TTable, %rax
	movl	(%r11), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	3(%rax), %eax
	movw	$-5729, BasicBlockSignatureTracker # imm = 0xE99F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB107_20
# %bb.18:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-5727, %ax             # imm = 0xE9A1
	jne	.LBB107_100
# %bb.19:                               # %StoreTT.split263
	movl	(%r15), %eax
	movl	(%rbx), %ecx
	movw	$-5727, BasicBlockSignatureTracker # imm = 0xE9A1
	movw	$62, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB107_26
.LBB107_20:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$-5720, %ax             # imm = 0xE9A8
	jne	.LBB107_100
# %bb.21:                               # %StoreTT.split265
	movl	(%r15), %eax
	movl	(%rbx), %ecx
	movw	$-5720, BasicBlockSignatureTracker # imm = 0xE9A8
	movw	$48, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jle	.LBB107_66
# %bb.22:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-23045, %ax            # imm = 0xA5FB
	cmpw	$19539, %ax             # imm = 0x4C53
	jne	.LBB107_100
# %bb.23:                               # %StoreTT.split269
	movw	$19539, BasicBlockSignatureTracker # imm = 0x4C53
	movw	$-23045, RunTimeSignatureAdjuster # imm = 0xA5FB
# %bb.24:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$107, %ax
	xorw	%cx, %ax
	cmpw	$-5693, %ax             # imm = 0xE9C3
	jne	.LBB107_100
# %bb.25:                               # %StoreTT.split337
	movl	(%r15), %eax
	movl	(%r13), %ecx
	movw	$-5693, BasicBlockSignatureTracker # imm = 0xE9C3
	movw	$91, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB107_28
	jmp	.LBB107_66
.LBB107_26:                             # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26170, %ax             # imm = 0x663A
	cmpw	$-28773, %ax            # imm = 0x8F9B
	jne	.LBB107_100
# %bb.27:                               # %StoreTT.split267
	movw	$-28773, BasicBlockSignatureTracker # imm = 0x8F9B
	movw	$26122, RunTimeSignatureAdjuster # imm = 0x660A
	jmp	.LBB107_30
.LBB107_28:                             # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24435, %ax             # imm = 0x5F73
	cmpw	$-18768, %ax            # imm = 0xB6B0
	jne	.LBB107_100
# %bb.29:                               # %StoreTT.split271
	movw	$-18768, BasicBlockSignatureTracker # imm = 0xB6B0
	movw	$24353, RunTimeSignatureAdjuster # imm = 0x5F21
.LBB107_30:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$86, %ax
	xorw	%cx, %ax
	cmpw	$-5689, %ax             # imm = 0xE9C7
	jne	.LBB107_100
# %bb.31:                               # %StoreTT.split255
	movl	is_pondering, %eax
	movw	$-5689, BasicBlockSignatureTracker # imm = 0xE9C7
	movw	$95, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB107_66
# %bb.32:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6285, %ax              # imm = 0x188D
	cmpw	$-3766, %ax             # imm = 0xF14A
	jne	.LBB107_100
# %bb.33:                               # %StoreTT.split273
	movw	$-3766, BasicBlockSignatureTracker # imm = 0xF14A
	movw	$6285, RunTimeSignatureAdjuster # imm = 0x188D
# %bb.34:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$-5678, %ax             # imm = 0xE9D2
	jne	.LBB107_100
# %bb.35:                               # %StoreTT.split339
	movl	(%r15), %eax
	movl	(%rbx), %ecx
	movw	$-5678, BasicBlockSignatureTracker # imm = 0xE9D2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB107_42
# %bb.36:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-5671, %ax             # imm = 0xE9D9
	jne	.LBB107_100
# %bb.37:                               # %StoreTT.split275
	movq	DP_TTable, %rax
	movl	(%r11), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	$1, 3(%rax)
	movl	(%r15), %eax
	movw	$-5671, BasicBlockSignatureTracker # imm = 0xE9D9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-999500, %eax          # imm = 0xFFF0BFB4
	jge	.LBB107_40
# %bb.38:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-5658, %ax             # imm = 0xE9E6
	jne	.LBB107_100
# %bb.39:                               # %StoreTT.split279
	movl	$-999500, (%r15)        # imm = 0xFFF0BFB4
	movw	$-5658, BasicBlockSignatureTracker # imm = 0xE9E6
	movw	$63, RunTimeSignatureAdjuster
.LBB107_40:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-5656, %ax             # imm = 0xE9E8
	jne	.LBB107_100
# %bb.41:                               # %StoreTT.split281
	movw	$-5656, BasicBlockSignatureTracker # imm = 0xE9E8
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB107_64
.LBB107_42:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$-5639, %ax             # imm = 0xE9F9
	jne	.LBB107_100
# %bb.43:                               # %StoreTT.split277
	movl	(%r15), %eax
	movl	(%r13), %ecx
	movw	$-5639, BasicBlockSignatureTracker # imm = 0xE9F9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB107_50
# %bb.44:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1016, %ax              # imm = 0x3F8
	cmpw	$-5631, %ax             # imm = 0xEA01
	jne	.LBB107_100
# %bb.45:                               # %StoreTT.split285
	movq	DP_TTable, %rax
	movl	(%r11), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	$2, 3(%rax)
	movl	(%r15), %eax
	movw	$-5631, BasicBlockSignatureTracker # imm = 0xEA01
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$999500, %eax           # imm = 0xF404C
	jle	.LBB107_48
# %bb.46:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-5629, %ax             # imm = 0xEA03
	jne	.LBB107_100
# %bb.47:                               # %StoreTT.split289
	movl	$999500, (%r15)         # imm = 0xF404C
	movw	$-5629, BasicBlockSignatureTracker # imm = 0xEA03
	movw	$2, RunTimeSignatureAdjuster
.LBB107_48:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-5617, %ax             # imm = 0xEA0F
	jne	.LBB107_100
# %bb.49:                               # %StoreTT.split291
	movw	$-5617, BasicBlockSignatureTracker # imm = 0xEA0F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB107_62
.LBB107_50:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$995, %ax               # imm = 0x3E3
	cmpw	$-5606, %ax             # imm = 0xEA1A
	jne	.LBB107_100
# %bb.51:                               # %StoreTT.split287
	movq	DP_TTable, %rax
	movl	(%r11), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	$3, 3(%rax)
	movl	(%r15), %eax
	movw	$-5606, BasicBlockSignatureTracker # imm = 0xEA1A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$999500, %eax           # imm = 0xF404C
	jle	.LBB107_54
# %bb.52:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$-5598, %ax             # imm = 0xEA22
	jne	.LBB107_100
# %bb.53:                               # %StoreTT.split295
	movl	ply, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$-5598, BasicBlockSignatureTracker # imm = 0xEA22
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB107_60
.LBB107_54:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$51, %ax
	cmpw	$-5591, %ax             # imm = 0xEA29
	jne	.LBB107_100
# %bb.55:                               # %StoreTT.split297
	movl	(%r15), %eax
	movw	$-5591, BasicBlockSignatureTracker # imm = 0xEA29
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-999500, %eax          # imm = 0xFFF0BFB4
	jge	.LBB107_58
# %bb.56:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-5587, %ax             # imm = 0xEA2D
	jne	.LBB107_100
# %bb.57:                               # %StoreTT.split301
	movl	ply, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$-5587, BasicBlockSignatureTracker # imm = 0xEA2D
	movw	$4, RunTimeSignatureAdjuster
.LBB107_58:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-5581, %ax             # imm = 0xEA33
	jne	.LBB107_100
# %bb.59:                               # %StoreTT.split303
	movw	$-5581, BasicBlockSignatureTracker # imm = 0xEA33
	movw	$17, RunTimeSignatureAdjuster
.LBB107_60:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-5571, %ax             # imm = 0xEA3D
	jne	.LBB107_100
# %bb.61:                               # %StoreTT.split299
	movw	$-5571, BasicBlockSignatureTracker # imm = 0xEA3D
	movw	$50, RunTimeSignatureAdjuster
.LBB107_62:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$49, %ax
	xorw	%cx, %ax
	cmpw	$-5570, %ax             # imm = 0xEA3E
	jne	.LBB107_100
# %bb.63:                               # %StoreTT.split293
	movw	$-5570, BasicBlockSignatureTracker # imm = 0xEA3E
	movw	$982, RunTimeSignatureAdjuster # imm = 0x3D6
.LBB107_64:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$934, %ax               # imm = 0x3A6
	xorw	%cx, %ax
	cmpw	$-5554, %ax             # imm = 0xEA4E
	jne	.LBB107_100
# %bb.65:                               # %StoreTT.split283
	movl	$1, %eax
	xorl	%ecx, %ecx
	movl	hash, %edx
	movq	DP_TTable, %rsi
	movl	(%r11), %edi
	imulq	$20, %rdi, %rdi
	addq	%rdi, %rsi
	movl	%edx, 8(%rsi)
	movl	hold_hash, %edx
	movq	DP_TTable, %rsi
	movl	(%r11), %edi
	imulq	$20, %rdi, %rdi
	addq	%rdi, %rsi
	movl	%edx, 12(%rsi)
	movl	(%r12), %edx
	movq	DP_TTable, %rsi
	movl	(%r11), %edi
	imulq	$20, %rdi, %rdi
	addq	%rdi, %rsi
	movb	%dl, (%rsi)
	movl	(%r14), %edx
	movq	DP_TTable, %rsi
	movl	(%r11), %edi
	imulq	$20, %rdi, %rdi
	addq	%rdi, %rsi
	movw	%dx, 4(%rsi)
	movl	(%r15), %edx
	movq	DP_TTable, %rsi
	movl	(%r11), %edi
	imulq	$20, %rdi, %rdi
	addq	%rdi, %rsi
	movl	%edx, 16(%rsi)
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movq	DP_TTable, %rcx
	movl	(%r11), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movb	%al, 1(%rcx)
	movl	(%r10), %eax
	movq	DP_TTable, %rcx
	movl	(%r11), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movb	%al, 2(%rcx)
	movw	$-5554, BasicBlockSignatureTracker # imm = 0xEA4E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB107_98
.LBB107_66:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$962, %ax               # imm = 0x3C2
	xorw	%cx, %ax
	cmpw	$-5542, %ax             # imm = 0xEA5A
	jne	.LBB107_100
# %bb.67:                               # %StoreTT.split261
	movl	(%r15), %eax
	movl	(%rbx), %ecx
	movw	$-5542, BasicBlockSignatureTracker # imm = 0xEA5A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB107_74
# %bb.68:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$-5516, %ax             # imm = 0xEA74
	jne	.LBB107_100
# %bb.69:                               # %StoreTT.split307
	movq	AS_TTable, %rax
	movl	(%r11), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	$1, 3(%rax)
	movl	(%r15), %eax
	movw	$-5516, BasicBlockSignatureTracker # imm = 0xEA74
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-999500, %eax          # imm = 0xFFF0BFB4
	jge	.LBB107_72
# %bb.70:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$255, %ax
	cmpw	$-5493, %ax             # imm = 0xEA8B
	jne	.LBB107_100
# %bb.71:                               # %StoreTT.split311
	movl	$-999500, (%r15)        # imm = 0xFFF0BFB4
	movw	$-5493, BasicBlockSignatureTracker # imm = 0xEA8B
	movw	$255, RunTimeSignatureAdjuster
.LBB107_72:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$229, %ax
	xorw	%cx, %ax
	cmpw	$-5487, %ax             # imm = 0xEA91
	jne	.LBB107_100
# %bb.73:                               # %StoreTT.split313
	movw	$-5487, BasicBlockSignatureTracker # imm = 0xEA91
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB107_96
.LBB107_74:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$201, %ax
	cmpw	$-5485, %ax             # imm = 0xEA93
	jne	.LBB107_100
# %bb.75:                               # %StoreTT.split309
	movl	(%r15), %eax
	movl	(%r13), %ecx
	movw	$-5485, BasicBlockSignatureTracker # imm = 0xEA93
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB107_82
# %bb.76:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-5482, %ax             # imm = 0xEA96
	jne	.LBB107_100
# %bb.77:                               # %StoreTT.split317
	movq	AS_TTable, %rax
	movl	(%r11), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	$2, 3(%rax)
	movl	(%r15), %eax
	movw	$-5482, BasicBlockSignatureTracker # imm = 0xEA96
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$999500, %eax           # imm = 0xF404C
	jle	.LBB107_80
# %bb.78:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-5477, %ax             # imm = 0xEA9B
	jne	.LBB107_100
# %bb.79:                               # %StoreTT.split321
	movl	$999500, (%r15)         # imm = 0xF404C
	movw	$-5477, BasicBlockSignatureTracker # imm = 0xEA9B
	movw	$13, RunTimeSignatureAdjuster
.LBB107_80:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$55, %ax
	xorw	%cx, %ax
	cmpw	$-5471, %ax             # imm = 0xEAA1
	jne	.LBB107_100
# %bb.81:                               # %StoreTT.split323
	movw	$-5471, BasicBlockSignatureTracker # imm = 0xEAA1
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB107_94
.LBB107_82:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-5463, %ax             # imm = 0xEAA9
	jne	.LBB107_100
# %bb.83:                               # %StoreTT.split319
	movq	AS_TTable, %rax
	movl	(%r11), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	$3, 3(%rax)
	movl	(%r15), %eax
	movw	$-5463, BasicBlockSignatureTracker # imm = 0xEAA9
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$999500, %eax           # imm = 0xF404C
	jle	.LBB107_86
# %bb.84:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-5461, %ax             # imm = 0xEAAB
	jne	.LBB107_100
# %bb.85:                               # %StoreTT.split327
	movl	ply, %eax
	addl	(%r15), %eax
	movl	%eax, (%r15)
	movw	$-5461, BasicBlockSignatureTracker # imm = 0xEAAB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB107_92
.LBB107_86:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-5460, %ax             # imm = 0xEAAC
	jne	.LBB107_100
# %bb.87:                               # %StoreTT.split329
	movl	(%r15), %eax
	movw	$-5460, BasicBlockSignatureTracker # imm = 0xEAAC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-999500, %eax          # imm = 0xFFF0BFB4
	jge	.LBB107_90
# %bb.88:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-5444, %ax             # imm = 0xEABC
	jne	.LBB107_100
# %bb.89:                               # %StoreTT.split333
	movl	ply, %eax
	movl	(%r15), %ecx
	subl	%eax, %ecx
	movl	%ecx, (%r15)
	movw	$-5444, BasicBlockSignatureTracker # imm = 0xEABC
	movw	$16, RunTimeSignatureAdjuster
.LBB107_90:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$104, %ax
	xorw	%cx, %ax
	cmpw	$-5436, %ax             # imm = 0xEAC4
	jne	.LBB107_100
# %bb.91:                               # %StoreTT.split335
	movw	$-5436, BasicBlockSignatureTracker # imm = 0xEAC4
	movw	$111, RunTimeSignatureAdjuster
.LBB107_92:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$123, %ax
	xorw	%cx, %ax
	cmpw	$-5424, %ax             # imm = 0xEAD0
	jne	.LBB107_100
# %bb.93:                               # %StoreTT.split331
	movw	$-5424, BasicBlockSignatureTracker # imm = 0xEAD0
	movw	$113, RunTimeSignatureAdjuster
.LBB107_94:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$66, %ax
	xorw	%cx, %ax
	cmpw	$-5405, %ax             # imm = 0xEAE3
	jne	.LBB107_100
# %bb.95:                               # %StoreTT.split325
	movw	$-5405, BasicBlockSignatureTracker # imm = 0xEAE3
	movw	$114, RunTimeSignatureAdjuster
.LBB107_96:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$119, %ax
	xorw	%cx, %ax
	cmpw	$-5402, %ax             # imm = 0xEAE6
	jne	.LBB107_100
# %bb.97:                               # %StoreTT.split315
	movl	$1, %eax
	xorl	%ecx, %ecx
	movl	hash, %edx
	movq	AS_TTable, %rsi
	movl	(%r11), %edi
	imulq	$20, %rdi, %rdi
	addq	%rdi, %rsi
	movl	%edx, 8(%rsi)
	movl	hold_hash, %edx
	movq	AS_TTable, %rsi
	movl	(%r11), %edi
	imulq	$20, %rdi, %rdi
	addq	%rdi, %rsi
	movl	%edx, 12(%rsi)
	movl	(%r12), %edx
	movq	AS_TTable, %rsi
	movl	(%r11), %edi
	imulq	$20, %rdi, %rdi
	addq	%rdi, %rsi
	movb	%dl, (%rsi)
	movl	(%r14), %edx
	movq	AS_TTable, %rsi
	movl	(%r11), %edi
	imulq	$20, %rdi, %rdi
	addq	%rdi, %rsi
	movw	%dx, 4(%rsi)
	movl	(%r15), %edx
	movq	AS_TTable, %rsi
	movl	(%r11), %edi
	imulq	$20, %rdi, %rdi
	addq	%rdi, %rsi
	movl	%edx, 16(%rsi)
	movl	white_to_move, %edx
	cmpl	$0, %edx
	cmovnel	%ecx, %eax
	movq	AS_TTable, %rcx
	movl	(%r11), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movb	%al, 1(%rcx)
	movl	(%r10), %eax
	movq	AS_TTable, %rcx
	movl	(%r11), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movb	%al, 2(%rcx)
	movw	$-5402, BasicBlockSignatureTracker # imm = 0xEAE6
	movw	$168, RunTimeSignatureAdjuster
.LBB107_98:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$169, %ax
	xorw	%cx, %ax
	cmpw	$-5401, %ax             # imm = 0xEAE7
	jne	.LBB107_100
# %bb.99:                               # %StoreTT.split305
	movw	$-5401, BasicBlockSignatureTracker # imm = 0xEAE7
	movw	$32021, RunTimeSignatureAdjuster # imm = 0x7D15
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB107_100:                            # %CFerrorHandler.StoreTT
	callq	FAULT_DETECTED_CFC
.Lfunc_end107:
	.size	StoreTT, .Lfunc_end107-StoreTT
	.cfi_endproc
                                        # -- End function
	.globl	LearnStoreTT            # -- Begin function LearnStoreTT
	.p2align	4, 0x90
	.type	LearnStoreTT,@function
LearnStoreTT:                           # @LearnStoreTT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movl	%edi, -28(%rbp)
	movl	%esi, -8(%rbp)
	movl	%edx, -24(%rbp)
	movl	%ecx, -20(%rbp)
	movl	%r8d, -16(%rbp)
	movl	%r9d, -12(%rbp)
	movl	-8(%rbp), %eax
	xorl	%edx, %edx
	divl	TTSize
	movl	%edx, -4(%rbp)
	movl	-12(%rbp), %eax
	movq	AS_TTable, %rcx
	movl	-4(%rbp), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movb	%al, (%rcx)
	movl	Variant, %eax
	movw	$-5394, BasicBlockSignatureTracker # imm = 0xEAEE
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB108_7
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-5378, %ax             # imm = 0xEAFE
	jne	.LBB108_11
# %bb.2:                                # %LearnStoreTT.split
	movl	Variant, %eax
	movw	$-5378, BasicBlockSignatureTracker # imm = 0xEAFE
	movw	$16, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB108_7
# %bb.3:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29890, %ax            # imm = 0x8B3E
	cmpw	$25024, %ax             # imm = 0x61C0
	jne	.LBB108_11
# %bb.4:                                # %LearnStoreTT.split21
	movw	$25024, BasicBlockSignatureTracker # imm = 0x61C0
	movw	$-29890, RunTimeSignatureAdjuster # imm = 0x8B3E
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$492, %ax               # imm = 0x1EC
	xorw	%cx, %ax
	cmpw	$-5358, %ax             # imm = 0xEB12
	jne	.LBB108_11
# %bb.6:                                # %LearnStoreTT.split25
	movq	AS_TTable, %rax
	movl	-4(%rbp), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	$3, 3(%rax)
	movw	$-5358, BasicBlockSignatureTracker # imm = 0xEB12
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB108_9
.LBB108_7:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$500, %ax               # imm = 0x1F4
	xorw	%cx, %ax
	cmpw	$-5350, %ax             # imm = 0xEB1A
	jne	.LBB108_11
# %bb.8:                                # %LearnStoreTT.split19
	movq	AS_TTable, %rax
	movl	-4(%rbp), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	$1, 3(%rax)
	movw	$-5350, BasicBlockSignatureTracker # imm = 0xEB1A
	movw	$8, RunTimeSignatureAdjuster
.LBB108_9:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-5347, %ax             # imm = 0xEB1D
	jne	.LBB108_11
# %bb.10:                               # %LearnStoreTT.split23
	movl	-8(%rbp), %eax
	movq	AS_TTable, %rcx
	movl	-4(%rbp), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movl	%eax, 8(%rcx)
	movl	-24(%rbp), %eax
	movq	AS_TTable, %rcx
	movl	-4(%rbp), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movl	%eax, 12(%rcx)
	movl	-16(%rbp), %eax
	movq	AS_TTable, %rcx
	movl	-4(%rbp), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movw	%ax, 4(%rcx)
	movl	-28(%rbp), %eax
	movq	AS_TTable, %rcx
	movl	-4(%rbp), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movl	%eax, 16(%rcx)
	movl	-20(%rbp), %eax
	movq	AS_TTable, %rcx
	movl	-4(%rbp), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movb	%al, 1(%rcx)
	movq	AS_TTable, %rax
	movl	-4(%rbp), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	$0, 2(%rax)
	movw	$-5347, BasicBlockSignatureTracker # imm = 0xEB1D
	movw	$0, RunTimeSignatureAdjuster
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB108_11:                             # %CFerrorHandler.LearnStoreTT
	callq	FAULT_DETECTED_CFC
.Lfunc_end108:
	.size	LearnStoreTT, .Lfunc_end108-LearnStoreTT
	.cfi_endproc
                                        # -- End function
	.globl	ProbeTT                 # -- Begin function ProbeTT
	.p2align	4, 0x90
	.type	ProbeTT,@function
ProbeTT:                                # @ProbeTT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$23219, %ax             # imm = 0x5AB3
	xorw	%bx, %ax
	cmpw	$-5327, %ax             # imm = 0xEB31
	jne	.LBB109_89
# %bb.1:                                # %ProbeTT.split252
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$23219, %ax             # imm = 0x5AB3
	xorw	%bx, %ax
	cmpw	$-5327, %ax             # imm = 0xEB31
	jne	.LBB109_89
# %bb.2:                                # %ProbeTT.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rdi, (%r15)
	movl	%esi, (%r10)
	movq	%rdx, (%r14)
	movq	%rcx, (%r11)
	movq	%r8, (%rbx)
	movl	%r9d, (%r13)
	movq	(%rbx), %rax
	movl	$1, (%rax)
	movl	TTProbes, %eax
	addl	$1, %eax
	movl	%eax, TTProbes
	movl	hash, %eax
	xorl	%edx, %edx
	divl	TTSize
	movl	%edx, (%r12)
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movl	8(%rax), %eax
	movl	hash, %ecx
	movw	$-5327, BasicBlockSignatureTracker # imm = 0xEB31
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB109_43
# %bb.3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-5321, %ax             # imm = 0xEB37
	jne	.LBB109_89
# %bb.4:                                # %ProbeTT.split182
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movl	12(%rax), %eax
	movl	hold_hash, %ecx
	movw	$-5321, BasicBlockSignatureTracker # imm = 0xEB37
	movw	$6, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB109_43
# %bb.5:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$19735, %ax             # imm = 0x4D17
	cmpw	$-23008, %ax            # imm = 0xA620
	jne	.LBB109_89
# %bb.6:                                # %ProbeTT.split186
	movw	$-23008, BasicBlockSignatureTracker # imm = 0xA620
	movw	$19735, RunTimeSignatureAdjuster # imm = 0x4D17
# %bb.7:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10, %ax
	xorw	%cx, %ax
	cmpw	$-5315, %ax             # imm = 0xEB3D
	jne	.LBB109_89
# %bb.8:                                # %ProbeTT.split254
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	DP_TTable, %rdx
	movl	(%r12), %esi
	imulq	$20, %rsi, %rsi
	addq	%rsi, %rdx
	movsbl	1(%rdx), %edx
	movl	white_to_move, %esi
	cmpl	$0, %esi
	cmovnel	%ecx, %eax
	movsbl	%al, %eax
	movw	$-5315, BasicBlockSignatureTracker # imm = 0xEB3D
	movw	$12, RunTimeSignatureAdjuster
	cmpl	%eax, %edx
	jne	.LBB109_43
# %bb.9:                                # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27135, %ax             # imm = 0x69FF
	cmpw	$-32062, %ax            # imm = 0x82C2
	jne	.LBB109_89
# %bb.10:                               # %ProbeTT.split188
	movw	$-32062, BasicBlockSignatureTracker # imm = 0x82C2
	movw	$27135, RunTimeSignatureAdjuster # imm = 0x69FF
# %bb.11:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$106, %ax
	xorw	%cx, %ax
	cmpw	$-5289, %ax             # imm = 0xEB57
	jne	.LBB109_89
# %bb.12:                               # %ProbeTT.split256
	movl	TTHits, %eax
	addl	$1, %eax
	movl	%eax, TTHits
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	3(%rax), %eax
	movw	$-5289, BasicBlockSignatureTracker # imm = 0xEB57
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB109_23
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-5287, %ax             # imm = 0xEB59
	jne	.LBB109_89
# %bb.14:                               # %ProbeTT.split190
	movl	(%r13), %eax
	subl	$2, %eax
	subl	$1, %eax
	movq	DP_TTable, %rcx
	movl	(%r12), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movsbl	(%rcx), %ecx
	movw	$-5287, BasicBlockSignatureTracker # imm = 0xEB59
	movw	$14, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB109_23
# %bb.15:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29946, %ax            # imm = 0x8B06
	cmpw	$24671, %ax             # imm = 0x605F
	jne	.LBB109_89
# %bb.16:                               # %ProbeTT.split194
	movw	$24671, BasicBlockSignatureTracker # imm = 0x605F
	movw	$-29946, RunTimeSignatureAdjuster # imm = 0x8B06
# %bb.17:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$-5274, %ax             # imm = 0xEB66
	jne	.LBB109_89
# %bb.18:                               # %ProbeTT.split258
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movl	16(%rax), %eax
	movl	(%r10), %ecx
	movw	$-5274, BasicBlockSignatureTracker # imm = 0xEB66
	movw	$49, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB109_23
# %bb.19:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16615, %ax             # imm = 0x40E7
	cmpw	$-21631, %ax            # imm = 0xAB81
	jne	.LBB109_89
# %bb.20:                               # %ProbeTT.split196
	movw	$-21631, BasicBlockSignatureTracker # imm = 0xAB81
	movw	$16615, RunTimeSignatureAdjuster # imm = 0x40E7
# %bb.21:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-5270, %ax             # imm = 0xEB6A
	jne	.LBB109_89
# %bb.22:                               # %ProbeTT.split260
	movq	(%rbx), %rax
	movl	$0, (%rax)
	movw	$-5270, BasicBlockSignatureTracker # imm = 0xEB6A
	movw	$61, RunTimeSignatureAdjuster
.LBB109_23:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$32, %ax
	xorw	%cx, %ax
	cmpw	$-5257, %ax             # imm = 0xEB77
	jne	.LBB109_89
# %bb.24:                               # %ProbeTT.split192
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	2(%rax), %al
	movw	$-5257, BasicBlockSignatureTracker # imm = 0xEB77
	movw	$0, RunTimeSignatureAdjuster
	cmpb	$0, %al
	je	.LBB109_27
# %bb.25:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-5255, %ax             # imm = 0xEB79
	jne	.LBB109_89
# %bb.26:                               # %ProbeTT.split198
	movl	(%r13), %eax
	addl	$1, %eax
	movl	%eax, (%r13)
	movw	$-5255, BasicBlockSignatureTracker # imm = 0xEB79
	movw	$14, RunTimeSignatureAdjuster
.LBB109_27:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$234, %ax
	xorw	%cx, %ax
	cmpw	$-5219, %ax             # imm = 0xEB9D
	jne	.LBB109_89
# %bb.28:                               # %ProbeTT.split200
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	(%rax), %eax
	movl	(%r13), %ecx
	movw	$-5219, BasicBlockSignatureTracker # imm = 0xEB9D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB109_41
# %bb.29:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-5209, %ax             # imm = 0xEBA7
	jne	.LBB109_89
# %bb.30:                               # %ProbeTT.split202
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movl	16(%rax), %eax
	movq	(%r15), %rcx
	movl	%eax, (%rcx)
	movq	(%r15), %rax
	movl	(%rax), %eax
	movw	$-5209, BasicBlockSignatureTracker # imm = 0xEBA7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$999500, %eax           # imm = 0xF404C
	jle	.LBB109_33
# %bb.31:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$123, %ax
	cmpw	$-5156, %ax             # imm = 0xEBDC
	jne	.LBB109_89
# %bb.32:                               # %ProbeTT.split206
	movl	ply, %eax
	movq	(%r15), %rcx
	movl	(%rcx), %edx
	subl	%eax, %edx
	movl	%edx, (%rcx)
	movw	$-5156, BasicBlockSignatureTracker # imm = 0xEBDC
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB109_39
.LBB109_33:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$64, %ax
	cmpw	$-5145, %ax             # imm = 0xEBE7
	jne	.LBB109_89
# %bb.34:                               # %ProbeTT.split208
	movq	(%r15), %rax
	movl	(%rax), %eax
	movw	$-5145, BasicBlockSignatureTracker # imm = 0xEBE7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-999500, %eax          # imm = 0xFFF0BFB4
	jge	.LBB109_37
# %bb.35:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-5141, %ax             # imm = 0xEBEB
	jne	.LBB109_89
# %bb.36:                               # %ProbeTT.split212
	movl	ply, %eax
	movq	(%r15), %rcx
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$-5141, BasicBlockSignatureTracker # imm = 0xEBEB
	movw	$12, RunTimeSignatureAdjuster
.LBB109_37:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$-5125, %ax             # imm = 0xEBFB
	jne	.LBB109_89
# %bb.38:                               # %ProbeTT.split214
	movw	$-5125, BasicBlockSignatureTracker # imm = 0xEBFB
	movw	$39, RunTimeSignatureAdjuster
.LBB109_39:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2014, %ax              # imm = 0x7DE
	xorw	%cx, %ax
	cmpw	$-5118, %ax             # imm = 0xEC02
	jne	.LBB109_89
# %bb.40:                               # %ProbeTT.split210
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movzwl	4(%rax), %eax
	movq	(%r14), %rcx
	movl	%eax, (%rcx)
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	2(%rax), %eax
	movq	(%r11), %rcx
	movl	%eax, (%rcx)
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	3(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-5118, BasicBlockSignatureTracker # imm = 0xEC02
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB109_87
.LBB109_41:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1942, %ax              # imm = 0x796
	cmpw	$-5109, %ax             # imm = 0xEC0B
	jne	.LBB109_89
# %bb.42:                               # %ProbeTT.split204
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movzwl	4(%rax), %eax
	movq	(%r14), %rcx
	movl	%eax, (%rcx)
	movq	DP_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	2(%rax), %eax
	movq	(%r11), %rcx
	movl	%eax, (%rcx)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-5109, BasicBlockSignatureTracker # imm = 0xEC0B
	movw	$9, RunTimeSignatureAdjuster
	jmp	.LBB109_87
.LBB109_43:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1833, %ax              # imm = 0x729
	xorw	%cx, %ax
	cmpw	$-5096, %ax             # imm = 0xEC18
	jne	.LBB109_89
# %bb.44:                               # %ProbeTT.split184
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movl	8(%rax), %eax
	movl	hash, %ecx
	movw	$-5096, BasicBlockSignatureTracker # imm = 0xEC18
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB109_85
# %bb.45:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-5073, %ax             # imm = 0xEC2F
	jne	.LBB109_89
# %bb.46:                               # %ProbeTT.split218
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movl	12(%rax), %eax
	movl	hold_hash, %ecx
	movw	$-5073, BasicBlockSignatureTracker # imm = 0xEC2F
	movw	$55, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB109_85
# %bb.47:                               # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22504, %ax            # imm = 0xA818
	cmpw	$17463, %ax             # imm = 0x4437
	jne	.LBB109_89
# %bb.48:                               # %ProbeTT.split222
	movw	$17463, BasicBlockSignatureTracker # imm = 0x4437
	movw	$-22504, RunTimeSignatureAdjuster # imm = 0xA818
# %bb.49:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$-5070, %ax             # imm = 0xEC32
	jne	.LBB109_89
# %bb.50:                               # %ProbeTT.split262
	movl	$1, %eax
	xorl	%ecx, %ecx
	movq	AS_TTable, %rdx
	movl	(%r12), %esi
	imulq	$20, %rsi, %rsi
	addq	%rsi, %rdx
	movsbl	1(%rdx), %edx
	movl	white_to_move, %esi
	cmpl	$0, %esi
	cmovnel	%ecx, %eax
	movsbl	%al, %eax
	movw	$-5070, BasicBlockSignatureTracker # imm = 0xEC32
	movw	$42, RunTimeSignatureAdjuster
	cmpl	%eax, %edx
	jne	.LBB109_85
# %bb.51:                               # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-5185, %ax             # imm = 0xEBBF
	cmpw	$1933, %ax              # imm = 0x78D
	jne	.LBB109_89
# %bb.52:                               # %ProbeTT.split224
	movw	$1933, BasicBlockSignatureTracker # imm = 0x78D
	movw	$-5185, RunTimeSignatureAdjuster # imm = 0xEBBF
# %bb.53:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-5068, %ax             # imm = 0xEC34
	jne	.LBB109_89
# %bb.54:                               # %ProbeTT.split264
	movl	TTHits, %eax
	addl	$1, %eax
	movl	%eax, TTHits
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	3(%rax), %eax
	movw	$-5068, BasicBlockSignatureTracker # imm = 0xEC34
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB109_65
# %bb.55:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-5060, %ax             # imm = 0xEC3C
	jne	.LBB109_89
# %bb.56:                               # %ProbeTT.split226
	movl	(%r13), %eax
	subl	$2, %eax
	subl	$1, %eax
	movq	AS_TTable, %rcx
	movl	(%r12), %edx
	imulq	$20, %rdx, %rdx
	addq	%rdx, %rcx
	movsbl	(%rcx), %ecx
	movw	$-5060, BasicBlockSignatureTracker # imm = 0xEC3C
	movw	$8, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB109_65
# %bb.57:                               # %Buffer__6
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15100, %ax             # imm = 0x3AFC
	cmpw	$-10560, %ax            # imm = 0xD6C0
	jne	.LBB109_89
# %bb.58:                               # %ProbeTT.split230
	movw	$-10560, BasicBlockSignatureTracker # imm = 0xD6C0
	movw	$15100, RunTimeSignatureAdjuster # imm = 0x3AFC
# %bb.59:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$117, %ax
	xorw	%cx, %ax
	cmpw	$-5047, %ax             # imm = 0xEC49
	jne	.LBB109_89
# %bb.60:                               # %ProbeTT.split266
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movl	16(%rax), %eax
	movl	(%r10), %ecx
	movw	$-5047, BasicBlockSignatureTracker # imm = 0xEC49
	movw	$125, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB109_65
# %bb.61:                               # %Buffer__7
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22660, %ax             # imm = 0x5884
	cmpw	$-19251, %ax            # imm = 0xB4CD
	jne	.LBB109_89
# %bb.62:                               # %ProbeTT.split232
	movw	$-19251, BasicBlockSignatureTracker # imm = 0xB4CD
	movw	$22660, RunTimeSignatureAdjuster # imm = 0x5884
# %bb.63:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-5043, %ax             # imm = 0xEC4D
	jne	.LBB109_89
# %bb.64:                               # %ProbeTT.split268
	movq	(%rbx), %rax
	movl	$0, (%rax)
	movw	$-5043, BasicBlockSignatureTracker # imm = 0xEC4D
	movw	$121, RunTimeSignatureAdjuster
.LBB109_65:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$87, %ax
	xorw	%cx, %ax
	cmpw	$-5021, %ax             # imm = 0xEC63
	jne	.LBB109_89
# %bb.66:                               # %ProbeTT.split228
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movb	2(%rax), %al
	movw	$-5021, BasicBlockSignatureTracker # imm = 0xEC63
	movw	$0, RunTimeSignatureAdjuster
	cmpb	$0, %al
	je	.LBB109_69
# %bb.67:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-5018, %ax             # imm = 0xEC66
	jne	.LBB109_89
# %bb.68:                               # %ProbeTT.split234
	movl	(%r13), %eax
	addl	$1, %eax
	movl	%eax, (%r13)
	movw	$-5018, BasicBlockSignatureTracker # imm = 0xEC66
	movw	$5, RunTimeSignatureAdjuster
.LBB109_69:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-5014, %ax             # imm = 0xEC6A
	jne	.LBB109_89
# %bb.70:                               # %ProbeTT.split236
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	(%rax), %eax
	movl	(%r13), %ecx
	movw	$-5014, BasicBlockSignatureTracker # imm = 0xEC6A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jl	.LBB109_83
# %bb.71:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26, %ax
	cmpw	$-5008, %ax             # imm = 0xEC70
	jne	.LBB109_89
# %bb.72:                               # %ProbeTT.split238
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movl	16(%rax), %eax
	movq	(%r15), %rcx
	movl	%eax, (%rcx)
	movq	(%r15), %rax
	movl	(%rax), %eax
	movw	$-5008, BasicBlockSignatureTracker # imm = 0xEC70
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$999500, %eax           # imm = 0xF404C
	jle	.LBB109_75
# %bb.73:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$240, %ax
	cmpw	$-4992, %ax             # imm = 0xEC80
	jne	.LBB109_89
# %bb.74:                               # %ProbeTT.split242
	movl	ply, %eax
	movq	(%r15), %rcx
	movl	(%rcx), %edx
	subl	%eax, %edx
	movl	%edx, (%rcx)
	movw	$-4992, BasicBlockSignatureTracker # imm = 0xEC80
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB109_81
.LBB109_75:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$234, %ax
	cmpw	$-4966, %ax             # imm = 0xEC9A
	jne	.LBB109_89
# %bb.76:                               # %ProbeTT.split244
	movq	(%r15), %rax
	movl	(%rax), %eax
	movw	$-4966, BasicBlockSignatureTracker # imm = 0xEC9A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-999500, %eax          # imm = 0xFFF0BFB4
	jge	.LBB109_79
# %bb.77:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$61, %ax
	cmpw	$-4953, %ax             # imm = 0xECA7
	jne	.LBB109_89
# %bb.78:                               # %ProbeTT.split248
	movl	ply, %eax
	movq	(%r15), %rcx
	addl	(%rcx), %eax
	movl	%eax, (%rcx)
	movw	$-4953, BasicBlockSignatureTracker # imm = 0xECA7
	movw	$61, RunTimeSignatureAdjuster
.LBB109_79:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$54, %ax
	xorw	%cx, %ax
	cmpw	$-4948, %ax             # imm = 0xECAC
	jne	.LBB109_89
# %bb.80:                               # %ProbeTT.split250
	movw	$-4948, BasicBlockSignatureTracker # imm = 0xECAC
	movw	$44, RunTimeSignatureAdjuster
.LBB109_81:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$50, %ax
	xorw	%cx, %ax
	cmpw	$-4942, %ax             # imm = 0xECB2
	jne	.LBB109_89
# %bb.82:                               # %ProbeTT.split246
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movzwl	4(%rax), %eax
	movq	(%r14), %rcx
	movl	%eax, (%rcx)
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	2(%rax), %eax
	movq	(%r11), %rcx
	movl	%eax, (%rcx)
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	3(%rax), %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-4942, BasicBlockSignatureTracker # imm = 0xECB2
	movw	$176, RunTimeSignatureAdjuster
	jmp	.LBB109_87
.LBB109_83:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$171, %ax
	cmpw	$-4927, %ax             # imm = 0xECC1
	jne	.LBB109_89
# %bb.84:                               # %ProbeTT.split240
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movzwl	4(%rax), %eax
	movq	(%r14), %rcx
	movl	%eax, (%rcx)
	movq	AS_TTable, %rax
	movl	(%r12), %ecx
	imulq	$20, %rcx, %rcx
	addq	%rcx, %rax
	movsbl	2(%rax), %eax
	movq	(%r11), %rcx
	movl	%eax, (%rcx)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-4927, BasicBlockSignatureTracker # imm = 0xECC1
	movw	$195, RunTimeSignatureAdjuster
	jmp	.LBB109_87
.LBB109_85:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$210, %ax
	xorw	%cx, %ax
	cmpw	$-4918, %ax             # imm = 0xECCA
	jne	.LBB109_89
# %bb.86:                               # %ProbeTT.split220
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$4, (%rax)
	movw	$-4918, BasicBlockSignatureTracker # imm = 0xECCA
	movw	$200, RunTimeSignatureAdjuster
.LBB109_87:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$205, %ax
	xorw	%cx, %ax
	cmpw	$-4913, %ax             # imm = 0xECCF
	jne	.LBB109_89
# %bb.88:                               # %ProbeTT.split216
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-4913, BasicBlockSignatureTracker # imm = 0xECCF
	movw	$23598, RunTimeSignatureAdjuster # imm = 0x5C2E
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB109_89:                             # %CFerrorHandler.ProbeTT
	callq	FAULT_DETECTED_CFC
.Lfunc_end109:
	.size	ProbeTT, .Lfunc_end109-ProbeTT
	.cfi_endproc
                                        # -- End function
	.globl	QProbeTT                # -- Begin function QProbeTT
	.p2align	4, 0x90
	.type	QProbeTT,@function
QProbeTT:                               # @QProbeTT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16472, %ax             # imm = 0x4058
	xorw	%cx, %ax
	cmpw	$-4881, %ax             # imm = 0xECEF
	jne	.LBB110_16
# %bb.1:                                # %QProbeTT.split
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rdi, (%r10)
	movq	%rsi, (%r9)
	movl	TTProbes, %eax
	addl	$1, %eax
	movl	%eax, TTProbes
	movl	hash, %eax
	xorl	%edx, %edx
	divl	TTSize
	movl	%edx, (%rcx)
	movq	QS_TTable, %rax
	movl	(%rcx), %edx
	shlq	$4, %rdx
	addq	%rdx, %rax
	movl	4(%rax), %eax
	movl	hash, %edx
	movw	$-4881, BasicBlockSignatureTracker # imm = 0xECEF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %eax
	jne	.LBB110_12
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$482, %ax               # imm = 0x1E2
	cmpw	$-4851, %ax             # imm = 0xED0D
	jne	.LBB110_16
# %bb.3:                                # %QProbeTT.split33
	movq	QS_TTable, %rax
	movl	(%rcx), %edx
	shlq	$4, %rdx
	addq	%rdx, %rax
	movl	8(%rax), %eax
	movl	hold_hash, %edx
	movw	$-4851, BasicBlockSignatureTracker # imm = 0xED0D
	movw	$482, RunTimeSignatureAdjuster # imm = 0x1E2
	cmpl	%edx, %eax
	jne	.LBB110_12
# %bb.4:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$25874, %ax             # imm = 0x6512
	cmpw	$-30689, %ax            # imm = 0x881F
	jne	.LBB110_16
# %bb.5:                                # %QProbeTT.split37
	movw	$-30689, BasicBlockSignatureTracker # imm = 0x881F
	movw	$25874, RunTimeSignatureAdjuster # imm = 0x6512
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$28, %ax
	xorw	%dx, %ax
	cmpw	$-4847, %ax             # imm = 0xED11
	jne	.LBB110_16
# %bb.7:                                # %QProbeTT.split43
	movl	$1, %eax
	xorl	%edx, %edx
	movq	QS_TTable, %rsi
	movl	(%rcx), %edi
	shlq	$4, %rdi
	addq	%rdi, %rsi
	movsbl	(%rsi), %esi
	movl	white_to_move, %edi
	cmpl	$0, %edi
	cmovnel	%edx, %eax
	movsbl	%al, %eax
	movw	$-4847, BasicBlockSignatureTracker # imm = 0xED11
	movw	$510, RunTimeSignatureAdjuster # imm = 0x1FE
	cmpl	%eax, %esi
	jne	.LBB110_12
# %bb.8:                                # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$26145, %ax             # imm = 0x6621
	cmpw	$-29904, %ax            # imm = 0x8B30
	jne	.LBB110_16
# %bb.9:                                # %QProbeTT.split39
	movw	$-29904, BasicBlockSignatureTracker # imm = 0x8B30
	movw	$26145, RunTimeSignatureAdjuster # imm = 0x6621
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$13, %ax
	xorw	%dx, %ax
	cmpw	$-4836, %ax             # imm = 0xED1C
	jne	.LBB110_16
# %bb.11:                               # %QProbeTT.split45
	movl	TTHits, %eax
	addl	$1, %eax
	movl	%eax, TTHits
	movq	QS_TTable, %rax
	movl	(%rcx), %edx
	shlq	$4, %rdx
	addq	%rdx, %rax
	movl	12(%rax), %eax
	movq	(%r10), %rdx
	movl	%eax, (%rdx)
	movq	QS_TTable, %rax
	movl	(%rcx), %edx
	shlq	$4, %rdx
	addq	%rdx, %rax
	movzwl	2(%rax), %eax
	movq	(%r9), %rdx
	movl	%eax, (%rdx)
	movq	QS_TTable, %rax
	movl	(%rcx), %ecx
	shlq	$4, %rcx
	addq	%rcx, %rax
	movsbl	1(%rax), %eax
	movl	%eax, (%r8)
	movw	$-4836, BasicBlockSignatureTracker # imm = 0xED1C
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB110_14
.LBB110_12:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$498, %ax               # imm = 0x1F2
	xorw	%cx, %ax
	cmpw	$-4835, %ax             # imm = 0xED1D
	jne	.LBB110_16
# %bb.13:                               # %QProbeTT.split35
	movl	$4, (%r8)
	movw	$-4835, BasicBlockSignatureTracker # imm = 0xED1D
	movw	$1, RunTimeSignatureAdjuster
.LBB110_14:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-4833, %ax             # imm = 0xED1F
	jne	.LBB110_16
# %bb.15:                               # %QProbeTT.split41
	movl	(%r8), %eax
	movw	$-4833, BasicBlockSignatureTracker # imm = 0xED1F
	movw	$16816, RunTimeSignatureAdjuster # imm = 0x41B0
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB110_16:                             # %CFerrorHandler.QProbeTT
	callq	FAULT_DETECTED_CFC
.Lfunc_end110:
	.size	QProbeTT, .Lfunc_end110-QProbeTT
	.cfi_endproc
                                        # -- End function
	.globl	alloc_hash              # -- Begin function alloc_hash
	.p2align	4, 0x90
	.type	alloc_hash,@function
alloc_hash:                             # @alloc_hash
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19381, %ax             # imm = 0x4BB5
	xorw	%cx, %ax
	cmpw	$-4821, %ax             # imm = 0xED2B
	jne	.LBB111_14
# %bb.1:                                # %alloc_hash.split
	movslq	TTSize, %rax
	imulq	$20, %rax, %rdi
	callq	malloc
	movq	%rax, AS_TTable
	movslq	TTSize, %rax
	imulq	$20, %rax, %rdi
	callq	malloc
	movq	%rax, DP_TTable
	movslq	TTSize, %rdi
	shlq	$4, %rdi
	callq	malloc
	movq	%rax, QS_TTable
	movq	AS_TTable, %rax
	movw	$-4821, BasicBlockSignatureTracker # imm = 0xED2B
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB111_8
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-4804, %ax             # imm = 0xED3C
	jne	.LBB111_14
# %bb.3:                                # %alloc_hash.split30
	movq	DP_TTable, %rax
	movw	$-4804, BasicBlockSignatureTracker # imm = 0xED3C
	movw	$23, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	je	.LBB111_8
# %bb.4:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-2914, %ax             # imm = 0xF49E
	cmpw	$6562, %ax              # imm = 0x19A2
	jne	.LBB111_14
# %bb.5:                                # %alloc_hash.split32
	movw	$6562, BasicBlockSignatureTracker # imm = 0x19A2
	movw	$-2914, RunTimeSignatureAdjuster # imm = 0xF49E
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-4803, %ax             # imm = 0xED3D
	jne	.LBB111_14
# %bb.7:                                # %alloc_hash.split36
	movq	QS_TTable, %rax
	movw	$-4803, BasicBlockSignatureTracker # imm = 0xED3D
	movw	$22, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB111_10
.LBB111_8:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$103, %ax
	xorw	%cx, %ax
	cmpw	$-4788, %ax             # imm = 0xED4C
	jne	.LBB111_14
# %bb.9:                                # %alloc_hash.split28
	movabsq	$.L.str.392, %rdi
	movb	$0, %al
	callq	printf
	movl	$1, %edi
	callq	exit
	movw	$-4788, BasicBlockSignatureTracker # imm = 0xED4C
	movw	$0, RunTimeSignatureAdjuster
.LBB111_10:                             # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$17923, %ax             # imm = 0x4603
	cmpw	$-21698, %ax            # imm = 0xAB3E
	jne	.LBB111_14
# %bb.11:                               # %alloc_hash.split34
	movw	$-21698, BasicBlockSignatureTracker # imm = 0xAB3E
	movw	$17923, RunTimeSignatureAdjuster # imm = 0x4603
# %bb.12:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$112, %ax
	xorw	%cx, %ax
	cmpw	$-4787, %ax             # imm = 0xED4D
	jne	.LBB111_14
# %bb.13:                               # %alloc_hash.split38
	movw	$-4787, BasicBlockSignatureTracker # imm = 0xED4D
	movw	$-1470, RunTimeSignatureAdjuster # imm = 0xFA42
	popq	%rbp
	retq
.LBB111_14:                             # %CFerrorHandler.alloc_hash
	callq	FAULT_DETECTED_CFC
.Lfunc_end111:
	.size	alloc_hash, .Lfunc_end111-alloc_hash
	.cfi_endproc
                                        # -- End function
	.globl	free_hash               # -- Begin function free_hash
	.p2align	4, 0x90
	.type	free_hash,@function
free_hash:                              # @free_hash
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13112, %ax             # imm = 0x3338
	xorw	%cx, %ax
	cmpw	$-4780, %ax             # imm = 0xED54
	jne	.LBB112_3
# %bb.1:                                # %free_hash.split8
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13112, %ax             # imm = 0x3338
	xorw	%cx, %ax
	cmpw	$-4780, %ax             # imm = 0xED54
	jne	.LBB112_3
# %bb.2:                                # %free_hash.split
	movq	AS_TTable, %rdi
	callq	free
	movq	DP_TTable, %rdi
	callq	free
	movq	QS_TTable, %rdi
	callq	free
	movw	$-4780, BasicBlockSignatureTracker # imm = 0xED54
	movw	$13111, RunTimeSignatureAdjuster # imm = 0x3337
	popq	%rbp
	retq
.LBB112_3:                              # %CFerrorHandler.free_hash
	callq	FAULT_DETECTED_CFC
.Lfunc_end112:
	.size	free_hash, .Lfunc_end112-free_hash
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function allocate_time
.LCPI113_0:
	.quad	4626322717216342016     # double 20
.LCPI113_1:
	.quad	4617315517961601024     # double 5
.LCPI113_2:
	.quad	4616189618054758400     # double 4
.LCPI113_3:
	.quad	4621819117588971520     # double 10
.LCPI113_4:
	.quad	4627730092099895296     # double 25
.LCPI113_5:
	.quad	4629137466983448576     # double 30
.LCPI113_6:
	.quad	4630826316843712512     # double 40
.LCPI113_7:
	.quad	4647503709213818880     # double 500
.LCPI113_8:
	.quad	4636737291354636288     # double 100
.LCPI113_9:
	.quad	4613937818241073152     # double 3
.LCPI113_10:
	.quad	4611686018427387904     # double 2
.LCPI113_11:
	.quad	4663319084467748864     # double 6000
.LCPI113_12:
	.quad	4611911198408756429     # double 2.1000000000000001
.LCPI113_13:
	.quad	4598175219545276416     # double 0.25
.LCPI113_14:
	.quad	4602678819172646912     # double 0.5
	.text
	.globl	allocate_time
	.p2align	4, 0x90
	.type	allocate_time,@function
allocate_time:                          # @allocate_time
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16686, %ax             # imm = 0x412E
	xorw	%cx, %ax
	cmpw	$-4775, %ax             # imm = 0xED59
	jne	.LBB113_119
# %bb.1:                                # %allocate_time.split259
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16686, %ax             # imm = 0x412E
	xorw	%cx, %ax
	cmpw	$-4775, %ax             # imm = 0xED59
	jne	.LBB113_119
# %bb.2:                                # %allocate_time.split257
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16686, %ax             # imm = 0x412E
	xorw	%cx, %ax
	cmpw	$-4775, %ax             # imm = 0xED59
	jne	.LBB113_119
# %bb.3:                                # %allocate_time.split255
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16686, %ax             # imm = 0x412E
	xorw	%cx, %ax
	cmpw	$-4775, %ax             # imm = 0xED59
	jne	.LBB113_119
# %bb.4:                                # %allocate_time.split
	movsd	.LCPI113_0(%rip), %xmm0 # xmm0 = mem[0],zero
	xorps	%xmm1, %xmm1
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movsd	%xmm1, (%rax)
	movsd	%xmm0, (%rcx)
	movl	moves_to_tc, %edx
	movw	$-4775, BasicBlockSignatureTracker # imm = 0xED59
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	jne	.LBB113_99
# %bb.5:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$4, %dx
	cmpw	$-4771, %dx             # imm = 0xED5D
	jne	.LBB113_119
# %bb.6:                                # %allocate_time.split263
	movl	min_per_game, %edx
	movw	$-4771, BasicBlockSignatureTracker # imm = 0xED5D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$6, %edx
	jge	.LBB113_9
# %bb.7:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$61, %dx
	cmpw	$-4768, %dx             # imm = 0xED60
	jne	.LBB113_119
# %bb.8:                                # %allocate_time.split265
	movl	inc, %edx
	movw	$-4768, BasicBlockSignatureTracker # imm = 0xED60
	movw	$61, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB113_11
.LBB113_9:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$49, %dx
	xorw	%si, %dx
	cmpw	$-4756, %dx             # imm = 0xED6C
	jne	.LBB113_119
# %bb.10:                               # %allocate_time.split267
	movsd	.LCPI113_1(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI113_2(%rip), %xmm1 # xmm1 = mem[0],zero
	movl	time_left, %edx
	cvtsi2sdl	%edx, %xmm2
	imull	$6000, min_per_game, %edx # imm = 0x1770
	imull	$100, sec_per_game, %esi
	addl	%esi, %edx
	cvtsi2sdl	%edx, %xmm3
	mulsd	%xmm1, %xmm3
	divsd	%xmm0, %xmm3
	movw	$-4756, BasicBlockSignatureTracker # imm = 0xED6C
	movw	$12, RunTimeSignatureAdjuster
	ucomisd	%xmm2, %xmm3
	ja	.LBB113_13
	jmp	.LBB113_43
.LBB113_11:                             # %Buffer__
	movw	BasicBlockSignatureTracker, %dx
	xorw	$-25086, %dx            # imm = 0x9E02
	cmpw	$29538, %dx             # imm = 0x7362
	jne	.LBB113_119
# %bb.12:                               # %allocate_time.split269
	movw	$29538, BasicBlockSignatureTracker # imm = 0x7362
	movw	$-25086, RunTimeSignatureAdjuster # imm = 0x9E02
.LBB113_13:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$24, %dx
	xorw	%si, %dx
	cmpw	$-4744, %dx             # imm = 0xED78
	jne	.LBB113_119
# %bb.14:                               # %allocate_time.split271
	movsd	.LCPI113_1(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	opp_time, %edx
	subl	time_left, %edx
	cvtsi2sdl	%edx, %xmm1
	movl	opp_time, %edx
	cvtsi2sdl	%edx, %xmm2
	divsd	%xmm0, %xmm2
	movw	$-4744, BasicBlockSignatureTracker # imm = 0xED78
	movw	$0, RunTimeSignatureAdjuster
	ucomisd	%xmm2, %xmm1
	jbe	.LBB113_21
# %bb.15:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$251, %dx
	cmpw	$-4733, %dx             # imm = 0xED83
	jne	.LBB113_119
# %bb.16:                               # %allocate_time.split275
	movl	xb_mode, %edx
	movw	$-4733, BasicBlockSignatureTracker # imm = 0xED83
	movw	$251, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB113_21
# %bb.17:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %dx
	xorw	$-20002, %dx            # imm = 0xB1DE
	cmpw	$23645, %dx             # imm = 0x5C5D
	jne	.LBB113_119
# %bb.18:                               # %allocate_time.split279
	movw	$23645, BasicBlockSignatureTracker # imm = 0x5C5D
	movw	$-20002, RunTimeSignatureAdjuster # imm = 0xB1DE
# %bb.19:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$9, %dx
	xorw	%si, %dx
	cmpw	$-4726, %dx             # imm = 0xED8A
	jne	.LBB113_119
# %bb.20:                               # %allocate_time.split363
	movsd	.LCPI113_6(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, (%rcx)
	movw	$-4726, BasicBlockSignatureTracker # imm = 0xED8A
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB113_41
.LBB113_21:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$232, %dx
	xorw	%si, %dx
	cmpw	$-4720, %dx             # imm = 0xED90
	jne	.LBB113_119
# %bb.22:                               # %allocate_time.split277
	movsd	.LCPI113_3(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	opp_time, %edx
	subl	time_left, %edx
	cvtsi2sdl	%edx, %xmm1
	movl	opp_time, %edx
	cvtsi2sdl	%edx, %xmm2
	divsd	%xmm0, %xmm2
	movw	$-4720, BasicBlockSignatureTracker # imm = 0xED90
	movw	$0, RunTimeSignatureAdjuster
	ucomisd	%xmm2, %xmm1
	jbe	.LBB113_29
# %bb.23:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$2, %dx
	cmpw	$-4718, %dx             # imm = 0xED92
	jne	.LBB113_119
# %bb.24:                               # %allocate_time.split283
	movl	xb_mode, %edx
	movw	$-4718, BasicBlockSignatureTracker # imm = 0xED92
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB113_29
# %bb.25:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %dx
	xorw	$-22844, %dx            # imm = 0xA6C4
	cmpw	$19286, %dx             # imm = 0x4B56
	jne	.LBB113_119
# %bb.26:                               # %allocate_time.split287
	movw	$19286, BasicBlockSignatureTracker # imm = 0x4B56
	movw	$-22844, RunTimeSignatureAdjuster # imm = 0xA6C4
# %bb.27:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$15, %dx
	xorw	%si, %dx
	cmpw	$-4707, %dx             # imm = 0xED9D
	jne	.LBB113_119
# %bb.28:                               # %allocate_time.split365
	movsd	.LCPI113_5(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, (%rcx)
	movw	$-4707, BasicBlockSignatureTracker # imm = 0xED9D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB113_39
.LBB113_29:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$59, %dx
	xorw	%si, %dx
	cmpw	$-4693, %dx             # imm = 0xEDAB
	jne	.LBB113_119
# %bb.30:                               # %allocate_time.split285
	movsd	.LCPI113_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	opp_time, %edx
	subl	time_left, %edx
	cvtsi2sdl	%edx, %xmm1
	movl	opp_time, %edx
	cvtsi2sdl	%edx, %xmm2
	divsd	%xmm0, %xmm2
	movw	$-4693, BasicBlockSignatureTracker # imm = 0xEDAB
	movw	$0, RunTimeSignatureAdjuster
	ucomisd	%xmm2, %xmm1
	jbe	.LBB113_37
# %bb.31:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$5, %dx
	cmpw	$-4690, %dx             # imm = 0xEDAE
	jne	.LBB113_119
# %bb.32:                               # %allocate_time.split291
	movl	xb_mode, %edx
	movw	$-4690, BasicBlockSignatureTracker # imm = 0xEDAE
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB113_37
# %bb.33:                               # %Buffer__4
	movw	BasicBlockSignatureTracker, %dx
	xorw	$12661, %dx             # imm = 0x3175
	cmpw	$-8997, %dx             # imm = 0xDCDB
	jne	.LBB113_119
# %bb.34:                               # %allocate_time.split295
	movw	$-8997, BasicBlockSignatureTracker # imm = 0xDCDB
	movw	$12661, RunTimeSignatureAdjuster # imm = 0x3175
# %bb.35:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$1, %dx
	xorw	%si, %dx
	cmpw	$-4689, %dx             # imm = 0xEDAF
	jne	.LBB113_119
# %bb.36:                               # %allocate_time.split367
	movsd	.LCPI113_4(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	%xmm0, (%rcx)
	movw	$-4689, BasicBlockSignatureTracker # imm = 0xEDAF
	movw	$4, RunTimeSignatureAdjuster
.LBB113_37:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$27, %dx
	xorw	%si, %dx
	cmpw	$-4688, %dx             # imm = 0xEDB0
	jne	.LBB113_119
# %bb.38:                               # %allocate_time.split293
	movw	$-4688, BasicBlockSignatureTracker # imm = 0xEDB0
	movw	$45, RunTimeSignatureAdjuster
.LBB113_39:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$92, %dx
	xorw	%si, %dx
	cmpw	$-4671, %dx             # imm = 0xEDC1
	jne	.LBB113_119
# %bb.40:                               # %allocate_time.split289
	movw	$-4671, BasicBlockSignatureTracker # imm = 0xEDC1
	movw	$75, RunTimeSignatureAdjuster
.LBB113_41:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$64, %dx
	xorw	%si, %dx
	cmpw	$-4662, %dx             # imm = 0xEDCA
	jne	.LBB113_119
# %bb.42:                               # %allocate_time.split281
	movw	$-4662, BasicBlockSignatureTracker # imm = 0xEDCA
	movw	$166, RunTimeSignatureAdjuster
	jmp	.LBB113_45
.LBB113_43:                             # %Buffer__1
	movw	BasicBlockSignatureTracker, %dx
	xorw	$264, %dx               # imm = 0x108
	cmpw	$-5020, %dx             # imm = 0xEC64
	jne	.LBB113_119
# %bb.44:                               # %allocate_time.split273
	movw	$-5020, BasicBlockSignatureTracker # imm = 0xEC64
	movw	$264, RunTimeSignatureAdjuster # imm = 0x108
.LBB113_45:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$189, %dx
	xorw	%si, %dx
	cmpw	$-4655, %dx             # imm = 0xEDD1
	jne	.LBB113_119
# %bb.46:                               # %allocate_time.split297
	movl	Variant, %edx
	movw	$-4655, BasicBlockSignatureTracker # imm = 0xEDD1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %edx
	je	.LBB113_71
# %bb.47:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$11, %dx
	cmpw	$-4646, %dx             # imm = 0xEDDA
	jne	.LBB113_119
# %bb.48:                               # %allocate_time.split299
	movl	Variant, %edx
	movw	$-4646, BasicBlockSignatureTracker # imm = 0xEDDA
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	je	.LBB113_71
# %bb.49:                               # %Buffer__5
	movw	BasicBlockSignatureTracker, %dx
	xorw	$21857, %dx             # imm = 0x5561
	cmpw	$-18245, %dx            # imm = 0xB8BB
	jne	.LBB113_119
# %bb.50:                               # %allocate_time.split303
	movw	$-18245, BasicBlockSignatureTracker # imm = 0xB8BB
	movw	$21857, RunTimeSignatureAdjuster # imm = 0x5561
# %bb.51:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$58, %dx
	xorw	%si, %dx
	cmpw	$-4640, %dx             # imm = 0xEDE0
	jne	.LBB113_119
# %bb.52:                               # %allocate_time.split369
	movsd	.LCPI113_1(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	time_left, %edx
	subl	opp_time, %edx
	cvtsi2sdl	%edx, %xmm1
	movl	time_left, %edx
	cvtsi2sdl	%edx, %xmm2
	divsd	%xmm0, %xmm2
	movw	$-4640, BasicBlockSignatureTracker # imm = 0xEDE0
	movw	$0, RunTimeSignatureAdjuster
	ucomisd	%xmm2, %xmm1
	jbe	.LBB113_59
# %bb.53:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$16, %dx
	cmpw	$-4624, %dx             # imm = 0xEDF0
	jne	.LBB113_119
# %bb.54:                               # %allocate_time.split305
	movl	xb_mode, %edx
	movw	$-4624, BasicBlockSignatureTracker # imm = 0xEDF0
	movw	$16, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB113_59
# %bb.55:                               # %Buffer__6
	movw	BasicBlockSignatureTracker, %dx
	xorw	$-26239, %dx            # imm = 0x9981
	cmpw	$29809, %dx             # imm = 0x7471
	jne	.LBB113_119
# %bb.56:                               # %allocate_time.split309
	movw	$29809, BasicBlockSignatureTracker # imm = 0x7471
	movw	$-26239, RunTimeSignatureAdjuster # imm = 0x9981
# %bb.57:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$961, %dx               # imm = 0x3C1
	xorw	%si, %dx
	cmpw	$-4559, %dx             # imm = 0xEE31
	jne	.LBB113_119
# %bb.58:                               # %allocate_time.split371
	movsd	.LCPI113_3(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	(%rcx), %xmm1           # xmm1 = mem[0],zero
	subsd	%xmm0, %xmm1
	movsd	%xmm1, (%rcx)
	movw	$-4559, BasicBlockSignatureTracker # imm = 0xEE31
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB113_69
.LBB113_59:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$978, %dx               # imm = 0x3D2
	xorw	%si, %dx
	cmpw	$-4558, %dx             # imm = 0xEE32
	jne	.LBB113_119
# %bb.60:                               # %allocate_time.split307
	movsd	.LCPI113_3(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	time_left, %edx
	subl	opp_time, %edx
	cvtsi2sdl	%edx, %xmm1
	movl	time_left, %edx
	cvtsi2sdl	%edx, %xmm2
	divsd	%xmm0, %xmm2
	movw	$-4558, BasicBlockSignatureTracker # imm = 0xEE32
	movw	$0, RunTimeSignatureAdjuster
	ucomisd	%xmm2, %xmm1
	jbe	.LBB113_67
# %bb.61:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$6, %dx
	cmpw	$-4556, %dx             # imm = 0xEE34
	jne	.LBB113_119
# %bb.62:                               # %allocate_time.split313
	movl	xb_mode, %edx
	movw	$-4556, BasicBlockSignatureTracker # imm = 0xEE34
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB113_67
# %bb.63:                               # %Buffer__7
	movw	BasicBlockSignatureTracker, %dx
	xorw	$-12707, %dx            # imm = 0xCE5D
	cmpw	$8297, %dx              # imm = 0x2069
	jne	.LBB113_119
# %bb.64:                               # %allocate_time.split317
	movw	$8297, BasicBlockSignatureTracker # imm = 0x2069
	movw	$-12707, RunTimeSignatureAdjuster # imm = 0xCE5D
# %bb.65:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$96, %dx
	xorw	%si, %dx
	cmpw	$-4524, %dx             # imm = 0xEE54
	jne	.LBB113_119
# %bb.66:                               # %allocate_time.split373
	movsd	.LCPI113_1(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	(%rcx), %xmm1           # xmm1 = mem[0],zero
	subsd	%xmm0, %xmm1
	movsd	%xmm1, (%rcx)
	movw	$-4524, BasicBlockSignatureTracker # imm = 0xEE54
	movw	$102, RunTimeSignatureAdjuster
.LBB113_67:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$106, %dx
	xorw	%si, %dx
	cmpw	$-4520, %dx             # imm = 0xEE58
	jne	.LBB113_119
# %bb.68:                               # %allocate_time.split315
	movw	$-4520, BasicBlockSignatureTracker # imm = 0xEE58
	movw	$105, RunTimeSignatureAdjuster
.LBB113_69:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$80, %dx
	xorw	%si, %dx
	cmpw	$-4511, %dx             # imm = 0xEE61
	jne	.LBB113_119
# %bb.70:                               # %allocate_time.split311
	movw	$-4511, BasicBlockSignatureTracker # imm = 0xEE61
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB113_83
.LBB113_71:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$949, %dx               # imm = 0x3B5
	xorw	%si, %dx
	cmpw	$-4508, %dx             # imm = 0xEE64
	jne	.LBB113_119
# %bb.72:                               # %allocate_time.split301
	movl	Variant, %edx
	movw	$-4508, BasicBlockSignatureTracker # imm = 0xEE64
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %edx
	jne	.LBB113_75
# %bb.73:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$22, %dx
	cmpw	$-4494, %dx             # imm = 0xEE72
	jne	.LBB113_119
# %bb.74:                               # %allocate_time.split321
	movsd	.LCPI113_3(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	(%rcx), %xmm1           # xmm1 = mem[0],zero
	subsd	%xmm0, %xmm1
	movsd	%xmm1, (%rcx)
	movw	$-4494, BasicBlockSignatureTracker # imm = 0xEE72
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB113_81
.LBB113_75:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$31, %dx
	cmpw	$-4485, %dx             # imm = 0xEE7B
	jne	.LBB113_119
# %bb.76:                               # %allocate_time.split323
	movl	Variant, %edx
	movw	$-4485, BasicBlockSignatureTracker # imm = 0xEE7B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %edx
	jne	.LBB113_79
# %bb.77:
	movw	BasicBlockSignatureTracker, %dx
	xorw	$242, %dx
	cmpw	$-4471, %dx             # imm = 0xEE89
	jne	.LBB113_119
# %bb.78:                               # %allocate_time.split327
	movsd	.LCPI113_1(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	(%rcx), %xmm1           # xmm1 = mem[0],zero
	subsd	%xmm0, %xmm1
	movsd	%xmm1, (%rcx)
	movw	$-4471, BasicBlockSignatureTracker # imm = 0xEE89
	movw	$242, RunTimeSignatureAdjuster
.LBB113_79:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$235, %dx
	xorw	%si, %dx
	cmpw	$-4464, %dx             # imm = 0xEE90
	jne	.LBB113_119
# %bb.80:                               # %allocate_time.split329
	movw	$-4464, BasicBlockSignatureTracker # imm = 0xEE90
	movw	$226, RunTimeSignatureAdjuster
.LBB113_81:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$230, %dx
	xorw	%si, %dx
	cmpw	$-4460, %dx             # imm = 0xEE94
	jne	.LBB113_119
# %bb.82:                               # %allocate_time.split325
	movw	$-4460, BasicBlockSignatureTracker # imm = 0xEE94
	movw	$245, RunTimeSignatureAdjuster
.LBB113_83:
	movw	BasicBlockSignatureTracker, %dx
	movw	RunTimeSignatureAdjuster, %si
	xorw	$253, %dx
	xorw	%si, %dx
	cmpw	$-4452, %dx             # imm = 0xEE9C
	jne	.LBB113_119
# %bb.84:                               # %allocate_time.split319
	movl	time_left, %edx
	cvtsi2sdl	%edx, %xmm0
	divsd	(%rcx), %xmm0
	movsd	%xmm0, (%rax)
	movl	inc, %ecx
	movw	$-4452, BasicBlockSignatureTracker # imm = 0xEE9C
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB113_97
# %bb.85:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$39, %cx
	cmpw	$-4421, %cx             # imm = 0xEEBB
	jne	.LBB113_119
# %bb.86:                               # %allocate_time.split331
	movsd	.LCPI113_7(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	time_left, %ecx
	cvtsi2sdl	%ecx, %xmm1
	subsd	(%rax), %xmm1
	movl	inc, %ecx
	cvtsi2sdl	%ecx, %xmm2
	subsd	%xmm2, %xmm1
	movw	$-4421, BasicBlockSignatureTracker # imm = 0xEEBB
	movw	$0, RunTimeSignatureAdjuster
	ucomisd	%xmm0, %xmm1
	jbe	.LBB113_89
# %bb.87:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$123, %cx
	cmpw	$-4416, %cx             # imm = 0xEEC0
	jne	.LBB113_119
# %bb.88:                               # %allocate_time.split335
	movl	inc, %ecx
	cvtsi2sdl	%ecx, %xmm0
	addsd	(%rax), %xmm0
	movsd	%xmm0, (%rax)
	movw	$-4416, BasicBlockSignatureTracker # imm = 0xEEC0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB113_95
.LBB113_89:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$121, %cx
	cmpw	$-4414, %cx             # imm = 0xEEC2
	jne	.LBB113_119
# %bb.90:                               # %allocate_time.split337
	movsd	.LCPI113_8(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI113_9(%rip), %xmm1 # xmm1 = mem[0],zero
	movsd	.LCPI113_10(%rip), %xmm2 # xmm2 = mem[0],zero
	movl	time_left, %ecx
	cvtsi2sdl	%ecx, %xmm3
	subsd	(%rax), %xmm3
	movl	inc, %ecx
	cvtsi2sdl	%ecx, %xmm4
	mulsd	%xmm2, %xmm4
	divsd	%xmm1, %xmm4
	subsd	%xmm4, %xmm3
	movw	$-4414, BasicBlockSignatureTracker # imm = 0xEEC2
	movw	$0, RunTimeSignatureAdjuster
	ucomisd	%xmm0, %xmm3
	jbe	.LBB113_93
# %bb.91:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$25, %cx
	cmpw	$-4389, %cx             # imm = 0xEEDB
	jne	.LBB113_119
# %bb.92:                               # %allocate_time.split341
	movsd	.LCPI113_9(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI113_10(%rip), %xmm1 # xmm1 = mem[0],zero
	movl	inc, %ecx
	cvtsi2sdl	%ecx, %xmm2
	mulsd	%xmm1, %xmm2
	divsd	%xmm0, %xmm2
	addsd	(%rax), %xmm2
	movsd	%xmm2, (%rax)
	movw	$-4389, BasicBlockSignatureTracker # imm = 0xEEDB
	movw	$25, RunTimeSignatureAdjuster
.LBB113_93:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$32, %cx
	xorw	%dx, %cx
	cmpw	$-4382, %cx             # imm = 0xEEE2
	jne	.LBB113_119
# %bb.94:                               # %allocate_time.split343
	movw	$-4382, BasicBlockSignatureTracker # imm = 0xEEE2
	movw	$34, RunTimeSignatureAdjuster
.LBB113_95:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$37, %cx
	xorw	%dx, %cx
	cmpw	$-4379, %cx             # imm = 0xEEE5
	jne	.LBB113_119
# %bb.96:                               # %allocate_time.split339
	movw	$-4379, BasicBlockSignatureTracker # imm = 0xEEE5
	movw	$121, RunTimeSignatureAdjuster
.LBB113_97:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$102, %cx
	xorw	%dx, %cx
	cmpw	$-4358, %cx             # imm = 0xEEFA
	jne	.LBB113_119
# %bb.98:                               # %allocate_time.split333
	movw	$-4358, BasicBlockSignatureTracker # imm = 0xEEFA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB113_105
.LBB113_99:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$607, %cx               # imm = 0x25F
	cmpw	$-4346, %cx             # imm = 0xEF06
	jne	.LBB113_119
# %bb.100:                              # %allocate_time.split261
	movsd	.LCPI113_8(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI113_11(%rip), %xmm1 # xmm1 = mem[0],zero
	movl	min_per_game, %ecx
	cvtsi2ssl	%ecx, %xmm2
	cvtss2sd	%xmm2, %xmm2
	mulsd	%xmm1, %xmm2
	movl	sec_per_game, %ecx
	cvtsi2ssl	%ecx, %xmm1
	cvtss2sd	%xmm1, %xmm1
	mulsd	%xmm0, %xmm1
	addsd	%xmm1, %xmm2
	movl	moves_to_tc, %ecx
	cvtsi2ssl	%ecx, %xmm1
	cvtss2sd	%xmm1, %xmm1
	divsd	%xmm1, %xmm2
	subsd	%xmm0, %xmm2
	movsd	%xmm2, (%rax)
	movl	time_cushion, %ecx
	movw	$-4346, BasicBlockSignatureTracker # imm = 0xEF06
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB113_103
# %bb.101:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$12, %cx
	cmpw	$-4342, %cx             # imm = 0xEF0A
	jne	.LBB113_119
# %bb.102:                              # %allocate_time.split347
	movsd	.LCPI113_9(%rip), %xmm0 # xmm0 = mem[0],zero
	movsd	.LCPI113_12(%rip), %xmm1 # xmm1 = mem[0],zero
	movl	time_cushion, %ecx
	cvtsi2sdl	%ecx, %xmm2
	mulsd	%xmm1, %xmm2
	divsd	%xmm0, %xmm2
	addsd	(%rax), %xmm2
	movsd	%xmm2, (%rax)
	movl	time_cushion, %ecx
	cvtsi2sdl	%ecx, %xmm2
	mulsd	%xmm1, %xmm2
	divsd	%xmm0, %xmm2
	cvttsd2si	%xmm2, %ecx
	movl	time_cushion, %edx
	subl	%ecx, %edx
	movl	%edx, time_cushion
	movw	$-4342, BasicBlockSignatureTracker # imm = 0xEF0A
	movw	$12, RunTimeSignatureAdjuster
.LBB113_103:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$10, %cx
	xorw	%dx, %cx
	cmpw	$-4340, %cx             # imm = 0xEF0C
	jne	.LBB113_119
# %bb.104:                              # %allocate_time.split349
	movw	$-4340, BasicBlockSignatureTracker # imm = 0xEF0C
	movw	$502, RunTimeSignatureAdjuster # imm = 0x1F6
.LBB113_105:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$500, %cx               # imm = 0x1F4
	xorw	%dx, %cx
	cmpw	$-4338, %cx             # imm = 0xEF0E
	jne	.LBB113_119
# %bb.106:                              # %allocate_time.split345
	movl	Variant, %ecx
	movw	$-4338, BasicBlockSignatureTracker # imm = 0xEF0E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %ecx
	jne	.LBB113_117
# %bb.107:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$22, %cx
	cmpw	$-4328, %cx             # imm = 0xEF18
	jne	.LBB113_119
# %bb.108:                              # %allocate_time.split351
	movsd	.LCPI113_13(%rip), %xmm0 # xmm0 = mem[0],zero
	mulsd	(%rax), %xmm0
	movsd	%xmm0, (%rax)
	movl	opp_time, %ecx
	movl	time_left, %edx
	movw	$-4328, BasicBlockSignatureTracker # imm = 0xEF18
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%edx, %ecx
	jg	.LBB113_111
# %bb.109:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$6, %cx
	cmpw	$-4322, %cx             # imm = 0xEF1E
	jne	.LBB113_119
# %bb.110:                              # %allocate_time.split357
	movl	opp_time, %ecx
	movw	$-4322, BasicBlockSignatureTracker # imm = 0xEF1E
	movw	$6, RunTimeSignatureAdjuster
	cmpl	$1500, %ecx             # imm = 0x5DC
	jge	.LBB113_113
.LBB113_111:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$54, %cx
	xorw	%dx, %cx
	cmpw	$-4306, %cx             # imm = 0xEF2E
	jne	.LBB113_119
# %bb.112:                              # %allocate_time.split355
	movsd	.LCPI113_14(%rip), %xmm0 # xmm0 = mem[0],zero
	mulsd	(%rax), %xmm0
	movsd	%xmm0, (%rax)
	movw	$-4306, BasicBlockSignatureTracker # imm = 0xEF2E
	movw	$48, RunTimeSignatureAdjuster
	jmp	.LBB113_115
.LBB113_113:                            # %Buffer__8
	movw	BasicBlockSignatureTracker, %cx
	xorw	$-29469, %cx            # imm = 0x8CE3
	cmpw	$25597, %cx             # imm = 0x63FD
	jne	.LBB113_119
# %bb.114:                              # %allocate_time.split359
	movw	$25597, BasicBlockSignatureTracker # imm = 0x63FD
	movw	$-29469, RunTimeSignatureAdjuster # imm = 0x8CE3
.LBB113_115:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$42, %cx
	xorw	%dx, %cx
	cmpw	$-4300, %cx             # imm = 0xEF34
	jne	.LBB113_119
# %bb.116:                              # %allocate_time.split361
	movw	$-4300, BasicBlockSignatureTracker # imm = 0xEF34
	movw	$58, RunTimeSignatureAdjuster
.LBB113_117:
	movw	BasicBlockSignatureTracker, %cx
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$73, %cx
	xorw	%dx, %cx
	cmpw	$-4281, %cx             # imm = 0xEF47
	jne	.LBB113_119
# %bb.118:                              # %allocate_time.split353
	cvttsd2si	(%rax), %eax
	movw	$-4281, BasicBlockSignatureTracker # imm = 0xEF47
	movw	$17184, RunTimeSignatureAdjuster # imm = 0x4320
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB113_119:                            # %CFerrorHandler.allocate_time
	callq	FAULT_DETECTED_CFC
.Lfunc_end113:
	.size	allocate_time, .Lfunc_end113-allocate_time
	.cfi_endproc
                                        # -- End function
	.globl	comp_to_san             # -- Begin function comp_to_san
	.p2align	4, 0x90
	.type	comp_to_san,@function
comp_to_san:                            # @comp_to_san
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$72, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	leaq	16(%rbp), %rbx
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.1:                                # %comp_to_san.split468
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.2:                                # %comp_to_san.split466
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.3:                                # %comp_to_san.split464
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.4:                                # %comp_to_san.split462
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.5:                                # %comp_to_san.split460
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.6:                                # %comp_to_san.split458
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.7:                                # %comp_to_san.split456
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.8:                                # %comp_to_san.split328
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.9:                                # %comp_to_san.split326
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.10:                               # %comp_to_san.split324
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.11:                               # %comp_to_san.split322
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-1249, %ax             # imm = 0xFB1F
	xorw	%cx, %ax
	cmpw	$-4274, %ax             # imm = 0xEF4E
	jne	.LBB114_153
# %bb.12:                               # %comp_to_san.split
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %r8
	addq	$-12288, %r8            # imm = 0xD000
	movq	%r8, %rsp
	movq	%rsp, %rax
	addq	$-12288, %rax           # imm = 0xD000
	movq	%rax, -96(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -112(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -104(%rbp)        # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rcx, -56(%rbp)         # 8-byte Spill
	movq	%rdi, (%rcx)
	movslq	(%rbx), %rcx
	movl	Xrank(,%rcx,4), %ecx
	movl	%ecx, (%r13)
	movslq	4(%rbx), %rcx
	movl	Xrank(,%rcx,4), %ecx
	movq	%rdx, -72(%rbp)         # 8-byte Spill
	movl	%ecx, (%rdx)
	movl	$97, (%rax)
	movslq	(%rbx), %rcx
	movl	Xfile(,%rcx,4), %ecx
	addl	(%rax), %ecx
	subl	$1, %ecx
	movb	%cl, (%r12)
	movslq	4(%rbx), %rcx
	movl	Xfile(,%rcx,4), %ecx
	addl	(%rax), %ecx
	subl	$1, %ecx
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	movb	%cl, (%rsi)
	movl	(%rbx), %eax
	movw	$-4274, BasicBlockSignatureTracker # imm = 0xEF4E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB114_15
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$39, %ax
	cmpw	$-4247, %ax             # imm = 0xEF69
	jne	.LBB114_153
# %bb.14:                               # %comp_to_san.split330
	movabsq	$.L.str.399, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movslq	12(%rbx), %rax
	movl	comp_to_san.type_to_char(,%rax,4), %edx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %ecx
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r8d
	movb	$0, %al
	callq	sprintf
	movw	$-4247, BasicBlockSignatureTracker # imm = 0xEF69
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_120
.LBB114_15:
	movq	%r9, -88(%rbp)          # 8-byte Spill
	movq	%r8, -80(%rbp)          # 8-byte Spill
	movw	BasicBlockSignatureTracker, %ax
	xorw	$200, %ax
	cmpw	$-4218, %ax             # imm = 0xEF86
	jne	.LBB114_153
# %bb.16:                               # %comp_to_san.split332
	movslq	(%rbx), %rax
	movl	board(,%rax,4), %eax
	movw	$-4218, BasicBlockSignatureTracker # imm = 0xEF86
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB114_19
# %bb.17:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$34, %ax
	cmpw	$-4188, %ax             # imm = 0xEFA4
	jne	.LBB114_153
# %bb.18:                               # %comp_to_san.split338
	movslq	(%rbx), %rax
	movl	board(,%rax,4), %eax
	movw	$-4188, BasicBlockSignatureTracker # imm = 0xEFA4
	movw	$34, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB114_43
.LBB114_19:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-4180, %ax             # imm = 0xEFAC
	jne	.LBB114_153
# %bb.20:                               # %comp_to_san.split336
	movslq	4(%rbx), %rax
	movl	board(,%rax,4), %eax
	movw	$-4180, BasicBlockSignatureTracker # imm = 0xEFAC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB114_33
# %bb.21:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-4178, %ax             # imm = 0xEFAE
	jne	.LBB114_153
# %bb.22:                               # %comp_to_san.split342
	movl	20(%rbx), %eax
	movw	$-4178, BasicBlockSignatureTracker # imm = 0xEFAE
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB114_33
# %bb.23:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-23870, %ax            # imm = 0xA2C2
	cmpw	$19820, %ax             # imm = 0x4D6C
	jne	.LBB114_153
# %bb.24:                               # %comp_to_san.split346
	movw	$19820, BasicBlockSignatureTracker # imm = 0x4D6C
	movw	$-23870, RunTimeSignatureAdjuster # imm = 0xA2C2
# %bb.25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-4176, %ax             # imm = 0xEFB0
	jne	.LBB114_153
# %bb.26:                               # %comp_to_san.split472
	movl	12(%rbx), %eax
	movw	$-4176, BasicBlockSignatureTracker # imm = 0xEFB0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB114_29
# %bb.27:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$115, %ax
	cmpw	$-4157, %ax             # imm = 0xEFC3
	jne	.LBB114_153
# %bb.28:                               # %comp_to_san.split350
	movabsq	$.L.str.1.400, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %edx
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %ecx
	movb	$0, %al
	callq	sprintf
	movw	$-4157, BasicBlockSignatureTracker # imm = 0xEFC3
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_31
.LBB114_29:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$118, %ax
	cmpw	$-4154, %ax             # imm = 0xEFC6
	jne	.LBB114_153
# %bb.30:                               # %comp_to_san.split348
	movabsq	$.L.str.2.401, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %edx
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %ecx
	movslq	12(%rbx), %rax
	movl	comp_to_san.type_to_char(,%rax,4), %r8d
	movb	$0, %al
	callq	sprintf
	movw	$-4154, BasicBlockSignatureTracker # imm = 0xEFC6
	movw	$5, RunTimeSignatureAdjuster
.LBB114_31:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11, %ax
	xorw	%cx, %ax
	cmpw	$-4152, %ax             # imm = 0xEFC8
	jne	.LBB114_153
# %bb.32:                               # %comp_to_san.split352
	movw	$-4152, BasicBlockSignatureTracker # imm = 0xEFC8
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_41
.LBB114_33:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$123, %ax
	xorw	%cx, %ax
	cmpw	$-4137, %ax             # imm = 0xEFD7
	jne	.LBB114_153
# %bb.34:                               # %comp_to_san.split344
	movl	12(%rbx), %eax
	movw	$-4137, BasicBlockSignatureTracker # imm = 0xEFD7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB114_37
# %bb.35:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-4128, %ax             # imm = 0xEFE0
	jne	.LBB114_153
# %bb.36:                               # %comp_to_san.split358
	movabsq	$.L.str.3.402, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movsbl	(%r12), %edx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %ecx
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r8d
	movb	$0, %al
	callq	sprintf
	movw	$-4128, BasicBlockSignatureTracker # imm = 0xEFE0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_39
.LBB114_37:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-4120, %ax             # imm = 0xEFE8
	jne	.LBB114_153
# %bb.38:                               # %comp_to_san.split356
	movabsq	$.L.str.4.403, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movsbl	(%r12), %edx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %ecx
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r8d
	movslq	12(%rbx), %rax
	movl	comp_to_san.type_to_char(,%rax,4), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-4120, BasicBlockSignatureTracker # imm = 0xEFE8
	movw	$8, RunTimeSignatureAdjuster
.LBB114_39:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-4115, %ax             # imm = 0xEFED
	jne	.LBB114_153
# %bb.40:                               # %comp_to_san.split360
	movw	$-4115, BasicBlockSignatureTracker # imm = 0xEFED
	movw	$37, RunTimeSignatureAdjuster
.LBB114_41:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$56, %ax
	xorw	%cx, %ax
	cmpw	$-4112, %ax             # imm = 0xEFF0
	jne	.LBB114_153
# %bb.42:                               # %comp_to_san.split354
	movw	$-4112, BasicBlockSignatureTracker # imm = 0xEFF0
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_118
.LBB114_43:                             # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-27611, %ax            # imm = 0x9425
	cmpw	$31617, %ax             # imm = 0x7B81
	jne	.LBB114_153
# %bb.44:                               # %comp_to_san.split340
	movw	$31617, BasicBlockSignatureTracker # imm = 0x7B81
	movw	$-27611, RunTimeSignatureAdjuster # imm = 0x9425
# %bb.45:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$86, %ax
	xorw	%cx, %ax
	cmpw	$-4110, %ax             # imm = 0xEFF2
	jne	.LBB114_153
# %bb.46:                               # %comp_to_san.split470
	movl	16(%rbx), %eax
	movw	$-4110, BasicBlockSignatureTracker # imm = 0xEFF2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB114_59
# %bb.47:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-4105, %ax             # imm = 0xEFF7
	jne	.LBB114_153
# %bb.48:                               # %comp_to_san.split364
	movl	16(%rbx), %eax
	movw	$-4105, BasicBlockSignatureTracker # imm = 0xEFF7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	je	.LBB114_51
# %bb.49:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-4097, %ax             # imm = 0xEFFF
	jne	.LBB114_153
# %bb.50:                               # %comp_to_san.split370
	movl	16(%rbx), %eax
	movw	$-4097, BasicBlockSignatureTracker # imm = 0xEFFF
	movw	$8, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	jne	.LBB114_53
.LBB114_51:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8178, %ax              # imm = 0x1FF2
	xorw	%cx, %ax
	cmpw	$-4091, %ax             # imm = 0xF005
	jne	.LBB114_153
# %bb.52:                               # %comp_to_san.split368
	movabsq	$.L.str.5.404, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movb	$0, %al
	callq	sprintf
	movw	$-4091, BasicBlockSignatureTracker # imm = 0xF005
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_57
.LBB114_53:                             # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16555, %ax             # imm = 0x40AB
	cmpw	$-20652, %ax            # imm = 0xAF54
	jne	.LBB114_153
# %bb.54:                               # %comp_to_san.split372
	movw	$-20652, BasicBlockSignatureTracker # imm = 0xAF54
	movw	$16555, RunTimeSignatureAdjuster # imm = 0x40AB
# %bb.55:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$8174, %ax              # imm = 0x1FEE
	xorw	%cx, %ax
	cmpw	$-4079, %ax             # imm = 0xF011
	jne	.LBB114_153
# %bb.56:                               # %comp_to_san.split474
	movabsq	$.L.str.6.405, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movb	$0, %al
	callq	sprintf
	movw	$-4079, BasicBlockSignatureTracker # imm = 0xF011
	movw	$20, RunTimeSignatureAdjuster
.LBB114_57:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$-4077, %ax             # imm = 0xF013
	jne	.LBB114_153
# %bb.58:                               # %comp_to_san.split374
	movw	$-4077, BasicBlockSignatureTracker # imm = 0xF013
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_116
.LBB114_59:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8169, %ax              # imm = 0x1FE9
	cmpw	$-4069, %ax             # imm = 0xF01B
	jne	.LBB114_153
# %bb.60:                               # %comp_to_san.split366
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	$-1, (%rax)
	movl	$0, (%r15)
	movw	$-4069, BasicBlockSignatureTracker # imm = 0xF01B
	movw	$31371, RunTimeSignatureAdjuster # imm = 0x7A8B
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-4069, BasicBlockSignatureTracker # imm = 0xF01B
	movw	$31371, RunTimeSignatureAdjuster # imm = 0x7A8B
	movl	numb_moves, %eax
	movl	%eax, (%r15)
	movw	$-4069, BasicBlockSignatureTracker # imm = 0xF01B
	movw	$31380, RunTimeSignatureAdjuster # imm = 0x7A94
	callq	in_check
	movw	$-4069, BasicBlockSignatureTracker # imm = 0xF01B
	movw	$31380, RunTimeSignatureAdjuster # imm = 0x7A94
	movl	%eax, (%r14)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-4069, BasicBlockSignatureTracker # imm = 0xF01B
	movw	$0, RunTimeSignatureAdjuster
.LBB114_61:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$61, %ax
	xorw	%cx, %ax
	cmpw	$-4058, %ax             # imm = 0xF026
	jne	.LBB114_152
# %bb.62:                               # %comp_to_san.split378
                                        #   in Loop: Header=BB114_61 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movl	(%r15), %ecx
	movw	$-4058, BasicBlockSignatureTracker # imm = 0xF026
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB114_83
# %bb.63:                               #   in Loop: Header=BB114_61 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-4056, %ax             # imm = 0xF028
	jne	.LBB114_152
# %bb.64:                               # %comp_to_san.split380
                                        #   in Loop: Header=BB114_61 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movl	4(%rcx), %eax
	movl	4(%rbx), %ecx
	movw	$-4056, BasicBlockSignatureTracker # imm = 0xF028
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB114_79
# %bb.65:                               #   in Loop: Header=BB114_61 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-4050, %ax             # imm = 0xF02E
	jne	.LBB114_152
# %bb.66:                               # %comp_to_san.split384
                                        #   in Loop: Header=BB114_61 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movslq	(%rcx), %rax
	movl	board(,%rax,4), %eax
	movslq	(%rbx), %rcx
	movl	board(,%rcx,4), %ecx
	movw	$-4050, BasicBlockSignatureTracker # imm = 0xF02E
	movw	$6, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jne	.LBB114_79
# %bb.67:                               # %Buffer__3
                                        #   in Loop: Header=BB114_61 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1229, %ax             # imm = 0xFB33
	cmpw	$2845, %ax              # imm = 0xB1D
	jne	.LBB114_152
# %bb.68:                               # %comp_to_san.split388
                                        #   in Loop: Header=BB114_61 Depth=1
	movw	$2845, BasicBlockSignatureTracker # imm = 0xB1D
	movw	$-1229, RunTimeSignatureAdjuster # imm = 0xFB33
# %bb.69:                               #   in Loop: Header=BB114_61 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-4039, %ax             # imm = 0xF039
	jne	.LBB114_152
# %bb.70:                               # %comp_to_san.split476
                                        #   in Loop: Header=BB114_61 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movl	(%rcx), %eax
	movl	(%rbx), %ecx
	movw	$-4039, BasicBlockSignatureTracker # imm = 0xF039
	movw	$17, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB114_79
# %bb.71:                               # %Buffer__4
                                        #   in Loop: Header=BB114_61 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27129, %ax             # imm = 0x69F9
	cmpw	$-26176, %ax            # imm = 0x99C0
	jne	.LBB114_152
# %bb.72:                               # %comp_to_san.split390
                                        #   in Loop: Header=BB114_61 Depth=1
	movw	$-26176, BasicBlockSignatureTracker # imm = 0x99C0
	movw	$27129, RunTimeSignatureAdjuster # imm = 0x69F9
# %bb.73:                               #   in Loop: Header=BB114_61 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-4037, %ax             # imm = 0xF03B
	jne	.LBB114_152
# %bb.74:                               # %comp_to_san.split478
                                        #   in Loop: Header=BB114_61 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-4037, BasicBlockSignatureTracker # imm = 0xF03B
	movw	$31371, RunTimeSignatureAdjuster # imm = 0x7A8B
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	make
	movw	$-4037, BasicBlockSignatureTracker # imm = 0xF03B
	movw	$31371, RunTimeSignatureAdjuster # imm = 0x7A8B
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movl	(%r14), %edx
	movw	$-4037, BasicBlockSignatureTracker # imm = 0xF03B
	movw	$31371, RunTimeSignatureAdjuster # imm = 0x7A8B
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	check_legal
	movw	$-4037, BasicBlockSignatureTracker # imm = 0xF03B
	movw	$31371, RunTimeSignatureAdjuster # imm = 0x7A8B
	movw	$-4037, BasicBlockSignatureTracker # imm = 0xF03B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB114_77
# %bb.75:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-4033, %ax             # imm = 0xF03F
	jne	.LBB114_153
# %bb.76:                               # %comp_to_san.split392
	movq	-48(%rbp), %r14         # 8-byte Reload
	movl	(%r14), %esi
	movw	$-4033, BasicBlockSignatureTracker # imm = 0xF03F
	movw	$31448, RunTimeSignatureAdjuster # imm = 0x7AD8
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-4033, BasicBlockSignatureTracker # imm = 0xF03F
	movw	$31448, RunTimeSignatureAdjuster # imm = 0x7AD8
	movl	(%r14), %eax
	movq	-88(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movw	$-4033, BasicBlockSignatureTracker # imm = 0xF03F
	movw	$25, RunTimeSignatureAdjuster
	jmp	.LBB114_84
.LBB114_77:                             #   in Loop: Header=BB114_61 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$127, %ax
	cmpw	$-4028, %ax             # imm = 0xF044
	jne	.LBB114_152
# %bb.78:                               # %comp_to_san.split394
                                        #   in Loop: Header=BB114_61 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-4028, BasicBlockSignatureTracker # imm = 0xF044
	movw	$31395, RunTimeSignatureAdjuster # imm = 0x7AA3
	movq	-80(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-4028, BasicBlockSignatureTracker # imm = 0xF044
	movw	$31395, RunTimeSignatureAdjuster # imm = 0x7AA3
	movw	$-4028, BasicBlockSignatureTracker # imm = 0xF044
	movw	$108, RunTimeSignatureAdjuster
.LBB114_79:                             #   in Loop: Header=BB114_61 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$121, %ax
	xorw	%cx, %ax
	cmpw	$-4015, %ax             # imm = 0xF051
	jne	.LBB114_152
# %bb.80:                               # %comp_to_san.split386
                                        #   in Loop: Header=BB114_61 Depth=1
	movw	$-4015, BasicBlockSignatureTracker # imm = 0xF051
	movw	$0, RunTimeSignatureAdjuster
# %bb.81:                               #   in Loop: Header=BB114_61 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-4008, %ax             # imm = 0xF058
	jne	.LBB114_152
# %bb.82:                               # %comp_to_san.split396
                                        #   in Loop: Header=BB114_61 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-4008, BasicBlockSignatureTracker # imm = 0xF058
	movw	$67, RunTimeSignatureAdjuster
	jmp	.LBB114_61
.LBB114_83:                             # %.loopexit2
	jmp	.LBB114_84
.LBB114_84:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$64, %ax
	xorw	%cx, %ax
	cmpw	$-3994, %ax             # imm = 0xF066
	jne	.LBB114_153
# %bb.85:                               # %comp_to_san.split382
	movq	-88(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-3994, BasicBlockSignatureTracker # imm = 0xF066
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-1, %eax
	je	.LBB114_106
# %bb.86:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-3980, %ax             # imm = 0xF074
	jne	.LBB114_153
# %bb.87:                               # %comp_to_san.split398
	movslq	4(%rbx), %rax
	movl	board(,%rax,4), %eax
	movw	$-3980, BasicBlockSignatureTracker # imm = 0xF074
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB114_96
# %bb.88:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-3975, %ax             # imm = 0xF079
	jne	.LBB114_153
# %bb.89:                               # %comp_to_san.split402
	movq	-88(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movslq	(%rcx), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	(%rbx), %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$-3975, BasicBlockSignatureTracker # imm = 0xF079
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB114_92
# %bb.90:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$254, %ax
	cmpw	$-3961, %ax             # imm = 0xF087
	jne	.LBB114_153
# %bb.91:                               # %comp_to_san.split406
	movabsq	$.L.str.7.406, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movslq	(%rbx), %rax
	movslq	board(,%rax,4), %rax
	movl	comp_to_san.type_to_char(,%rax,4), %edx
	movsbl	(%r12), %ecx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %r8d
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-3961, BasicBlockSignatureTracker # imm = 0xF087
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_94
.LBB114_92:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$236, %ax
	cmpw	$-3947, %ax             # imm = 0xF095
	jne	.LBB114_153
# %bb.93:                               # %comp_to_san.split408
	movabsq	$.L.str.8.407, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movslq	(%rbx), %rax
	movslq	board(,%rax,4), %rax
	movl	comp_to_san.type_to_char(,%rax,4), %edx
	movl	(%r13), %ecx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %r8d
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-3947, BasicBlockSignatureTracker # imm = 0xF095
	movw	$18, RunTimeSignatureAdjuster
.LBB114_94:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$79, %ax
	xorw	%cx, %ax
	cmpw	$-3896, %ax             # imm = 0xF0C8
	jne	.LBB114_153
# %bb.95:                               # %comp_to_san.split410
	movw	$-3896, BasicBlockSignatureTracker # imm = 0xF0C8
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_104
.LBB114_96:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$174, %ax
	cmpw	$-3878, %ax             # imm = 0xF0DA
	jne	.LBB114_153
# %bb.97:                               # %comp_to_san.split404
	movq	-88(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	movq	-80(%rbp), %rcx         # 8-byte Reload
	addq	%rax, %rcx
	movslq	(%rcx), %rax
	movl	Xfile(,%rax,4), %eax
	movslq	(%rbx), %rcx
	movl	Xfile(,%rcx,4), %ecx
	movw	$-3878, BasicBlockSignatureTracker # imm = 0xF0DA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB114_100
# %bb.98:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$48, %ax
	cmpw	$-3862, %ax             # imm = 0xF0EA
	jne	.LBB114_153
# %bb.99:                               # %comp_to_san.split414
	movabsq	$.L.str.9.408, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movslq	(%rbx), %rax
	movslq	board(,%rax,4), %rax
	movl	comp_to_san.type_to_char(,%rax,4), %edx
	movsbl	(%r12), %ecx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %r8d
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-3862, BasicBlockSignatureTracker # imm = 0xF0EA
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_102
.LBB114_100:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$-3849, %ax             # imm = 0xF0F7
	jne	.LBB114_153
# %bb.101:                              # %comp_to_san.split416
	movabsq	$.L.str.10.409, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movslq	(%rbx), %rax
	movslq	board(,%rax,4), %rax
	movl	comp_to_san.type_to_char(,%rax,4), %edx
	movl	(%r13), %ecx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %r8d
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-3849, BasicBlockSignatureTracker # imm = 0xF0F7
	movw	$29, RunTimeSignatureAdjuster
.LBB114_102:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-3843, %ax             # imm = 0xF0FD
	jne	.LBB114_153
# %bb.103:                              # %comp_to_san.split418
	movw	$-3843, BasicBlockSignatureTracker # imm = 0xF0FD
	movw	$53, RunTimeSignatureAdjuster
.LBB114_104:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$458, %ax               # imm = 0x1CA
	xorw	%cx, %ax
	cmpw	$-3838, %ax             # imm = 0xF102
	jne	.LBB114_153
# %bb.105:                              # %comp_to_san.split412
	movw	$-3838, BasicBlockSignatureTracker # imm = 0xF102
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_114
.LBB114_106:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$365, %ax               # imm = 0x16D
	cmpw	$-3829, %ax             # imm = 0xF10B
	jne	.LBB114_153
# %bb.107:                              # %comp_to_san.split400
	movslq	4(%rbx), %rax
	movl	board(,%rax,4), %eax
	movw	$-3829, BasicBlockSignatureTracker # imm = 0xF10B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB114_110
# %bb.108:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-3827, %ax             # imm = 0xF10D
	jne	.LBB114_153
# %bb.109:                              # %comp_to_san.split422
	movabsq	$.L.str.11.410, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movslq	(%rbx), %rax
	movslq	board(,%rax,4), %rax
	movl	comp_to_san.type_to_char(,%rax,4), %edx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %ecx
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r8d
	movb	$0, %al
	callq	sprintf
	movw	$-3827, BasicBlockSignatureTracker # imm = 0xF10D
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_112
.LBB114_110:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-3826, %ax             # imm = 0xF10E
	jne	.LBB114_153
# %bb.111:                              # %comp_to_san.split424
	movabsq	$.L.str.3.402, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movslq	(%rbx), %rax
	movslq	board(,%rax,4), %rax
	movl	comp_to_san.type_to_char(,%rax,4), %edx
	movq	-64(%rbp), %rax         # 8-byte Reload
	movsbl	(%rax), %ecx
	movq	-72(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %r8d
	movb	$0, %al
	callq	sprintf
	movw	$-3826, BasicBlockSignatureTracker # imm = 0xF10E
	movw	$3, RunTimeSignatureAdjuster
.LBB114_112:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$29, %ax
	xorw	%cx, %ax
	cmpw	$-3824, %ax             # imm = 0xF110
	jne	.LBB114_153
# %bb.113:                              # %comp_to_san.split426
	movw	$-3824, BasicBlockSignatureTracker # imm = 0xF110
	movw	$18, RunTimeSignatureAdjuster
.LBB114_114:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$-3804, %ax             # imm = 0xF124
	jne	.LBB114_153
# %bb.115:                              # %comp_to_san.split420
	movw	$-3804, BasicBlockSignatureTracker # imm = 0xF124
	movw	$311, RunTimeSignatureAdjuster # imm = 0x137
.LBB114_116:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$313, %ax               # imm = 0x139
	xorw	%cx, %ax
	cmpw	$-3798, %ax             # imm = 0xF12A
	jne	.LBB114_153
# %bb.117:                              # %comp_to_san.split376
	movw	$-3798, BasicBlockSignatureTracker # imm = 0xF12A
	movw	$7898, RunTimeSignatureAdjuster # imm = 0x1EDA
.LBB114_118:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7875, %ax              # imm = 0x1EC3
	xorw	%cx, %ax
	cmpw	$-3789, %ax             # imm = 0xF133
	jne	.LBB114_153
# %bb.119:                              # %comp_to_san.split362
	movw	$-3789, BasicBlockSignatureTracker # imm = 0xF133
	movw	$7770, RunTimeSignatureAdjuster # imm = 0x1E5A
.LBB114_120:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7774, %ax              # imm = 0x1E5E
	xorw	%cx, %ax
	cmpw	$-3785, %ax             # imm = 0xF137
	jne	.LBB114_153
# %bb.121:                              # %comp_to_san.split334
	movw	$-3785, BasicBlockSignatureTracker # imm = 0xF137
	movw	$31623, RunTimeSignatureAdjuster # imm = 0x7B87
	movq	%rbx, %rdi
	xorl	%esi, %esi
	callq	make
	movw	$-3785, BasicBlockSignatureTracker # imm = 0xF137
	movw	$31623, RunTimeSignatureAdjuster # imm = 0x7B87
	movw	$-3785, BasicBlockSignatureTracker # imm = 0xF137
	movw	$31623, RunTimeSignatureAdjuster # imm = 0x7B87
	movq	%rbx, %rdi
	xorl	%esi, %esi
	movl	$1, %edx
	callq	check_legal
	movw	$-3785, BasicBlockSignatureTracker # imm = 0xF137
	movw	$31623, RunTimeSignatureAdjuster # imm = 0x7B87
	movw	$-3785, BasicBlockSignatureTracker # imm = 0xF137
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB114_124
# %bb.122:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$116, %ax
	cmpw	$-3773, %ax             # imm = 0xF143
	jne	.LBB114_153
# %bb.123:                              # %comp_to_san.split430
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	movl	$.L.str.12.411, %esi
	callq	strcpy
	movw	$-3773, BasicBlockSignatureTracker # imm = 0xF143
	movw	$31652, RunTimeSignatureAdjuster # imm = 0x7BA4
	movq	%rbx, %rdi
	xorl	%esi, %esi
	callq	unmake
	movw	$-3773, BasicBlockSignatureTracker # imm = 0xF143
	movw	$31652, RunTimeSignatureAdjuster # imm = 0x7BA4
	movw	$-3773, BasicBlockSignatureTracker # imm = 0xF143
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_149
.LBB114_124:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$113, %ax
	cmpw	$-3770, %ax             # imm = 0xF146
	jne	.LBB114_153
# %bb.125:                              # %comp_to_san.split428
	movw	$-3770, BasicBlockSignatureTracker # imm = 0xF146
	movw	$31689, RunTimeSignatureAdjuster # imm = 0x7BC9
	callq	in_check
	movw	$-3770, BasicBlockSignatureTracker # imm = 0xF146
	movw	$31689, RunTimeSignatureAdjuster # imm = 0x7BC9
	movw	$-3770, BasicBlockSignatureTracker # imm = 0xF146
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB114_147
# %bb.126:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-3763, %ax             # imm = 0xF14D
	jne	.LBB114_153
# %bb.127:                              # %comp_to_san.split434
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$1, (%rax)
	movq	-112(%rbp), %r14        # 8-byte Reload
	movl	$0, (%r14)
	movw	$-3763, BasicBlockSignatureTracker # imm = 0xF14D
	movw	$31709, RunTimeSignatureAdjuster # imm = 0x7BDD
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	gen
	movw	$-3763, BasicBlockSignatureTracker # imm = 0xF14D
	movw	$31709, RunTimeSignatureAdjuster # imm = 0x7BDD
	movl	numb_moves, %eax
	movl	%eax, (%r14)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-3763, BasicBlockSignatureTracker # imm = 0xF14D
	movw	$0, RunTimeSignatureAdjuster
.LBB114_128:                            # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$19, %ax
	xorw	%cx, %ax
	cmpw	$-3746, %ax             # imm = 0xF15E
	jne	.LBB114_151
# %bb.129:                              # %comp_to_san.split438
                                        #   in Loop: Header=BB114_128 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movq	-112(%rbp), %rcx        # 8-byte Reload
	movl	(%rcx), %ecx
	movw	$-3746, BasicBlockSignatureTracker # imm = 0xF15E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB114_138
# %bb.130:                              #   in Loop: Header=BB114_128 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$56, %ax
	cmpw	$-3738, %ax             # imm = 0xF166
	jne	.LBB114_151
# %bb.131:                              # %comp_to_san.split440
                                        #   in Loop: Header=BB114_128 Depth=1
	movq	-48(%rbp), %r15         # 8-byte Reload
	movl	(%r15), %esi
	movw	$-3738, BasicBlockSignatureTracker # imm = 0xF166
	movw	$31702, RunTimeSignatureAdjuster # imm = 0x7BD6
	movq	-96(%rbp), %r14         # 8-byte Reload
	movq	%r14, %rdi
	callq	make
	movw	$-3738, BasicBlockSignatureTracker # imm = 0xF166
	movw	$31702, RunTimeSignatureAdjuster # imm = 0x7BD6
	movl	(%r15), %esi
	movw	$-3738, BasicBlockSignatureTracker # imm = 0xF166
	movw	$31702, RunTimeSignatureAdjuster # imm = 0x7BD6
	movq	%r14, %rdi
	movl	$1, %edx
	callq	check_legal
	movw	$-3738, BasicBlockSignatureTracker # imm = 0xF166
	movw	$31702, RunTimeSignatureAdjuster # imm = 0x7BD6
	movw	$-3738, BasicBlockSignatureTracker # imm = 0xF166
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB114_134
# %bb.132:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-3731, %ax             # imm = 0xF16D
	jne	.LBB114_153
# %bb.133:                              # %comp_to_san.split444
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	$0, (%rax)
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-3731, BasicBlockSignatureTracker # imm = 0xF16D
	movw	$31626, RunTimeSignatureAdjuster # imm = 0x7B8A
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-3731, BasicBlockSignatureTracker # imm = 0xF16D
	movw	$31626, RunTimeSignatureAdjuster # imm = 0x7B8A
	movw	$-3731, BasicBlockSignatureTracker # imm = 0xF16D
	movw	$51, RunTimeSignatureAdjuster
	jmp	.LBB114_139
.LBB114_134:                            #   in Loop: Header=BB114_128 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$22, %ax
	cmpw	$-3728, %ax             # imm = 0xF170
	jne	.LBB114_151
# %bb.135:                              # %comp_to_san.split446
                                        #   in Loop: Header=BB114_128 Depth=1
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-3728, BasicBlockSignatureTracker # imm = 0xF170
	movw	$31639, RunTimeSignatureAdjuster # imm = 0x7B97
	movq	-96(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-3728, BasicBlockSignatureTracker # imm = 0xF170
	movw	$31639, RunTimeSignatureAdjuster # imm = 0x7B97
	movw	$-3728, BasicBlockSignatureTracker # imm = 0xF170
	movw	$0, RunTimeSignatureAdjuster
# %bb.136:                              #   in Loop: Header=BB114_128 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-3727, %ax             # imm = 0xF171
	jne	.LBB114_151
# %bb.137:                              # %comp_to_san.split448
                                        #   in Loop: Header=BB114_128 Depth=1
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-3727, BasicBlockSignatureTracker # imm = 0xF171
	movw	$60, RunTimeSignatureAdjuster
	jmp	.LBB114_128
.LBB114_138:                            # %.loopexit
	jmp	.LBB114_139
.LBB114_139:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$254, %ax
	xorw	%cx, %ax
	cmpw	$-3680, %ax             # imm = 0xF1A0
	jne	.LBB114_153
# %bb.140:                              # %comp_to_san.split442
	movq	-104(%rbp), %rax        # 8-byte Reload
	movl	(%rax), %eax
	movw	$-3680, BasicBlockSignatureTracker # imm = 0xF1A0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB114_143
# %bb.141:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-3667, %ax             # imm = 0xF1AD
	jne	.LBB114_153
# %bb.142:                              # %comp_to_san.split450
	movabsq	$.L.str.13.412, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	callq	strcat
	movw	$-3667, BasicBlockSignatureTracker # imm = 0xF1AD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB114_145
.LBB114_143:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-3657, %ax             # imm = 0xF1B7
	jne	.LBB114_153
# %bb.144:                              # %comp_to_san.split452
	movabsq	$.L.str.14.413, %rsi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movq	(%rax), %rdi
	callq	strcat
	movw	$-3657, BasicBlockSignatureTracker # imm = 0xF1B7
	movw	$26, RunTimeSignatureAdjuster
.LBB114_145:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$101, %ax
	xorw	%cx, %ax
	cmpw	$-3640, %ax             # imm = 0xF1C8
	jne	.LBB114_153
# %bb.146:                              # %comp_to_san.split454
	movw	$-3640, BasicBlockSignatureTracker # imm = 0xF1C8
	movw	$142, RunTimeSignatureAdjuster
.LBB114_147:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$140, %ax
	xorw	%cx, %ax
	cmpw	$-3638, %ax             # imm = 0xF1CA
	jne	.LBB114_153
# %bb.148:                              # %comp_to_san.split436
	movw	$-3638, BasicBlockSignatureTracker # imm = 0xF1CA
	movw	$31533, RunTimeSignatureAdjuster # imm = 0x7B2D
	movq	%rbx, %rdi
	xorl	%esi, %esi
	callq	unmake
	movw	$-3638, BasicBlockSignatureTracker # imm = 0xF1CA
	movw	$31533, RunTimeSignatureAdjuster # imm = 0x7B2D
	movw	$-3638, BasicBlockSignatureTracker # imm = 0xF1CA
	movw	$137, RunTimeSignatureAdjuster
.LBB114_149:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$144, %ax
	xorw	%cx, %ax
	cmpw	$-3629, %ax             # imm = 0xF1D3
	jne	.LBB114_153
# %bb.150:                              # %comp_to_san.split432
	movw	$-3629, BasicBlockSignatureTracker # imm = 0xF1D3
	movw	$0, RunTimeSignatureAdjuster
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB114_151:                            # %CFerrorHandler.comp_to_san.loopexit
	jmp	.LBB114_153
.LBB114_152:                            # %CFerrorHandler.comp_to_san.loopexit1
	jmp	.LBB114_153
.LBB114_153:                            # %CFerrorHandler.comp_to_san
	callq	FAULT_DETECTED_CFC
.Lfunc_end114:
	.size	comp_to_san, .Lfunc_end114-comp_to_san
	.cfi_endproc
                                        # -- End function
	.globl	comp_to_coord           # -- Begin function comp_to_coord
	.p2align	4, 0x90
	.type	comp_to_coord,@function
comp_to_coord:                          # @comp_to_coord
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	leaq	16(%rbp), %rsi
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21029, %ax             # imm = 0x5225
	xorw	%cx, %ax
	cmpw	$-3620, %ax             # imm = 0xF1DC
	jne	.LBB115_56
# %bb.1:                                # %comp_to_coord.split168
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21029, %ax             # imm = 0x5225
	xorw	%cx, %ax
	cmpw	$-3620, %ax             # imm = 0xF1DC
	jne	.LBB115_56
# %bb.2:                                # %comp_to_coord.split122
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21029, %ax             # imm = 0x5225
	xorw	%cx, %ax
	cmpw	$-3620, %ax             # imm = 0xF1DC
	jne	.LBB115_56
# %bb.3:                                # %comp_to_coord.split
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rdi, (%r8)
	movl	12(%rsi), %edi
	movl	%edi, (%rcx)
	movl	(%rsi), %edi
	movl	%edi, (%rax)
	movl	4(%rsi), %esi
	movl	%esi, (%rbx)
	movslq	(%rax), %rsi
	movl	Xrank(,%rsi,4), %esi
	movl	%esi, (%r10)
	movslq	(%rbx), %rsi
	movl	Xrank(,%rsi,4), %esi
	movl	%esi, (%r9)
	movl	$97, (%rdx)
	movslq	(%rax), %rsi
	movl	Xfile(,%rsi,4), %esi
	addl	(%rdx), %esi
	subl	$1, %esi
	movb	%sil, (%r14)
	movslq	(%rbx), %rsi
	movl	Xfile(,%rsi,4), %esi
	addl	(%rdx), %esi
	subl	$1, %esi
	movb	%sil, (%r11)
	movl	(%rax), %eax
	movw	$-3620, BasicBlockSignatureTracker # imm = 0xF1DC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB115_6
# %bb.4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-3618, %ax             # imm = 0xF1DE
	jne	.LBB115_56
# %bb.5:                                # %comp_to_coord.split124
	movabsq	$.L.str.399, %rsi
	movq	(%r8), %rdi
	movslq	(%rcx), %rax
	movl	comp_to_coord.type_to_char(,%rax,4), %edx
	movsbl	(%r11), %ecx
	movl	(%r9), %r8d
	movb	$0, %al
	callq	sprintf
	movw	$-3618, BasicBlockSignatureTracker # imm = 0xF1DE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB115_54
.LBB115_6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-3617, %ax             # imm = 0xF1DF
	jne	.LBB115_56
# %bb.7:                                # %comp_to_coord.split126
	movl	(%rcx), %eax
	movw	$-3617, BasicBlockSignatureTracker # imm = 0xF1DF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB115_10
# %bb.8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-3602, %ax             # imm = 0xF1EE
	jne	.LBB115_56
# %bb.9:                                # %comp_to_coord.split132
	movabsq	$.L.str.8.407, %rsi
	movq	(%r8), %rdi
	movsbl	(%r14), %edx
	movl	(%r10), %ecx
	movsbl	(%r11), %r8d
	movl	(%r9), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-3602, BasicBlockSignatureTracker # imm = 0xF1EE
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB115_52
.LBB115_10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$991, %ax               # imm = 0x3DF
	cmpw	$-3584, %ax             # imm = 0xF200
	jne	.LBB115_56
# %bb.11:                               # %comp_to_coord.split130
	movl	(%rcx), %eax
	movw	$-3584, BasicBlockSignatureTracker # imm = 0xF200
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$3, %eax
	je	.LBB115_14
# %bb.12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-3535, %ax             # imm = 0xF231
	jne	.LBB115_56
# %bb.13:                               # %comp_to_coord.split138
	movl	(%rcx), %eax
	movw	$-3535, BasicBlockSignatureTracker # imm = 0xF231
	movw	$49, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB115_16
.LBB115_14:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$56, %ax
	xorw	%cx, %ax
	cmpw	$-3528, %ax             # imm = 0xF238
	jne	.LBB115_56
# %bb.15:                               # %comp_to_coord.split136
	movabsq	$.L.str.15.416, %rsi
	movq	(%r8), %rdi
	movsbl	(%r14), %edx
	movl	(%r10), %ecx
	movsbl	(%r11), %r8d
	movl	(%r9), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-3528, BasicBlockSignatureTracker # imm = 0xF238
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB115_50
.LBB115_16:                             # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29285, %ax            # imm = 0x8D9B
	cmpw	$32682, %ax             # imm = 0x7FAA
	jne	.LBB115_56
# %bb.17:                               # %comp_to_coord.split140
	movw	$32682, BasicBlockSignatureTracker # imm = 0x7FAA
	movw	$-29285, RunTimeSignatureAdjuster # imm = 0x8D9B
# %bb.18:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$10, %ax
	xorw	%dx, %ax
	cmpw	$-3525, %ax             # imm = 0xF23B
	jne	.LBB115_56
# %bb.19:                               # %comp_to_coord.split170
	movl	(%rcx), %eax
	movw	$-3525, BasicBlockSignatureTracker # imm = 0xF23B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$7, %eax
	je	.LBB115_22
# %bb.20:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-3524, %ax             # imm = 0xF23C
	jne	.LBB115_56
# %bb.21:                               # %comp_to_coord.split146
	movl	(%rcx), %eax
	movw	$-3524, BasicBlockSignatureTracker # imm = 0xF23C
	movw	$7, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jne	.LBB115_24
.LBB115_22:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-3522, %ax             # imm = 0xF23E
	jne	.LBB115_56
# %bb.23:                               # %comp_to_coord.split144
	movabsq	$.L.str.16.417, %rsi
	movq	(%r8), %rdi
	movsbl	(%r14), %edx
	movl	(%r10), %ecx
	movsbl	(%r11), %r8d
	movl	(%r9), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-3522, BasicBlockSignatureTracker # imm = 0xF23E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB115_48
.LBB115_24:                             # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13297, %ax             # imm = 0x33F1
	cmpw	$-15923, %ax            # imm = 0xC1CD
	jne	.LBB115_56
# %bb.25:                               # %comp_to_coord.split148
	movw	$-15923, BasicBlockSignatureTracker # imm = 0xC1CD
	movw	$13297, RunTimeSignatureAdjuster # imm = 0x33F1
# %bb.26:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$113, %ax
	xorw	%dx, %ax
	cmpw	$-3507, %ax             # imm = 0xF24D
	jne	.LBB115_56
# %bb.27:                               # %comp_to_coord.split172
	movl	(%rcx), %eax
	movw	$-3507, BasicBlockSignatureTracker # imm = 0xF24D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	je	.LBB115_30
# %bb.28:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$40, %ax
	cmpw	$-3483, %ax             # imm = 0xF265
	jne	.LBB115_56
# %bb.29:                               # %comp_to_coord.split154
	movl	(%rcx), %eax
	movw	$-3483, BasicBlockSignatureTracker # imm = 0xF265
	movw	$40, RunTimeSignatureAdjuster
	cmpl	$12, %eax
	jne	.LBB115_32
.LBB115_30:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$-3471, %ax             # imm = 0xF271
	jne	.LBB115_56
# %bb.31:                               # %comp_to_coord.split152
	movabsq	$.L.str.17.418, %rsi
	movq	(%r8), %rdi
	movsbl	(%r14), %edx
	movl	(%r10), %ecx
	movsbl	(%r11), %r8d
	movl	(%r9), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-3471, BasicBlockSignatureTracker # imm = 0xF271
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB115_46
.LBB115_32:                             # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$31087, %ax             # imm = 0x796F
	cmpw	$-29942, %ax            # imm = 0x8B0A
	jne	.LBB115_56
# %bb.33:                               # %comp_to_coord.split156
	movw	$-29942, BasicBlockSignatureTracker # imm = 0x8B0A
	movw	$31087, RunTimeSignatureAdjuster # imm = 0x796F
# %bb.34:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$17, %ax
	xorw	%dx, %ax
	cmpw	$-3468, %ax             # imm = 0xF274
	jne	.LBB115_56
# %bb.35:                               # %comp_to_coord.split174
	movl	(%rcx), %eax
	movw	$-3468, BasicBlockSignatureTracker # imm = 0xF274
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$5, %eax
	je	.LBB115_38
# %bb.36:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$247, %ax
	cmpw	$-3453, %ax             # imm = 0xF283
	jne	.LBB115_56
# %bb.37:                               # %comp_to_coord.split162
	movl	(%rcx), %eax
	movw	$-3453, BasicBlockSignatureTracker # imm = 0xF283
	movw	$247, RunTimeSignatureAdjuster
	cmpl	$6, %eax
	jne	.LBB115_40
.LBB115_38:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$241, %ax
	xorw	%cx, %ax
	cmpw	$-3451, %ax             # imm = 0xF285
	jne	.LBB115_56
# %bb.39:                               # %comp_to_coord.split160
	movabsq	$.L.str.18.419, %rsi
	movq	(%r8), %rdi
	movsbl	(%r14), %edx
	movl	(%r10), %ecx
	movsbl	(%r11), %r8d
	movl	(%r9), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-3451, BasicBlockSignatureTracker # imm = 0xF285
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB115_44
.LBB115_40:                             # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-27282, %ax            # imm = 0x956E
	cmpw	$26605, %ax             # imm = 0x67ED
	jne	.LBB115_56
# %bb.41:                               # %comp_to_coord.split164
	movw	$26605, BasicBlockSignatureTracker # imm = 0x67ED
	movw	$-27282, RunTimeSignatureAdjuster # imm = 0x956E
# %bb.42:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-3449, %ax             # imm = 0xF287
	jne	.LBB115_56
# %bb.43:                               # %comp_to_coord.split176
	movabsq	$.L.str.19.420, %rsi
	movq	(%r8), %rdi
	movsbl	(%r14), %edx
	movl	(%r10), %ecx
	movsbl	(%r11), %r8d
	movl	(%r9), %r9d
	movb	$0, %al
	callq	sprintf
	movw	$-3449, BasicBlockSignatureTracker # imm = 0xF287
	movw	$2, RunTimeSignatureAdjuster
.LBB115_44:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-3426, %ax             # imm = 0xF29E
	jne	.LBB115_56
# %bb.45:                               # %comp_to_coord.split166
	movw	$-3426, BasicBlockSignatureTracker # imm = 0xF29E
	movw	$239, RunTimeSignatureAdjuster
.LBB115_46:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$218, %ax
	xorw	%cx, %ax
	cmpw	$-3413, %ax             # imm = 0xF2AB
	jne	.LBB115_56
# %bb.47:                               # %comp_to_coord.split158
	movw	$-3413, BasicBlockSignatureTracker # imm = 0xF2AB
	movw	$149, RunTimeSignatureAdjuster
.LBB115_48:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$130, %ax
	xorw	%cx, %ax
	cmpw	$-3396, %ax             # imm = 0xF2BC
	jne	.LBB115_56
# %bb.49:                               # %comp_to_coord.split150
	movw	$-3396, BasicBlockSignatureTracker # imm = 0xF2BC
	movw	$132, RunTimeSignatureAdjuster
.LBB115_50:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$223, %ax
	xorw	%cx, %ax
	cmpw	$-3353, %ax             # imm = 0xF2E7
	jne	.LBB115_56
# %bb.51:                               # %comp_to_coord.split142
	movw	$-3353, BasicBlockSignatureTracker # imm = 0xF2E7
	movw	$777, RunTimeSignatureAdjuster # imm = 0x309
.LBB115_52:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$792, %ax               # imm = 0x318
	xorw	%cx, %ax
	cmpw	$-3338, %ax             # imm = 0xF2F6
	jne	.LBB115_56
# %bb.53:                               # %comp_to_coord.split134
	movw	$-3338, BasicBlockSignatureTracker # imm = 0xF2F6
	movw	$808, RunTimeSignatureAdjuster # imm = 0x328
.LBB115_54:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$728, %ax               # imm = 0x2D8
	xorw	%cx, %ax
	cmpw	$-3322, %ax             # imm = 0xF306
	jne	.LBB115_56
# %bb.55:                               # %comp_to_coord.split128
	movw	$-3322, BasicBlockSignatureTracker # imm = 0xF306
	movw	$20695, RunTimeSignatureAdjuster # imm = 0x50D7
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB115_56:                             # %CFerrorHandler.comp_to_coord
	callq	FAULT_DETECTED_CFC
.Lfunc_end115:
	.size	comp_to_coord, .Lfunc_end115-comp_to_coord
	.cfi_endproc
                                        # -- End function
	.globl	display_board           # -- Begin function display_board
	.p2align	4, 0x90
	.type	display_board,@function
display_board:                          # @display_board
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.1:                                # %display_board.split207
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.2:                                # %display_board.split205
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.3:                                # %display_board.split203
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.4:                                # %display_board.split201
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.5:                                # %display_board.split199
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.6:                                # %display_board.split197
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.7:                                # %display_board.split195
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.8:                                # %display_board.split147
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.9:                                # %display_board.split145
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.10:                               # %display_board.split143
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.11:                               # %display_board.split141
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-6145, %ax             # imm = 0xE7FF
	xorw	%cx, %ax
	cmpw	$-3295, %ax             # imm = 0xF321
	jne	.LBB116_63
# %bb.12:                               # %display_board.split
	movabsq	$.Ldisplay_board.piece_rep, %rax
	movabsq	$.L.str.20.423, %rcx
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r14
	addq	$-112, %r14
	movq	%r14, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, -56(%rbp)         # 8-byte Spill
	movq	%rdx, %rsp
	movq	%rdi, (%r15)
	movl	%esi, (%r13)
	movq	%rcx, (%rbx)
	movq	%r14, %rdi
	movq	%rax, %rsi
	movl	$112, %edx
	callq	memcpy
	movl	(%r13), %eax
	cltd
	movl	$2, %ecx
	idivl	%ecx
	movw	$-3295, BasicBlockSignatureTracker # imm = 0xF321
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %edx
	je	.LBB116_35
# %bb.13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$23, %ax
	cmpw	$-3274, %ax             # imm = 0xF336
	jne	.LBB116_63
# %bb.14:                               # %display_board.split149
	movabsq	$.L.str.35.424, %rsi
	movq	(%r15), %rdi
	movq	(%rbx), %rdx
	movb	$0, %al
	callq	fprintf
	movl	$1, (%r12)
	movw	$-3274, BasicBlockSignatureTracker # imm = 0xF336
	movw	$0, RunTimeSignatureAdjuster
.LBB116_15:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB116_19 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-3273, %ax             # imm = 0xF337
	jne	.LBB116_60
# %bb.16:                               # %display_board.split153
                                        #   in Loop: Header=BB116_15 Depth=1
	movl	(%r12), %eax
	movw	$-3273, BasicBlockSignatureTracker # imm = 0xF337
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jg	.LBB116_33
# %bb.17:                               #   in Loop: Header=BB116_15 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$118, %ax
	cmpw	$-3263, %ax             # imm = 0xF341
	jne	.LBB116_60
# %bb.18:                               # %display_board.split155
                                        #   in Loop: Header=BB116_15 Depth=1
	movabsq	$.L.str.36.425, %rsi
	movl	$9, %edx
	movq	(%r15), %rdi
	subl	(%r12), %edx
	movb	$0, %al
	callq	fprintf
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-3263, BasicBlockSignatureTracker # imm = 0xF341
	movw	$0, RunTimeSignatureAdjuster
.LBB116_19:                             #   Parent Loop BB116_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-3261, %ax             # imm = 0xF343
	jne	.LBB116_59
# %bb.20:                               # %display_board.split159
                                        #   in Loop: Header=BB116_19 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-3261, BasicBlockSignatureTracker # imm = 0xF343
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	jg	.LBB116_29
# %bb.21:                               #   in Loop: Header=BB116_19 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-3251, %ax             # imm = 0xF34D
	jne	.LBB116_59
# %bb.22:                               # %display_board.split161
                                        #   in Loop: Header=BB116_19 Depth=2
	movl	$120, %eax
	imull	$12, (%r12), %ecx
	subl	%ecx, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	addl	(%rcx), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	(%rcx), %rax
	movl	board(,%rax,4), %eax
	movw	$-3251, BasicBlockSignatureTracker # imm = 0xF34D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB116_25
# %bb.23:                               #   in Loop: Header=BB116_19 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-3249, %ax             # imm = 0xF34F
	jne	.LBB116_59
# %bb.24:                               # %display_board.split165
                                        #   in Loop: Header=BB116_19 Depth=2
	movabsq	$.L.str.37.426, %rsi
	movq	(%r15), %rdi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movq	(%r14,%rax,8), %rdx
	movb	$0, %al
	callq	fprintf
	movw	$-3249, BasicBlockSignatureTracker # imm = 0xF34F
	movw	$2, RunTimeSignatureAdjuster
.LBB116_25:                             #   in Loop: Header=BB116_19 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-3245, %ax             # imm = 0xF353
	jne	.LBB116_59
# %bb.26:                               # %display_board.split167
                                        #   in Loop: Header=BB116_19 Depth=2
	movw	$-3245, BasicBlockSignatureTracker # imm = 0xF353
	movw	$0, RunTimeSignatureAdjuster
# %bb.27:                               #   in Loop: Header=BB116_19 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-3240, %ax             # imm = 0xF358
	jne	.LBB116_59
# %bb.28:                               # %display_board.split169
                                        #   in Loop: Header=BB116_19 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-3240, BasicBlockSignatureTracker # imm = 0xF358
	movw	$25, RunTimeSignatureAdjuster
	jmp	.LBB116_19
.LBB116_29:                             #   in Loop: Header=BB116_15 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-3234, %ax             # imm = 0xF35E
	jne	.LBB116_60
# %bb.30:                               # %display_board.split163
                                        #   in Loop: Header=BB116_15 Depth=1
	movabsq	$.L.str.38.427, %rsi
	movq	(%r15), %rdi
	movq	(%rbx), %rdx
	movb	$0, %al
	callq	fprintf
	movw	$-3234, BasicBlockSignatureTracker # imm = 0xF35E
	movw	$0, RunTimeSignatureAdjuster
# %bb.31:                               #   in Loop: Header=BB116_15 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-3232, %ax             # imm = 0xF360
	jne	.LBB116_60
# %bb.32:                               # %display_board.split171
                                        #   in Loop: Header=BB116_15 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$-3232, BasicBlockSignatureTracker # imm = 0xF360
	movw	$86, RunTimeSignatureAdjuster
	jmp	.LBB116_15
.LBB116_33:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$66, %ax
	cmpw	$-3211, %ax             # imm = 0xF375
	jne	.LBB116_63
# %bb.34:                               # %display_board.split157
	movabsq	$.L.str.39.428, %rsi
	movq	(%r15), %rdi
	movb	$0, %al
	callq	fprintf
	movw	$-3211, BasicBlockSignatureTracker # imm = 0xF375
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB116_57
.LBB116_35:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$95, %ax
	cmpw	$-3202, %ax             # imm = 0xF37E
	jne	.LBB116_63
# %bb.36:                               # %display_board.split151
	movabsq	$.L.str.35.424, %rsi
	movq	(%r15), %rdi
	movq	(%rbx), %rdx
	movb	$0, %al
	callq	fprintf
	movl	$1, (%r12)
	movw	$-3202, BasicBlockSignatureTracker # imm = 0xF37E
	movw	$0, RunTimeSignatureAdjuster
.LBB116_37:                             # =>This Loop Header: Depth=1
                                        #     Child Loop BB116_41 Depth 2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$225, %ax
	xorw	%cx, %ax
	cmpw	$-3169, %ax             # imm = 0xF39F
	jne	.LBB116_62
# %bb.38:                               # %display_board.split175
                                        #   in Loop: Header=BB116_37 Depth=1
	movl	(%r12), %eax
	movw	$-3169, BasicBlockSignatureTracker # imm = 0xF39F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$8, %eax
	jg	.LBB116_55
# %bb.39:                               #   in Loop: Header=BB116_37 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$87, %ax
	cmpw	$-3128, %ax             # imm = 0xF3C8
	jne	.LBB116_62
# %bb.40:                               # %display_board.split177
                                        #   in Loop: Header=BB116_37 Depth=1
	movabsq	$.L.str.36.425, %rsi
	movq	(%r15), %rdi
	movl	(%r12), %edx
	movb	$0, %al
	callq	fprintf
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	$0, (%rax)
	movw	$-3128, BasicBlockSignatureTracker # imm = 0xF3C8
	movw	$0, RunTimeSignatureAdjuster
.LBB116_41:                             #   Parent Loop BB116_37 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$-3116, %ax             # imm = 0xF3D4
	jne	.LBB116_61
# %bb.42:                               # %display_board.split181
                                        #   in Loop: Header=BB116_41 Depth=2
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-3116, BasicBlockSignatureTracker # imm = 0xF3D4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$11, %eax
	jg	.LBB116_51
# %bb.43:                               #   in Loop: Header=BB116_41 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$52, %ax
	cmpw	$-3104, %ax             # imm = 0xF3E0
	jne	.LBB116_61
# %bb.44:                               # %display_board.split183
                                        #   in Loop: Header=BB116_41 Depth=2
	imull	$12, (%r12), %eax
	addl	$24, %eax
	movq	-48(%rbp), %rcx         # 8-byte Reload
	subl	(%rcx), %eax
	movq	-56(%rbp), %rcx         # 8-byte Reload
	movl	%eax, (%rcx)
	movslq	(%rcx), %rax
	movl	board(,%rax,4), %eax
	movw	$-3104, BasicBlockSignatureTracker # imm = 0xF3E0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB116_47
# %bb.45:                               #   in Loop: Header=BB116_41 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-3102, %ax             # imm = 0xF3E2
	jne	.LBB116_61
# %bb.46:                               # %display_board.split187
                                        #   in Loop: Header=BB116_41 Depth=2
	movabsq	$.L.str.37.426, %rsi
	movq	(%r15), %rdi
	movq	-56(%rbp), %rax         # 8-byte Reload
	movslq	(%rax), %rax
	movslq	board(,%rax,4), %rax
	movq	(%r14,%rax,8), %rdx
	movb	$0, %al
	callq	fprintf
	movw	$-3102, BasicBlockSignatureTracker # imm = 0xF3E2
	movw	$2, RunTimeSignatureAdjuster
.LBB116_47:                             #   in Loop: Header=BB116_41 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-3099, %ax             # imm = 0xF3E5
	jne	.LBB116_61
# %bb.48:                               # %display_board.split189
                                        #   in Loop: Header=BB116_41 Depth=2
	movw	$-3099, BasicBlockSignatureTracker # imm = 0xF3E5
	movw	$0, RunTimeSignatureAdjuster
# %bb.49:                               #   in Loop: Header=BB116_41 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-3092, %ax             # imm = 0xF3EC
	jne	.LBB116_61
# %bb.50:                               # %display_board.split191
                                        #   in Loop: Header=BB116_41 Depth=2
	movq	-48(%rbp), %rcx         # 8-byte Reload
	movl	(%rcx), %eax
	addl	$1, %eax
	movl	%eax, (%rcx)
	movw	$-3092, BasicBlockSignatureTracker # imm = 0xF3EC
	movw	$36, RunTimeSignatureAdjuster
	jmp	.LBB116_41
.LBB116_51:                             #   in Loop: Header=BB116_37 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$38, %ax
	cmpw	$-3086, %ax             # imm = 0xF3F2
	jne	.LBB116_62
# %bb.52:                               # %display_board.split185
                                        #   in Loop: Header=BB116_37 Depth=1
	movabsq	$.L.str.38.427, %rsi
	movq	(%r15), %rdi
	movq	(%rbx), %rdx
	movb	$0, %al
	callq	fprintf
	movw	$-3086, BasicBlockSignatureTracker # imm = 0xF3F2
	movw	$0, RunTimeSignatureAdjuster
# %bb.53:                               #   in Loop: Header=BB116_37 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-3075, %ax             # imm = 0xF3FD
	jne	.LBB116_62
# %bb.54:                               # %display_board.split193
                                        #   in Loop: Header=BB116_37 Depth=1
	movl	(%r12), %eax
	addl	$1, %eax
	movl	%eax, (%r12)
	movw	$-3075, BasicBlockSignatureTracker # imm = 0xF3FD
	movw	$131, RunTimeSignatureAdjuster
	jmp	.LBB116_37
.LBB116_55:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$96, %ax
	cmpw	$-3073, %ax             # imm = 0xF3FF
	jne	.LBB116_63
# %bb.56:                               # %display_board.split179
	movabsq	$.L.str.40.429, %rsi
	movq	(%r15), %rdi
	movb	$0, %al
	callq	fprintf
	movw	$-3073, BasicBlockSignatureTracker # imm = 0xF3FF
	movw	$138, RunTimeSignatureAdjuster
.LBB116_57:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1904, %ax              # imm = 0x770
	xorw	%cx, %ax
	cmpw	$-3067, %ax             # imm = 0xF405
	jne	.LBB116_63
# %bb.58:                               # %display_board.split173
	movw	$-3067, BasicBlockSignatureTracker # imm = 0xF405
	movw	$-8007, RunTimeSignatureAdjuster # imm = 0xE0B9
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB116_59:                             # %CFerrorHandler.display_board.loopexit
	jmp	.LBB116_63
.LBB116_60:                             # %CFerrorHandler.display_board.loopexit1
	jmp	.LBB116_63
.LBB116_61:                             # %CFerrorHandler.display_board.loopexit2
	jmp	.LBB116_63
.LBB116_62:                             # %CFerrorHandler.display_board.loopexit3
	jmp	.LBB116_63
.LBB116_63:                             # %CFerrorHandler.display_board
	callq	FAULT_DETECTED_CFC
.Lfunc_end116:
	.size	display_board, .Lfunc_end116-display_board
	.cfi_endproc
                                        # -- End function
	.globl	init_game               # -- Begin function init_game
	.p2align	4, 0x90
	.type	init_game,@function
init_game:                              # @init_game
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11405, %ax             # imm = 0x2C8D
	xorw	%cx, %ax
	cmpw	$-3054, %ax             # imm = 0xF412
	jne	.LBB117_7
# %bb.1:                                # %init_game.split36
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11405, %ax             # imm = 0x2C8D
	xorw	%cx, %ax
	cmpw	$-3054, %ax             # imm = 0xF412
	jne	.LBB117_7
# %bb.2:                                # %init_game.split34
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11405, %ax             # imm = 0x2C8D
	xorw	%cx, %ax
	cmpw	$-3054, %ax             # imm = 0xF412
	jne	.LBB117_7
# %bb.3:                                # %init_game.split32
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11405, %ax             # imm = 0x2C8D
	xorw	%cx, %ax
	cmpw	$-3054, %ax             # imm = 0xF412
	jne	.LBB117_7
# %bb.4:                                # %init_game.split30
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11405, %ax             # imm = 0x2C8D
	xorw	%cx, %ax
	cmpw	$-3054, %ax             # imm = 0xF412
	jne	.LBB117_7
# %bb.5:                                # %init_game.split28
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11405, %ax             # imm = 0x2C8D
	xorw	%cx, %ax
	cmpw	$-3054, %ax             # imm = 0xF412
	jne	.LBB117_7
# %bb.6:                                # %init_game.split
	movabsq	$holding, %r14
	movabsq	$is_promoted, %r15
	movabsq	$moved, %r12
	movabsq	$board, %r13
	movabsq	$.Linit_game.init_board, %rsi
	movq	%rsp, %rbx
	addq	$-576, %rbx             # imm = 0xFDC0
	movq	%rbx, %rsp
	movq	%rbx, %rdi
	movl	$576, %edx              # imm = 0x240
	callq	memcpy
	movq	%r13, %rdi
	movq	%rbx, %rsi
	movl	$576, %edx              # imm = 0x240
	callq	memcpy
	movq	%r12, %rdi
	xorl	%esi, %esi
	movl	$576, %edx              # imm = 0x240
	callq	memset
	movl	$1, white_to_move
	movl	$0, ep_square
	movl	$30, wking_loc
	movl	$114, bking_loc
	movl	$0, white_castled
	movl	$0, black_castled
	movl	$0, result
	movl	$0, captures
	movl	$32, piece_count
	movl	$0, Material
	movq	%r15, %rdi
	xorl	%esi, %esi
	movl	$248, %edx
	callq	memset
	movq	%r14, %rdi
	xorl	%esi, %esi
	movl	$128, %edx
	callq	memset
	movl	$0, white_hand_eval
	movl	$0, black_hand_eval
	movw	$-3054, BasicBlockSignatureTracker # imm = 0xF412
	movw	$-8146, RunTimeSignatureAdjuster # imm = 0xE02E
	callq	reset_piece_square
	movw	$-3054, BasicBlockSignatureTracker # imm = 0xF412
	movw	$-8146, RunTimeSignatureAdjuster # imm = 0xE02E
	movl	$0, bookidx
	movl	$0, book_ply
	movl	$0, fifty
	movl	$0, ply
	movl	$0, phase
	movw	$-3054, BasicBlockSignatureTracker # imm = 0xF412
	movw	$21132, RunTimeSignatureAdjuster # imm = 0x528C
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB117_7:                              # %CFerrorHandler.init_game
	callq	FAULT_DETECTED_CFC
.Lfunc_end117:
	.size	init_game, .Lfunc_end117-init_game
	.cfi_endproc
                                        # -- End function
	.globl	reset_piece_square      # -- Begin function reset_piece_square
	.p2align	4, 0x90
	.type	reset_piece_square,@function
reset_piece_square:                     # @reset_piece_square
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-8168, %ax             # imm = 0xE018
	xorw	%cx, %ax
	cmpw	$-3036, %ax             # imm = 0xF424
	jne	.LBB118_46
# %bb.1:                                # %reset_piece_square.split154
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-8168, %ax             # imm = 0xE018
	xorw	%cx, %ax
	cmpw	$-3036, %ax             # imm = 0xF424
	jne	.LBB118_46
# %bb.2:                                # %reset_piece_square.split120
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-8168, %ax             # imm = 0xE018
	xorw	%cx, %ax
	cmpw	$-3036, %ax             # imm = 0xF424
	jne	.LBB118_46
# %bb.3:                                # %reset_piece_square.split118
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-8168, %ax             # imm = 0xE018
	xorw	%cx, %ax
	cmpw	$-3036, %ax             # imm = 0xF424
	jne	.LBB118_46
# %bb.4:                                # %reset_piece_square.split116
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-8168, %ax             # imm = 0xE018
	xorw	%cx, %ax
	cmpw	$-3036, %ax             # imm = 0xF424
	jne	.LBB118_46
# %bb.5:                                # %reset_piece_square.split114
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-8168, %ax             # imm = 0xE018
	xorw	%cx, %ax
	cmpw	$-3036, %ax             # imm = 0xF424
	jne	.LBB118_46
# %bb.6:                                # %reset_piece_square.split112
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-8168, %ax             # imm = 0xE018
	xorw	%cx, %ax
	cmpw	$-3036, %ax             # imm = 0xF424
	jne	.LBB118_46
# %bb.7:                                # %reset_piece_square.split110
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-8168, %ax             # imm = 0xE018
	xorw	%cx, %ax
	cmpw	$-3036, %ax             # imm = 0xF424
	jne	.LBB118_46
# %bb.8:                                # %reset_piece_square.split108
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-8168, %ax             # imm = 0xE018
	xorw	%cx, %ax
	cmpw	$-3036, %ax             # imm = 0xF424
	jne	.LBB118_46
# %bb.9:                                # %reset_piece_square.split
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r15
	addq	$-576, %r15             # imm = 0xFDC0
	movq	%r15, %rsp
	movq	%r15, %rdi
	xorl	%esi, %esi
	movl	$576, %edx              # imm = 0x240
	callq	memset
	movl	$1, (%rbx)
	movw	$-3036, BasicBlockSignatureTracker # imm = 0xF424
	movw	$0, RunTimeSignatureAdjuster
.LBB118_10:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-3024, %ax             # imm = 0xF430
	jne	.LBB118_45
# %bb.11:                               # %reset_piece_square.split122
                                        #   in Loop: Header=BB118_10 Depth=1
	movl	(%rbx), %eax
	movl	piece_count, %ecx
	movw	$-3024, BasicBlockSignatureTracker # imm = 0xF430
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB118_20
# %bb.12:                               #   in Loop: Header=BB118_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-3020, %ax             # imm = 0xF434
	jne	.LBB118_45
# %bb.13:                               # %reset_piece_square.split124
                                        #   in Loop: Header=BB118_10 Depth=1
	movslq	(%rbx), %rax
	movl	is_promoted(,%rax,4), %eax
	movw	$-3020, BasicBlockSignatureTracker # imm = 0xF434
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB118_16
# %bb.14:                               #   in Loop: Header=BB118_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-3019, %ax             # imm = 0xF435
	jne	.LBB118_45
# %bb.15:                               # %reset_piece_square.split128
                                        #   in Loop: Header=BB118_10 Depth=1
	movslq	(%rbx), %rax
	movslq	pieces(,%rax,4), %rax
	movl	$1, (%r15,%rax,4)
	movw	$-3019, BasicBlockSignatureTracker # imm = 0xF435
	movw	$1, RunTimeSignatureAdjuster
.LBB118_16:                             #   in Loop: Header=BB118_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-3014, %ax             # imm = 0xF43A
	jne	.LBB118_45
# %bb.17:                               # %reset_piece_square.split130
                                        #   in Loop: Header=BB118_10 Depth=1
	movw	$-3014, BasicBlockSignatureTracker # imm = 0xF43A
	movw	$0, RunTimeSignatureAdjuster
# %bb.18:                               #   in Loop: Header=BB118_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$127, %ax
	cmpw	$-3003, %ax             # imm = 0xF445
	jne	.LBB118_45
# %bb.19:                               # %reset_piece_square.split132
                                        #   in Loop: Header=BB118_10 Depth=1
	movl	(%rbx), %eax
	addl	$1, %eax
	movl	%eax, (%rbx)
	movw	$-3003, BasicBlockSignatureTracker # imm = 0xF445
	movw	$97, RunTimeSignatureAdjuster
	jmp	.LBB118_10
.LBB118_20:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$125, %ax
	cmpw	$-2995, %ax             # imm = 0xF44D
	jne	.LBB118_46
# %bb.21:                               # %reset_piece_square.split126
	movabsq	$is_promoted, %r14
	movabsq	$pieces, %rdi
	movl	$0, Material
	movl	$0, piece_count
	xorl	%esi, %esi
	movl	$248, %edx
	callq	memset
	movq	%r14, %rdi
	xorl	%esi, %esi
	movl	$248, %edx
	callq	memset
	movl	$0, pieces
	movl	$26, (%rbx)
	movw	$-2995, BasicBlockSignatureTracker # imm = 0xF44D
	movw	$0, RunTimeSignatureAdjuster
.LBB118_22:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-2988, %ax             # imm = 0xF454
	jne	.LBB118_44
# %bb.23:                               # %reset_piece_square.split134
                                        #   in Loop: Header=BB118_22 Depth=1
	movl	(%rbx), %eax
	movw	$-2988, BasicBlockSignatureTracker # imm = 0xF454
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$118, %eax
	jge	.LBB118_42
# %bb.24:                               #   in Loop: Header=BB118_22 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$37, %ax
	cmpw	$-2959, %ax             # imm = 0xF471
	jne	.LBB118_44
# %bb.25:                               # %reset_piece_square.split136
                                        #   in Loop: Header=BB118_22 Depth=1
	movslq	(%rbx), %rax
	movl	board(,%rax,4), %eax
	movw	$-2959, BasicBlockSignatureTracker # imm = 0xF471
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB118_36
# %bb.26:                               #   in Loop: Header=BB118_22 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-2957, %ax             # imm = 0xF473
	jne	.LBB118_44
# %bb.27:                               # %reset_piece_square.split140
                                        #   in Loop: Header=BB118_22 Depth=1
	movslq	(%rbx), %rax
	movl	board(,%rax,4), %eax
	movw	$-2957, BasicBlockSignatureTracker # imm = 0xF473
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jge	.LBB118_36
# %bb.28:                               # %Buffer__
                                        #   in Loop: Header=BB118_22 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-1602, %ax             # imm = 0xF9BE
	cmpw	$3533, %ax              # imm = 0xDCD
	jne	.LBB118_44
# %bb.29:                               # %reset_piece_square.split144
                                        #   in Loop: Header=BB118_22 Depth=1
	movw	$3533, BasicBlockSignatureTracker # imm = 0xDCD
	movw	$-1602, RunTimeSignatureAdjuster # imm = 0xF9BE
# %bb.30:                               #   in Loop: Header=BB118_22 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-2953, %ax             # imm = 0xF477
	jne	.LBB118_44
# %bb.31:                               # %reset_piece_square.split156
                                        #   in Loop: Header=BB118_22 Depth=1
	movslq	(%rbx), %rax
	movslq	board(,%rax,4), %rax
	movl	material(,%rax,4), %eax
	addl	Material, %eax
	movl	%eax, Material
	movl	piece_count, %eax
	addl	$1, %eax
	movl	%eax, piece_count
	movl	(%rbx), %eax
	movslq	piece_count, %rcx
	movl	%eax, pieces(,%rcx,4)
	movl	piece_count, %eax
	movslq	(%rbx), %rcx
	movl	%eax, squares(,%rcx,4)
	movslq	(%rbx), %rax
	movl	(%r15,%rax,4), %eax
	movw	$-2953, BasicBlockSignatureTracker # imm = 0xF477
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB118_34
# %bb.32:                               #   in Loop: Header=BB118_22 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$246, %ax
	cmpw	$-2943, %ax             # imm = 0xF481
	jne	.LBB118_44
# %bb.33:                               # %reset_piece_square.split146
                                        #   in Loop: Header=BB118_22 Depth=1
	movslq	piece_count, %rax
	movl	$1, is_promoted(,%rax,4)
	movw	$-2943, BasicBlockSignatureTracker # imm = 0xF481
	movw	$246, RunTimeSignatureAdjuster
.LBB118_34:                             #   in Loop: Header=BB118_22 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$240, %ax
	xorw	%cx, %ax
	cmpw	$-2937, %ax             # imm = 0xF487
	jne	.LBB118_44
# %bb.35:                               # %reset_piece_square.split148
                                        #   in Loop: Header=BB118_22 Depth=1
	movw	$-2937, BasicBlockSignatureTracker # imm = 0xF487
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB118_38
.LBB118_36:                             #   in Loop: Header=BB118_22 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$250, %ax
	xorw	%cx, %ax
	cmpw	$-2933, %ax             # imm = 0xF48B
	jne	.LBB118_44
# %bb.37:                               # %reset_piece_square.split142
                                        #   in Loop: Header=BB118_22 Depth=1
	movslq	(%rbx), %rax
	movl	$0, squares(,%rax,4)
	movw	$-2933, BasicBlockSignatureTracker # imm = 0xF48B
	movw	$12, RunTimeSignatureAdjuster
.LBB118_38:                             #   in Loop: Header=BB118_22 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-2923, %ax             # imm = 0xF495
	jne	.LBB118_44
# %bb.39:                               # %reset_piece_square.split150
                                        #   in Loop: Header=BB118_22 Depth=1
	movw	$-2923, BasicBlockSignatureTracker # imm = 0xF495
	movw	$0, RunTimeSignatureAdjuster
# %bb.40:                               #   in Loop: Header=BB118_22 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-2920, %ax             # imm = 0xF498
	jne	.LBB118_44
# %bb.41:                               # %reset_piece_square.split152
                                        #   in Loop: Header=BB118_22 Depth=1
	movl	(%rbx), %eax
	addl	$1, %eax
	movl	%eax, (%rbx)
	movw	$-2920, BasicBlockSignatureTracker # imm = 0xF498
	movw	$213, RunTimeSignatureAdjuster
	jmp	.LBB118_22
.LBB118_42:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$207, %ax
	cmpw	$-2917, %ax             # imm = 0xF49B
	jne	.LBB118_46
# %bb.43:                               # %reset_piece_square.split138
	movw	$-2917, BasicBlockSignatureTracker # imm = 0xF49B
	movw	$-7147, RunTimeSignatureAdjuster # imm = 0xE415
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB118_44:                             # %CFerrorHandler.reset_piece_square.loopexit
	jmp	.LBB118_46
.LBB118_45:                             # %CFerrorHandler.reset_piece_square.loopexit1
	jmp	.LBB118_46
.LBB118_46:                             # %CFerrorHandler.reset_piece_square
	callq	FAULT_DETECTED_CFC
.Lfunc_end118:
	.size	reset_piece_square, .Lfunc_end118-reset_piece_square
	.cfi_endproc
                                        # -- End function
	.globl	is_move                 # -- Begin function is_move
	.p2align	4, 0x90
	.type	is_move,@function
is_move:                                # @is_move
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r14
	pushq	%rbx
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$10690, %ax             # imm = 0x29C2
	xorw	%cx, %ax
	cmpw	$-2893, %ax             # imm = 0xF4B3
	jne	.LBB119_36
# %bb.1:                                # %is_move.split
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rdi, (%rbx)
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movq	(%rbx), %rcx
	movsbl	(%rcx), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$1024, %eax             # imm = 0x400
	movw	$-2893, BasicBlockSignatureTracker # imm = 0xF4B3
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB119_16
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$112, %ax
	cmpw	$-2877, %ax             # imm = 0xF4C3
	jne	.LBB119_36
# %bb.3:                                # %is_move.split77
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movq	(%rbx), %rcx
	movsbl	1(%rcx), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$2048, %eax             # imm = 0x800
	movw	$-2877, BasicBlockSignatureTracker # imm = 0xF4C3
	movw	$112, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB119_16
# %bb.4:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-6227, %ax             # imm = 0xE7AD
	cmpw	$4974, %ax              # imm = 0x136E
	jne	.LBB119_36
# %bb.5:                                # %is_move.split81
	movw	$4974, BasicBlockSignatureTracker # imm = 0x136E
	movw	$-6227, RunTimeSignatureAdjuster # imm = 0xE7AD
# %bb.6:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$23, %ax
	xorw	%cx, %ax
	cmpw	$-2860, %ax             # imm = 0xF4D4
	jne	.LBB119_36
# %bb.7:                                # %is_move.split99
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movq	(%rbx), %rcx
	movsbl	2(%rcx), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$1024, %eax             # imm = 0x400
	movw	$-2860, BasicBlockSignatureTracker # imm = 0xF4D4
	movw	$103, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB119_16
# %bb.8:                                # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-22832, %ax            # imm = 0xA6D0
	cmpw	$20996, %ax             # imm = 0x5204
	jne	.LBB119_36
# %bb.9:                                # %is_move.split83
	movw	$20996, BasicBlockSignatureTracker # imm = 0x5204
	movw	$-22832, RunTimeSignatureAdjuster # imm = 0xA6D0
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$13, %ax
	xorw	%cx, %ax
	cmpw	$-2855, %ax             # imm = 0xF4D9
	jne	.LBB119_36
# %bb.11:                               # %is_move.split101
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movq	(%rbx), %rcx
	movsbl	3(%rcx), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$2048, %eax             # imm = 0x800
	movw	$-2855, BasicBlockSignatureTracker # imm = 0xF4D9
	movw	$106, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB119_16
# %bb.12:                               # %Buffer__2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-17009, %ax            # imm = 0xBD8F
	cmpw	$18774, %ax             # imm = 0x4956
	jne	.LBB119_36
# %bb.13:                               # %is_move.split85
	movw	$18774, BasicBlockSignatureTracker # imm = 0x4956
	movw	$-17009, RunTimeSignatureAdjuster # imm = 0xBD8F
# %bb.14:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2, %ax
	xorw	%cx, %ax
	cmpw	$-2853, %ax             # imm = 0xF4DB
	jne	.LBB119_36
# %bb.15:                               # %is_move.split103
	movl	$1, (%r14)
	movw	$-2853, BasicBlockSignatureTracker # imm = 0xF4DB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB119_34
.LBB119_16:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$87, %ax
	xorw	%cx, %ax
	cmpw	$-2844, %ax             # imm = 0xF4E4
	jne	.LBB119_36
# %bb.17:                               # %is_move.split79
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movq	(%rbx), %rcx
	movsbl	(%rcx), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$1024, %eax             # imm = 0x400
	movw	$-2844, BasicBlockSignatureTracker # imm = 0xF4E4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB119_32
# %bb.18:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-2836, %ax             # imm = 0xF4EC
	jne	.LBB119_36
# %bb.19:                               # %is_move.split89
	movq	(%rbx), %rax
	movsbl	1(%rax), %eax
	movw	$-2836, BasicBlockSignatureTracker # imm = 0xF4EC
	movw	$8, RunTimeSignatureAdjuster
	cmpl	$64, %eax
	jne	.LBB119_32
# %bb.20:                               # %Buffer__3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7874, %ax              # imm = 0x1EC2
	cmpw	$-5586, %ax             # imm = 0xEA2E
	jne	.LBB119_36
# %bb.21:                               # %is_move.split93
	movw	$-5586, BasicBlockSignatureTracker # imm = 0xEA2E
	movw	$7874, RunTimeSignatureAdjuster # imm = 0x1EC2
# %bb.22:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$30, %ax
	xorw	%cx, %ax
	cmpw	$-2830, %ax             # imm = 0xF4F2
	jne	.LBB119_36
# %bb.23:                               # %is_move.split105
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movq	(%rbx), %rcx
	movsbl	2(%rcx), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$1024, %eax             # imm = 0x400
	movw	$-2830, BasicBlockSignatureTracker # imm = 0xF4F2
	movw	$22, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB119_32
# %bb.24:                               # %Buffer__4
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-3549, %ax             # imm = 0xF223
	cmpw	$1745, %ax              # imm = 0x6D1
	jne	.LBB119_36
# %bb.25:                               # %is_move.split95
	movw	$1745, BasicBlockSignatureTracker # imm = 0x6D1
	movw	$-3549, RunTimeSignatureAdjuster # imm = 0xF223
# %bb.26:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-2828, %ax             # imm = 0xF4F4
	jne	.LBB119_36
# %bb.27:                               # %is_move.split107
	callq	__ctype_b_loc
	movq	(%rax), %rax
	movq	(%rbx), %rcx
	movsbl	3(%rcx), %ecx
	movslq	%ecx, %rcx
	movzwl	(%rax,%rcx,2), %eax
	andl	$2048, %eax             # imm = 0x800
	movw	$-2828, BasicBlockSignatureTracker # imm = 0xF4F4
	movw	$16, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB119_32
# %bb.28:                               # %Buffer__5
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9602, %ax              # imm = 0x2582
	cmpw	$-11914, %ax            # imm = 0xD176
	jne	.LBB119_36
# %bb.29:                               # %is_move.split97
	movw	$-11914, BasicBlockSignatureTracker # imm = 0xD176
	movw	$9602, RunTimeSignatureAdjuster # imm = 0x2582
# %bb.30:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-2821, %ax             # imm = 0xF4FB
	jne	.LBB119_36
# %bb.31:                               # %is_move.split109
	movl	$1, (%r14)
	movw	$-2821, BasicBlockSignatureTracker # imm = 0xF4FB
	movw	$32, RunTimeSignatureAdjuster
	jmp	.LBB119_34
.LBB119_32:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$489, %ax               # imm = 0x1E9
	xorw	%cx, %ax
	cmpw	$-2803, %ax             # imm = 0xF50D
	jne	.LBB119_36
# %bb.33:                               # %is_move.split91
	movl	$0, (%r14)
	movw	$-2803, BasicBlockSignatureTracker # imm = 0xF50D
	movw	$470, RunTimeSignatureAdjuster # imm = 0x1D6
.LBB119_34:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$506, %ax               # imm = 0x1FA
	xorw	%cx, %ax
	cmpw	$-2783, %ax             # imm = 0xF521
	jne	.LBB119_36
# %bb.35:                               # %is_move.split87
	movl	(%r14), %eax
	movw	$-2783, BasicBlockSignatureTracker # imm = 0xF521
	movw	$10316, RunTimeSignatureAdjuster # imm = 0x284C
	leaq	-16(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%rbp
	retq
.LBB119_36:                             # %CFerrorHandler.is_move
	callq	FAULT_DETECTED_CFC
.Lfunc_end119:
	.size	is_move, .Lfunc_end119-is_move
	.cfi_endproc
                                        # -- End function
	.globl	perft_debug             # -- Begin function perft_debug
	.p2align	4, 0x90
	.type	perft_debug,@function
perft_debug:                            # @perft_debug
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$304, %rsp              # imm = 0x130
	movw	$-2754, BasicBlockSignatureTracker # imm = 0xF53E
	movw	$11681, RunTimeSignatureAdjuster # imm = 0x2DA1
	callq	init_game
	movw	$-2754, BasicBlockSignatureTracker # imm = 0xF53E
	movw	$11681, RunTimeSignatureAdjuster # imm = 0x2DA1
	movw	$-2754, BasicBlockSignatureTracker # imm = 0xF53E
	movw	$0, RunTimeSignatureAdjuster
.LBB120_1:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB120_3 Depth 2
                                        #     Child Loop BB120_21 Depth 2
                                        #       Child Loop BB120_23 Depth 3
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$-2752, %ax             # imm = 0xF540
	jne	.LBB120_50
# %bb.2:                                # %perft_debug.split
                                        #   in Loop: Header=BB120_1 Depth=1
	movabsq	$.L.str.41.450, %rdi
	movb	$0, %al
	callq	printf
	leaq	-304(%rbp), %rdi
	movq	stdin, %rdx
	movw	$-2752, BasicBlockSignatureTracker # imm = 0xF540
	movw	$-7691, RunTimeSignatureAdjuster # imm = 0xE1F5
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	leaq	-304(%rbp), %rdi
	movw	$-2752, BasicBlockSignatureTracker # imm = 0xF540
	movw	$-7691, RunTimeSignatureAdjuster # imm = 0xE1F5
	callq	atoi
	movl	%eax, -12(%rbp)
	movl	$0, raw_nodes
	movl	-12(%rbp), %edi
	movw	$-2752, BasicBlockSignatureTracker # imm = 0xF540
	movw	$24317, RunTimeSignatureAdjuster # imm = 0x5EFD
	callq	perft
	movabsq	$.L.str.42.453, %rdi
	movw	$-2752, BasicBlockSignatureTracker # imm = 0xF540
	movw	$24317, RunTimeSignatureAdjuster # imm = 0x5EFD
	movl	-12(%rbp), %esi
	movl	raw_nodes, %edx
	movb	$0, %al
	callq	printf
	movq	stdout, %rdi
	movw	$-2752, BasicBlockSignatureTracker # imm = 0xF540
	movw	$-7778, RunTimeSignatureAdjuster # imm = 0xE19E
	movl	$1, %esi
	callq	display_board
	movabsq	$.L.str.43.454, %rdi
	movw	$-2752, BasicBlockSignatureTracker # imm = 0xF540
	movw	$-7778, RunTimeSignatureAdjuster # imm = 0xE19E
	movb	$0, %al
	callq	printf
	leaq	-304(%rbp), %rdi
	movq	stdin, %rdx
	movw	$-2752, BasicBlockSignatureTracker # imm = 0xF540
	movw	$-7691, RunTimeSignatureAdjuster # imm = 0xE1F5
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	leaq	-304(%rbp), %rax
	movw	$-2752, BasicBlockSignatureTracker # imm = 0xF540
	movw	$-7691, RunTimeSignatureAdjuster # imm = 0xE1F5
	movq	%rax, -8(%rbp)
	movw	$-2752, BasicBlockSignatureTracker # imm = 0xF540
	movw	$0, RunTimeSignatureAdjuster
.LBB120_3:                              #   Parent Loop BB120_1 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-2737, %ax             # imm = 0xF54F
	jne	.LBB120_49
# %bb.4:                                # %perft_debug.split89
                                        #   in Loop: Header=BB120_3 Depth=2
	movq	-8(%rbp), %rax
	movb	(%rax), %al
	movw	$-2737, BasicBlockSignatureTracker # imm = 0xF54F
	movw	$0, RunTimeSignatureAdjuster
	cmpb	$0, %al
	je	.LBB120_9
# %bb.5:                                #   in Loop: Header=BB120_3 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-2725, %ax             # imm = 0xF55B
	jne	.LBB120_49
# %bb.6:                                # %perft_debug.split91
                                        #   in Loop: Header=BB120_3 Depth=2
	movq	-8(%rbp), %rax
	movsbl	(%rax), %edi
	callq	tolower
	movq	-8(%rbp), %rcx
	movb	%al, (%rcx)
	movw	$-2725, BasicBlockSignatureTracker # imm = 0xF55B
	movw	$0, RunTimeSignatureAdjuster
# %bb.7:                                #   in Loop: Header=BB120_3 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$38, %ax
	cmpw	$-2691, %ax             # imm = 0xF57D
	jne	.LBB120_49
# %bb.8:                                # %perft_debug.split95
                                        #   in Loop: Header=BB120_3 Depth=2
	movq	-8(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -8(%rbp)
	movw	$-2691, BasicBlockSignatureTracker # imm = 0xF57D
	movw	$61, RunTimeSignatureAdjuster
	jmp	.LBB120_3
.LBB120_9:                              #   in Loop: Header=BB120_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$219, %ax
	cmpw	$-2668, %ax             # imm = 0xF594
	jne	.LBB120_50
# %bb.10:                               # %perft_debug.split93
                                        #   in Loop: Header=BB120_1 Depth=1
	leaq	-304(%rbp), %rdi
	movl	$.L.str.44.455, %esi
	callq	strcmp
	movw	$-2668, BasicBlockSignatureTracker # imm = 0xF594
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB120_13
# %bb.11:                               #   in Loop: Header=BB120_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-2667, %ax             # imm = 0xF595
	jne	.LBB120_50
# %bb.12:                               # %perft_debug.split97
                                        #   in Loop: Header=BB120_1 Depth=1
	leaq	-304(%rbp), %rdi
	movl	$.L.str.45.456, %esi
	callq	strcmp
	movw	$-2667, BasicBlockSignatureTracker # imm = 0xF595
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB120_15
.LBB120_13:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$50, %ax
	xorw	%cx, %ax
	cmpw	$-2650, %ax             # imm = 0xF5A6
	jne	.LBB120_51
# %bb.14:                               # %perft_debug.split99
	xorl	%edi, %edi
	callq	exit
	movw	$-2650, BasicBlockSignatureTracker # imm = 0xF5A6
	movw	$0, RunTimeSignatureAdjuster
.LBB120_15:                             # %Buffer__
                                        #   in Loop: Header=BB120_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-32566, %ax            # imm = 0x80CA
	cmpw	$30047, %ax             # imm = 0x755F
	jne	.LBB120_50
# %bb.16:                               # %perft_debug.split101
                                        #   in Loop: Header=BB120_1 Depth=1
	movw	$30047, BasicBlockSignatureTracker # imm = 0x755F
	movw	$-32566, RunTimeSignatureAdjuster # imm = 0x80CA
# %bb.17:                               #   in Loop: Header=BB120_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$85, %ax
	xorw	%cx, %ax
	cmpw	$-2624, %ax             # imm = 0xF5C0
	jne	.LBB120_50
# %bb.18:                               # %perft_debug.split127
                                        #   in Loop: Header=BB120_1 Depth=1
	leaq	-40(%rbp), %rsi
	leaq	-304(%rbp), %rdi
	movw	$-2624, BasicBlockSignatureTracker # imm = 0xF5C0
	movw	$10430, RunTimeSignatureAdjuster # imm = 0x28BE
	callq	verify_coord
	movw	$-2624, BasicBlockSignatureTracker # imm = 0xF5C0
	movw	$10430, RunTimeSignatureAdjuster # imm = 0x28BE
	movw	$-2624, BasicBlockSignatureTracker # imm = 0xF5C0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB120_45
# %bb.19:                               #   in Loop: Header=BB120_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-2620, %ax             # imm = 0xF5C4
	jne	.LBB120_50
# %bb.20:                               # %perft_debug.split105
                                        #   in Loop: Header=BB120_1 Depth=1
	movw	$-2620, BasicBlockSignatureTracker # imm = 0xF5C4
	movw	$0, RunTimeSignatureAdjuster
.LBB120_21:                             #   Parent Loop BB120_1 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB120_23 Depth 3
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$-2590, %ax             # imm = 0xF5E2
	jne	.LBB120_48
# %bb.22:                               # %perft_debug.split107
                                        #   in Loop: Header=BB120_21 Depth=2
	movabsq	$.L.str.46.459, %rdi
	movb	$0, %al
	callq	printf
	leaq	-304(%rbp), %rdi
	movq	stdin, %rdx
	movw	$-2590, BasicBlockSignatureTracker # imm = 0xF5E2
	movw	$-7849, RunTimeSignatureAdjuster # imm = 0xE157
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	leaq	-304(%rbp), %rax
	movw	$-2590, BasicBlockSignatureTracker # imm = 0xF5E2
	movw	$-7849, RunTimeSignatureAdjuster # imm = 0xE157
	movq	%rax, -8(%rbp)
	movw	$-2590, BasicBlockSignatureTracker # imm = 0xF5E2
	movw	$0, RunTimeSignatureAdjuster
.LBB120_23:                             #   Parent Loop BB120_1 Depth=1
                                        #     Parent Loop BB120_21 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-2576, %ax             # imm = 0xF5F0
	jne	.LBB120_47
# %bb.24:                               # %perft_debug.split109
                                        #   in Loop: Header=BB120_23 Depth=3
	movq	-8(%rbp), %rax
	movb	(%rax), %al
	movw	$-2576, BasicBlockSignatureTracker # imm = 0xF5F0
	movw	$0, RunTimeSignatureAdjuster
	cmpb	$0, %al
	je	.LBB120_29
# %bb.25:                               #   in Loop: Header=BB120_23 Depth=3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-2566, %ax             # imm = 0xF5FA
	jne	.LBB120_47
# %bb.26:                               # %perft_debug.split111
                                        #   in Loop: Header=BB120_23 Depth=3
	movq	-8(%rbp), %rax
	movsbl	(%rax), %edi
	callq	tolower
	movq	-8(%rbp), %rcx
	movb	%al, (%rcx)
	movw	$-2566, BasicBlockSignatureTracker # imm = 0xF5FA
	movw	$0, RunTimeSignatureAdjuster
# %bb.27:                               #   in Loop: Header=BB120_23 Depth=3
	movw	BasicBlockSignatureTracker, %ax
	xorw	$6, %ax
	cmpw	$-2564, %ax             # imm = 0xF5FC
	jne	.LBB120_47
# %bb.28:                               # %perft_debug.split115
                                        #   in Loop: Header=BB120_23 Depth=3
	movq	-8(%rbp), %rax
	addq	$1, %rax
	movq	%rax, -8(%rbp)
	movw	$-2564, BasicBlockSignatureTracker # imm = 0xF5FC
	movw	$30, RunTimeSignatureAdjuster
	jmp	.LBB120_23
.LBB120_29:                             #   in Loop: Header=BB120_21 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1008, %ax              # imm = 0x3F0
	cmpw	$-2560, %ax             # imm = 0xF600
	jne	.LBB120_48
# %bb.30:                               # %perft_debug.split113
                                        #   in Loop: Header=BB120_21 Depth=2
	leaq	-304(%rbp), %rdi
	movl	$.L.str.44.455, %esi
	callq	strcmp
	movw	$-2560, BasicBlockSignatureTracker # imm = 0xF600
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB120_33
# %bb.31:                               #   in Loop: Header=BB120_21 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-2547, %ax             # imm = 0xF60D
	jne	.LBB120_48
# %bb.32:                               # %perft_debug.split117
                                        #   in Loop: Header=BB120_21 Depth=2
	leaq	-304(%rbp), %rdi
	movl	$.L.str.45.456, %esi
	callq	strcmp
	movw	$-2547, BasicBlockSignatureTracker # imm = 0xF60D
	movw	$13, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB120_35
.LBB120_33:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$41, %ax
	xorw	%cx, %ax
	cmpw	$-2519, %ax             # imm = 0xF629
	jne	.LBB120_51
# %bb.34:                               # %perft_debug.split119
	xorl	%edi, %edi
	callq	exit
	movw	$-2519, BasicBlockSignatureTracker # imm = 0xF629
	movw	$0, RunTimeSignatureAdjuster
.LBB120_35:                             # %Buffer__1
                                        #   in Loop: Header=BB120_21 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-10626, %ax            # imm = 0xD67E
	cmpw	$8307, %ax              # imm = 0x2073
	jne	.LBB120_48
# %bb.36:                               # %perft_debug.split121
                                        #   in Loop: Header=BB120_21 Depth=2
	movw	$8307, BasicBlockSignatureTracker # imm = 0x2073
	movw	$-10626, RunTimeSignatureAdjuster # imm = 0xD67E
# %bb.37:                               #   in Loop: Header=BB120_21 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$63, %ax
	xorw	%cx, %ax
	cmpw	$-2510, %ax             # imm = 0xF632
	jne	.LBB120_48
# %bb.38:                               # %perft_debug.split129
                                        #   in Loop: Header=BB120_21 Depth=2
	movw	$-2510, BasicBlockSignatureTracker # imm = 0xF632
	movw	$0, RunTimeSignatureAdjuster
# %bb.39:                               #   in Loop: Header=BB120_21 Depth=2
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-2505, %ax             # imm = 0xF637
	jne	.LBB120_48
# %bb.40:                               # %perft_debug.split123
                                        #   in Loop: Header=BB120_21 Depth=2
	leaq	-40(%rbp), %rsi
	leaq	-304(%rbp), %rdi
	movw	$-2505, BasicBlockSignatureTracker # imm = 0xF637
	movw	$11081, RunTimeSignatureAdjuster # imm = 0x2B49
	callq	verify_coord
	movw	$-2505, BasicBlockSignatureTracker # imm = 0xF637
	movw	$11081, RunTimeSignatureAdjuster # imm = 0x2B49
	cmpl	$0, %eax
	setne	%al
	xorb	$-1, %al
	movw	$-2505, BasicBlockSignatureTracker # imm = 0xF637
	movw	$1011, RunTimeSignatureAdjuster # imm = 0x3F3
	testb	$1, %al
	jne	.LBB120_21
# %bb.41:                               # %Buffer__2
                                        #   in Loop: Header=BB120_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-30077, %ax            # imm = 0x8A83
	cmpw	$31924, %ax             # imm = 0x7CB4
	jne	.LBB120_50
# %bb.42:                               # %perft_debug.split125
                                        #   in Loop: Header=BB120_1 Depth=1
	movw	$31924, BasicBlockSignatureTracker # imm = 0x7CB4
	movw	$-30077, RunTimeSignatureAdjuster # imm = 0x8A83
# %bb.43:                               #   in Loop: Header=BB120_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-2504, %ax             # imm = 0xF638
	jne	.LBB120_50
# %bb.44:                               # %perft_debug.split131
                                        #   in Loop: Header=BB120_1 Depth=1
	movw	$-2504, BasicBlockSignatureTracker # imm = 0xF638
	movw	$1016, RunTimeSignatureAdjuster # imm = 0x3F8
.LBB120_45:                             #   in Loop: Header=BB120_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1022, %ax              # imm = 0x3FE
	xorw	%cx, %ax
	cmpw	$-2498, %ax             # imm = 0xF63E
	jne	.LBB120_50
# %bb.46:                               # %perft_debug.split103
                                        #   in Loop: Header=BB120_1 Depth=1
	leaq	-40(%rbp), %rdi
	movw	$-2498, BasicBlockSignatureTracker # imm = 0xF63E
	movw	$31886, RunTimeSignatureAdjuster # imm = 0x7C8E
	xorl	%esi, %esi
	callq	make
	movw	$-2498, BasicBlockSignatureTracker # imm = 0xF63E
	movw	$31886, RunTimeSignatureAdjuster # imm = 0x7C8E
	movw	$-2498, BasicBlockSignatureTracker # imm = 0xF63E
	movw	$768, RunTimeSignatureAdjuster # imm = 0x300
	jmp	.LBB120_1
.LBB120_47:                             # %CFerrorHandler.perft_debug.loopexit
	jmp	.LBB120_51
.LBB120_48:                             # %CFerrorHandler.perft_debug.loopexit1
	jmp	.LBB120_51
.LBB120_49:                             # %CFerrorHandler.perft_debug.loopexit2
	jmp	.LBB120_51
.LBB120_50:                             # %CFerrorHandler.perft_debug.loopexit3
	jmp	.LBB120_51
.LBB120_51:                             # %CFerrorHandler.perft_debug
	callq	FAULT_DETECTED_CFC
.Lfunc_end120:
	.size	perft_debug, .Lfunc_end120-perft_debug
	.cfi_endproc
                                        # -- End function
	.globl	rinput                  # -- Begin function rinput
	.p2align	4, 0x90
	.type	rinput,@function
rinput:                                 # @rinput
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.1:                                # %rinput.split126
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.2:                                # %rinput.split124
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.3:                                # %rinput.split122
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.4:                                # %rinput.split120
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.5:                                # %rinput.split104
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.6:                                # %rinput.split102
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.7:                                # %rinput.split100
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.8:                                # %rinput.split98
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.9:                                # %rinput.split96
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.10:                               # %rinput.split94
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.11:                               # %rinput.split92
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.12:                               # %rinput.split90
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-7464, %ax             # imm = 0xE2D8
	xorw	%cx, %ax
	cmpw	$-2451, %ax             # imm = 0xF66D
	jne	.LBB121_29
# %bb.13:                               # %rinput.split
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rdi, (%r14)
	movl	%esi, (%r15)
	movq	%rdx, (%rbx)
	movl	$0, (%r12)
	movw	$-2451, BasicBlockSignatureTracker # imm = 0xF66D
	movw	$0, RunTimeSignatureAdjuster
.LBB121_14:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$31, %ax
	xorw	%cx, %ax
	cmpw	$-2446, %ax             # imm = 0xF672
	jne	.LBB121_28
# %bb.15:                               # %rinput.split106
                                        #   in Loop: Header=BB121_14 Depth=1
	movq	(%rbx), %rdi
	callq	_IO_getc
	xorl	%ecx, %ecx
	movl	%eax, (%r13)
	movw	$-2446, BasicBlockSignatureTracker # imm = 0xF672
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$10, %eax
	je	.LBB121_18
# %bb.16:                               #   in Loop: Header=BB121_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$240, %ax
	cmpw	$-2430, %ax             # imm = 0xF682
	jne	.LBB121_28
# %bb.17:                               # %rinput.split108
                                        #   in Loop: Header=BB121_14 Depth=1
	cmpl	$-1, (%r13)
	setne	%cl
	movw	$-2430, BasicBlockSignatureTracker # imm = 0xF682
	movw	$240, RunTimeSignatureAdjuster
.LBB121_18:                             #   in Loop: Header=BB121_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %dx
	xorw	$244, %ax
	xorw	%dx, %ax
	cmpw	$-2426, %ax             # imm = 0xF686
	jne	.LBB121_28
# %bb.19:                               # %rinput.split110
                                        #   in Loop: Header=BB121_14 Depth=1
	movw	$-2426, BasicBlockSignatureTracker # imm = 0xF686
	movw	$0, RunTimeSignatureAdjuster
	testb	$1, %cl
	jne	.LBB121_20
	jmp	.LBB121_26
.LBB121_20:                             #   in Loop: Header=BB121_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$18, %ax
	cmpw	$-2412, %ax             # imm = 0xF694
	jne	.LBB121_28
# %bb.21:                               # %rinput.split112
                                        #   in Loop: Header=BB121_14 Depth=1
	movl	(%r12), %eax
	movl	(%r15), %ecx
	subl	$1, %ecx
	movw	$-2412, BasicBlockSignatureTracker # imm = 0xF694
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB121_24
# %bb.22:                               #   in Loop: Header=BB121_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-2406, %ax             # imm = 0xF69A
	jne	.LBB121_28
# %bb.23:                               # %rinput.split116
                                        #   in Loop: Header=BB121_14 Depth=1
	movl	(%r13), %eax
	movq	(%r14), %rcx
	movl	(%r12), %edx
	movl	%edx, %esi
	addl	$1, %esi
	movl	%esi, (%r12)
	movslq	%edx, %rdx
	movb	%al, (%rcx,%rdx)
	movw	$-2406, BasicBlockSignatureTracker # imm = 0xF69A
	movw	$14, RunTimeSignatureAdjuster
.LBB121_24:                             #   in Loop: Header=BB121_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-2403, %ax             # imm = 0xF69D
	jne	.LBB121_28
# %bb.25:                               # %rinput.split118
                                        #   in Loop: Header=BB121_14 Depth=1
	movw	$-2403, BasicBlockSignatureTracker # imm = 0xF69D
	movw	$240, RunTimeSignatureAdjuster
	jmp	.LBB121_14
.LBB121_26:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-2376, %ax             # imm = 0xF6B8
	jne	.LBB121_29
# %bb.27:                               # %rinput.split114
	movq	(%r14), %rax
	movslq	(%r12), %rcx
	movb	$0, (%rax,%rcx)
	movw	$-2376, BasicBlockSignatureTracker # imm = 0xF6B8
	movw	$0, RunTimeSignatureAdjuster
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB121_28:                             # %CFerrorHandler.rinput.loopexit
	jmp	.LBB121_29
.LBB121_29:                             # %CFerrorHandler.rinput
	callq	FAULT_DETECTED_CFC
.Lfunc_end121:
	.size	rinput, .Lfunc_end121-rinput
	.cfi_endproc
                                        # -- End function
	.globl	verify_coord            # -- Begin function verify_coord
	.p2align	4, 0x90
	.type	verify_coord,@function
verify_coord:                           # @verify_coord
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11189, %ax             # imm = 0x2BB5
	xorw	%cx, %ax
	cmpw	$-2357, %ax             # imm = 0xF6CB
	jne	.LBB122_45
# %bb.1:                                # %verify_coord.split86
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11189, %ax             # imm = 0x2BB5
	xorw	%cx, %ax
	cmpw	$-2357, %ax             # imm = 0xF6CB
	jne	.LBB122_45
# %bb.2:                                # %verify_coord.split84
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$11189, %ax             # imm = 0x2BB5
	xorw	%cx, %ax
	cmpw	$-2357, %ax             # imm = 0xF6CB
	jne	.LBB122_45
# %bb.3:                                # %verify_coord.split
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r8
	addq	$-12288, %r8            # imm = 0xD000
	movq	%r8, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rdi, (%r13)
	movq	%rsi, (%rbx)
	movl	$0, (%r15)
	movl	Variant, %eax
	movw	$-2357, BasicBlockSignatureTracker # imm = 0xF6CB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	jne	.LBB122_23
# %bb.4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20, %ax
	cmpw	$-2337, %ax             # imm = 0xF6DF
	jne	.LBB122_45
# %bb.5:                                # %verify_coord.split88
	movq	%rcx, -72(%rbp)         # 8-byte Spill
	movq	%rbx, -64(%rbp)         # 8-byte Spill
	movl	$1, captures
	movl	$0, (%r12)
	movw	$-2337, BasicBlockSignatureTracker # imm = 0xF6DF
	movw	$31823, RunTimeSignatureAdjuster # imm = 0x7C4F
	movq	%r8, -56(%rbp)          # 8-byte Spill
	movq	%r8, %rdi
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	callq	gen
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movw	$-2337, BasicBlockSignatureTracker # imm = 0xF6DF
	movw	$31823, RunTimeSignatureAdjuster # imm = 0x7C4F
	movl	numb_moves, %eax
	movl	%eax, (%r12)
	movl	$0, captures
	movl	$1, (%r14)
	movl	$0, (%rdx)
	movw	$-2337, BasicBlockSignatureTracker # imm = 0xF6DF
	movw	$0, RunTimeSignatureAdjuster
.LBB122_6:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$-2330, %ax             # imm = 0xF6E6
	jne	.LBB122_44
# %bb.7:                                # %verify_coord.split92
                                        #   in Loop: Header=BB122_6 Depth=1
	movl	(%rdx), %eax
	movl	(%r12), %ecx
	movw	$-2330, BasicBlockSignatureTracker # imm = 0xF6E6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB122_16
# %bb.8:                                #   in Loop: Header=BB122_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$504, %ax               # imm = 0x1F8
	cmpw	$-2274, %ax             # imm = 0xF71E
	jne	.LBB122_44
# %bb.9:                                # %verify_coord.split94
                                        #   in Loop: Header=BB122_6 Depth=1
	movl	(%rdx), %esi
	movw	$-2274, BasicBlockSignatureTracker # imm = 0xF71E
	movw	$32174, RunTimeSignatureAdjuster # imm = 0x7DAE
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%rdx, %rbx
	callq	make
	movw	$-2274, BasicBlockSignatureTracker # imm = 0xF71E
	movw	$32174, RunTimeSignatureAdjuster # imm = 0x7DAE
	movl	(%rbx), %esi
	movw	$-2274, BasicBlockSignatureTracker # imm = 0xF71E
	movw	$32174, RunTimeSignatureAdjuster # imm = 0x7DAE
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movl	$1, %edx
	callq	check_legal
	movw	$-2274, BasicBlockSignatureTracker # imm = 0xF71E
	movw	$32174, RunTimeSignatureAdjuster # imm = 0x7DAE
	movw	$-2274, BasicBlockSignatureTracker # imm = 0xF71E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB122_12
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$54, %ax
	cmpw	$-2264, %ax             # imm = 0xF728
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB122_45
# %bb.11:                               # %verify_coord.split98
	movl	$0, (%r14)
	movl	(%rax), %esi
	movw	$-2264, BasicBlockSignatureTracker # imm = 0xF728
	movw	$32207, RunTimeSignatureAdjuster # imm = 0x7DCF
	callq	unmake
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movw	$-2264, BasicBlockSignatureTracker # imm = 0xF728
	movw	$32207, RunTimeSignatureAdjuster # imm = 0x7DCF
	movw	$-2264, BasicBlockSignatureTracker # imm = 0xF728
	movw	$462, RunTimeSignatureAdjuster # imm = 0x1CE
	jmp	.LBB122_17
.LBB122_12:                             #   in Loop: Header=BB122_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$33, %ax
	cmpw	$-2241, %ax             # imm = 0xF73F
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB122_44
# %bb.13:                               # %verify_coord.split100
                                        #   in Loop: Header=BB122_6 Depth=1
	movl	(%rax), %esi
	movw	$-2241, BasicBlockSignatureTracker # imm = 0xF73F
	movw	$32216, RunTimeSignatureAdjuster # imm = 0x7DD8
	movq	-56(%rbp), %rdi         # 8-byte Reload
	callq	unmake
	movw	$-2241, BasicBlockSignatureTracker # imm = 0xF73F
	movw	$32216, RunTimeSignatureAdjuster # imm = 0x7DD8
	movw	$-2241, BasicBlockSignatureTracker # imm = 0xF73F
	movw	$0, RunTimeSignatureAdjuster
# %bb.14:                               #   in Loop: Header=BB122_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$126, %ax
	cmpw	$-2239, %ax             # imm = 0xF741
	movq	-48(%rbp), %rdx         # 8-byte Reload
	jne	.LBB122_44
# %bb.15:                               # %verify_coord.split102
                                        #   in Loop: Header=BB122_6 Depth=1
	movl	(%rdx), %eax
	addl	$1, %eax
	movl	%eax, (%rdx)
	movw	$-2239, BasicBlockSignatureTracker # imm = 0xF741
	movw	$414, RunTimeSignatureAdjuster # imm = 0x19E
	jmp	.LBB122_6
.LBB122_16:                             # %.loopexit
	jmp	.LBB122_17
.LBB122_17:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$430, %ax               # imm = 0x1AE
	xorw	%cx, %ax
	cmpw	$-2232, %ax             # imm = 0xF748
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	-72(%rbp), %r8          # 8-byte Reload
	jne	.LBB122_45
# %bb.18:                               # %verify_coord.split96
	movl	(%r14), %eax
	movw	$-2232, BasicBlockSignatureTracker # imm = 0xF748
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB122_21
# %bb.19:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3, %ax
	cmpw	$-2229, %ax             # imm = 0xF74B
	jne	.LBB122_45
# %bb.20:                               # %verify_coord.split104
	movl	$0, captures
	movl	$0, (%r12)
	movw	$-2229, BasicBlockSignatureTracker # imm = 0xF74B
	movw	$32219, RunTimeSignatureAdjuster # imm = 0x7DDB
	callq	gen
	movq	-72(%rbp), %r8          # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movw	$-2229, BasicBlockSignatureTracker # imm = 0xF74B
	movw	$32219, RunTimeSignatureAdjuster # imm = 0x7DDB
	movl	numb_moves, %eax
	movl	%eax, (%r12)
	movw	$-2229, BasicBlockSignatureTracker # imm = 0xF74B
	movw	$3, RunTimeSignatureAdjuster
.LBB122_21:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-2222, %ax             # imm = 0xF752
	jne	.LBB122_45
# %bb.22:                               # %verify_coord.split106
	movw	$-2222, BasicBlockSignatureTracker # imm = 0xF752
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB122_25
.LBB122_23:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$406, %ax               # imm = 0x196
	cmpw	$-2211, %ax             # imm = 0xF75D
	jne	.LBB122_45
# %bb.24:                               # %verify_coord.split90
	movw	$-2211, BasicBlockSignatureTracker # imm = 0xF75D
	movw	$32205, RunTimeSignatureAdjuster # imm = 0x7DCD
	movq	%r8, %rdi
	movq	%r13, %r14
	movq	%r15, -48(%rbp)         # 8-byte Spill
	movq	%r12, -56(%rbp)         # 8-byte Spill
	movq	%r8, %r12
	movq	%rdx, %r13
	movq	%rcx, %r15
	callq	gen
	movq	%r15, %r8
	movq	%rbx, %rsi
	movq	%r13, %rdx
	movq	%r12, %rdi
	movq	-56(%rbp), %r12         # 8-byte Reload
	movq	-48(%rbp), %r15         # 8-byte Reload
	movq	%r14, %r13
	movw	$-2211, BasicBlockSignatureTracker # imm = 0xF75D
	movw	$32205, RunTimeSignatureAdjuster # imm = 0x7DCD
	movl	numb_moves, %eax
	movl	%eax, (%r12)
	movw	$-2211, BasicBlockSignatureTracker # imm = 0xF75D
	movw	$15, RunTimeSignatureAdjuster
.LBB122_25:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$58, %ax
	xorw	%cx, %ax
	cmpw	$-2200, %ax             # imm = 0xF768
	jne	.LBB122_45
# %bb.26:                               # %verify_coord.split108
	movl	$0, (%rdx)
	movw	$-2200, BasicBlockSignatureTracker # imm = 0xF768
	movw	$0, RunTimeSignatureAdjuster
.LBB122_27:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$253, %ax
	xorw	%cx, %ax
	cmpw	$-2155, %ax             # imm = 0xF795
	jne	.LBB122_43
# %bb.28:                               # %verify_coord.split110
                                        #   in Loop: Header=BB122_27 Depth=1
	movl	(%rdx), %eax
	movl	(%r12), %ecx
	movw	$-2155, BasicBlockSignatureTracker # imm = 0xF795
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB122_41
# %bb.29:                               #   in Loop: Header=BB122_27 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-2152, %ax             # imm = 0xF798
	jne	.LBB122_43
# %bb.30:                               # %verify_coord.split112
                                        #   in Loop: Header=BB122_27 Depth=1
	movq	%rsi, -64(%rbp)         # 8-byte Spill
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	movslq	(%rdx), %rax
	imulq	$24, %rax, %rax
	movq	%rdi, %r14
	movq	%rdi, %rcx
	addq	%rax, %rcx
	movw	$-2152, BasicBlockSignatureTracker # imm = 0xF798
	movw	$21601, RunTimeSignatureAdjuster # imm = 0x5461
	subq	$32, %rsp
	movq	(%rcx), %rax
	movq	%rax, (%rsp)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsp)
	movq	%r8, %rdi
	movq	%r8, %rbx
	callq	comp_to_coord
	addq	$32, %rsp
	movw	$-2152, BasicBlockSignatureTracker # imm = 0xF798
	movw	$21601, RunTimeSignatureAdjuster # imm = 0x5461
	movq	(%r13), %rdi
	movq	%rbx, -72(%rbp)         # 8-byte Spill
	movq	%rbx, %rsi
	callq	strcmp
	movw	$-2152, BasicBlockSignatureTracker # imm = 0xF798
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB122_37
# %bb.31:                               #   in Loop: Header=BB122_27 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-2150, %ax             # imm = 0xF79A
	movq	%r14, %rdi
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB122_43
# %bb.32:                               # %verify_coord.split118
                                        #   in Loop: Header=BB122_27 Depth=1
	movl	(%rax), %esi
	movw	$-2150, BasicBlockSignatureTracker # imm = 0xF79A
	movw	$32042, RunTimeSignatureAdjuster # imm = 0x7D2A
	callq	make
	movw	$-2150, BasicBlockSignatureTracker # imm = 0xF79A
	movw	$32042, RunTimeSignatureAdjuster # imm = 0x7D2A
	movq	-48(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %esi
	movw	$-2150, BasicBlockSignatureTracker # imm = 0xF79A
	movw	$32042, RunTimeSignatureAdjuster # imm = 0x7D2A
	movq	%r14, %rdi
	movl	$1, %edx
	callq	check_legal
	movq	-64(%rbp), %rcx         # 8-byte Reload
	movq	-48(%rbp), %rsi         # 8-byte Reload
	movq	%r14, %rdi
	movw	$-2150, BasicBlockSignatureTracker # imm = 0xF79A
	movw	$32042, RunTimeSignatureAdjuster # imm = 0x7D2A
	movw	$-2150, BasicBlockSignatureTracker # imm = 0xF79A
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB122_35
# %bb.33:                               #   in Loop: Header=BB122_27 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$43, %ax
	cmpw	$-2127, %ax             # imm = 0xF7B1
	jne	.LBB122_43
# %bb.34:                               # %verify_coord.split120
                                        #   in Loop: Header=BB122_27 Depth=1
	movl	$1, (%r15)
	movq	(%rcx), %rax
	movslq	(%rsi), %rcx
	imulq	$24, %rcx, %rcx
	movq	%rdi, %rdx
	addq	%rcx, %rdx
	movq	(%rdx), %rcx
	movq	%rcx, (%rax)
	movq	8(%rdx), %rcx
	movq	%rcx, 8(%rax)
	movq	16(%rdx), %rcx
	movq	%rcx, 16(%rax)
	movw	$-2127, BasicBlockSignatureTracker # imm = 0xF7B1
	movw	$43, RunTimeSignatureAdjuster
.LBB122_35:                             #   in Loop: Header=BB122_27 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$95, %ax
	xorw	%cx, %ax
	cmpw	$-2107, %ax             # imm = 0xF7C5
	jne	.LBB122_43
# %bb.36:                               # %verify_coord.split122
                                        #   in Loop: Header=BB122_27 Depth=1
	movl	(%rsi), %esi
	movw	$-2107, BasicBlockSignatureTracker # imm = 0xF7C5
	movw	$32034, RunTimeSignatureAdjuster # imm = 0x7D22
	callq	unmake
	movw	$-2107, BasicBlockSignatureTracker # imm = 0xF7C5
	movw	$32034, RunTimeSignatureAdjuster # imm = 0x7D22
	movw	$-2107, BasicBlockSignatureTracker # imm = 0xF7C5
	movw	$93, RunTimeSignatureAdjuster
.LBB122_37:                             #   in Loop: Header=BB122_27 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$127, %ax
	xorw	%cx, %ax
	cmpw	$-2073, %ax             # imm = 0xF7E7
	movq	%r14, %rdi
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	-64(%rbp), %rsi         # 8-byte Reload
	movq	-72(%rbp), %r8          # 8-byte Reload
	jne	.LBB122_43
# %bb.38:                               # %verify_coord.split116
                                        #   in Loop: Header=BB122_27 Depth=1
	movw	$-2073, BasicBlockSignatureTracker # imm = 0xF7E7
	movw	$0, RunTimeSignatureAdjuster
# %bb.39:                               #   in Loop: Header=BB122_27 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-2053, %ax             # imm = 0xF7FB
	jne	.LBB122_43
# %bb.40:                               # %verify_coord.split124
                                        #   in Loop: Header=BB122_27 Depth=1
	movl	(%rdx), %eax
	addl	$1, %eax
	movl	%eax, (%rdx)
	movw	$-2053, BasicBlockSignatureTracker # imm = 0xF7FB
	movw	$147, RunTimeSignatureAdjuster
	jmp	.LBB122_27
.LBB122_41:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$3984, %ax              # imm = 0xF90
	cmpw	$-2043, %ax             # imm = 0xF805
	jne	.LBB122_45
# %bb.42:                               # %verify_coord.split114
	movl	(%r15), %eax
	movw	$-2043, BasicBlockSignatureTracker # imm = 0xF805
	movw	$9588, RunTimeSignatureAdjuster # imm = 0x2574
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB122_43:                             # %CFerrorHandler.verify_coord.loopexit
	jmp	.LBB122_45
.LBB122_44:                             # %CFerrorHandler.verify_coord.loopexit1
	jmp	.LBB122_45
.LBB122_45:                             # %CFerrorHandler.verify_coord
	callq	FAULT_DETECTED_CFC
.Lfunc_end122:
	.size	verify_coord, .Lfunc_end122-verify_coord
	.cfi_endproc
                                        # -- End function
	.globl	hash_extract_pv         # -- Begin function hash_extract_pv
	.p2align	4, 0x90
	.type	hash_extract_pv,@function
hash_extract_pv:                        # @hash_extract_pv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$68, %ax
	xorw	%cx, %ax
	cmpw	$-2033, %ax             # imm = 0xF80F
	jne	.LBB123_26
# %bb.1:                                # %hash_extract_pv.split77
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$68, %ax
	xorw	%cx, %ax
	cmpw	$-2033, %ax             # imm = 0xF80F
	jne	.LBB123_26
# %bb.2:                                # %hash_extract_pv.split75
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$68, %ax
	xorw	%cx, %ax
	cmpw	$-2033, %ax             # imm = 0xF80F
	jne	.LBB123_26
# %bb.3:                                # %hash_extract_pv.split73
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rdx
	addq	$-12288, %rdx           # imm = 0xD000
	movq	%rdx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r12
	addq	$-256, %r12
	movq	%r12, %rsp
	movl	%edi, (%rbx)
	movq	%rsi, (%r13)
	movl	(%rbx), %ecx
	addl	$-1, %ecx
	movl	%ecx, (%rbx)
	movl	(%rbx), %ecx
	movw	$-2033, BasicBlockSignatureTracker # imm = 0xF80F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	jne	.LBB123_6
# %bb.4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$28, %ax
	cmpw	$-2029, %ax             # imm = 0xF813
	jne	.LBB123_26
# %bb.5:                                # %hash_extract_pv.split57
	movw	$-2029, BasicBlockSignatureTracker # imm = 0xF813
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB123_24
.LBB123_6:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$21, %cx
	cmpw	$-2022, %cx             # imm = 0xF81A
	jne	.LBB123_26
# %bb.7:                                # %hash_extract_pv.split
	movq	%rdx, -48(%rbp)         # 8-byte Spill
	movw	$-2022, BasicBlockSignatureTracker # imm = 0xF81A
	movw	$18840, RunTimeSignatureAdjuster # imm = 0x4998
	movq	%rax, %rdi
	xorl	%esi, %esi
	movq	%r15, %rdx
	movq	%rax, %rcx
	movq	%rax, %r8
	xorl	%r9d, %r9d
	callq	ProbeTT
	movw	$-2022, BasicBlockSignatureTracker # imm = 0xF81A
	movw	$18840, RunTimeSignatureAdjuster # imm = 0x4998
	movw	$-2022, BasicBlockSignatureTracker # imm = 0xF81A
	movw	$9, RunTimeSignatureAdjuster
	cmpl	$4, %eax
	je	.LBB123_24
# %bb.8:                                # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-29874, %ax            # imm = 0x8B4E
	cmpw	$29524, %ax             # imm = 0x7354
	movq	-48(%rbp), %rdi         # 8-byte Reload
	jne	.LBB123_26
# %bb.9:                                # %hash_extract_pv.split61
	movw	$29524, BasicBlockSignatureTracker # imm = 0x7354
	movw	$-29874, RunTimeSignatureAdjuster # imm = 0x8B4E
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$-2013, %ax             # imm = 0xF823
	jne	.LBB123_26
# %bb.11:                               # %hash_extract_pv.split79
	movw	$-2013, BasicBlockSignatureTracker # imm = 0xF823
	movw	$29363, RunTimeSignatureAdjuster # imm = 0x72B3
	callq	gen
	movw	$-2013, BasicBlockSignatureTracker # imm = 0xF823
	movw	$29363, RunTimeSignatureAdjuster # imm = 0x72B3
	movl	numb_moves, %eax
	movl	%eax, (%r14)
	movl	(%r15), %eax
	movw	$-2013, BasicBlockSignatureTracker # imm = 0xF823
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jl	.LBB123_22
# %bb.12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-2008, %ax             # imm = 0xF828
	jne	.LBB123_26
# %bb.13:                               # %hash_extract_pv.split63
	movl	(%r15), %eax
	movl	(%r14), %ecx
	movw	$-2008, BasicBlockSignatureTracker # imm = 0xF828
	movw	$11, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB123_22
# %bb.14:                               # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$27645, %ax             # imm = 0x6BFD
	cmpw	$-27691, %ax            # imm = 0x93D5
	movq	-48(%rbp), %r14         # 8-byte Reload
	jne	.LBB123_26
# %bb.15:                               # %hash_extract_pv.split67
	movw	$-27691, BasicBlockSignatureTracker # imm = 0x93D5
	movw	$27645, RunTimeSignatureAdjuster # imm = 0x6BFD
# %bb.16:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$1, %ax
	xorw	%cx, %ax
	cmpw	$-2007, %ax             # imm = 0xF829
	jne	.LBB123_26
# %bb.17:                               # %hash_extract_pv.split81
	movslq	(%r15), %rax
	imulq	$24, %rax, %rax
	movq	%r14, %rcx
	addq	%rax, %rcx
	movw	$-2007, BasicBlockSignatureTracker # imm = 0xF829
	movw	$-5000, RunTimeSignatureAdjuster # imm = 0xEC78
	subq	$32, %rsp
	movq	(%rcx), %rax
	movq	%rax, (%rsp)
	movq	8(%rcx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rcx), %rax
	movq	%rax, 16(%rsp)
	movq	%r12, %rdi
	callq	comp_to_san
	addq	$32, %rsp
	movw	$-2007, BasicBlockSignatureTracker # imm = 0xF829
	movw	$-5000, RunTimeSignatureAdjuster # imm = 0xEC78
	movl	(%r15), %esi
	movw	$-2007, BasicBlockSignatureTracker # imm = 0xF829
	movw	$29337, RunTimeSignatureAdjuster # imm = 0x7299
	movq	%r14, %rdi
	callq	make
	movw	$-2007, BasicBlockSignatureTracker # imm = 0xF829
	movw	$29337, RunTimeSignatureAdjuster # imm = 0x7299
	movl	(%r15), %esi
	movw	$-2007, BasicBlockSignatureTracker # imm = 0xF829
	movw	$29337, RunTimeSignatureAdjuster # imm = 0x7299
	movq	%r14, %rdi
	movl	$1, %edx
	callq	check_legal
	movw	$-2007, BasicBlockSignatureTracker # imm = 0xF829
	movw	$29337, RunTimeSignatureAdjuster # imm = 0x7299
	movw	$-2007, BasicBlockSignatureTracker # imm = 0xF829
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB123_20
# %bb.18:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$98, %ax
	cmpw	$-1973, %ax             # imm = 0xF84B
	jne	.LBB123_26
# %bb.19:                               # %hash_extract_pv.split69
	movabsq	$.L.str.47.460, %rsi
	movq	(%r13), %rdi
	callq	strcat
	movq	(%r13), %rdi
	movq	%r12, %rsi
	callq	strcat
	movabsq	$.L.str.48.461, %rsi
	movq	(%r13), %rdi
	callq	strcat
	movl	(%rbx), %edi
	movq	(%r13), %rsi
	movw	$-1973, BasicBlockSignatureTracker # imm = 0xF84B
	movw	$0, RunTimeSignatureAdjuster
	callq	hash_extract_pv
	movw	$-1973, BasicBlockSignatureTracker # imm = 0xF84B
	movw	$98, RunTimeSignatureAdjuster
	movw	$-1973, BasicBlockSignatureTracker # imm = 0xF84B
	movw	$98, RunTimeSignatureAdjuster
.LBB123_20:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$123, %ax
	xorw	%cx, %ax
	cmpw	$-1966, %ax             # imm = 0xF852
	movq	-48(%rbp), %rdi         # 8-byte Reload
	jne	.LBB123_26
# %bb.21:                               # %hash_extract_pv.split71
	movl	(%r15), %esi
	movw	$-1966, BasicBlockSignatureTracker # imm = 0xF852
	movw	$29365, RunTimeSignatureAdjuster # imm = 0x72B5
	callq	unmake
	movw	$-1966, BasicBlockSignatureTracker # imm = 0xF852
	movw	$29365, RunTimeSignatureAdjuster # imm = 0x72B5
	movw	$-1966, BasicBlockSignatureTracker # imm = 0xF852
	movw	$113, RunTimeSignatureAdjuster
.LBB123_22:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$124, %ax
	xorw	%cx, %ax
	cmpw	$-1953, %ax             # imm = 0xF85F
	jne	.LBB123_26
# %bb.23:                               # %hash_extract_pv.split65
	movw	$-1953, BasicBlockSignatureTracker # imm = 0xF85F
	movw	$76, RunTimeSignatureAdjuster
.LBB123_24:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$115, %ax
	xorw	%cx, %ax
	cmpw	$-1952, %ax             # imm = 0xF860
	jne	.LBB123_26
# %bb.25:                               # %hash_extract_pv.split59
	movw	$-1952, BasicBlockSignatureTracker # imm = 0xF860
	movw	$73, RunTimeSignatureAdjuster
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB123_26:                             # %CFerrorHandler.hash_extract_pv
	callq	FAULT_DETECTED_CFC
.Lfunc_end123:
	.size	hash_extract_pv, .Lfunc_end123-hash_extract_pv
	.cfi_endproc
                                        # -- End function
	.globl	stringize_pv            # -- Begin function stringize_pv
	.p2align	4, 0x90
	.type	stringize_pv,@function
stringize_pv:                           # @stringize_pv
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15809, %ax             # imm = 0x3DC1
	xorw	%cx, %ax
	cmpw	$-1932, %ax             # imm = 0xF874
	jne	.LBB124_20
# %bb.1:                                # %stringize_pv.split
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r15
	addq	$-256, %r15
	movq	%r15, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rdi, (%rbx)
	movq	(%rbx), %rdi
	xorl	%esi, %esi
	movl	$256, %edx              # imm = 0x100
	callq	memset
	movl	$1, (%r14)
	movw	$-1932, BasicBlockSignatureTracker # imm = 0xF874
	movw	$0, RunTimeSignatureAdjuster
.LBB124_2:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$251, %ax
	xorw	%cx, %ax
	cmpw	$-1905, %ax             # imm = 0xF88F
	jne	.LBB124_19
# %bb.3:                                # %stringize_pv.split31
                                        #   in Loop: Header=BB124_2 Depth=1
	movl	(%r14), %eax
	movl	pv_length+4, %ecx
	movw	$-1905, BasicBlockSignatureTracker # imm = 0xF88F
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB124_8
# %bb.4:                                #   in Loop: Header=BB124_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-1867, %ax             # imm = 0xF8B5
	jne	.LBB124_19
# %bb.5:                                # %stringize_pv.split33
                                        #   in Loop: Header=BB124_2 Depth=1
	movabsq	$pv, %rax
	addq	$7200, %rax             # imm = 0x1C20
	movslq	(%r14), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movw	$-1867, BasicBlockSignatureTracker # imm = 0xF8B5
	movw	$-4892, RunTimeSignatureAdjuster # imm = 0xECE4
	subq	$32, %rsp
	movq	(%rax), %rcx
	movq	%rcx, (%rsp)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rsp)
	movq	16(%rax), %rax
	movq	%rax, 16(%rsp)
	movq	%r15, %rdi
	callq	comp_to_san
	addq	$32, %rsp
	movabsq	$pv, %rdi
	addq	$7200, %rdi             # imm = 0x1C20
	movw	$-1867, BasicBlockSignatureTracker # imm = 0xF8B5
	movw	$-4892, RunTimeSignatureAdjuster # imm = 0xECE4
	movslq	(%r14), %rax
	imulq	$24, %rax, %rax
	addq	%rax, %rdi
	movw	$-1867, BasicBlockSignatureTracker # imm = 0xF8B5
	movw	$29189, RunTimeSignatureAdjuster # imm = 0x7205
	xorl	%esi, %esi
	callq	make
	movw	$-1867, BasicBlockSignatureTracker # imm = 0xF8B5
	movw	$29189, RunTimeSignatureAdjuster # imm = 0x7205
	movq	(%rbx), %rdi
	movq	%r15, %rsi
	callq	strcat
	movabsq	$.L.str.49.464, %rsi
	movq	(%rbx), %rdi
	callq	strcat
	movw	$-1867, BasicBlockSignatureTracker # imm = 0xF8B5
	movw	$0, RunTimeSignatureAdjuster
# %bb.6:                                #   in Loop: Header=BB124_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$119, %ax
	cmpw	$-1854, %ax             # imm = 0xF8C2
	jne	.LBB124_19
# %bb.7:                                # %stringize_pv.split37
                                        #   in Loop: Header=BB124_2 Depth=1
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movw	$-1854, BasicBlockSignatureTracker # imm = 0xF8C2
	movw	$182, RunTimeSignatureAdjuster
	jmp	.LBB124_2
.LBB124_8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$75, %ax
	cmpw	$-1852, %ax             # imm = 0xF8C4
	jne	.LBB124_20
# %bb.9:                                # %stringize_pv.split35
	movq	(%rbx), %rsi
	movw	$-1852, BasicBlockSignatureTracker # imm = 0xF8C4
	movw	$143, RunTimeSignatureAdjuster
	movl	$7, %edi
	callq	hash_extract_pv
	movw	$-1852, BasicBlockSignatureTracker # imm = 0xF8C4
	movw	$143, RunTimeSignatureAdjuster
	movl	pv_length+4, %eax
	subl	$1, %eax
	movl	%eax, (%r14)
	movw	$-1852, BasicBlockSignatureTracker # imm = 0xF8C4
	movw	$0, RunTimeSignatureAdjuster
.LBB124_10:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-1845, %ax             # imm = 0xF8CB
	jne	.LBB124_18
# %bb.11:                               # %stringize_pv.split39
                                        #   in Loop: Header=BB124_10 Depth=1
	movl	(%r14), %eax
	movw	$-1845, BasicBlockSignatureTracker # imm = 0xF8CB
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB124_16
# %bb.12:                               #   in Loop: Header=BB124_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$42, %ax
	cmpw	$-1823, %ax             # imm = 0xF8E1
	jne	.LBB124_18
# %bb.13:                               # %stringize_pv.split41
                                        #   in Loop: Header=BB124_10 Depth=1
	movabsq	$pv, %rdi
	addq	$7200, %rdi             # imm = 0x1C20
	movslq	(%r14), %rax
	imulq	$24, %rax, %rax
	addq	%rax, %rdi
	movw	$-1823, BasicBlockSignatureTracker # imm = 0xF8E1
	movw	$29190, RunTimeSignatureAdjuster # imm = 0x7206
	xorl	%esi, %esi
	callq	unmake
	movw	$-1823, BasicBlockSignatureTracker # imm = 0xF8E1
	movw	$29190, RunTimeSignatureAdjuster # imm = 0x7206
	movw	$-1823, BasicBlockSignatureTracker # imm = 0xF8E1
	movw	$0, RunTimeSignatureAdjuster
# %bb.14:                               #   in Loop: Header=BB124_10 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-1819, %ax             # imm = 0xF8E5
	jne	.LBB124_18
# %bb.15:                               # %stringize_pv.split45
                                        #   in Loop: Header=BB124_10 Depth=1
	movl	(%r14), %eax
	addl	$-1, %eax
	movl	%eax, (%r14)
	movw	$-1819, BasicBlockSignatureTracker # imm = 0xF8E5
	movw	$33, RunTimeSignatureAdjuster
	jmp	.LBB124_10
.LBB124_16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$32, %ax
	cmpw	$-1813, %ax             # imm = 0xF8EB
	jne	.LBB124_20
# %bb.17:                               # %stringize_pv.split43
	movw	$-1813, BasicBlockSignatureTracker # imm = 0xF8EB
	movw	$15680, RunTimeSignatureAdjuster # imm = 0x3D40
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB124_18:                             # %CFerrorHandler.stringize_pv.loopexit
	jmp	.LBB124_20
.LBB124_19:                             # %CFerrorHandler.stringize_pv.loopexit1
	jmp	.LBB124_20
.LBB124_20:                             # %CFerrorHandler.stringize_pv
	callq	FAULT_DETECTED_CFC
.Lfunc_end124:
	.size	stringize_pv, .Lfunc_end124-stringize_pv
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function post_thinking
.LCPI125_0:
	.quad	4636737291354636288     # double 100
	.text
	.globl	post_thinking
	.p2align	4, 0x90
	.type	post_thinking,@function
post_thinking:                          # @post_thinking
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17457, %ax             # imm = 0x4431
	xorw	%cx, %ax
	cmpw	$-1802, %ax             # imm = 0xF8F6
	jne	.LBB125_52
# %bb.1:                                # %post_thinking.split101
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17457, %ax             # imm = 0x4431
	xorw	%cx, %ax
	cmpw	$-1802, %ax             # imm = 0xF8F6
	jne	.LBB125_52
# %bb.2:                                # %post_thinking.split99
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17457, %ax             # imm = 0x4431
	xorw	%cx, %ax
	cmpw	$-1802, %ax             # imm = 0xF8F6
	jne	.LBB125_52
# %bb.3:                                # %post_thinking.split
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rbx
	addq	$-256, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %rcx
	addq	$-256, %rcx
	movq	%rcx, -64(%rbp)         # 8-byte Spill
	movq	%rcx, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movl	%edi, (%r15)
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movl	$0, (%rax)
	movw	$-1802, BasicBlockSignatureTracker # imm = 0xF8F6
	movw	$-4682, RunTimeSignatureAdjuster # imm = 0xEDB6
	callq	rtime
	movw	$-1802, BasicBlockSignatureTracker # imm = 0xF8F6
	movw	$-4682, RunTimeSignatureAdjuster # imm = 0xEDB6
	movq	start_time, %rsi
	movw	$-1802, BasicBlockSignatureTracker # imm = 0xF8F6
	movw	$26545, RunTimeSignatureAdjuster # imm = 0x67B1
	movq	%rax, %rdi
	callq	rdifftime
	movw	$-1802, BasicBlockSignatureTracker # imm = 0xF8F6
	movw	$26545, RunTimeSignatureAdjuster # imm = 0x67B1
	movl	%eax, (%r13)
	movl	(%r13), %eax
	movw	$-1802, BasicBlockSignatureTracker # imm = 0xF8F6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB125_6
# %bb.4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-1797, %ax             # imm = 0xF8FB
	jne	.LBB125_52
# %bb.5:                                # %post_thinking.split103
	movsd	.LCPI125_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	nodes, %eax
	cvtsi2sdl	%eax, %xmm1
	mulsd	%xmm1, %xmm0
	movl	(%r13), %eax
	cvtsi2sdl	%eax, %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, (%r12)
	cvttsd2si	(%r12), %eax
	movl	%eax, (%r14)
	movw	$-1797, BasicBlockSignatureTracker # imm = 0xF8FB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB125_8
.LBB125_6:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$11, %ax
	cmpw	$-1795, %ax             # imm = 0xF8FD
	jne	.LBB125_52
# %bb.7:                                # %post_thinking.split105
	movl	nodes, %eax
	movl	%eax, (%r14)
	movw	$-1795, BasicBlockSignatureTracker # imm = 0xF8FD
	movw	$6, RunTimeSignatureAdjuster
.LBB125_8:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$4, %ax
	xorw	%cx, %ax
	cmpw	$-1793, %ax             # imm = 0xF8FF
	jne	.LBB125_52
# %bb.9:                                # %post_thinking.split107
	movl	xb_mode, %eax
	movw	$-1793, BasicBlockSignatureTracker # imm = 0xF8FF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB125_12
# %bb.10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$509, %ax               # imm = 0x1FD
	cmpw	$-1790, %ax             # imm = 0xF902
	jne	.LBB125_52
# %bb.11:                               # %post_thinking.split109
	movabsq	$.L.str.50.471, %rdi
	movl	i_depth, %esi
	movl	(%r15), %edx
	movl	(%r13), %ecx
	movl	nodes, %r8d
	movb	$0, %al
	callq	printf
	movw	$-1790, BasicBlockSignatureTracker # imm = 0xF902
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB125_14
.LBB125_12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$495, %ax               # imm = 0x1EF
	cmpw	$-1776, %ax             # imm = 0xF910
	jne	.LBB125_52
# %bb.13:                               # %post_thinking.split111
	movl	$100, %ecx
	movl	$32, %r14d
	movl	$45, %eax
	movl	i_depth, %r12d
	movl	(%r15), %edx
	cmpl	$0, %edx
	cmovll	%eax, %r14d
	movl	(%r15), %eax
	cltd
	idivl	%ecx
	movl	%eax, %edi
	callq	abs
	movl	%eax, %r13d
	movl	$100, %ecx
	movl	(%r15), %eax
	cltd
	idivl	%ecx
	movl	%edx, %edi
	callq	abs
	movabsq	$.L.str.51.472, %rdi
	movl	nodes, %r9d
	movl	%r12d, %esi
	movl	%r14d, %edx
	movl	%r13d, %ecx
	movl	%eax, %r8d
	movb	$0, %al
	callq	printf
	movw	$-1776, BasicBlockSignatureTracker # imm = 0xF910
	movw	$18, RunTimeSignatureAdjuster
.LBB125_14:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$36, %ax
	xorw	%cx, %ax
	cmpw	$-1754, %ax             # imm = 0xF926
	jne	.LBB125_52
# %bb.15:                               # %post_thinking.split113
	movl	pv+7224, %eax
	movw	$-1754, BasicBlockSignatureTracker # imm = 0xF926
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB125_18
# %bb.16:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-1746, %ax             # imm = 0xF92E
	jne	.LBB125_52
# %bb.17:                               # %post_thinking.split115
	movslq	pv+7224, %rax
	movl	board(,%rax,4), %eax
	movw	$-1746, BasicBlockSignatureTracker # imm = 0xF92E
	movw	$8, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB125_22
.LBB125_18:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18, %ax
	xorw	%cx, %ax
	cmpw	$-1740, %ax             # imm = 0xF934
	jne	.LBB125_52
# %bb.19:                               # %post_thinking.split117
	movl	pv+7224, %eax
	movw	$-1740, BasicBlockSignatureTracker # imm = 0xF934
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB125_28
# %bb.20:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$107, %ax
	cmpw	$-1697, %ax             # imm = 0xF95F
	jne	.LBB125_52
# %bb.21:                               # %post_thinking.split121
	movslq	pv+7228, %rax
	movl	board(,%rax,4), %eax
	movw	$-1697, BasicBlockSignatureTracker # imm = 0xF95F
	movw	$107, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB125_24
	jmp	.LBB125_28
.LBB125_22:                             # %Buffer__
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9733, %ax              # imm = 0x2605
	cmpw	$-8405, %ax             # imm = 0xDF2B
	jne	.LBB125_52
# %bb.23:                               # %post_thinking.split119
	movw	$-8405, BasicBlockSignatureTracker # imm = 0xDF2B
	movw	$9733, RunTimeSignatureAdjuster # imm = 0x2605
	jmp	.LBB125_26
.LBB125_24:                             # %Buffer__1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-17237, %ax            # imm = 0xBCAB
	cmpw	$17908, %ax             # imm = 0x45F4
	jne	.LBB125_52
# %bb.25:                               # %post_thinking.split125
	movw	$17908, BasicBlockSignatureTracker # imm = 0x45F4
	movw	$-17190, RunTimeSignatureAdjuster # imm = 0xBCDA
.LBB125_26:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$73, %ax
	xorw	%cx, %ax
	cmpw	$-1689, %ax             # imm = 0xF967
	jne	.LBB125_52
# %bb.27:                               # %post_thinking.split147
	movabsq	$pv, %rdi
	addq	$7200, %rdi             # imm = 0x1C20
	addq	$24, %rdi
	movw	$-1689, BasicBlockSignatureTracker # imm = 0xF967
	movw	$29568, RunTimeSignatureAdjuster # imm = 0x7380
	xorl	%esi, %esi
	callq	unmake
	movw	$-1689, BasicBlockSignatureTracker # imm = 0xF967
	movw	$29568, RunTimeSignatureAdjuster # imm = 0x7380
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	$1, (%rax)
	movw	$-1689, BasicBlockSignatureTracker # imm = 0xF967
	movw	$83, RunTimeSignatureAdjuster
.LBB125_28:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$94, %ax
	xorw	%cx, %ax
	cmpw	$-1686, %ax             # imm = 0xF96A
	jne	.LBB125_52
# %bb.29:                               # %post_thinking.split123
	movq	-48(%rbp), %r14         # 8-byte Reload
	movl	$1, (%r14)
	movw	$-1686, BasicBlockSignatureTracker # imm = 0xF96A
	movw	$0, RunTimeSignatureAdjuster
.LBB125_30:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$250, %ax
	xorw	%cx, %ax
	cmpw	$-1648, %ax             # imm = 0xF990
	jne	.LBB125_51
# %bb.31:                               # %post_thinking.split127
                                        #   in Loop: Header=BB125_30 Depth=1
	movl	(%r14), %eax
	movl	pv_length+4, %ecx
	movw	$-1648, BasicBlockSignatureTracker # imm = 0xF990
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB125_36
# %bb.32:                               #   in Loop: Header=BB125_30 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2, %ax
	cmpw	$-1646, %ax             # imm = 0xF992
	jne	.LBB125_51
# %bb.33:                               # %post_thinking.split129
                                        #   in Loop: Header=BB125_30 Depth=1
	movabsq	$pv, %rax
	addq	$7200, %rax             # imm = 0x1C20
	movslq	(%r14), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movw	$-1646, BasicBlockSignatureTracker # imm = 0xF992
	movw	$-4669, RunTimeSignatureAdjuster # imm = 0xEDC3
	subq	$32, %rsp
	movq	(%rax), %rcx
	movq	%rcx, (%rsp)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rsp)
	movq	16(%rax), %rax
	movq	%rax, 16(%rsp)
	movq	%rbx, %rdi
	callq	comp_to_san
	addq	$32, %rsp
	movabsq	$pv, %rdi
	addq	$7200, %rdi             # imm = 0x1C20
	movw	$-1646, BasicBlockSignatureTracker # imm = 0xF992
	movw	$-4669, RunTimeSignatureAdjuster # imm = 0xEDC3
	movslq	(%r14), %rax
	imulq	$24, %rax, %rax
	addq	%rax, %rdi
	movw	$-1646, BasicBlockSignatureTracker # imm = 0xF992
	movw	$29474, RunTimeSignatureAdjuster # imm = 0x7322
	xorl	%esi, %esi
	callq	make
	movabsq	$.L.str.52.473, %rdi
	movw	$-1646, BasicBlockSignatureTracker # imm = 0xF992
	movw	$29474, RunTimeSignatureAdjuster # imm = 0x7322
	movq	%rbx, %rsi
	movb	$0, %al
	callq	printf
	movw	$-1646, BasicBlockSignatureTracker # imm = 0xF992
	movw	$0, RunTimeSignatureAdjuster
# %bb.34:                               #   in Loop: Header=BB125_30 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-1635, %ax             # imm = 0xF99D
	jne	.LBB125_51
# %bb.35:                               # %post_thinking.split133
                                        #   in Loop: Header=BB125_30 Depth=1
	movl	(%r14), %eax
	addl	$1, %eax
	movl	%eax, (%r14)
	movw	$-1635, BasicBlockSignatureTracker # imm = 0xF99D
	movw	$247, RunTimeSignatureAdjuster
	jmp	.LBB125_30
.LBB125_36:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-1623, %ax             # imm = 0xF9A9
	jne	.LBB125_52
# %bb.37:                               # %post_thinking.split131
	movq	-64(%rbp), %rbx         # 8-byte Reload
	movq	%rbx, %rdi
	xorl	%esi, %esi
	movl	$256, %edx              # imm = 0x100
	callq	memset
	movw	$-1623, BasicBlockSignatureTracker # imm = 0xF9A9
	movw	$482, RunTimeSignatureAdjuster # imm = 0x1E2
	movl	$7, %edi
	movq	%rbx, %rsi
	callq	hash_extract_pv
	movabsq	$.L.str.53.474, %rdi
	movw	$-1623, BasicBlockSignatureTracker # imm = 0xF9A9
	movw	$482, RunTimeSignatureAdjuster # imm = 0x1E2
	movq	%rbx, %rsi
	movb	$0, %al
	callq	printf
	movl	pv_length+4, %eax
	subl	$1, %eax
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movl	%eax, (%rdx)
	movw	$-1623, BasicBlockSignatureTracker # imm = 0xF9A9
	movw	$0, RunTimeSignatureAdjuster
.LBB125_38:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$126, %ax
	xorw	%cx, %ax
	cmpw	$-1577, %ax             # imm = 0xF9D7
	jne	.LBB125_50
# %bb.39:                               # %post_thinking.split135
                                        #   in Loop: Header=BB125_38 Depth=1
	movl	(%rdx), %eax
	movw	$-1577, BasicBlockSignatureTracker # imm = 0xF9D7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB125_44
# %bb.40:                               #   in Loop: Header=BB125_38 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-1573, %ax             # imm = 0xF9DB
	movq	-48(%rbp), %rax         # 8-byte Reload
	jne	.LBB125_50
# %bb.41:                               # %post_thinking.split137
                                        #   in Loop: Header=BB125_38 Depth=1
	movabsq	$pv, %rdi
	addq	$7200, %rdi             # imm = 0x1C20
	movslq	(%rax), %rax
	imulq	$24, %rax, %rax
	addq	%rax, %rdi
	movw	$-1573, BasicBlockSignatureTracker # imm = 0xF9DB
	movw	$29500, RunTimeSignatureAdjuster # imm = 0x733C
	xorl	%esi, %esi
	callq	unmake
	movw	$-1573, BasicBlockSignatureTracker # imm = 0xF9DB
	movw	$29500, RunTimeSignatureAdjuster # imm = 0x733C
	movw	$-1573, BasicBlockSignatureTracker # imm = 0xF9DB
	movw	$0, RunTimeSignatureAdjuster
# %bb.42:                               #   in Loop: Header=BB125_38 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-1566, %ax             # imm = 0xF9E2
	movq	-48(%rbp), %rdx         # 8-byte Reload
	jne	.LBB125_50
# %bb.43:                               # %post_thinking.split141
                                        #   in Loop: Header=BB125_38 Depth=1
	movl	(%rdx), %eax
	addl	$-1, %eax
	movl	%eax, (%rdx)
	movw	$-1566, BasicBlockSignatureTracker # imm = 0xF9E2
	movw	$75, RunTimeSignatureAdjuster
	jmp	.LBB125_38
.LBB125_44:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-1562, %ax             # imm = 0xF9E6
	jne	.LBB125_52
# %bb.45:                               # %post_thinking.split139
	movq	-56(%rbp), %rax         # 8-byte Reload
	movl	(%rax), %eax
	movw	$-1562, BasicBlockSignatureTracker # imm = 0xF9E6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB125_48
# %bb.46:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-1561, %ax             # imm = 0xF9E7
	jne	.LBB125_52
# %bb.47:                               # %post_thinking.split143
	movabsq	$pv, %rdi
	addq	$7200, %rdi             # imm = 0x1C20
	addq	$24, %rdi
	movw	$-1561, BasicBlockSignatureTracker # imm = 0xF9E7
	movw	$29527, RunTimeSignatureAdjuster # imm = 0x7357
	xorl	%esi, %esi
	callq	make
	movw	$-1561, BasicBlockSignatureTracker # imm = 0xF9E7
	movw	$29527, RunTimeSignatureAdjuster # imm = 0x7357
	movw	$-1561, BasicBlockSignatureTracker # imm = 0xF9E7
	movw	$1, RunTimeSignatureAdjuster
.LBB125_48:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-1559, %ax             # imm = 0xF9E9
	jne	.LBB125_52
# %bb.49:                               # %post_thinking.split145
	movabsq	$.L.str.54.475, %rdi
	movb	$0, %al
	callq	printf
	movw	$-1559, BasicBlockSignatureTracker # imm = 0xF9E9
	movw	$17737, RunTimeSignatureAdjuster # imm = 0x4549
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB125_50:                             # %CFerrorHandler.post_thinking.loopexit
	jmp	.LBB125_52
.LBB125_51:                             # %CFerrorHandler.post_thinking.loopexit1
	jmp	.LBB125_52
.LBB125_52:                             # %CFerrorHandler.post_thinking
	callq	FAULT_DETECTED_CFC
.Lfunc_end125:
	.size	post_thinking, .Lfunc_end125-post_thinking
	.cfi_endproc
                                        # -- End function
	.globl	rtime                   # -- Begin function rtime
	.p2align	4, 0x90
	.type	rtime,@function
rtime:                                  # @rtime
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.1:                                # %rtime.split162
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.2:                                # %rtime.split160
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.3:                                # %rtime.split158
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.4:                                # %rtime.split156
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.5:                                # %rtime.split154
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.6:                                # %rtime.split152
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.7:                                # %rtime.split150
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.8:                                # %rtime.split148
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.9:                                # %rtime.split146
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.10:                               # %rtime.split144
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.11:                               # %rtime.split142
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.12:                               # %rtime.split140
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.13:                               # %rtime.split138
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.14:                               # %rtime.split136
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.15:                               # %rtime.split134
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.16:                               # %rtime.split132
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.17:                               # %rtime.split130
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.18:                               # %rtime.split128
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.19:                               # %rtime.split126
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.20:                               # %rtime.split124
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.21:                               # %rtime.split122
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.22:                               # %rtime.split120
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.23:                               # %rtime.split118
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-4937, %ax             # imm = 0xECB7
	xorw	%cx, %ax
	cmpw	$-1545, %ax             # imm = 0xF9F7
	jne	.LBB126_25
# %bb.24:                               # %rtime.split
	movw	$-1545, BasicBlockSignatureTracker # imm = 0xF9F7
	movw	$-4925, RunTimeSignatureAdjuster # imm = 0xECC3
	xorl	%eax, %eax
	popq	%rbp
	retq
.LBB126_25:                             # %CFerrorHandler.rtime
	callq	FAULT_DETECTED_CFC
.Lfunc_end126:
	.size	rtime, .Lfunc_end126-rtime
	.cfi_endproc
                                        # -- End function
	.globl	rdifftime               # -- Begin function rdifftime
	.p2align	4, 0x90
	.type	rdifftime,@function
rdifftime:                              # @rdifftime
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.1:                                # %rdifftime.split99
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.2:                                # %rdifftime.split97
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.3:                                # %rdifftime.split95
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.4:                                # %rdifftime.split93
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.5:                                # %rdifftime.split91
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.6:                                # %rdifftime.split89
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.7:                                # %rdifftime.split87
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.8:                                # %rdifftime.split85
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.9:                                # %rdifftime.split83
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.10:                               # %rdifftime.split81
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.11:                               # %rdifftime.split79
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.12:                               # %rdifftime.split77
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.13:                               # %rdifftime.split75
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.14:                               # %rdifftime.split73
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25931, %ax             # imm = 0x654B
	xorw	%cx, %ax
	cmpw	$-1524, %ax             # imm = 0xFA0C
	jne	.LBB127_16
# %bb.15:                               # %rdifftime.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rdi, (%rax)
	movq	%rsi, (%rcx)
	movq	(%rax), %rdi
	movq	(%rcx), %rsi
	callq	difftime
	cvttsd2si	%xmm0, %eax
	imull	$100, %eax, %eax
	movw	$-1524, BasicBlockSignatureTracker # imm = 0xFA0C
	movw	$25909, RunTimeSignatureAdjuster # imm = 0x6535
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB127_16:                             # %CFerrorHandler.rdifftime
	callq	FAULT_DETECTED_CFC
.Lfunc_end127:
	.size	rdifftime, .Lfunc_end127-rdifftime
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function post_fail_thinking
.LCPI128_0:
	.quad	4636737291354636288     # double 100
	.text
	.globl	post_fail_thinking
	.p2align	4, 0x90
	.type	post_fail_thinking,@function
post_fail_thinking:                     # @post_fail_thinking
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$18226, %ax             # imm = 0x4732
	xorw	%cx, %ax
	cmpw	$-1519, %ax             # imm = 0xFA11
	jne	.LBB128_14
# %bb.1:                                # %post_fail_thinking.split
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rax
	addq	$-256, %rax
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movl	%edi, (%r12)
	movq	%rsi, (%r14)
	movw	$-1519, BasicBlockSignatureTracker # imm = 0xFA11
	movw	$-4271, RunTimeSignatureAdjuster # imm = 0xEF51
	callq	rtime
	movw	$-1519, BasicBlockSignatureTracker # imm = 0xFA11
	movw	$-4271, RunTimeSignatureAdjuster # imm = 0xEF51
	movq	start_time, %rsi
	movw	$-1519, BasicBlockSignatureTracker # imm = 0xFA11
	movw	$25942, RunTimeSignatureAdjuster # imm = 0x6556
	movq	%rax, %rdi
	callq	rdifftime
	movw	$-1519, BasicBlockSignatureTracker # imm = 0xFA11
	movw	$25942, RunTimeSignatureAdjuster # imm = 0x6556
	movl	%eax, (%rbx)
	movl	(%rbx), %eax
	movw	$-1519, BasicBlockSignatureTracker # imm = 0xFA11
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB128_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$58, %ax
	cmpw	$-1493, %ax             # imm = 0xFA2B
	jne	.LBB128_14
# %bb.3:                                # %post_fail_thinking.split25
	movsd	.LCPI128_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	nodes, %eax
	cvtsi2sdl	%eax, %xmm1
	mulsd	%xmm1, %xmm0
	movl	(%rbx), %eax
	cvtsi2sdl	%eax, %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, (%r15)
	cvttsd2si	(%r15), %eax
	movl	%eax, (%r13)
	movw	$-1493, BasicBlockSignatureTracker # imm = 0xFA2B
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB128_6
.LBB128_4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$63, %ax
	cmpw	$-1490, %ax             # imm = 0xFA2E
	jne	.LBB128_14
# %bb.5:                                # %post_fail_thinking.split27
	movl	nodes, %eax
	movl	%eax, (%r13)
	movw	$-1490, BasicBlockSignatureTracker # imm = 0xFA2E
	movw	$5, RunTimeSignatureAdjuster
.LBB128_6:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$21, %ax
	xorw	%cx, %ax
	cmpw	$-1474, %ax             # imm = 0xFA3E
	jne	.LBB128_14
# %bb.7:                                # %post_fail_thinking.split29
	movl	xb_mode, %eax
	movw	$-1474, BasicBlockSignatureTracker # imm = 0xFA3E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB128_10
# %bb.8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$125, %ax
	cmpw	$-1469, %ax             # imm = 0xFA43
	jne	.LBB128_14
# %bb.9:                                # %post_fail_thinking.split31
	movabsq	$.L.str.50.471, %rdi
	movl	i_depth, %esi
	movl	(%r12), %edx
	movl	(%rbx), %ecx
	movl	nodes, %r8d
	movb	$0, %al
	callq	printf
	movw	$-1469, BasicBlockSignatureTracker # imm = 0xFA43
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB128_12
.LBB128_10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$118, %ax
	cmpw	$-1464, %ax             # imm = 0xFA48
	jne	.LBB128_14
# %bb.11:                               # %post_fail_thinking.split33
	movl	$100, %ecx
	movl	$32, %ebx
	movl	$45, %eax
	movl	i_depth, %r15d
	movl	(%r12), %edx
	cmpl	$0, %edx
	cmovll	%eax, %ebx
	movl	(%r12), %eax
	cltd
	idivl	%ecx
	movl	%eax, %edi
	callq	abs
	movl	%eax, %r13d
	movl	$100, %ecx
	movl	(%r12), %eax
	cltd
	idivl	%ecx
	movl	%edx, %edi
	callq	abs
	movabsq	$.L.str.51.472, %rdi
	movl	nodes, %r9d
	movl	%r15d, %esi
	movl	%ebx, %edx
	movl	%r13d, %ecx
	movl	%eax, %r8d
	movb	$0, %al
	callq	printf
	movw	$-1464, BasicBlockSignatureTracker # imm = 0xFA48
	movw	$11, RunTimeSignatureAdjuster
.LBB128_12:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9, %ax
	xorw	%cx, %ax
	cmpw	$-1462, %ax             # imm = 0xFA4A
	jne	.LBB128_14
# %bb.13:                               # %post_fail_thinking.split35
	movq	(%r14), %rdi
	movw	$-1462, BasicBlockSignatureTracker # imm = 0xFA4A
	movw	$28845, RunTimeSignatureAdjuster # imm = 0x70AD
	xorl	%esi, %esi
	callq	unmake
	movw	$-1462, BasicBlockSignatureTracker # imm = 0xFA4A
	movw	$28845, RunTimeSignatureAdjuster # imm = 0x70AD
	movq	(%r14), %rax
	movq	(%rax), %rcx
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rax), %rax
	movq	%rax, 16(%rdx)
	movw	$-1462, BasicBlockSignatureTracker # imm = 0xFA4A
	movw	$-4581, RunTimeSignatureAdjuster # imm = 0xEE1B
	subq	$32, %rsp
	movq	(%rdx), %rax
	movq	%rax, (%rsp)
	movq	8(%rdx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rsp)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movq	%rbx, %rdi
	callq	comp_to_san
	addq	$32, %rsp
	movw	$-1462, BasicBlockSignatureTracker # imm = 0xFA4A
	movw	$-4581, RunTimeSignatureAdjuster # imm = 0xEE1B
	movq	(%r14), %rdi
	movw	$-1462, BasicBlockSignatureTracker # imm = 0xFA4A
	movw	$28922, RunTimeSignatureAdjuster # imm = 0x70FA
	xorl	%esi, %esi
	callq	make
	movabsq	$.L.str.55.478, %rdi
	movw	$-1462, BasicBlockSignatureTracker # imm = 0xFA4A
	movw	$28922, RunTimeSignatureAdjuster # imm = 0x70FA
	movq	%rbx, %rsi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.54.475, %rdi
	movb	$0, %al
	callq	printf
	movw	$-1462, BasicBlockSignatureTracker # imm = 0xFA4A
	movw	$18258, RunTimeSignatureAdjuster # imm = 0x4752
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB128_14:                             # %CFerrorHandler.post_fail_thinking
	callq	FAULT_DETECTED_CFC
.Lfunc_end128:
	.size	post_fail_thinking, .Lfunc_end128-post_fail_thinking
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function post_fh_thinking
.LCPI129_0:
	.quad	4636737291354636288     # double 100
	.text
	.globl	post_fh_thinking
	.p2align	4, 0x90
	.type	post_fh_thinking,@function
post_fh_thinking:                       # @post_fh_thinking
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17926, %ax             # imm = 0x4606
	xorw	%cx, %ax
	cmpw	$-1440, %ax             # imm = 0xFA60
	jne	.LBB129_15
# %bb.1:                                # %post_fh_thinking.split30
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17926, %ax             # imm = 0x4606
	xorw	%cx, %ax
	cmpw	$-1440, %ax             # imm = 0xFA60
	jne	.LBB129_15
# %bb.2:                                # %post_fh_thinking.split
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rax
	addq	$-256, %rax
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movl	%edi, (%r12)
	movq	%rsi, (%r14)
	movw	$-1440, BasicBlockSignatureTracker # imm = 0xFA60
	movw	$-4320, RunTimeSignatureAdjuster # imm = 0xEF20
	callq	rtime
	movw	$-1440, BasicBlockSignatureTracker # imm = 0xFA60
	movw	$-4320, RunTimeSignatureAdjuster # imm = 0xEF20
	movq	start_time, %rsi
	movw	$-1440, BasicBlockSignatureTracker # imm = 0xFA60
	movw	$25895, RunTimeSignatureAdjuster # imm = 0x6527
	movq	%rax, %rdi
	callq	rdifftime
	movw	$-1440, BasicBlockSignatureTracker # imm = 0xFA60
	movw	$25895, RunTimeSignatureAdjuster # imm = 0x6527
	movl	%eax, (%rbx)
	movl	(%rbx), %eax
	movw	$-1440, BasicBlockSignatureTracker # imm = 0xFA60
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB129_5
# %bb.3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-1439, %ax             # imm = 0xFA61
	jne	.LBB129_15
# %bb.4:                                # %post_fh_thinking.split32
	movsd	.LCPI129_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	nodes, %eax
	cvtsi2sdl	%eax, %xmm1
	mulsd	%xmm1, %xmm0
	movl	(%rbx), %eax
	cvtsi2sdl	%eax, %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, (%r15)
	cvttsd2si	(%r15), %eax
	movl	%eax, (%r13)
	movw	$-1439, BasicBlockSignatureTracker # imm = 0xFA61
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB129_7
.LBB129_5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-1427, %ax             # imm = 0xFA6D
	jne	.LBB129_15
# %bb.6:                                # %post_fh_thinking.split34
	movl	nodes, %eax
	movl	%eax, (%r13)
	movw	$-1427, BasicBlockSignatureTracker # imm = 0xFA6D
	movw	$12, RunTimeSignatureAdjuster
.LBB129_7:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$197, %ax
	xorw	%cx, %ax
	cmpw	$-1372, %ax             # imm = 0xFAA4
	jne	.LBB129_15
# %bb.8:                                # %post_fh_thinking.split36
	movl	xb_mode, %eax
	movw	$-1372, BasicBlockSignatureTracker # imm = 0xFAA4
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB129_11
# %bb.9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-1365, %ax             # imm = 0xFAAB
	jne	.LBB129_15
# %bb.10:                               # %post_fh_thinking.split38
	movabsq	$.L.str.50.471, %rdi
	movl	i_depth, %esi
	movl	(%r12), %edx
	movl	(%rbx), %ecx
	movl	nodes, %r8d
	movb	$0, %al
	callq	printf
	movw	$-1365, BasicBlockSignatureTracker # imm = 0xFAAB
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB129_13
.LBB129_11:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29, %ax
	cmpw	$-1351, %ax             # imm = 0xFAB9
	jne	.LBB129_15
# %bb.12:                               # %post_fh_thinking.split40
	movl	$100, %ecx
	movl	$32, %ebx
	movl	$45, %eax
	movl	i_depth, %r15d
	movl	(%r12), %edx
	cmpl	$0, %edx
	cmovll	%eax, %ebx
	movl	(%r12), %eax
	cltd
	idivl	%ecx
	movl	%eax, %edi
	callq	abs
	movl	%eax, %r13d
	movl	$100, %ecx
	movl	(%r12), %eax
	cltd
	idivl	%ecx
	movl	%edx, %edi
	callq	abs
	movabsq	$.L.str.51.472, %rdi
	movl	nodes, %r9d
	movl	%r15d, %esi
	movl	%ebx, %edx
	movl	%r13d, %ecx
	movl	%eax, %r8d
	movb	$0, %al
	callq	printf
	movw	$-1351, BasicBlockSignatureTracker # imm = 0xFAB9
	movw	$18, RunTimeSignatureAdjuster
.LBB129_13:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$16, %ax
	xorw	%cx, %ax
	cmpw	$-1349, %ax             # imm = 0xFABB
	jne	.LBB129_15
# %bb.14:                               # %post_fh_thinking.split42
	movq	(%r14), %rdi
	movw	$-1349, BasicBlockSignatureTracker # imm = 0xFABB
	movw	$28764, RunTimeSignatureAdjuster # imm = 0x705C
	xorl	%esi, %esi
	callq	unmake
	movw	$-1349, BasicBlockSignatureTracker # imm = 0xFABB
	movw	$28764, RunTimeSignatureAdjuster # imm = 0x705C
	movq	(%r14), %rax
	movq	(%rax), %rcx
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rax), %rax
	movq	%rax, 16(%rdx)
	movw	$-1349, BasicBlockSignatureTracker # imm = 0xFABB
	movw	$-4374, RunTimeSignatureAdjuster # imm = 0xEEEA
	subq	$32, %rsp
	movq	(%rdx), %rax
	movq	%rax, (%rsp)
	movq	8(%rdx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rsp)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movq	%rbx, %rdi
	callq	comp_to_san
	addq	$32, %rsp
	movw	$-1349, BasicBlockSignatureTracker # imm = 0xFABB
	movw	$-4374, RunTimeSignatureAdjuster # imm = 0xEEEA
	movq	(%r14), %rdi
	movw	$-1349, BasicBlockSignatureTracker # imm = 0xFABB
	movw	$28683, RunTimeSignatureAdjuster # imm = 0x700B
	xorl	%esi, %esi
	callq	make
	movabsq	$.L.str.56.481, %rdi
	movw	$-1349, BasicBlockSignatureTracker # imm = 0xFABB
	movw	$28683, RunTimeSignatureAdjuster # imm = 0x700B
	movq	%rbx, %rsi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.54.475, %rdi
	movb	$0, %al
	callq	printf
	movw	$-1349, BasicBlockSignatureTracker # imm = 0xFABB
	movw	$18142, RunTimeSignatureAdjuster # imm = 0x46DE
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB129_15:                             # %CFerrorHandler.post_fh_thinking
	callq	FAULT_DETECTED_CFC
.Lfunc_end129:
	.size	post_fh_thinking, .Lfunc_end129-post_fh_thinking
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function post_fl_thinking
.LCPI130_0:
	.quad	4636737291354636288     # double 100
	.text
	.globl	post_fl_thinking
	.p2align	4, 0x90
	.type	post_fl_thinking,@function
post_fl_thinking:                       # @post_fl_thinking
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$24, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17991, %ax             # imm = 0x4647
	xorw	%cx, %ax
	cmpw	$-1334, %ax             # imm = 0xFACA
	jne	.LBB130_14
# %bb.1:                                # %post_fl_thinking.split
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rax
	addq	$-256, %rax
	movq	%rax, -56(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rax
	addq	$-32, %rax
	movq	%rax, -48(%rbp)         # 8-byte Spill
	movq	%rax, %rsp
	movl	%edi, (%r12)
	movq	%rsi, (%r14)
	movw	$-1334, BasicBlockSignatureTracker # imm = 0xFACA
	movw	$-4214, RunTimeSignatureAdjuster # imm = 0xEF8A
	callq	rtime
	movw	$-1334, BasicBlockSignatureTracker # imm = 0xFACA
	movw	$-4214, RunTimeSignatureAdjuster # imm = 0xEF8A
	movq	start_time, %rsi
	movw	$-1334, BasicBlockSignatureTracker # imm = 0xFACA
	movw	$25997, RunTimeSignatureAdjuster # imm = 0x658D
	movq	%rax, %rdi
	callq	rdifftime
	movw	$-1334, BasicBlockSignatureTracker # imm = 0xFACA
	movw	$25997, RunTimeSignatureAdjuster # imm = 0x658D
	movl	%eax, (%rbx)
	movl	(%rbx), %eax
	movw	$-1334, BasicBlockSignatureTracker # imm = 0xFACA
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jle	.LBB130_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-1331, %ax             # imm = 0xFACD
	jne	.LBB130_14
# %bb.3:                                # %post_fl_thinking.split25
	movsd	.LCPI130_0(%rip), %xmm0 # xmm0 = mem[0],zero
	movl	nodes, %eax
	cvtsi2sdl	%eax, %xmm1
	mulsd	%xmm1, %xmm0
	movl	(%rbx), %eax
	cvtsi2sdl	%eax, %xmm1
	divsd	%xmm1, %xmm0
	movsd	%xmm0, (%r15)
	cvttsd2si	(%r15), %eax
	movl	%eax, (%r13)
	movw	$-1331, BasicBlockSignatureTracker # imm = 0xFACD
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB130_6
.LBB130_4:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-1326, %ax             # imm = 0xFAD2
	jne	.LBB130_14
# %bb.5:                                # %post_fl_thinking.split27
	movl	nodes, %eax
	movl	%eax, (%r13)
	movw	$-1326, BasicBlockSignatureTracker # imm = 0xFAD2
	movw	$31, RunTimeSignatureAdjuster
.LBB130_6:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$-1295, %ax             # imm = 0xFAF1
	jne	.LBB130_14
# %bb.7:                                # %post_fl_thinking.split29
	movl	xb_mode, %eax
	movw	$-1295, BasicBlockSignatureTracker # imm = 0xFAF1
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB130_10
# %bb.8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$498, %ax               # imm = 0x1F2
	cmpw	$-1277, %ax             # imm = 0xFB03
	jne	.LBB130_14
# %bb.9:                                # %post_fl_thinking.split31
	movabsq	$.L.str.50.471, %rdi
	movl	i_depth, %esi
	movl	(%r12), %edx
	movl	(%rbx), %ecx
	movl	nodes, %r8d
	movb	$0, %al
	callq	printf
	movw	$-1277, BasicBlockSignatureTracker # imm = 0xFB03
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB130_12
.LBB130_10:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$508, %ax               # imm = 0x1FC
	cmpw	$-1267, %ax             # imm = 0xFB0D
	jne	.LBB130_14
# %bb.11:                               # %post_fl_thinking.split33
	movl	$100, %ecx
	movl	$32, %ebx
	movl	$45, %eax
	movl	i_depth, %r15d
	movl	(%r12), %edx
	cmpl	$0, %edx
	cmovll	%eax, %ebx
	movl	(%r12), %eax
	cltd
	idivl	%ecx
	movl	%eax, %edi
	callq	abs
	movl	%eax, %r13d
	movl	$100, %ecx
	movl	(%r12), %eax
	cltd
	idivl	%ecx
	movl	%edx, %edi
	callq	abs
	movabsq	$.L.str.51.472, %rdi
	movl	nodes, %r9d
	movl	%r15d, %esi
	movl	%ebx, %edx
	movl	%r13d, %ecx
	movl	%eax, %r8d
	movb	$0, %al
	callq	printf
	movw	$-1267, BasicBlockSignatureTracker # imm = 0xFB0D
	movw	$14, RunTimeSignatureAdjuster
.LBB130_12:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$20, %ax
	xorw	%cx, %ax
	cmpw	$-1257, %ax             # imm = 0xFB17
	jne	.LBB130_14
# %bb.13:                               # %post_fl_thinking.split35
	movq	(%r14), %rdi
	movw	$-1257, BasicBlockSignatureTracker # imm = 0xFB17
	movw	$29168, RunTimeSignatureAdjuster # imm = 0x71F0
	xorl	%esi, %esi
	callq	unmake
	movw	$-1257, BasicBlockSignatureTracker # imm = 0xFB17
	movw	$29168, RunTimeSignatureAdjuster # imm = 0x71F0
	movq	(%r14), %rax
	movq	(%rax), %rcx
	movq	-48(%rbp), %rdx         # 8-byte Reload
	movq	%rcx, (%rdx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rdx)
	movq	16(%rax), %rax
	movq	%rax, 16(%rdx)
	movw	$-1257, BasicBlockSignatureTracker # imm = 0xFB17
	movw	$-4282, RunTimeSignatureAdjuster # imm = 0xEF46
	subq	$32, %rsp
	movq	(%rdx), %rax
	movq	%rax, (%rsp)
	movq	8(%rdx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rdx), %rax
	movq	%rax, 16(%rsp)
	movq	-56(%rbp), %rbx         # 8-byte Reload
	movq	%rbx, %rdi
	callq	comp_to_san
	addq	$32, %rsp
	movw	$-1257, BasicBlockSignatureTracker # imm = 0xFB17
	movw	$-4282, RunTimeSignatureAdjuster # imm = 0xEF46
	movq	(%r14), %rdi
	movw	$-1257, BasicBlockSignatureTracker # imm = 0xFB17
	movw	$29095, RunTimeSignatureAdjuster # imm = 0x71A7
	xorl	%esi, %esi
	callq	make
	movabsq	$.L.str.57.484, %rdi
	movw	$-1257, BasicBlockSignatureTracker # imm = 0xFB17
	movw	$29095, RunTimeSignatureAdjuster # imm = 0x71A7
	movq	%rbx, %rsi
	movb	$0, %al
	callq	printf
	movabsq	$.L.str.54.475, %rdi
	movb	$0, %al
	callq	printf
	movw	$-1257, BasicBlockSignatureTracker # imm = 0xFB17
	movw	$18303, RunTimeSignatureAdjuster # imm = 0x477F
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB130_14:                             # %CFerrorHandler.post_fl_thinking
	callq	FAULT_DETECTED_CFC
.Lfunc_end130:
	.size	post_fl_thinking, .Lfunc_end130-post_fl_thinking
	.cfi_endproc
                                        # -- End function
	.globl	post_stat_thinking      # -- Begin function post_stat_thinking
	.p2align	4, 0x90
	.type	post_stat_thinking,@function
post_stat_thinking:                     # @post_stat_thinking
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movw	$-1250, BasicBlockSignatureTracker # imm = 0xFB1E
	movw	$-4514, RunTimeSignatureAdjuster # imm = 0xEE5E
	callq	rtime
	movw	$-1250, BasicBlockSignatureTracker # imm = 0xFB1E
	movw	$-4514, RunTimeSignatureAdjuster # imm = 0xEE5E
	movq	start_time, %rsi
	movw	$-1250, BasicBlockSignatureTracker # imm = 0xFB1E
	movw	$25689, RunTimeSignatureAdjuster # imm = 0x6459
	movq	%rax, %rdi
	callq	rdifftime
	movw	$-1250, BasicBlockSignatureTracker # imm = 0xFB1E
	movw	$25689, RunTimeSignatureAdjuster # imm = 0x6459
	movl	%eax, -4(%rbp)
	movl	xb_mode, %eax
	movw	$-1250, BasicBlockSignatureTracker # imm = 0xFB1E
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB131_3
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$49, %ax
	cmpw	$-1233, %ax             # imm = 0xFB2F
	jne	.LBB131_11
# %bb.2:                                # %post_stat_thinking.split
	movabsq	$.L.str.58.485, %rdi
	movl	-4(%rbp), %esi
	movl	nodes, %edx
	movl	i_depth, %ecx
	movl	moveleft, %r8d
	movl	movetotal, %r9d
	movb	$0, %al
	callq	printf
	movw	$-1233, BasicBlockSignatureTracker # imm = 0xFB2F
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB131_9
.LBB131_3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$46, %ax
	cmpw	$-1232, %ax             # imm = 0xFB30
	jne	.LBB131_11
# %bb.4:                                # %post_stat_thinking.split17
	movl	xb_mode, %eax
	movw	$-1232, BasicBlockSignatureTracker # imm = 0xFB30
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$2, %eax
	jne	.LBB131_7
# %bb.5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$4, %ax
	cmpw	$-1228, %ax             # imm = 0xFB34
	jne	.LBB131_11
# %bb.6:                                # %post_stat_thinking.split21
	movabsq	$.L.str.59.486, %rdi
	movabsq	$searching_move, %rax
	movl	-4(%rbp), %esi
	movl	nodes, %edx
	movl	i_depth, %ecx
	movl	moveleft, %r8d
	movl	movetotal, %r9d
	movq	%rax, (%rsp)
	movb	$0, %al
	callq	printf
	movw	$-1228, BasicBlockSignatureTracker # imm = 0xFB34
	movw	$4, RunTimeSignatureAdjuster
.LBB131_7:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$117, %ax
	xorw	%cx, %ax
	cmpw	$-1211, %ax             # imm = 0xFB45
	jne	.LBB131_11
# %bb.8:                                # %post_stat_thinking.split23
	movw	$-1211, BasicBlockSignatureTracker # imm = 0xFB45
	movw	$106, RunTimeSignatureAdjuster
.LBB131_9:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$102, %ax
	xorw	%cx, %ax
	cmpw	$-1207, %ax             # imm = 0xFB49
	jne	.LBB131_11
# %bb.10:                               # %post_stat_thinking.split19
	movw	$-1207, BasicBlockSignatureTracker # imm = 0xFB49
	movw	$0, RunTimeSignatureAdjuster
	addq	$16, %rsp
	popq	%rbp
	retq
.LBB131_11:                             # %CFerrorHandler.post_stat_thinking
	callq	FAULT_DETECTED_CFC
.Lfunc_end131:
	.size	post_stat_thinking, .Lfunc_end131-post_stat_thinking
	.cfi_endproc
                                        # -- End function
	.globl	print_move              # -- Begin function print_move
	.p2align	4, 0x90
	.type	print_move,@function
print_move:                             # @print_move
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12289, %ax             # imm = 0x3001
	xorw	%cx, %ax
	cmpw	$-1199, %ax             # imm = 0xFB51
	jne	.LBB132_2
# %bb.1:                                # %print_move.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r15
	addq	$-256, %r15
	movq	%r15, %rsp
	movq	%rsp, %rbx
	addq	$-32, %rbx
	movq	%rbx, %rsp
	movq	%rdi, (%rax)
	movl	%esi, (%rcx)
	movq	%rdx, (%r14)
	movq	(%rax), %rax
	movslq	(%rcx), %rcx
	imulq	$24, %rcx, %rcx
	addq	%rcx, %rax
	movq	(%rax), %rcx
	movq	%rcx, (%rbx)
	movq	8(%rax), %rcx
	movq	%rcx, 8(%rbx)
	movq	16(%rax), %rax
	movq	%rax, 16(%rbx)
	movw	$-1199, BasicBlockSignatureTracker # imm = 0xFB51
	movw	$-4352, RunTimeSignatureAdjuster # imm = 0xEF00
	subq	$32, %rsp
	movq	(%rbx), %rax
	movq	%rax, (%rsp)
	movq	8(%rbx), %rax
	movq	%rax, 8(%rsp)
	movq	16(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	%r15, %rdi
	callq	comp_to_san
	addq	$32, %rsp
	movabsq	$.L.str.53.474, %rsi
	movw	$-1199, BasicBlockSignatureTracker # imm = 0xFB51
	movw	$-4352, RunTimeSignatureAdjuster # imm = 0xEF00
	movq	(%r14), %rdi
	movq	%r15, %rdx
	movb	$0, %al
	callq	fprintf
	movw	$-1199, BasicBlockSignatureTracker # imm = 0xFB51
	movw	$12397, RunTimeSignatureAdjuster # imm = 0x306D
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB132_2:                              # %CFerrorHandler.print_move
	callq	FAULT_DETECTED_CFC
.Lfunc_end132:
	.size	print_move, .Lfunc_end132-print_move
	.cfi_endproc
                                        # -- End function
	.globl	rdelay                  # -- Begin function rdelay
	.p2align	4, 0x90
	.type	rdelay,@function
rdelay:                                 # @rdelay
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$32, %rsp
	movl	%edi, -8(%rbp)
	movl	$0, -4(%rbp)
	movw	$-1178, BasicBlockSignatureTracker # imm = 0xFB66
	movw	$-4570, RunTimeSignatureAdjuster # imm = 0xEE26
	callq	rtime
	movw	$-1178, BasicBlockSignatureTracker # imm = 0xFB66
	movw	$-4570, RunTimeSignatureAdjuster # imm = 0xEE26
	movq	%rax, -24(%rbp)
	movw	$-1178, BasicBlockSignatureTracker # imm = 0xFB66
	movw	$0, RunTimeSignatureAdjuster
.LBB133_1:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$22, %ax
	xorw	%cx, %ax
	cmpw	$-1168, %ax             # imm = 0xFB70
	jne	.LBB133_7
# %bb.2:                                # %rdelay.split
                                        #   in Loop: Header=BB133_1 Depth=1
	movl	$100, %ecx
	movl	-4(%rbp), %eax
	cltd
	idivl	%ecx
	movl	-8(%rbp), %ecx
	movw	$-1168, BasicBlockSignatureTracker # imm = 0xFB70
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jge	.LBB133_5
# %bb.3:                                #   in Loop: Header=BB133_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$14, %ax
	cmpw	$-1154, %ax             # imm = 0xFB7E
	jne	.LBB133_7
# %bb.4:                                # %rdelay.split9
                                        #   in Loop: Header=BB133_1 Depth=1
	movw	$-1154, BasicBlockSignatureTracker # imm = 0xFB7E
	movw	$-4546, RunTimeSignatureAdjuster # imm = 0xEE3E
	callq	rtime
	movw	$-1154, BasicBlockSignatureTracker # imm = 0xFB7E
	movw	$-4546, RunTimeSignatureAdjuster # imm = 0xEE3E
	movq	%rax, -16(%rbp)
	movq	-16(%rbp), %rdi
	movq	-24(%rbp), %rsi
	movw	$-1154, BasicBlockSignatureTracker # imm = 0xFB7E
	movw	$25657, RunTimeSignatureAdjuster # imm = 0x6439
	callq	rdifftime
	movw	$-1154, BasicBlockSignatureTracker # imm = 0xFB7E
	movw	$25657, RunTimeSignatureAdjuster # imm = 0x6439
	movl	%eax, -4(%rbp)
	movw	$-1154, BasicBlockSignatureTracker # imm = 0xFB7E
	movw	$24, RunTimeSignatureAdjuster
	jmp	.LBB133_1
.LBB133_5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$249, %ax
	cmpw	$-1143, %ax             # imm = 0xFB89
	jne	.LBB133_8
# %bb.6:                                # %rdelay.split11
	movw	$-1143, BasicBlockSignatureTracker # imm = 0xFB89
	movw	$0, RunTimeSignatureAdjuster
	addq	$32, %rsp
	popq	%rbp
	retq
.LBB133_7:                              # %CFerrorHandler.rdelay.loopexit
	jmp	.LBB133_8
.LBB133_8:                              # %CFerrorHandler.rdelay
	callq	FAULT_DETECTED_CFC
.Lfunc_end133:
	.size	rdelay, .Lfunc_end133-rdelay
	.cfi_endproc
                                        # -- End function
	.globl	check_piece_square      # -- Begin function check_piece_square
	.p2align	4, 0x90
	.type	check_piece_square,@function
check_piece_square:                     # @check_piece_square
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$16, %rsp
	movl	$1, -4(%rbp)
	movw	$-1136, BasicBlockSignatureTracker # imm = 0xFB90
	movw	$0, RunTimeSignatureAdjuster
.LBB134_1:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5, %ax
	xorw	%cx, %ax
	cmpw	$-1131, %ax             # imm = 0xFB95
	jne	.LBB134_74
# %bb.2:                                # %check_piece_square.split
                                        #   in Loop: Header=BB134_1 Depth=1
	movl	-4(%rbp), %eax
	movl	piece_count, %ecx
	movw	$-1131, BasicBlockSignatureTracker # imm = 0xFB95
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	jg	.LBB134_31
# %bb.3:                                #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-1123, %ax             # imm = 0xFB9D
	jne	.LBB134_74
# %bb.4:                                # %check_piece_square.split145
                                        #   in Loop: Header=BB134_1 Depth=1
	movslq	-4(%rbp), %rax
	movslq	pieces(,%rax,4), %rax
	movl	squares(,%rax,4), %eax
	movl	-4(%rbp), %ecx
	movw	$-1123, BasicBlockSignatureTracker # imm = 0xFB9D
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB134_11
# %bb.5:                                #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-1119, %ax             # imm = 0xFBA1
	jne	.LBB134_74
# %bb.6:                                # %check_piece_square.split149
                                        #   in Loop: Header=BB134_1 Depth=1
	movslq	-4(%rbp), %rax
	movl	pieces(,%rax,4), %eax
	movw	$-1119, BasicBlockSignatureTracker # imm = 0xFBA1
	movw	$60, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB134_11
# %bb.7:                                # %Buffer__
                                        #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$29644, %ax             # imm = 0x73CC
	cmpw	$-30611, %ax            # imm = 0x886D
	jne	.LBB134_74
# %bb.8:                                # %check_piece_square.split153
                                        #   in Loop: Header=BB134_1 Depth=1
	movw	$-30611, BasicBlockSignatureTracker # imm = 0x886D
	movw	$29644, RunTimeSignatureAdjuster # imm = 0x73CC
# %bb.9:                                #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-1105, %ax             # imm = 0xFBAF
	jne	.LBB134_74
# %bb.10:                               # %check_piece_square.split201
                                        #   in Loop: Header=BB134_1 Depth=1
	movabsq	$.L.str.60.489, %rdi
	movb	$0, %al
	callq	printf
	movq	stdout, %rdi
	movw	$-1105, BasicBlockSignatureTracker # imm = 0xFBAF
	movw	$-4239, RunTimeSignatureAdjuster # imm = 0xEF71
	xorl	%esi, %esi
	callq	display_board
	xorl	%eax, %eax
	movw	$-1105, BasicBlockSignatureTracker # imm = 0xFBAF
	movw	$-4239, RunTimeSignatureAdjuster # imm = 0xEF71
	movl	$0, (%rax)
	movw	$-1105, BasicBlockSignatureTracker # imm = 0xFBAF
	movw	$50, RunTimeSignatureAdjuster
.LBB134_11:                             #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$42, %ax
	xorw	%cx, %ax
	cmpw	$-1097, %ax             # imm = 0xFBB7
	jne	.LBB134_74
# %bb.12:                               # %check_piece_square.split151
                                        #   in Loop: Header=BB134_1 Depth=1
	movslq	-4(%rbp), %rax
	movslq	pieces(,%rax,4), %rax
	movl	board(,%rax,4), %eax
	movw	$-1097, BasicBlockSignatureTracker # imm = 0xFBB7
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	jne	.LBB134_19
# %bb.13:                               #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$114, %ax
	cmpw	$-1083, %ax             # imm = 0xFBC5
	jne	.LBB134_74
# %bb.14:                               # %check_piece_square.split155
                                        #   in Loop: Header=BB134_1 Depth=1
	movslq	-4(%rbp), %rax
	movl	pieces(,%rax,4), %eax
	movw	$-1083, BasicBlockSignatureTracker # imm = 0xFBC5
	movw	$114, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB134_19
# %bb.15:                               # %Buffer__1
                                        #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-25192, %ax            # imm = 0x9D98
	cmpw	$26205, %ax             # imm = 0x665D
	jne	.LBB134_74
# %bb.16:                               # %check_piece_square.split159
                                        #   in Loop: Header=BB134_1 Depth=1
	movw	$26205, BasicBlockSignatureTracker # imm = 0x665D
	movw	$-25192, RunTimeSignatureAdjuster # imm = 0x9D98
# %bb.17:                               #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$17, %ax
	xorw	%cx, %ax
	cmpw	$-1068, %ax             # imm = 0xFBD4
	jne	.LBB134_74
# %bb.18:                               # %check_piece_square.split203
                                        #   in Loop: Header=BB134_1 Depth=1
	movabsq	$.L.str.61.490, %rdi
	movb	$0, %al
	callq	printf
	movq	stdout, %rdi
	movw	$-1068, BasicBlockSignatureTracker # imm = 0xFBD4
	movw	$-4342, RunTimeSignatureAdjuster # imm = 0xEF0A
	xorl	%esi, %esi
	callq	display_board
	xorl	%eax, %eax
	movw	$-1068, BasicBlockSignatureTracker # imm = 0xFBD4
	movw	$-4342, RunTimeSignatureAdjuster # imm = 0xEF0A
	movl	$0, (%rax)
	movw	$-1068, BasicBlockSignatureTracker # imm = 0xFBD4
	movw	$99, RunTimeSignatureAdjuster
.LBB134_19:                             #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$106, %ax
	xorw	%cx, %ax
	cmpw	$-1059, %ax             # imm = 0xFBDD
	jne	.LBB134_74
# %bb.20:                               # %check_piece_square.split157
                                        #   in Loop: Header=BB134_1 Depth=1
	movslq	-4(%rbp), %rax
	movl	pieces(,%rax,4), %eax
	movw	$-1059, BasicBlockSignatureTracker # imm = 0xFBDD
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB134_27
# %bb.21:                               #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$60, %ax
	cmpw	$-1055, %ax             # imm = 0xFBE1
	jne	.LBB134_74
# %bb.22:                               # %check_piece_square.split161
                                        #   in Loop: Header=BB134_1 Depth=1
	movslq	-4(%rbp), %rax
	movslq	pieces(,%rax,4), %rax
	movl	squares(,%rax,4), %eax
	movw	$-1055, BasicBlockSignatureTracker # imm = 0xFBE1
	movw	$60, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB134_27
# %bb.23:                               # %Buffer__2
                                        #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13567, %ax             # imm = 0x34FF
	cmpw	$-12514, %ax            # imm = 0xCF1E
	jne	.LBB134_74
# %bb.24:                               # %check_piece_square.split165
                                        #   in Loop: Header=BB134_1 Depth=1
	movw	$-12514, BasicBlockSignatureTracker # imm = 0xCF1E
	movw	$13567, RunTimeSignatureAdjuster # imm = 0x34FF
# %bb.25:                               #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$15, %ax
	xorw	%cx, %ax
	cmpw	$-1042, %ax             # imm = 0xFBEE
	jne	.LBB134_74
# %bb.26:                               # %check_piece_square.split205
                                        #   in Loop: Header=BB134_1 Depth=1
	movabsq	$.L.str.62.491, %rdi
	movb	$0, %al
	callq	printf
	movq	stdout, %rdi
	movw	$-1042, BasicBlockSignatureTracker # imm = 0xFBEE
	movw	$-4304, RunTimeSignatureAdjuster # imm = 0xEF30
	xorl	%esi, %esi
	callq	display_board
	xorl	%eax, %eax
	movw	$-1042, BasicBlockSignatureTracker # imm = 0xFBEE
	movw	$-4304, RunTimeSignatureAdjuster # imm = 0xEF30
	movl	$0, (%rax)
	movw	$-1042, BasicBlockSignatureTracker # imm = 0xFBEE
	movw	$51, RunTimeSignatureAdjuster
.LBB134_27:                             #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$2013, %ax              # imm = 0x7DD
	xorw	%cx, %ax
	cmpw	$-1024, %ax             # imm = 0xFC00
	jne	.LBB134_74
# %bb.28:                               # %check_piece_square.split163
                                        #   in Loop: Header=BB134_1 Depth=1
	movw	$-1024, BasicBlockSignatureTracker # imm = 0xFC00
	movw	$0, RunTimeSignatureAdjuster
# %bb.29:                               #   in Loop: Header=BB134_1 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$90, %ax
	cmpw	$-934, %ax              # imm = 0xFC5A
	jne	.LBB134_74
# %bb.30:                               # %check_piece_square.split167
                                        #   in Loop: Header=BB134_1 Depth=1
	movl	-4(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -4(%rbp)
	movw	$-934, BasicBlockSignatureTracker # imm = 0xFC5A
	movw	$1994, RunTimeSignatureAdjuster # imm = 0x7CA
	jmp	.LBB134_1
.LBB134_31:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$2029, %ax              # imm = 0x7ED
	cmpw	$-904, %ax              # imm = 0xFC78
	jne	.LBB134_75
# %bb.32:                               # %check_piece_square.split147
	movl	$0, -4(%rbp)
	movw	$-904, BasicBlockSignatureTracker # imm = 0xFC78
	movw	$0, RunTimeSignatureAdjuster
.LBB134_33:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$240, %ax
	xorw	%cx, %ax
	cmpw	$-888, %ax              # imm = 0xFC88
	jne	.LBB134_73
# %bb.34:                               # %check_piece_square.split169
                                        #   in Loop: Header=BB134_33 Depth=1
	movl	-4(%rbp), %eax
	movw	$-888, BasicBlockSignatureTracker # imm = 0xFC88
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$144, %eax
	jge	.LBB134_71
# %bb.35:                               #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-880, %ax              # imm = 0xFC90
	jne	.LBB134_73
# %bb.36:                               # %check_piece_square.split171
                                        #   in Loop: Header=BB134_33 Depth=1
	movslq	-4(%rbp), %rax
	movl	board(,%rax,4), %eax
	movw	$-880, BasicBlockSignatureTracker # imm = 0xFC90
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB134_39
# %bb.37:                               #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-875, %ax              # imm = 0xFC95
	jne	.LBB134_73
# %bb.38:                               # %check_piece_square.split177
                                        #   in Loop: Header=BB134_33 Depth=1
	movslq	-4(%rbp), %rax
	movl	board(,%rax,4), %eax
	movw	$-875, BasicBlockSignatureTracker # imm = 0xFC95
	movw	$5, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB134_45
.LBB134_39:                             #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$14, %ax
	xorw	%cx, %ax
	cmpw	$-866, %ax              # imm = 0xFC9E
	jne	.LBB134_73
# %bb.40:                               # %check_piece_square.split175
                                        #   in Loop: Header=BB134_33 Depth=1
	movslq	-4(%rbp), %rax
	movl	squares(,%rax,4), %eax
	movw	$-866, BasicBlockSignatureTracker # imm = 0xFC9E
	movw	$11, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB134_47
# %bb.41:                               # %Buffer__4
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$-20204, %ax            # imm = 0xB114
	cmpw	$19850, %ax             # imm = 0x4D8A
	jne	.LBB134_73
# %bb.42:                               # %check_piece_square.split183
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	$19850, BasicBlockSignatureTracker # imm = 0x4D8A
	movw	$-20204, RunTimeSignatureAdjuster # imm = 0xB114
# %bb.43:                               #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$60, %ax
	xorw	%cx, %ax
	cmpw	$-862, %ax              # imm = 0xFCA2
	jne	.LBB134_73
# %bb.44:                               # %check_piece_square.split207
                                        #   in Loop: Header=BB134_33 Depth=1
	movabsq	$.L.str.63.492, %rdi
	movb	$0, %al
	callq	printf
	movq	stdout, %rdi
	movw	$-862, BasicBlockSignatureTracker # imm = 0xFCA2
	movw	$-6020, RunTimeSignatureAdjuster # imm = 0xE87C
	xorl	%esi, %esi
	callq	display_board
	xorl	%eax, %eax
	movw	$-862, BasicBlockSignatureTracker # imm = 0xFCA2
	movw	$-6020, RunTimeSignatureAdjuster # imm = 0xE87C
	movl	$0, (%rax)
	movw	$-862, BasicBlockSignatureTracker # imm = 0xFCA2
	movw	$55, RunTimeSignatureAdjuster
	jmp	.LBB134_47
.LBB134_45:                             # %Buffer__3
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$20319, %ax             # imm = 0x4F5F
	cmpw	$-19510, %ax            # imm = 0xB3CA
	jne	.LBB134_73
# %bb.46:                               # %check_piece_square.split179
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	$-19510, BasicBlockSignatureTracker # imm = 0xB3CA
	movw	$20319, RunTimeSignatureAdjuster # imm = 0x4F5F
.LBB134_47:                             #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$57, %ax
	xorw	%cx, %ax
	cmpw	$-852, %ax              # imm = 0xFCAC
	jne	.LBB134_73
# %bb.48:                               # %check_piece_square.split181
                                        #   in Loop: Header=BB134_33 Depth=1
	movslq	-4(%rbp), %rax
	movl	board(,%rax,4), %eax
	movw	$-852, BasicBlockSignatureTracker # imm = 0xFCAC
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$13, %eax
	je	.LBB134_59
# %bb.49:                               #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-851, %ax              # imm = 0xFCAD
	jne	.LBB134_73
# %bb.50:                               # %check_piece_square.split185
                                        #   in Loop: Header=BB134_33 Depth=1
	movslq	-4(%rbp), %rax
	movl	board(,%rax,4), %eax
	movw	$-851, BasicBlockSignatureTracker # imm = 0xFCAD
	movw	$1, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB134_59
# %bb.51:                               # %Buffer__5
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24741, %ax             # imm = 0x60A5
	cmpw	$-25592, %ax            # imm = 0x9C08
	jne	.LBB134_73
# %bb.52:                               # %check_piece_square.split189
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	$-25592, BasicBlockSignatureTracker # imm = 0x9C08
	movw	$24741, RunTimeSignatureAdjuster # imm = 0x60A5
# %bb.53:                               #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$3, %ax
	xorw	%cx, %ax
	cmpw	$-850, %ax              # imm = 0xFCAE
	jne	.LBB134_73
# %bb.54:                               # %check_piece_square.split209
                                        #   in Loop: Header=BB134_33 Depth=1
	movslq	-4(%rbp), %rax
	movl	squares(,%rax,4), %eax
	movw	$-850, BasicBlockSignatureTracker # imm = 0xFCAE
	movw	$2, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB134_59
# %bb.55:                               # %Buffer__6
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9274, %ax              # imm = 0x243A
	cmpw	$-10092, %ax            # imm = 0xD894
	jne	.LBB134_73
# %bb.56:                               # %check_piece_square.split191
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	$-10092, BasicBlockSignatureTracker # imm = 0xD894
	movw	$9274, RunTimeSignatureAdjuster # imm = 0x243A
# %bb.57:                               #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$25, %ax
	xorw	%cx, %ax
	cmpw	$-841, %ax              # imm = 0xFCB7
	jne	.LBB134_73
# %bb.58:                               # %check_piece_square.split211
                                        #   in Loop: Header=BB134_33 Depth=1
	movabsq	$.L.str.64.493, %rdi
	movl	-4(%rbp), %esi
	movb	$0, %al
	callq	printf
	movq	stdout, %rdi
	movw	$-841, BasicBlockSignatureTracker # imm = 0xFCB7
	movw	$-6039, RunTimeSignatureAdjuster # imm = 0xE869
	xorl	%esi, %esi
	callq	display_board
	xorl	%eax, %eax
	movw	$-841, BasicBlockSignatureTracker # imm = 0xFCB7
	movw	$-6039, RunTimeSignatureAdjuster # imm = 0xE869
	movl	$0, (%rax)
	movw	$-841, BasicBlockSignatureTracker # imm = 0xFCB7
	movw	$27, RunTimeSignatureAdjuster
.LBB134_59:                             #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$122, %ax
	xorw	%cx, %ax
	cmpw	$-810, %ax              # imm = 0xFCD6
	jne	.LBB134_73
# %bb.60:                               # %check_piece_square.split187
                                        #   in Loop: Header=BB134_33 Depth=1
	movslq	-4(%rbp), %rax
	movslq	squares(,%rax,4), %rax
	movl	pieces(,%rax,4), %eax
	movl	-4(%rbp), %ecx
	movw	$-810, BasicBlockSignatureTracker # imm = 0xFCD6
	movw	$0, RunTimeSignatureAdjuster
	cmpl	%ecx, %eax
	je	.LBB134_67
# %bb.61:                               #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$15, %ax
	cmpw	$-807, %ax              # imm = 0xFCD9
	jne	.LBB134_73
# %bb.62:                               # %check_piece_square.split193
                                        #   in Loop: Header=BB134_33 Depth=1
	movslq	-4(%rbp), %rax
	movl	squares(,%rax,4), %eax
	movw	$-807, BasicBlockSignatureTracker # imm = 0xFCD9
	movw	$15, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB134_67
# %bb.63:                               # %Buffer__7
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$10, %ax
	cmpw	$-813, %ax              # imm = 0xFCD3
	jne	.LBB134_73
# %bb.64:                               # %check_piece_square.split197
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	$-813, BasicBlockSignatureTracker # imm = 0xFCD3
	movw	$10, RunTimeSignatureAdjuster
# %bb.65:                               #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$53, %ax
	xorw	%cx, %ax
	cmpw	$-788, %ax              # imm = 0xFCEC
	jne	.LBB134_73
# %bb.66:                               # %check_piece_square.split213
                                        #   in Loop: Header=BB134_33 Depth=1
	movabsq	$.L.str.65.494, %rdi
	movb	$0, %al
	callq	printf
	movq	stdout, %rdi
	movw	$-788, BasicBlockSignatureTracker # imm = 0xFCEC
	movw	$-6094, RunTimeSignatureAdjuster # imm = 0xE832
	xorl	%esi, %esi
	callq	display_board
	xorl	%eax, %eax
	movw	$-788, BasicBlockSignatureTracker # imm = 0xFCEC
	movw	$-6094, RunTimeSignatureAdjuster # imm = 0xE832
	movl	$0, (%rax)
	movw	$-788, BasicBlockSignatureTracker # imm = 0xFCEC
	movw	$58, RunTimeSignatureAdjuster
.LBB134_67:                             #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$38, %ax
	xorw	%cx, %ax
	cmpw	$-784, %ax              # imm = 0xFCF0
	jne	.LBB134_73
# %bb.68:                               # %check_piece_square.split195
                                        #   in Loop: Header=BB134_33 Depth=1
	movw	$-784, BasicBlockSignatureTracker # imm = 0xFCF0
	movw	$0, RunTimeSignatureAdjuster
# %bb.69:                               #   in Loop: Header=BB134_33 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$12, %ax
	cmpw	$-772, %ax              # imm = 0xFCFC
	jne	.LBB134_73
# %bb.70:                               # %check_piece_square.split199
                                        #   in Loop: Header=BB134_33 Depth=1
	movl	-4(%rbp), %eax
	addl	$1, %eax
	movl	%eax, -4(%rbp)
	movw	$-772, BasicBlockSignatureTracker # imm = 0xFCFC
	movw	$132, RunTimeSignatureAdjuster
	jmp	.LBB134_33
.LBB134_71:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$397, %ax               # imm = 0x18D
	cmpw	$-763, %ax              # imm = 0xFD05
	jne	.LBB134_75
# %bb.72:                               # %check_piece_square.split173
	movw	$-763, BasicBlockSignatureTracker # imm = 0xFD05
	movw	$0, RunTimeSignatureAdjuster
	addq	$16, %rsp
	popq	%rbp
	retq
.LBB134_73:                             # %CFerrorHandler.check_piece_square.loopexit
	jmp	.LBB134_75
.LBB134_74:                             # %CFerrorHandler.check_piece_square.loopexit1
	jmp	.LBB134_75
.LBB134_75:                             # %CFerrorHandler.check_piece_square
	callq	FAULT_DETECTED_CFC
.Lfunc_end134:
	.size	check_piece_square, .Lfunc_end134-check_piece_square
	.cfi_endproc
                                        # -- End function
	.globl	start_up                # -- Begin function start_up
	.p2align	4, 0x90
	.type	start_up,@function
start_up:                               # @start_up
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9615, %ax              # imm = 0x258F
	xorw	%cx, %ax
	cmpw	$-752, %ax              # imm = 0xFD10
	jne	.LBB135_2
# %bb.1:                                # %start_up.split
	movabsq	$.L.str.66.497, %rdi
	movb	$0, %al
	callq	printf
	movw	$-752, BasicBlockSignatureTracker # imm = 0xFD10
	movw	$23438, RunTimeSignatureAdjuster # imm = 0x5B8E
	popq	%rbp
	retq
.LBB135_2:                              # %CFerrorHandler.start_up
	callq	FAULT_DETECTED_CFC
.Lfunc_end135:
	.size	start_up, .Lfunc_end135-start_up
	.cfi_endproc
                                        # -- End function
	.globl	toggle_bool             # -- Begin function toggle_bool
	.p2align	4, 0x90
	.type	toggle_bool,@function
toggle_bool:                            # @toggle_bool
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9179, %ax              # imm = 0x23DB
	xorw	%cx, %ax
	cmpw	$-741, %ax              # imm = 0xFD1B
	jne	.LBB136_10
# %bb.1:                                # %toggle_bool.split26
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9179, %ax              # imm = 0x23DB
	xorw	%cx, %ax
	cmpw	$-741, %ax              # imm = 0xFD1B
	jne	.LBB136_10
# %bb.2:                                # %toggle_bool.split24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$9179, %ax              # imm = 0x23DB
	xorw	%cx, %ax
	cmpw	$-741, %ax              # imm = 0xFD1B
	jne	.LBB136_10
# %bb.3:                                # %toggle_bool.split
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rdi, (%rax)
	movq	(%rax), %rcx
	movl	(%rcx), %ecx
	movw	$-741, BasicBlockSignatureTracker # imm = 0xFD1B
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	je	.LBB136_6
# %bb.4:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$56, %cx
	cmpw	$-733, %cx              # imm = 0xFD23
	jne	.LBB136_10
# %bb.5:                                # %toggle_bool.split28
	movq	(%rax), %rax
	movl	$0, (%rax)
	movw	$-733, BasicBlockSignatureTracker # imm = 0xFD23
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB136_8
.LBB136_6:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$40, %cx
	cmpw	$-717, %cx              # imm = 0xFD33
	jne	.LBB136_10
# %bb.7:                                # %toggle_bool.split30
	movq	(%rax), %rax
	movl	$1, (%rax)
	movw	$-717, BasicBlockSignatureTracker # imm = 0xFD33
	movw	$16, RunTimeSignatureAdjuster
.LBB136_8:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$27, %ax
	xorw	%cx, %ax
	cmpw	$-712, %ax              # imm = 0xFD38
	jne	.LBB136_10
# %bb.9:                                # %toggle_bool.split32
	movw	$-712, BasicBlockSignatureTracker # imm = 0xFD38
	movw	$9106, RunTimeSignatureAdjuster # imm = 0x2392
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB136_10:                             # %CFerrorHandler.toggle_bool
	callq	FAULT_DETECTED_CFC
.Lfunc_end136:
	.size	toggle_bool, .Lfunc_end136-toggle_bool
	.cfi_endproc
                                        # -- End function
	.globl	tree_debug              # -- Begin function tree_debug
	.p2align	4, 0x90
	.type	tree_debug,@function
tree_debug:                             # @tree_debug
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	subq	$272, %rsp              # imm = 0x110
	movw	$-687, BasicBlockSignatureTracker # imm = 0xFD51
	movw	$9678, RunTimeSignatureAdjuster # imm = 0x25CE
	callq	init_game
	movabsq	$.L.str.67.500, %rdi
	movw	$-687, BasicBlockSignatureTracker # imm = 0xFD51
	movw	$9678, RunTimeSignatureAdjuster # imm = 0x25CE
	movb	$0, %al
	callq	printf
	leaq	-272(%rbp), %rdi
	movq	stdin, %rdx
	movw	$-687, BasicBlockSignatureTracker # imm = 0xFD51
	movw	$-5660, RunTimeSignatureAdjuster # imm = 0xE9E4
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	leaq	-272(%rbp), %rdi
	movw	$-687, BasicBlockSignatureTracker # imm = 0xFD51
	movw	$-5660, RunTimeSignatureAdjuster # imm = 0xE9E4
	callq	atoi
	movabsq	$.L.str.68.501, %rdi
	movl	%eax, -4(%rbp)
	movb	$0, %al
	callq	printf
	leaq	-272(%rbp), %rdi
	movq	stdin, %rdx
	movw	$-687, BasicBlockSignatureTracker # imm = 0xFD51
	movw	$-5660, RunTimeSignatureAdjuster # imm = 0xE9E4
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	movw	$-687, BasicBlockSignatureTracker # imm = 0xFD51
	movw	$-5660, RunTimeSignatureAdjuster # imm = 0xE9E4
	movsbl	-272(%rbp), %eax
	movw	$-687, BasicBlockSignatureTracker # imm = 0xFD51
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$121, %eax
	jne	.LBB137_7
# %bb.1:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$57, %ax
	cmpw	$-664, %ax              # imm = 0xFD68
	jne	.LBB137_9
# %bb.2:                                # %tree_debug.split
	movabsq	$.L.str.69.502, %rdi
	movb	$0, %al
	callq	printf
	leaq	-272(%rbp), %rdi
	movq	stdin, %rdx
	movw	$-664, BasicBlockSignatureTracker # imm = 0xFD68
	movw	$-5667, RunTimeSignatureAdjuster # imm = 0xE9DD
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	movabsq	$.L.str.70.503, %rsi
	leaq	-272(%rbp), %rdi
	movw	$-664, BasicBlockSignatureTracker # imm = 0xFD68
	movw	$-5667, RunTimeSignatureAdjuster # imm = 0xE9DD
	callq	fopen
	movq	%rax, -16(%rbp)
	movw	$-664, BasicBlockSignatureTracker # imm = 0xFD68
	movw	$0, RunTimeSignatureAdjuster
	cmpq	$0, %rax
	jne	.LBB137_5
# %bb.3:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$7, %ax
	cmpw	$-657, %ax              # imm = 0xFD6F
	jne	.LBB137_9
# %bb.4:                                # %tree_debug.split16
	movabsq	$.L.str.71.504, %rsi
	leaq	-272(%rbp), %rdx
	movq	stderr, %rdi
	movb	$0, %al
	callq	fprintf
	movw	$-657, BasicBlockSignatureTracker # imm = 0xFD6F
	movw	$7, RunTimeSignatureAdjuster
.LBB137_5:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$26, %ax
	xorw	%cx, %ax
	cmpw	$-654, %ax              # imm = 0xFD72
	jne	.LBB137_9
# %bb.6:                                # %tree_debug.split18
	movabsq	$.L.str.72.505, %rdi
	movb	$0, %al
	callq	printf
	leaq	-272(%rbp), %rdi
	movq	stdin, %rdx
	movw	$-654, BasicBlockSignatureTracker # imm = 0xFD72
	movw	$-5689, RunTimeSignatureAdjuster # imm = 0xE9C7
	movl	$256, %esi              # imm = 0x100
	callq	rinput
	leaq	-272(%rbp), %rcx
	movw	$-654, BasicBlockSignatureTracker # imm = 0xFD72
	movw	$-5689, RunTimeSignatureAdjuster # imm = 0xE9C7
	movl	-4(%rbp), %edi
	movq	-16(%rbp), %rdx
	movw	$-654, BasicBlockSignatureTracker # imm = 0xFD72
	movw	$14048, RunTimeSignatureAdjuster # imm = 0x36E0
	xorl	%esi, %esi
	callq	tree
	movw	$-654, BasicBlockSignatureTracker # imm = 0xFD72
	movw	$14048, RunTimeSignatureAdjuster # imm = 0x36E0
	movw	$-654, BasicBlockSignatureTracker # imm = 0xFD72
	movw	$35, RunTimeSignatureAdjuster
.LBB137_7:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$212, %ax
	xorw	%cx, %ax
	cmpw	$-635, %ax              # imm = 0xFD85
	jne	.LBB137_9
# %bb.8:                                # %tree_debug.split14
	movl	$0, raw_nodes
	movl	-4(%rbp), %edi
	movw	$-635, BasicBlockSignatureTracker # imm = 0xFD85
	movw	$22072, RunTimeSignatureAdjuster # imm = 0x5638
	callq	perft
	movabsq	$.L.str.73.506, %rdi
	movabsq	$divider, %rsi
	movw	$-635, BasicBlockSignatureTracker # imm = 0xFD85
	movw	$22072, RunTimeSignatureAdjuster # imm = 0x5638
	movl	-4(%rbp), %edx
	movl	raw_nodes, %ecx
	movq	%rsi, %r8
	movb	$0, %al
	callq	printf
	movw	$-635, BasicBlockSignatureTracker # imm = 0xFD85
	movw	$0, RunTimeSignatureAdjuster
	addq	$272, %rsp              # imm = 0x110
	popq	%rbp
	retq
.LBB137_9:                              # %CFerrorHandler.tree_debug
	callq	FAULT_DETECTED_CFC
.Lfunc_end137:
	.size	tree_debug, .Lfunc_end137-tree_debug
	.cfi_endproc
                                        # -- End function
	.globl	interrupt               # -- Begin function interrupt
	.p2align	4, 0x90
	.type	interrupt,@function
interrupt:                              # @interrupt
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5817, %ax             # imm = 0xE947
	xorw	%cx, %ax
	cmpw	$-615, %ax              # imm = 0xFD99
	jne	.LBB138_8
# %bb.1:                                # %interrupt.split43
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5817, %ax             # imm = 0xE947
	xorw	%cx, %ax
	cmpw	$-615, %ax              # imm = 0xFD99
	jne	.LBB138_8
# %bb.2:                                # %interrupt.split41
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5817, %ax             # imm = 0xE947
	xorw	%cx, %ax
	cmpw	$-615, %ax              # imm = 0xFD99
	jne	.LBB138_8
# %bb.3:                                # %interrupt.split39
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5817, %ax             # imm = 0xE947
	xorw	%cx, %ax
	cmpw	$-615, %ax              # imm = 0xFD99
	jne	.LBB138_8
# %bb.4:                                # %interrupt.split37
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5817, %ax             # imm = 0xE947
	xorw	%cx, %ax
	cmpw	$-615, %ax              # imm = 0xFD99
	jne	.LBB138_8
# %bb.5:                                # %interrupt.split35
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5817, %ax             # imm = 0xE947
	xorw	%cx, %ax
	cmpw	$-615, %ax              # imm = 0xFD99
	jne	.LBB138_8
# %bb.6:                                # %interrupt.split33
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$-5817, %ax             # imm = 0xE947
	xorw	%cx, %ax
	cmpw	$-615, %ax              # imm = 0xFD99
	jne	.LBB138_8
# %bb.7:                                # %interrupt.split
	movw	$-615, BasicBlockSignatureTracker # imm = 0xFD99
	movw	$-5851, RunTimeSignatureAdjuster # imm = 0xE925
	xorl	%eax, %eax
	popq	%rbp
	retq
.LBB138_8:                              # %CFerrorHandler.interrupt
	callq	FAULT_DETECTED_CFC
.Lfunc_end138:
	.size	interrupt, .Lfunc_end138-interrupt
	.cfi_endproc
                                        # -- End function
	.globl	PutPiece                # -- Begin function PutPiece
	.p2align	4, 0x90
	.type	PutPiece,@function
PutPiece:                               # @PutPiece
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r12
	pushq	%rbx
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %bx
	xorw	$7889, %ax              # imm = 0x1ED1
	xorw	%bx, %ax
	cmpw	$-606, %ax              # imm = 0xFDA2
	jne	.LBB139_46
# %bb.1:                                # %PutPiece.split
	movq	%rsp, %r10
	addq	$-16, %r10
	movq	%r10, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movq	%rsp, %r8
	addq	$-16, %r8
	movq	%r8, %rsp
	movl	%edi, (%r10)
	movb	%sil, (%r9)
	movb	%dl, (%r11)
	movl	%ecx, (%r14)
	movl	$97, (%r15)
	movl	$49, (%r12)
	movsbl	(%r11), %ecx
	subl	(%r15), %ecx
	movl	%ecx, (%rbx)
	movl	(%r14), %ecx
	subl	(%r12), %ecx
	movl	%ecx, (%rax)
	imull	$12, (%rax), %eax
	addl	$26, %eax
	addl	(%rbx), %eax
	movl	%eax, (%r8)
	movl	(%r10), %eax
	movw	$-606, BasicBlockSignatureTracker # imm = 0xFDA2
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	jne	.LBB139_21
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$1, %ax
	cmpw	$-605, %ax              # imm = 0xFDA3
	jne	.LBB139_46
# %bb.3:                                # %PutPiece.split74
	movsbl	(%r9), %eax
	movw	$-605, BasicBlockSignatureTracker(%rip) # imm = 0xFDA3
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-98, %eax
	movl	%eax, %ecx
	subl	$22, %ecx
	ja	.LBB139_19
# %bb.4:                                # %PutPiece.split74
	movq	.LJTI139_1(,%rax,8), %rax
	jmpq	*%rax
.LBB139_5:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$13, %ax
	cmpw	$-594, %ax              # imm = 0xFDAE
	jne	.LBB139_46
# %bb.6:                                # %PutPiece.split80
	movslq	(%r8), %rax
	movl	$1, board(,%rax,4)
	movw	$-594, BasicBlockSignatureTracker # imm = 0xFDAE
	movw	$13, RunTimeSignatureAdjuster
	jmp	.LBB139_19
.LBB139_7:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$30, %ax
	cmpw	$-579, %ax              # imm = 0xFDBD
	jne	.LBB139_46
# %bb.8:                                # %PutPiece.split82
	movslq	(%r8), %rax
	movl	$3, board(,%rax,4)
	movw	$-579, BasicBlockSignatureTracker # imm = 0xFDBD
	movw	$30, RunTimeSignatureAdjuster
	jmp	.LBB139_19
.LBB139_9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$102, %ax
	cmpw	$-571, %ax              # imm = 0xFDC5
	jne	.LBB139_46
# %bb.10:                               # %PutPiece.split84
	movslq	(%r8), %rax
	movl	$11, board(,%rax,4)
	movw	$-571, BasicBlockSignatureTracker # imm = 0xFDC5
	movw	$102, RunTimeSignatureAdjuster
	jmp	.LBB139_19
.LBB139_11:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$121, %ax
	cmpw	$-550, %ax              # imm = 0xFDDA
	jne	.LBB139_46
# %bb.12:                               # %PutPiece.split86
	movslq	(%r8), %rax
	movl	$7, board(,%rax,4)
	movw	$-550, BasicBlockSignatureTracker # imm = 0xFDDA
	movw	$121, RunTimeSignatureAdjuster
	jmp	.LBB139_19
.LBB139_13:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$71, %ax
	cmpw	$-540, %ax              # imm = 0xFDE4
	jne	.LBB139_46
# %bb.14:                               # %PutPiece.split88
	movslq	(%r8), %rax
	movl	$9, board(,%rax,4)
	movw	$-540, BasicBlockSignatureTracker # imm = 0xFDE4
	movw	$71, RunTimeSignatureAdjuster
	jmp	.LBB139_19
.LBB139_15:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$69, %ax
	cmpw	$-538, %ax              # imm = 0xFDE6
	jne	.LBB139_46
# %bb.16:                               # %PutPiece.split90
	movslq	(%r8), %rax
	movl	$5, board(,%rax,4)
	movw	$-538, BasicBlockSignatureTracker # imm = 0xFDE6
	movw	$69, RunTimeSignatureAdjuster
	jmp	.LBB139_19
.LBB139_17:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$89, %ax
	cmpw	$-518, %ax              # imm = 0xFDFA
	jne	.LBB139_46
# %bb.18:                               # %PutPiece.split92
	movslq	(%r8), %rax
	movl	$13, board(,%rax,4)
	movw	$-518, BasicBlockSignatureTracker # imm = 0xFDFA
	movw	$89, RunTimeSignatureAdjuster
.LBB139_19:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$941, %ax               # imm = 0x3AD
	xorw	%cx, %ax
	cmpw	$-498, %ax              # imm = 0xFE0E
	jne	.LBB139_46
# %bb.20:                               # %PutPiece.split78
	movw	$-498, BasicBlockSignatureTracker # imm = 0xFE0E
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB139_44
.LBB139_21:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$949, %ax               # imm = 0x3B5
	cmpw	$-489, %ax              # imm = 0xFE17
	jne	.LBB139_46
# %bb.22:                               # %PutPiece.split76
	movl	(%r10), %eax
	movw	$-489, BasicBlockSignatureTracker # imm = 0xFE17
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$1, %eax
	jne	.LBB139_42
# %bb.23:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$8, %ax
	cmpw	$-481, %ax              # imm = 0xFE1F
	jne	.LBB139_46
# %bb.24:                               # %PutPiece.split96
	movsbl	(%r9), %eax
	movw	$-481, BasicBlockSignatureTracker(%rip) # imm = 0xFE1F
	movw	$0, RunTimeSignatureAdjuster(%rip)
	addl	$-98, %eax
	movl	%eax, %ecx
	subl	$22, %ecx
	ja	.LBB139_40
# %bb.25:                               # %PutPiece.split96
	movq	.LJTI139_0(,%rax,8), %rax
	jmpq	*%rax
.LBB139_26:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$62, %ax
	cmpw	$-479, %ax              # imm = 0xFE21
	jne	.LBB139_46
# %bb.27:                               # %PutPiece.split102
	movslq	(%r8), %rax
	movl	$2, board(,%rax,4)
	movw	$-479, BasicBlockSignatureTracker # imm = 0xFE21
	movw	$62, RunTimeSignatureAdjuster
	jmp	.LBB139_40
.LBB139_28:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$45, %ax
	cmpw	$-462, %ax              # imm = 0xFE32
	jne	.LBB139_46
# %bb.29:                               # %PutPiece.split104
	movslq	(%r8), %rax
	movl	$4, board(,%rax,4)
	movw	$-462, BasicBlockSignatureTracker # imm = 0xFE32
	movw	$45, RunTimeSignatureAdjuster
	jmp	.LBB139_40
.LBB139_30:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$37, %ax
	cmpw	$-454, %ax              # imm = 0xFE3A
	jne	.LBB139_46
# %bb.31:                               # %PutPiece.split106
	movslq	(%r8), %rax
	movl	$12, board(,%rax,4)
	movw	$-454, BasicBlockSignatureTracker # imm = 0xFE3A
	movw	$37, RunTimeSignatureAdjuster
	jmp	.LBB139_40
.LBB139_32:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$110, %ax
	cmpw	$-399, %ax              # imm = 0xFE71
	jne	.LBB139_46
# %bb.33:                               # %PutPiece.split108
	movslq	(%r8), %rax
	movl	$8, board(,%rax,4)
	movw	$-399, BasicBlockSignatureTracker # imm = 0xFE71
	movw	$110, RunTimeSignatureAdjuster
	jmp	.LBB139_40
.LBB139_34:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$105, %ax
	cmpw	$-394, %ax              # imm = 0xFE76
	jne	.LBB139_46
# %bb.35:                               # %PutPiece.split110
	movslq	(%r8), %rax
	movl	$10, board(,%rax,4)
	movw	$-394, BasicBlockSignatureTracker # imm = 0xFE76
	movw	$105, RunTimeSignatureAdjuster
	jmp	.LBB139_40
.LBB139_36:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$98, %ax
	cmpw	$-387, %ax              # imm = 0xFE7D
	jne	.LBB139_46
# %bb.37:                               # %PutPiece.split112
	movslq	(%r8), %rax
	movl	$6, board(,%rax,4)
	movw	$-387, BasicBlockSignatureTracker # imm = 0xFE7D
	movw	$98, RunTimeSignatureAdjuster
	jmp	.LBB139_40
.LBB139_38:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$147, %ax
	cmpw	$-372, %ax              # imm = 0xFE8C
	jne	.LBB139_46
# %bb.39:                               # %PutPiece.split114
	movslq	(%r8), %rax
	movl	$13, board(,%rax,4)
	movw	$-372, BasicBlockSignatureTracker # imm = 0xFE8C
	movw	$147, RunTimeSignatureAdjuster
.LBB139_40:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$138, %ax
	xorw	%cx, %ax
	cmpw	$-363, %ax              # imm = 0xFE95
	jne	.LBB139_46
# %bb.41:                               # %PutPiece.split100
	movw	$-363, BasicBlockSignatureTracker # imm = 0xFE95
	movw	$130, RunTimeSignatureAdjuster
.LBB139_42:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$129, %ax
	xorw	%cx, %ax
	cmpw	$-362, %ax              # imm = 0xFE96
	jne	.LBB139_46
# %bb.43:                               # %PutPiece.split98
	movw	$-362, BasicBlockSignatureTracker # imm = 0xFE96
	movw	$152, RunTimeSignatureAdjuster
.LBB139_44:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$150, %ax
	xorw	%cx, %ax
	cmpw	$-360, %ax              # imm = 0xFE98
	jne	.LBB139_46
# %bb.45:                               # %PutPiece.split94
	movw	$-360, BasicBlockSignatureTracker # imm = 0xFE98
	movw	$7622, RunTimeSignatureAdjuster # imm = 0x1DC6
	leaq	-32(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB139_46:                             # %CFerrorHandler.PutPiece
	callq	FAULT_DETECTED_CFC
.Lfunc_end139:
	.size	PutPiece, .Lfunc_end139-PutPiece
	.cfi_endproc
	.section	.rodata,"a",@progbits
	.p2align	3
.LJTI139_0:
	.quad	.LBB139_30
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_36
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_28
	.quad	.LBB139_40
	.quad	.LBB139_26
	.quad	.LBB139_34
	.quad	.LBB139_32
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_40
	.quad	.LBB139_38
.LJTI139_1:
	.quad	.LBB139_9
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_15
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_7
	.quad	.LBB139_19
	.quad	.LBB139_5
	.quad	.LBB139_13
	.quad	.LBB139_11
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_19
	.quad	.LBB139_17
                                        # -- End function
	.text
	.globl	reset_board             # -- Begin function reset_board
	.p2align	4, 0x90
	.type	reset_board,@function
reset_board:                            # @reset_board
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$7583, %ax              # imm = 0x1D9F
	xorw	%cx, %ax
	cmpw	$-340, %ax              # imm = 0xFEAC
	jne	.LBB140_11
# %bb.1:                                # %reset_board.split
	movabsq	$board, %r14
	movabsq	$.Lreset_board.init_board, %rsi
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %rbx
	addq	$-576, %rbx             # imm = 0xFDC0
	movq	%rbx, %rsp
	movq	%rbx, %rdi
	movl	$576, %edx              # imm = 0x240
	callq	memcpy
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movl	$576, %edx              # imm = 0x240
	callq	memcpy
	movl	$0, (%r15)
	movw	$-340, BasicBlockSignatureTracker # imm = 0xFEAC
	movw	$0, RunTimeSignatureAdjuster
.LBB140_2:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$28, %ax
	xorw	%cx, %ax
	cmpw	$-336, %ax              # imm = 0xFEB0
	jne	.LBB140_10
# %bb.3:                                # %reset_board.split17
                                        #   in Loop: Header=BB140_2 Depth=1
	movl	(%r15), %eax
	movw	$-336, BasicBlockSignatureTracker # imm = 0xFEB0
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$143, %eax
	jg	.LBB140_8
# %bb.4:                                #   in Loop: Header=BB140_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$9, %ax
	cmpw	$-327, %ax              # imm = 0xFEB9
	jne	.LBB140_10
# %bb.5:                                # %reset_board.split19
                                        #   in Loop: Header=BB140_2 Depth=1
	movslq	(%r15), %rax
	movl	$0, moved(,%rax,4)
	movw	$-327, BasicBlockSignatureTracker # imm = 0xFEB9
	movw	$0, RunTimeSignatureAdjuster
# %bb.6:                                #   in Loop: Header=BB140_2 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$104, %ax
	cmpw	$-303, %ax              # imm = 0xFED1
	jne	.LBB140_10
# %bb.7:                                # %reset_board.split23
                                        #   in Loop: Header=BB140_2 Depth=1
	movl	(%r15), %eax
	addl	$1, %eax
	movl	%eax, (%r15)
	movw	$-303, BasicBlockSignatureTracker # imm = 0xFED1
	movw	$125, RunTimeSignatureAdjuster
	jmp	.LBB140_2
.LBB140_8:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$102, %ax
	cmpw	$-298, %ax              # imm = 0xFED6
	jne	.LBB140_11
# %bb.9:                                # %reset_board.split21
	movabsq	$holding, %rbx
	movabsq	$is_promoted, %rdi
	movl	$0, ep_square
	movl	$0, piece_count
	movl	$0, Material
	xorl	%esi, %esi
	movl	$248, %edx
	callq	memset
	movq	%rbx, %rdi
	xorl	%esi, %esi
	movl	$128, %edx
	callq	memset
	movl	$0, white_hand_eval
	movl	$0, black_hand_eval
	movl	$0, bookidx
	movl	$0, fifty
	movw	$-298, BasicBlockSignatureTracker # imm = 0xFED6
	movw	$-5398, RunTimeSignatureAdjuster # imm = 0xEAEA
	callq	reset_piece_square
	movw	$-298, BasicBlockSignatureTracker # imm = 0xFED6
	movw	$-5398, RunTimeSignatureAdjuster # imm = 0xEAEA
	movw	$-298, BasicBlockSignatureTracker # imm = 0xFED6
	movw	$7652, RunTimeSignatureAdjuster # imm = 0x1DE4
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB140_10:                             # %CFerrorHandler.reset_board.loopexit
	jmp	.LBB140_11
.LBB140_11:                             # %CFerrorHandler.reset_board
	callq	FAULT_DETECTED_CFC
.Lfunc_end140:
	.size	reset_board, .Lfunc_end140-reset_board
	.cfi_endproc
                                        # -- End function
	.globl	seedMT                  # -- Begin function seedMT
	.p2align	4, 0x90
	.type	seedMT,@function
seedMT:                                 # @seedMT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5875, %ax              # imm = 0x16F3
	xorw	%cx, %ax
	cmpw	$-274, %ax              # imm = 0xFEEE
	jne	.LBB141_12
# %bb.1:                                # %seedMT.split30
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$5875, %ax              # imm = 0x16F3
	xorw	%cx, %ax
	cmpw	$-274, %ax              # imm = 0xFEEE
	jne	.LBB141_12
# %bb.2:                                # %seedMT.split
	movabsq	$state, %r8
	movq	%rsp, %rsi
	addq	$-16, %rsi
	movq	%rsi, %rsp
	movq	%rsp, %r9
	addq	$-16, %r9
	movq	%r9, %rsp
	movq	%rsp, %rcx
	addq	$-16, %rcx
	movq	%rcx, %rsp
	movq	%rsp, %rdx
	addq	$-16, %rdx
	movq	%rdx, %rsp
	movl	%edi, (%rsi)
	movl	(%rsi), %esi
	orl	$1, %esi
	movl	%esi, (%r9)
	movq	%r8, (%rcx)
	movl	$0, left
	movl	(%r9), %esi
	movq	(%rcx), %rax
	movq	%rax, %rdi
	addq	$4, %rdi
	movq	%rdi, (%rcx)
	movl	%esi, (%rax)
	movl	$624, (%rdx)            # imm = 0x270
	movw	$-274, BasicBlockSignatureTracker # imm = 0xFEEE
	movw	$0, RunTimeSignatureAdjuster
.LBB141_3:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %si
	xorw	$17, %ax
	xorw	%si, %ax
	cmpw	$-257, %ax              # imm = 0xFEFF
	jne	.LBB141_11
# %bb.4:                                # %seedMT.split22
                                        #   in Loop: Header=BB141_3 Depth=1
	movl	(%rdx), %eax
	addl	$-1, %eax
	movl	%eax, (%rdx)
	movw	$-257, BasicBlockSignatureTracker # imm = 0xFEFF
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB141_9
# %bb.5:                                #   in Loop: Header=BB141_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$509, %ax               # imm = 0x1FD
	cmpw	$-254, %ax
	jne	.LBB141_11
# %bb.6:                                # %seedMT.split24
                                        #   in Loop: Header=BB141_3 Depth=1
	movw	$-254, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
# %bb.7:                                #   in Loop: Header=BB141_3 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$16, %ax
	cmpw	$-238, %ax
	jne	.LBB141_11
# %bb.8:                                # %seedMT.split28
                                        #   in Loop: Header=BB141_3 Depth=1
	imull	$69069, (%r9), %eax     # imm = 0x10DCD
	movl	%eax, (%r9)
	movq	(%rcx), %rsi
	movq	%rsi, %rdi
	addq	$4, %rdi
	movq	%rdi, (%rcx)
	movl	%eax, (%rsi)
	movw	$-238, BasicBlockSignatureTracker
	movw	$508, RunTimeSignatureAdjuster # imm = 0x1FC
	jmp	.LBB141_3
.LBB141_9:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$461, %ax               # imm = 0x1CD
	cmpw	$-206, %ax
	jne	.LBB141_12
# %bb.10:                               # %seedMT.split26
	movw	$-206, BasicBlockSignatureTracker
	movw	$10157, RunTimeSignatureAdjuster # imm = 0x27AD
	movq	%rbp, %rsp
	popq	%rbp
	retq
.LBB141_11:                             # %CFerrorHandler.seedMT.loopexit
	jmp	.LBB141_12
.LBB141_12:                             # %CFerrorHandler.seedMT
	callq	FAULT_DETECTED_CFC
.Lfunc_end141:
	.size	seedMT, .Lfunc_end141-seedMT
	.cfi_endproc
                                        # -- End function
	.globl	reloadMT                # -- Begin function reloadMT
	.p2align	4, 0x90
	.type	reloadMT,@function
reloadMT:                               # @reloadMT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$139, %ax
	xorw	%cx, %ax
	cmpw	$-196, %ax
	jne	.LBB142_24
# %bb.1:                                # %reloadMT.split57
	movabsq	$state, %rcx
	movq	%rcx, %rax
	addq	$1588, %rax             # imm = 0x634
	movq	%rcx, %rdx
	addq	$8, %rdx
	movq	%rsp, %r13
	addq	$-16, %r13
	movq	%r13, %rsp
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %r11
	addq	$-16, %r11
	movq	%r11, %rsp
	movq	%rsp, %r15
	addq	$-16, %r15
	movq	%r15, %rsp
	movq	%rsp, %r12
	addq	$-16, %r12
	movq	%r12, %rsp
	movq	%rsp, %r14
	addq	$-16, %r14
	movq	%r14, %rsp
	movq	%rcx, (%r13)
	movq	%rdx, (%rbx)
	movq	%rax, (%r11)
	movl	left, %eax
	movw	$-196, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$-1, %eax
	jge	.LBB142_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$117, %ax
	cmpw	$-183, %ax
	jne	.LBB142_24
# %bb.3:                                # %reloadMT.split
	movw	$-183, BasicBlockSignatureTracker
	movw	$5972, RunTimeSignatureAdjuster # imm = 0x1754
	movl	$4357, %edi             # imm = 0x1105
	movq	%r11, -48(%rbp)         # 8-byte Spill
	callq	seedMT
	movq	-48(%rbp), %r11         # 8-byte Reload
	movw	$-183, BasicBlockSignatureTracker
	movw	$5972, RunTimeSignatureAdjuster # imm = 0x1754
	movw	$-183, BasicBlockSignatureTracker
	movw	$117, RunTimeSignatureAdjuster
.LBB142_4:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$103, %ax
	xorw	%cx, %ax
	cmpw	$-165, %ax
	jne	.LBB142_24
# %bb.5:                                # %reloadMT.split39
	movabsq	$state, %rax
	addq	$4, %rax
	movl	$623, left              # imm = 0x26F
	movq	%rax, next
	movl	state, %eax
	movl	%eax, (%r15)
	movl	state+4, %eax
	movl	%eax, (%r12)
	movl	$228, (%r14)
	movw	$-165, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
.LBB142_6:                              # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6, %ax
	xorw	%cx, %ax
	cmpw	$-163, %ax
	jne	.LBB142_23
# %bb.7:                                # %reloadMT.split41
                                        #   in Loop: Header=BB142_6 Depth=1
	movl	(%r14), %eax
	addl	$-1, %eax
	movl	%eax, (%r14)
	movw	$-163, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB142_12
# %bb.8:                                #   in Loop: Header=BB142_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$55, %ax
	cmpw	$-150, %ax
	jne	.LBB142_23
# %bb.9:                                # %reloadMT.split43
                                        #   in Loop: Header=BB142_6 Depth=1
	xorl	%eax, %eax
	movl	$2567483615, %ecx       # imm = 0x9908B0DF
	movq	(%r11), %rdx
	movq	%rdx, %rsi
	addq	$4, %rsi
	movq	%rsi, (%r11)
	movl	(%rdx), %edx
	movl	(%r15), %esi
	andl	$-2147483648, %esi      # imm = 0x80000000
	movl	(%r12), %edi
	andl	$2147483647, %edi       # imm = 0x7FFFFFFF
	orl	%edi, %esi
	shrl	$1, %esi
	xorl	%esi, %edx
	movl	(%r12), %esi
	andl	$1, %esi
	cmpl	$0, %esi
	cmovnel	%ecx, %eax
	xorl	%eax, %edx
	movq	(%r13), %rax
	movq	%rax, %rcx
	addq	$4, %rcx
	movq	%rcx, (%r13)
	movl	%edx, (%rax)
	movw	$-150, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
# %bb.10:                               #   in Loop: Header=BB142_6 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$24, %ax
	cmpw	$-142, %ax
	jne	.LBB142_23
# %bb.11:                               # %reloadMT.split47
                                        #   in Loop: Header=BB142_6 Depth=1
	movl	(%r12), %eax
	movl	%eax, (%r15)
	movq	(%rbx), %rax
	movq	%rax, %rcx
	addq	$4, %rcx
	movq	%rcx, (%rbx)
	movl	(%rax), %eax
	movl	%eax, (%r12)
	movw	$-142, BasicBlockSignatureTracker
	movw	$41, RunTimeSignatureAdjuster
	jmp	.LBB142_6
.LBB142_12:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$40, %ax
	cmpw	$-139, %ax
	jne	.LBB142_24
# %bb.13:                               # %reloadMT.split45
	movabsq	$state, %rax
	movq	%rax, (%r11)
	movl	$397, (%r14)            # imm = 0x18D
	movw	$-139, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
.LBB142_14:                             # =>This Inner Loop Header: Depth=1
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$12, %ax
	xorw	%cx, %ax
	cmpw	$-135, %ax
	jne	.LBB142_22
# %bb.15:                               # %reloadMT.split49
                                        #   in Loop: Header=BB142_14 Depth=1
	movl	(%r14), %eax
	addl	$-1, %eax
	movl	%eax, (%r14)
	movw	$-135, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %eax
	je	.LBB142_20
# %bb.16:                               #   in Loop: Header=BB142_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$226, %ax
	cmpw	$-101, %ax
	jne	.LBB142_22
# %bb.17:                               # %reloadMT.split51
                                        #   in Loop: Header=BB142_14 Depth=1
	xorl	%eax, %eax
	movl	$2567483615, %ecx       # imm = 0x9908B0DF
	movq	(%r11), %rdx
	movq	%rdx, %rsi
	addq	$4, %rsi
	movq	%rsi, (%r11)
	movl	(%rdx), %edx
	movl	(%r15), %esi
	andl	$-2147483648, %esi      # imm = 0x80000000
	movl	(%r12), %edi
	andl	$2147483647, %edi       # imm = 0x7FFFFFFF
	orl	%edi, %esi
	shrl	$1, %esi
	xorl	%esi, %edx
	movl	(%r12), %esi
	andl	$1, %esi
	cmpl	$0, %esi
	cmovnel	%ecx, %eax
	xorl	%eax, %edx
	movq	(%r13), %rax
	movq	%rax, %rcx
	addq	$4, %rcx
	movq	%rcx, (%r13)
	movl	%edx, (%rax)
	movw	$-101, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
# %bb.18:                               #   in Loop: Header=BB142_14 Depth=1
	movw	BasicBlockSignatureTracker, %ax
	xorw	$59, %ax
	cmpw	$-96, %ax
	jne	.LBB142_22
# %bb.19:                               # %reloadMT.split55
                                        #   in Loop: Header=BB142_14 Depth=1
	movl	(%r12), %eax
	movl	%eax, (%r15)
	movq	(%rbx), %rax
	movq	%rax, %rcx
	addq	$4, %rcx
	movq	%rcx, (%rbx)
	movl	(%rax), %eax
	movl	%eax, (%r12)
	movw	$-96, BasicBlockSignatureTracker
	movw	$213, RunTimeSignatureAdjuster
	jmp	.LBB142_14
.LBB142_20:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$223, %ax
	cmpw	$-90, %ax
	jne	.LBB142_24
# %bb.21:                               # %reloadMT.split53
	xorl	%eax, %eax
	movl	$2567483615, %ecx       # imm = 0x9908B0DF
	movl	state, %edx
	movl	%edx, (%r12)
	movq	(%r11), %rdx
	movl	(%rdx), %edx
	movl	(%r15), %esi
	andl	$-2147483648, %esi      # imm = 0x80000000
	movl	(%r12), %edi
	andl	$2147483647, %edi       # imm = 0x7FFFFFFF
	orl	%edi, %esi
	shrl	$1, %esi
	xorl	%esi, %edx
	movl	(%r12), %esi
	andl	$1, %esi
	cmpl	$0, %esi
	cmovnel	%ecx, %eax
	xorl	%eax, %edx
	movq	(%r13), %rax
	movl	%edx, (%rax)
	movl	(%r12), %eax
	shrl	$11, %eax
	xorl	(%r12), %eax
	movl	%eax, (%r12)
	movl	(%r12), %eax
	shll	$7, %eax
	andl	$-1658038656, %eax      # imm = 0x9D2C5680
	xorl	(%r12), %eax
	movl	%eax, (%r12)
	movl	(%r12), %eax
	shll	$15, %eax
	andl	$-272236544, %eax       # imm = 0xEFC60000
	xorl	(%r12), %eax
	movl	%eax, (%r12)
	movl	(%r12), %eax
	movl	(%r12), %ecx
	shrl	$18, %ecx
	xorl	%ecx, %eax
	movw	$-90, BasicBlockSignatureTracker
	movw	$20, RunTimeSignatureAdjuster
	leaq	-40(%rbp), %rsp
	popq	%rbx
	popq	%r12
	popq	%r13
	popq	%r14
	popq	%r15
	popq	%rbp
	retq
.LBB142_22:                             # %CFerrorHandler.reloadMT.loopexit
	jmp	.LBB142_24
.LBB142_23:                             # %CFerrorHandler.reloadMT.loopexit1
	jmp	.LBB142_24
.LBB142_24:                             # %CFerrorHandler.reloadMT
	callq	FAULT_DETECTED_CFC
.Lfunc_end142:
	.size	reloadMT, .Lfunc_end142-reloadMT
	.cfi_endproc
                                        # -- End function
	.globl	randomMT                # -- Begin function randomMT
	.p2align	4, 0x90
	.type	randomMT,@function
randomMT:                               # @randomMT
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%rbx
	pushq	%rax
	.cfi_offset %rbx, -24
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$6038, %ax              # imm = 0x1796
	xorw	%cx, %ax
	cmpw	$-78, %ax
	jne	.LBB143_8
# %bb.1:                                # %randomMT.split
	movq	%rsp, %rbx
	addq	$-16, %rbx
	movq	%rbx, %rsp
	movq	%rsp, %rax
	addq	$-16, %rax
	movq	%rax, %rsp
	movl	left, %ecx
	addl	$-1, %ecx
	movl	%ecx, left
	movw	$-78, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	cmpl	$0, %ecx
	jge	.LBB143_4
# %bb.2:
	movw	BasicBlockSignatureTracker, %ax
	xorw	$5, %ax
	cmpw	$-73, %ax
	jne	.LBB143_8
# %bb.3:                                # %randomMT.split14
	movw	$-73, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	callq	reloadMT
	movw	$-73, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	movl	%eax, (%rbx)
	movw	$-73, BasicBlockSignatureTracker
	movw	$0, RunTimeSignatureAdjuster
	jmp	.LBB143_6
.LBB143_4:
	movw	BasicBlockSignatureTracker, %cx
	xorw	$96, %cx
	cmpw	$-46, %cx
	jne	.LBB143_8
# %bb.5:                                # %randomMT.split16
	movq	next, %rcx
	movq	%rcx, %rdx
	addq	$4, %rdx
	movq	%rdx, next
	movl	(%rcx), %ecx
	movl	%ecx, (%rax)
	movl	(%rax), %ecx
	shrl	$11, %ecx
	xorl	(%rax), %ecx
	movl	%ecx, (%rax)
	movl	(%rax), %ecx
	shll	$7, %ecx
	andl	$-1658038656, %ecx      # imm = 0x9D2C5680
	xorl	(%rax), %ecx
	movl	%ecx, (%rax)
	movl	(%rax), %ecx
	shll	$15, %ecx
	andl	$-272236544, %ecx       # imm = 0xEFC60000
	xorl	(%rax), %ecx
	movl	%ecx, (%rax)
	movl	(%rax), %ecx
	movl	(%rax), %eax
	shrl	$18, %eax
	xorl	%eax, %ecx
	movl	%ecx, (%rbx)
	movw	$-46, BasicBlockSignatureTracker
	movw	$101, RunTimeSignatureAdjuster
.LBB143_6:
	movw	BasicBlockSignatureTracker, %ax
	movw	RunTimeSignatureAdjuster, %cx
	xorw	$96, %ax
	xorw	%cx, %ax
	cmpw	$-41, %ax
	jne	.LBB143_8
# %bb.7:                                # %randomMT.split18
	movl	(%rbx), %eax
	movw	$-41, BasicBlockSignatureTracker
	movw	$6132, RunTimeSignatureAdjuster # imm = 0x17F4
	leaq	-8(%rbp), %rsp
	popq	%rbx
	popq	%rbp
	retq
.LBB143_8:                              # %CFerrorHandler.randomMT
	callq	FAULT_DETECTED_CFC
.Lfunc_end143:
	.size	randomMT, .Lfunc_end143-randomMT
	.cfi_endproc
                                        # -- End function
	.globl	FAULT_DETECTED_CFC      # -- Begin function FAULT_DETECTED_CFC
	.p2align	4, 0x90
	.type	FAULT_DETECTED_CFC,@function
FAULT_DETECTED_CFC:                     # @FAULT_DETECTED_CFC
	.cfi_startproc
# %bb.0:                                # %FAULT_DETECTED_CFC
	pushq	%rax
	.cfi_def_cfa_offset 16
	callq	abort
	movw	$-28, BasicBlockSignatureTracker(%rip)
	movw	$0, RunTimeSignatureAdjuster(%rip)
.Lfunc_end144:
	.size	FAULT_DETECTED_CFC, .Lfunc_end144-FAULT_DETECTED_CFC
	.cfi_endproc
                                        # -- End function
	.type	calc_attackers.rook_o,@object # @calc_attackers.rook_o
	.section	.rodata,"a",@progbits
	.p2align	4
calc_attackers.rook_o:
	.long	12                      # 0xc
	.long	4294967284              # 0xfffffff4
	.long	1                       # 0x1
	.long	4294967295              # 0xffffffff
	.size	calc_attackers.rook_o, 16

	.type	calc_attackers.bishop_o,@object # @calc_attackers.bishop_o
	.p2align	4
calc_attackers.bishop_o:
	.long	11                      # 0xb
	.long	4294967285              # 0xfffffff5
	.long	13                      # 0xd
	.long	4294967283              # 0xfffffff3
	.size	calc_attackers.bishop_o, 16

	.type	calc_attackers.knight_o,@object # @calc_attackers.knight_o
	.p2align	4
calc_attackers.knight_o:
	.long	10                      # 0xa
	.long	4294967286              # 0xfffffff6
	.long	14                      # 0xe
	.long	4294967282              # 0xfffffff2
	.long	23                      # 0x17
	.long	4294967273              # 0xffffffe9
	.long	25                      # 0x19
	.long	4294967271              # 0xffffffe7
	.size	calc_attackers.knight_o, 32

	.type	is_attacked.bishop_o,@object # @is_attacked.bishop_o
	.p2align	4
is_attacked.bishop_o:
	.long	11                      # 0xb
	.long	4294967285              # 0xfffffff5
	.long	13                      # 0xd
	.long	4294967283              # 0xfffffff3
	.size	is_attacked.bishop_o, 16

	.type	is_attacked.knight_o,@object # @is_attacked.knight_o
	.p2align	4
is_attacked.knight_o:
	.long	10                      # 0xa
	.long	4294967286              # 0xfffffff6
	.long	14                      # 0xe
	.long	4294967282              # 0xfffffff2
	.long	23                      # 0x17
	.long	4294967273              # 0xffffffe9
	.long	25                      # 0x19
	.long	4294967271              # 0xffffffe7
	.size	is_attacked.knight_o, 32

	.type	is_attacked.rook_o,@object # @is_attacked.rook_o
	.p2align	4
is_attacked.rook_o:
	.long	12                      # 0xc
	.long	4294967284              # 0xfffffff4
	.long	1                       # 0x1
	.long	4294967295              # 0xffffffff
	.size	is_attacked.rook_o, 16

	.type	nk_attacked.bishop_o,@object # @nk_attacked.bishop_o
	.p2align	4
nk_attacked.bishop_o:
	.long	11                      # 0xb
	.long	4294967285              # 0xfffffff5
	.long	13                      # 0xd
	.long	4294967283              # 0xfffffff3
	.size	nk_attacked.bishop_o, 16

	.type	nk_attacked.knight_o,@object # @nk_attacked.knight_o
	.p2align	4
nk_attacked.knight_o:
	.long	10                      # 0xa
	.long	4294967286              # 0xfffffff6
	.long	14                      # 0xe
	.long	4294967282              # 0xfffffff2
	.long	23                      # 0x17
	.long	4294967273              # 0xffffffe9
	.long	25                      # 0x19
	.long	4294967271              # 0xffffffe7
	.size	nk_attacked.knight_o, 32

	.type	nk_attacked.rook_o,@object # @nk_attacked.rook_o
	.p2align	4
nk_attacked.rook_o:
	.long	12                      # 0xc
	.long	4294967284              # 0xfffffff4
	.long	1                       # 0x1
	.long	4294967295              # 0xffffffff
	.size	nk_attacked.rook_o, 16

	.type	holding,@object         # @holding
	.comm	holding,128,16
	.type	hold_hash,@object       # @hold_hash
	.comm	hold_hash,4,4
	.type	white_hand_eval,@object # @white_hand_eval
	.comm	white_hand_eval,4,4
	.type	black_hand_eval,@object # @black_hand_eval
	.comm	black_hand_eval,4,4
	.type	num_holding,@object     # @num_holding
	.comm	num_holding,8,4
	.type	userealholdings,@object # @userealholdings
	.comm	userealholdings,4,4
	.type	realholdings,@object    # @realholdings
	.comm	realholdings,255,16
	.type	drop_piece,@object      # @drop_piece
	.comm	drop_piece,4,4
	.type	.LSwitchColor.t,@object # @SwitchColor.t
	.p2align	4
.LSwitchColor.t:
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	4                       # 0x4
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	8                       # 0x8
	.long	7                       # 0x7
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	12                      # 0xc
	.long	11                      # 0xb
	.size	.LSwitchColor.t, 52

	.type	.LSwitchPromoted.t,@object # @SwitchPromoted.t
	.p2align	4
.LSwitchPromoted.t:
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	1                       # 0x1
	.size	.LSwitchPromoted.t, 52

	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"WP: %d WR: %d WB: %d WN: %d WQ: %d\n"
	.size	.L.str, 36

	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"BP: %d BR: %d BB: %d BN: %d BQ: %d\n"
	.size	.L.str.1, 36

	.type	ECache,@object          # @ECache
	.comm	ECache,8,8
	.type	ECacheProbes,@object    # @ECacheProbes
	.comm	ECacheProbes,4,4
	.type	ECacheHits,@object      # @ECacheHits
	.comm	ECacheHits,4,4
	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	"Out of memory allocating ECache.\n"
	.size	.L.str.3, 34

	.type	setup_epd_line.rankoffsets,@object # @setup_epd_line.rankoffsets
	.data
	.p2align	4
setup_epd_line.rankoffsets:
	.long	110                     # 0x6e
	.long	98                      # 0x62
	.long	86                      # 0x56
	.long	74                      # 0x4a
	.long	62                      # 0x3e
	.long	50                      # 0x32
	.long	38                      # 0x26
	.long	26                      # 0x1a
	.size	setup_epd_line.rankoffsets, 32

	.type	.L.str.4,@object        # @.str.4
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.4:
	.asciz	"bm"
	.size	.L.str.4, 3

	.type	.L.str.1.5,@object      # @.str.1.5
.L.str.1.5:
	.asciz	"am"
	.size	.L.str.1.5, 3

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"No best-move or avoid-move found!"
	.size	.L.str.2, 34

	.type	.L.str.3.6,@object      # @.str.3.6
.L.str.3.6:
	.asciz	"\nName of EPD testsuite: "
	.size	.L.str.3.6, 25

	.type	.L.str.4.7,@object      # @.str.4.7
.L.str.4.7:
	.asciz	"\nTime per move (s): "
	.size	.L.str.4.7, 21

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"\n"
	.size	.L.str.5, 2

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"r"
	.size	.L.str.6, 2

	.type	.L.str.7,@object        # @.str.7
.L.str.7:
	.asciz	"\nNodes: %i (%0.2f%% qnodes)\n"
	.size	.L.str.7, 29

	.type	.L.str.8,@object        # @.str.8
.L.str.8:
	.asciz	"ECacheProbes : %u   ECacheHits : %u   HitRate : %f%%\n"
	.size	.L.str.8, 54

	.type	.L.str.9,@object        # @.str.9
.L.str.9:
	.asciz	"TTStores : %u TTProbes : %u   TTHits : %u   HitRate : %f%%\n"
	.size	.L.str.9, 60

	.type	.L.str.10,@object       # @.str.10
.L.str.10:
	.asciz	"NTries : %u  NCuts : %u  CutRate : %f%%  TExt: %u\n"
	.size	.L.str.10, 51

	.type	.L.str.11,@object       # @.str.11
.L.str.11:
	.asciz	"Check extensions: %u  Razor drops : %u  Razor Material : %u\n"
	.size	.L.str.11, 61

	.type	.L.str.12,@object       # @.str.12
.L.str.12:
	.asciz	"Move ordering : %f%%\n"
	.size	.L.str.12, 22

	.type	.L.str.13,@object       # @.str.13
.L.str.13:
	.asciz	"Material score: %d  Eval : %d  MaxPosDiff: %d\n"
	.size	.L.str.13, 47

	.type	.L.str.14,@object       # @.str.14
.L.str.14:
	.asciz	"Solution found.\n"
	.size	.L.str.14, 17

	.type	.L.str.15,@object       # @.str.15
.L.str.15:
	.asciz	"Solution not found.\n"
	.size	.L.str.15, 21

	.type	.L.str.16,@object       # @.str.16
.L.str.16:
	.asciz	"Solved: %d/%d\n"
	.size	.L.str.16, 15

	.type	.L.str.17,@object       # @.str.17
.L.str.17:
	.asciz	"EPD: %s\n"
	.size	.L.str.17, 9

	.type	.L.str.18,@object       # @.str.18
.L.str.18:
	.asciz	"Searching to %d ply\n"
	.size	.L.str.18, 21

	.type	std_material,@object    # @std_material
	.data
	.globl	std_material
	.p2align	4
std_material:
	.long	0                       # 0x0
	.long	100                     # 0x64
	.long	4294967196              # 0xffffff9c
	.long	310                     # 0x136
	.long	4294966986              # 0xfffffeca
	.long	4000                    # 0xfa0
	.long	4294963296              # 0xfffff060
	.long	500                     # 0x1f4
	.long	4294966796              # 0xfffffe0c
	.long	900                     # 0x384
	.long	4294966396              # 0xfffffc7c
	.long	325                     # 0x145
	.long	4294966971              # 0xfffffebb
	.long	0                       # 0x0
	.size	std_material, 56

	.type	zh_material,@object     # @zh_material
	.globl	zh_material
	.p2align	4
zh_material:
	.long	0                       # 0x0
	.long	100                     # 0x64
	.long	4294967196              # 0xffffff9c
	.long	210                     # 0xd2
	.long	4294967086              # 0xffffff2e
	.long	4000                    # 0xfa0
	.long	4294963296              # 0xfffff060
	.long	250                     # 0xfa
	.long	4294967046              # 0xffffff06
	.long	450                     # 0x1c2
	.long	4294966846              # 0xfffffe3e
	.long	230                     # 0xe6
	.long	4294967066              # 0xffffff1a
	.long	0                       # 0x0
	.size	zh_material, 56

	.type	suicide_material,@object # @suicide_material
	.globl	suicide_material
	.p2align	4
suicide_material:
	.long	0                       # 0x0
	.long	15                      # 0xf
	.long	4294967281              # 0xfffffff1
	.long	150                     # 0x96
	.long	4294967146              # 0xffffff6a
	.long	500                     # 0x1f4
	.long	4294966796              # 0xfffffe0c
	.long	150                     # 0x96
	.long	4294967146              # 0xffffff6a
	.long	50                      # 0x32
	.long	4294967246              # 0xffffffce
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	suicide_material, 56

	.type	losers_material,@object # @losers_material
	.globl	losers_material
	.p2align	4
losers_material:
	.long	0                       # 0x0
	.long	80                      # 0x50
	.long	4294967216              # 0xffffffb0
	.long	320                     # 0x140
	.long	4294966976              # 0xfffffec0
	.long	1000                    # 0x3e8
	.long	4294966296              # 0xfffffc18
	.long	350                     # 0x15e
	.long	4294966946              # 0xfffffea2
	.long	400                     # 0x190
	.long	4294966896              # 0xfffffe70
	.long	270                     # 0x10e
	.long	4294967026              # 0xfffffef2
	.long	0                       # 0x0
	.size	losers_material, 56

	.type	material,@object        # @material
	.bss
	.globl	material
	.p2align	4
material:
	.zero	56
	.size	material, 56

	.type	Xfile,@object           # @Xfile
	.section	.rodata,"a",@progbits
	.globl	Xfile
	.p2align	4
Xfile:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	Xfile, 576

	.type	Xrank,@object           # @Xrank
	.globl	Xrank
	.p2align	4
Xrank:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4                       # 0x4
	.long	4                       # 0x4
	.long	4                       # 0x4
	.long	4                       # 0x4
	.long	4                       # 0x4
	.long	4                       # 0x4
	.long	4                       # 0x4
	.long	4                       # 0x4
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	7                       # 0x7
	.long	7                       # 0x7
	.long	7                       # 0x7
	.long	7                       # 0x7
	.long	7                       # 0x7
	.long	7                       # 0x7
	.long	7                       # 0x7
	.long	7                       # 0x7
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	8                       # 0x8
	.long	8                       # 0x8
	.long	8                       # 0x8
	.long	8                       # 0x8
	.long	8                       # 0x8
	.long	8                       # 0x8
	.long	8                       # 0x8
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	Xrank, 576

	.type	Xdiagl,@object          # @Xdiagl
	.globl	Xdiagl
	.p2align	4
Xdiagl:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	11                      # 0xb
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	12                      # 0xc
	.long	11                      # 0xb
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	12                      # 0xc
	.long	11                      # 0xb
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	14                      # 0xe
	.long	13                      # 0xd
	.long	12                      # 0xc
	.long	11                      # 0xb
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	15                      # 0xf
	.long	14                      # 0xe
	.long	13                      # 0xd
	.long	12                      # 0xc
	.long	11                      # 0xb
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	Xdiagl, 576

	.type	Xdiagr,@object          # @Xdiagr
	.globl	Xdiagr
	.p2align	4
Xdiagr:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	15                      # 0xf
	.long	14                      # 0xe
	.long	13                      # 0xd
	.long	12                      # 0xc
	.long	11                      # 0xb
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	14                      # 0xe
	.long	13                      # 0xd
	.long	12                      # 0xc
	.long	11                      # 0xb
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	12                      # 0xc
	.long	11                      # 0xb
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	12                      # 0xc
	.long	11                      # 0xb
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	11                      # 0xb
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	9                       # 0x9
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	Xdiagr, 576

	.type	sqcolor,@object         # @sqcolor
	.globl	sqcolor
	.p2align	4
sqcolor:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	sqcolor, 576

	.type	pcsqbishop,@object      # @pcsqbishop
	.globl	pcsqbishop
	.p2align	4
pcsqbishop:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	4294967291              # 0xfffffffb
	.long	4294967286              # 0xfffffff6
	.long	4294967291              # 0xfffffffb
	.long	4294967291              # 0xfffffffb
	.long	4294967286              # 0xfffffff6
	.long	4294967291              # 0xfffffffb
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	10                      # 0xa
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	6                       # 0x6
	.long	5                       # 0x5
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	3                       # 0x3
	.long	15                      # 0xf
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	15                      # 0xf
	.long	3                       # 0x3
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	3                       # 0x3
	.long	15                      # 0xf
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	15                      # 0xf
	.long	3                       # 0x3
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	6                       # 0x6
	.long	5                       # 0x5
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	10                      # 0xa
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	4294967291              # 0xfffffffb
	.long	4294967286              # 0xfffffff6
	.long	4294967291              # 0xfffffffb
	.long	4294967291              # 0xfffffffb
	.long	4294967286              # 0xfffffff6
	.long	4294967291              # 0xfffffffb
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	pcsqbishop, 576

	.type	black_knight,@object    # @black_knight
	.globl	black_knight
	.p2align	4
black_knight:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	15                      # 0xf
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	15                      # 0xf
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	15                      # 0xf
	.long	25                      # 0x19
	.long	35                      # 0x23
	.long	35                      # 0x23
	.long	35                      # 0x23
	.long	15                      # 0xf
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	10                      # 0xa
	.long	25                      # 0x19
	.long	20                      # 0x14
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	10                      # 0xa
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	20                      # 0x14
	.long	20                      # 0x14
	.long	20                      # 0x14
	.long	20                      # 0x14
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967261              # 0xffffffdd
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967261              # 0xffffffdd
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	black_knight, 576

	.type	white_knight,@object    # @white_knight
	.globl	white_knight
	.p2align	4
white_knight:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967261              # 0xffffffdd
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967261              # 0xffffffdd
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	20                      # 0x14
	.long	20                      # 0x14
	.long	20                      # 0x14
	.long	20                      # 0x14
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	10                      # 0xa
	.long	25                      # 0x19
	.long	20                      # 0x14
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	10                      # 0xa
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	15                      # 0xf
	.long	25                      # 0x19
	.long	35                      # 0x23
	.long	35                      # 0x23
	.long	35                      # 0x23
	.long	15                      # 0xf
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	15                      # 0xf
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	15                      # 0xf
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	white_knight, 576

	.type	white_pawn,@object      # @white_pawn
	.globl	white_pawn
	.p2align	4
white_pawn:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	35                      # 0x23
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	50                      # 0x32
	.long	45                      # 0x2d
	.long	30                      # 0x1e
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	7                       # 0x7
	.long	7                       # 0x7
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	14                      # 0xe
	.long	14                      # 0xe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	20                      # 0x14
	.long	20                      # 0x14
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	12                      # 0xc
	.long	18                      # 0x12
	.long	18                      # 0x12
	.long	27                      # 0x1b
	.long	27                      # 0x1b
	.long	18                      # 0x12
	.long	18                      # 0x12
	.long	18                      # 0x12
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	25                      # 0x19
	.long	30                      # 0x1e
	.long	30                      # 0x1e
	.long	35                      # 0x23
	.long	35                      # 0x23
	.long	35                      # 0x23
	.long	30                      # 0x1e
	.long	25                      # 0x19
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	white_pawn, 576

	.type	black_pawn,@object      # @black_pawn
	.globl	black_pawn
	.p2align	4
black_pawn:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	30                      # 0x1e
	.long	30                      # 0x1e
	.long	30                      # 0x1e
	.long	35                      # 0x23
	.long	35                      # 0x23
	.long	35                      # 0x23
	.long	30                      # 0x1e
	.long	25                      # 0x19
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	12                      # 0xc
	.long	18                      # 0x12
	.long	18                      # 0x12
	.long	27                      # 0x1b
	.long	27                      # 0x1b
	.long	18                      # 0x12
	.long	18                      # 0x12
	.long	18                      # 0x12
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	20                      # 0x14
	.long	20                      # 0x14
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	14                      # 0xe
	.long	14                      # 0xe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	7                       # 0x7
	.long	7                       # 0x7
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	35                      # 0x23
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	50                      # 0x32
	.long	45                      # 0x2d
	.long	30                      # 0x1e
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	black_pawn, 576

	.type	white_king,@object      # @white_king
	.globl	white_king
	.p2align	4
white_king:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967196              # 0xffffff9c
	.long	7                       # 0x7
	.long	4                       # 0x4
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	4                       # 0x4
	.long	7                       # 0x7
	.long	4294967196              # 0xffffff9c
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967046              # 0xffffff06
	.long	4294967096              # 0xffffff38
	.long	4294967146              # 0xffffff6a
	.long	4294967196              # 0xffffff9c
	.long	4294967196              # 0xffffff9c
	.long	4294967146              # 0xffffff6a
	.long	4294967096              # 0xffffff38
	.long	4294967046              # 0xffffff06
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966946              # 0xfffffea2
	.long	4294966996              # 0xfffffed4
	.long	4294966996              # 0xfffffed4
	.long	4294967046              # 0xffffff06
	.long	4294967046              # 0xffffff06
	.long	4294966996              # 0xfffffed4
	.long	4294966996              # 0xfffffed4
	.long	4294966946              # 0xfffffea2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966896              # 0xfffffe70
	.long	4294966896              # 0xfffffe70
	.long	4294966896              # 0xfffffe70
	.long	4294966946              # 0xfffffea2
	.long	4294966946              # 0xfffffea2
	.long	4294966896              # 0xfffffe70
	.long	4294966896              # 0xfffffe70
	.long	4294966896              # 0xfffffe70
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	white_king, 576

	.type	black_king,@object      # @black_king
	.globl	black_king
	.p2align	4
black_king:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	4294966796              # 0xfffffe0c
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	4294966846              # 0xfffffe3e
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966896              # 0xfffffe70
	.long	4294966896              # 0xfffffe70
	.long	4294966896              # 0xfffffe70
	.long	4294966946              # 0xfffffea2
	.long	4294966946              # 0xfffffea2
	.long	4294966896              # 0xfffffe70
	.long	4294966896              # 0xfffffe70
	.long	4294966896              # 0xfffffe70
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294966946              # 0xfffffea2
	.long	4294966996              # 0xfffffed4
	.long	4294966996              # 0xfffffed4
	.long	4294967046              # 0xffffff06
	.long	4294967046              # 0xffffff06
	.long	4294966996              # 0xfffffed4
	.long	4294966996              # 0xfffffed4
	.long	4294966946              # 0xfffffea2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967046              # 0xffffff06
	.long	4294967096              # 0xffffff38
	.long	4294967146              # 0xffffff6a
	.long	4294967196              # 0xffffff9c
	.long	4294967196              # 0xffffff9c
	.long	4294967146              # 0xffffff6a
	.long	4294967096              # 0xffffff38
	.long	4294967046              # 0xffffff06
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967196              # 0xffffff9c
	.long	7                       # 0x7
	.long	4                       # 0x4
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	4                       # 0x4
	.long	7                       # 0x7
	.long	4294967196              # 0xffffff9c
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	black_king, 576

	.type	black_queen,@object     # @black_queen
	.globl	black_queen
	.p2align	4
black_queen:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967236              # 0xffffffc4
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967236              # 0xffffffc4
	.long	4294967236              # 0xffffffc4
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967236              # 0xffffffc4
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	7                       # 0x7
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	black_queen, 576

	.type	white_queen,@object     # @white_queen
	.globl	white_queen
	.p2align	4
white_queen:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	7                       # 0x7
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967236              # 0xffffffc4
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967236              # 0xffffffc4
	.long	4294967236              # 0xffffffc4
	.long	4294967256              # 0xffffffd8
	.long	4294967256              # 0xffffffd8
	.long	4294967236              # 0xffffffc4
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	white_queen, 576

	.type	black_rook,@object      # @black_rook
	.globl	black_rook
	.p2align	4
black_rook:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	15                      # 0xf
	.long	20                      # 0x14
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	20                      # 0x14
	.long	15                      # 0xf
	.long	10                      # 0xa
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	15                      # 0xf
	.long	20                      # 0x14
	.long	20                      # 0x14
	.long	15                      # 0xf
	.long	10                      # 0xa
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	7                       # 0x7
	.long	10                      # 0xa
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	black_rook, 576

	.type	white_rook,@object      # @white_rook
	.globl	white_rook
	.p2align	4
white_rook:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	7                       # 0x7
	.long	10                      # 0xa
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967266              # 0xffffffe2
	.long	4294967266              # 0xffffffe2
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	15                      # 0xf
	.long	20                      # 0x14
	.long	20                      # 0x14
	.long	15                      # 0xf
	.long	10                      # 0xa
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	15                      # 0xf
	.long	20                      # 0x14
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	20                      # 0x14
	.long	15                      # 0xf
	.long	10                      # 0xa
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	white_rook, 576

	.type	upscale,@object         # @upscale
	.globl	upscale
	.p2align	4
upscale:
	.long	26                      # 0x1a
	.long	27                      # 0x1b
	.long	28                      # 0x1c
	.long	29                      # 0x1d
	.long	30                      # 0x1e
	.long	31                      # 0x1f
	.long	32                      # 0x20
	.long	33                      # 0x21
	.long	38                      # 0x26
	.long	39                      # 0x27
	.long	40                      # 0x28
	.long	41                      # 0x29
	.long	42                      # 0x2a
	.long	43                      # 0x2b
	.long	44                      # 0x2c
	.long	45                      # 0x2d
	.long	50                      # 0x32
	.long	51                      # 0x33
	.long	52                      # 0x34
	.long	53                      # 0x35
	.long	54                      # 0x36
	.long	55                      # 0x37
	.long	56                      # 0x38
	.long	57                      # 0x39
	.long	62                      # 0x3e
	.long	63                      # 0x3f
	.long	64                      # 0x40
	.long	65                      # 0x41
	.long	66                      # 0x42
	.long	67                      # 0x43
	.long	68                      # 0x44
	.long	69                      # 0x45
	.long	74                      # 0x4a
	.long	75                      # 0x4b
	.long	76                      # 0x4c
	.long	77                      # 0x4d
	.long	78                      # 0x4e
	.long	79                      # 0x4f
	.long	80                      # 0x50
	.long	81                      # 0x51
	.long	86                      # 0x56
	.long	87                      # 0x57
	.long	88                      # 0x58
	.long	89                      # 0x59
	.long	90                      # 0x5a
	.long	91                      # 0x5b
	.long	92                      # 0x5c
	.long	93                      # 0x5d
	.long	98                      # 0x62
	.long	99                      # 0x63
	.long	100                     # 0x64
	.long	101                     # 0x65
	.long	102                     # 0x66
	.long	103                     # 0x67
	.long	104                     # 0x68
	.long	105                     # 0x69
	.long	110                     # 0x6e
	.long	111                     # 0x6f
	.long	112                     # 0x70
	.long	113                     # 0x71
	.long	114                     # 0x72
	.long	115                     # 0x73
	.long	116                     # 0x74
	.long	117                     # 0x75
	.size	upscale, 256

	.type	pre_p_tropism,@object   # @pre_p_tropism
	.data
	.globl	pre_p_tropism
	.p2align	4
pre_p_tropism:
	.long	9999                    # 0x270f
	.long	40                      # 0x28
	.long	20                      # 0x14
	.long	10                      # 0xa
	.long	3                       # 0x3
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	9999                    # 0x270f
	.size	pre_p_tropism, 36

	.type	pre_r_tropism,@object   # @pre_r_tropism
	.globl	pre_r_tropism
	.p2align	4
pre_r_tropism:
	.long	9999                    # 0x270f
	.long	50                      # 0x32
	.long	40                      # 0x28
	.long	15                      # 0xf
	.long	5                       # 0x5
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	9999                    # 0x270f
	.size	pre_r_tropism, 36

	.type	pre_n_tropism,@object   # @pre_n_tropism
	.globl	pre_n_tropism
	.p2align	4
pre_n_tropism:
	.long	9999                    # 0x270f
	.long	50                      # 0x32
	.long	70                      # 0x46
	.long	35                      # 0x23
	.long	10                      # 0xa
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	9999                    # 0x270f
	.size	pre_n_tropism, 36

	.type	pre_q_tropism,@object   # @pre_q_tropism
	.globl	pre_q_tropism
	.p2align	4
pre_q_tropism:
	.long	9999                    # 0x270f
	.long	100                     # 0x64
	.long	60                      # 0x3c
	.long	20                      # 0x14
	.long	5                       # 0x5
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	9999                    # 0x270f
	.size	pre_q_tropism, 36

	.type	pre_b_tropism,@object   # @pre_b_tropism
	.globl	pre_b_tropism
	.p2align	4
pre_b_tropism:
	.long	9999                    # 0x270f
	.long	50                      # 0x32
	.long	25                      # 0x19
	.long	15                      # 0xf
	.long	5                       # 0x5
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	9999                    # 0x270f
	.size	pre_b_tropism, 36

	.type	ksafety_scaled,@object  # @ksafety_scaled
	.globl	ksafety_scaled
	.p2align	4
ksafety_scaled:
	.long	4294967291              # 0xfffffffb
	.long	5                       # 0x5
	.long	10                      # 0xa
	.long	15                      # 0xf
	.long	50                      # 0x32
	.long	80                      # 0x50
	.long	150                     # 0x96
	.long	150                     # 0x96
	.long	150                     # 0x96
	.long	4294967291              # 0xfffffffb
	.long	15                      # 0xf
	.long	20                      # 0x14
	.long	25                      # 0x19
	.long	70                      # 0x46
	.long	150                     # 0x96
	.long	200                     # 0xc8
	.long	200                     # 0xc8
	.long	200                     # 0xc8
	.long	4294967291              # 0xfffffffb
	.long	15                      # 0xf
	.long	30                      # 0x1e
	.long	30                      # 0x1e
	.long	100                     # 0x64
	.long	200                     # 0xc8
	.long	300                     # 0x12c
	.long	300                     # 0x12c
	.long	300                     # 0x12c
	.long	4294967286              # 0xfffffff6
	.long	20                      # 0x14
	.long	40                      # 0x28
	.long	40                      # 0x28
	.long	100                     # 0x64
	.long	200                     # 0xc8
	.long	300                     # 0x12c
	.long	300                     # 0x12c
	.long	400                     # 0x190
	.long	4294967286              # 0xfffffff6
	.long	30                      # 0x1e
	.long	50                      # 0x32
	.long	80                      # 0x50
	.long	150                     # 0x96
	.long	300                     # 0x12c
	.long	400                     # 0x190
	.long	400                     # 0x190
	.long	500                     # 0x1f4
	.long	4294967286              # 0xfffffff6
	.long	35                      # 0x23
	.long	60                      # 0x3c
	.long	100                     # 0x64
	.long	200                     # 0xc8
	.long	250                     # 0xfa
	.long	400                     # 0x190
	.long	400                     # 0x190
	.long	500                     # 0x1f4
	.long	4294967286              # 0xfffffff6
	.long	40                      # 0x28
	.long	70                      # 0x46
	.long	110                     # 0x6e
	.long	210                     # 0xd2
	.long	300                     # 0x12c
	.long	500                     # 0x1f4
	.long	500                     # 0x1f4
	.long	600                     # 0x258
	.long	4294967286              # 0xfffffff6
	.long	45                      # 0x2d
	.long	75                      # 0x4b
	.long	125                     # 0x7d
	.long	215                     # 0xd7
	.long	300                     # 0x12c
	.long	500                     # 0x1f4
	.long	600                     # 0x258
	.long	700                     # 0x2bc
	.long	4294967286              # 0xfffffff6
	.long	60                      # 0x3c
	.long	90                      # 0x5a
	.long	130                     # 0x82
	.long	240                     # 0xf0
	.long	350                     # 0x15e
	.long	500                     # 0x1f4
	.long	600                     # 0x258
	.long	700                     # 0x2bc
	.long	4294967281              # 0xfffffff1
	.long	60                      # 0x3c
	.long	95                      # 0x5f
	.long	145                     # 0x91
	.long	260                     # 0x104
	.long	350                     # 0x15e
	.long	500                     # 0x1f4
	.long	600                     # 0x258
	.long	700                     # 0x2bc
	.long	4294967281              # 0xfffffff1
	.long	60                      # 0x3c
	.long	100                     # 0x64
	.long	150                     # 0x96
	.long	270                     # 0x10e
	.long	350                     # 0x15e
	.long	500                     # 0x1f4
	.long	600                     # 0x258
	.long	700                     # 0x2bc
	.long	4294967281              # 0xfffffff1
	.long	60                      # 0x3c
	.long	110                     # 0x6e
	.long	160                     # 0xa0
	.long	280                     # 0x118
	.long	400                     # 0x190
	.long	600                     # 0x258
	.long	700                     # 0x2bc
	.long	800                     # 0x320
	.long	4294967276              # 0xffffffec
	.long	70                      # 0x46
	.long	115                     # 0x73
	.long	165                     # 0xa5
	.long	290                     # 0x122
	.long	400                     # 0x190
	.long	600                     # 0x258
	.long	700                     # 0x2bc
	.long	800                     # 0x320
	.long	4294967276              # 0xffffffec
	.long	80                      # 0x50
	.long	120                     # 0x78
	.long	170                     # 0xaa
	.long	300                     # 0x12c
	.long	450                     # 0x1c2
	.long	700                     # 0x2bc
	.long	800                     # 0x320
	.long	900                     # 0x384
	.long	4294967276              # 0xffffffec
	.long	80                      # 0x50
	.long	125                     # 0x7d
	.long	175                     # 0xaf
	.long	310                     # 0x136
	.long	450                     # 0x1c2
	.long	700                     # 0x2bc
	.long	800                     # 0x320
	.long	900                     # 0x384
	.size	ksafety_scaled, 540

	.type	p_tropism,@object       # @p_tropism
	.comm	p_tropism,20736,16
	.type	b_tropism,@object       # @b_tropism
	.comm	b_tropism,20736,16
	.type	n_tropism,@object       # @n_tropism
	.comm	n_tropism,20736,16
	.type	r_tropism,@object       # @r_tropism
	.comm	r_tropism,20736,16
	.type	q_tropism,@object       # @q_tropism
	.comm	q_tropism,20736,16
	.type	Material,@object        # @Material
	.comm	Material,4,4
	.type	lcentral,@object        # @lcentral
	.p2align	4
lcentral:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	15                      # 0xf
	.long	30                      # 0x1e
	.long	30                      # 0x1e
	.long	15                      # 0xf
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	15                      # 0xf
	.long	30                      # 0x1e
	.long	30                      # 0x1e
	.long	15                      # 0xf
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	4294967281              # 0xfffffff1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967281              # 0xfffffff1
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	lcentral, 576

	.type	l_king_mobility.king_o,@object # @l_king_mobility.king_o
	.section	.rodata,"a",@progbits
	.p2align	4
l_king_mobility.king_o:
	.long	13                      # 0xd
	.long	12                      # 0xc
	.long	11                      # 0xb
	.long	1                       # 0x1
	.long	4294967295              # 0xffffffff
	.long	4294967285              # 0xfffffff5
	.long	4294967284              # 0xfffffff4
	.long	4294967283              # 0xfffffff3
	.size	l_king_mobility.king_o, 32

	.type	l_knight_mobility.knight_o,@object # @l_knight_mobility.knight_o
	.p2align	4
l_knight_mobility.knight_o:
	.long	10                      # 0xa
	.long	4294967286              # 0xfffffff6
	.long	14                      # 0xe
	.long	4294967282              # 0xfffffff2
	.long	23                      # 0x17
	.long	4294967273              # 0xffffffe9
	.long	25                      # 0x19
	.long	4294967271              # 0xffffffe7
	.size	l_knight_mobility.knight_o, 32

	.type	kingcap,@object         # @kingcap
	.comm	kingcap,4,4
	.type	numb_moves,@object      # @numb_moves
	.comm	numb_moves,4,4
	.type	fcaptures,@object       # @fcaptures
	.comm	fcaptures,4,4
	.type	gfrom,@object           # @gfrom
	.comm	gfrom,4,4
	.type	total_moves,@object     # @total_moves
	.comm	total_moves,4,4
	.type	total_movegens,@object  # @total_movegens
	.comm	total_movegens,4,4
	.type	genfor,@object          # @genfor
	.local	genfor
	.comm	genfor,8,8
	.type	f_in_check.knight_o,@object # @f_in_check.knight_o
	.p2align	4
f_in_check.knight_o:
	.long	10                      # 0xa
	.long	4294967286              # 0xfffffff6
	.long	14                      # 0xe
	.long	4294967282              # 0xfffffff2
	.long	23                      # 0x17
	.long	4294967273              # 0xffffffe9
	.long	25                      # 0x19
	.long	4294967271              # 0xffffffe7
	.size	f_in_check.knight_o, 32

	.type	extended_in_check.knight_o,@object # @extended_in_check.knight_o
	.p2align	4
extended_in_check.knight_o:
	.long	10                      # 0xa
	.long	4294967286              # 0xfffffff6
	.long	14                      # 0xe
	.long	4294967282              # 0xfffffff2
	.long	23                      # 0x17
	.long	4294967273              # 0xffffffe9
	.long	25                      # 0x19
	.long	4294967271              # 0xffffffe7
	.size	extended_in_check.knight_o, 32

	.type	std_p_tropism,@object   # @std_p_tropism
	.globl	std_p_tropism
	.p2align	4
std_p_tropism:
	.long	9999                    # 0x270f
	.long	15                      # 0xf
	.long	10                      # 0xa
	.long	7                       # 0x7
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	std_p_tropism, 32

	.type	std_own_p_tropism,@object # @std_own_p_tropism
	.globl	std_own_p_tropism
	.p2align	4
std_own_p_tropism:
	.long	9999                    # 0x270f
	.long	30                      # 0x1e
	.long	10                      # 0xa
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	std_own_p_tropism, 32

	.type	std_r_tropism,@object   # @std_r_tropism
	.globl	std_r_tropism
	.p2align	4
std_r_tropism:
	.long	9999                    # 0x270f
	.long	0                       # 0x0
	.long	15                      # 0xf
	.long	5                       # 0x5
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	std_r_tropism, 64

	.type	std_n_tropism,@object   # @std_n_tropism
	.globl	std_n_tropism
	.p2align	4
std_n_tropism:
	.long	9999                    # 0x270f
	.long	14                      # 0xe
	.long	9                       # 0x9
	.long	6                       # 0x6
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	std_n_tropism, 32

	.type	std_q_tropism,@object   # @std_q_tropism
	.globl	std_q_tropism
	.p2align	4
std_q_tropism:
	.long	9999                    # 0x270f
	.long	200                     # 0xc8
	.long	50                      # 0x32
	.long	15                      # 0xf
	.long	3                       # 0x3
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	0                       # 0x0
	.size	std_q_tropism, 32

	.type	std_b_tropism,@object   # @std_b_tropism
	.globl	std_b_tropism
	.p2align	4
std_b_tropism:
	.long	9999                    # 0x270f
	.long	12                      # 0xc
	.long	7                       # 0x7
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	std_b_tropism, 32

	.type	distance,@object        # @distance
	.comm	distance,82944,16
	.type	king_locs,@object       # @king_locs
	.comm	king_locs,8,4
	.type	rookdistance,@object    # @rookdistance
	.comm	rookdistance,82944,16
	.type	wmat,@object            # @wmat
	.comm	wmat,4,4
	.type	bmat,@object            # @bmat
	.comm	bmat,4,4
	.type	maxposdiff,@object      # @maxposdiff
	.comm	maxposdiff,4,4
	.type	bishop_mobility.dir,@object # @bishop_mobility.dir
	.p2align	4
bishop_mobility.dir:
	.long	4294967283              # 0xfffffff3
	.long	4294967285              # 0xfffffff5
	.long	11                      # 0xb
	.long	13                      # 0xd
	.size	bishop_mobility.dir, 16

	.type	rook_mobility.dir,@object # @rook_mobility.dir
	.p2align	4
rook_mobility.dir:
	.long	4294967295              # 0xffffffff
	.long	1                       # 0x1
	.long	12                      # 0xc
	.long	4294967284              # 0xfffffff4
	.size	rook_mobility.dir, 16

	.type	Rook.square_d1,@object  # @Rook.square_d1
	.p2align	2
Rook.square_d1:
	.long	29                      # 0x1d
	.long	113                     # 0x71
	.size	Rook.square_d1, 8

	.type	sbishop,@object         # @sbishop
	.data
	.p2align	4
sbishop:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967294              # 0xfffffffe
	.long	8                       # 0x8
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	8                       # 0x8
	.long	4294967294              # 0xfffffffe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967294              # 0xfffffffe
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	4294967294              # 0xfffffffe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967294              # 0xfffffffe
	.long	2                       # 0x2
	.long	5                       # 0x5
	.long	4                       # 0x4
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	2                       # 0x2
	.long	4294967294              # 0xfffffffe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967294              # 0xfffffffe
	.long	2                       # 0x2
	.long	5                       # 0x5
	.long	4                       # 0x4
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	2                       # 0x2
	.long	4294967294              # 0xfffffffe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967294              # 0xfffffffe
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	4294967294              # 0xfffffffe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967294              # 0xfffffffe
	.long	8                       # 0x8
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	8                       # 0x8
	.long	4294967294              # 0xfffffffe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	4294967294              # 0xfffffffe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	sbishop, 576

	.type	sknight,@object         # @sknight
	.p2align	4
sknight:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	5                       # 0x5
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	5                       # 0x5
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	sknight, 576

	.type	.L.str.22,@object       # @.str.22
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.22:
	.asciz	"Illegal piece detected sq=%i c=%i\n"
	.size	.L.str.22, 35

	.type	evalRoutines,@object    # @evalRoutines
	.data
	.p2align	4
evalRoutines:
	.quad	ErrorIt
	.quad	Pawn
	.quad	Knight
	.quad	King
	.quad	Rook
	.quad	Queen
	.quad	Bishop
	.size	evalRoutines, 56

	.type	swhite_pawn,@object     # @swhite_pawn
	.p2align	4
swhite_pawn:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	3                       # 0x3
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	4                       # 0x4
	.long	6                       # 0x6
	.long	12                      # 0xc
	.long	12                      # 0xc
	.long	6                       # 0x6
	.long	4                       # 0x4
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	6                       # 0x6
	.long	9                       # 0x9
	.long	14                      # 0xe
	.long	14                      # 0xe
	.long	9                       # 0x9
	.long	6                       # 0x6
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	12                      # 0xc
	.long	14                      # 0xe
	.long	16                      # 0x10
	.long	16                      # 0x10
	.long	14                      # 0xe
	.long	12                      # 0xc
	.long	10                      # 0xa
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	20                      # 0x14
	.long	22                      # 0x16
	.long	24                      # 0x18
	.long	26                      # 0x1a
	.long	26                      # 0x1a
	.long	24                      # 0x18
	.long	22                      # 0x16
	.long	20                      # 0x14
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	swhite_pawn, 576

	.type	sblack_pawn,@object     # @sblack_pawn
	.p2align	4
sblack_pawn:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	20                      # 0x14
	.long	22                      # 0x16
	.long	24                      # 0x18
	.long	26                      # 0x1a
	.long	26                      # 0x1a
	.long	24                      # 0x18
	.long	22                      # 0x16
	.long	20                      # 0x14
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	12                      # 0xc
	.long	14                      # 0xe
	.long	16                      # 0x10
	.long	16                      # 0x10
	.long	14                      # 0xe
	.long	12                      # 0xc
	.long	10                      # 0xa
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	6                       # 0x6
	.long	9                       # 0x9
	.long	14                      # 0xe
	.long	14                      # 0xe
	.long	9                       # 0x9
	.long	6                       # 0x6
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	4                       # 0x4
	.long	6                       # 0x6
	.long	12                      # 0xc
	.long	12                      # 0xc
	.long	6                       # 0x6
	.long	4                       # 0x4
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	3                       # 0x3
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	sblack_pawn, 576

	.type	swhite_king,@object     # @swhite_king
	.p2align	4
swhite_king:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	14                      # 0xe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	9                       # 0x9
	.long	14                      # 0xe
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967293              # 0xfffffffd
	.long	4294967291              # 0xfffffffb
	.long	4294967290              # 0xfffffffa
	.long	4294967290              # 0xfffffffa
	.long	4294967290              # 0xfffffffa
	.long	4294967290              # 0xfffffffa
	.long	4294967291              # 0xfffffffb
	.long	4294967293              # 0xfffffffd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	4294967291              # 0xfffffffb
	.long	4294967288              # 0xfffffff8
	.long	4294967288              # 0xfffffff8
	.long	4294967288              # 0xfffffff8
	.long	4294967288              # 0xfffffff8
	.long	4294967291              # 0xfffffffb
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967288              # 0xfffffff8
	.long	4294967288              # 0xfffffff8
	.long	4294967283              # 0xfffffff3
	.long	4294967283              # 0xfffffff3
	.long	4294967283              # 0xfffffff3
	.long	4294967283              # 0xfffffff3
	.long	4294967288              # 0xfffffff8
	.long	4294967288              # 0xfffffff8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967283              # 0xfffffff3
	.long	4294967283              # 0xfffffff3
	.long	4294967275              # 0xffffffeb
	.long	4294967275              # 0xffffffeb
	.long	4294967275              # 0xffffffeb
	.long	4294967275              # 0xffffffeb
	.long	4294967283              # 0xfffffff3
	.long	4294967283              # 0xfffffff3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967275              # 0xffffffeb
	.long	4294967275              # 0xffffffeb
	.long	4294967262              # 0xffffffde
	.long	4294967262              # 0xffffffde
	.long	4294967262              # 0xffffffde
	.long	4294967262              # 0xffffffde
	.long	4294967275              # 0xffffffeb
	.long	4294967275              # 0xffffffeb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967262              # 0xffffffde
	.long	4294967262              # 0xffffffde
	.long	4294967241              # 0xffffffc9
	.long	4294967241              # 0xffffffc9
	.long	4294967241              # 0xffffffc9
	.long	4294967241              # 0xffffffc9
	.long	4294967262              # 0xffffffde
	.long	4294967262              # 0xffffffde
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967241              # 0xffffffc9
	.long	4294967241              # 0xffffffc9
	.long	4294967207              # 0xffffffa7
	.long	4294967207              # 0xffffffa7
	.long	4294967207              # 0xffffffa7
	.long	4294967207              # 0xffffffa7
	.long	4294967241              # 0xffffffc9
	.long	4294967241              # 0xffffffc9
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	swhite_king, 576

	.type	send_king,@object       # @send_king
	.p2align	4
send_king:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	4294967293              # 0xfffffffd
	.long	4294967295              # 0xffffffff
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967295              # 0xffffffff
	.long	4294967293              # 0xfffffffd
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967293              # 0xfffffffd
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	4294967293              # 0xfffffffd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967295              # 0xffffffff
	.long	10                      # 0xa
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	10                      # 0xa
	.long	4294967295              # 0xffffffff
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	25                      # 0x19
	.long	50                      # 0x32
	.long	50                      # 0x32
	.long	25                      # 0x19
	.long	10                      # 0xa
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	10                      # 0xa
	.long	25                      # 0x19
	.long	50                      # 0x32
	.long	50                      # 0x32
	.long	25                      # 0x19
	.long	10                      # 0xa
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967295              # 0xffffffff
	.long	10                      # 0xa
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	10                      # 0xa
	.long	4294967295              # 0xffffffff
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967293              # 0xfffffffd
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	10                      # 0xa
	.long	4294967293              # 0xfffffffd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	4294967293              # 0xfffffffd
	.long	4294967295              # 0xffffffff
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967295              # 0xffffffff
	.long	4294967293              # 0xfffffffd
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	send_king, 576

	.type	sblack_king,@object     # @sblack_king
	.p2align	4
sblack_king:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967241              # 0xffffffc9
	.long	4294967241              # 0xffffffc9
	.long	4294967207              # 0xffffffa7
	.long	4294967207              # 0xffffffa7
	.long	4294967207              # 0xffffffa7
	.long	4294967207              # 0xffffffa7
	.long	4294967241              # 0xffffffc9
	.long	4294967241              # 0xffffffc9
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967262              # 0xffffffde
	.long	4294967262              # 0xffffffde
	.long	4294967241              # 0xffffffc9
	.long	4294967241              # 0xffffffc9
	.long	4294967241              # 0xffffffc9
	.long	4294967241              # 0xffffffc9
	.long	4294967262              # 0xffffffde
	.long	4294967262              # 0xffffffde
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967275              # 0xffffffeb
	.long	4294967275              # 0xffffffeb
	.long	4294967262              # 0xffffffde
	.long	4294967262              # 0xffffffde
	.long	4294967262              # 0xffffffde
	.long	4294967262              # 0xffffffde
	.long	4294967275              # 0xffffffeb
	.long	4294967275              # 0xffffffeb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967283              # 0xfffffff3
	.long	4294967283              # 0xfffffff3
	.long	4294967275              # 0xffffffeb
	.long	4294967275              # 0xffffffeb
	.long	4294967275              # 0xffffffeb
	.long	4294967275              # 0xffffffeb
	.long	4294967283              # 0xfffffff3
	.long	4294967283              # 0xfffffff3
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967288              # 0xfffffff8
	.long	4294967288              # 0xfffffff8
	.long	4294967283              # 0xfffffff3
	.long	4294967283              # 0xfffffff3
	.long	4294967283              # 0xfffffff3
	.long	4294967283              # 0xfffffff3
	.long	4294967288              # 0xfffffff8
	.long	4294967288              # 0xfffffff8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967291              # 0xfffffffb
	.long	4294967291              # 0xfffffffb
	.long	4294967288              # 0xfffffff8
	.long	4294967288              # 0xfffffff8
	.long	4294967288              # 0xfffffff8
	.long	4294967288              # 0xfffffff8
	.long	4294967291              # 0xfffffffb
	.long	4294967291              # 0xfffffffb
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967293              # 0xfffffffd
	.long	4294967291              # 0xfffffffb
	.long	4294967290              # 0xfffffffa
	.long	4294967290              # 0xfffffffa
	.long	4294967290              # 0xfffffffa
	.long	4294967290              # 0xfffffffa
	.long	4294967291              # 0xfffffffb
	.long	4294967293              # 0xfffffffd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	14                      # 0xe
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	9                       # 0x9
	.long	14                      # 0xe
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	sblack_king, 576

	.type	srev_rank,@object       # @srev_rank
	.section	.rodata,"a",@progbits
	.p2align	4
srev_rank:
	.long	0                       # 0x0
	.long	8                       # 0x8
	.long	7                       # 0x7
	.long	6                       # 0x6
	.long	5                       # 0x5
	.long	4                       # 0x4
	.long	3                       # 0x3
	.long	2                       # 0x2
	.long	1                       # 0x1
	.size	srev_rank, 36

	.type	hand_value,@object      # @hand_value
	.data
	.globl	hand_value
	.p2align	4
hand_value:
	.long	0                       # 0x0
	.long	100                     # 0x64
	.long	4294967196              # 0xffffff9c
	.long	210                     # 0xd2
	.long	4294967086              # 0xffffff2e
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	250                     # 0xfa
	.long	4294967046              # 0xffffff06
	.long	450                     # 0x1c2
	.long	4294966846              # 0xfffffe3e
	.long	230                     # 0xe6
	.long	4294967066              # 0xffffff1a
	.size	hand_value, 52

	.type	std_hand_value,@object  # @std_hand_value
	.globl	std_hand_value
	.p2align	4
std_hand_value:
	.long	0                       # 0x0
	.long	100                     # 0x64
	.long	4294967196              # 0xffffff9c
	.long	210                     # 0xd2
	.long	4294967086              # 0xffffff2e
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	250                     # 0xfa
	.long	4294967046              # 0xffffff06
	.long	450                     # 0x1c2
	.long	4294966846              # 0xfffffe3e
	.long	230                     # 0xe6
	.long	4294967066              # 0xffffff1a
	.size	std_hand_value, 52

	.type	must_go,@object         # @must_go
	.comm	must_go,4,4
	.type	partnerdead,@object     # @partnerdead
	.comm	partnerdead,4,4
	.type	piecedead,@object       # @piecedead
	.comm	piecedead,4,4
	.type	.L.str.27,@object       # @.str.27
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.27:
	.asciz	"tellics ptell Hello! I am Sjeng and hope you enjoy playing with me.\n"
	.size	.L.str.27, 69

	.type	.L.str.1.28,@object     # @.str.1.28
.L.str.1.28:
	.asciz	"tellics ptell For help on some commands that I understand, ptell me 'help'\n"
	.size	.L.str.1.28, 76

	.type	.L.str.2.29,@object     # @.str.2.29
.L.str.2.29:
	.asciz	"%s"
	.size	.L.str.2.29, 3

	.type	.L.str.3.30,@object     # @.str.3.30
.L.str.3.30:
	.asciz	"tellics set f5 bughouse\n"
	.size	.L.str.3.30, 25

	.type	.L.str.4.31,@object     # @.str.4.31
.L.str.4.31:
	.asciz	"tellics unseek\n"
	.size	.L.str.4.31, 16

	.type	.L.str.5.32,@object     # @.str.5.32
.L.str.5.32:
	.asciz	"tellics set f5 1=1\n"
	.size	.L.str.5.32, 20

	.type	.LHandlePtell.howmuch,@object # @HandlePtell.howmuch
	.section	.rodata,"a",@progbits
	.p2align	4
.LHandlePtell.howmuch:
	.asciz	"is...uh...what did you say?\n\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
	.size	.LHandlePtell.howmuch, 80

	.type	.L.str.6.33,@object     # @.str.6.33
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.6.33:
	.asciz	"help"
	.size	.L.str.6.33, 5

	.type	.L.str.7.34,@object     # @.str.7.34
.L.str.7.34:
	.asciz	"tellics ptell Commands that I understand are : sit, go, fast, slow, abort, flag, +/++/+++/-/--/---{p,n,b,r,q,d,h,trades}, x, dead, formula, help.\n"
	.size	.L.str.7.34, 147

	.type	.L.str.8.35,@object     # @.str.8.35
.L.str.8.35:
	.asciz	"sorry"
	.size	.L.str.8.35, 6

	.type	.L.str.9.36,@object     # @.str.9.36
.L.str.9.36:
	.asciz	"tellics ptell Sorry, but I'm not playing a bughouse game.\n"
	.size	.L.str.9.36, 59

	.type	.L.str.10.37,@object    # @.str.10.37
.L.str.10.37:
	.asciz	"sit"
	.size	.L.str.10.37, 4

	.type	.L.str.11.38,@object    # @.str.11.38
.L.str.11.38:
	.asciz	"tellics ptell Ok, I sit next move. Tell me when to go.\n"
	.size	.L.str.11.38, 56

	.type	.L.str.12.39,@object    # @.str.12.39
.L.str.12.39:
	.asciz	"go"
	.size	.L.str.12.39, 3

	.type	.L.str.13.40,@object    # @.str.13.40
.L.str.13.40:
	.asciz	"move"
	.size	.L.str.13.40, 5

	.type	.L.str.14.41,@object    # @.str.14.41
.L.str.14.41:
	.asciz	"tellics ptell Ok, I'm moving.\n"
	.size	.L.str.14.41, 31

	.type	.L.str.15.42,@object    # @.str.15.42
.L.str.15.42:
	.asciz	"fast"
	.size	.L.str.15.42, 5

	.type	.L.str.16.43,@object    # @.str.16.43
.L.str.16.43:
	.asciz	"time"
	.size	.L.str.16.43, 5

	.type	.L.str.17.44,@object    # @.str.17.44
.L.str.17.44:
	.asciz	"tellics ptell Ok, I'm going FAST!\n"
	.size	.L.str.17.44, 35

	.type	.L.str.18.45,@object    # @.str.18.45
.L.str.18.45:
	.asciz	"slow"
	.size	.L.str.18.45, 5

	.type	.L.str.19,@object       # @.str.19
.L.str.19:
	.asciz	"tellics ptell Ok, moving normally.\n"
	.size	.L.str.19, 36

	.type	.L.str.20,@object       # @.str.20
.L.str.20:
	.asciz	"abort"
	.size	.L.str.20, 6

	.type	.L.str.21,@object       # @.str.21
.L.str.21:
	.asciz	"tellics ptell Requesting abort...\n"
	.size	.L.str.21, 35

	.type	.L.str.22.46,@object    # @.str.22.46
.L.str.22.46:
	.asciz	"tellics abort\n"
	.size	.L.str.22.46, 15

	.type	.L.str.23,@object       # @.str.23
.L.str.23:
	.asciz	"flag"
	.size	.L.str.23, 5

	.type	.L.str.24,@object       # @.str.24
.L.str.24:
	.asciz	"tellics ptell Flagging...\n"
	.size	.L.str.24, 27

	.type	.L.str.25,@object       # @.str.25
.L.str.25:
	.asciz	"tellics flag\n"
	.size	.L.str.25, 14

	.type	.L.str.26,@object       # @.str.26
.L.str.26:
	.asciz	"+"
	.size	.L.str.26, 2

	.type	.L.str.27.47,@object    # @.str.27.47
.L.str.27.47:
	.asciz	"trade"
	.size	.L.str.27.47, 6

	.type	.L.str.28,@object       # @.str.28
.L.str.28:
	.asciz	"n"
	.size	.L.str.28, 2

	.type	.L.str.29,@object       # @.str.29
.L.str.29:
	.asciz	"b"
	.size	.L.str.29, 2

	.type	.L.str.30,@object       # @.str.30
.L.str.30:
	.asciz	"p"
	.size	.L.str.30, 2

	.type	.L.str.31,@object       # @.str.31
.L.str.31:
	.asciz	"r"
	.size	.L.str.31, 2

	.type	.L.str.32,@object       # @.str.32
.L.str.32:
	.asciz	"q"
	.size	.L.str.32, 2

	.type	.L.str.33,@object       # @.str.33
.L.str.33:
	.asciz	"d"
	.size	.L.str.33, 2

	.type	.L.str.34,@object       # @.str.34
.L.str.34:
	.asciz	"h"
	.size	.L.str.34, 2

	.type	.L.str.35,@object       # @.str.35
.L.str.35:
	.asciz	"tellics ptell Ok, trading is GOOD\n"
	.size	.L.str.35, 35

	.type	.L.str.36,@object       # @.str.36
.L.str.36:
	.asciz	"+++"
	.size	.L.str.36, 4

	.type	.L.str.37,@object       # @.str.37
.L.str.37:
	.asciz	"mates"
	.size	.L.str.37, 6

	.type	.L.str.38,@object       # @.str.38
.L.str.38:
	.asciz	"++"
	.size	.L.str.38, 3

	.type	.L.str.39,@object       # @.str.39
.L.str.39:
	.asciz	"is VERY good (ptell me 'x' to play normal again)"
	.size	.L.str.39, 49

	.type	.L.str.40,@object       # @.str.40
.L.str.40:
	.asciz	"is good (ptell me 'x' to play normal again)"
	.size	.L.str.40, 44

	.type	.L.str.41,@object       # @.str.41
.L.str.41:
	.asciz	"tellics ptell Ok, Knight %s\n"
	.size	.L.str.41, 29

	.type	.L.str.42,@object       # @.str.42
.L.str.42:
	.asciz	"tellics ptell Ok, Bishop %s\n"
	.size	.L.str.42, 29

	.type	.L.str.43,@object       # @.str.43
.L.str.43:
	.asciz	"tellics ptell Ok, Rook %s\n"
	.size	.L.str.43, 27

	.type	.L.str.44,@object       # @.str.44
.L.str.44:
	.asciz	"tellics ptell Ok, Queen %s\n"
	.size	.L.str.44, 28

	.type	.L.str.45,@object       # @.str.45
.L.str.45:
	.asciz	"tellics ptell Ok, Pawn %s\n"
	.size	.L.str.45, 27

	.type	.L.str.46,@object       # @.str.46
.L.str.46:
	.asciz	"tellics ptell Ok, Diagonal %s\n"
	.size	.L.str.46, 31

	.type	.L.str.47,@object       # @.str.47
.L.str.47:
	.asciz	"tellics ptell Ok, Heavy %s\n"
	.size	.L.str.47, 28

	.type	.L.str.48,@object       # @.str.48
.L.str.48:
	.asciz	"-"
	.size	.L.str.48, 2

	.type	.L.str.49,@object       # @.str.49
.L.str.49:
	.asciz	"tellics ptell Ok, trading is BAD\n"
	.size	.L.str.49, 34

	.type	.L.str.50,@object       # @.str.50
.L.str.50:
	.asciz	"---"
	.size	.L.str.50, 4

	.type	.L.str.51,@object       # @.str.51
.L.str.51:
	.asciz	"mates you (ptell me 'x' when it no longer mates you)"
	.size	.L.str.51, 53

	.type	.L.str.52,@object       # @.str.52
.L.str.52:
	.asciz	"--"
	.size	.L.str.52, 3

	.type	.L.str.53,@object       # @.str.53
.L.str.53:
	.asciz	"is VERY bad (ptell me 'x' when it is no longer bad)"
	.size	.L.str.53, 52

	.type	.L.str.54,@object       # @.str.54
.L.str.54:
	.asciz	"is bad (ptell me 'x' when it is no longer bad)"
	.size	.L.str.54, 47

	.type	.L.str.55,@object       # @.str.55
.L.str.55:
	.asciz	"x"
	.size	.L.str.55, 2

	.type	.L.str.56,@object       # @.str.56
.L.str.56:
	.asciz	"mate me anymore"
	.size	.L.str.56, 16

	.type	.L.str.57,@object       # @.str.57
.L.str.57:
	.asciz	"never"
	.size	.L.str.57, 6

	.type	.L.str.58,@object       # @.str.58
.L.str.58:
	.asciz	"mind"
	.size	.L.str.58, 5

	.type	.L.str.59,@object       # @.str.59
.L.str.59:
	.asciz	"="
	.size	.L.str.59, 2

	.type	.L.str.60,@object       # @.str.60
.L.str.60:
	.asciz	"ptell me"
	.size	.L.str.60, 9

	.type	.L.str.61,@object       # @.str.61
.L.str.61:
	.asciz	"tellics ptell Ok, reverting to STANDARD piece values!\n"
	.size	.L.str.61, 55

	.type	.L.str.62,@object       # @.str.62
.L.str.62:
	.asciz	"i'll have to sit...(dead)"
	.size	.L.str.62, 26

	.type	.L.str.63,@object       # @.str.63
.L.str.63:
	.asciz	"dead"
	.size	.L.str.63, 5

	.type	.L.str.64,@object       # @.str.64
.L.str.64:
	.asciz	"i'll have to sit...(piece)"
	.size	.L.str.64, 27

	.type	.L.str.65,@object       # @.str.65
.L.str.65:
	.asciz	"ok"
	.size	.L.str.65, 3

	.type	.L.str.66,@object       # @.str.66
.L.str.66:
	.asciz	"hi"
	.size	.L.str.66, 3

	.type	.L.str.67,@object       # @.str.67
.L.str.67:
	.asciz	"hello"
	.size	.L.str.67, 6

	.type	.L.str.68,@object       # @.str.68
.L.str.68:
	.asciz	"tellics ptell Greetings.\n"
	.size	.L.str.68, 26

	.type	.L.str.69,@object       # @.str.69
.L.str.69:
	.asciz	"formula"
	.size	.L.str.69, 8

	.type	.L.str.70,@object       # @.str.70
.L.str.70:
	.asciz	"tellics ptell Setting formula, if you are still interrupted, complain to my operator.\n"
	.size	.L.str.70, 87

	.type	.L.str.71,@object       # @.str.71
.L.str.71:
	.asciz	"tellics ptell Sorry, but I don't understand that command.\n"
	.size	.L.str.71, 59

	.type	CheckBadFlow.pawnmated,@object # @CheckBadFlow.pawnmated
	.local	CheckBadFlow.pawnmated
	.comm	CheckBadFlow.pawnmated,4,4
	.type	CheckBadFlow.knightmated,@object # @CheckBadFlow.knightmated
	.local	CheckBadFlow.knightmated
	.comm	CheckBadFlow.knightmated,4,4
	.type	CheckBadFlow.bishopmated,@object # @CheckBadFlow.bishopmated
	.local	CheckBadFlow.bishopmated
	.comm	CheckBadFlow.bishopmated,4,4
	.type	CheckBadFlow.rookmated,@object # @CheckBadFlow.rookmated
	.local	CheckBadFlow.rookmated
	.comm	CheckBadFlow.rookmated,4,4
	.type	CheckBadFlow.queenmated,@object # @CheckBadFlow.queenmated
	.local	CheckBadFlow.queenmated
	.comm	CheckBadFlow.queenmated,4,4
	.type	.L.str.72,@object       # @.str.72
.L.str.72:
	.asciz	"tellics ptell p doesn't mate me anymore\n"
	.size	.L.str.72, 41

	.type	.L.str.73,@object       # @.str.73
.L.str.73:
	.asciz	"tellics ptell n doesn't mate me anymore\n"
	.size	.L.str.73, 41

	.type	.L.str.74,@object       # @.str.74
.L.str.74:
	.asciz	"tellics ptell b doesn't mate me anymore\n"
	.size	.L.str.74, 41

	.type	.L.str.75,@object       # @.str.75
.L.str.75:
	.asciz	"tellics ptell r doesn't mate me anymore\n"
	.size	.L.str.75, 41

	.type	.L.str.76,@object       # @.str.76
.L.str.76:
	.asciz	"tellics ptell q doesn't mate me anymore\n"
	.size	.L.str.76, 41

	.type	.L.str.77,@object       # @.str.77
.L.str.77:
	.asciz	"tellics ptell ---p\n"
	.size	.L.str.77, 20

	.type	.L.str.78,@object       # @.str.78
.L.str.78:
	.asciz	"tellics ptell ---n\n"
	.size	.L.str.78, 20

	.type	.L.str.79,@object       # @.str.79
.L.str.79:
	.asciz	"tellics ptell ---b\n"
	.size	.L.str.79, 20

	.type	.L.str.80,@object       # @.str.80
.L.str.80:
	.asciz	"tellics ptell ---r\n"
	.size	.L.str.80, 20

	.type	.L.str.81,@object       # @.str.81
.L.str.81:
	.asciz	"tellics ptell ---q\n"
	.size	.L.str.81, 20

	.type	.L.str.82,@object       # @.str.82
.L.str.82:
	.asciz	"tellics ptell x\n"
	.size	.L.str.82, 17

	.type	.L.str.83,@object       # @.str.83
.L.str.83:
	.asciz	"tellics ptell go\n"
	.size	.L.str.83, 18

	.type	bufftop,@object         # @bufftop
	.bss
	.globl	bufftop
	.p2align	2
bufftop:
	.long	0                       # 0x0
	.size	bufftop, 4

	.type	membuff,@object         # @membuff
	.comm	membuff,8,8
	.type	maxply,@object          # @maxply
	.comm	maxply,4,4
	.type	forwards,@object        # @forwards
	.comm	forwards,4,4
	.type	nodecount,@object       # @nodecount
	.comm	nodecount,4,4
	.type	frees,@object           # @frees
	.comm	frees,4,4
	.type	nodecount2,@object      # @nodecount2
	.comm	nodecount2,4,4
	.type	pn2,@object             # @pn2
	.comm	pn2,4,4
	.type	alllosers,@object       # @alllosers
	.comm	alllosers,4,4
	.type	rootlosers,@object      # @rootlosers
	.comm	rootlosers,1200,16
	.type	pn_move,@object         # @pn_move
	.comm	pn_move,24,4
	.type	iters,@object           # @iters
	.comm	iters,4,4
	.type	pn_time,@object         # @pn_time
	.comm	pn_time,4,4
	.type	forcedwin,@object       # @forcedwin
	.comm	forcedwin,4,4
	.type	kibitzed,@object        # @kibitzed
	.comm	kibitzed,4,4
	.type	pn_saver,@object        # @pn_saver
	.comm	pn_saver,24,4
	.type	.L.str.84,@object       # @.str.84
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.84:
	.asciz	"tellics kibitz Forced win!\n"
	.size	.L.str.84, 28

	.type	.L.str.1.85,@object     # @.str.1.85
.L.str.1.85:
	.asciz	"tellics kibitz Forced win! (alt)\n"
	.size	.L.str.1.85, 34

	.type	.L.str.2.86,@object     # @.str.2.86
.L.str.2.86:
	.asciz	"tellics whisper proof %d, disproof %d, %d losers, highest depth %d, primary %d, secondary %d\n"
	.size	.L.str.2.86, 94

	.type	.L.str.3.87,@object     # @.str.3.87
.L.str.3.87:
	.asciz	"tellics whisper Forced reply\n"
	.size	.L.str.3.87, 30

	.type	.L.str.4.88,@object     # @.str.4.88
.L.str.4.88:
	.asciz	"P: %d D: %d N: %d S: %d Mem: %2.2fM Iters: %d MaxDepth: %d\n"
	.size	.L.str.4.88, 60

	.type	.L.str.5.89,@object     # @.str.5.89
.L.str.5.89:
	.asciz	"tellics whisper proof %d, disproof %d, %d nodes, %d forwards, %d iters, highest depth %d\n"
	.size	.L.str.5.89, 90

	.type	.L.str.6.90,@object     # @.str.6.90
.L.str.6.90:
	.asciz	"Time : %f\n"
	.size	.L.str.6.90, 11

	.type	.L.str.7.91,@object     # @.str.7.91
.L.str.7.91:
	.asciz	"This position is WON.\n"
	.size	.L.str.7.91, 23

	.type	.L.str.8.92,@object     # @.str.8.92
.L.str.8.92:
	.asciz	"PV: "
	.size	.L.str.8.92, 5

	.type	.L.str.9.93,@object     # @.str.9.93
.L.str.9.93:
	.asciz	"%s "
	.size	.L.str.9.93, 4

	.type	.L.str.10.94,@object    # @.str.10.94
.L.str.10.94:
	.asciz	" "
	.size	.L.str.10.94, 2

	.type	.L.str.11.95,@object    # @.str.11.95
.L.str.11.95:
	.asciz	"\ntellics kibitz Forced win in %d moves.\n"
	.size	.L.str.11.95, 41

	.type	.L.str.12.96,@object    # @.str.12.96
.L.str.12.96:
	.asciz	"\n1-0 {White mates}\n"
	.size	.L.str.12.96, 20

	.type	.L.str.13.97,@object    # @.str.13.97
.L.str.13.97:
	.asciz	"\n0-1 {Black mates}\n"
	.size	.L.str.13.97, 20

	.type	.L.str.14.98,@object    # @.str.14.98
.L.str.14.98:
	.asciz	"\n"
	.size	.L.str.14.98, 2

	.type	.L.str.15.99,@object    # @.str.15.99
.L.str.15.99:
	.asciz	"This position is LOST.\n"
	.size	.L.str.15.99, 24

	.type	.L.str.16.100,@object   # @.str.16.100
.L.str.16.100:
	.asciz	"This position is UNKNOWN.\n"
	.size	.L.str.16.100, 27

	.type	.L.str.17.101,@object   # @.str.17.101
.L.str.17.101:
	.asciz	"P: %d D: %d N: %d S: %d Mem: %2.2fM Iters: %d\n"
	.size	.L.str.17.101, 47

	.type	TTSize,@object          # @TTSize
	.comm	TTSize,4,4
	.type	ECacheSize,@object      # @ECacheSize
	.comm	ECacheSize,4,4
	.type	PBSize,@object          # @PBSize
	.comm	PBSize,4,4
	.type	cfg_devscale,@object    # @cfg_devscale
	.comm	cfg_devscale,4,4
	.type	cfg_scalefac,@object    # @cfg_scalefac
	.comm	cfg_scalefac,4,4
	.type	cfg_razordrop,@object   # @cfg_razordrop
	.comm	cfg_razordrop,4,4
	.type	cfg_cutdrop,@object     # @cfg_cutdrop
	.comm	cfg_cutdrop,4,4
	.type	cfg_futprune,@object    # @cfg_futprune
	.comm	cfg_futprune,4,4
	.type	cfg_smarteval,@object   # @cfg_smarteval
	.comm	cfg_smarteval,4,4
	.type	cfg_attackeval,@object  # @cfg_attackeval
	.comm	cfg_attackeval,4,4
	.type	cfg_onerep,@object      # @cfg_onerep
	.comm	cfg_onerep,4,4
	.type	cfg_recap,@object       # @cfg_recap
	.comm	cfg_recap,4,4
	.type	havercfile,@object      # @havercfile
	.comm	havercfile,4,4
	.type	rcfile,@object          # @rcfile
	.comm	rcfile,8,8
	.type	line,@object            # @line
	.comm	line,256,16
	.type	cfg_booklearn,@object   # @cfg_booklearn
	.comm	cfg_booklearn,4,4
	.type	cfg_ksafety,@object     # @cfg_ksafety
	.comm	cfg_ksafety,540,16
	.type	cfg_tropism,@object     # @cfg_tropism
	.comm	cfg_tropism,140,16
	.type	.L.str.112,@object      # @.str.112
.L.str.112:
	.asciz	"%u"
	.size	.L.str.112, 3

	.type	rootnodecount,@object   # @rootnodecount
	.comm	rootnodecount,2048,16
	.type	failed,@object          # @failed
	.comm	failed,4,4
	.type	extendedtime,@object    # @extendedtime
	.comm	extendedtime,4,4
	.type	checks,@object          # @checks
	.comm	checks,1200,16
	.type	singular,@object        # @singular
	.comm	singular,1200,16
	.type	recaps,@object          # @recaps
	.comm	recaps,1200,16
	.type	ext_recap,@object       # @ext_recap
	.comm	ext_recap,4,4
	.type	ext_onerep,@object      # @ext_onerep
	.comm	ext_onerep,4,4
	.type	razor_drop,@object      # @razor_drop
	.comm	razor_drop,4,4
	.type	drop_cuts,@object       # @drop_cuts
	.comm	drop_cuts,4,4
	.type	razor_material,@object  # @razor_material
	.comm	razor_material,4,4
	.type	FHF,@object             # @FHF
	.comm	FHF,4,4
	.type	FH,@object              # @FH
	.comm	FH,4,4
	.type	legals,@object          # @legals
	.comm	legals,4,4
	.type	movetotal,@object       # @movetotal
	.comm	movetotal,4,4
	.type	moveleft,@object        # @moveleft
	.comm	moveleft,4,4
	.type	searching_move,@object  # @searching_move
	.comm	searching_move,20,16
	.type	bestmovenum,@object     # @bestmovenum
	.comm	bestmovenum,4,4
	.type	true_i_depth,@object    # @true_i_depth
	.comm	true_i_depth,1,1
	.type	postpv,@object          # @postpv
	.comm	postpv,256,16
	.type	s_threat,@object        # @s_threat
	.comm	s_threat,4,4
	.type	tradefreely,@object     # @tradefreely
	.comm	tradefreely,4,4
	.type	ugly_ep_hack,@object    # @ugly_ep_hack
	.comm	ugly_ep_hack,4,4
	.type	.L.str.123,@object      # @.str.123
.L.str.123:
	.asciz	"Extended from %d to %d, time left %d\n"
	.size	.L.str.123, 38

	.type	search.rc_index,@object # @search.rc_index
	.section	.rodata,"a",@progbits
	.p2align	4
search.rc_index:
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	3                       # 0x3
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	4                       # 0x4
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	0                       # 0x0
	.size	search.rc_index, 56

	.type	.L.str.1.126,@object    # @.str.1.126
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1.126:
	.asciz	"Opening phase.\n"
	.size	.L.str.1.126, 16

	.type	.L.str.2.127,@object    # @.str.2.127
.L.str.2.127:
	.asciz	"Middlegame phase.\n"
	.size	.L.str.2.127, 19

	.type	.L.str.3.128,@object    # @.str.3.128
.L.str.3.128:
	.asciz	"Endgame phase.\n"
	.size	.L.str.3.128, 16

	.type	.L.str.4.129,@object    # @.str.4.129
.L.str.4.129:
	.asciz	"Time for move : %d\n"
	.size	.L.str.4.129, 20

	.type	.L.str.5.130,@object    # @.str.5.130
.L.str.5.130:
	.asciz	"tellics whisper %d restart(s), ended up with %s\n"
	.size	.L.str.5.130, 49

	.type	.L.str.6.131,@object    # @.str.6.131
.L.str.6.131:
	.asciz	"tellics kibitz Mate in %d\n"
	.size	.L.str.6.131, 27

	.type	.L.str.7.132,@object    # @.str.7.132
.L.str.7.132:
	.asciz	"tellics ptell Mate in %d, give him no more pieces.\n"
	.size	.L.str.7.132, 52

	.type	.L.str.8.133,@object    # @.str.8.133
.L.str.8.133:
	.asciz	"tellics ptell You can trade freely.\n"
	.size	.L.str.8.133, 37

	.type	.L.str.9.134,@object    # @.str.9.134
.L.str.9.134:
	.asciz	"tellics ptell ---trades\n"
	.size	.L.str.9.134, 25

	.type	.L.str.10.135,@object   # @.str.10.135
.L.str.10.135:
	.asciz	"tellics kibitz Both players dead...resigning...\n"
	.size	.L.str.10.135, 49

	.type	.L.str.11.136,@object   # @.str.11.136
.L.str.11.136:
	.asciz	"tellics resign\n"
	.size	.L.str.11.136, 16

	.type	.L.str.12.137,@object   # @.str.12.137
.L.str.12.137:
	.asciz	"tellics ptell I am forcedly mated (dead). Tell me 'go' to start moving into it.\n"
	.size	.L.str.12.137, 81

	.type	.L.str.13.138,@object   # @.str.13.138
.L.str.13.138:
	.asciz	"tellics ptell I'll have to sit...(lose piece that mates you)\n"
	.size	.L.str.13.138, 62

	.type	.L.str.14.139,@object   # @.str.14.139
.L.str.14.139:
	.asciz	"\n"
	.size	.L.str.14.139, 2

	.type	see_num_attackers,@object # @see_num_attackers
	.comm	see_num_attackers,8,4
	.type	see_attackers,@object   # @see_attackers
	.comm	see_attackers,256,16
	.type	setup_attackers.rook_o,@object # @setup_attackers.rook_o
	.section	.rodata,"a",@progbits
	.p2align	4
setup_attackers.rook_o:
	.long	12                      # 0xc
	.long	4294967284              # 0xfffffff4
	.long	1                       # 0x1
	.long	4294967295              # 0xffffffff
	.size	setup_attackers.rook_o, 16

	.type	setup_attackers.bishop_o,@object # @setup_attackers.bishop_o
	.p2align	4
setup_attackers.bishop_o:
	.long	11                      # 0xb
	.long	4294967285              # 0xfffffff5
	.long	13                      # 0xd
	.long	4294967283              # 0xfffffff3
	.size	setup_attackers.bishop_o, 16

	.type	setup_attackers.knight_o,@object # @setup_attackers.knight_o
	.p2align	4
setup_attackers.knight_o:
	.long	10                      # 0xa
	.long	4294967286              # 0xfffffff6
	.long	14                      # 0xe
	.long	4294967282              # 0xfffffff2
	.long	23                      # 0x17
	.long	4294967273              # 0xffffffe9
	.long	25                      # 0x19
	.long	4294967271              # 0xffffffe7
	.size	setup_attackers.knight_o, 32

	.type	scentral,@object        # @scentral
	.data
	.p2align	4
scentral:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	2                       # 0x2
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	2                       # 0x2
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	7                       # 0x7
	.long	15                      # 0xf
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	15                      # 0xf
	.long	7                       # 0x7
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	7                       # 0x7
	.long	15                      # 0xf
	.long	25                      # 0x19
	.long	25                      # 0x19
	.long	15                      # 0xf
	.long	7                       # 0x7
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	2                       # 0x2
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	15                      # 0xf
	.long	2                       # 0x2
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	3                       # 0x3
	.long	5                       # 0x5
	.long	5                       # 0x5
	.long	3                       # 0x3
	.long	0                       # 0x0
	.long	4294967286              # 0xfffffff6
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	4294967276              # 0xffffffec
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967286              # 0xfffffff6
	.long	4294967276              # 0xffffffec
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	scentral, 576

	.type	king_o,@object          # @king_o
	.section	.rodata,"a",@progbits
	.p2align	4
king_o:
	.long	13                      # 0xd
	.long	12                      # 0xc
	.long	11                      # 0xb
	.long	1                       # 0x1
	.long	4294967295              # 0xffffffff
	.long	4294967285              # 0xfffffff5
	.long	4294967284              # 0xfffffff4
	.long	4294967283              # 0xfffffff3
	.size	king_o, 32

	.type	knight_o,@object        # @knight_o
	.p2align	4
knight_o:
	.long	10                      # 0xa
	.long	4294967286              # 0xfffffff6
	.long	14                      # 0xe
	.long	4294967282              # 0xfffffff2
	.long	23                      # 0x17
	.long	4294967273              # 0xffffffe9
	.long	25                      # 0x19
	.long	4294967271              # 0xffffffe7
	.size	knight_o, 32

	.type	divider,@object         # @divider
	.data
	.globl	divider
	.p2align	4
divider:
	.asciz	"-------------------------------------------------"
	.size	divider, 50

	.type	dummy,@object           # @dummy
	.bss
	.globl	dummy
	.p2align	2
dummy:
	.zero	24
	.size	dummy, 24

	.type	Variant,@object         # @Variant
	.comm	Variant,4,4
	.type	bookidx,@object         # @bookidx
	.comm	bookidx,4,4
	.type	ply,@object             # @ply
	.comm	ply,4,4
	.type	moves_to_tc,@object     # @moves_to_tc
	.comm	moves_to_tc,4,4
	.type	min_per_game,@object    # @min_per_game
	.comm	min_per_game,4,4
	.type	time_left,@object       # @time_left
	.comm	time_left,4,4
	.type	opp_rating,@object      # @opp_rating
	.comm	opp_rating,4,4
	.type	my_rating,@object       # @my_rating
	.comm	my_rating,4,4
	.type	maxdepth,@object        # @maxdepth
	.comm	maxdepth,4,4
	.type	xb_mode,@object         # @xb_mode
	.comm	xb_mode,4,4
	.type	comp_color,@object      # @comp_color
	.comm	comp_color,4,4
	.type	is_pondering,@object    # @is_pondering
	.comm	is_pondering,4,4
	.type	allow_pondering,@object # @allow_pondering
	.comm	allow_pondering,4,4
	.type	is_analyzing,@object    # @is_analyzing
	.comm	is_analyzing,4,4
	.type	have_partner,@object    # @have_partner
	.comm	have_partner,4,4
	.type	must_sit,@object        # @must_sit
	.comm	must_sit,4,4
	.type	go_fast,@object         # @go_fast
	.comm	go_fast,4,4
	.type	fixed_time,@object      # @fixed_time
	.comm	fixed_time,4,4
	.type	phase,@object           # @phase
	.comm	phase,4,4
	.type	root_to_move,@object    # @root_to_move
	.comm	root_to_move,4,4
	.type	move_number,@object     # @move_number
	.comm	move_number,4,4
	.type	hash_history,@object    # @hash_history
	.comm	hash_history,2400,16
	.type	white_to_move,@object   # @white_to_move
	.comm	white_to_move,4,4
	.type	result,@object          # @result
	.comm	result,4,4
	.type	path_x,@object          # @path_x
	.comm	path_x,4800,16
	.type	fifty,@object           # @fifty
	.comm	fifty,4,4
	.type	book_ply,@object        # @book_ply
	.comm	book_ply,4,4
	.type	opening_history,@object # @opening_history
	.comm	opening_history,256,16
	.type	nodes,@object           # @nodes
	.comm	nodes,4,4
	.type	qnodes,@object          # @qnodes
	.comm	qnodes,4,4
	.type	NTries,@object          # @NTries
	.comm	NTries,4,4
	.type	NCuts,@object           # @NCuts
	.comm	NCuts,4,4
	.type	TExt,@object            # @TExt
	.comm	TExt,4,4
	.type	ext_check,@object       # @ext_check
	.comm	ext_check,4,4
	.type	time_for_move,@object   # @time_for_move
	.comm	time_for_move,4,4
	.type	raw_nodes,@object       # @raw_nodes
	.comm	raw_nodes,4,4
	.type	setcode,@object         # @setcode
	.comm	setcode,30,16
	.type	post,@object            # @post
	.comm	post,4,4
	.type	opp_time,@object        # @opp_time
	.comm	opp_time,4,4
	.type	sec_per_game,@object    # @sec_per_game
	.comm	sec_per_game,4,4
	.type	inc,@object             # @inc
	.comm	inc,4,4
	.type	time_cushion,@object    # @time_cushion
	.comm	time_cushion,4,4
	.type	Giveaway,@object        # @Giveaway
	.comm	Giveaway,4,4
	.type	wking_loc,@object       # @wking_loc
	.comm	wking_loc,4,4
	.type	white_castled,@object   # @white_castled
	.comm	white_castled,4,4
	.type	bking_loc,@object       # @bking_loc
	.comm	bking_loc,4,4
	.type	black_castled,@object   # @black_castled
	.comm	black_castled,4,4
	.type	ep_square,@object       # @ep_square
	.comm	ep_square,4,4
	.type	start_time,@object      # @start_time
	.comm	start_time,8,8
	.type	board,@object           # @board
	.comm	board,576,16
	.type	moved,@object           # @moved
	.comm	moved,576,16
	.type	pv_length,@object       # @pv_length
	.comm	pv_length,1200,16
	.type	pieces,@object          # @pieces
	.comm	pieces,248,16
	.type	squares,@object         # @squares
	.comm	squares,576,16
	.type	num_pieces,@object      # @num_pieces
	.comm	num_pieces,4,4
	.type	i_depth,@object         # @i_depth
	.comm	i_depth,4,4
	.type	piece_count,@object     # @piece_count
	.comm	piece_count,4,4
	.type	killer_scores,@object   # @killer_scores
	.comm	killer_scores,1200,16
	.type	killer_scores2,@object  # @killer_scores2
	.comm	killer_scores2,1200,16
	.type	killer_scores3,@object  # @killer_scores3
	.comm	killer_scores3,1200,16
	.type	cur_score,@object       # @cur_score
	.comm	cur_score,4,4
	.type	history_h,@object       # @history_h
	.comm	history_h,82944,16
	.type	captures,@object        # @captures
	.comm	captures,4,4
	.type	searching_pv,@object    # @searching_pv
	.comm	searching_pv,4,4
	.type	time_exit,@object       # @time_exit
	.comm	time_exit,4,4
	.type	time_failure,@object    # @time_failure
	.comm	time_failure,4,4
	.type	pv,@object              # @pv
	.comm	pv,2160000,16
	.type	killer1,@object         # @killer1
	.comm	killer1,7200,16
	.type	killer2,@object         # @killer2
	.comm	killer2,7200,16
	.type	killer3,@object         # @killer3
	.comm	killer3,7200,16
	.type	path,@object            # @path
	.comm	path,7200,16
	.type	is_promoted,@object     # @is_promoted
	.comm	is_promoted,248,16
	.type	PVS,@object             # @PVS
	.comm	PVS,4,4
	.type	FULL,@object            # @FULL
	.comm	FULL,4,4
	.type	PVSF,@object            # @PVSF
	.comm	PVSF,4,4
	.type	my_partner,@object      # @my_partner
	.comm	my_partner,256,16
	.type	use_book,@object        # @use_book
	.comm	use_book,4,4
	.type	.L.str.280,@object      # @.str.280
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.280:
	.asciz	"SPEC Workload\n"
	.size	.L.str.280, 15

	.type	.L.str.1.281,@object    # @.str.1.281
.L.str.1.281:
	.asciz	"\nNodes: %i (%0.2f%% qnodes)\n"
	.size	.L.str.1.281, 29

	.type	.L.str.2.282,@object    # @.str.2.282
.L.str.2.282:
	.asciz	"ECacheProbes : %u   ECacheHits : %u   HitRate : %f%%\n"
	.size	.L.str.2.282, 54

	.type	.L.str.3.283,@object    # @.str.3.283
.L.str.3.283:
	.asciz	"TTStores : %u TTProbes : %u   TTHits : %u   HitRate : %f%%\n"
	.size	.L.str.3.283, 60

	.type	.L.str.4.284,@object    # @.str.4.284
.L.str.4.284:
	.asciz	"NTries : %u  NCuts : %u  CutRate : %f%%  TExt: %u\n"
	.size	.L.str.4.284, 51

	.type	.L.str.5.285,@object    # @.str.5.285
.L.str.5.285:
	.asciz	"Check extensions: %u  Razor drops : %u  Razor Material : %u\n"
	.size	.L.str.5.285, 61

	.type	.L.str.6.286,@object    # @.str.6.286
.L.str.6.286:
	.asciz	"Move ordering : %f%%\n"
	.size	.L.str.6.286, 22

	.type	.L.str.7.287,@object    # @.str.7.287
.L.str.7.287:
	.asciz	"Material score: %d   Eval : %d  MaxPosDiff: %d  White hand: %d  Black hand : %d\n"
	.size	.L.str.7.287, 81

	.type	.L.str.8.288,@object    # @.str.8.288
.L.str.8.288:
	.asciz	"Hash : %X  HoldHash : %X\n"
	.size	.L.str.8.288, 26

	.type	.L.str.9.289,@object    # @.str.9.289
.L.str.9.289:
	.asciz	"move %s\n"
	.size	.L.str.9.289, 9

	.type	.L.str.10.290,@object   # @.str.10.290
.L.str.10.290:
	.asciz	"\n%s\n"
	.size	.L.str.10.290, 5

	.type	.L.str.11.291,@object   # @.str.11.291
.L.str.11.291:
	.asciz	"0-1 {Black Mates}\n"
	.size	.L.str.11.291, 19

	.type	.L.str.12.292,@object   # @.str.12.292
.L.str.12.292:
	.asciz	"1-0 {White Mates}\n"
	.size	.L.str.12.292, 19

	.type	.L.str.13.293,@object   # @.str.13.293
.L.str.13.293:
	.asciz	"1/2-1/2 {Fifty move rule}\n"
	.size	.L.str.13.293, 27

	.type	.L.str.14.294,@object   # @.str.14.294
.L.str.14.294:
	.asciz	"1/2-1/2 {3 fold repetition}\n"
	.size	.L.str.14.294, 29

	.type	.L.str.15.295,@object   # @.str.15.295
.L.str.15.295:
	.asciz	"1/2-1/2 {Draw}\n"
	.size	.L.str.15.295, 16

	.type	.L.str.16.296,@object   # @.str.16.296
.L.str.16.296:
	.asciz	"\n"
	.size	.L.str.16.296, 2

	.type	.L.str.17.297,@object   # @.str.17.297
.L.str.17.297:
	.asciz	"Sjeng: "
	.size	.L.str.17.297, 8

	.type	.L.str.18.298,@object   # @.str.18.298
.L.str.18.298:
	.asciz	"Illegal move: %s\n"
	.size	.L.str.18.298, 18

	.type	.L.str.19.299,@object   # @.str.19.299
.L.str.19.299:
	.asciz	"setboard"
	.size	.L.str.19.299, 9

	.type	.L.str.20.300,@object   # @.str.20.300
.L.str.20.300:
	.asciz	"quit"
	.size	.L.str.20.300, 5

	.type	.L.str.21.301,@object   # @.str.21.301
.L.str.21.301:
	.asciz	"exit"
	.size	.L.str.21.301, 5

	.type	.L.str.22.302,@object   # @.str.22.302
.L.str.22.302:
	.asciz	"diagram"
	.size	.L.str.22.302, 8

	.type	.L.str.23.303,@object   # @.str.23.303
.L.str.23.303:
	.asciz	"d"
	.size	.L.str.23.303, 2

	.type	.L.str.24.304,@object   # @.str.24.304
.L.str.24.304:
	.asciz	"perft"
	.size	.L.str.24.304, 6

	.type	.L.str.25.305,@object   # @.str.25.305
.L.str.25.305:
	.asciz	"%d"
	.size	.L.str.25.305, 3

	.type	.L.str.26.306,@object   # @.str.26.306
.L.str.26.306:
	.asciz	"Raw nodes for depth %d: %i\n"
	.size	.L.str.26.306, 28

	.type	.L.str.27.307,@object   # @.str.27.307
.L.str.27.307:
	.asciz	"Time : %.2f\n"
	.size	.L.str.27.307, 13

	.type	.L.str.28.308,@object   # @.str.28.308
.L.str.28.308:
	.asciz	"new"
	.size	.L.str.28.308, 4

	.type	.L.str.29.309,@object   # @.str.29.309
.L.str.29.309:
	.asciz	"tellics set 1 Sjeng SPEC 1.0 (SPEC/%s)\n"
	.size	.L.str.29.309, 40

	.type	.L.str.30.310,@object   # @.str.30.310
.L.str.30.310:
	.asciz	"xboard"
	.size	.L.str.30.310, 7

	.type	.L.str.31.311,@object   # @.str.31.311
.L.str.31.311:
	.asciz	"tellics set f5 1=1\n"
	.size	.L.str.31.311, 20

	.type	.L.str.32.312,@object   # @.str.32.312
.L.str.32.312:
	.asciz	"nodes"
	.size	.L.str.32.312, 6

	.type	.L.str.33.313,@object   # @.str.33.313
.L.str.33.313:
	.asciz	"Number of nodes: %i (%0.2f%% qnodes)\n"
	.size	.L.str.33.313, 38

	.type	.L.str.34.314,@object   # @.str.34.314
.L.str.34.314:
	.asciz	"post"
	.size	.L.str.34.314, 5

	.type	.L.str.35.315,@object   # @.str.35.315
.L.str.35.315:
	.asciz	"nopost"
	.size	.L.str.35.315, 7

	.type	.L.str.36.316,@object   # @.str.36.316
.L.str.36.316:
	.asciz	"random"
	.size	.L.str.36.316, 7

	.type	.L.str.37.317,@object   # @.str.37.317
.L.str.37.317:
	.asciz	"hard"
	.size	.L.str.37.317, 5

	.type	.L.str.38.318,@object   # @.str.38.318
.L.str.38.318:
	.asciz	"easy"
	.size	.L.str.38.318, 5

	.type	.L.str.39.319,@object   # @.str.39.319
.L.str.39.319:
	.asciz	"?"
	.size	.L.str.39.319, 2

	.type	.L.str.40.320,@object   # @.str.40.320
.L.str.40.320:
	.asciz	"white"
	.size	.L.str.40.320, 6

	.type	.L.str.41.321,@object   # @.str.41.321
.L.str.41.321:
	.asciz	"black"
	.size	.L.str.41.321, 6

	.type	.L.str.42.322,@object   # @.str.42.322
.L.str.42.322:
	.asciz	"force"
	.size	.L.str.42.322, 6

	.type	.L.str.43.323,@object   # @.str.43.323
.L.str.43.323:
	.asciz	"eval"
	.size	.L.str.43.323, 5

	.type	.L.str.44.324,@object   # @.str.44.324
.L.str.44.324:
	.asciz	"Eval: %d\n"
	.size	.L.str.44.324, 10

	.type	.L.str.45.325,@object   # @.str.45.325
.L.str.45.325:
	.asciz	"go"
	.size	.L.str.45.325, 3

	.type	.L.str.46.326,@object   # @.str.46.326
.L.str.46.326:
	.asciz	"time"
	.size	.L.str.46.326, 5

	.type	.L.str.47.327,@object   # @.str.47.327
.L.str.47.327:
	.asciz	"%i"
	.size	.L.str.47.327, 3

	.type	.L.str.48.328,@object   # @.str.48.328
.L.str.48.328:
	.asciz	"otim"
	.size	.L.str.48.328, 5

	.type	.L.str.49.329,@object   # @.str.49.329
.L.str.49.329:
	.asciz	"level"
	.size	.L.str.49.329, 6

	.type	.L.str.50.330,@object   # @.str.50.330
.L.str.50.330:
	.asciz	":"
	.size	.L.str.50.330, 2

	.type	.L.str.51.331,@object   # @.str.51.331
.L.str.51.331:
	.asciz	"%i %i:%i %i"
	.size	.L.str.51.331, 12

	.type	.L.str.52.332,@object   # @.str.52.332
.L.str.52.332:
	.asciz	"%i %i %i"
	.size	.L.str.52.332, 9

	.type	.L.str.53.333,@object   # @.str.53.333
.L.str.53.333:
	.asciz	"rating"
	.size	.L.str.53.333, 7

	.type	.L.str.54.334,@object   # @.str.54.334
.L.str.54.334:
	.asciz	"%i %i"
	.size	.L.str.54.334, 6

	.type	.L.str.55.335,@object   # @.str.55.335
.L.str.55.335:
	.asciz	"holding"
	.size	.L.str.55.335, 8

	.type	.L.str.56.336,@object   # @.str.56.336
.L.str.56.336:
	.asciz	"variant"
	.size	.L.str.56.336, 8

	.type	.L.str.57.337,@object   # @.str.57.337
.L.str.57.337:
	.asciz	"normal"
	.size	.L.str.57.337, 7

	.type	.L.str.58.338,@object   # @.str.58.338
.L.str.58.338:
	.asciz	"crazyhouse"
	.size	.L.str.58.338, 11

	.type	.L.str.59.339,@object   # @.str.59.339
.L.str.59.339:
	.asciz	"bughouse"
	.size	.L.str.59.339, 9

	.type	.L.str.60.340,@object   # @.str.60.340
.L.str.60.340:
	.asciz	"suicide"
	.size	.L.str.60.340, 8

	.type	.L.str.61.341,@object   # @.str.61.341
.L.str.61.341:
	.asciz	"giveaway"
	.size	.L.str.61.341, 9

	.type	.L.str.62.342,@object   # @.str.62.342
.L.str.62.342:
	.asciz	"losers"
	.size	.L.str.62.342, 7

	.type	.L.str.63.343,@object   # @.str.63.343
.L.str.63.343:
	.asciz	"analyze"
	.size	.L.str.63.343, 8

	.type	.L.str.64.344,@object   # @.str.64.344
.L.str.64.344:
	.asciz	"undo"
	.size	.L.str.64.344, 5

	.type	.L.str.65.345,@object   # @.str.65.345
.L.str.65.345:
	.asciz	"Move number : %d\n"
	.size	.L.str.65.345, 18

	.type	.L.str.66.346,@object   # @.str.66.346
.L.str.66.346:
	.asciz	"remove"
	.size	.L.str.66.346, 7

	.type	.L.str.67.347,@object   # @.str.67.347
.L.str.67.347:
	.asciz	"edit"
	.size	.L.str.67.347, 5

	.type	.L.str.68.348,@object   # @.str.68.348
.L.str.68.348:
	.asciz	"."
	.size	.L.str.68.348, 2

	.type	.L.str.69.349,@object   # @.str.69.349
.L.str.69.349:
	.asciz	"c"
	.size	.L.str.69.349, 2

	.type	.L.str.70.350,@object   # @.str.70.350
.L.str.70.350:
	.asciz	"#"
	.size	.L.str.70.350, 2

	.type	.L.str.71.351,@object   # @.str.71.351
.L.str.71.351:
	.asciz	"partner"
	.size	.L.str.71.351, 8

	.type	.L.str.72.352,@object   # @.str.72.352
.L.str.72.352:
	.asciz	"$partner"
	.size	.L.str.72.352, 9

	.type	.L.str.73.353,@object   # @.str.73.353
.L.str.73.353:
	.asciz	"ptell"
	.size	.L.str.73.353, 6

	.type	.L.str.74.354,@object   # @.str.74.354
.L.str.74.354:
	.asciz	"test"
	.size	.L.str.74.354, 5

	.type	.L.str.75.355,@object   # @.str.75.355
.L.str.75.355:
	.asciz	"st"
	.size	.L.str.75.355, 3

	.type	.L.str.76.356,@object   # @.str.76.356
.L.str.76.356:
	.asciz	"result"
	.size	.L.str.76.356, 7

	.type	.L.str.77.357,@object   # @.str.77.357
.L.str.77.357:
	.asciz	"prove"
	.size	.L.str.77.357, 6

	.type	.L.str.78.358,@object   # @.str.78.358
.L.str.78.358:
	.asciz	"\nMax time to search (s): "
	.size	.L.str.78.358, 26

	.type	.L.str.79.359,@object   # @.str.79.359
.L.str.79.359:
	.asciz	"ping"
	.size	.L.str.79.359, 5

	.type	.L.str.80.360,@object   # @.str.80.360
.L.str.80.360:
	.asciz	"pong %d\n"
	.size	.L.str.80.360, 9

	.type	.L.str.81.361,@object   # @.str.81.361
.L.str.81.361:
	.asciz	"fritz"
	.size	.L.str.81.361, 6

	.type	.L.str.82.362,@object   # @.str.82.362
.L.str.82.362:
	.asciz	"reset"
	.size	.L.str.82.362, 6

	.type	.L.str.83.363,@object   # @.str.83.363
.L.str.83.363:
	.asciz	"sd"
	.size	.L.str.83.363, 3

	.type	.L.str.84.364,@object   # @.str.84.364
.L.str.84.364:
	.asciz	"New max depth set to: %d\n"
	.size	.L.str.84.364, 26

	.type	.L.str.85,@object       # @.str.85
.L.str.85:
	.asciz	"auto"
	.size	.L.str.85, 5

	.type	.L.str.86,@object       # @.str.86
.L.str.86:
	.asciz	"protover"
	.size	.L.str.86, 9

	.type	.L.str.87,@object       # @.str.87
.L.str.87:
	.asciz	"feature ping=0 setboard=1 playother=0 san=0 usermove=0 time=1\n"
	.size	.L.str.87, 63

	.type	.L.str.88,@object       # @.str.88
.L.str.88:
	.asciz	"feature draw=0 sigint=0 sigterm=0 reuse=1 analyze=0\n"
	.size	.L.str.88, 53

	.type	.L.str.89,@object       # @.str.89
.L.str.89:
	.asciz	"feature myname=\"Sjeng SPEC 1.0\"\n"
	.size	.L.str.89, 33

	.type	.L.str.90,@object       # @.str.90
.L.str.90:
	.asciz	"feature variants=\"normal,bughouse,crazyhouse,suicide,giveaway,losers\"\n"
	.size	.L.str.90, 71

	.type	.L.str.91,@object       # @.str.91
.L.str.91:
	.asciz	"feature colors=1 ics=0 name=0 pause=0 done=1\n"
	.size	.L.str.91, 46

	.type	.L.str.92,@object       # @.str.92
.L.str.92:
	.asciz	"accepted"
	.size	.L.str.92, 9

	.type	.L.str.93,@object       # @.str.93
.L.str.93:
	.asciz	"rejected"
	.size	.L.str.93, 9

	.type	.L.str.94,@object       # @.str.94
.L.str.94:
	.asciz	"Interface does not support a required feature...expect trouble.\n"
	.size	.L.str.94, 65

	.type	.L.str.95,@object       # @.str.95
.L.str.95:
	.asciz	"help"
	.size	.L.str.95, 5

	.type	.L.str.96,@object       # @.str.96
.L.str.96:
	.asciz	"\n%s\n\n"
	.size	.L.str.96, 6

	.type	.L.str.97,@object       # @.str.97
.L.str.97:
	.asciz	"diagram/d:       toggle diagram display\n"
	.size	.L.str.97, 41

	.type	.L.str.98,@object       # @.str.98
.L.str.98:
	.asciz	"exit/quit:       terminate Sjeng\n"
	.size	.L.str.98, 34

	.type	.L.str.99,@object       # @.str.99
.L.str.99:
	.asciz	"go:              make Sjeng play the side to move\n"
	.size	.L.str.99, 51

	.type	.L.str.100,@object      # @.str.100
.L.str.100:
	.asciz	"new:             start a new game\n"
	.size	.L.str.100, 35

	.type	.L.str.101,@object      # @.str.101
.L.str.101:
	.asciz	"level <x>:       the xboard style command to set time\n"
	.size	.L.str.101, 55

	.type	.L.str.102,@object      # @.str.102
.L.str.102:
	.asciz	"  <x> should be in the form: <a> <b> <c> where:\n"
	.size	.L.str.102, 49

	.type	.L.str.103,@object      # @.str.103
.L.str.103:
	.asciz	"  a -> moves to TC (0 if using an ICS style TC)\n"
	.size	.L.str.103, 49

	.type	.L.str.104,@object      # @.str.104
.L.str.104:
	.asciz	"  b -> minutes per game\n"
	.size	.L.str.104, 25

	.type	.L.str.105,@object      # @.str.105
.L.str.105:
	.asciz	"  c -> increment in seconds\n"
	.size	.L.str.105, 29

	.type	.L.str.106,@object      # @.str.106
.L.str.106:
	.asciz	"nodes:           outputs the number of nodes searched\n"
	.size	.L.str.106, 55

	.type	.L.str.107,@object      # @.str.107
.L.str.107:
	.asciz	"perft <x>:       compute raw nodes to depth x\n"
	.size	.L.str.107, 47

	.type	.L.str.108,@object      # @.str.108
.L.str.108:
	.asciz	"post:            toggles thinking output\n"
	.size	.L.str.108, 42

	.type	.L.str.109,@object      # @.str.109
.L.str.109:
	.asciz	"xboard:          put Sjeng into xboard mode\n"
	.size	.L.str.109, 45

	.type	.L.str.110,@object      # @.str.110
.L.str.110:
	.asciz	"test:            run an EPD testsuite\n"
	.size	.L.str.110, 39

	.type	.L.str.111,@object      # @.str.111
.L.str.111:
	.asciz	"speed:           test movegen and evaluation speed\n"
	.size	.L.str.111, 52

	.type	.L.str.112.365,@object  # @.str.112.365
.L.str.112.365:
	.asciz	"proof:           try to prove or disprove the current pos\n"
	.size	.L.str.112.365, 59

	.type	.L.str.113,@object      # @.str.113
.L.str.113:
	.asciz	"sd <x>:          limit thinking to depth x\n"
	.size	.L.str.113, 44

	.type	.L.str.114,@object      # @.str.114
.L.str.114:
	.asciz	"st <x>:          limit thinking to x centiseconds\n"
	.size	.L.str.114, 51

	.type	.L.str.115,@object      # @.str.115
.L.str.115:
	.asciz	"setboard <FEN>:  set board to a specified FEN string\n"
	.size	.L.str.115, 54

	.type	.L.str.116,@object      # @.str.116
.L.str.116:
	.asciz	"undo:            back up a half move\n"
	.size	.L.str.116, 38

	.type	.L.str.117,@object      # @.str.117
.L.str.117:
	.asciz	"remove:          back up a full move\n"
	.size	.L.str.117, 38

	.type	.L.str.118,@object      # @.str.118
.L.str.118:
	.asciz	"force:           disable computer moving\n"
	.size	.L.str.118, 42

	.type	.L.str.119,@object      # @.str.119
.L.str.119:
	.asciz	"auto:            computer plays both sides\n"
	.size	.L.str.119, 44

	.type	DP_TTable,@object       # @DP_TTable
	.comm	DP_TTable,8,8
	.type	AS_TTable,@object       # @AS_TTable
	.comm	AS_TTable,8,8
	.type	QS_TTable,@object       # @QS_TTable
	.comm	QS_TTable,8,8
	.type	zobrist,@object         # @zobrist
	.comm	zobrist,8064,16
	.type	hash,@object            # @hash
	.comm	hash,4,4
	.type	TTStores,@object        # @TTStores
	.comm	TTStores,4,4
	.type	TTProbes,@object        # @TTProbes
	.comm	TTProbes,4,4
	.type	TTHits,@object          # @TTHits
	.comm	TTHits,4,4
	.type	.L.str.392,@object      # @.str.392
.L.str.392:
	.asciz	"Out of memory allocating hashtables.\n"
	.size	.L.str.392, 38

	.type	left,@object            # @left
	.data
	.globl	left
	.p2align	2
left:
	.long	4294967295              # 0xffffffff
	.size	left, 4

	.type	comp_to_san.type_to_char,@object # @comp_to_san.type_to_char
	.section	.rodata,"a",@progbits
	.p2align	4
comp_to_san.type_to_char:
	.long	70                      # 0x46
	.long	80                      # 0x50
	.long	80                      # 0x50
	.long	78                      # 0x4e
	.long	78                      # 0x4e
	.long	75                      # 0x4b
	.long	75                      # 0x4b
	.long	82                      # 0x52
	.long	82                      # 0x52
	.long	81                      # 0x51
	.long	81                      # 0x51
	.long	66                      # 0x42
	.long	66                      # 0x42
	.long	69                      # 0x45
	.size	comp_to_san.type_to_char, 56

	.type	.L.str.399,@object      # @.str.399
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.399:
	.asciz	"%c@%c%d"
	.size	.L.str.399, 8

	.type	.L.str.1.400,@object    # @.str.1.400
.L.str.1.400:
	.asciz	"%c%d"
	.size	.L.str.1.400, 5

	.type	.L.str.2.401,@object    # @.str.2.401
.L.str.2.401:
	.asciz	"%c%d=%c"
	.size	.L.str.2.401, 8

	.type	.L.str.3.402,@object    # @.str.3.402
.L.str.3.402:
	.asciz	"%cx%c%d"
	.size	.L.str.3.402, 8

	.type	.L.str.4.403,@object    # @.str.4.403
.L.str.4.403:
	.asciz	"%cx%c%d=%c"
	.size	.L.str.4.403, 11

	.type	.L.str.5.404,@object    # @.str.5.404
.L.str.5.404:
	.asciz	"O-O"
	.size	.L.str.5.404, 4

	.type	.L.str.6.405,@object    # @.str.6.405
.L.str.6.405:
	.asciz	"O-O-O"
	.size	.L.str.6.405, 6

	.type	.L.str.7.406,@object    # @.str.7.406
.L.str.7.406:
	.asciz	"%c%c%c%d"
	.size	.L.str.7.406, 9

	.type	.L.str.8.407,@object    # @.str.8.407
.L.str.8.407:
	.asciz	"%c%d%c%d"
	.size	.L.str.8.407, 9

	.type	.L.str.9.408,@object    # @.str.9.408
.L.str.9.408:
	.asciz	"%c%cx%c%d"
	.size	.L.str.9.408, 10

	.type	.L.str.10.409,@object   # @.str.10.409
.L.str.10.409:
	.asciz	"%c%dx%c%d"
	.size	.L.str.10.409, 10

	.type	.L.str.11.410,@object   # @.str.11.410
.L.str.11.410:
	.asciz	"%c%c%d"
	.size	.L.str.11.410, 7

	.type	.L.str.12.411,@object   # @.str.12.411
.L.str.12.411:
	.asciz	"illg"
	.size	.L.str.12.411, 5

	.type	.L.str.13.412,@object   # @.str.13.412
.L.str.13.412:
	.asciz	"#"
	.size	.L.str.13.412, 2

	.type	.L.str.14.413,@object   # @.str.14.413
.L.str.14.413:
	.asciz	"+"
	.size	.L.str.14.413, 2

	.type	comp_to_coord.type_to_char,@object # @comp_to_coord.type_to_char
	.section	.rodata,"a",@progbits
	.p2align	4
comp_to_coord.type_to_char:
	.long	70                      # 0x46
	.long	80                      # 0x50
	.long	112                     # 0x70
	.long	78                      # 0x4e
	.long	110                     # 0x6e
	.long	75                      # 0x4b
	.long	107                     # 0x6b
	.long	82                      # 0x52
	.long	114                     # 0x72
	.long	81                      # 0x51
	.long	113                     # 0x71
	.long	66                      # 0x42
	.long	98                      # 0x62
	.long	69                      # 0x45
	.size	comp_to_coord.type_to_char, 56

	.type	.L.str.15.416,@object   # @.str.15.416
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.15.416:
	.asciz	"%c%d%c%dn"
	.size	.L.str.15.416, 10

	.type	.L.str.16.417,@object   # @.str.16.417
.L.str.16.417:
	.asciz	"%c%d%c%dr"
	.size	.L.str.16.417, 10

	.type	.L.str.17.418,@object   # @.str.17.418
.L.str.17.418:
	.asciz	"%c%d%c%db"
	.size	.L.str.17.418, 10

	.type	.L.str.18.419,@object   # @.str.18.419
.L.str.18.419:
	.asciz	"%c%d%c%dk"
	.size	.L.str.18.419, 10

	.type	.L.str.19.420,@object   # @.str.19.420
.L.str.19.420:
	.asciz	"%c%d%c%dq"
	.size	.L.str.19.420, 10

	.type	.L.str.20.423,@object   # @.str.20.423
.L.str.20.423:
	.asciz	"+----+----+----+----+----+----+----+----+"
	.size	.L.str.20.423, 42

	.type	.Ldisplay_board.piece_rep,@object # @display_board.piece_rep
	.section	.rodata,"a",@progbits
	.p2align	4
.Ldisplay_board.piece_rep:
	.quad	.L.str.21.430
	.quad	.L.str.22.431
	.quad	.L.str.23.432
	.quad	.L.str.24.433
	.quad	.L.str.25.434
	.quad	.L.str.26.435
	.quad	.L.str.27.436
	.quad	.L.str.28.437
	.quad	.L.str.29.438
	.quad	.L.str.30.439
	.quad	.L.str.31.440
	.quad	.L.str.32.441
	.quad	.L.str.33.442
	.quad	.L.str.34.443
	.size	.Ldisplay_board.piece_rep, 112

	.type	.L.str.35.424,@object   # @.str.35.424
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.35.424:
	.asciz	"  %s\n"
	.size	.L.str.35.424, 6

	.type	.L.str.36.425,@object   # @.str.36.425
.L.str.36.425:
	.asciz	"%d |"
	.size	.L.str.36.425, 5

	.type	.L.str.37.426,@object   # @.str.37.426
.L.str.37.426:
	.asciz	" %s |"
	.size	.L.str.37.426, 6

	.type	.L.str.38.427,@object   # @.str.38.427
.L.str.38.427:
	.asciz	"\n  %s\n"
	.size	.L.str.38.427, 7

	.type	.L.str.39.428,@object   # @.str.39.428
.L.str.39.428:
	.asciz	"\n     a    b    c    d    e    f    g    h\n\n"
	.size	.L.str.39.428, 45

	.type	.L.str.40.429,@object   # @.str.40.429
.L.str.40.429:
	.asciz	"\n     h    g    f    e    d    c    b    a\n\n"
	.size	.L.str.40.429, 45

	.type	.L.str.21.430,@object   # @.str.21.430
.L.str.21.430:
	.asciz	"!!"
	.size	.L.str.21.430, 3

	.type	.L.str.22.431,@object   # @.str.22.431
.L.str.22.431:
	.asciz	" P"
	.size	.L.str.22.431, 3

	.type	.L.str.23.432,@object   # @.str.23.432
.L.str.23.432:
	.asciz	"*P"
	.size	.L.str.23.432, 3

	.type	.L.str.24.433,@object   # @.str.24.433
.L.str.24.433:
	.asciz	" N"
	.size	.L.str.24.433, 3

	.type	.L.str.25.434,@object   # @.str.25.434
.L.str.25.434:
	.asciz	"*N"
	.size	.L.str.25.434, 3

	.type	.L.str.26.435,@object   # @.str.26.435
.L.str.26.435:
	.asciz	" K"
	.size	.L.str.26.435, 3

	.type	.L.str.27.436,@object   # @.str.27.436
.L.str.27.436:
	.asciz	"*K"
	.size	.L.str.27.436, 3

	.type	.L.str.28.437,@object   # @.str.28.437
.L.str.28.437:
	.asciz	" R"
	.size	.L.str.28.437, 3

	.type	.L.str.29.438,@object   # @.str.29.438
.L.str.29.438:
	.asciz	"*R"
	.size	.L.str.29.438, 3

	.type	.L.str.30.439,@object   # @.str.30.439
.L.str.30.439:
	.asciz	" Q"
	.size	.L.str.30.439, 3

	.type	.L.str.31.440,@object   # @.str.31.440
.L.str.31.440:
	.asciz	"*Q"
	.size	.L.str.31.440, 3

	.type	.L.str.32.441,@object   # @.str.32.441
.L.str.32.441:
	.asciz	" B"
	.size	.L.str.32.441, 3

	.type	.L.str.33.442,@object   # @.str.33.442
.L.str.33.442:
	.asciz	"*B"
	.size	.L.str.33.442, 3

	.type	.L.str.34.443,@object   # @.str.34.443
.L.str.34.443:
	.asciz	"  "
	.size	.L.str.34.443, 3

	.type	.Linit_game.init_board,@object # @init_game.init_board
	.section	.rodata,"a",@progbits
	.p2align	4
.Linit_game.init_board:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	7                       # 0x7
	.long	3                       # 0x3
	.long	11                      # 0xb
	.long	9                       # 0x9
	.long	5                       # 0x5
	.long	11                      # 0xb
	.long	3                       # 0x3
	.long	7                       # 0x7
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	1                       # 0x1
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	2                       # 0x2
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	8                       # 0x8
	.long	4                       # 0x4
	.long	12                      # 0xc
	.long	10                      # 0xa
	.long	6                       # 0x6
	.long	12                      # 0xc
	.long	4                       # 0x4
	.long	8                       # 0x8
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	.Linit_game.init_board, 576

	.type	.L.str.41.450,@object   # @.str.41.450
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.41.450:
	.asciz	"\n\nPlease enter the desired depth for perft():\n"
	.size	.L.str.41.450, 47

	.type	.L.str.42.453,@object   # @.str.42.453
.L.str.42.453:
	.asciz	"\n\nRaw nodes for depth %d: %i\n\n"
	.size	.L.str.42.453, 31

	.type	.L.str.43.454,@object   # @.str.43.454
.L.str.43.454:
	.asciz	"\nPlease input a move/command:\n"
	.size	.L.str.43.454, 31

	.type	.L.str.44.455,@object   # @.str.44.455
.L.str.44.455:
	.asciz	"exit"
	.size	.L.str.44.455, 5

	.type	.L.str.45.456,@object   # @.str.45.456
.L.str.45.456:
	.asciz	"quit"
	.size	.L.str.45.456, 5

	.type	.L.str.46.459,@object   # @.str.46.459
.L.str.46.459:
	.asciz	"\nIllegal move/command!  Please input a new move/command:\n"
	.size	.L.str.46.459, 58

	.type	.L.str.47.460,@object   # @.str.47.460
.L.str.47.460:
	.asciz	"<"
	.size	.L.str.47.460, 2

	.type	.L.str.48.461,@object   # @.str.48.461
.L.str.48.461:
	.asciz	"> "
	.size	.L.str.48.461, 3

	.type	.L.str.49.464,@object   # @.str.49.464
.L.str.49.464:
	.asciz	" "
	.size	.L.str.49.464, 2

	.type	.L.str.50.471,@object   # @.str.50.471
.L.str.50.471:
	.asciz	"%2i %7i %5i %8i  "
	.size	.L.str.50.471, 18

	.type	.L.str.51.472,@object   # @.str.51.472
.L.str.51.472:
	.asciz	"%2i %c%1i.%02i %9i "
	.size	.L.str.51.472, 20

	.type	.L.str.52.473,@object   # @.str.52.473
.L.str.52.473:
	.asciz	"%s "
	.size	.L.str.52.473, 4

	.type	.L.str.53.474,@object   # @.str.53.474
.L.str.53.474:
	.asciz	"%s"
	.size	.L.str.53.474, 3

	.type	.L.str.54.475,@object   # @.str.54.475
.L.str.54.475:
	.asciz	"\n"
	.size	.L.str.54.475, 2

	.type	.L.str.55.478,@object   # @.str.55.478
.L.str.55.478:
	.asciz	"%s !"
	.size	.L.str.55.478, 5

	.type	.L.str.56.481,@object   # @.str.56.481
.L.str.56.481:
	.asciz	"%s !!"
	.size	.L.str.56.481, 6

	.type	.L.str.57.484,@object   # @.str.57.484
.L.str.57.484:
	.asciz	"%s ??"
	.size	.L.str.57.484, 6

	.type	.L.str.58.485,@object   # @.str.58.485
.L.str.58.485:
	.asciz	"stat01: %i %i %i %i %i\n"
	.size	.L.str.58.485, 24

	.type	.L.str.59.486,@object   # @.str.59.486
.L.str.59.486:
	.asciz	"stat01: %i %i %i %i %i %s\n"
	.size	.L.str.59.486, 27

	.type	.L.str.60.489,@object   # @.str.60.489
.L.str.60.489:
	.asciz	"Piece->square->piece inconsistency\n"
	.size	.L.str.60.489, 36

	.type	.L.str.61.490,@object   # @.str.61.490
.L.str.61.490:
	.asciz	"Board/Piece->square inconsistency\n"
	.size	.L.str.61.490, 35

	.type	.L.str.62.491,@object   # @.str.62.491
.L.str.62.491:
	.asciz	"Zero-ed piece inconsistency\n"
	.size	.L.str.62.491, 29

	.type	.L.str.63.492,@object   # @.str.63.492
.L.str.63.492:
	.asciz	"Empty square has piece pointer\n"
	.size	.L.str.63.492, 32

	.type	.L.str.64.493,@object   # @.str.64.493
.L.str.64.493:
	.asciz	"Filled square %d has no piece pointer\n"
	.size	.L.str.64.493, 39

	.type	.L.str.65.494,@object   # @.str.65.494
.L.str.65.494:
	.asciz	"Square->piece->square inconsistency\n"
	.size	.L.str.65.494, 37

	.type	.L.str.66.497,@object   # @.str.66.497
.L.str.66.497:
	.asciz	"\nSjeng version SPEC 1.0, Copyright (C) 2000-2005 Gian-Carlo Pascutto\n\n"
	.size	.L.str.66.497, 71

	.type	.L.str.67.500,@object   # @.str.67.500
.L.str.67.500:
	.asciz	"\nPlease enter the desired depth:\n"
	.size	.L.str.67.500, 34

	.type	.L.str.68.501,@object   # @.str.68.501
.L.str.68.501:
	.asciz	"\nDo you want tree () output?  (y/n)\n"
	.size	.L.str.68.501, 37

	.type	.L.str.69.502,@object   # @.str.69.502
.L.str.69.502:
	.asciz	"\nPlease enter the name of the output file for tree ():\n"
	.size	.L.str.69.502, 56

	.type	.L.str.70.503,@object   # @.str.70.503
.L.str.70.503:
	.asciz	"w"
	.size	.L.str.70.503, 2

	.type	.L.str.71.504,@object   # @.str.71.504
.L.str.71.504:
	.asciz	"Couldn't open file %s\n"
	.size	.L.str.71.504, 23

	.type	.L.str.72.505,@object   # @.str.72.505
.L.str.72.505:
	.asciz	"\nDo you want to output diagrams? (y/n)\n"
	.size	.L.str.72.505, 40

	.type	.L.str.73.506,@object   # @.str.73.506
.L.str.73.506:
	.asciz	"\n\n%s\nRaw nodes for depth %d: %i\n%s\n\n"
	.size	.L.str.73.506, 37

	.type	.Lreset_board.init_board,@object # @reset_board.init_board
	.section	.rodata,"a",@progbits
	.p2align	4
.Lreset_board.init_board:
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	13                      # 0xd
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.long	0                       # 0x0
	.size	.Lreset_board.init_board, 576

	.type	state,@object           # @state
	.local	state
	.comm	state,2500,16
	.type	next,@object            # @next
	.local	next
	.comm	next,8,8
	.type	BasicBlockSignatureTracker,@object # @BasicBlockSignatureTracker
	.comm	BasicBlockSignatureTracker,2,4
	.type	RunTimeSignatureAdjuster,@object # @RunTimeSignatureAdjuster
	.comm	RunTimeSignatureAdjuster,2,4

	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.ident	"clang version 6.0.0-1ubuntu2 (tags/RELEASE_600/final)"
	.section	".note.GNU-stack","",@progbits
